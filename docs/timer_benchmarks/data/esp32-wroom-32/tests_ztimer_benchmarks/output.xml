<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201110 08:37:11.848" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201110 08:37:12.427" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201110 08:37:12.435" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201110 08:37:13.435" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201110 08:37:12.426" endtime="20201110 08:37:13.436"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201110 08:37:14.439" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20201110 08:37:13.437" endtime="20201110 08:37:14.440"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.425" endtime="20201110 08:37:14.441"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:14.445" endtime="20201110 08:37:14.715"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.443" endtime="20201110 08:37:14.715"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.728" endtime="20201110 08:37:14.748"></status>
</kw>
<msg timestamp="20201110 08:37:14.748" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:14.726" endtime="20201110 08:37:14.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:14.751" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:14.749" endtime="20201110 08:37:14.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:37:14.754" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:37:14.752" endtime="20201110 08:37:14.755"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:14.724" endtime="20201110 08:37:14.755"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:14.722" endtime="20201110 08:37:14.756"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.720" endtime="20201110 08:37:14.756"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:37:14.761" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:37:14.760" endtime="20201110 08:37:14.761"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.757" endtime="20201110 08:37:14.761"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.719" endtime="20201110 08:37:14.762"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.719" endtime="20201110 08:37:14.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.762" endtime="20201110 08:37:14.764"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.717" endtime="20201110 08:37:14.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.765" endtime="20201110 08:37:14.767"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.716" endtime="20201110 08:37:14.767"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.423" endtime="20201110 08:37:14.768"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:14.774" endtime="20201110 08:37:14.793"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.772" endtime="20201110 08:37:14.794"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.808" endtime="20201110 08:37:14.824"></status>
</kw>
<msg timestamp="20201110 08:37:14.824" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:14.806" endtime="20201110 08:37:14.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:14.827" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:14.825" endtime="20201110 08:37:14.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:37:14.830" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:37:14.828" endtime="20201110 08:37:14.830"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:14.803" endtime="20201110 08:37:14.831"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:14.801" endtime="20201110 08:37:14.832"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.799" endtime="20201110 08:37:14.832"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:37:14.836" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:37:14.835" endtime="20201110 08:37:14.836"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.833" endtime="20201110 08:37:14.836"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.798" endtime="20201110 08:37:14.836"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.797" endtime="20201110 08:37:14.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.837" endtime="20201110 08:37:14.839"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.796" endtime="20201110 08:37:14.839"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.794" endtime="20201110 08:37:14.840"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.771" endtime="20201110 08:37:14.840"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.848" endtime="20201110 08:37:14.860"></status>
</kw>
<msg timestamp="20201110 08:37:14.861" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:14.846" endtime="20201110 08:37:14.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:14.863" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:14.862" endtime="20201110 08:37:14.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.864" endtime="20201110 08:37:14.866"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.843" endtime="20201110 08:37:14.866"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.841" endtime="20201110 08:37:14.867"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:14.871" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201110 08:37:14.870" endtime="20201110 08:37:14.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:14.873" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201110 08:37:14.872" endtime="20201110 08:37:14.873"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.867" endtime="20201110 08:37:14.874"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201110 08:37:14.768" endtime="20201110 08:37:14.874" critical="yes"></status>
</test>
<status status="PASS" starttime="20201110 08:37:11.960" endtime="20201110 08:37:14.876"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201110 08:37:14.929" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201110 08:37:14.936" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201110 08:37:15.994" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201110 08:37:14.927" endtime="20201110 08:37:15.994"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201110 08:37:16.997" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20201110 08:37:15.995" endtime="20201110 08:37:16.998"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.926" endtime="20201110 08:37:16.998"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:17.000" endtime="20201110 08:37:17.225"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.999" endtime="20201110 08:37:17.226"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.238" endtime="20201110 08:37:17.258"></status>
</kw>
<msg timestamp="20201110 08:37:17.259" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:17.236" endtime="20201110 08:37:17.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.265" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:17.262" endtime="20201110 08:37:17.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.272" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:37:17.268" endtime="20201110 08:37:17.273"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:17.234" endtime="20201110 08:37:17.274"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:17.232" endtime="20201110 08:37:17.275"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.230" endtime="20201110 08:37:17.276"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:37:17.284" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:37:17.283" endtime="20201110 08:37:17.285"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.278" endtime="20201110 08:37:17.285"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.230" endtime="20201110 08:37:17.286"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.229" endtime="20201110 08:37:17.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.288" endtime="20201110 08:37:17.291"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.228" endtime="20201110 08:37:17.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.294" endtime="20201110 08:37:17.297"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.226" endtime="20201110 08:37:17.298"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.925" endtime="20201110 08:37:17.299"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:17.313" endtime="20201110 08:37:17.335"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.308" endtime="20201110 08:37:17.336"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.364" endtime="20201110 08:37:17.383"></status>
</kw>
<msg timestamp="20201110 08:37:17.384" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:17.362" endtime="20201110 08:37:17.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.389" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:17.388" endtime="20201110 08:37:17.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.396" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:37:17.392" endtime="20201110 08:37:17.397"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:17.356" endtime="20201110 08:37:17.398"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:17.350" endtime="20201110 08:37:17.401"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.348" endtime="20201110 08:37:17.402"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:37:17.406" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:37:17.405" endtime="20201110 08:37:17.408"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.403" endtime="20201110 08:37:17.408"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.346" endtime="20201110 08:37:17.408"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.345" endtime="20201110 08:37:17.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.410" endtime="20201110 08:37:17.413"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.342" endtime="20201110 08:37:17.413"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.338" endtime="20201110 08:37:17.414"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.305" endtime="20201110 08:37:17.414"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201110 08:37:17.416" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.425" endtime="20201110 08:37:17.441"></status>
</kw>
<msg timestamp="20201110 08:37:17.442" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:17.424" endtime="20201110 08:37:17.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.444" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:17.443" endtime="20201110 08:37:17.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.445" endtime="20201110 08:37:17.447"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.421" endtime="20201110 08:37:17.448"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.418" endtime="20201110 08:37:17.448"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.455" endtime="20201110 08:37:17.733"></status>
</kw>
<msg timestamp="20201110 08:37:17.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.101745833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.101751264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:17.453" endtime="20201110 08:37:17.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.101745833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.101751264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:17.736" endtime="20201110 08:37:17.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.742" endtime="20201110 08:37:17.744"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.450" endtime="20201110 08:37:17.744"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.449" endtime="20201110 08:37:17.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.749" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:17.748" endtime="20201110 08:37:17.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.753" level="INFO">VALUE: [{'time': 0.101745833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.101751264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.431000000000186e-06, 'source_diff': 5.431000000000186e-06}, {'time': 0.101755222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.9580000000122295e-06, 'source_diff': 3.9580000000122295e-06}, {'time': 0.101759264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.041999999995771e-06, 'source_diff': 4.041999999995771e-06}, {'time': 0.101762833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5689999999949373e-06, 'source_diff': 3.5689999999949373e-06}, {'time': 0.101765958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1250000000065947e-06, 'source_diff': 3.1250000000065947e-06}, {'time': 0.101771944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.101777167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.222999999998645e-06, 'source_diff': 5.222999999998645e-06}, {'time': 0.101779597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4299999999977118e-06, 'source_diff': 2.4299999999977118e-06}, {'time': 0.101785819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.101790528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.709000000005514e-06, 'source_diff': 4.709000000005514e-06}, {'time': 0.101795569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.040999999997298e-06, 'source_diff': 5.040999999997298e-06}, {'time': 0.1018015, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.931000000000686e-06, 'source_diff': 5.931000000000686e-06}, {'time': 0.101804667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1669999999983656e-06, 'source_diff': 3.1669999999983656e-06}, {'time': 0.1018085, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.832999999994757e-06, 'source_diff': 3.832999999994757e-06}, {'time': 0.101814528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.02800000000514e-06, 'source_diff': 6.02800000000514e-06}, {'time': 0.101820222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.694000000000532e-06, 'source_diff': 5.694000000000532e-06}, {'time': 0.101822806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5839999999999197e-06, 'source_diff': 2.5839999999999197e-06}, {'time': 0.101826125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.319000000001626e-06, 'source_diff': 3.319000000001626e-06}, {'time': 0.101832069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.943999999993843e-06, 'source_diff': 5.943999999993843e-06}, {'time': 0.101836264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1949999999985055e-06, 'source_diff': 4.1949999999985055e-06}, {'time': 0.101841028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.76400000000432e-06, 'source_diff': 4.76400000000432e-06}, {'time': 0.101843417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3890000000054146e-06, 'source_diff': 2.3890000000054146e-06}, {'time': 0.101848458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.040999999997298e-06, 'source_diff': 5.040999999997298e-06}, {'time': 0.10185325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.79200000000346e-06, 'source_diff': 4.79200000000346e-06}, {'time': 0.101855972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7219999999966715e-06, 'source_diff': 2.7219999999966715e-06}, {'time': 0.101858389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4169999999906766e-06, 'source_diff': 2.4169999999906766e-06}, {'time': 0.101862417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.02800000000314e-06, 'source_diff': 4.02800000000314e-06}, {'time': 0.101866653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.2360000000046805e-06, 'source_diff': 4.2360000000046805e-06}, {'time': 0.101872931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2779999999984515e-06, 'source_diff': 6.2779999999984515e-06}, {'time': 0.101878167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2360000000056806e-06, 'source_diff': 5.2360000000056806e-06}, {'time': 0.101881042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.874999999999406e-06, 'source_diff': 2.874999999999406e-06}, {'time': 0.101886861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.818999999990249e-06, 'source_diff': 5.818999999990249e-06}, {'time': 0.101889333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4720000000033604e-06, 'source_diff': 2.4720000000033604e-06}, {'time': 0.101895194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999995897e-06, 'source_diff': 5.860999999995897e-06}, {'time': 0.101900542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.34800000000224e-06, 'source_diff': 5.34800000000224e-06}, {'time': 0.101906583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.040999999998298e-06, 'source_diff': 6.040999999998298e-06}, {'time': 0.101910111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.52800000000264e-06, 'source_diff': 3.52800000000264e-06}, {'time': 0.101915917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.805999999997091e-06, 'source_diff': 5.805999999997091e-06}, {'time': 0.101918944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0270000000026664e-06, 'source_diff': 3.0270000000026664e-06}, {'time': 0.101924292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.34800000000224e-06, 'source_diff': 5.34800000000224e-06}, {'time': 0.101928208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.916000000006581e-06, 'source_diff': 3.916000000006581e-06}, {'time': 0.101931681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4729999999899563e-06, 'source_diff': 3.4729999999899563e-06}, {'time': 0.101936597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.916000000007581e-06, 'source_diff': 4.916000000007581e-06}, {'time': 0.101942694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.096999999996577e-06, 'source_diff': 6.096999999996577e-06}, {'time': 0.101948417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7229999999991454e-06, 'source_diff': 5.7229999999991454e-06}, {'time': 0.101953153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7360000000051805e-06, 'source_diff': 4.7360000000051805e-06}, {'time': 0.101957014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.860999999993897e-06, 'source_diff': 3.860999999993897e-06}, {'time': 0.101961028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.013999999996631e-06, 'source_diff': 4.013999999996631e-06}, {'time': 0.101965319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2910000000034865e-06, 'source_diff': 4.2910000000034865e-06}]</msg>
<status status="PASS" starttime="20201110 08:37:17.750" endtime="20201110 08:37:17.754"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.745" endtime="20201110 08:37:17.754"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:17.769" level="INFO">${debug-compressed} = {'diff': [0, 5.431000000000186e-06, 3.9580000000122295e-06, 4.041999999995771e-06, 3.5689999999949373e-06, 3.1250000000065947e-06, 5.985999999999492e-06, 5.222999999998645e-06, 2.4299999999977118e-06,...</msg>
<status status="PASS" starttime="20201110 08:37:17.755" endtime="20201110 08:37:17.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.773" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:17.772" endtime="20201110 08:37:17.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.776" level="INFO">VALUE: {'diff': [0, 5.431000000000186e-06, 3.9580000000122295e-06, 4.041999999995771e-06, 3.5689999999949373e-06, 3.1250000000065947e-06, 5.985999999999492e-06, 5.222999999998645e-06, 2.4299999999977118e-06, 6.222000000000172e-06, 4.709000000005514e-06, 5.040999999997298e-06, 5.931000000000686e-06, 3.1669999999983656e-06, 3.832999999994757e-06, 6.02800000000514e-06, 5.694000000000532e-06, 2.5839999999999197e-06, 3.319000000001626e-06, 5.943999999993843e-06, 4.1949999999985055e-06, 4.76400000000432e-06, 2.3890000000054146e-06, 5.040999999997298e-06, 4.79200000000346e-06, 2.7219999999966715e-06, 2.4169999999906766e-06, 4.02800000000314e-06, 4.2360000000046805e-06, 6.2779999999984515e-06, 5.2360000000056806e-06, 2.874999999999406e-06, 5.818999999990249e-06, 2.4720000000033604e-06, 5.860999999995897e-06, 5.34800000000224e-06, 6.040999999998298e-06, 3.52800000000264e-06, 5.805999999997091e-06, 3.0270000000026664e-06, 5.34800000000224e-06, 3.916000000006581e-06, 3.4729999999899563e-06, 4.916000000007581e-06, 6.096999999996577e-06, 5.7229999999991454e-06, 4.7360000000051805e-06, 3.860999999993897e-06, 4.013999999996631e-06, 4.2910000000034865e-06], 'time': [0.101745833, 0.101751264, 0.101755222, 0.101759264, 0.101762833, 0.101765958, 0.101771944, 0.101777167, 0.101779597, 0.101785819, 0.101790528, 0.101795569, 0.1018015, 0.101804667, 0.1018085, 0.101814528, 0.101820222, 0.101822806, 0.101826125, 0.101832069, 0.101836264, 0.101841028, 0.101843417, 0.101848458, 0.10185325, 0.101855972, 0.101858389, 0.101862417, 0.101866653, 0.101872931, 0.101878167, 0.101881042, 0.101886861, 0.101889333, 0.101895194, 0.101900542, 0.101906583, 0.101910111, 0.101915917, 0.101918944, 0.101924292, 0.101928208, 0.101931681, 0.101936597, 0.101942694, 0.101948417, 0.101953153, 0.101957014, 0.101961028, 0.101965319], 'eventsourcesource_diff': [0, 5.431000000000186e-06, 3.9580000000122295e-06, 4.041999999995771e-06, 3.5689999999949373e-06, 3.1250000000065947e-06, 5.985999999999492e-06, 5.222999999998645e-06, 2.4299999999977118e-06, 6.222000000000172e-06, 4.709000000005514e-06, 5.040999999997298e-06, 5.931000000000686e-06, 3.1669999999983656e-06, 3.832999999994757e-06, 6.02800000000514e-06, 5.694000000000532e-06, 2.5839999999999197e-06, 3.319000000001626e-06, 5.943999999993843e-06, 4.1949999999985055e-06, 4.76400000000432e-06, 2.3890000000054146e-06, 5.040999999997298e-06, 4.79200000000346e-06, 2.7219999999966715e-06, 2.4169999999906766e-06, 4.02800000000314e-06, 4.2360000000046805e-06, 6.2779999999984515e-06, 5.2360000000056806e-06, 2.874999999999406e-06, 5.818999999990249e-06, 2.4720000000033604e-06, 5.860999999995897e-06, 5.34800000000224e-06, 6.040999999998298e-06, 3.52800000000264e-06, 5.805999999997091e-06, 3.0270000000026664e-06, 5.34800000000224e-06, 3.916000000006581e-06, 3.4729999999899563e-06, 4.916000000007581e-06, 6.096999999996577e-06, 5.7229999999991454e-06, 4.7360000000051805e-06, 3.860999999993897e-06, 4.013999999996631e-06, 4.2910000000034865e-06]}</msg>
<status status="PASS" starttime="20201110 08:37:17.774" endtime="20201110 08:37:17.777"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.770" endtime="20201110 08:37:17.777"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:17.781" level="INFO">${RESULT} = [{'time': 0.101751264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.431000000000186e-06, 'source_diff': 5.431000000000186e-06}, {'time': 0.101759264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:17.778" endtime="20201110 08:37:17.781"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:17.789" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.431000000000186e-06, 4.041999999995771e-06, 3.1250000000065947e-06, 5.222999999998645e-06, 6.222000000000172e-06, 5.040999999997298e-06, 3.1669999999983656e-06, 6.02800000000514e-06, 2.583...</msg>
<status status="PASS" starttime="20201110 08:37:17.782" endtime="20201110 08:37:17.790"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.794" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:17.793" endtime="20201110 08:37:17.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.796" level="INFO">VALUE: [5.431000000000186e-06, 4.041999999995771e-06, 3.1250000000065947e-06, 5.222999999998645e-06, 6.222000000000172e-06, 5.040999999997298e-06, 3.1669999999983656e-06, 6.02800000000514e-06, 2.5839999999999197e-06, 5.943999999993843e-06, 4.76400000000432e-06, 5.040999999997298e-06, 2.7219999999966715e-06, 4.02800000000314e-06, 6.2779999999984515e-06, 2.874999999999406e-06, 2.4720000000033604e-06, 5.34800000000224e-06, 3.52800000000264e-06, 3.0270000000026664e-06, 3.916000000006581e-06, 4.916000000007581e-06, 5.7229999999991454e-06, 3.860999999993897e-06, 4.2910000000034865e-06]</msg>
<status status="PASS" starttime="20201110 08:37:17.795" endtime="20201110 08:37:17.797"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.790" endtime="20201110 08:37:17.797"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.799" endtime="20201110 08:37:17.801"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:17.803" endtime="20201110 08:37:17.822"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.802" endtime="20201110 08:37:17.823"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.798" endtime="20201110 08:37:17.824"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.416" endtime="20201110 08:37:17.824"></status>
</kw>
<msg timestamp="20201110 08:37:17.824" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.833" endtime="20201110 08:37:17.846"></status>
</kw>
<msg timestamp="20201110 08:37:17.847" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:17.831" endtime="20201110 08:37:17.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.849" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:17.848" endtime="20201110 08:37:17.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.850" endtime="20201110 08:37:17.852"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.828" endtime="20201110 08:37:17.853"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.826" endtime="20201110 08:37:17.853"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.859" endtime="20201110 08:37:18.139"></status>
</kw>
<msg timestamp="20201110 08:37:18.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018503875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018509083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:17.858" endtime="20201110 08:37:18.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018503875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018509083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:18.145" endtime="20201110 08:37:18.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:18.158" endtime="20201110 08:37:18.161"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.855" endtime="20201110 08:37:18.163"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.854" endtime="20201110 08:37:18.164"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.172" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:18.170" endtime="20201110 08:37:18.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.176" level="INFO">VALUE: [{'time': 0.018503875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018509083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.207999999999602e-06, 'source_diff': 5.207999999999602e-06}, {'time': 0.018514875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.792000000000991e-06, 'source_diff': 5.792000000000991e-06}, {'time': 0.018517361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.485999999999461e-06, 'source_diff': 2.485999999999461e-06}, {'time': 0.018522833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.018525986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.153000000002265e-06, 'source_diff': 3.153000000002265e-06}, {'time': 0.018528403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4169999999976155e-06, 'source_diff': 2.4169999999976155e-06}, {'time': 0.018532444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.040999999999767e-06, 'source_diff': 4.040999999999767e-06}, {'time': 0.018535111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.667000000001335e-06, 'source_diff': 2.667000000001335e-06}, {'time': 0.018538764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6529999999992957e-06, 'source_diff': 3.6529999999992957e-06}, {'time': 0.018544986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.018547972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.985999999999961e-06, 'source_diff': 2.985999999999961e-06}, {'time': 0.018552597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.625000000001156e-06, 'source_diff': 4.625000000001156e-06}, {'time': 0.018557847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.2499999999983116e-06, 'source_diff': 5.2499999999983116e-06}, {'time': 0.018563708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.861000000002836e-06, 'source_diff': 5.861000000002836e-06}, {'time': 0.018569181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.472999999998895e-06, 'source_diff': 5.472999999998895e-06}, {'time': 0.018572278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.097000000000516e-06, 'source_diff': 3.097000000000516e-06}, {'time': 0.0185775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.221999999999172e-06, 'source_diff': 5.221999999999172e-06}, {'time': 0.018581236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.736000000000711e-06, 'source_diff': 3.736000000000711e-06}, {'time': 0.018584458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.222000000000641e-06, 'source_diff': 3.222000000000641e-06}, {'time': 0.018589069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.610999999998117e-06, 'source_diff': 4.610999999998117e-06}, {'time': 0.0185945, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.431000000000186e-06, 'source_diff': 5.431000000000186e-06}, {'time': 0.018597125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6249999999991558e-06, 'source_diff': 2.6249999999991558e-06}, {'time': 0.018602861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.735999999999242e-06, 'source_diff': 5.735999999999242e-06}, {'time': 0.018605347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4860000000029303e-06, 'source_diff': 2.4860000000029303e-06}, {'time': 0.018611653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.305999999997591e-06, 'source_diff': 6.305999999997591e-06}, {'time': 0.018616903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.250000000001781e-06, 'source_diff': 5.250000000001781e-06}, {'time': 0.018619389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.485999999999461e-06, 'source_diff': 2.485999999999461e-06}, {'time': 0.018622111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.722000000000141e-06, 'source_diff': 2.722000000000141e-06}, {'time': 0.018628333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.018630931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5979999999994896e-06, 'source_diff': 2.5979999999994896e-06}, {'time': 0.018634528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.597000000001016e-06, 'source_diff': 3.597000000001016e-06}, {'time': 0.018640153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.624999999998687e-06, 'source_diff': 5.624999999998687e-06}, {'time': 0.018644667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.514000000000601e-06, 'source_diff': 4.514000000000601e-06}, {'time': 0.018647028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.360999999999336e-06, 'source_diff': 2.360999999999336e-06}, {'time': 0.0186525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.018655347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.847000000000266e-06, 'source_diff': 2.847000000000266e-06}, {'time': 0.018660458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.111000000002086e-06, 'source_diff': 5.111000000002086e-06}, {'time': 0.018666681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2229999999996455e-06, 'source_diff': 6.2229999999996455e-06}, {'time': 0.018672708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.026999999998728e-06, 'source_diff': 6.026999999998728e-06}, {'time': 0.018677625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.917000000000116e-06, 'source_diff': 4.917000000000116e-06}, {'time': 0.018681542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.916999999999116e-06, 'source_diff': 3.916999999999116e-06}, {'time': 0.018684222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6800000000014312e-06, 'source_diff': 2.6800000000014312e-06}, {'time': 0.018689236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.014000000001101e-06, 'source_diff': 5.014000000001101e-06}, {'time': 0.018694083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.846999999998797e-06, 'source_diff': 4.846999999998797e-06}, {'time': 0.018699375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.292000000000491e-06, 'source_diff': 5.292000000000491e-06}, {'time': 0.018702111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.735999999999711e-06, 'source_diff': 2.735999999999711e-06}, {'time': 0.018708139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0279999999982015e-06, 'source_diff': 6.0279999999982015e-06}, {'time': 0.018710931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.79200000000146e-06, 'source_diff': 2.79200000000146e-06}, {'time': 0.018716917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}]</msg>
<status status="PASS" starttime="20201110 08:37:18.173" endtime="20201110 08:37:18.177"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.165" endtime="20201110 08:37:18.177"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:18.191" level="INFO">${debug-compressed} = {'diff': [0, 5.207999999999602e-06, 5.792000000000991e-06, 2.485999999999461e-06, 5.471999999999422e-06, 3.153000000002265e-06, 2.4169999999976155e-06, 4.040999999999767e-06, 2.667000000001335e-06, 3....</msg>
<status status="PASS" starttime="20201110 08:37:18.178" endtime="20201110 08:37:18.192"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.196" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:18.195" endtime="20201110 08:37:18.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.199" level="INFO">VALUE: {'diff': [0, 5.207999999999602e-06, 5.792000000000991e-06, 2.485999999999461e-06, 5.471999999999422e-06, 3.153000000002265e-06, 2.4169999999976155e-06, 4.040999999999767e-06, 2.667000000001335e-06, 3.6529999999992957e-06, 6.222000000000172e-06, 2.985999999999961e-06, 4.625000000001156e-06, 5.2499999999983116e-06, 5.861000000002836e-06, 5.472999999998895e-06, 3.097000000000516e-06, 5.221999999999172e-06, 3.736000000000711e-06, 3.222000000000641e-06, 4.610999999998117e-06, 5.431000000000186e-06, 2.6249999999991558e-06, 5.735999999999242e-06, 2.4860000000029303e-06, 6.305999999997591e-06, 5.250000000001781e-06, 2.485999999999461e-06, 2.722000000000141e-06, 6.222000000000172e-06, 2.5979999999994896e-06, 3.597000000001016e-06, 5.624999999998687e-06, 4.514000000000601e-06, 2.360999999999336e-06, 5.471999999999422e-06, 2.847000000000266e-06, 5.111000000002086e-06, 6.2229999999996455e-06, 6.026999999998728e-06, 4.917000000000116e-06, 3.916999999999116e-06, 2.6800000000014312e-06, 5.014000000001101e-06, 4.846999999998797e-06, 5.292000000000491e-06, 2.735999999999711e-06, 6.0279999999982015e-06, 2.79200000000146e-06, 5.985999999999492e-06], 'time': [0.018503875, 0.018509083, 0.018514875, 0.018517361, 0.018522833, 0.018525986, 0.018528403, 0.018532444, 0.018535111, 0.018538764, 0.018544986, 0.018547972, 0.018552597, 0.018557847, 0.018563708, 0.018569181, 0.018572278, 0.0185775, 0.018581236, 0.018584458, 0.018589069, 0.0185945, 0.018597125, 0.018602861, 0.018605347, 0.018611653, 0.018616903, 0.018619389, 0.018622111, 0.018628333, 0.018630931, 0.018634528, 0.018640153, 0.018644667, 0.018647028, 0.0186525, 0.018655347, 0.018660458, 0.018666681, 0.018672708, 0.018677625, 0.018681542, 0.018684222, 0.018689236, 0.018694083, 0.018699375, 0.018702111, 0.018708139, 0.018710931, 0.018716917], 'eventsourcesource_diff': [0, 5.207999999999602e-06, 5.792000000000991e-06, 2.485999999999461e-06, 5.471999999999422e-06, 3.153000000002265e-06, 2.4169999999976155e-06, 4.040999999999767e-06, 2.667000000001335e-06, 3.6529999999992957e-06, 6.222000000000172e-06, 2.985999999999961e-06, 4.625000000001156e-06, 5.2499999999983116e-06, 5.861000000002836e-06, 5.472999999998895e-06, 3.097000000000516e-06, 5.221999999999172e-06, 3.736000000000711e-06, 3.222000000000641e-06, 4.610999999998117e-06, 5.431000000000186e-06, 2.6249999999991558e-06, 5.735999999999242e-06, 2.4860000000029303e-06, 6.305999999997591e-06, 5.250000000001781e-06, 2.485999999999461e-06, 2.722000000000141e-06, 6.222000000000172e-06, 2.5979999999994896e-06, 3.597000000001016e-06, 5.624999999998687e-06, 4.514000000000601e-06, 2.360999999999336e-06, 5.471999999999422e-06, 2.847000000000266e-06, 5.111000000002086e-06, 6.2229999999996455e-06, 6.026999999998728e-06, 4.917000000000116e-06, 3.916999999999116e-06, 2.6800000000014312e-06, 5.014000000001101e-06, 4.846999999998797e-06, 5.292000000000491e-06, 2.735999999999711e-06, 6.0279999999982015e-06, 2.79200000000146e-06, 5.985999999999492e-06]}</msg>
<status status="PASS" starttime="20201110 08:37:18.197" endtime="20201110 08:37:18.199"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.193" endtime="20201110 08:37:18.200"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:18.203" level="INFO">${RESULT} = [{'time': 0.018509083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.207999999999602e-06, 'source_diff': 5.207999999999602e-06}, {'time': 0.018517361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:18.201" endtime="20201110 08:37:18.203"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:18.212" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.207999999999602e-06, 2.485999999999461e-06, 3.153000000002265e-06, 4.040999999999767e-06, 3.6529999999992957e-06, 2.985999999999961e-06, 5.2499999999983116e-06, 5.472999999998895e-06, 5.22...</msg>
<status status="PASS" starttime="20201110 08:37:18.204" endtime="20201110 08:37:18.212"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.216" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:18.215" endtime="20201110 08:37:18.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.218" level="INFO">VALUE: [5.207999999999602e-06, 2.485999999999461e-06, 3.153000000002265e-06, 4.040999999999767e-06, 3.6529999999992957e-06, 2.985999999999961e-06, 5.2499999999983116e-06, 5.472999999998895e-06, 5.221999999999172e-06, 3.222000000000641e-06, 5.431000000000186e-06, 5.735999999999242e-06, 6.305999999997591e-06, 2.485999999999461e-06, 6.222000000000172e-06, 3.597000000001016e-06, 4.514000000000601e-06, 5.471999999999422e-06, 5.111000000002086e-06, 6.026999999998728e-06, 3.916999999999116e-06, 5.014000000001101e-06, 5.292000000000491e-06, 6.0279999999982015e-06, 5.985999999999492e-06]</msg>
<status status="PASS" starttime="20201110 08:37:18.217" endtime="20201110 08:37:18.219"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.213" endtime="20201110 08:37:18.219"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:18.222" endtime="20201110 08:37:18.223"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:18.225" endtime="20201110 08:37:18.245"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.224" endtime="20201110 08:37:18.246"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.220" endtime="20201110 08:37:18.246"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.825" endtime="20201110 08:37:18.247"></status>
</kw>
<msg timestamp="20201110 08:37:18.247" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:18.255" endtime="20201110 08:37:18.269"></status>
</kw>
<msg timestamp="20201110 08:37:18.270" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:18.253" endtime="20201110 08:37:18.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.272" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:18.271" endtime="20201110 08:37:18.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:18.273" endtime="20201110 08:37:18.275"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.250" endtime="20201110 08:37:18.275"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.249" endtime="20201110 08:37:18.276"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:18.282" endtime="20201110 08:37:18.552"></status>
</kw>
<msg timestamp="20201110 08:37:18.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017847042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017852056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:18.280" endtime="20201110 08:37:18.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017847042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017852056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:18.554" endtime="20201110 08:37:18.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:18.560" endtime="20201110 08:37:18.561"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.278" endtime="20201110 08:37:18.562"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.276" endtime="20201110 08:37:18.562"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.566" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:18.565" endtime="20201110 08:37:18.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.570" level="INFO">VALUE: [{'time': 0.017847042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017852056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.014000000001101e-06, 'source_diff': 5.014000000001101e-06}, {'time': 0.017856083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.026999999996728e-06, 'source_diff': 4.026999999996728e-06}, {'time': 0.017860375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.29200000000296e-06, 'source_diff': 4.29200000000296e-06}, {'time': 0.017865097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.721999999998672e-06, 'source_diff': 4.721999999998672e-06}, {'time': 0.017870569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.017874069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.500000000000031e-06, 'source_diff': 3.500000000000031e-06}, {'time': 0.017879472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.403000000001046e-06, 'source_diff': 5.403000000001046e-06}, {'time': 0.017881819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.346999999999766e-06, 'source_diff': 2.346999999999766e-06}, {'time': 0.017888042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2229999999996455e-06, 'source_diff': 6.2229999999996455e-06}, {'time': 0.017891153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.111000000000086e-06, 'source_diff': 3.111000000000086e-06}, {'time': 0.017895194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.040999999999767e-06, 'source_diff': 4.040999999999767e-06}, {'time': 0.017900986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.792000000000991e-06, 'source_diff': 5.792000000000991e-06}, {'time': 0.017905125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.139000000000226e-06, 'source_diff': 4.139000000000226e-06}, {'time': 0.017908361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.236000000000211e-06, 'source_diff': 3.236000000000211e-06}, {'time': 0.017913764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.402999999997576e-06, 'source_diff': 5.402999999997576e-06}, {'time': 0.017916931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.167000000001835e-06, 'source_diff': 3.167000000001835e-06}, {'time': 0.017921972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.041000000000767e-06, 'source_diff': 5.041000000000767e-06}, {'time': 0.017924764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7919999999979905e-06, 'source_diff': 2.7919999999979905e-06}, {'time': 0.017929875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.111000000002086e-06, 'source_diff': 5.111000000002086e-06}, {'time': 0.017935083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.207999999999602e-06, 'source_diff': 5.207999999999602e-06}, {'time': 0.01794, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.917000000000116e-06, 'source_diff': 4.917000000000116e-06}, {'time': 0.017944403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.017949569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.165999999997423e-06, 'source_diff': 5.165999999997423e-06}, {'time': 0.017955236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.667000000000866e-06, 'source_diff': 5.667000000000866e-06}, {'time': 0.017961278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.042000000001241e-06, 'source_diff': 6.042000000001241e-06}, {'time': 0.01796575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.471999999998422e-06, 'source_diff': 4.471999999998422e-06}, {'time': 0.017971722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.017975514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.79200000000246e-06, 'source_diff': 3.79200000000246e-06}, {'time': 0.017980236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.721999999998672e-06, 'source_diff': 4.721999999998672e-06}, {'time': 0.017983972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.736000000000711e-06, 'source_diff': 3.736000000000711e-06}, {'time': 0.017989875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9029999999980765e-06, 'source_diff': 5.9029999999980765e-06}, {'time': 0.017994486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.611000000001586e-06, 'source_diff': 4.611000000001586e-06}, {'time': 0.017997014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5279999999981706e-06, 'source_diff': 2.5279999999981706e-06}, {'time': 0.017999431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.417000000001085e-06, 'source_diff': 2.417000000001085e-06}, {'time': 0.018002917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.486000000000461e-06, 'source_diff': 3.486000000000461e-06}, {'time': 0.018007569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.652000000000822e-06, 'source_diff': 4.652000000000822e-06}, {'time': 0.018013792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2229999999996455e-06, 'source_diff': 6.2229999999996455e-06}, {'time': 0.018019139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.018023236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.018027917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.680999999999436e-06, 'source_diff': 4.680999999999436e-06}, {'time': 0.018032694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.776999999997478e-06, 'source_diff': 4.776999999997478e-06}, {'time': 0.018036847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.153000000003265e-06, 'source_diff': 4.153000000003265e-06}, {'time': 0.018042708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.018046986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.277999999999921e-06, 'source_diff': 4.277999999999921e-06}, {'time': 0.018050194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2079999999976017e-06, 'source_diff': 3.2079999999976017e-06}, {'time': 0.018053639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.445000000001225e-06, 'source_diff': 3.445000000001225e-06}, {'time': 0.018056306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.667000000001335e-06, 'source_diff': 2.667000000001335e-06}, {'time': 0.018062458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.151999999998853e-06, 'source_diff': 6.151999999998853e-06}, {'time': 0.0180665, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.041999999999241e-06, 'source_diff': 4.041999999999241e-06}]</msg>
<status status="PASS" starttime="20201110 08:37:18.567" endtime="20201110 08:37:18.571"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.563" endtime="20201110 08:37:18.572"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:18.585" level="INFO">${debug-compressed} = {'diff': [0, 5.014000000001101e-06, 4.026999999996728e-06, 4.29200000000296e-06, 4.721999999998672e-06, 5.471999999999422e-06, 3.500000000000031e-06, 5.403000000001046e-06, 2.346999999999766e-06, 6.22...</msg>
<status status="PASS" starttime="20201110 08:37:18.572" endtime="20201110 08:37:18.586"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.589" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:18.588" endtime="20201110 08:37:18.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.593" level="INFO">VALUE: {'diff': [0, 5.014000000001101e-06, 4.026999999996728e-06, 4.29200000000296e-06, 4.721999999998672e-06, 5.471999999999422e-06, 3.500000000000031e-06, 5.403000000001046e-06, 2.346999999999766e-06, 6.2229999999996455e-06, 3.111000000000086e-06, 4.040999999999767e-06, 5.792000000000991e-06, 4.139000000000226e-06, 3.236000000000211e-06, 5.402999999997576e-06, 3.167000000001835e-06, 5.041000000000767e-06, 2.7919999999979905e-06, 5.111000000002086e-06, 5.207999999999602e-06, 4.917000000000116e-06, 4.403000000000046e-06, 5.165999999997423e-06, 5.667000000000866e-06, 6.042000000001241e-06, 4.471999999998422e-06, 5.971999999999922e-06, 3.79200000000246e-06, 4.721999999998672e-06, 3.736000000000711e-06, 5.9029999999980765e-06, 4.611000000001586e-06, 2.5279999999981706e-06, 2.417000000001085e-06, 3.486000000000461e-06, 4.652000000000822e-06, 6.2229999999996455e-06, 5.346999999999297e-06, 4.097000000001516e-06, 4.680999999999436e-06, 4.776999999997478e-06, 4.153000000003265e-06, 5.860999999999367e-06, 4.277999999999921e-06, 3.2079999999976017e-06, 3.445000000001225e-06, 2.667000000001335e-06, 6.151999999998853e-06, 4.041999999999241e-06], 'time': [0.017847042, 0.017852056, 0.017856083, 0.017860375, 0.017865097, 0.017870569, 0.017874069, 0.017879472, 0.017881819, 0.017888042, 0.017891153, 0.017895194, 0.017900986, 0.017905125, 0.017908361, 0.017913764, 0.017916931, 0.017921972, 0.017924764, 0.017929875, 0.017935083, 0.01794, 0.017944403, 0.017949569, 0.017955236, 0.017961278, 0.01796575, 0.017971722, 0.017975514, 0.017980236, 0.017983972, 0.017989875, 0.017994486, 0.017997014, 0.017999431, 0.018002917, 0.018007569, 0.018013792, 0.018019139, 0.018023236, 0.018027917, 0.018032694, 0.018036847, 0.018042708, 0.018046986, 0.018050194, 0.018053639, 0.018056306, 0.018062458, 0.0180665], 'eventsourcesource_diff': [0, 5.014000000001101e-06, 4.026999999996728e-06, 4.29200000000296e-06, 4.721999999998672e-06, 5.471999999999422e-06, 3.500000000000031e-06, 5.403000000001046e-06, 2.346999999999766e-06, 6.2229999999996455e-06, 3.111000000000086e-06, 4.040999999999767e-06, 5.792000000000991e-06, 4.139000000000226e-06, 3.236000000000211e-06, 5.402999999997576e-06, 3.167000000001835e-06, 5.041000000000767e-06, 2.7919999999979905e-06, 5.111000000002086e-06, 5.207999999999602e-06, 4.917000000000116e-06, 4.403000000000046e-06, 5.165999999997423e-06, 5.667000000000866e-06, 6.042000000001241e-06, 4.471999999998422e-06, 5.971999999999922e-06, 3.79200000000246e-06, 4.721999999998672e-06, 3.736000000000711e-06, 5.9029999999980765e-06, 4.611000000001586e-06, 2.5279999999981706e-06, 2.417000000001085e-06, 3.486000000000461e-06, 4.652000000000822e-06, 6.2229999999996455e-06, 5.346999999999297e-06, 4.097000000001516e-06, 4.680999999999436e-06, 4.776999999997478e-06, 4.153000000003265e-06, 5.860999999999367e-06, 4.277999999999921e-06, 3.2079999999976017e-06, 3.445000000001225e-06, 2.667000000001335e-06, 6.151999999998853e-06, 4.041999999999241e-06]}</msg>
<status status="PASS" starttime="20201110 08:37:18.590" endtime="20201110 08:37:18.593"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.586" endtime="20201110 08:37:18.594"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:18.597" level="INFO">${RESULT} = [{'time': 0.017852056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.014000000001101e-06, 'source_diff': 5.014000000001101e-06}, {'time': 0.017860375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:18.594" endtime="20201110 08:37:18.597"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:18.606" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.014000000001101e-06, 4.29200000000296e-06, 5.471999999999422e-06, 5.403000000001046e-06, 6.2229999999996455e-06, 4.040999999999767e-06, 4.139000000000226e-06, 5.402999999997576e-06, 5.0410...</msg>
<status status="PASS" starttime="20201110 08:37:18.598" endtime="20201110 08:37:18.606"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.610" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:18.609" endtime="20201110 08:37:18.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.612" level="INFO">VALUE: [5.014000000001101e-06, 4.29200000000296e-06, 5.471999999999422e-06, 5.403000000001046e-06, 6.2229999999996455e-06, 4.040999999999767e-06, 4.139000000000226e-06, 5.402999999997576e-06, 5.041000000000767e-06, 5.111000000002086e-06, 4.917000000000116e-06, 5.165999999997423e-06, 6.042000000001241e-06, 5.971999999999922e-06, 4.721999999998672e-06, 5.9029999999980765e-06, 2.5279999999981706e-06, 3.486000000000461e-06, 6.2229999999996455e-06, 4.097000000001516e-06, 4.776999999997478e-06, 5.860999999999367e-06, 3.2079999999976017e-06, 2.667000000001335e-06, 4.041999999999241e-06]</msg>
<status status="PASS" starttime="20201110 08:37:18.611" endtime="20201110 08:37:18.613"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.606" endtime="20201110 08:37:18.613"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:18.616" endtime="20201110 08:37:18.617"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:18.619" endtime="20201110 08:37:18.643"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.617" endtime="20201110 08:37:18.644"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.614" endtime="20201110 08:37:18.645"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.247" endtime="20201110 08:37:18.645"></status>
</kw>
<msg timestamp="20201110 08:37:18.645" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:18.653" endtime="20201110 08:37:18.667"></status>
</kw>
<msg timestamp="20201110 08:37:18.667" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:18.651" endtime="20201110 08:37:18.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.670" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:18.668" endtime="20201110 08:37:18.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:18.671" endtime="20201110 08:37:18.672"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.649" endtime="20201110 08:37:18.673"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.647" endtime="20201110 08:37:18.673"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:18.680" endtime="20201110 08:37:18.947"></status>
</kw>
<msg timestamp="20201110 08:37:18.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022966111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022970486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:18.678" endtime="20201110 08:37:18.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022966111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022970486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:18.950" endtime="20201110 08:37:18.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:18.956" endtime="20201110 08:37:18.958"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.676" endtime="20201110 08:37:18.958"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.674" endtime="20201110 08:37:18.959"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.962" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:18.961" endtime="20201110 08:37:18.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.966" level="INFO">VALUE: [{'time': 0.022966111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022970486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3749999999974365e-06, 'source_diff': 4.3749999999974365e-06}, {'time': 0.022973667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.181000000001405e-06, 'source_diff': 3.181000000001405e-06}, {'time': 0.022979833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.166000000001892e-06, 'source_diff': 6.166000000001892e-06}, {'time': 0.022983306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4729999999968952e-06, 'source_diff': 3.4729999999968952e-06}, {'time': 0.022988847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.541000000001267e-06, 'source_diff': 5.541000000001267e-06}, {'time': 0.022994833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.022999111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.277999999999921e-06, 'source_diff': 4.277999999999921e-06}, {'time': 0.023005347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.235999999999742e-06, 'source_diff': 6.235999999999742e-06}, {'time': 0.023008569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.222000000000641e-06, 'source_diff': 3.222000000000641e-06}, {'time': 0.023012972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.023015764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.79200000000146e-06, 'source_diff': 2.79200000000146e-06}, {'time': 0.023022125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.360999999999867e-06, 'source_diff': 6.360999999999867e-06}, {'time': 0.023026778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.023029625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.847000000000266e-06, 'source_diff': 2.847000000000266e-06}, {'time': 0.023034667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.023037625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9579999999973516e-06, 'source_diff': 2.9579999999973516e-06}, {'time': 0.023042944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.319000000000157e-06, 'source_diff': 5.319000000000157e-06}, {'time': 0.023049153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2090000000000756e-06, 'source_diff': 6.2090000000000756e-06}, {'time': 0.023054014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.861000000001836e-06, 'source_diff': 4.861000000001836e-06}, {'time': 0.023057042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0279999999986706e-06, 'source_diff': 3.0279999999986706e-06}, {'time': 0.023063014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.023068, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.986000000001961e-06, 'source_diff': 4.986000000001961e-06}, {'time': 0.023073917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.916999999997646e-06, 'source_diff': 5.916999999997646e-06}, {'time': 0.023079264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.023083417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.152999999999796e-06, 'source_diff': 4.152999999999796e-06}, {'time': 0.023086153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7360000000031803e-06, 'source_diff': 2.7360000000031803e-06}, {'time': 0.023088625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.471999999999891e-06, 'source_diff': 2.471999999999891e-06}, {'time': 0.023092625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.9999999999970615e-06, 'source_diff': 3.9999999999970615e-06}, {'time': 0.023096264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6389999999997258e-06, 'source_diff': 3.6389999999997258e-06}, {'time': 0.023099792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.52800000000264e-06, 'source_diff': 3.52800000000264e-06}, {'time': 0.023105917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.124999999999187e-06, 'source_diff': 6.124999999999187e-06}, {'time': 0.023110889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.971999999998922e-06, 'source_diff': 4.971999999998922e-06}, {'time': 0.023113222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.333000000000196e-06, 'source_diff': 2.333000000000196e-06}, {'time': 0.023116278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.05600000000128e-06, 'source_diff': 3.05600000000128e-06}, {'time': 0.023119361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.083000000000946e-06, 'source_diff': 3.083000000000946e-06}, {'time': 0.023125028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.666999999997396e-06, 'source_diff': 5.666999999997396e-06}, {'time': 0.023130931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.903000000001546e-06, 'source_diff': 5.903000000001546e-06}, {'time': 0.023135222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.291000000000017e-06, 'source_diff': 4.291000000000017e-06}, {'time': 0.023138069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.847000000000266e-06, 'source_diff': 2.847000000000266e-06}, {'time': 0.023143181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.11199999999809e-06, 'source_diff': 5.11199999999809e-06}, {'time': 0.023147833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.652000000000822e-06, 'source_diff': 4.652000000000822e-06}, {'time': 0.023153375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.542000000000741e-06, 'source_diff': 5.542000000000741e-06}, {'time': 0.023156347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.972000000000391e-06, 'source_diff': 2.972000000000391e-06}, {'time': 0.023160472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.125000000000656e-06, 'source_diff': 4.125000000000656e-06}, {'time': 0.023166056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5839999999994505e-06, 'source_diff': 5.5839999999994505e-06}, {'time': 0.023168972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.915999999998642e-06, 'source_diff': 2.915999999998642e-06}, {'time': 0.023174444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.023179097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.023181583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.485999999999461e-06, 'source_diff': 2.485999999999461e-06}]</msg>
<status status="PASS" starttime="20201110 08:37:18.964" endtime="20201110 08:37:18.967"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.959" endtime="20201110 08:37:18.968"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:18.982" level="INFO">${debug-compressed} = {'diff': [0, 4.3749999999974365e-06, 3.181000000001405e-06, 6.166000000001892e-06, 3.4729999999968952e-06, 5.541000000001267e-06, 5.985999999999492e-06, 4.277999999999921e-06, 6.235999999999742e-06, 3...</msg>
<status status="PASS" starttime="20201110 08:37:18.968" endtime="20201110 08:37:18.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.986" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:18.985" endtime="20201110 08:37:18.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.989" level="INFO">VALUE: {'diff': [0, 4.3749999999974365e-06, 3.181000000001405e-06, 6.166000000001892e-06, 3.4729999999968952e-06, 5.541000000001267e-06, 5.985999999999492e-06, 4.277999999999921e-06, 6.235999999999742e-06, 3.222000000000641e-06, 4.403000000000046e-06, 2.79200000000146e-06, 6.360999999999867e-06, 4.653000000000296e-06, 2.847000000000266e-06, 5.042000000000241e-06, 2.9579999999973516e-06, 5.319000000000157e-06, 6.2090000000000756e-06, 4.861000000001836e-06, 3.0279999999986706e-06, 5.971999999999922e-06, 4.986000000001961e-06, 5.916999999997646e-06, 5.346999999999297e-06, 4.152999999999796e-06, 2.7360000000031803e-06, 2.471999999999891e-06, 3.9999999999970615e-06, 3.6389999999997258e-06, 3.52800000000264e-06, 6.124999999999187e-06, 4.971999999998922e-06, 2.333000000000196e-06, 3.05600000000128e-06, 3.083000000000946e-06, 5.666999999997396e-06, 5.903000000001546e-06, 4.291000000000017e-06, 2.847000000000266e-06, 5.11199999999809e-06, 4.652000000000822e-06, 5.542000000000741e-06, 2.972000000000391e-06, 4.125000000000656e-06, 5.5839999999994505e-06, 2.915999999998642e-06, 5.471999999999422e-06, 4.653000000000296e-06, 2.485999999999461e-06], 'time': [0.022966111, 0.022970486, 0.022973667, 0.022979833, 0.022983306, 0.022988847, 0.022994833, 0.022999111, 0.023005347, 0.023008569, 0.023012972, 0.023015764, 0.023022125, 0.023026778, 0.023029625, 0.023034667, 0.023037625, 0.023042944, 0.023049153, 0.023054014, 0.023057042, 0.023063014, 0.023068, 0.023073917, 0.023079264, 0.023083417, 0.023086153, 0.023088625, 0.023092625, 0.023096264, 0.023099792, 0.023105917, 0.023110889, 0.023113222, 0.023116278, 0.023119361, 0.023125028, 0.023130931, 0.023135222, 0.023138069, 0.023143181, 0.023147833, 0.023153375, 0.023156347, 0.023160472, 0.023166056, 0.023168972, 0.023174444, 0.023179097, 0.023181583], 'eventsourcesource_diff': [0, 4.3749999999974365e-06, 3.181000000001405e-06, 6.166000000001892e-06, 3.4729999999968952e-06, 5.541000000001267e-06, 5.985999999999492e-06, 4.277999999999921e-06, 6.235999999999742e-06, 3.222000000000641e-06, 4.403000000000046e-06, 2.79200000000146e-06, 6.360999999999867e-06, 4.653000000000296e-06, 2.847000000000266e-06, 5.042000000000241e-06, 2.9579999999973516e-06, 5.319000000000157e-06, 6.2090000000000756e-06, 4.861000000001836e-06, 3.0279999999986706e-06, 5.971999999999922e-06, 4.986000000001961e-06, 5.916999999997646e-06, 5.346999999999297e-06, 4.152999999999796e-06, 2.7360000000031803e-06, 2.471999999999891e-06, 3.9999999999970615e-06, 3.6389999999997258e-06, 3.52800000000264e-06, 6.124999999999187e-06, 4.971999999998922e-06, 2.333000000000196e-06, 3.05600000000128e-06, 3.083000000000946e-06, 5.666999999997396e-06, 5.903000000001546e-06, 4.291000000000017e-06, 2.847000000000266e-06, 5.11199999999809e-06, 4.652000000000822e-06, 5.542000000000741e-06, 2.972000000000391e-06, 4.125000000000656e-06, 5.5839999999994505e-06, 2.915999999998642e-06, 5.471999999999422e-06, 4.653000000000296e-06, 2.485999999999461e-06]}</msg>
<status status="PASS" starttime="20201110 08:37:18.987" endtime="20201110 08:37:18.990"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.983" endtime="20201110 08:37:18.990"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:18.993" level="INFO">${RESULT} = [{'time': 0.022970486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3749999999974365e-06, 'source_diff': 4.3749999999974365e-06}, {'time': 0.022979833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:18.991" endtime="20201110 08:37:18.994"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:19.002" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.3749999999974365e-06, 6.166000000001892e-06, 5.541000000001267e-06, 4.277999999999921e-06, 3.222000000000641e-06, 2.79200000000146e-06, 4.653000000000296e-06, 5.042000000000241e-06, 5.3190...</msg>
<status status="PASS" starttime="20201110 08:37:18.994" endtime="20201110 08:37:19.002"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.006" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:19.005" endtime="20201110 08:37:19.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.008" level="INFO">VALUE: [4.3749999999974365e-06, 6.166000000001892e-06, 5.541000000001267e-06, 4.277999999999921e-06, 3.222000000000641e-06, 2.79200000000146e-06, 4.653000000000296e-06, 5.042000000000241e-06, 5.319000000000157e-06, 4.861000000001836e-06, 5.971999999999922e-06, 5.916999999997646e-06, 4.152999999999796e-06, 2.471999999999891e-06, 3.6389999999997258e-06, 6.124999999999187e-06, 2.333000000000196e-06, 3.083000000000946e-06, 5.903000000001546e-06, 2.847000000000266e-06, 4.652000000000822e-06, 2.972000000000391e-06, 5.5839999999994505e-06, 5.471999999999422e-06, 2.485999999999461e-06]</msg>
<status status="PASS" starttime="20201110 08:37:19.007" endtime="20201110 08:37:19.009"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.003" endtime="20201110 08:37:19.009"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.012" endtime="20201110 08:37:19.013"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:19.015" endtime="20201110 08:37:19.034"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.013" endtime="20201110 08:37:19.035"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.010" endtime="20201110 08:37:19.035"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.646" endtime="20201110 08:37:19.036"></status>
</kw>
<msg timestamp="20201110 08:37:19.036" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.043" endtime="20201110 08:37:19.058"></status>
</kw>
<msg timestamp="20201110 08:37:19.059" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:19.042" endtime="20201110 08:37:19.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.061" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:19.060" endtime="20201110 08:37:19.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.062" endtime="20201110 08:37:19.064"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.039" endtime="20201110 08:37:19.065"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.038" endtime="20201110 08:37:19.065"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.071" endtime="20201110 08:37:19.338"></status>
</kw>
<msg timestamp="20201110 08:37:19.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017562014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017565375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:19.070" endtime="20201110 08:37:19.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017562014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017565375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:19.341" endtime="20201110 08:37:19.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.347" endtime="20201110 08:37:19.349"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.067" endtime="20201110 08:37:19.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.066" endtime="20201110 08:37:19.350"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.354" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:19.353" endtime="20201110 08:37:19.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.358" level="INFO">VALUE: [{'time': 0.017562014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017565375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.361000000000336e-06, 'source_diff': 3.361000000000336e-06}, {'time': 0.017569389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.014000000000101e-06, 'source_diff': 4.014000000000101e-06}, {'time': 0.017574389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.9999999999980616e-06, 'source_diff': 4.9999999999980616e-06}, {'time': 0.017578486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.017584444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.958000000000352e-06, 'source_diff': 5.958000000000352e-06}, {'time': 0.017589292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.84799999999827e-06, 'source_diff': 4.84799999999827e-06}, {'time': 0.017592333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0410000000022364e-06, 'source_diff': 3.0410000000022364e-06}, {'time': 0.01759475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4169999999976155e-06, 'source_diff': 2.4169999999976155e-06}, {'time': 0.017600222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.017602944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.722000000000141e-06, 'source_diff': 2.722000000000141e-06}, {'time': 0.017608361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.417000000000616e-06, 'source_diff': 5.417000000000616e-06}, {'time': 0.017613389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.028000000000671e-06, 'source_diff': 5.028000000000671e-06}, {'time': 0.017618764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.374999999998437e-06, 'source_diff': 5.374999999998437e-06}, {'time': 0.017622528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.763999999999851e-06, 'source_diff': 3.763999999999851e-06}, {'time': 0.017626264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.736000000000711e-06, 'source_diff': 3.736000000000711e-06}, {'time': 0.017629792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5279999999991707e-06, 'source_diff': 3.5279999999991707e-06}, {'time': 0.017634528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.736000000001711e-06, 'source_diff': 4.736000000001711e-06}, {'time': 0.017639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.471999999998422e-06, 'source_diff': 4.471999999998422e-06}, {'time': 0.017644667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.667000000000866e-06, 'source_diff': 5.667000000000866e-06}, {'time': 0.017647694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.026999999999197e-06, 'source_diff': 3.026999999999197e-06}, {'time': 0.017652806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.11200000000156e-06, 'source_diff': 5.11200000000156e-06}, {'time': 0.017656028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.222000000000641e-06, 'source_diff': 3.222000000000641e-06}, {'time': 0.01765975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7219999999976716e-06, 'source_diff': 3.7219999999976716e-06}, {'time': 0.017663167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.417000000002085e-06, 'source_diff': 3.417000000002085e-06}, {'time': 0.017665819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.651999999998822e-06, 'source_diff': 2.651999999998822e-06}, {'time': 0.017671306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.487000000001935e-06, 'source_diff': 5.487000000001935e-06}, {'time': 0.017675583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.277000000000447e-06, 'source_diff': 4.277000000000447e-06}, {'time': 0.017679764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1809999999989356e-06, 'source_diff': 4.1809999999989356e-06}, {'time': 0.017685236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.017688458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.222000000000641e-06, 'source_diff': 3.222000000000641e-06}, {'time': 0.017694181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7229999999991454e-06, 'source_diff': 5.7229999999991454e-06}, {'time': 0.017698597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416000000000142e-06, 'source_diff': 4.416000000000142e-06}, {'time': 0.017702028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.431000000001655e-06, 'source_diff': 3.431000000001655e-06}, {'time': 0.017706736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.707999999999102e-06, 'source_diff': 4.707999999999102e-06}, {'time': 0.017712458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.721999999999672e-06, 'source_diff': 5.721999999999672e-06}, {'time': 0.017718681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2229999999996455e-06, 'source_diff': 6.2229999999996455e-06}, {'time': 0.017722264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.583000000001446e-06, 'source_diff': 3.583000000001446e-06}, {'time': 0.017727, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.735999999998242e-06, 'source_diff': 4.735999999998242e-06}, {'time': 0.017729681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.681000000000905e-06, 'source_diff': 2.681000000000905e-06}, {'time': 0.017732639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.958000000000821e-06, 'source_diff': 2.958000000000821e-06}, {'time': 0.01773575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.111000000000086e-06, 'source_diff': 3.111000000000086e-06}, {'time': 0.017739792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.041999999999241e-06, 'source_diff': 4.041999999999241e-06}, {'time': 0.017745514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.721999999999672e-06, 'source_diff': 5.721999999999672e-06}, {'time': 0.017749167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.6529999999992957e-06, 'source_diff': 3.6529999999992957e-06}, {'time': 0.017755014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.017759889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.875000000001406e-06, 'source_diff': 4.875000000001406e-06}, {'time': 0.017762528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6389999999987257e-06, 'source_diff': 2.6389999999987257e-06}, {'time': 0.017767014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.486000000001461e-06, 'source_diff': 4.486000000001461e-06}, {'time': 0.017771611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.596999999998547e-06, 'source_diff': 4.596999999998547e-06}]</msg>
<status status="PASS" starttime="20201110 08:37:19.355" endtime="20201110 08:37:19.359"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.351" endtime="20201110 08:37:19.359"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:19.374" level="INFO">${debug-compressed} = {'diff': [0, 3.361000000000336e-06, 4.014000000000101e-06, 4.9999999999980616e-06, 4.097000000001516e-06, 5.958000000000352e-06, 4.84799999999827e-06, 3.0410000000022364e-06, 2.4169999999976155e-06, 5...</msg>
<status status="PASS" starttime="20201110 08:37:19.360" endtime="20201110 08:37:19.374"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.378" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:19.377" endtime="20201110 08:37:19.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.381" level="INFO">VALUE: {'diff': [0, 3.361000000000336e-06, 4.014000000000101e-06, 4.9999999999980616e-06, 4.097000000001516e-06, 5.958000000000352e-06, 4.84799999999827e-06, 3.0410000000022364e-06, 2.4169999999976155e-06, 5.471999999999422e-06, 2.722000000000141e-06, 5.417000000000616e-06, 5.028000000000671e-06, 5.374999999998437e-06, 3.763999999999851e-06, 3.736000000000711e-06, 3.5279999999991707e-06, 4.736000000001711e-06, 4.471999999998422e-06, 5.667000000000866e-06, 3.026999999999197e-06, 5.11200000000156e-06, 3.222000000000641e-06, 3.7219999999976716e-06, 3.417000000002085e-06, 2.651999999998822e-06, 5.487000000001935e-06, 4.277000000000447e-06, 4.1809999999989356e-06, 5.471999999999422e-06, 3.222000000000641e-06, 5.7229999999991454e-06, 4.416000000000142e-06, 3.431000000001655e-06, 4.707999999999102e-06, 5.721999999999672e-06, 6.2229999999996455e-06, 3.583000000001446e-06, 4.735999999998242e-06, 2.681000000000905e-06, 2.958000000000821e-06, 3.111000000000086e-06, 4.041999999999241e-06, 5.721999999999672e-06, 3.6529999999992957e-06, 5.846999999999797e-06, 4.875000000001406e-06, 2.6389999999987257e-06, 4.486000000001461e-06, 4.596999999998547e-06], 'time': [0.017562014, 0.017565375, 0.017569389, 0.017574389, 0.017578486, 0.017584444, 0.017589292, 0.017592333, 0.01759475, 0.017600222, 0.017602944, 0.017608361, 0.017613389, 0.017618764, 0.017622528, 0.017626264, 0.017629792, 0.017634528, 0.017639, 0.017644667, 0.017647694, 0.017652806, 0.017656028, 0.01765975, 0.017663167, 0.017665819, 0.017671306, 0.017675583, 0.017679764, 0.017685236, 0.017688458, 0.017694181, 0.017698597, 0.017702028, 0.017706736, 0.017712458, 0.017718681, 0.017722264, 0.017727, 0.017729681, 0.017732639, 0.01773575, 0.017739792, 0.017745514, 0.017749167, 0.017755014, 0.017759889, 0.017762528, 0.017767014, 0.017771611], 'eventsourcesource_diff': [0, 3.361000000000336e-06, 4.014000000000101e-06, 4.9999999999980616e-06, 4.097000000001516e-06, 5.958000000000352e-06, 4.84799999999827e-06, 3.0410000000022364e-06, 2.4169999999976155e-06, 5.471999999999422e-06, 2.722000000000141e-06, 5.417000000000616e-06, 5.028000000000671e-06, 5.374999999998437e-06, 3.763999999999851e-06, 3.736000000000711e-06, 3.5279999999991707e-06, 4.736000000001711e-06, 4.471999999998422e-06, 5.667000000000866e-06, 3.026999999999197e-06, 5.11200000000156e-06, 3.222000000000641e-06, 3.7219999999976716e-06, 3.417000000002085e-06, 2.651999999998822e-06, 5.487000000001935e-06, 4.277000000000447e-06, 4.1809999999989356e-06, 5.471999999999422e-06, 3.222000000000641e-06, 5.7229999999991454e-06, 4.416000000000142e-06, 3.431000000001655e-06, 4.707999999999102e-06, 5.721999999999672e-06, 6.2229999999996455e-06, 3.583000000001446e-06, 4.735999999998242e-06, 2.681000000000905e-06, 2.958000000000821e-06, 3.111000000000086e-06, 4.041999999999241e-06, 5.721999999999672e-06, 3.6529999999992957e-06, 5.846999999999797e-06, 4.875000000001406e-06, 2.6389999999987257e-06, 4.486000000001461e-06, 4.596999999998547e-06]}</msg>
<status status="PASS" starttime="20201110 08:37:19.379" endtime="20201110 08:37:19.381"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.375" endtime="20201110 08:37:19.382"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:19.385" level="INFO">${RESULT} = [{'time': 0.017565375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.361000000000336e-06, 'source_diff': 3.361000000000336e-06}, {'time': 0.017574389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:19.383" endtime="20201110 08:37:19.386"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:19.393" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.361000000000336e-06, 4.9999999999980616e-06, 5.958000000000352e-06, 3.0410000000022364e-06, 5.471999999999422e-06, 5.417000000000616e-06, 5.374999999998437e-06, 3.736000000000711e-06, 4.73...</msg>
<status status="PASS" starttime="20201110 08:37:19.386" endtime="20201110 08:37:19.394"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.398" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:19.397" endtime="20201110 08:37:19.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.400" level="INFO">VALUE: [3.361000000000336e-06, 4.9999999999980616e-06, 5.958000000000352e-06, 3.0410000000022364e-06, 5.471999999999422e-06, 5.417000000000616e-06, 5.374999999998437e-06, 3.736000000000711e-06, 4.736000000001711e-06, 5.667000000000866e-06, 5.11200000000156e-06, 3.7219999999976716e-06, 2.651999999998822e-06, 4.277000000000447e-06, 5.471999999999422e-06, 5.7229999999991454e-06, 3.431000000001655e-06, 5.721999999999672e-06, 3.583000000001446e-06, 2.681000000000905e-06, 3.111000000000086e-06, 5.721999999999672e-06, 5.846999999999797e-06, 2.6389999999987257e-06, 4.596999999998547e-06]</msg>
<status status="PASS" starttime="20201110 08:37:19.399" endtime="20201110 08:37:19.401"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.394" endtime="20201110 08:37:19.401"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.404" endtime="20201110 08:37:19.405"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:19.407" endtime="20201110 08:37:19.428"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.405" endtime="20201110 08:37:19.429"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.402" endtime="20201110 08:37:19.429"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.036" endtime="20201110 08:37:19.430"></status>
</kw>
<msg timestamp="20201110 08:37:19.430" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.443" endtime="20201110 08:37:19.459"></status>
</kw>
<msg timestamp="20201110 08:37:19.459" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:19.440" endtime="20201110 08:37:19.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.462" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:19.460" endtime="20201110 08:37:19.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.463" endtime="20201110 08:37:19.465"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.436" endtime="20201110 08:37:19.465"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.432" endtime="20201110 08:37:19.466"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.473" endtime="20201110 08:37:19.740"></status>
</kw>
<msg timestamp="20201110 08:37:19.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025733861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025736736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:19.471" endtime="20201110 08:37:19.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025733861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025736736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:19.743" endtime="20201110 08:37:19.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.749" endtime="20201110 08:37:19.750"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.468" endtime="20201110 08:37:19.751"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.466" endtime="20201110 08:37:19.751"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.755" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:19.754" endtime="20201110 08:37:19.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.759" level="INFO">VALUE: [{'time': 0.025733861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025736736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.874999999999406e-06, 'source_diff': 2.874999999999406e-06}, {'time': 0.025740208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.472000000000891e-06, 'source_diff': 3.472000000000891e-06}, {'time': 0.025744847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.025747639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7919999999979905e-06, 'source_diff': 2.7919999999979905e-06}, {'time': 0.025752444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.805000000000087e-06, 'source_diff': 4.805000000000087e-06}, {'time': 0.025755403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9590000000002947e-06, 'source_diff': 2.9590000000002947e-06}, {'time': 0.025757958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5550000000013062e-06, 'source_diff': 2.5550000000013062e-06}, {'time': 0.025760861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9029999999985456e-06, 'source_diff': 2.9029999999985456e-06}, {'time': 0.025765153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.291999999999491e-06, 'source_diff': 4.291999999999491e-06}, {'time': 0.025770056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.903000000000546e-06, 'source_diff': 4.903000000000546e-06}, {'time': 0.025772653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.597000000000016e-06, 'source_diff': 2.597000000000016e-06}, {'time': 0.025776819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.165999999999892e-06, 'source_diff': 4.165999999999892e-06}, {'time': 0.025781931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.11200000000156e-06, 'source_diff': 5.11200000000156e-06}, {'time': 0.025787014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.082999999999477e-06, 'source_diff': 5.082999999999477e-06}, {'time': 0.025791708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.693999999999532e-06, 'source_diff': 4.693999999999532e-06}, {'time': 0.025795653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.945000000001725e-06, 'source_diff': 3.945000000001725e-06}, {'time': 0.025801069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.415999999997673e-06, 'source_diff': 5.415999999997673e-06}, {'time': 0.025806944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.874999999998937e-06, 'source_diff': 5.874999999998937e-06}, {'time': 0.025810431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.487000000003404e-06, 'source_diff': 3.487000000003404e-06}, {'time': 0.025813875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4439999999982818e-06, 'source_diff': 3.4439999999982818e-06}, {'time': 0.025819597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.721999999999672e-06, 'source_diff': 5.721999999999672e-06}, {'time': 0.025825569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.025831556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.986999999998965e-06, 'source_diff': 5.986999999998965e-06}, {'time': 0.025837847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.291000000002017e-06, 'source_diff': 6.291000000002017e-06}, {'time': 0.025841806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.958999999997825e-06, 'source_diff': 3.958999999997825e-06}, {'time': 0.025844667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8610000000033053e-06, 'source_diff': 2.8610000000033053e-06}, {'time': 0.025848889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.221999999998172e-06, 'source_diff': 4.221999999998172e-06}, {'time': 0.02585425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.360999999998867e-06, 'source_diff': 5.360999999998867e-06}, {'time': 0.025856708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.458000000000321e-06, 'source_diff': 2.458000000000321e-06}, {'time': 0.025862014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.306000000000061e-06, 'source_diff': 5.306000000000061e-06}, {'time': 0.025866097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.083000000001946e-06, 'source_diff': 4.083000000001946e-06}, {'time': 0.025871417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.319999999999631e-06, 'source_diff': 5.319999999999631e-06}, {'time': 0.0258775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.083000000000477e-06, 'source_diff': 6.083000000000477e-06}, {'time': 0.025880847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.3469999999972966e-06, 'source_diff': 3.3469999999972966e-06}, {'time': 0.025884069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.222000000000641e-06, 'source_diff': 3.222000000000641e-06}, {'time': 0.025887972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.902999999999546e-06, 'source_diff': 3.902999999999546e-06}, {'time': 0.025893958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.986000000002961e-06, 'source_diff': 5.986000000002961e-06}, {'time': 0.025898486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.527999999996701e-06, 'source_diff': 4.527999999996701e-06}, {'time': 0.025901972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.486000000000461e-06, 'source_diff': 3.486000000000461e-06}, {'time': 0.025907819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.025910292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.473000000002834e-06, 'source_diff': 2.473000000002834e-06}, {'time': 0.025913889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5969999999975466e-06, 'source_diff': 3.5969999999975466e-06}, {'time': 0.025918181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.291999999999491e-06, 'source_diff': 4.291999999999491e-06}, {'time': 0.025920722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5410000000017363e-06, 'source_diff': 2.5410000000017363e-06}, {'time': 0.025923528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.80600000000103e-06, 'source_diff': 2.80600000000103e-06}, {'time': 0.025927986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.457999999998852e-06, 'source_diff': 4.457999999998852e-06}, {'time': 0.025932708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.721999999998672e-06, 'source_diff': 4.721999999998672e-06}, {'time': 0.025935431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7229999999996146e-06, 'source_diff': 2.7229999999996146e-06}, {'time': 0.025938722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2910000000024864e-06, 'source_diff': 3.2910000000024864e-06}]</msg>
<status status="PASS" starttime="20201110 08:37:19.756" endtime="20201110 08:37:19.760"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.752" endtime="20201110 08:37:19.760"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:19.774" level="INFO">${debug-compressed} = {'diff': [0, 2.874999999999406e-06, 3.472000000000891e-06, 4.639000000000726e-06, 2.7919999999979905e-06, 4.805000000000087e-06, 2.9590000000002947e-06, 2.5550000000013062e-06, 2.9029999999985456e-06,...</msg>
<status status="PASS" starttime="20201110 08:37:19.761" endtime="20201110 08:37:19.775"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.778" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:19.777" endtime="20201110 08:37:19.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.781" level="INFO">VALUE: {'diff': [0, 2.874999999999406e-06, 3.472000000000891e-06, 4.639000000000726e-06, 2.7919999999979905e-06, 4.805000000000087e-06, 2.9590000000002947e-06, 2.5550000000013062e-06, 2.9029999999985456e-06, 4.291999999999491e-06, 4.903000000000546e-06, 2.597000000000016e-06, 4.165999999999892e-06, 5.11200000000156e-06, 5.082999999999477e-06, 4.693999999999532e-06, 3.945000000001725e-06, 5.415999999997673e-06, 5.874999999998937e-06, 3.487000000003404e-06, 3.4439999999982818e-06, 5.721999999999672e-06, 5.971999999999922e-06, 5.986999999998965e-06, 6.291000000002017e-06, 3.958999999997825e-06, 2.8610000000033053e-06, 4.221999999998172e-06, 5.360999999998867e-06, 2.458000000000321e-06, 5.306000000000061e-06, 4.083000000001946e-06, 5.319999999999631e-06, 6.083000000000477e-06, 3.3469999999972966e-06, 3.222000000000641e-06, 3.902999999999546e-06, 5.986000000002961e-06, 4.527999999996701e-06, 3.486000000000461e-06, 5.846999999999797e-06, 2.473000000002834e-06, 3.5969999999975466e-06, 4.291999999999491e-06, 2.5410000000017363e-06, 2.80600000000103e-06, 4.457999999998852e-06, 4.721999999998672e-06, 2.7229999999996146e-06, 3.2910000000024864e-06], 'time': [0.025733861, 0.025736736, 0.025740208, 0.025744847, 0.025747639, 0.025752444, 0.025755403, 0.025757958, 0.025760861, 0.025765153, 0.025770056, 0.025772653, 0.025776819, 0.025781931, 0.025787014, 0.025791708, 0.025795653, 0.025801069, 0.025806944, 0.025810431, 0.025813875, 0.025819597, 0.025825569, 0.025831556, 0.025837847, 0.025841806, 0.025844667, 0.025848889, 0.02585425, 0.025856708, 0.025862014, 0.025866097, 0.025871417, 0.0258775, 0.025880847, 0.025884069, 0.025887972, 0.025893958, 0.025898486, 0.025901972, 0.025907819, 0.025910292, 0.025913889, 0.025918181, 0.025920722, 0.025923528, 0.025927986, 0.025932708, 0.025935431, 0.025938722], 'eventsourcesource_diff': [0, 2.874999999999406e-06, 3.472000000000891e-06, 4.639000000000726e-06, 2.7919999999979905e-06, 4.805000000000087e-06, 2.9590000000002947e-06, 2.5550000000013062e-06, 2.9029999999985456e-06, 4.291999999999491e-06, 4.903000000000546e-06, 2.597000000000016e-06, 4.165999999999892e-06, 5.11200000000156e-06, 5.082999999999477e-06, 4.693999999999532e-06, 3.945000000001725e-06, 5.415999999997673e-06, 5.874999999998937e-06, 3.487000000003404e-06, 3.4439999999982818e-06, 5.721999999999672e-06, 5.971999999999922e-06, 5.986999999998965e-06, 6.291000000002017e-06, 3.958999999997825e-06, 2.8610000000033053e-06, 4.221999999998172e-06, 5.360999999998867e-06, 2.458000000000321e-06, 5.306000000000061e-06, 4.083000000001946e-06, 5.319999999999631e-06, 6.083000000000477e-06, 3.3469999999972966e-06, 3.222000000000641e-06, 3.902999999999546e-06, 5.986000000002961e-06, 4.527999999996701e-06, 3.486000000000461e-06, 5.846999999999797e-06, 2.473000000002834e-06, 3.5969999999975466e-06, 4.291999999999491e-06, 2.5410000000017363e-06, 2.80600000000103e-06, 4.457999999998852e-06, 4.721999999998672e-06, 2.7229999999996146e-06, 3.2910000000024864e-06]}</msg>
<status status="PASS" starttime="20201110 08:37:19.779" endtime="20201110 08:37:19.782"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.775" endtime="20201110 08:37:19.782"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:19.786" level="INFO">${RESULT} = [{'time': 0.025736736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.874999999999406e-06, 'source_diff': 2.874999999999406e-06}, {'time': 0.025744847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:19.783" endtime="20201110 08:37:19.786"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:19.795" level="INFO">${GPIO_OVERHEAD} = {'diff': [2.874999999999406e-06, 4.639000000000726e-06, 4.805000000000087e-06, 2.5550000000013062e-06, 4.291999999999491e-06, 2.597000000000016e-06, 5.11200000000156e-06, 4.693999999999532e-06, 5.4159...</msg>
<status status="PASS" starttime="20201110 08:37:19.787" endtime="20201110 08:37:19.795"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.801" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:19.799" endtime="20201110 08:37:19.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.803" level="INFO">VALUE: [2.874999999999406e-06, 4.639000000000726e-06, 4.805000000000087e-06, 2.5550000000013062e-06, 4.291999999999491e-06, 2.597000000000016e-06, 5.11200000000156e-06, 4.693999999999532e-06, 5.415999999997673e-06, 3.487000000003404e-06, 5.721999999999672e-06, 5.986999999998965e-06, 3.958999999997825e-06, 4.221999999998172e-06, 2.458000000000321e-06, 4.083000000001946e-06, 6.083000000000477e-06, 3.222000000000641e-06, 5.986000000002961e-06, 3.486000000000461e-06, 2.473000000002834e-06, 4.291999999999491e-06, 2.80600000000103e-06, 4.721999999998672e-06, 3.2910000000024864e-06]</msg>
<status status="PASS" starttime="20201110 08:37:19.802" endtime="20201110 08:37:19.805"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.796" endtime="20201110 08:37:19.806"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.808" endtime="20201110 08:37:19.810"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:19.812" endtime="20201110 08:37:19.831"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.810" endtime="20201110 08:37:19.832"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.807" endtime="20201110 08:37:19.832"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.431" endtime="20201110 08:37:19.833"></status>
</kw>
<msg timestamp="20201110 08:37:19.833" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.840" endtime="20201110 08:37:19.855"></status>
</kw>
<msg timestamp="20201110 08:37:19.856" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:19.839" endtime="20201110 08:37:19.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.858" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:19.857" endtime="20201110 08:37:19.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.859" endtime="20201110 08:37:19.861"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.836" endtime="20201110 08:37:19.861"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.835" endtime="20201110 08:37:19.862"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.868" endtime="20201110 08:37:20.133"></status>
</kw>
<msg timestamp="20201110 08:37:20.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018343972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018350222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:19.867" endtime="20201110 08:37:20.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:20.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018343972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018350222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:20.136" endtime="20201110 08:37:20.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:20.142" endtime="20201110 08:37:20.143"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.864" endtime="20201110 08:37:20.144"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.862" endtime="20201110 08:37:20.144"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:20.148" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:20.147" endtime="20201110 08:37:20.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:20.152" level="INFO">VALUE: [{'time': 0.018343972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018350222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.018354264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.041999999999241e-06, 'source_diff': 4.041999999999241e-06}, {'time': 0.018357778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5140000000030702e-06, 'source_diff': 3.5140000000030702e-06}, {'time': 0.018362944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.165999999997423e-06, 'source_diff': 5.165999999997423e-06}, {'time': 0.018365417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4729999999993646e-06, 'source_diff': 2.4729999999993646e-06}, {'time': 0.018370653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.236000000002211e-06, 'source_diff': 5.236000000002211e-06}, {'time': 0.018375181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.528000000000171e-06, 'source_diff': 4.528000000000171e-06}, {'time': 0.018380292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.110999999998617e-06, 'source_diff': 5.110999999998617e-06}, {'time': 0.018384903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.611000000001586e-06, 'source_diff': 4.611000000001586e-06}, {'time': 0.018388444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.540999999999267e-06, 'source_diff': 3.540999999999267e-06}, {'time': 0.018390903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4589999999997947e-06, 'source_diff': 2.4589999999997947e-06}, {'time': 0.018394056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.1529999999987957e-06, 'source_diff': 3.1529999999987957e-06}, {'time': 0.018397847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.790999999999517e-06, 'source_diff': 3.790999999999517e-06}, {'time': 0.018402139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.29200000000296e-06, 'source_diff': 4.29200000000296e-06}, {'time': 0.018406736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.596999999998547e-06, 'source_diff': 4.596999999998547e-06}, {'time': 0.018409472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.735999999999711e-06, 'source_diff': 2.735999999999711e-06}, {'time': 0.01841475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.278000000000921e-06, 'source_diff': 5.278000000000921e-06}, {'time': 0.018420153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.403000000001046e-06, 'source_diff': 5.403000000001046e-06}, {'time': 0.018423403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.249999999999781e-06, 'source_diff': 3.249999999999781e-06}, {'time': 0.018429625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.018435528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9029999999980765e-06, 'source_diff': 5.9029999999980765e-06}, {'time': 0.01844025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.721999999998672e-06, 'source_diff': 4.721999999998672e-06}, {'time': 0.018445917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.667000000000866e-06, 'source_diff': 5.667000000000866e-06}, {'time': 0.018450514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.597000000002016e-06, 'source_diff': 4.597000000002016e-06}, {'time': 0.018455431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.917000000000116e-06, 'source_diff': 4.917000000000116e-06}, {'time': 0.018461403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.018465653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2499999999973115e-06, 'source_diff': 4.2499999999973115e-06}, {'time': 0.018470167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.514000000000601e-06, 'source_diff': 4.514000000000601e-06}, {'time': 0.018473083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9160000000021113e-06, 'source_diff': 2.9160000000021113e-06}, {'time': 0.018477306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.222999999997645e-06, 'source_diff': 4.222999999997645e-06}, {'time': 0.018481722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.416000000000142e-06, 'source_diff': 4.416000000000142e-06}, {'time': 0.018487069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.018489542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.473000000002834e-06, 'source_diff': 2.473000000002834e-06}, {'time': 0.018491903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.360999999999336e-06, 'source_diff': 2.360999999999336e-06}, {'time': 0.018496431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.528000000000171e-06, 'source_diff': 4.528000000000171e-06}, {'time': 0.018500222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.790999999999517e-06, 'source_diff': 3.790999999999517e-06}, {'time': 0.018504139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.916999999999116e-06, 'source_diff': 3.916999999999116e-06}, {'time': 0.018508111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.972000000001391e-06, 'source_diff': 3.972000000001391e-06}, {'time': 0.018513278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.167000000000366e-06, 'source_diff': 5.167000000000366e-06}, {'time': 0.018517556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.277999999999921e-06, 'source_diff': 4.277999999999921e-06}, {'time': 0.018522681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.1249999999981866e-06, 'source_diff': 5.1249999999981866e-06}, {'time': 0.018526944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.263000000000877e-06, 'source_diff': 4.263000000000877e-06}, {'time': 0.018531306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.36200000000081e-06, 'source_diff': 4.36200000000081e-06}, {'time': 0.018535903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.596999999998547e-06, 'source_diff': 4.596999999998547e-06}, {'time': 0.018538375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.471999999999891e-06, 'source_diff': 2.471999999999891e-06}, {'time': 0.018542722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.347000000001766e-06, 'source_diff': 4.347000000001766e-06}, {'time': 0.018548833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.110999999999617e-06, 'source_diff': 6.110999999999617e-06}, {'time': 0.018553319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.485999999997992e-06, 'source_diff': 4.485999999997992e-06}, {'time': 0.018558708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.389000000001476e-06, 'source_diff': 5.389000000001476e-06}]</msg>
<status status="PASS" starttime="20201110 08:37:20.149" endtime="20201110 08:37:20.153"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.145" endtime="20201110 08:37:20.153"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:20.167" level="INFO">${debug-compressed} = {'diff': [0, 6.249999999999312e-06, 4.041999999999241e-06, 3.5140000000030702e-06, 5.165999999997423e-06, 2.4729999999993646e-06, 5.236000000002211e-06, 4.528000000000171e-06, 5.110999999998617e-06, 4...</msg>
<status status="PASS" starttime="20201110 08:37:20.154" endtime="20201110 08:37:20.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:20.171" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:20.170" endtime="20201110 08:37:20.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:20.174" level="INFO">VALUE: {'diff': [0, 6.249999999999312e-06, 4.041999999999241e-06, 3.5140000000030702e-06, 5.165999999997423e-06, 2.4729999999993646e-06, 5.236000000002211e-06, 4.528000000000171e-06, 5.110999999998617e-06, 4.611000000001586e-06, 3.540999999999267e-06, 2.4589999999997947e-06, 3.1529999999987957e-06, 3.790999999999517e-06, 4.29200000000296e-06, 4.596999999998547e-06, 2.735999999999711e-06, 5.278000000000921e-06, 5.403000000001046e-06, 3.249999999999781e-06, 6.222000000000172e-06, 5.9029999999980765e-06, 4.721999999998672e-06, 5.667000000000866e-06, 4.597000000002016e-06, 4.917000000000116e-06, 5.971999999999922e-06, 4.2499999999973115e-06, 4.514000000000601e-06, 2.9160000000021113e-06, 4.222999999997645e-06, 4.416000000000142e-06, 5.346999999999297e-06, 2.473000000002834e-06, 2.360999999999336e-06, 4.528000000000171e-06, 3.790999999999517e-06, 3.916999999999116e-06, 3.972000000001391e-06, 5.167000000000366e-06, 4.277999999999921e-06, 5.1249999999981866e-06, 4.263000000000877e-06, 4.36200000000081e-06, 4.596999999998547e-06, 2.471999999999891e-06, 4.347000000001766e-06, 6.110999999999617e-06, 4.485999999997992e-06, 5.389000000001476e-06], 'time': [0.018343972, 0.018350222, 0.018354264, 0.018357778, 0.018362944, 0.018365417, 0.018370653, 0.018375181, 0.018380292, 0.018384903, 0.018388444, 0.018390903, 0.018394056, 0.018397847, 0.018402139, 0.018406736, 0.018409472, 0.01841475, 0.018420153, 0.018423403, 0.018429625, 0.018435528, 0.01844025, 0.018445917, 0.018450514, 0.018455431, 0.018461403, 0.018465653, 0.018470167, 0.018473083, 0.018477306, 0.018481722, 0.018487069, 0.018489542, 0.018491903, 0.018496431, 0.018500222, 0.018504139, 0.018508111, 0.018513278, 0.018517556, 0.018522681, 0.018526944, 0.018531306, 0.018535903, 0.018538375, 0.018542722, 0.018548833, 0.018553319, 0.018558708], 'eventsourcesource_diff': [0, 6.249999999999312e-06, 4.041999999999241e-06, 3.5140000000030702e-06, 5.165999999997423e-06, 2.4729999999993646e-06, 5.236000000002211e-06, 4.528000000000171e-06, 5.110999999998617e-06, 4.611000000001586e-06, 3.540999999999267e-06, 2.4589999999997947e-06, 3.1529999999987957e-06, 3.790999999999517e-06, 4.29200000000296e-06, 4.596999999998547e-06, 2.735999999999711e-06, 5.278000000000921e-06, 5.403000000001046e-06, 3.249999999999781e-06, 6.222000000000172e-06, 5.9029999999980765e-06, 4.721999999998672e-06, 5.667000000000866e-06, 4.597000000002016e-06, 4.917000000000116e-06, 5.971999999999922e-06, 4.2499999999973115e-06, 4.514000000000601e-06, 2.9160000000021113e-06, 4.222999999997645e-06, 4.416000000000142e-06, 5.346999999999297e-06, 2.473000000002834e-06, 2.360999999999336e-06, 4.528000000000171e-06, 3.790999999999517e-06, 3.916999999999116e-06, 3.972000000001391e-06, 5.167000000000366e-06, 4.277999999999921e-06, 5.1249999999981866e-06, 4.263000000000877e-06, 4.36200000000081e-06, 4.596999999998547e-06, 2.471999999999891e-06, 4.347000000001766e-06, 6.110999999999617e-06, 4.485999999997992e-06, 5.389000000001476e-06]}</msg>
<status status="PASS" starttime="20201110 08:37:20.172" endtime="20201110 08:37:20.175"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.168" endtime="20201110 08:37:20.175"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:20.179" level="INFO">${RESULT} = [{'time': 0.018350222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.018357778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:20.176" endtime="20201110 08:37:20.179"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:20.187" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.249999999999312e-06, 3.5140000000030702e-06, 2.4729999999993646e-06, 4.528000000000171e-06, 4.611000000001586e-06, 2.4589999999997947e-06, 3.790999999999517e-06, 4.596999999998547e-06, 5.2...</msg>
<status status="PASS" starttime="20201110 08:37:20.180" endtime="20201110 08:37:20.187"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:20.191" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:20.190" endtime="20201110 08:37:20.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:20.193" level="INFO">VALUE: [6.249999999999312e-06, 3.5140000000030702e-06, 2.4729999999993646e-06, 4.528000000000171e-06, 4.611000000001586e-06, 2.4589999999997947e-06, 3.790999999999517e-06, 4.596999999998547e-06, 5.278000000000921e-06, 3.249999999999781e-06, 5.9029999999980765e-06, 5.667000000000866e-06, 4.917000000000116e-06, 4.2499999999973115e-06, 2.9160000000021113e-06, 4.416000000000142e-06, 2.473000000002834e-06, 4.528000000000171e-06, 3.916999999999116e-06, 5.167000000000366e-06, 5.1249999999981866e-06, 4.36200000000081e-06, 2.471999999999891e-06, 6.110999999999617e-06, 5.389000000001476e-06]</msg>
<status status="PASS" starttime="20201110 08:37:20.192" endtime="20201110 08:37:20.194"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.188" endtime="20201110 08:37:20.195"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:20.197" endtime="20201110 08:37:20.198"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:20.200" endtime="20201110 08:37:20.220"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.199" endtime="20201110 08:37:20.220"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.195" endtime="20201110 08:37:20.221"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.833" endtime="20201110 08:37:20.221"></status>
</kw>
<msg timestamp="20201110 08:37:20.221" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:20.230" endtime="20201110 08:37:20.244"></status>
</kw>
<msg timestamp="20201110 08:37:20.245" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:20.228" endtime="20201110 08:37:20.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:20.247" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:20.246" endtime="20201110 08:37:20.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:20.248" endtime="20201110 08:37:20.250"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.225" endtime="20201110 08:37:20.250"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.223" endtime="20201110 08:37:20.251"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:20.257" endtime="20201110 08:37:20.524"></status>
</kw>
<msg timestamp="20201110 08:37:20.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018489236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018493139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:20.256" endtime="20201110 08:37:20.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:20.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018489236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018493139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:20.527" endtime="20201110 08:37:20.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:20.533" endtime="20201110 08:37:20.534"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.253" endtime="20201110 08:37:20.535"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.251" endtime="20201110 08:37:20.535"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:20.539" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:20.538" endtime="20201110 08:37:20.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:20.543" level="INFO">VALUE: [{'time': 0.018489236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018493139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.902999999999546e-06, 'source_diff': 3.902999999999546e-06}, {'time': 0.018497292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.152999999999796e-06, 'source_diff': 4.152999999999796e-06}, {'time': 0.018503597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.305000000001587e-06, 'source_diff': 6.305000000001587e-06}, {'time': 0.018507375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7779999999994207e-06, 'source_diff': 3.7779999999994207e-06}, {'time': 0.018511236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.861000000000836e-06, 'source_diff': 3.861000000000836e-06}, {'time': 0.01851375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5139999999986007e-06, 'source_diff': 2.5139999999986007e-06}, {'time': 0.018518542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.791999999999991e-06, 'source_diff': 4.791999999999991e-06}, {'time': 0.01852475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.208000000000602e-06, 'source_diff': 6.208000000000602e-06}, {'time': 0.018529819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.068999999999907e-06, 'source_diff': 5.068999999999907e-06}, {'time': 0.018534083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.264000000000351e-06, 'source_diff': 4.264000000000351e-06}, {'time': 0.018539264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.180999999999936e-06, 'source_diff': 5.180999999999936e-06}, {'time': 0.018542917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.6529999999992957e-06, 'source_diff': 3.6529999999992957e-06}, {'time': 0.018549083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.166000000001892e-06, 'source_diff': 6.166000000001892e-06}, {'time': 0.018552181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0979999999999897e-06, 'source_diff': 3.0979999999999897e-06}, {'time': 0.018554917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.735999999999711e-06, 'source_diff': 2.735999999999711e-06}, {'time': 0.018557778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.860999999999836e-06, 'source_diff': 2.860999999999836e-06}, {'time': 0.018560806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0279999999986706e-06, 'source_diff': 3.0279999999986706e-06}, {'time': 0.018564097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.2910000000024864e-06, 'source_diff': 3.2910000000024864e-06}, {'time': 0.018567625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5279999999991707e-06, 'source_diff': 3.5279999999991707e-06}, {'time': 0.018571667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.041999999999241e-06, 'source_diff': 4.041999999999241e-06}, {'time': 0.018577639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.018580194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5550000000013062e-06, 'source_diff': 2.5550000000013062e-06}, {'time': 0.018584153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.958999999997825e-06, 'source_diff': 3.958999999997825e-06}, {'time': 0.01859, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.018595097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.097000000002516e-06, 'source_diff': 5.097000000002516e-06}, {'time': 0.018600458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.360999999998867e-06, 'source_diff': 5.360999999998867e-06}, {'time': 0.018604056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5980000000004897e-06, 'source_diff': 3.5980000000004897e-06}, {'time': 0.018606639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.583000000000446e-06, 'source_diff': 2.583000000000446e-06}, {'time': 0.018612694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.054999999997868e-06, 'source_diff': 6.054999999997868e-06}, {'time': 0.018618667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.9729999999993955e-06, 'source_diff': 5.9729999999993955e-06}, {'time': 0.018623333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.666000000000392e-06, 'source_diff': 4.666000000000392e-06}, {'time': 0.018626736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.403000000002515e-06, 'source_diff': 3.403000000002515e-06}, {'time': 0.018629722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.985999999999961e-06, 'source_diff': 2.985999999999961e-06}, {'time': 0.018632667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9449999999972554e-06, 'source_diff': 2.9449999999972554e-06}, {'time': 0.018637306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.018643194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.887999999999033e-06, 'source_diff': 5.887999999999033e-06}, {'time': 0.018646, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.80600000000103e-06, 'source_diff': 2.80600000000103e-06}, {'time': 0.018651417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.417000000000616e-06, 'source_diff': 5.417000000000616e-06}, {'time': 0.018657389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.018662986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.596999999999547e-06, 'source_diff': 5.596999999999547e-06}, {'time': 0.018667653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.666999999999866e-06, 'source_diff': 4.666999999999866e-06}, {'time': 0.018672847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.194000000000032e-06, 'source_diff': 5.194000000000032e-06}, {'time': 0.018676056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2090000000005448e-06, 'source_diff': 3.2090000000005448e-06}, {'time': 0.018680389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.332999999998727e-06, 'source_diff': 4.332999999998727e-06}, {'time': 0.018686486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.097000000000047e-06, 'source_diff': 6.097000000000047e-06}, {'time': 0.018690403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.917000000002585e-06, 'source_diff': 3.917000000002585e-06}, {'time': 0.018695306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.902999999997076e-06, 'source_diff': 4.902999999997076e-06}, {'time': 0.018697917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6110000000030553e-06, 'source_diff': 2.6110000000030553e-06}, {'time': 0.018703944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.026999999998728e-06, 'source_diff': 6.026999999998728e-06}]</msg>
<status status="PASS" starttime="20201110 08:37:20.540" endtime="20201110 08:37:20.544"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.536" endtime="20201110 08:37:20.545"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:20.559" level="INFO">${debug-compressed} = {'diff': [0, 3.902999999999546e-06, 4.152999999999796e-06, 6.305000000001587e-06, 3.7779999999994207e-06, 3.861000000000836e-06, 2.5139999999986007e-06, 4.791999999999991e-06, 6.208000000000602e-06, 5...</msg>
<status status="PASS" starttime="20201110 08:37:20.545" endtime="20201110 08:37:20.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:20.563" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:20.562" endtime="20201110 08:37:20.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:20.566" level="INFO">VALUE: {'diff': [0, 3.902999999999546e-06, 4.152999999999796e-06, 6.305000000001587e-06, 3.7779999999994207e-06, 3.861000000000836e-06, 2.5139999999986007e-06, 4.791999999999991e-06, 6.208000000000602e-06, 5.068999999999907e-06, 4.264000000000351e-06, 5.180999999999936e-06, 3.6529999999992957e-06, 6.166000000001892e-06, 3.0979999999999897e-06, 2.735999999999711e-06, 2.860999999999836e-06, 3.0279999999986706e-06, 3.2910000000024864e-06, 3.5279999999991707e-06, 4.041999999999241e-06, 5.971999999999922e-06, 2.5550000000013062e-06, 3.958999999997825e-06, 5.846999999999797e-06, 5.097000000002516e-06, 5.360999999998867e-06, 3.5980000000004897e-06, 2.583000000000446e-06, 6.054999999997868e-06, 5.9729999999993955e-06, 4.666000000000392e-06, 3.403000000002515e-06, 2.985999999999961e-06, 2.9449999999972554e-06, 4.639000000000726e-06, 5.887999999999033e-06, 2.80600000000103e-06, 5.417000000000616e-06, 5.971999999999922e-06, 5.596999999999547e-06, 4.666999999999866e-06, 5.194000000000032e-06, 3.2090000000005448e-06, 4.332999999998727e-06, 6.097000000000047e-06, 3.917000000002585e-06, 4.902999999997076e-06, 2.6110000000030553e-06, 6.026999999998728e-06], 'time': [0.018489236, 0.018493139, 0.018497292, 0.018503597, 0.018507375, 0.018511236, 0.01851375, 0.018518542, 0.01852475, 0.018529819, 0.018534083, 0.018539264, 0.018542917, 0.018549083, 0.018552181, 0.018554917, 0.018557778, 0.018560806, 0.018564097, 0.018567625, 0.018571667, 0.018577639, 0.018580194, 0.018584153, 0.01859, 0.018595097, 0.018600458, 0.018604056, 0.018606639, 0.018612694, 0.018618667, 0.018623333, 0.018626736, 0.018629722, 0.018632667, 0.018637306, 0.018643194, 0.018646, 0.018651417, 0.018657389, 0.018662986, 0.018667653, 0.018672847, 0.018676056, 0.018680389, 0.018686486, 0.018690403, 0.018695306, 0.018697917, 0.018703944], 'eventsourcesource_diff': [0, 3.902999999999546e-06, 4.152999999999796e-06, 6.305000000001587e-06, 3.7779999999994207e-06, 3.861000000000836e-06, 2.5139999999986007e-06, 4.791999999999991e-06, 6.208000000000602e-06, 5.068999999999907e-06, 4.264000000000351e-06, 5.180999999999936e-06, 3.6529999999992957e-06, 6.166000000001892e-06, 3.0979999999999897e-06, 2.735999999999711e-06, 2.860999999999836e-06, 3.0279999999986706e-06, 3.2910000000024864e-06, 3.5279999999991707e-06, 4.041999999999241e-06, 5.971999999999922e-06, 2.5550000000013062e-06, 3.958999999997825e-06, 5.846999999999797e-06, 5.097000000002516e-06, 5.360999999998867e-06, 3.5980000000004897e-06, 2.583000000000446e-06, 6.054999999997868e-06, 5.9729999999993955e-06, 4.666000000000392e-06, 3.403000000002515e-06, 2.985999999999961e-06, 2.9449999999972554e-06, 4.639000000000726e-06, 5.887999999999033e-06, 2.80600000000103e-06, 5.417000000000616e-06, 5.971999999999922e-06, 5.596999999999547e-06, 4.666999999999866e-06, 5.194000000000032e-06, 3.2090000000005448e-06, 4.332999999998727e-06, 6.097000000000047e-06, 3.917000000002585e-06, 4.902999999997076e-06, 2.6110000000030553e-06, 6.026999999998728e-06]}</msg>
<status status="PASS" starttime="20201110 08:37:20.564" endtime="20201110 08:37:20.567"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.560" endtime="20201110 08:37:20.567"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:20.571" level="INFO">${RESULT} = [{'time': 0.018493139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.902999999999546e-06, 'source_diff': 3.902999999999546e-06}, {'time': 0.018503597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:20.568" endtime="20201110 08:37:20.571"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:20.579" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.902999999999546e-06, 6.305000000001587e-06, 3.861000000000836e-06, 4.791999999999991e-06, 5.068999999999907e-06, 5.180999999999936e-06, 6.166000000001892e-06, 2.735999999999711e-06, 3.0279...</msg>
<status status="PASS" starttime="20201110 08:37:20.572" endtime="20201110 08:37:20.579"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:20.583" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:20.582" endtime="20201110 08:37:20.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:20.585" level="INFO">VALUE: [3.902999999999546e-06, 6.305000000001587e-06, 3.861000000000836e-06, 4.791999999999991e-06, 5.068999999999907e-06, 5.180999999999936e-06, 6.166000000001892e-06, 2.735999999999711e-06, 3.0279999999986706e-06, 3.5279999999991707e-06, 5.971999999999922e-06, 3.958999999997825e-06, 5.097000000002516e-06, 3.5980000000004897e-06, 6.054999999997868e-06, 4.666000000000392e-06, 2.985999999999961e-06, 4.639000000000726e-06, 2.80600000000103e-06, 5.971999999999922e-06, 4.666999999999866e-06, 3.2090000000005448e-06, 6.097000000000047e-06, 4.902999999997076e-06, 6.026999999998728e-06]</msg>
<status status="PASS" starttime="20201110 08:37:20.584" endtime="20201110 08:37:20.586"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.580" endtime="20201110 08:37:20.587"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:20.589" endtime="20201110 08:37:20.590"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:20.592" endtime="20201110 08:37:20.612"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.591" endtime="20201110 08:37:20.613"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.587" endtime="20201110 08:37:20.613"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.222" endtime="20201110 08:37:20.614"></status>
</kw>
<msg timestamp="20201110 08:37:20.614" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:20.621" endtime="20201110 08:37:20.636"></status>
</kw>
<msg timestamp="20201110 08:37:20.636" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:20.620" endtime="20201110 08:37:20.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:20.638" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:20.637" endtime="20201110 08:37:20.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:20.639" endtime="20201110 08:37:20.641"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.617" endtime="20201110 08:37:20.642"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.616" endtime="20201110 08:37:20.642"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:20.649" endtime="20201110 08:37:20.918"></status>
</kw>
<msg timestamp="20201110 08:37:20.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017607153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017609528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:20.647" endtime="20201110 08:37:20.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:20.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017607153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017609528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:20.921" endtime="20201110 08:37:20.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:20.927" endtime="20201110 08:37:20.929"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.644" endtime="20201110 08:37:20.929"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.643" endtime="20201110 08:37:20.930"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:20.934" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:20.932" endtime="20201110 08:37:20.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:20.937" level="INFO">VALUE: [{'time': 0.017607153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017609528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3749999999989058e-06, 'source_diff': 2.3749999999989058e-06}, {'time': 0.017615792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.264000000002351e-06, 'source_diff': 6.264000000002351e-06}, {'time': 0.017619153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3609999999968665e-06, 'source_diff': 3.3609999999968665e-06}, {'time': 0.017624403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.250000000001781e-06, 'source_diff': 5.250000000001781e-06}, {'time': 0.017628917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.514000000000601e-06, 'source_diff': 4.514000000000601e-06}, {'time': 0.017632944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.027000000000197e-06, 'source_diff': 4.027000000000197e-06}, {'time': 0.017638681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.736999999998715e-06, 'source_diff': 5.736999999998715e-06}, {'time': 0.017644708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.026999999998728e-06, 'source_diff': 6.026999999998728e-06}, {'time': 0.017650458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.750000000002281e-06, 'source_diff': 5.750000000002281e-06}, {'time': 0.017653306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8479999999997396e-06, 'source_diff': 2.8479999999997396e-06}, {'time': 0.017656403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.097000000000516e-06, 'source_diff': 3.097000000000516e-06}, {'time': 0.017660736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.332999999998727e-06, 'source_diff': 4.332999999998727e-06}, {'time': 0.017663708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.972000000000391e-06, 'source_diff': 2.972000000000391e-06}, {'time': 0.017669014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.306000000000061e-06, 'source_diff': 5.306000000000061e-06}, {'time': 0.017672542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5279999999991707e-06, 'source_diff': 3.5279999999991707e-06}, {'time': 0.017677889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.017683236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.347000000002766e-06, 'source_diff': 5.347000000002766e-06}, {'time': 0.017685653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4169999999976155e-06, 'source_diff': 2.4169999999976155e-06}, {'time': 0.017690569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.916000000000642e-06, 'source_diff': 4.916000000000642e-06}, {'time': 0.017695681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.11200000000156e-06, 'source_diff': 5.11200000000156e-06}, {'time': 0.017698583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.901999999999072e-06, 'source_diff': 2.901999999999072e-06}, {'time': 0.017701431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8479999999997396e-06, 'source_diff': 2.8479999999997396e-06}, {'time': 0.017704389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.958000000000821e-06, 'source_diff': 2.958000000000821e-06}, {'time': 0.017708125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.736000000000711e-06, 'source_diff': 3.736000000000711e-06}, {'time': 0.017712056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9309999999986855e-06, 'source_diff': 3.9309999999986855e-06}, {'time': 0.017715389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.333000000001196e-06, 'source_diff': 3.333000000001196e-06}, {'time': 0.01771775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.360999999999336e-06, 'source_diff': 2.360999999999336e-06}, {'time': 0.017723278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.527999999997701e-06, 'source_diff': 5.527999999997701e-06}, {'time': 0.017726014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.735999999999711e-06, 'source_diff': 2.735999999999711e-06}, {'time': 0.017731986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.972000000003391e-06, 'source_diff': 5.972000000003391e-06}, {'time': 0.017737583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.596999999999547e-06, 'source_diff': 5.596999999999547e-06}, {'time': 0.017743875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.291999999998021e-06, 'source_diff': 6.291999999998021e-06}, {'time': 0.017749528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.017755639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.110999999999617e-06, 'source_diff': 6.110999999999617e-06}, {'time': 0.017758542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9029999999985456e-06, 'source_diff': 2.9029999999985456e-06}, {'time': 0.017761208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6660000000018613e-06, 'source_diff': 2.6660000000018613e-06}, {'time': 0.017765875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.666999999999866e-06, 'source_diff': 4.666999999999866e-06}, {'time': 0.017768597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.722000000000141e-06, 'source_diff': 2.722000000000141e-06}, {'time': 0.017771278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.681000000000905e-06, 'source_diff': 2.681000000000905e-06}, {'time': 0.017774431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.1529999999987957e-06, 'source_diff': 3.1529999999987957e-06}, {'time': 0.017778722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.291000000000017e-06, 'source_diff': 4.291000000000017e-06}, {'time': 0.0177845, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.778000000001421e-06, 'source_diff': 5.778000000001421e-06}, {'time': 0.017788347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.846999999997797e-06, 'source_diff': 3.846999999997797e-06}, {'time': 0.017791194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.847000000000266e-06, 'source_diff': 2.847000000000266e-06}, {'time': 0.017795458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.264000000000351e-06, 'source_diff': 4.264000000000351e-06}, {'time': 0.017798972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5139999999996008e-06, 'source_diff': 3.5139999999996008e-06}, {'time': 0.017803889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.917000000000116e-06, 'source_diff': 4.917000000000116e-06}, {'time': 0.017808292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.017811833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.540999999999267e-06, 'source_diff': 3.540999999999267e-06}]</msg>
<status status="PASS" starttime="20201110 08:37:20.935" endtime="20201110 08:37:20.938"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.930" endtime="20201110 08:37:20.939"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:20.953" level="INFO">${debug-compressed} = {'diff': [0, 2.3749999999989058e-06, 6.264000000002351e-06, 3.3609999999968665e-06, 5.250000000001781e-06, 4.514000000000601e-06, 4.027000000000197e-06, 5.736999999998715e-06, 6.026999999998728e-06, 5...</msg>
<status status="PASS" starttime="20201110 08:37:20.940" endtime="20201110 08:37:20.953"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:20.957" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:20.956" endtime="20201110 08:37:20.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:20.960" level="INFO">VALUE: {'diff': [0, 2.3749999999989058e-06, 6.264000000002351e-06, 3.3609999999968665e-06, 5.250000000001781e-06, 4.514000000000601e-06, 4.027000000000197e-06, 5.736999999998715e-06, 6.026999999998728e-06, 5.750000000002281e-06, 2.8479999999997396e-06, 3.097000000000516e-06, 4.332999999998727e-06, 2.972000000000391e-06, 5.306000000000061e-06, 3.5279999999991707e-06, 5.346999999999297e-06, 5.347000000002766e-06, 2.4169999999976155e-06, 4.916000000000642e-06, 5.11200000000156e-06, 2.901999999999072e-06, 2.8479999999997396e-06, 2.958000000000821e-06, 3.736000000000711e-06, 3.9309999999986855e-06, 3.333000000001196e-06, 2.360999999999336e-06, 5.527999999997701e-06, 2.735999999999711e-06, 5.972000000003391e-06, 5.596999999999547e-06, 6.291999999998021e-06, 5.653000000001296e-06, 6.110999999999617e-06, 2.9029999999985456e-06, 2.6660000000018613e-06, 4.666999999999866e-06, 2.722000000000141e-06, 2.681000000000905e-06, 3.1529999999987957e-06, 4.291000000000017e-06, 5.778000000001421e-06, 3.846999999997797e-06, 2.847000000000266e-06, 4.264000000000351e-06, 3.5139999999996008e-06, 4.917000000000116e-06, 4.403000000000046e-06, 3.540999999999267e-06], 'time': [0.017607153, 0.017609528, 0.017615792, 0.017619153, 0.017624403, 0.017628917, 0.017632944, 0.017638681, 0.017644708, 0.017650458, 0.017653306, 0.017656403, 0.017660736, 0.017663708, 0.017669014, 0.017672542, 0.017677889, 0.017683236, 0.017685653, 0.017690569, 0.017695681, 0.017698583, 0.017701431, 0.017704389, 0.017708125, 0.017712056, 0.017715389, 0.01771775, 0.017723278, 0.017726014, 0.017731986, 0.017737583, 0.017743875, 0.017749528, 0.017755639, 0.017758542, 0.017761208, 0.017765875, 0.017768597, 0.017771278, 0.017774431, 0.017778722, 0.0177845, 0.017788347, 0.017791194, 0.017795458, 0.017798972, 0.017803889, 0.017808292, 0.017811833], 'eventsourcesource_diff': [0, 2.3749999999989058e-06, 6.264000000002351e-06, 3.3609999999968665e-06, 5.250000000001781e-06, 4.514000000000601e-06, 4.027000000000197e-06, 5.736999999998715e-06, 6.026999999998728e-06, 5.750000000002281e-06, 2.8479999999997396e-06, 3.097000000000516e-06, 4.332999999998727e-06, 2.972000000000391e-06, 5.306000000000061e-06, 3.5279999999991707e-06, 5.346999999999297e-06, 5.347000000002766e-06, 2.4169999999976155e-06, 4.916000000000642e-06, 5.11200000000156e-06, 2.901999999999072e-06, 2.8479999999997396e-06, 2.958000000000821e-06, 3.736000000000711e-06, 3.9309999999986855e-06, 3.333000000001196e-06, 2.360999999999336e-06, 5.527999999997701e-06, 2.735999999999711e-06, 5.972000000003391e-06, 5.596999999999547e-06, 6.291999999998021e-06, 5.653000000001296e-06, 6.110999999999617e-06, 2.9029999999985456e-06, 2.6660000000018613e-06, 4.666999999999866e-06, 2.722000000000141e-06, 2.681000000000905e-06, 3.1529999999987957e-06, 4.291000000000017e-06, 5.778000000001421e-06, 3.846999999997797e-06, 2.847000000000266e-06, 4.264000000000351e-06, 3.5139999999996008e-06, 4.917000000000116e-06, 4.403000000000046e-06, 3.540999999999267e-06]}</msg>
<status status="PASS" starttime="20201110 08:37:20.958" endtime="20201110 08:37:20.960"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.954" endtime="20201110 08:37:20.961"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:20.964" level="INFO">${RESULT} = [{'time': 0.017609528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3749999999989058e-06, 'source_diff': 2.3749999999989058e-06}, {'time': 0.017619153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:20.962" endtime="20201110 08:37:20.964"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:20.973" level="INFO">${GPIO_OVERHEAD} = {'diff': [2.3749999999989058e-06, 3.3609999999968665e-06, 4.514000000000601e-06, 5.736999999998715e-06, 5.750000000002281e-06, 3.097000000000516e-06, 2.972000000000391e-06, 3.5279999999991707e-06, 5.3...</msg>
<status status="PASS" starttime="20201110 08:37:20.965" endtime="20201110 08:37:20.973"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:20.977" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:20.976" endtime="20201110 08:37:20.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:20.979" level="INFO">VALUE: [2.3749999999989058e-06, 3.3609999999968665e-06, 4.514000000000601e-06, 5.736999999998715e-06, 5.750000000002281e-06, 3.097000000000516e-06, 2.972000000000391e-06, 3.5279999999991707e-06, 5.347000000002766e-06, 4.916000000000642e-06, 2.901999999999072e-06, 2.958000000000821e-06, 3.9309999999986855e-06, 2.360999999999336e-06, 2.735999999999711e-06, 5.596999999999547e-06, 5.653000000001296e-06, 2.9029999999985456e-06, 4.666999999999866e-06, 2.681000000000905e-06, 4.291000000000017e-06, 3.846999999997797e-06, 4.264000000000351e-06, 4.917000000000116e-06, 3.540999999999267e-06]</msg>
<status status="PASS" starttime="20201110 08:37:20.978" endtime="20201110 08:37:20.980"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.974" endtime="20201110 08:37:20.980"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:20.983" endtime="20201110 08:37:20.984"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:20.986" endtime="20201110 08:37:21.006"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.985" endtime="20201110 08:37:21.006"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.981" endtime="20201110 08:37:21.007"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.614" endtime="20201110 08:37:21.007"></status>
</kw>
<msg timestamp="20201110 08:37:21.007" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.015" endtime="20201110 08:37:21.030"></status>
</kw>
<msg timestamp="20201110 08:37:21.030" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:21.013" endtime="20201110 08:37:21.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.033" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:21.031" endtime="20201110 08:37:21.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.034" endtime="20201110 08:37:21.035"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.011" endtime="20201110 08:37:21.036"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.009" endtime="20201110 08:37:21.036"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.043" endtime="20201110 08:37:21.310"></status>
</kw>
<msg timestamp="20201110 08:37:21.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017596708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017599611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:21.041" endtime="20201110 08:37:21.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017596708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017599611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:21.313" endtime="20201110 08:37:21.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.319" endtime="20201110 08:37:21.320"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.038" endtime="20201110 08:37:21.321"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.037" endtime="20201110 08:37:21.321"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.325" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:21.324" endtime="20201110 08:37:21.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.329" level="INFO">VALUE: [{'time': 0.017596708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017599611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.903000000002015e-06, 'source_diff': 2.903000000002015e-06}, {'time': 0.017603597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.9859999999974915e-06, 'source_diff': 3.9859999999974915e-06}, {'time': 0.017607319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.722000000001141e-06, 'source_diff': 3.722000000001141e-06}, {'time': 0.017611417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.09800000000099e-06, 'source_diff': 4.09800000000099e-06}, {'time': 0.017614222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.804999999998087e-06, 'source_diff': 2.804999999998087e-06}, {'time': 0.017619306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.08400000000242e-06, 'source_diff': 5.08400000000242e-06}, {'time': 0.017622861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.554999999998837e-06, 'source_diff': 3.554999999998837e-06}, {'time': 0.017627292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.430999999999186e-06, 'source_diff': 4.430999999999186e-06}, {'time': 0.017631806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.514000000000601e-06, 'source_diff': 4.514000000000601e-06}, {'time': 0.017638097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.290999999998548e-06, 'source_diff': 6.290999999998548e-06}, {'time': 0.017640806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7090000000000447e-06, 'source_diff': 2.7090000000000447e-06}, {'time': 0.017645403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.597000000002016e-06, 'source_diff': 4.597000000002016e-06}, {'time': 0.017648194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.790999999998517e-06, 'source_diff': 2.790999999998517e-06}, {'time': 0.017652625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.431000000002655e-06, 'source_diff': 4.431000000002655e-06}, {'time': 0.017654958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3329999999967266e-06, 'source_diff': 2.3329999999967266e-06}, {'time': 0.017658514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.55600000000178e-06, 'source_diff': 3.55600000000178e-06}, {'time': 0.017661764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.249999999999781e-06, 'source_diff': 3.249999999999781e-06}, {'time': 0.017665639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.875000000000406e-06, 'source_diff': 3.875000000000406e-06}, {'time': 0.017669931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.291999999999491e-06, 'source_diff': 4.291999999999491e-06}, {'time': 0.017675208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.277000000001447e-06, 'source_diff': 5.277000000001447e-06}, {'time': 0.017681056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8479999999992704e-06, 'source_diff': 5.8479999999992704e-06}, {'time': 0.017683681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6249999999991558e-06, 'source_diff': 2.6249999999991558e-06}, {'time': 0.017689264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.582999999999977e-06, 'source_diff': 5.582999999999977e-06}, {'time': 0.017694056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.791999999999991e-06, 'source_diff': 4.791999999999991e-06}, {'time': 0.017699528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.017702444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9160000000021113e-06, 'source_diff': 2.9160000000021113e-06}, {'time': 0.017705736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2919999999984906e-06, 'source_diff': 3.2919999999984906e-06}, {'time': 0.017708833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.097000000000516e-06, 'source_diff': 3.097000000000516e-06}, {'time': 0.017711361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5279999999981706e-06, 'source_diff': 2.5279999999981706e-06}, {'time': 0.017715347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.986000000000961e-06, 'source_diff': 3.986000000000961e-06}, {'time': 0.017721375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.028000000001671e-06, 'source_diff': 6.028000000001671e-06}, {'time': 0.017724819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4439999999982818e-06, 'source_diff': 3.4439999999982818e-06}, {'time': 0.017728014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.195000000000975e-06, 'source_diff': 3.195000000000975e-06}, {'time': 0.017733069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.055000000000337e-06, 'source_diff': 5.055000000000337e-06}, {'time': 0.017738486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.417000000000616e-06, 'source_diff': 5.417000000000616e-06}, {'time': 0.017741944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4579999999978517e-06, 'source_diff': 3.4579999999978517e-06}, {'time': 0.017745667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7230000000006147e-06, 'source_diff': 3.7230000000006147e-06}, {'time': 0.017749236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5690000000018762e-06, 'source_diff': 3.5690000000018762e-06}, {'time': 0.017755375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.1389999999987566e-06, 'source_diff': 6.1389999999987566e-06}, {'time': 0.017760972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.596999999999547e-06, 'source_diff': 5.596999999999547e-06}, {'time': 0.017765944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.971999999998922e-06, 'source_diff': 4.971999999998922e-06}, {'time': 0.017768306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.362000000002279e-06, 'source_diff': 2.362000000002279e-06}, {'time': 0.017770639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.333000000000196e-06, 'source_diff': 2.333000000000196e-06}, {'time': 0.017775681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.017781486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.804999999997618e-06, 'source_diff': 5.804999999997618e-06}, {'time': 0.017787139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.017791986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.846999999998797e-06, 'source_diff': 4.846999999998797e-06}, {'time': 0.017795153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.167000000001835e-06, 'source_diff': 3.167000000001835e-06}, {'time': 0.017799681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.528000000000171e-06, 'source_diff': 4.528000000000171e-06}]</msg>
<status status="PASS" starttime="20201110 08:37:21.326" endtime="20201110 08:37:21.330"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.322" endtime="20201110 08:37:21.330"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:21.345" level="INFO">${debug-compressed} = {'diff': [0, 2.903000000002015e-06, 3.9859999999974915e-06, 3.722000000001141e-06, 4.09800000000099e-06, 2.804999999998087e-06, 5.08400000000242e-06, 3.554999999998837e-06, 4.430999999999186e-06, 4.51...</msg>
<status status="PASS" starttime="20201110 08:37:21.331" endtime="20201110 08:37:21.345"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.349" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:21.348" endtime="20201110 08:37:21.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.352" level="INFO">VALUE: {'diff': [0, 2.903000000002015e-06, 3.9859999999974915e-06, 3.722000000001141e-06, 4.09800000000099e-06, 2.804999999998087e-06, 5.08400000000242e-06, 3.554999999998837e-06, 4.430999999999186e-06, 4.514000000000601e-06, 6.290999999998548e-06, 2.7090000000000447e-06, 4.597000000002016e-06, 2.790999999998517e-06, 4.431000000002655e-06, 2.3329999999967266e-06, 3.55600000000178e-06, 3.249999999999781e-06, 3.875000000000406e-06, 4.291999999999491e-06, 5.277000000001447e-06, 5.8479999999992704e-06, 2.6249999999991558e-06, 5.582999999999977e-06, 4.791999999999991e-06, 5.471999999999422e-06, 2.9160000000021113e-06, 3.2919999999984906e-06, 3.097000000000516e-06, 2.5279999999981706e-06, 3.986000000000961e-06, 6.028000000001671e-06, 3.4439999999982818e-06, 3.195000000000975e-06, 5.055000000000337e-06, 5.417000000000616e-06, 3.4579999999978517e-06, 3.7230000000006147e-06, 3.5690000000018762e-06, 6.1389999999987566e-06, 5.596999999999547e-06, 4.971999999998922e-06, 2.362000000002279e-06, 2.333000000000196e-06, 5.042000000000241e-06, 5.804999999997618e-06, 5.653000000001296e-06, 4.846999999998797e-06, 3.167000000001835e-06, 4.528000000000171e-06], 'time': [0.017596708, 0.017599611, 0.017603597, 0.017607319, 0.017611417, 0.017614222, 0.017619306, 0.017622861, 0.017627292, 0.017631806, 0.017638097, 0.017640806, 0.017645403, 0.017648194, 0.017652625, 0.017654958, 0.017658514, 0.017661764, 0.017665639, 0.017669931, 0.017675208, 0.017681056, 0.017683681, 0.017689264, 0.017694056, 0.017699528, 0.017702444, 0.017705736, 0.017708833, 0.017711361, 0.017715347, 0.017721375, 0.017724819, 0.017728014, 0.017733069, 0.017738486, 0.017741944, 0.017745667, 0.017749236, 0.017755375, 0.017760972, 0.017765944, 0.017768306, 0.017770639, 0.017775681, 0.017781486, 0.017787139, 0.017791986, 0.017795153, 0.017799681], 'eventsource': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'source_diff': [0, 2.903000000002015e-06, 3.9859999999974915e-06, 3.722000000001141e-06, 4.09800000000099e-06, 2.804999999998087e-06, 5.08400000000242e-06, 3.554999999998837e-06, 4.430999999999186e-06, 4.514000000000601e-06, 6.290999999998548e-06, 2.7090000000000447e-06, 4.597000000002016e-06, 2.790999999998517e-06, 4.431000000002655e-06, 2.3329999999967266e-06, 3.55600000000178e-06, 3.249999999999781e-06, 3.875000000000406e-06, 4.291999999999491e-06, 5.277000000001447e-06, 5.8479999999992704e-06, 2.6249999999991558e-06, 5.582999999999977e-06, 4.791999999999991e-06, 5.471999999999422e-06, 2.9160000000021113e-06, 3.2919999999984906e-06, 3.097000000000516e-06, 2.5279999999981706e-06, 3.986000000000961e-06, 6.028000000001671e-06, 3.4439999999982818e-06, 3.195000000000975e-06, 5.055000000000337e-06, 5.417000000000616e-06, 3.4579999999978517e-06, 3.7230000000006147e-06, 3.5690000000018762e-06, 6.1389999999987566e-06, 5.596999999999547e-06, 4.971999999998922e-06, 2.362000000002279e-06, 2.333000000000196e-06, 5.042000000000241e-06, 5.804999999997618e-06, 5.653000000001296e-06, 4.846999999998797e-06, 3.167000000001835e-06, 4.528000000000171e-06]}</msg>
<status status="PASS" starttime="20201110 08:37:21.350" endtime="20201110 08:37:21.353"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.346" endtime="20201110 08:37:21.353"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:21.356" level="INFO">${RESULT} = [{'time': 0.017599611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.903000000002015e-06, 'source_diff': 2.903000000002015e-06}, {'time': 0.017607319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:21.354" endtime="20201110 08:37:21.357"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:21.365" level="INFO">${GPIO_OVERHEAD} = {'diff': [2.903000000002015e-06, 3.722000000001141e-06, 2.804999999998087e-06, 3.554999999998837e-06, 4.514000000000601e-06, 2.7090000000000447e-06, 2.790999999998517e-06, 2.3329999999967266e-06, 3.24...</msg>
<status status="PASS" starttime="20201110 08:37:21.357" endtime="20201110 08:37:21.365"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.369" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:21.368" endtime="20201110 08:37:21.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.371" level="INFO">VALUE: [2.903000000002015e-06, 3.722000000001141e-06, 2.804999999998087e-06, 3.554999999998837e-06, 4.514000000000601e-06, 2.7090000000000447e-06, 2.790999999998517e-06, 2.3329999999967266e-06, 3.249999999999781e-06, 4.291999999999491e-06, 5.8479999999992704e-06, 5.582999999999977e-06, 5.471999999999422e-06, 3.2919999999984906e-06, 2.5279999999981706e-06, 6.028000000001671e-06, 3.195000000000975e-06, 5.417000000000616e-06, 3.7230000000006147e-06, 6.1389999999987566e-06, 4.971999999998922e-06, 2.333000000000196e-06, 5.804999999997618e-06, 4.846999999998797e-06, 4.528000000000171e-06]</msg>
<status status="PASS" starttime="20201110 08:37:21.370" endtime="20201110 08:37:21.372"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.365" endtime="20201110 08:37:21.372"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.374" endtime="20201110 08:37:21.376"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:21.378" endtime="20201110 08:37:21.397"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.376" endtime="20201110 08:37:21.398"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.373" endtime="20201110 08:37:21.398"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.008" endtime="20201110 08:37:21.398"></status>
</kw>
<msg timestamp="20201110 08:37:21.399" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.406" endtime="20201110 08:37:21.421"></status>
</kw>
<msg timestamp="20201110 08:37:21.422" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:21.405" endtime="20201110 08:37:21.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.424" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:21.423" endtime="20201110 08:37:21.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.425" endtime="20201110 08:37:21.427"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.402" endtime="20201110 08:37:21.427"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.400" endtime="20201110 08:37:21.428"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.434" endtime="20201110 08:37:21.701"></status>
</kw>
<msg timestamp="20201110 08:37:21.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017535653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017541389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:21.433" endtime="20201110 08:37:21.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017535653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017541389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:21.704" endtime="20201110 08:37:21.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.710" endtime="20201110 08:37:21.711"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.430" endtime="20201110 08:37:21.712"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.428" endtime="20201110 08:37:21.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.716" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:21.715" endtime="20201110 08:37:21.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.720" level="INFO">VALUE: [{'time': 0.017535653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017541389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.736000000002711e-06, 'source_diff': 5.736000000002711e-06}, {'time': 0.017546236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.846999999998797e-06, 'source_diff': 4.846999999998797e-06}, {'time': 0.017549333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.097000000000516e-06, 'source_diff': 3.097000000000516e-06}, {'time': 0.017552306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9729999999998646e-06, 'source_diff': 2.9729999999998646e-06}, {'time': 0.017556083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.776999999999947e-06, 'source_diff': 3.776999999999947e-06}, {'time': 0.01755975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.6669999999988656e-06, 'source_diff': 3.6669999999988656e-06}, {'time': 0.017565556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.806000000000561e-06, 'source_diff': 5.806000000000561e-06}, {'time': 0.017571389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.833000000000227e-06, 'source_diff': 5.833000000000227e-06}, {'time': 0.01757425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.860999999999836e-06, 'source_diff': 2.860999999999836e-06}, {'time': 0.017577847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.597000000001016e-06, 'source_diff': 3.597000000001016e-06}, {'time': 0.017582389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.541999999999741e-06, 'source_diff': 4.541999999999741e-06}, {'time': 0.017586486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.096999999998047e-06, 'source_diff': 4.096999999998047e-06}, {'time': 0.017590083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.597000000001016e-06, 'source_diff': 3.597000000001016e-06}, {'time': 0.017592639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.55600000000078e-06, 'source_diff': 2.55600000000078e-06}, {'time': 0.017595472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.833000000000696e-06, 'source_diff': 2.833000000000696e-06}, {'time': 0.017599083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.611000000000586e-06, 'source_diff': 3.611000000000586e-06}, {'time': 0.017604292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.2089999999990755e-06, 'source_diff': 5.2089999999990755e-06}, {'time': 0.017609833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.540999999997798e-06, 'source_diff': 5.540999999997798e-06}, {'time': 0.017615375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.542000000000741e-06, 'source_diff': 5.542000000000741e-06}, {'time': 0.017618472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.097000000000516e-06, 'source_diff': 3.097000000000516e-06}, {'time': 0.017622014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5419999999987406e-06, 'source_diff': 3.5419999999987406e-06}, {'time': 0.017625125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.111000000000086e-06, 'source_diff': 3.111000000000086e-06}, {'time': 0.017628653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.52800000000264e-06, 'source_diff': 3.52800000000264e-06}, {'time': 0.017633431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.778000000000421e-06, 'source_diff': 4.778000000000421e-06}, {'time': 0.017637306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8749999999969365e-06, 'source_diff': 3.8749999999969365e-06}, {'time': 0.017643069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.763000000002377e-06, 'source_diff': 5.763000000002377e-06}, {'time': 0.017645861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7919999999979905e-06, 'source_diff': 2.7919999999979905e-06}, {'time': 0.017652153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.292000000001491e-06, 'source_diff': 6.292000000001491e-06}, {'time': 0.017657931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.778000000001421e-06, 'source_diff': 5.778000000001421e-06}, {'time': 0.01766175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.818999999998657e-06, 'source_diff': 3.818999999998657e-06}, {'time': 0.017665569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.818999999998657e-06, 'source_diff': 3.818999999998657e-06}, {'time': 0.017671083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.514000000001601e-06, 'source_diff': 5.514000000001601e-06}, {'time': 0.017673458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3749999999989058e-06, 'source_diff': 2.3749999999989058e-06}, {'time': 0.017677083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.625000000000156e-06, 'source_diff': 3.625000000000156e-06}, {'time': 0.017680944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.861000000000836e-06, 'source_diff': 3.861000000000836e-06}, {'time': 0.017683264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3200000000000998e-06, 'source_diff': 2.3200000000000998e-06}, {'time': 0.01768875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.485999999998992e-06, 'source_diff': 5.485999999998992e-06}, {'time': 0.017693847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.096999999999047e-06, 'source_diff': 5.096999999999047e-06}, {'time': 0.017696736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.889000000002445e-06, 'source_diff': 2.889000000002445e-06}, {'time': 0.017702042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.306000000000061e-06, 'source_diff': 5.306000000000061e-06}, {'time': 0.017707639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.596999999999547e-06, 'source_diff': 5.596999999999547e-06}, {'time': 0.017712486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.846999999998797e-06, 'source_diff': 4.846999999998797e-06}, {'time': 0.017715042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.55600000000078e-06, 'source_diff': 2.55600000000078e-06}, {'time': 0.017719875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.832999999999227e-06, 'source_diff': 4.832999999999227e-06}, {'time': 0.017724861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.986000000001961e-06, 'source_diff': 4.986000000001961e-06}, {'time': 0.017730958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.097000000000047e-06, 'source_diff': 6.097000000000047e-06}, {'time': 0.017735056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.09799999999752e-06, 'source_diff': 4.09799999999752e-06}, {'time': 0.017738847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.790999999999517e-06, 'source_diff': 3.790999999999517e-06}, {'time': 0.017743014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.167000000002835e-06, 'source_diff': 4.167000000002835e-06}]</msg>
<status status="PASS" starttime="20201110 08:37:21.717" endtime="20201110 08:37:21.721"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.713" endtime="20201110 08:37:21.721"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:21.736" level="INFO">${debug-compressed} = {'diff': [0, 5.736000000002711e-06, 4.846999999998797e-06, 3.097000000000516e-06, 2.9729999999998646e-06, 3.776999999999947e-06, 3.6669999999988656e-06, 5.806000000000561e-06, 5.833000000000227e-06, 2...</msg>
<status status="PASS" starttime="20201110 08:37:21.722" endtime="20201110 08:37:21.736"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.740" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:21.739" endtime="20201110 08:37:21.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.743" level="INFO">VALUE: {'diff': [0, 5.736000000002711e-06, 4.846999999998797e-06, 3.097000000000516e-06, 2.9729999999998646e-06, 3.776999999999947e-06, 3.6669999999988656e-06, 5.806000000000561e-06, 5.833000000000227e-06, 2.860999999999836e-06, 3.597000000001016e-06, 4.541999999999741e-06, 4.096999999998047e-06, 3.597000000001016e-06, 2.55600000000078e-06, 2.833000000000696e-06, 3.611000000000586e-06, 5.2089999999990755e-06, 5.540999999997798e-06, 5.542000000000741e-06, 3.097000000000516e-06, 3.5419999999987406e-06, 3.111000000000086e-06, 3.52800000000264e-06, 4.778000000000421e-06, 3.8749999999969365e-06, 5.763000000002377e-06, 2.7919999999979905e-06, 6.292000000001491e-06, 5.778000000001421e-06, 3.818999999998657e-06, 3.818999999998657e-06, 5.514000000001601e-06, 2.3749999999989058e-06, 3.625000000000156e-06, 3.861000000000836e-06, 2.3200000000000998e-06, 5.485999999998992e-06, 5.096999999999047e-06, 2.889000000002445e-06, 5.306000000000061e-06, 5.596999999999547e-06, 4.846999999998797e-06, 2.55600000000078e-06, 4.832999999999227e-06, 4.986000000001961e-06, 6.097000000000047e-06, 4.09799999999752e-06, 3.790999999999517e-06, 4.167000000002835e-06], 'time': [0.017535653, 0.017541389, 0.017546236, 0.017549333, 0.017552306, 0.017556083, 0.01755975, 0.017565556, 0.017571389, 0.01757425, 0.017577847, 0.017582389, 0.017586486, 0.017590083, 0.017592639, 0.017595472, 0.017599083, 0.017604292, 0.017609833, 0.017615375, 0.017618472, 0.017622014, 0.017625125, 0.017628653, 0.017633431, 0.017637306, 0.017643069, 0.017645861, 0.017652153, 0.017657931, 0.01766175, 0.017665569, 0.017671083, 0.017673458, 0.017677083, 0.017680944, 0.017683264, 0.01768875, 0.017693847, 0.017696736, 0.017702042, 0.017707639, 0.017712486, 0.017715042, 0.017719875, 0.017724861, 0.017730958, 0.017735056, 0.017738847, 0.017743014], 'eventsourcesource_diff': [0, 5.736000000002711e-06, 4.846999999998797e-06, 3.097000000000516e-06, 2.9729999999998646e-06, 3.776999999999947e-06, 3.6669999999988656e-06, 5.806000000000561e-06, 5.833000000000227e-06, 2.860999999999836e-06, 3.597000000001016e-06, 4.541999999999741e-06, 4.096999999998047e-06, 3.597000000001016e-06, 2.55600000000078e-06, 2.833000000000696e-06, 3.611000000000586e-06, 5.2089999999990755e-06, 5.540999999997798e-06, 5.542000000000741e-06, 3.097000000000516e-06, 3.5419999999987406e-06, 3.111000000000086e-06, 3.52800000000264e-06, 4.778000000000421e-06, 3.8749999999969365e-06, 5.763000000002377e-06, 2.7919999999979905e-06, 6.292000000001491e-06, 5.778000000001421e-06, 3.818999999998657e-06, 3.818999999998657e-06, 5.514000000001601e-06, 2.3749999999989058e-06, 3.625000000000156e-06, 3.861000000000836e-06, 2.3200000000000998e-06, 5.485999999998992e-06, 5.096999999999047e-06, 2.889000000002445e-06, 5.306000000000061e-06, 5.596999999999547e-06, 4.846999999998797e-06, 2.55600000000078e-06, 4.832999999999227e-06, 4.986000000001961e-06, 6.097000000000047e-06, 4.09799999999752e-06, 3.790999999999517e-06, 4.167000000002835e-06]}</msg>
<status status="PASS" starttime="20201110 08:37:21.741" endtime="20201110 08:37:21.743"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.737" endtime="20201110 08:37:21.744"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:21.747" level="INFO">${RESULT} = [{'time': 0.017541389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.736000000002711e-06, 'source_diff': 5.736000000002711e-06}, {'time': 0.017549333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:21.745" endtime="20201110 08:37:21.747"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:21.755" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.736000000002711e-06, 3.097000000000516e-06, 3.776999999999947e-06, 5.806000000000561e-06, 2.860999999999836e-06, 4.541999999999741e-06, 3.597000000001016e-06, 2.833000000000696e-06, 5.2089...</msg>
<status status="PASS" starttime="20201110 08:37:21.748" endtime="20201110 08:37:21.756"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.760" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:21.759" endtime="20201110 08:37:21.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.762" level="INFO">VALUE: [5.736000000002711e-06, 3.097000000000516e-06, 3.776999999999947e-06, 5.806000000000561e-06, 2.860999999999836e-06, 4.541999999999741e-06, 3.597000000001016e-06, 2.833000000000696e-06, 5.2089999999990755e-06, 5.542000000000741e-06, 3.5419999999987406e-06, 3.52800000000264e-06, 3.8749999999969365e-06, 2.7919999999979905e-06, 5.778000000001421e-06, 3.818999999998657e-06, 2.3749999999989058e-06, 3.861000000000836e-06, 5.485999999998992e-06, 2.889000000002445e-06, 5.596999999999547e-06, 2.55600000000078e-06, 4.986000000001961e-06, 4.09799999999752e-06, 4.167000000002835e-06]</msg>
<status status="PASS" starttime="20201110 08:37:21.761" endtime="20201110 08:37:21.763"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.756" endtime="20201110 08:37:21.764"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.766" endtime="20201110 08:37:21.767"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:21.769" endtime="20201110 08:37:21.789"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.768" endtime="20201110 08:37:21.790"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.764" endtime="20201110 08:37:21.791"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.399" endtime="20201110 08:37:21.791"></status>
</kw>
<msg timestamp="20201110 08:37:21.791" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.802" endtime="20201110 08:37:21.821"></status>
</kw>
<msg timestamp="20201110 08:37:21.823" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:21.800" endtime="20201110 08:37:21.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.828" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:21.825" endtime="20201110 08:37:21.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.831" endtime="20201110 08:37:21.834"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.797" endtime="20201110 08:37:21.836"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.794" endtime="20201110 08:37:21.838"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.857" endtime="20201110 08:37:22.130"></status>
</kw>
<msg timestamp="20201110 08:37:22.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022290056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022295028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:21.854" endtime="20201110 08:37:22.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022290056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022295028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:22.133" endtime="20201110 08:37:22.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:22.138" endtime="20201110 08:37:22.140"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.846" endtime="20201110 08:37:22.140"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.840" endtime="20201110 08:37:22.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.145" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:22.144" endtime="20201110 08:37:22.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.148" level="INFO">VALUE: [{'time': 0.022290056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022295028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.972000000002391e-06, 'source_diff': 4.972000000002391e-06}, {'time': 0.022300069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.040999999997298e-06, 'source_diff': 5.040999999997298e-06}, {'time': 0.022305403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.33400000000267e-06, 'source_diff': 5.33400000000267e-06}, {'time': 0.022310514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.110999999998617e-06, 'source_diff': 5.110999999998617e-06}, {'time': 0.022314069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.554999999998837e-06, 'source_diff': 3.554999999998837e-06}, {'time': 0.022320347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.278000000001921e-06, 'source_diff': 6.278000000001921e-06}, {'time': 0.022324611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.264000000000351e-06, 'source_diff': 4.264000000000351e-06}, {'time': 0.022328083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4719999999974216e-06, 'source_diff': 3.4719999999974216e-06}, {'time': 0.022333389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.306000000000061e-06, 'source_diff': 5.306000000000061e-06}, {'time': 0.022337681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.29200000000296e-06, 'source_diff': 4.29200000000296e-06}, {'time': 0.022342222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.540999999996798e-06, 'source_diff': 4.540999999996798e-06}, {'time': 0.022345639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.417000000002085e-06, 'source_diff': 3.417000000002085e-06}, {'time': 0.022351792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.1529999999983265e-06, 'source_diff': 6.1529999999983265e-06}, {'time': 0.022357833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.041000000001767e-06, 'source_diff': 6.041000000001767e-06}, {'time': 0.022363431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5979999999990204e-06, 'source_diff': 5.5979999999990204e-06}, {'time': 0.022366972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.540999999999267e-06, 'source_diff': 3.540999999999267e-06}, {'time': 0.022371069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.022373806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7369999999991845e-06, 'source_diff': 2.7369999999991845e-06}, {'time': 0.022376583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.776999999998947e-06, 'source_diff': 2.776999999998947e-06}, {'time': 0.0223805, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.917000000002585e-06, 'source_diff': 3.917000000002585e-06}, {'time': 0.022386528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0279999999982015e-06, 'source_diff': 6.0279999999982015e-06}, {'time': 0.022389514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.985999999999961e-06, 'source_diff': 2.985999999999961e-06}, {'time': 0.022394417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.903000000000546e-06, 'source_diff': 4.903000000000546e-06}, {'time': 0.022397972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.554999999998837e-06, 'source_diff': 3.554999999998837e-06}, {'time': 0.022401375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.403000000002515e-06, 'source_diff': 3.403000000002515e-06}, {'time': 0.022406042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.666999999999866e-06, 'source_diff': 4.666999999999866e-06}, {'time': 0.022410958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.916000000000642e-06, 'source_diff': 4.916000000000642e-06}, {'time': 0.022414194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.2359999999967415e-06, 'source_diff': 3.2359999999967415e-06}, {'time': 0.022418333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.139000000000226e-06, 'source_diff': 4.139000000000226e-06}, {'time': 0.022422556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.223000000001115e-06, 'source_diff': 4.223000000001115e-06}, {'time': 0.022426417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.861000000000836e-06, 'source_diff': 3.861000000000836e-06}, {'time': 0.022429819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.401999999999572e-06, 'source_diff': 3.401999999999572e-06}, {'time': 0.022432681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8619999999993095e-06, 'source_diff': 2.8619999999993095e-06}, {'time': 0.022436167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.486000000000461e-06, 'source_diff': 3.486000000000461e-06}, {'time': 0.02244125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.082999999999477e-06, 'source_diff': 5.082999999999477e-06}, {'time': 0.022446333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.082999999999477e-06, 'source_diff': 5.082999999999477e-06}, {'time': 0.022450764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.431000000002655e-06, 'source_diff': 4.431000000002655e-06}, {'time': 0.022454486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7219999999976716e-06, 'source_diff': 3.7219999999976716e-06}, {'time': 0.022460403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.917000000001116e-06, 'source_diff': 5.917000000001116e-06}, {'time': 0.022464625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.221999999998172e-06, 'source_diff': 4.221999999998172e-06}, {'time': 0.022468528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.903000000003015e-06, 'source_diff': 3.903000000003015e-06}, {'time': 0.022472806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.277999999999921e-06, 'source_diff': 4.277999999999921e-06}, {'time': 0.022476181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.374999999999906e-06, 'source_diff': 3.374999999999906e-06}, {'time': 0.022482403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.022488569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.165999999998423e-06, 'source_diff': 6.165999999998423e-06}, {'time': 0.022492236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.6669999999988656e-06, 'source_diff': 3.6669999999988656e-06}, {'time': 0.022497264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.028000000000671e-06, 'source_diff': 5.028000000000671e-06}, {'time': 0.022499681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.417000000001085e-06, 'source_diff': 2.417000000001085e-06}, {'time': 0.022502611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.929999999998212e-06, 'source_diff': 2.929999999998212e-06}]</msg>
<status status="PASS" starttime="20201110 08:37:22.146" endtime="20201110 08:37:22.149"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.141" endtime="20201110 08:37:22.150"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:22.164" level="INFO">${debug-compressed} = {'diff': [0, 4.972000000002391e-06, 5.040999999997298e-06, 5.33400000000267e-06, 5.110999999998617e-06, 3.554999999998837e-06, 6.278000000001921e-06, 4.264000000000351e-06, 3.4719999999974216e-06, 5.3...</msg>
<status status="PASS" starttime="20201110 08:37:22.151" endtime="20201110 08:37:22.164"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.168" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:22.167" endtime="20201110 08:37:22.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.171" level="INFO">VALUE: {'diff': [0, 4.972000000002391e-06, 5.040999999997298e-06, 5.33400000000267e-06, 5.110999999998617e-06, 3.554999999998837e-06, 6.278000000001921e-06, 4.264000000000351e-06, 3.4719999999974216e-06, 5.306000000000061e-06, 4.29200000000296e-06, 4.540999999996798e-06, 3.417000000002085e-06, 6.1529999999983265e-06, 6.041000000001767e-06, 5.5979999999990204e-06, 3.540999999999267e-06, 4.097000000001516e-06, 2.7369999999991845e-06, 2.776999999998947e-06, 3.917000000002585e-06, 6.0279999999982015e-06, 2.985999999999961e-06, 4.903000000000546e-06, 3.554999999998837e-06, 3.403000000002515e-06, 4.666999999999866e-06, 4.916000000000642e-06, 3.2359999999967415e-06, 4.139000000000226e-06, 4.223000000001115e-06, 3.861000000000836e-06, 3.401999999999572e-06, 2.8619999999993095e-06, 3.486000000000461e-06, 5.082999999999477e-06, 5.082999999999477e-06, 4.431000000002655e-06, 3.7219999999976716e-06, 5.917000000001116e-06, 4.221999999998172e-06, 3.903000000003015e-06, 4.277999999999921e-06, 3.374999999999906e-06, 6.222000000000172e-06, 6.165999999998423e-06, 3.6669999999988656e-06, 5.028000000000671e-06, 2.417000000001085e-06, 2.929999999998212e-06], 'time': [0.022290056, 0.022295028, 0.022300069, 0.022305403, 0.022310514, 0.022314069, 0.022320347, 0.022324611, 0.022328083, 0.022333389, 0.022337681, 0.022342222, 0.022345639, 0.022351792, 0.022357833, 0.022363431, 0.022366972, 0.022371069, 0.022373806, 0.022376583, 0.0223805, 0.022386528, 0.022389514, 0.022394417, 0.022397972, 0.022401375, 0.022406042, 0.022410958, 0.022414194, 0.022418333, 0.022422556, 0.022426417, 0.022429819, 0.022432681, 0.022436167, 0.02244125, 0.022446333, 0.022450764, 0.022454486, 0.022460403, 0.022464625, 0.022468528, 0.022472806, 0.022476181, 0.022482403, 0.022488569, 0.022492236, 0.022497264, 0.022499681, 0.022502611], 'eventsourcesource_diff': [0, 4.972000000002391e-06, 5.040999999997298e-06, 5.33400000000267e-06, 5.110999999998617e-06, 3.554999999998837e-06, 6.278000000001921e-06, 4.264000000000351e-06, 3.4719999999974216e-06, 5.306000000000061e-06, 4.29200000000296e-06, 4.540999999996798e-06, 3.417000000002085e-06, 6.1529999999983265e-06, 6.041000000001767e-06, 5.5979999999990204e-06, 3.540999999999267e-06, 4.097000000001516e-06, 2.7369999999991845e-06, 2.776999999998947e-06, 3.917000000002585e-06, 6.0279999999982015e-06, 2.985999999999961e-06, 4.903000000000546e-06, 3.554999999998837e-06, 3.403000000002515e-06, 4.666999999999866e-06, 4.916000000000642e-06, 3.2359999999967415e-06, 4.139000000000226e-06, 4.223000000001115e-06, 3.861000000000836e-06, 3.401999999999572e-06, 2.8619999999993095e-06, 3.486000000000461e-06, 5.082999999999477e-06, 5.082999999999477e-06, 4.431000000002655e-06, 3.7219999999976716e-06, 5.917000000001116e-06, 4.221999999998172e-06, 3.903000000003015e-06, 4.277999999999921e-06, 3.374999999999906e-06, 6.222000000000172e-06, 6.165999999998423e-06, 3.6669999999988656e-06, 5.028000000000671e-06, 2.417000000001085e-06, 2.929999999998212e-06]}</msg>
<status status="PASS" starttime="20201110 08:37:22.169" endtime="20201110 08:37:22.171"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.165" endtime="20201110 08:37:22.172"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:22.175" level="INFO">${RESULT} = [{'time': 0.022295028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.972000000002391e-06, 'source_diff': 4.972000000002391e-06}, {'time': 0.022305403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:22.173" endtime="20201110 08:37:22.175"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:22.183" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.972000000002391e-06, 5.33400000000267e-06, 3.554999999998837e-06, 4.264000000000351e-06, 5.306000000000061e-06, 4.540999999996798e-06, 6.1529999999983265e-06, 5.5979999999990204e-06, 4.097...</msg>
<status status="PASS" starttime="20201110 08:37:22.176" endtime="20201110 08:37:22.184"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.188" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:22.187" endtime="20201110 08:37:22.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.190" level="INFO">VALUE: [4.972000000002391e-06, 5.33400000000267e-06, 3.554999999998837e-06, 4.264000000000351e-06, 5.306000000000061e-06, 4.540999999996798e-06, 6.1529999999983265e-06, 5.5979999999990204e-06, 4.097000000001516e-06, 2.776999999998947e-06, 6.0279999999982015e-06, 4.903000000000546e-06, 3.403000000002515e-06, 4.916000000000642e-06, 4.139000000000226e-06, 3.861000000000836e-06, 2.8619999999993095e-06, 5.082999999999477e-06, 4.431000000002655e-06, 5.917000000001116e-06, 3.903000000003015e-06, 3.374999999999906e-06, 6.165999999998423e-06, 5.028000000000671e-06, 2.929999999998212e-06]</msg>
<status status="PASS" starttime="20201110 08:37:22.189" endtime="20201110 08:37:22.191"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.184" endtime="20201110 08:37:22.191"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:22.193" endtime="20201110 08:37:22.195"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:22.197" endtime="20201110 08:37:22.216"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.195" endtime="20201110 08:37:22.217"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.192" endtime="20201110 08:37:22.217"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.792" endtime="20201110 08:37:22.217"></status>
</kw>
<msg timestamp="20201110 08:37:22.218" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:22.225" endtime="20201110 08:37:22.240"></status>
</kw>
<msg timestamp="20201110 08:37:22.241" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:22.224" endtime="20201110 08:37:22.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.243" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:22.242" endtime="20201110 08:37:22.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:22.244" endtime="20201110 08:37:22.246"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.221" endtime="20201110 08:37:22.247"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.219" endtime="20201110 08:37:22.247"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:22.253" endtime="20201110 08:37:22.518"></status>
</kw>
<msg timestamp="20201110 08:37:22.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018297139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018299931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:22.252" endtime="20201110 08:37:22.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018297139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018299931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:22.521" endtime="20201110 08:37:22.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:22.527" endtime="20201110 08:37:22.528"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.249" endtime="20201110 08:37:22.529"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.248" endtime="20201110 08:37:22.529"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.533" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:22.532" endtime="20201110 08:37:22.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.537" level="INFO">VALUE: [{'time': 0.018297139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018299931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7919999999979905e-06, 'source_diff': 2.7919999999979905e-06}, {'time': 0.018304347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416000000000142e-06, 'source_diff': 4.416000000000142e-06}, {'time': 0.01830725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.903000000002015e-06, 'source_diff': 2.903000000002015e-06}, {'time': 0.018311667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416999999999616e-06, 'source_diff': 4.416999999999616e-06}, {'time': 0.018317722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.055000000001337e-06, 'source_diff': 6.055000000001337e-06}, {'time': 0.018321431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7089999999975753e-06, 'source_diff': 3.7089999999975753e-06}, {'time': 0.018324153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.722000000000141e-06, 'source_diff': 2.722000000000141e-06}, {'time': 0.018327069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9160000000021113e-06, 'source_diff': 2.9160000000021113e-06}, {'time': 0.018330986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.916999999999116e-06, 'source_diff': 3.916999999999116e-06}, {'time': 0.018335597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.610999999998117e-06, 'source_diff': 4.610999999998117e-06}, {'time': 0.018341806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2090000000000756e-06, 'source_diff': 6.2090000000000756e-06}, {'time': 0.018346278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.472000000001891e-06, 'source_diff': 4.472000000001891e-06}, {'time': 0.018349042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7639999999988507e-06, 'source_diff': 2.7639999999988507e-06}, {'time': 0.018353986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.943999999999782e-06, 'source_diff': 4.943999999999782e-06}, {'time': 0.018359333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.018363556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.223000000001115e-06, 'source_diff': 4.223000000001115e-06}, {'time': 0.018369542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.018374653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.111000000002086e-06, 'source_diff': 5.111000000002086e-06}, {'time': 0.018379403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7499999999978115e-06, 'source_diff': 4.7499999999978115e-06}, {'time': 0.018382833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4300000000021813e-06, 'source_diff': 3.4300000000021813e-06}, {'time': 0.018387153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3199999999986305e-06, 'source_diff': 4.3199999999986305e-06}, {'time': 0.018390792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.6389999999997258e-06, 'source_diff': 3.6389999999997258e-06}, {'time': 0.018395389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.597000000002016e-06, 'source_diff': 4.597000000002016e-06}, {'time': 0.018399569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.179999999999462e-06, 'source_diff': 4.179999999999462e-06}, {'time': 0.018402042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4729999999993646e-06, 'source_diff': 2.4729999999993646e-06}, {'time': 0.018406639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.596999999998547e-06, 'source_diff': 4.596999999998547e-06}, {'time': 0.018409597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.958000000000821e-06, 'source_diff': 2.958000000000821e-06}, {'time': 0.018412639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.04200000000171e-06, 'source_diff': 3.04200000000171e-06}, {'time': 0.018416736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.096999999998047e-06, 'source_diff': 4.096999999998047e-06}, {'time': 0.018419778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.04200000000171e-06, 'source_diff': 3.04200000000171e-06}, {'time': 0.018424625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.846999999998797e-06, 'source_diff': 4.846999999998797e-06}, {'time': 0.018428736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.111000000001086e-06, 'source_diff': 4.111000000001086e-06}, {'time': 0.018432097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.361000000000336e-06, 'source_diff': 3.361000000000336e-06}, {'time': 0.018438111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0139999999986316e-06, 'source_diff': 6.0139999999986316e-06}, {'time': 0.018443597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.485999999998992e-06, 'source_diff': 5.485999999998992e-06}, {'time': 0.01844775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.152999999999796e-06, 'source_diff': 4.152999999999796e-06}, {'time': 0.018453667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.917000000001116e-06, 'source_diff': 5.917000000001116e-06}, {'time': 0.018458236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.568999999999407e-06, 'source_diff': 4.568999999999407e-06}, {'time': 0.0184635, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.264000000001351e-06, 'source_diff': 5.264000000001351e-06}, {'time': 0.018469472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.018473264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7919999999989906e-06, 'source_diff': 3.7919999999989906e-06}, {'time': 0.018479167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.903000000001546e-06, 'source_diff': 5.903000000001546e-06}, {'time': 0.018482083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.915999999998642e-06, 'source_diff': 2.915999999998642e-06}, {'time': 0.018487194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.110999999998617e-06, 'source_diff': 5.110999999998617e-06}, {'time': 0.018492597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.403000000001046e-06, 'source_diff': 5.403000000001046e-06}, {'time': 0.018495444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.847000000000266e-06, 'source_diff': 2.847000000000266e-06}, {'time': 0.018500625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.180999999999936e-06, 'source_diff': 5.180999999999936e-06}, {'time': 0.018506528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.903000000001546e-06, 'source_diff': 5.903000000001546e-06}, {'time': 0.018510375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.846999999997797e-06, 'source_diff': 3.846999999997797e-06}]</msg>
<status status="PASS" starttime="20201110 08:37:22.534" endtime="20201110 08:37:22.538"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.530" endtime="20201110 08:37:22.539"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:22.553" level="INFO">${debug-compressed} = {'diff': [0, 2.7919999999979905e-06, 4.416000000000142e-06, 2.903000000002015e-06, 4.416999999999616e-06, 6.055000000001337e-06, 3.7089999999975753e-06, 2.722000000000141e-06, 2.9160000000021113e-06, ...</msg>
<status status="PASS" starttime="20201110 08:37:22.539" endtime="20201110 08:37:22.553"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.556" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:22.556" endtime="20201110 08:37:22.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.560" level="INFO">VALUE: {'diff': [0, 2.7919999999979905e-06, 4.416000000000142e-06, 2.903000000002015e-06, 4.416999999999616e-06, 6.055000000001337e-06, 3.7089999999975753e-06, 2.722000000000141e-06, 2.9160000000021113e-06, 3.916999999999116e-06, 4.610999999998117e-06, 6.2090000000000756e-06, 4.472000000001891e-06, 2.7639999999988507e-06, 4.943999999999782e-06, 5.346999999999297e-06, 4.223000000001115e-06, 5.985999999999492e-06, 5.111000000002086e-06, 4.7499999999978115e-06, 3.4300000000021813e-06, 4.3199999999986305e-06, 3.6389999999997258e-06, 4.597000000002016e-06, 4.179999999999462e-06, 2.4729999999993646e-06, 4.596999999998547e-06, 2.958000000000821e-06, 3.04200000000171e-06, 4.096999999998047e-06, 3.04200000000171e-06, 4.846999999998797e-06, 4.111000000001086e-06, 3.361000000000336e-06, 6.0139999999986316e-06, 5.485999999998992e-06, 4.152999999999796e-06, 5.917000000001116e-06, 4.568999999999407e-06, 5.264000000001351e-06, 5.971999999999922e-06, 3.7919999999989906e-06, 5.903000000001546e-06, 2.915999999998642e-06, 5.110999999998617e-06, 5.403000000001046e-06, 2.847000000000266e-06, 5.180999999999936e-06, 5.903000000001546e-06, 3.846999999997797e-06], 'time': [0.018297139, 0.018299931, 0.018304347, 0.01830725, 0.018311667, 0.018317722, 0.018321431, 0.018324153, 0.018327069, 0.018330986, 0.018335597, 0.018341806, 0.018346278, 0.018349042, 0.018353986, 0.018359333, 0.018363556, 0.018369542, 0.018374653, 0.018379403, 0.018382833, 0.018387153, 0.018390792, 0.018395389, 0.018399569, 0.018402042, 0.018406639, 0.018409597, 0.018412639, 0.018416736, 0.018419778, 0.018424625, 0.018428736, 0.018432097, 0.018438111, 0.018443597, 0.01844775, 0.018453667, 0.018458236, 0.0184635, 0.018469472, 0.018473264, 0.018479167, 0.018482083, 0.018487194, 0.018492597, 0.018495444, 0.018500625, 0.018506528, 0.018510375], 'eventsourcesource_diff': [0, 2.7919999999979905e-06, 4.416000000000142e-06, 2.903000000002015e-06, 4.416999999999616e-06, 6.055000000001337e-06, 3.7089999999975753e-06, 2.722000000000141e-06, 2.9160000000021113e-06, 3.916999999999116e-06, 4.610999999998117e-06, 6.2090000000000756e-06, 4.472000000001891e-06, 2.7639999999988507e-06, 4.943999999999782e-06, 5.346999999999297e-06, 4.223000000001115e-06, 5.985999999999492e-06, 5.111000000002086e-06, 4.7499999999978115e-06, 3.4300000000021813e-06, 4.3199999999986305e-06, 3.6389999999997258e-06, 4.597000000002016e-06, 4.179999999999462e-06, 2.4729999999993646e-06, 4.596999999998547e-06, 2.958000000000821e-06, 3.04200000000171e-06, 4.096999999998047e-06, 3.04200000000171e-06, 4.846999999998797e-06, 4.111000000001086e-06, 3.361000000000336e-06, 6.0139999999986316e-06, 5.485999999998992e-06, 4.152999999999796e-06, 5.917000000001116e-06, 4.568999999999407e-06, 5.264000000001351e-06, 5.971999999999922e-06, 3.7919999999989906e-06, 5.903000000001546e-06, 2.915999999998642e-06, 5.110999999998617e-06, 5.403000000001046e-06, 2.847000000000266e-06, 5.180999999999936e-06, 5.903000000001546e-06, 3.846999999997797e-06]}</msg>
<status status="PASS" starttime="20201110 08:37:22.558" endtime="20201110 08:37:22.560"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.554" endtime="20201110 08:37:22.561"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:22.564" level="INFO">${RESULT} = [{'time': 0.018299931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7919999999979905e-06, 'source_diff': 2.7919999999979905e-06}, {'time': 0.01830725, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201110 08:37:22.562" endtime="20201110 08:37:22.564"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:22.572" level="INFO">${GPIO_OVERHEAD} = {'diff': [2.7919999999979905e-06, 2.903000000002015e-06, 6.055000000001337e-06, 2.722000000000141e-06, 3.916999999999116e-06, 6.2090000000000756e-06, 2.7639999999988507e-06, 5.346999999999297e-06, 5.9...</msg>
<status status="PASS" starttime="20201110 08:37:22.565" endtime="20201110 08:37:22.573"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.577" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:22.576" endtime="20201110 08:37:22.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.579" level="INFO">VALUE: [2.7919999999979905e-06, 2.903000000002015e-06, 6.055000000001337e-06, 2.722000000000141e-06, 3.916999999999116e-06, 6.2090000000000756e-06, 2.7639999999988507e-06, 5.346999999999297e-06, 5.985999999999492e-06, 4.7499999999978115e-06, 4.3199999999986305e-06, 4.597000000002016e-06, 2.4729999999993646e-06, 2.958000000000821e-06, 4.096999999998047e-06, 4.846999999998797e-06, 3.361000000000336e-06, 5.485999999998992e-06, 5.917000000001116e-06, 5.264000000001351e-06, 3.7919999999989906e-06, 2.915999999998642e-06, 5.403000000001046e-06, 5.180999999999936e-06, 3.846999999997797e-06]</msg>
<status status="PASS" starttime="20201110 08:37:22.578" endtime="20201110 08:37:22.579"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.573" endtime="20201110 08:37:22.580"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:22.582" endtime="20201110 08:37:22.584"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:22.586" endtime="20201110 08:37:22.605"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.584" endtime="20201110 08:37:22.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.581" endtime="20201110 08:37:22.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.218" endtime="20201110 08:37:22.606"></status>
</kw>
<msg timestamp="20201110 08:37:22.607" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:22.615" endtime="20201110 08:37:22.629"></status>
</kw>
<msg timestamp="20201110 08:37:22.630" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:22.614" endtime="20201110 08:37:22.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.632" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:22.631" endtime="20201110 08:37:22.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:22.633" endtime="20201110 08:37:22.635"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.610" endtime="20201110 08:37:22.635"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.608" endtime="20201110 08:37:22.636"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:22.642" endtime="20201110 08:37:22.909"></status>
</kw>
<msg timestamp="20201110 08:37:22.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018390722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018396069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:22.641" endtime="20201110 08:37:22.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018390722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018396069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:22.913" endtime="20201110 08:37:22.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:22.920" endtime="20201110 08:37:22.923"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.638" endtime="20201110 08:37:22.924"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.636" endtime="20201110 08:37:22.925"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.929" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:22.928" endtime="20201110 08:37:22.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.933" level="INFO">VALUE: [{'time': 0.018390722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018396069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.018399986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.916999999999116e-06, 'source_diff': 3.916999999999116e-06}, {'time': 0.018404653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.666999999999866e-06, 'source_diff': 4.666999999999866e-06}, {'time': 0.018408014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.361000000000336e-06, 'source_diff': 3.361000000000336e-06}, {'time': 0.018414167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.1529999999983265e-06, 'source_diff': 6.1529999999983265e-06}, {'time': 0.018419153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.986000000001961e-06, 'source_diff': 4.986000000001961e-06}, {'time': 0.018424389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.235999999998742e-06, 'source_diff': 5.235999999998742e-06}, {'time': 0.018427333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.944000000001251e-06, 'source_diff': 2.944000000001251e-06}, {'time': 0.01843075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4169999999986156e-06, 'source_diff': 3.4169999999986156e-06}, {'time': 0.018436167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.417000000000616e-06, 'source_diff': 5.417000000000616e-06}, {'time': 0.018439583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.415999999999142e-06, 'source_diff': 3.415999999999142e-06}, {'time': 0.018442056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4729999999993646e-06, 'source_diff': 2.4729999999993646e-06}, {'time': 0.018448083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.027000000002197e-06, 'source_diff': 6.027000000002197e-06}, {'time': 0.018451319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.236000000000211e-06, 'source_diff': 3.236000000000211e-06}, {'time': 0.018457597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2779999999984515e-06, 'source_diff': 6.2779999999984515e-06}, {'time': 0.018463889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.292000000001491e-06, 'source_diff': 6.292000000001491e-06}, {'time': 0.018468986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.096999999999047e-06, 'source_diff': 5.096999999999047e-06}, {'time': 0.018473097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.111000000001086e-06, 'source_diff': 4.111000000001086e-06}, {'time': 0.018479319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.018485125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.806000000000561e-06, 'source_diff': 5.806000000000561e-06}, {'time': 0.018488889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.763999999999851e-06, 'source_diff': 3.763999999999851e-06}, {'time': 0.018491875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.985999999999961e-06, 'source_diff': 2.985999999999961e-06}, {'time': 0.018495278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4029999999990457e-06, 'source_diff': 3.4029999999990457e-06}, {'time': 0.018497653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3749999999989058e-06, 'source_diff': 2.3749999999989058e-06}, {'time': 0.018501486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.833000000001696e-06, 'source_diff': 3.833000000001696e-06}, {'time': 0.018503889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4029999999980456e-06, 'source_diff': 2.4029999999980456e-06}, {'time': 0.01850875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.861000000001836e-06, 'source_diff': 4.861000000001836e-06}, {'time': 0.018513417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.666999999999866e-06, 'source_diff': 4.666999999999866e-06}, {'time': 0.018518389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.971999999998922e-06, 'source_diff': 4.971999999998922e-06}, {'time': 0.018524306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.917000000001116e-06, 'source_diff': 5.917000000001116e-06}, {'time': 0.018528653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.346999999998297e-06, 'source_diff': 4.346999999998297e-06}, {'time': 0.018532194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.540999999999267e-06, 'source_diff': 3.540999999999267e-06}, {'time': 0.018536917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.723000000001615e-06, 'source_diff': 4.723000000001615e-06}, {'time': 0.018542806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8889999999985065e-06, 'source_diff': 5.8889999999985065e-06}, {'time': 0.0185465, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6940000000020012e-06, 'source_diff': 3.6940000000020012e-06}, {'time': 0.018551722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.221999999999172e-06, 'source_diff': 5.221999999999172e-06}, {'time': 0.018556444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.721999999998672e-06, 'source_diff': 4.721999999998672e-06}, {'time': 0.018561917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.473000000002365e-06, 'source_diff': 5.473000000002365e-06}, {'time': 0.018565903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.986000000000961e-06, 'source_diff': 3.986000000000961e-06}, {'time': 0.018570736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.832999999999227e-06, 'source_diff': 4.832999999999227e-06}, {'time': 0.018576333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.596999999999547e-06, 'source_diff': 5.596999999999547e-06}, {'time': 0.018582569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.235999999999742e-06, 'source_diff': 6.235999999999742e-06}, {'time': 0.018586472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.902999999999546e-06, 'source_diff': 3.902999999999546e-06}, {'time': 0.018590333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.861000000000836e-06, 'source_diff': 3.861000000000836e-06}, {'time': 0.018596556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2229999999996455e-06, 'source_diff': 6.2229999999996455e-06}, {'time': 0.018602097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.541000000001267e-06, 'source_diff': 5.541000000001267e-06}, {'time': 0.018605444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3469999999972966e-06, 'source_diff': 3.3469999999972966e-06}, {'time': 0.018609611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.167000000002835e-06, 'source_diff': 4.167000000002835e-06}, {'time': 0.018615389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7779999999979514e-06, 'source_diff': 5.7779999999979514e-06}]</msg>
<status status="PASS" starttime="20201110 08:37:22.930" endtime="20201110 08:37:22.934"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.926" endtime="20201110 08:37:22.935"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:22.949" level="INFO">${debug-compressed} = {'diff': [0, 5.346999999999297e-06, 3.916999999999116e-06, 4.666999999999866e-06, 3.361000000000336e-06, 6.1529999999983265e-06, 4.986000000001961e-06, 5.235999999998742e-06, 2.944000000001251e-06, 3....</msg>
<status status="PASS" starttime="20201110 08:37:22.935" endtime="20201110 08:37:22.949"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.953" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:22.952" endtime="20201110 08:37:22.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.956" level="INFO">VALUE: {'diff': [0, 5.346999999999297e-06, 3.916999999999116e-06, 4.666999999999866e-06, 3.361000000000336e-06, 6.1529999999983265e-06, 4.986000000001961e-06, 5.235999999998742e-06, 2.944000000001251e-06, 3.4169999999986156e-06, 5.417000000000616e-06, 3.415999999999142e-06, 2.4729999999993646e-06, 6.027000000002197e-06, 3.236000000000211e-06, 6.2779999999984515e-06, 6.292000000001491e-06, 5.096999999999047e-06, 4.111000000001086e-06, 6.222000000000172e-06, 5.806000000000561e-06, 3.763999999999851e-06, 2.985999999999961e-06, 3.4029999999990457e-06, 2.3749999999989058e-06, 3.833000000001696e-06, 2.4029999999980456e-06, 4.861000000001836e-06, 4.666999999999866e-06, 4.971999999998922e-06, 5.917000000001116e-06, 4.346999999998297e-06, 3.540999999999267e-06, 4.723000000001615e-06, 5.8889999999985065e-06, 3.6940000000020012e-06, 5.221999999999172e-06, 4.721999999998672e-06, 5.473000000002365e-06, 3.986000000000961e-06, 4.832999999999227e-06, 5.596999999999547e-06, 6.235999999999742e-06, 3.902999999999546e-06, 3.861000000000836e-06, 6.2229999999996455e-06, 5.541000000001267e-06, 3.3469999999972966e-06, 4.167000000002835e-06, 5.7779999999979514e-06], 'time': [0.018390722, 0.018396069, 0.018399986, 0.018404653, 0.018408014, 0.018414167, 0.018419153, 0.018424389, 0.018427333, 0.01843075, 0.018436167, 0.018439583, 0.018442056, 0.018448083, 0.018451319, 0.018457597, 0.018463889, 0.018468986, 0.018473097, 0.018479319, 0.018485125, 0.018488889, 0.018491875, 0.018495278, 0.018497653, 0.018501486, 0.018503889, 0.01850875, 0.018513417, 0.018518389, 0.018524306, 0.018528653, 0.018532194, 0.018536917, 0.018542806, 0.0185465, 0.018551722, 0.018556444, 0.018561917, 0.018565903, 0.018570736, 0.018576333, 0.018582569, 0.018586472, 0.018590333, 0.018596556, 0.018602097, 0.018605444, 0.018609611, 0.018615389], 'eventsourcesource_diff': [0, 5.346999999999297e-06, 3.916999999999116e-06, 4.666999999999866e-06, 3.361000000000336e-06, 6.1529999999983265e-06, 4.986000000001961e-06, 5.235999999998742e-06, 2.944000000001251e-06, 3.4169999999986156e-06, 5.417000000000616e-06, 3.415999999999142e-06, 2.4729999999993646e-06, 6.027000000002197e-06, 3.236000000000211e-06, 6.2779999999984515e-06, 6.292000000001491e-06, 5.096999999999047e-06, 4.111000000001086e-06, 6.222000000000172e-06, 5.806000000000561e-06, 3.763999999999851e-06, 2.985999999999961e-06, 3.4029999999990457e-06, 2.3749999999989058e-06, 3.833000000001696e-06, 2.4029999999980456e-06, 4.861000000001836e-06, 4.666999999999866e-06, 4.971999999998922e-06, 5.917000000001116e-06, 4.346999999998297e-06, 3.540999999999267e-06, 4.723000000001615e-06, 5.8889999999985065e-06, 3.6940000000020012e-06, 5.221999999999172e-06, 4.721999999998672e-06, 5.473000000002365e-06, 3.986000000000961e-06, 4.832999999999227e-06, 5.596999999999547e-06, 6.235999999999742e-06, 3.902999999999546e-06, 3.861000000000836e-06, 6.2229999999996455e-06, 5.541000000001267e-06, 3.3469999999972966e-06, 4.167000000002835e-06, 5.7779999999979514e-06]}</msg>
<status status="PASS" starttime="20201110 08:37:22.954" endtime="20201110 08:37:22.957"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.950" endtime="20201110 08:37:22.957"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:22.961" level="INFO">${RESULT} = [{'time': 0.018396069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.018404653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:22.958" endtime="20201110 08:37:22.961"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:22.969" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.346999999999297e-06, 4.666999999999866e-06, 6.1529999999983265e-06, 5.235999999998742e-06, 3.4169999999986156e-06, 3.415999999999142e-06, 6.027000000002197e-06, 6.2779999999984515e-06, 5.0...</msg>
<status status="PASS" starttime="20201110 08:37:22.962" endtime="20201110 08:37:22.969"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.973" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:22.972" endtime="20201110 08:37:22.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.976" level="INFO">VALUE: [5.346999999999297e-06, 4.666999999999866e-06, 6.1529999999983265e-06, 5.235999999998742e-06, 3.4169999999986156e-06, 3.415999999999142e-06, 6.027000000002197e-06, 6.2779999999984515e-06, 5.096999999999047e-06, 6.222000000000172e-06, 3.763999999999851e-06, 3.4029999999990457e-06, 3.833000000001696e-06, 4.861000000001836e-06, 4.971999999998922e-06, 4.346999999998297e-06, 4.723000000001615e-06, 3.6940000000020012e-06, 4.721999999998672e-06, 3.986000000000961e-06, 5.596999999999547e-06, 3.902999999999546e-06, 6.2229999999996455e-06, 3.3469999999972966e-06, 5.7779999999979514e-06]</msg>
<status status="PASS" starttime="20201110 08:37:22.974" endtime="20201110 08:37:22.976"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.970" endtime="20201110 08:37:22.977"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:22.979" endtime="20201110 08:37:22.980"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:22.983" endtime="20201110 08:37:23.003"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.981" endtime="20201110 08:37:23.003"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.977" endtime="20201110 08:37:23.004"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.607" endtime="20201110 08:37:23.004"></status>
</kw>
<msg timestamp="20201110 08:37:23.004" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.012" endtime="20201110 08:37:23.026"></status>
</kw>
<msg timestamp="20201110 08:37:23.026" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:23.010" endtime="20201110 08:37:23.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:23.029" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:23.027" endtime="20201110 08:37:23.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.030" endtime="20201110 08:37:23.032"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.008" endtime="20201110 08:37:23.032"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.006" endtime="20201110 08:37:23.033"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.039" endtime="20201110 08:37:23.308"></status>
</kw>
<msg timestamp="20201110 08:37:23.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017660917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017664333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:23.038" endtime="20201110 08:37:23.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:23.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017660917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017664333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:23.311" endtime="20201110 08:37:23.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.316" endtime="20201110 08:37:23.318"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.035" endtime="20201110 08:37:23.318"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.033" endtime="20201110 08:37:23.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:23.323" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:23.322" endtime="20201110 08:37:23.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:23.326" level="INFO">VALUE: [{'time': 0.017660917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017664333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.415999999999142e-06, 'source_diff': 3.415999999999142e-06}, {'time': 0.017669125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.791999999999991e-06, 'source_diff': 4.791999999999991e-06}, {'time': 0.017673042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.916999999999116e-06, 'source_diff': 3.916999999999116e-06}, {'time': 0.017675861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.819000000001126e-06, 'source_diff': 2.819000000001126e-06}, {'time': 0.017678792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9309999999976855e-06, 'source_diff': 2.9309999999976855e-06}, {'time': 0.017682514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.722000000001141e-06, 'source_diff': 3.722000000001141e-06}, {'time': 0.017686944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.429999999999712e-06, 'source_diff': 4.429999999999712e-06}, {'time': 0.017693153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2090000000000756e-06, 'source_diff': 6.2090000000000756e-06}, {'time': 0.017696264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.111000000000086e-06, 'source_diff': 3.111000000000086e-06}, {'time': 0.017702417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.153000000001796e-06, 'source_diff': 6.153000000001796e-06}, {'time': 0.017707167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7499999999978115e-06, 'source_diff': 4.7499999999978115e-06}, {'time': 0.017711806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.017716306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.500000000001031e-06, 'source_diff': 4.500000000001031e-06}, {'time': 0.017721014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.707999999999102e-06, 'source_diff': 4.707999999999102e-06}, {'time': 0.017725056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.041999999999241e-06, 'source_diff': 4.041999999999241e-06}, {'time': 0.017729458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.402000000000572e-06, 'source_diff': 4.402000000000572e-06}, {'time': 0.01773525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.792000000000991e-06, 'source_diff': 5.792000000000991e-06}, {'time': 0.017740417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.167000000000366e-06, 'source_diff': 5.167000000000366e-06}, {'time': 0.017745139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.721999999998672e-06, 'source_diff': 4.721999999998672e-06}, {'time': 0.017751111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.017755083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.972000000001391e-06, 'source_diff': 3.972000000001391e-06}, {'time': 0.017757819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.735999999999711e-06, 'source_diff': 2.735999999999711e-06}, {'time': 0.017764111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.291999999998021e-06, 'source_diff': 6.291999999998021e-06}, {'time': 0.017766833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.722000000000141e-06, 'source_diff': 2.722000000000141e-06}, {'time': 0.017772625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.792000000000991e-06, 'source_diff': 5.792000000000991e-06}, {'time': 0.017776903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.277999999999921e-06, 'source_diff': 4.277999999999921e-06}, {'time': 0.017779639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.735999999999711e-06, 'source_diff': 2.735999999999711e-06}, {'time': 0.017782417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7779999999984206e-06, 'source_diff': 2.7779999999984206e-06}, {'time': 0.017788014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.597000000003016e-06, 'source_diff': 5.597000000003016e-06}, {'time': 0.017791708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.693999999998532e-06, 'source_diff': 3.693999999998532e-06}, {'time': 0.017796736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.028000000000671e-06, 'source_diff': 5.028000000000671e-06}, {'time': 0.017802569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.833000000000227e-06, 'source_diff': 5.833000000000227e-06}, {'time': 0.017808681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.11199999999909e-06, 'source_diff': 6.11199999999909e-06}, {'time': 0.017814514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.833000000000227e-06, 'source_diff': 5.833000000000227e-06}, {'time': 0.017816931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.417000000001085e-06, 'source_diff': 2.417000000001085e-06}, {'time': 0.017820611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.679999999998962e-06, 'source_diff': 3.679999999998962e-06}, {'time': 0.017825403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.791999999999991e-06, 'source_diff': 4.791999999999991e-06}, {'time': 0.017829181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7779999999994207e-06, 'source_diff': 3.7779999999994207e-06}, {'time': 0.017833778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.597000000002016e-06, 'source_diff': 4.597000000002016e-06}, {'time': 0.017839319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.540999999997798e-06, 'source_diff': 5.540999999997798e-06}, {'time': 0.017845236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.917000000001116e-06, 'source_diff': 5.917000000001116e-06}, {'time': 0.017851333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.097000000000047e-06, 'source_diff': 6.097000000000047e-06}, {'time': 0.017854611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2779999999989207e-06, 'source_diff': 3.2779999999989207e-06}, {'time': 0.017857847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.236000000000211e-06, 'source_diff': 3.236000000000211e-06}, {'time': 0.017862556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.709000000002045e-06, 'source_diff': 4.709000000002045e-06}, {'time': 0.017867417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.860999999998367e-06, 'source_diff': 4.860999999998367e-06}, {'time': 0.017869889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.471999999999891e-06, 'source_diff': 2.471999999999891e-06}, {'time': 0.017874264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.375000000000906e-06, 'source_diff': 4.375000000000906e-06}, {'time': 0.017879583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.319000000000157e-06, 'source_diff': 5.319000000000157e-06}]</msg>
<status status="PASS" starttime="20201110 08:37:23.324" endtime="20201110 08:37:23.327"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.319" endtime="20201110 08:37:23.328"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:23.342" level="INFO">${debug-compressed} = {'diff': [0, 3.415999999999142e-06, 4.791999999999991e-06, 3.916999999999116e-06, 2.819000000001126e-06, 2.9309999999976855e-06, 3.722000000001141e-06, 4.429999999999712e-06, 6.2090000000000756e-06, 3...</msg>
<status status="PASS" starttime="20201110 08:37:23.329" endtime="20201110 08:37:23.342"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:23.346" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:23.345" endtime="20201110 08:37:23.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:23.349" level="INFO">VALUE: {'diff': [0, 3.415999999999142e-06, 4.791999999999991e-06, 3.916999999999116e-06, 2.819000000001126e-06, 2.9309999999976855e-06, 3.722000000001141e-06, 4.429999999999712e-06, 6.2090000000000756e-06, 3.111000000000086e-06, 6.153000000001796e-06, 4.7499999999978115e-06, 4.639000000000726e-06, 4.500000000001031e-06, 4.707999999999102e-06, 4.041999999999241e-06, 4.402000000000572e-06, 5.792000000000991e-06, 5.167000000000366e-06, 4.721999999998672e-06, 5.971999999999922e-06, 3.972000000001391e-06, 2.735999999999711e-06, 6.291999999998021e-06, 2.722000000000141e-06, 5.792000000000991e-06, 4.277999999999921e-06, 2.735999999999711e-06, 2.7779999999984206e-06, 5.597000000003016e-06, 3.693999999998532e-06, 5.028000000000671e-06, 5.833000000000227e-06, 6.11199999999909e-06, 5.833000000000227e-06, 2.417000000001085e-06, 3.679999999998962e-06, 4.791999999999991e-06, 3.7779999999994207e-06, 4.597000000002016e-06, 5.540999999997798e-06, 5.917000000001116e-06, 6.097000000000047e-06, 3.2779999999989207e-06, 3.236000000000211e-06, 4.709000000002045e-06, 4.860999999998367e-06, 2.471999999999891e-06, 4.375000000000906e-06, 5.319000000000157e-06], 'time': [0.017660917, 0.017664333, 0.017669125, 0.017673042, 0.017675861, 0.017678792, 0.017682514, 0.017686944, 0.017693153, 0.017696264, 0.017702417, 0.017707167, 0.017711806, 0.017716306, 0.017721014, 0.017725056, 0.017729458, 0.01773525, 0.017740417, 0.017745139, 0.017751111, 0.017755083, 0.017757819, 0.017764111, 0.017766833, 0.017772625, 0.017776903, 0.017779639, 0.017782417, 0.017788014, 0.017791708, 0.017796736, 0.017802569, 0.017808681, 0.017814514, 0.017816931, 0.017820611, 0.017825403, 0.017829181, 0.017833778, 0.017839319, 0.017845236, 0.017851333, 0.017854611, 0.017857847, 0.017862556, 0.017867417, 0.017869889, 0.017874264, 0.017879583], 'eventsourcesource_diff': [0, 3.415999999999142e-06, 4.791999999999991e-06, 3.916999999999116e-06, 2.819000000001126e-06, 2.9309999999976855e-06, 3.722000000001141e-06, 4.429999999999712e-06, 6.2090000000000756e-06, 3.111000000000086e-06, 6.153000000001796e-06, 4.7499999999978115e-06, 4.639000000000726e-06, 4.500000000001031e-06, 4.707999999999102e-06, 4.041999999999241e-06, 4.402000000000572e-06, 5.792000000000991e-06, 5.167000000000366e-06, 4.721999999998672e-06, 5.971999999999922e-06, 3.972000000001391e-06, 2.735999999999711e-06, 6.291999999998021e-06, 2.722000000000141e-06, 5.792000000000991e-06, 4.277999999999921e-06, 2.735999999999711e-06, 2.7779999999984206e-06, 5.597000000003016e-06, 3.693999999998532e-06, 5.028000000000671e-06, 5.833000000000227e-06, 6.11199999999909e-06, 5.833000000000227e-06, 2.417000000001085e-06, 3.679999999998962e-06, 4.791999999999991e-06, 3.7779999999994207e-06, 4.597000000002016e-06, 5.540999999997798e-06, 5.917000000001116e-06, 6.097000000000047e-06, 3.2779999999989207e-06, 3.236000000000211e-06, 4.709000000002045e-06, 4.860999999998367e-06, 2.471999999999891e-06, 4.375000000000906e-06, 5.319000000000157e-06]}</msg>
<status status="PASS" starttime="20201110 08:37:23.347" endtime="20201110 08:37:23.349"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.343" endtime="20201110 08:37:23.350"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:23.353" level="INFO">${RESULT} = [{'time': 0.017664333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.415999999999142e-06, 'source_diff': 3.415999999999142e-06}, {'time': 0.017673042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:23.351" endtime="20201110 08:37:23.354"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:23.362" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.415999999999142e-06, 3.916999999999116e-06, 2.9309999999976855e-06, 4.429999999999712e-06, 3.111000000000086e-06, 4.7499999999978115e-06, 4.500000000001031e-06, 4.041999999999241e-06, 5.79...</msg>
<status status="PASS" starttime="20201110 08:37:23.354" endtime="20201110 08:37:23.362"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:23.366" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:23.365" endtime="20201110 08:37:23.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:23.368" level="INFO">VALUE: [3.415999999999142e-06, 3.916999999999116e-06, 2.9309999999976855e-06, 4.429999999999712e-06, 3.111000000000086e-06, 4.7499999999978115e-06, 4.500000000001031e-06, 4.041999999999241e-06, 5.792000000000991e-06, 4.721999999998672e-06, 3.972000000001391e-06, 6.291999999998021e-06, 5.792000000000991e-06, 2.735999999999711e-06, 5.597000000003016e-06, 5.028000000000671e-06, 6.11199999999909e-06, 2.417000000001085e-06, 4.791999999999991e-06, 4.597000000002016e-06, 5.917000000001116e-06, 3.2779999999989207e-06, 4.709000000002045e-06, 2.471999999999891e-06, 5.319000000000157e-06]</msg>
<status status="PASS" starttime="20201110 08:37:23.367" endtime="20201110 08:37:23.369"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.363" endtime="20201110 08:37:23.370"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.372" endtime="20201110 08:37:23.373"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:23.375" endtime="20201110 08:37:23.395"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.374" endtime="20201110 08:37:23.395"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.370" endtime="20201110 08:37:23.396"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.005" endtime="20201110 08:37:23.396"></status>
</kw>
<msg timestamp="20201110 08:37:23.396" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.404" endtime="20201110 08:37:23.419"></status>
</kw>
<msg timestamp="20201110 08:37:23.419" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:23.402" endtime="20201110 08:37:23.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:23.422" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:23.420" endtime="20201110 08:37:23.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.423" endtime="20201110 08:37:23.424"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.400" endtime="20201110 08:37:23.425"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.398" endtime="20201110 08:37:23.425"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.432" endtime="20201110 08:37:23.700"></status>
</kw>
<msg timestamp="20201110 08:37:23.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017631806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017634444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:23.430" endtime="20201110 08:37:23.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:23.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017631806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017634444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:23.703" endtime="20201110 08:37:23.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.709" endtime="20201110 08:37:23.711"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.427" endtime="20201110 08:37:23.711"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.426" endtime="20201110 08:37:23.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:23.716" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:23.715" endtime="20201110 08:37:23.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:23.720" level="INFO">VALUE: [{'time': 0.017631806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017634444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.637999999999252e-06, 'source_diff': 2.637999999999252e-06}, {'time': 0.017638819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.375000000000906e-06, 'source_diff': 4.375000000000906e-06}, {'time': 0.017644417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5979999999990204e-06, 'source_diff': 5.5979999999990204e-06}, {'time': 0.017649833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.416000000001142e-06, 'source_diff': 5.416000000001142e-06}, {'time': 0.017653875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.041999999999241e-06, 'source_diff': 4.041999999999241e-06}, {'time': 0.017658861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.986000000001961e-06, 'source_diff': 4.986000000001961e-06}, {'time': 0.017663264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.017668111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.846999999998797e-06, 'source_diff': 4.846999999998797e-06}, {'time': 0.017674222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.110999999999617e-06, 'source_diff': 6.110999999999617e-06}, {'time': 0.017677556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.3340000000006698e-06, 'source_diff': 3.3340000000006698e-06}, {'time': 0.017682028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.471999999998422e-06, 'source_diff': 4.471999999998422e-06}, {'time': 0.017684889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.860999999999836e-06, 'source_diff': 2.860999999999836e-06}, {'time': 0.017688264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.374999999999906e-06, 'source_diff': 3.374999999999906e-06}, {'time': 0.017692458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.194000000002501e-06, 'source_diff': 4.194000000002501e-06}, {'time': 0.017695431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9729999999998646e-06, 'source_diff': 2.9729999999998646e-06}, {'time': 0.017697792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.360999999999336e-06, 'source_diff': 2.360999999999336e-06}, {'time': 0.017701139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.347000000000766e-06, 'source_diff': 3.347000000000766e-06}, {'time': 0.01770475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.6109999999971165e-06, 'source_diff': 3.6109999999971165e-06}, {'time': 0.017708472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.722000000001141e-06, 'source_diff': 3.722000000001141e-06}, {'time': 0.017712333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.861000000000836e-06, 'source_diff': 3.861000000000836e-06}, {'time': 0.017716431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.09800000000099e-06, 'source_diff': 4.09800000000099e-06}, {'time': 0.017719819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.388000000000002e-06, 'source_diff': 3.388000000000002e-06}, {'time': 0.017726056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.236999999999215e-06, 'source_diff': 6.236999999999215e-06}, {'time': 0.017728403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.346999999999766e-06, 'source_diff': 2.346999999999766e-06}, {'time': 0.017732944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.541000000000267e-06, 'source_diff': 4.541000000000267e-06}, {'time': 0.017738917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.9729999999993955e-06, 'source_diff': 5.9729999999993955e-06}, {'time': 0.017743764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.846999999998797e-06, 'source_diff': 4.846999999998797e-06}, {'time': 0.017749194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.430000000000712e-06, 'source_diff': 5.430000000000712e-06}, {'time': 0.017753292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.09800000000099e-06, 'source_diff': 4.09800000000099e-06}, {'time': 0.01775675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.458000000001321e-06, 'source_diff': 3.458000000001321e-06}, {'time': 0.017759486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.735999999999711e-06, 'source_diff': 2.735999999999711e-06}, {'time': 0.017765472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.017768958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.486000000000461e-06, 'source_diff': 3.486000000000461e-06}, {'time': 0.017773778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.8199999999991305e-06, 'source_diff': 4.8199999999991305e-06}, {'time': 0.017778319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.541000000000267e-06, 'source_diff': 4.541000000000267e-06}, {'time': 0.017782625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.305999999999061e-06, 'source_diff': 4.305999999999061e-06}, {'time': 0.017786597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.972000000001391e-06, 'source_diff': 3.972000000001391e-06}, {'time': 0.01779175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.152999999997326e-06, 'source_diff': 5.152999999997326e-06}, {'time': 0.017796778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.028000000000671e-06, 'source_diff': 5.028000000000671e-06}, {'time': 0.017800583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.804999999999087e-06, 'source_diff': 3.804999999999087e-06}, {'time': 0.017804292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.709000000001045e-06, 'source_diff': 3.709000000001045e-06}, {'time': 0.017808333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.040999999999767e-06, 'source_diff': 4.040999999999767e-06}, {'time': 0.017811431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0979999999999897e-06, 'source_diff': 3.0979999999999897e-06}, {'time': 0.017817486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.055000000001337e-06, 'source_diff': 6.055000000001337e-06}, {'time': 0.017822444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.957999999999352e-06, 'source_diff': 4.957999999999352e-06}, {'time': 0.01782825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.806000000000561e-06, 'source_diff': 5.806000000000561e-06}, {'time': 0.017832208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.957999999998352e-06, 'source_diff': 3.957999999998352e-06}, {'time': 0.017835875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.667000000002335e-06, 'source_diff': 3.667000000002335e-06}, {'time': 0.017841014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.1389999999977565e-06, 'source_diff': 5.1389999999977565e-06}]</msg>
<status status="PASS" starttime="20201110 08:37:23.717" endtime="20201110 08:37:23.721"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.713" endtime="20201110 08:37:23.722"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:23.736" level="INFO">${debug-compressed} = {'diff': [0, 2.637999999999252e-06, 4.375000000000906e-06, 5.5979999999990204e-06, 5.416000000001142e-06, 4.041999999999241e-06, 4.986000000001961e-06, 4.403000000000046e-06, 4.846999999998797e-06, 6....</msg>
<status status="PASS" starttime="20201110 08:37:23.722" endtime="20201110 08:37:23.736"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:23.740" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:23.739" endtime="20201110 08:37:23.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:23.743" level="INFO">VALUE: {'diff': [0, 2.637999999999252e-06, 4.375000000000906e-06, 5.5979999999990204e-06, 5.416000000001142e-06, 4.041999999999241e-06, 4.986000000001961e-06, 4.403000000000046e-06, 4.846999999998797e-06, 6.110999999999617e-06, 3.3340000000006698e-06, 4.471999999998422e-06, 2.860999999999836e-06, 3.374999999999906e-06, 4.194000000002501e-06, 2.9729999999998646e-06, 2.360999999999336e-06, 3.347000000000766e-06, 3.6109999999971165e-06, 3.722000000001141e-06, 3.861000000000836e-06, 4.09800000000099e-06, 3.388000000000002e-06, 6.236999999999215e-06, 2.346999999999766e-06, 4.541000000000267e-06, 5.9729999999993955e-06, 4.846999999998797e-06, 5.430000000000712e-06, 4.09800000000099e-06, 3.458000000001321e-06, 2.735999999999711e-06, 5.985999999999492e-06, 3.486000000000461e-06, 4.8199999999991305e-06, 4.541000000000267e-06, 4.305999999999061e-06, 3.972000000001391e-06, 5.152999999997326e-06, 5.028000000000671e-06, 3.804999999999087e-06, 3.709000000001045e-06, 4.040999999999767e-06, 3.0979999999999897e-06, 6.055000000001337e-06, 4.957999999999352e-06, 5.806000000000561e-06, 3.957999999998352e-06, 3.667000000002335e-06, 5.1389999999977565e-06], 'time': [0.017631806, 0.017634444, 0.017638819, 0.017644417, 0.017649833, 0.017653875, 0.017658861, 0.017663264, 0.017668111, 0.017674222, 0.017677556, 0.017682028, 0.017684889, 0.017688264, 0.017692458, 0.017695431, 0.017697792, 0.017701139, 0.01770475, 0.017708472, 0.017712333, 0.017716431, 0.017719819, 0.017726056, 0.017728403, 0.017732944, 0.017738917, 0.017743764, 0.017749194, 0.017753292, 0.01775675, 0.017759486, 0.017765472, 0.017768958, 0.017773778, 0.017778319, 0.017782625, 0.017786597, 0.01779175, 0.017796778, 0.017800583, 0.017804292, 0.017808333, 0.017811431, 0.017817486, 0.017822444, 0.01782825, 0.017832208, 0.017835875, 0.017841014], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'sourcesource_diff': [0, 2.637999999999252e-06, 4.375000000000906e-06, 5.5979999999990204e-06, 5.416000000001142e-06, 4.041999999999241e-06, 4.986000000001961e-06, 4.403000000000046e-06, 4.846999999998797e-06, 6.110999999999617e-06, 3.3340000000006698e-06, 4.471999999998422e-06, 2.860999999999836e-06, 3.374999999999906e-06, 4.194000000002501e-06, 2.9729999999998646e-06, 2.360999999999336e-06, 3.347000000000766e-06, 3.6109999999971165e-06, 3.722000000001141e-06, 3.861000000000836e-06, 4.09800000000099e-06, 3.388000000000002e-06, 6.236999999999215e-06, 2.346999999999766e-06, 4.541000000000267e-06, 5.9729999999993955e-06, 4.846999999998797e-06, 5.430000000000712e-06, 4.09800000000099e-06, 3.458000000001321e-06, 2.735999999999711e-06, 5.985999999999492e-06, 3.486000000000461e-06, 4.8199999999991305e-06, 4.541000000000267e-06, 4.305999999999061e-06, 3.972000000001391e-06, 5.152999999997326e-06, 5.028000000000671e-06, 3.804999999999087e-06, 3.709000000001045e-06, 4.040999999999767e-06, 3.0979999999999897e-06, 6.055000000001337e-06, 4.957999999999352e-06, 5.806000000000561e-06, 3.957999999998352e-06, 3.667000000002335e-06, 5.1389999999977565e-06]}</msg>
<status status="PASS" starttime="20201110 08:37:23.741" endtime="20201110 08:37:23.744"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.737" endtime="20201110 08:37:23.744"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:23.748" level="INFO">${RESULT} = [{'time': 0.017634444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.637999999999252e-06, 'source_diff': 2.637999999999252e-06}, {'time': 0.017644417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:23.745" endtime="20201110 08:37:23.748"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:23.756" level="INFO">${GPIO_OVERHEAD} = {'diff': [2.637999999999252e-06, 5.5979999999990204e-06, 4.041999999999241e-06, 4.403000000000046e-06, 6.110999999999617e-06, 4.471999999998422e-06, 3.374999999999906e-06, 2.9729999999998646e-06, 3.34...</msg>
<status status="PASS" starttime="20201110 08:37:23.749" endtime="20201110 08:37:23.756"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:23.760" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:23.759" endtime="20201110 08:37:23.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:23.763" level="INFO">VALUE: [2.637999999999252e-06, 5.5979999999990204e-06, 4.041999999999241e-06, 4.403000000000046e-06, 6.110999999999617e-06, 4.471999999998422e-06, 3.374999999999906e-06, 2.9729999999998646e-06, 3.347000000000766e-06, 3.722000000001141e-06, 4.09800000000099e-06, 6.236999999999215e-06, 4.541000000000267e-06, 4.846999999998797e-06, 4.09800000000099e-06, 2.735999999999711e-06, 3.486000000000461e-06, 4.541000000000267e-06, 3.972000000001391e-06, 5.028000000000671e-06, 3.709000000001045e-06, 3.0979999999999897e-06, 4.957999999999352e-06, 3.957999999998352e-06, 5.1389999999977565e-06]</msg>
<status status="PASS" starttime="20201110 08:37:23.761" endtime="20201110 08:37:23.763"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.757" endtime="20201110 08:37:23.764"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.766" endtime="20201110 08:37:23.767"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:23.769" endtime="20201110 08:37:23.789"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.768" endtime="20201110 08:37:23.789"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.764" endtime="20201110 08:37:23.790"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.397" endtime="20201110 08:37:23.790"></status>
</kw>
<msg timestamp="20201110 08:37:23.790" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.798" endtime="20201110 08:37:23.813"></status>
</kw>
<msg timestamp="20201110 08:37:23.813" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:23.796" endtime="20201110 08:37:23.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:23.815" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:23.814" endtime="20201110 08:37:23.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.817" endtime="20201110 08:37:23.818"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.794" endtime="20201110 08:37:23.819"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.792" endtime="20201110 08:37:23.819"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.826" endtime="20201110 08:37:24.091"></status>
</kw>
<msg timestamp="20201110 08:37:24.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017486889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017491, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:37:23.824" endtime="20201110 08:37:24.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017486889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017491, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:37:24.094" endtime="20201110 08:37:24.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.099" endtime="20201110 08:37:24.101"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.822" endtime="20201110 08:37:24.101"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.820" endtime="20201110 08:37:24.102"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.106" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:24.105" endtime="20201110 08:37:24.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.109" level="INFO">VALUE: [{'time': 0.017486889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017491, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.111000000001086e-06, 'source_diff': 4.111000000001086e-06}, {'time': 0.017497153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.153000000001796e-06, 'source_diff': 6.153000000001796e-06}, {'time': 0.017501444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.291000000000017e-06, 'source_diff': 4.291000000000017e-06}, {'time': 0.017505611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.017510958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.017514069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.111000000000086e-06, 'source_diff': 3.111000000000086e-06}, {'time': 0.017519028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.9589999999988255e-06, 'source_diff': 4.9589999999988255e-06}, {'time': 0.017522764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.736000000000711e-06, 'source_diff': 3.736000000000711e-06}, {'time': 0.017525486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.722000000000141e-06, 'source_diff': 2.722000000000141e-06}, {'time': 0.017529472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.986000000000961e-06, 'source_diff': 3.986000000000961e-06}, {'time': 0.017535125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6529999999978264e-06, 'source_diff': 5.6529999999978264e-06}, {'time': 0.017539972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.847000000002266e-06, 'source_diff': 4.847000000002266e-06}, {'time': 0.017543972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.000000000000531e-06, 'source_diff': 4.000000000000531e-06}, {'time': 0.017547847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.8749999999969365e-06, 'source_diff': 3.8749999999969365e-06}, {'time': 0.017551722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.875000000000406e-06, 'source_diff': 3.875000000000406e-06}, {'time': 0.017557708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.986000000002961e-06, 'source_diff': 5.986000000002961e-06}, {'time': 0.017561792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.08399999999795e-06, 'source_diff': 4.08399999999795e-06}, {'time': 0.017567958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.166000000001892e-06, 'source_diff': 6.166000000001892e-06}, {'time': 0.017572486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.527999999996701e-06, 'source_diff': 4.527999999996701e-06}, {'time': 0.017577458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.972000000002391e-06, 'source_diff': 4.972000000002391e-06}, {'time': 0.01758325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.792000000000991e-06, 'source_diff': 5.792000000000991e-06}, {'time': 0.017586181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9309999999976855e-06, 'source_diff': 2.9309999999976855e-06}, {'time': 0.017589889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.708000000001571e-06, 'source_diff': 3.708000000001571e-06}, {'time': 0.01759575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.017599153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4029999999990457e-06, 'source_diff': 3.4029999999990457e-06}, {'time': 0.017601681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.52800000000164e-06, 'source_diff': 2.52800000000164e-06}, {'time': 0.017606556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.8749999999979365e-06, 'source_diff': 4.8749999999979365e-06}, {'time': 0.017611458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.902000000001072e-06, 'source_diff': 4.902000000001072e-06}, {'time': 0.01761575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.291999999999491e-06, 'source_diff': 4.291999999999491e-06}, {'time': 0.017620472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.722000000002141e-06, 'source_diff': 4.722000000002141e-06}, {'time': 0.017624083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6109999999971165e-06, 'source_diff': 3.6109999999971165e-06}, {'time': 0.017629292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.209000000002545e-06, 'source_diff': 5.209000000002545e-06}, {'time': 0.017632833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.540999999999267e-06, 'source_diff': 3.540999999999267e-06}, {'time': 0.017635389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.55600000000078e-06, 'source_diff': 2.55600000000078e-06}, {'time': 0.017640347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.957999999999352e-06, 'source_diff': 4.957999999999352e-06}, {'time': 0.017645569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.221999999999172e-06, 'source_diff': 5.221999999999172e-06}, {'time': 0.017650542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.973000000001865e-06, 'source_diff': 4.973000000001865e-06}, {'time': 0.017655153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.610999999998117e-06, 'source_diff': 4.610999999998117e-06}, {'time': 0.017659056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.902999999999546e-06, 'source_diff': 3.902999999999546e-06}, {'time': 0.017662097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0410000000022364e-06, 'source_diff': 3.0410000000022364e-06}, {'time': 0.017664639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5419999999977405e-06, 'source_diff': 2.5419999999977405e-06}, {'time': 0.017670042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.403000000001046e-06, 'source_diff': 5.403000000001046e-06}, {'time': 0.017674708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.666000000000392e-06, 'source_diff': 4.666000000000392e-06}, {'time': 0.017678069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.361000000000336e-06, 'source_diff': 3.361000000000336e-06}, {'time': 0.017681667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5980000000004897e-06, 'source_diff': 3.5980000000004897e-06}, {'time': 0.017684611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9439999999977817e-06, 'source_diff': 2.9439999999977817e-06}, {'time': 0.017690694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.083000000000477e-06, 'source_diff': 6.083000000000477e-06}, {'time': 0.017695833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.139000000001226e-06, 'source_diff': 5.139000000001226e-06}, {'time': 0.017698833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.999999999999531e-06, 'source_diff': 2.999999999999531e-06}]</msg>
<status status="PASS" starttime="20201110 08:37:24.107" endtime="20201110 08:37:24.110"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.102" endtime="20201110 08:37:24.111"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:24.125" level="INFO">${debug-compressed} = {'diff': [0, 4.111000000001086e-06, 6.153000000001796e-06, 4.291000000000017e-06, 4.166999999999366e-06, 5.346999999999297e-06, 3.111000000000086e-06, 4.9589999999988255e-06, 3.736000000000711e-06, 2....</msg>
<status status="PASS" starttime="20201110 08:37:24.112" endtime="20201110 08:37:24.125"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.129" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:24.128" endtime="20201110 08:37:24.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.132" level="INFO">VALUE: {'diff': [0, 4.111000000001086e-06, 6.153000000001796e-06, 4.291000000000017e-06, 4.166999999999366e-06, 5.346999999999297e-06, 3.111000000000086e-06, 4.9589999999988255e-06, 3.736000000000711e-06, 2.722000000000141e-06, 3.986000000000961e-06, 5.6529999999978264e-06, 4.847000000002266e-06, 4.000000000000531e-06, 3.8749999999969365e-06, 3.875000000000406e-06, 5.986000000002961e-06, 4.08399999999795e-06, 6.166000000001892e-06, 4.527999999996701e-06, 4.972000000002391e-06, 5.792000000000991e-06, 2.9309999999976855e-06, 3.708000000001571e-06, 5.860999999999367e-06, 3.4029999999990457e-06, 2.52800000000164e-06, 4.8749999999979365e-06, 4.902000000001072e-06, 4.291999999999491e-06, 4.722000000002141e-06, 3.6109999999971165e-06, 5.209000000002545e-06, 3.540999999999267e-06, 2.55600000000078e-06, 4.957999999999352e-06, 5.221999999999172e-06, 4.973000000001865e-06, 4.610999999998117e-06, 3.902999999999546e-06, 3.0410000000022364e-06, 2.5419999999977405e-06, 5.403000000001046e-06, 4.666000000000392e-06, 3.361000000000336e-06, 3.5980000000004897e-06, 2.9439999999977817e-06, 6.083000000000477e-06, 5.139000000001226e-06, 2.999999999999531e-06], 'time': [0.017486889, 0.017491, 0.017497153, 0.017501444, 0.017505611, 0.017510958, 0.017514069, 0.017519028, 0.017522764, 0.017525486, 0.017529472, 0.017535125, 0.017539972, 0.017543972, 0.017547847, 0.017551722, 0.017557708, 0.017561792, 0.017567958, 0.017572486, 0.017577458, 0.01758325, 0.017586181, 0.017589889, 0.01759575, 0.017599153, 0.017601681, 0.017606556, 0.017611458, 0.01761575, 0.017620472, 0.017624083, 0.017629292, 0.017632833, 0.017635389, 0.017640347, 0.017645569, 0.017650542, 0.017655153, 0.017659056, 0.017662097, 0.017664639, 0.017670042, 0.017674708, 0.017678069, 0.017681667, 0.017684611, 0.017690694, 0.017695833, 0.017698833], 'eventsourcesource_diff': [0, 4.111000000001086e-06, 6.153000000001796e-06, 4.291000000000017e-06, 4.166999999999366e-06, 5.346999999999297e-06, 3.111000000000086e-06, 4.9589999999988255e-06, 3.736000000000711e-06, 2.722000000000141e-06, 3.986000000000961e-06, 5.6529999999978264e-06, 4.847000000002266e-06, 4.000000000000531e-06, 3.8749999999969365e-06, 3.875000000000406e-06, 5.986000000002961e-06, 4.08399999999795e-06, 6.166000000001892e-06, 4.527999999996701e-06, 4.972000000002391e-06, 5.792000000000991e-06, 2.9309999999976855e-06, 3.708000000001571e-06, 5.860999999999367e-06, 3.4029999999990457e-06, 2.52800000000164e-06, 4.8749999999979365e-06, 4.902000000001072e-06, 4.291999999999491e-06, 4.722000000002141e-06, 3.6109999999971165e-06, 5.209000000002545e-06, 3.540999999999267e-06, 2.55600000000078e-06, 4.957999999999352e-06, 5.221999999999172e-06, 4.973000000001865e-06, 4.610999999998117e-06, 3.902999999999546e-06, 3.0410000000022364e-06, 2.5419999999977405e-06, 5.403000000001046e-06, 4.666000000000392e-06, 3.361000000000336e-06, 3.5980000000004897e-06, 2.9439999999977817e-06, 6.083000000000477e-06, 5.139000000001226e-06, 2.999999999999531e-06]}</msg>
<status status="PASS" starttime="20201110 08:37:24.130" endtime="20201110 08:37:24.132"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.126" endtime="20201110 08:37:24.133"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:24.136" level="INFO">${RESULT} = [{'time': 0.017491, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.111000000001086e-06, 'source_diff': 4.111000000001086e-06}, {'time': 0.017501444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201110 08:37:24.134" endtime="20201110 08:37:24.136"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:24.144" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.111000000001086e-06, 4.291000000000017e-06, 5.346999999999297e-06, 4.9589999999988255e-06, 2.722000000000141e-06, 5.6529999999978264e-06, 4.000000000000531e-06, 3.875000000000406e-06, 4.08...</msg>
<status status="PASS" starttime="20201110 08:37:24.137" endtime="20201110 08:37:24.145"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.149" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:24.148" endtime="20201110 08:37:24.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.151" level="INFO">VALUE: [4.111000000001086e-06, 4.291000000000017e-06, 5.346999999999297e-06, 4.9589999999988255e-06, 2.722000000000141e-06, 5.6529999999978264e-06, 4.000000000000531e-06, 3.875000000000406e-06, 4.08399999999795e-06, 4.527999999996701e-06, 5.792000000000991e-06, 3.708000000001571e-06, 3.4029999999990457e-06, 4.8749999999979365e-06, 4.291999999999491e-06, 3.6109999999971165e-06, 3.540999999999267e-06, 4.957999999999352e-06, 4.973000000001865e-06, 3.902999999999546e-06, 2.5419999999977405e-06, 4.666000000000392e-06, 3.5980000000004897e-06, 6.083000000000477e-06, 2.999999999999531e-06]</msg>
<status status="PASS" starttime="20201110 08:37:24.150" endtime="20201110 08:37:24.152"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.145" endtime="20201110 08:37:24.152"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.154" endtime="20201110 08:37:24.156"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:24.158" endtime="20201110 08:37:24.177"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.156" endtime="20201110 08:37:24.178"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.153" endtime="20201110 08:37:24.178"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.791" endtime="20201110 08:37:24.179"></status>
</kw>
<msg timestamp="20201110 08:37:24.179" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.187" endtime="20201110 08:37:24.202"></status>
</kw>
<msg timestamp="20201110 08:37:24.202" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:24.186" endtime="20201110 08:37:24.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.205" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:24.203" endtime="20201110 08:37:24.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.206" endtime="20201110 08:37:24.207"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.183" endtime="20201110 08:37:24.208"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.181" endtime="20201110 08:37:24.208"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.217" endtime="20201110 08:37:24.484"></status>
</kw>
<msg timestamp="20201110 08:37:24.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018256042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018259819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:24.214" endtime="20201110 08:37:24.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018256042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018259819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:24.487" endtime="20201110 08:37:24.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.493" endtime="20201110 08:37:24.495"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.210" endtime="20201110 08:37:24.495"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.209" endtime="20201110 08:37:24.496"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.500" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:24.499" endtime="20201110 08:37:24.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.503" level="INFO">VALUE: [{'time': 0.018256042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018259819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.776999999999947e-06, 'source_diff': 3.776999999999947e-06}, {'time': 0.018264292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.473000000001365e-06, 'source_diff': 4.473000000001365e-06}, {'time': 0.018269972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.679999999997493e-06, 'source_diff': 5.679999999997493e-06}, {'time': 0.018274056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.08400000000142e-06, 'source_diff': 4.08400000000142e-06}, {'time': 0.018280028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.018284319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.291000000000017e-06, 'source_diff': 4.291000000000017e-06}, {'time': 0.018288681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.36200000000081e-06, 'source_diff': 4.36200000000081e-06}, {'time': 0.018291722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.040999999998767e-06, 'source_diff': 3.040999999998767e-06}, {'time': 0.018295806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.08400000000142e-06, 'source_diff': 4.08400000000142e-06}, {'time': 0.018300667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.860999999998367e-06, 'source_diff': 4.860999999998367e-06}, {'time': 0.018303889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.222000000000641e-06, 'source_diff': 3.222000000000641e-06}, {'time': 0.018308194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.304999999999587e-06, 'source_diff': 4.304999999999587e-06}, {'time': 0.018312583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.389000000000476e-06, 'source_diff': 4.389000000000476e-06}, {'time': 0.018315875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.2919999999984906e-06, 'source_diff': 3.2919999999984906e-06}, {'time': 0.018320597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.722000000002141e-06, 'source_diff': 4.722000000002141e-06}, {'time': 0.018323208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.610999999999586e-06, 'source_diff': 2.610999999999586e-06}, {'time': 0.018327431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.223000000001115e-06, 'source_diff': 4.223000000001115e-06}, {'time': 0.018333028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.596999999999547e-06, 'source_diff': 5.596999999999547e-06}, {'time': 0.018338444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.415999999997673e-06, 'source_diff': 5.415999999997673e-06}, {'time': 0.018343569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.125000000001656e-06, 'source_diff': 5.125000000001656e-06}, {'time': 0.018347833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.264000000000351e-06, 'source_diff': 4.264000000000351e-06}, {'time': 0.018353556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7229999999991454e-06, 'source_diff': 5.7229999999991454e-06}, {'time': 0.018357792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.236000000001211e-06, 'source_diff': 4.236000000001211e-06}, {'time': 0.018361125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.3329999999977267e-06, 'source_diff': 3.3329999999977267e-06}, {'time': 0.018364847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.722000000001141e-06, 'source_diff': 3.722000000001141e-06}, {'time': 0.018368083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.236000000000211e-06, 'source_diff': 3.236000000000211e-06}, {'time': 0.018373236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.153000000000796e-06, 'source_diff': 5.153000000000796e-06}, {'time': 0.018377139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.902999999999546e-06, 'source_diff': 3.902999999999546e-06}, {'time': 0.018380125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.985999999999961e-06, 'source_diff': 2.985999999999961e-06}, {'time': 0.018382597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.471999999999891e-06, 'source_diff': 2.471999999999891e-06}, {'time': 0.018387764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.167000000000366e-06, 'source_diff': 5.167000000000366e-06}, {'time': 0.018392125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.360999999997867e-06, 'source_diff': 4.360999999997867e-06}, {'time': 0.018397722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.596999999999547e-06, 'source_diff': 5.596999999999547e-06}, {'time': 0.018402944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.222000000002641e-06, 'source_diff': 5.222000000002641e-06}, {'time': 0.018407264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3199999999986305e-06, 'source_diff': 4.3199999999986305e-06}, {'time': 0.018409792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.52800000000164e-06, 'source_diff': 2.52800000000164e-06}, {'time': 0.01841375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.957999999998352e-06, 'source_diff': 3.957999999998352e-06}, {'time': 0.018420028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.278000000001921e-06, 'source_diff': 6.278000000001921e-06}, {'time': 0.018423389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3609999999968665e-06, 'source_diff': 3.3609999999968665e-06}, {'time': 0.018425958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.569000000000876e-06, 'source_diff': 2.569000000000876e-06}, {'time': 0.018428292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3339999999996697e-06, 'source_diff': 2.3339999999996697e-06}, {'time': 0.01843225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.958000000001821e-06, 'source_diff': 3.958000000001821e-06}, {'time': 0.018437417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.167000000000366e-06, 'source_diff': 5.167000000000366e-06}, {'time': 0.018441944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.526999999997228e-06, 'source_diff': 4.526999999997228e-06}, {'time': 0.018444431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.487000000002404e-06, 'source_diff': 2.487000000002404e-06}, {'time': 0.018446903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.471999999999891e-06, 'source_diff': 2.471999999999891e-06}, {'time': 0.0184525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.596999999999547e-06, 'source_diff': 5.596999999999547e-06}, {'time': 0.018455417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9169999999981155e-06, 'source_diff': 2.9169999999981155e-06}, {'time': 0.018460833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.416000000001142e-06, 'source_diff': 5.416000000001142e-06}]</msg>
<status status="PASS" starttime="20201110 08:37:24.501" endtime="20201110 08:37:24.505"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.496" endtime="20201110 08:37:24.505"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:24.519" level="INFO">${debug-compressed} = {'diff': [0, 3.776999999999947e-06, 4.473000000001365e-06, 5.679999999997493e-06, 4.08400000000142e-06, 5.971999999999922e-06, 4.291000000000017e-06, 4.36200000000081e-06, 3.040999999998767e-06, 4.084...</msg>
<status status="PASS" starttime="20201110 08:37:24.506" endtime="20201110 08:37:24.520"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.523" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:24.522" endtime="20201110 08:37:24.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.527" level="INFO">VALUE: {'diff': [0, 3.776999999999947e-06, 4.473000000001365e-06, 5.679999999997493e-06, 4.08400000000142e-06, 5.971999999999922e-06, 4.291000000000017e-06, 4.36200000000081e-06, 3.040999999998767e-06, 4.08400000000142e-06, 4.860999999998367e-06, 3.222000000000641e-06, 4.304999999999587e-06, 4.389000000000476e-06, 3.2919999999984906e-06, 4.722000000002141e-06, 2.610999999999586e-06, 4.223000000001115e-06, 5.596999999999547e-06, 5.415999999997673e-06, 5.125000000001656e-06, 4.264000000000351e-06, 5.7229999999991454e-06, 4.236000000001211e-06, 3.3329999999977267e-06, 3.722000000001141e-06, 3.236000000000211e-06, 5.153000000000796e-06, 3.902999999999546e-06, 2.985999999999961e-06, 2.471999999999891e-06, 5.167000000000366e-06, 4.360999999997867e-06, 5.596999999999547e-06, 5.222000000002641e-06, 4.3199999999986305e-06, 2.52800000000164e-06, 3.957999999998352e-06, 6.278000000001921e-06, 3.3609999999968665e-06, 2.569000000000876e-06, 2.3339999999996697e-06, 3.958000000001821e-06, 5.167000000000366e-06, 4.526999999997228e-06, 2.487000000002404e-06, 2.471999999999891e-06, 5.596999999999547e-06, 2.9169999999981155e-06, 5.416000000001142e-06], 'time': [0.018256042, 0.018259819, 0.018264292, 0.018269972, 0.018274056, 0.018280028, 0.018284319, 0.018288681, 0.018291722, 0.018295806, 0.018300667, 0.018303889, 0.018308194, 0.018312583, 0.018315875, 0.018320597, 0.018323208, 0.018327431, 0.018333028, 0.018338444, 0.018343569, 0.018347833, 0.018353556, 0.018357792, 0.018361125, 0.018364847, 0.018368083, 0.018373236, 0.018377139, 0.018380125, 0.018382597, 0.018387764, 0.018392125, 0.018397722, 0.018402944, 0.018407264, 0.018409792, 0.01841375, 0.018420028, 0.018423389, 0.018425958, 0.018428292, 0.01843225, 0.018437417, 0.018441944, 0.018444431, 0.018446903, 0.0184525, 0.018455417, 0.018460833], 'eventsourcesource_diff': [0, 3.776999999999947e-06, 4.473000000001365e-06, 5.679999999997493e-06, 4.08400000000142e-06, 5.971999999999922e-06, 4.291000000000017e-06, 4.36200000000081e-06, 3.040999999998767e-06, 4.08400000000142e-06, 4.860999999998367e-06, 3.222000000000641e-06, 4.304999999999587e-06, 4.389000000000476e-06, 3.2919999999984906e-06, 4.722000000002141e-06, 2.610999999999586e-06, 4.223000000001115e-06, 5.596999999999547e-06, 5.415999999997673e-06, 5.125000000001656e-06, 4.264000000000351e-06, 5.7229999999991454e-06, 4.236000000001211e-06, 3.3329999999977267e-06, 3.722000000001141e-06, 3.236000000000211e-06, 5.153000000000796e-06, 3.902999999999546e-06, 2.985999999999961e-06, 2.471999999999891e-06, 5.167000000000366e-06, 4.360999999997867e-06, 5.596999999999547e-06, 5.222000000002641e-06, 4.3199999999986305e-06, 2.52800000000164e-06, 3.957999999998352e-06, 6.278000000001921e-06, 3.3609999999968665e-06, 2.569000000000876e-06, 2.3339999999996697e-06, 3.958000000001821e-06, 5.167000000000366e-06, 4.526999999997228e-06, 2.487000000002404e-06, 2.471999999999891e-06, 5.596999999999547e-06, 2.9169999999981155e-06, 5.416000000001142e-06]}</msg>
<status status="PASS" starttime="20201110 08:37:24.525" endtime="20201110 08:37:24.528"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.520" endtime="20201110 08:37:24.529"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:24.538" level="INFO">${RESULT} = [{'time': 0.018259819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.776999999999947e-06, 'source_diff': 3.776999999999947e-06}, {'time': 0.018269972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:24.532" endtime="20201110 08:37:24.538"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:24.556" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.776999999999947e-06, 5.679999999997493e-06, 5.971999999999922e-06, 4.36200000000081e-06, 4.08400000000142e-06, 3.222000000000641e-06, 4.389000000000476e-06, 4.722000000002141e-06, 4.223000...</msg>
<status status="PASS" starttime="20201110 08:37:24.540" endtime="20201110 08:37:24.557"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.565" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:24.563" endtime="20201110 08:37:24.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.570" level="INFO">VALUE: [3.776999999999947e-06, 5.679999999997493e-06, 5.971999999999922e-06, 4.36200000000081e-06, 4.08400000000142e-06, 3.222000000000641e-06, 4.389000000000476e-06, 4.722000000002141e-06, 4.223000000001115e-06, 5.415999999997673e-06, 4.264000000000351e-06, 4.236000000001211e-06, 3.722000000001141e-06, 5.153000000000796e-06, 2.985999999999961e-06, 5.167000000000366e-06, 5.596999999999547e-06, 4.3199999999986305e-06, 3.957999999998352e-06, 3.3609999999968665e-06, 2.3339999999996697e-06, 5.167000000000366e-06, 2.487000000002404e-06, 5.596999999999547e-06, 5.416000000001142e-06]</msg>
<status status="PASS" starttime="20201110 08:37:24.567" endtime="20201110 08:37:24.571"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.558" endtime="20201110 08:37:24.572"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.577" endtime="20201110 08:37:24.579"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:24.584" endtime="20201110 08:37:24.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.580" endtime="20201110 08:37:24.607"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.573" endtime="20201110 08:37:24.608"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.179" endtime="20201110 08:37:24.609"></status>
</kw>
<msg timestamp="20201110 08:37:24.609" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.625" endtime="20201110 08:37:24.643"></status>
</kw>
<msg timestamp="20201110 08:37:24.644" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:24.622" endtime="20201110 08:37:24.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.646" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:24.645" endtime="20201110 08:37:24.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.647" endtime="20201110 08:37:24.649"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.617" endtime="20201110 08:37:24.649"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.613" endtime="20201110 08:37:24.650"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.656" endtime="20201110 08:37:24.921"></status>
</kw>
<msg timestamp="20201110 08:37:24.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032752111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032758278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:24.655" endtime="20201110 08:37:24.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032752111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032758278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:24.924" endtime="20201110 08:37:24.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.930" endtime="20201110 08:37:24.932"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.652" endtime="20201110 08:37:24.933"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.650" endtime="20201110 08:37:24.933"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.937" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:24.936" endtime="20201110 08:37:24.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.941" level="INFO">VALUE: [{'time': 0.032752111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032758278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.167000000001366e-06, 'source_diff': 6.167000000001366e-06}, {'time': 0.032763375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.096999999995577e-06, 'source_diff': 5.096999999995577e-06}, {'time': 0.032769722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.347000000003766e-06, 'source_diff': 6.347000000003766e-06}, {'time': 0.032774139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416999999999616e-06, 'source_diff': 4.416999999999616e-06}, {'time': 0.032778389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2499999999973115e-06, 'source_diff': 4.2499999999973115e-06}, {'time': 0.032784597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.208000000000602e-06, 'source_diff': 6.208000000000602e-06}, {'time': 0.032789153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.55600000000278e-06, 'source_diff': 4.55600000000278e-06}, {'time': 0.032792417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.2639999999958813e-06, 'source_diff': 3.2639999999958813e-06}, {'time': 0.032794903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4860000000029303e-06, 'source_diff': 2.4860000000029303e-06}, {'time': 0.032799125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.221999999998172e-06, 'source_diff': 4.221999999998172e-06}, {'time': 0.032803472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.347000000001766e-06, 'source_diff': 4.347000000001766e-06}, {'time': 0.032806569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.097000000000516e-06, 'source_diff': 3.097000000000516e-06}, {'time': 0.032811417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.84800000000174e-06, 'source_diff': 4.84800000000174e-06}, {'time': 0.032817028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.610999999995647e-06, 'source_diff': 5.610999999995647e-06}, {'time': 0.03281975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7220000000036104e-06, 'source_diff': 2.7220000000036104e-06}, {'time': 0.032824667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.917000000000116e-06, 'source_diff': 4.917000000000116e-06}, {'time': 0.032828569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.902000000000072e-06, 'source_diff': 3.902000000000072e-06}, {'time': 0.032834431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.861999999995371e-06, 'source_diff': 5.861999999995371e-06}, {'time': 0.032840667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.235999999999742e-06, 'source_diff': 6.235999999999742e-06}, {'time': 0.032846958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.291000000005487e-06, 'source_diff': 6.291000000005487e-06}, {'time': 0.032853167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2090000000000756e-06, 'source_diff': 6.2090000000000756e-06}, {'time': 0.032858764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.596999999996077e-06, 'source_diff': 5.596999999996077e-06}, {'time': 0.032862875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.111000000001086e-06, 'source_diff': 4.111000000001086e-06}, {'time': 0.032866972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.032872708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.735999999999242e-06, 'source_diff': 5.735999999999242e-06}, {'time': 0.032878111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.403000000001046e-06, 'source_diff': 5.403000000001046e-06}, {'time': 0.032883208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.096999999995577e-06, 'source_diff': 5.096999999995577e-06}, {'time': 0.032888944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.736000000006181e-06, 'source_diff': 5.736000000006181e-06}, {'time': 0.032893347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.032897083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7359999999972415e-06, 'source_diff': 3.7359999999972415e-06}, {'time': 0.032900625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.54200000000221e-06, 'source_diff': 3.54200000000221e-06}, {'time': 0.032905694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.0689999999964375e-06, 'source_diff': 5.0689999999964375e-06}, {'time': 0.032909931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.237000000004154e-06, 'source_diff': 4.237000000004154e-06}, {'time': 0.032914361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.429999999999712e-06, 'source_diff': 4.429999999999712e-06}, {'time': 0.032916708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.346999999999766e-06, 'source_diff': 2.346999999999766e-06}, {'time': 0.032919167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4589999999963252e-06, 'source_diff': 2.4589999999963252e-06}, {'time': 0.032921778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.610999999999586e-06, 'source_diff': 2.610999999999586e-06}, {'time': 0.032924806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.02800000000214e-06, 'source_diff': 3.02800000000214e-06}, {'time': 0.032930778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.032934514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7359999999972415e-06, 'source_diff': 3.7359999999972415e-06}, {'time': 0.032936917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4030000000049845e-06, 'source_diff': 2.4030000000049845e-06}, {'time': 0.032942681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7639999999983815e-06, 'source_diff': 5.7639999999983815e-06}, {'time': 0.03294725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.568999999995937e-06, 'source_diff': 4.568999999995937e-06}, {'time': 0.032949667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4170000000045544e-06, 'source_diff': 2.4170000000045544e-06}, {'time': 0.032952014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.346999999999766e-06, 'source_diff': 2.346999999999766e-06}, {'time': 0.032957931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.917000000001116e-06, 'source_diff': 5.917000000001116e-06}, {'time': 0.032963583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.651999999994883e-06, 'source_diff': 5.651999999994883e-06}, {'time': 0.032967875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.29200000000296e-06, 'source_diff': 4.29200000000296e-06}, {'time': 0.032971736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.861000000000836e-06, 'source_diff': 3.861000000000836e-06}]</msg>
<status status="PASS" starttime="20201110 08:37:24.938" endtime="20201110 08:37:24.953"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.934" endtime="20201110 08:37:24.954"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:24.968" level="INFO">${debug-compressed} = {'diff': [0, 6.167000000001366e-06, 5.096999999995577e-06, 6.347000000003766e-06, 4.416999999999616e-06, 4.2499999999973115e-06, 6.208000000000602e-06, 4.55600000000278e-06, 3.2639999999958813e-06, 2....</msg>
<status status="PASS" starttime="20201110 08:37:24.954" endtime="20201110 08:37:24.969"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.972" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:24.971" endtime="20201110 08:37:24.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.976" level="INFO">VALUE: {'diff': [0, 6.167000000001366e-06, 5.096999999995577e-06, 6.347000000003766e-06, 4.416999999999616e-06, 4.2499999999973115e-06, 6.208000000000602e-06, 4.55600000000278e-06, 3.2639999999958813e-06, 2.4860000000029303e-06, 4.221999999998172e-06, 4.347000000001766e-06, 3.097000000000516e-06, 4.84800000000174e-06, 5.610999999995647e-06, 2.7220000000036104e-06, 4.917000000000116e-06, 3.902000000000072e-06, 5.861999999995371e-06, 6.235999999999742e-06, 6.291000000005487e-06, 6.2090000000000756e-06, 5.596999999996077e-06, 4.111000000001086e-06, 4.097000000001516e-06, 5.735999999999242e-06, 5.403000000001046e-06, 5.096999999995577e-06, 5.736000000006181e-06, 4.403000000000046e-06, 3.7359999999972415e-06, 3.54200000000221e-06, 5.0689999999964375e-06, 4.237000000004154e-06, 4.429999999999712e-06, 2.346999999999766e-06, 2.4589999999963252e-06, 2.610999999999586e-06, 3.02800000000214e-06, 5.971999999999922e-06, 3.7359999999972415e-06, 2.4030000000049845e-06, 5.7639999999983815e-06, 4.568999999995937e-06, 2.4170000000045544e-06, 2.346999999999766e-06, 5.917000000001116e-06, 5.651999999994883e-06, 4.29200000000296e-06, 3.861000000000836e-06], 'time': [0.032752111, 0.032758278, 0.032763375, 0.032769722, 0.032774139, 0.032778389, 0.032784597, 0.032789153, 0.032792417, 0.032794903, 0.032799125, 0.032803472, 0.032806569, 0.032811417, 0.032817028, 0.03281975, 0.032824667, 0.032828569, 0.032834431, 0.032840667, 0.032846958, 0.032853167, 0.032858764, 0.032862875, 0.032866972, 0.032872708, 0.032878111, 0.032883208, 0.032888944, 0.032893347, 0.032897083, 0.032900625, 0.032905694, 0.032909931, 0.032914361, 0.032916708, 0.032919167, 0.032921778, 0.032924806, 0.032930778, 0.032934514, 0.032936917, 0.032942681, 0.03294725, 0.032949667, 0.032952014, 0.032957931, 0.032963583, 0.032967875, 0.032971736], 'eventsourcesource_diff': [0, 6.167000000001366e-06, 5.096999999995577e-06, 6.347000000003766e-06, 4.416999999999616e-06, 4.2499999999973115e-06, 6.208000000000602e-06, 4.55600000000278e-06, 3.2639999999958813e-06, 2.4860000000029303e-06, 4.221999999998172e-06, 4.347000000001766e-06, 3.097000000000516e-06, 4.84800000000174e-06, 5.610999999995647e-06, 2.7220000000036104e-06, 4.917000000000116e-06, 3.902000000000072e-06, 5.861999999995371e-06, 6.235999999999742e-06, 6.291000000005487e-06, 6.2090000000000756e-06, 5.596999999996077e-06, 4.111000000001086e-06, 4.097000000001516e-06, 5.735999999999242e-06, 5.403000000001046e-06, 5.096999999995577e-06, 5.736000000006181e-06, 4.403000000000046e-06, 3.7359999999972415e-06, 3.54200000000221e-06, 5.0689999999964375e-06, 4.237000000004154e-06, 4.429999999999712e-06, 2.346999999999766e-06, 2.4589999999963252e-06, 2.610999999999586e-06, 3.02800000000214e-06, 5.971999999999922e-06, 3.7359999999972415e-06, 2.4030000000049845e-06, 5.7639999999983815e-06, 4.568999999995937e-06, 2.4170000000045544e-06, 2.346999999999766e-06, 5.917000000001116e-06, 5.651999999994883e-06, 4.29200000000296e-06, 3.861000000000836e-06]}</msg>
<status status="PASS" starttime="20201110 08:37:24.973" endtime="20201110 08:37:24.976"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.969" endtime="20201110 08:37:24.977"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:24.980" level="INFO">${RESULT} = [{'time': 0.032758278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.167000000001366e-06, 'source_diff': 6.167000000001366e-06}, {'time': 0.032769722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:24.977" endtime="20201110 08:37:24.980"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:24.989" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.167000000001366e-06, 6.347000000003766e-06, 4.2499999999973115e-06, 4.55600000000278e-06, 2.4860000000029303e-06, 4.347000000001766e-06, 4.84800000000174e-06, 2.7220000000036104e-06, 3.902...</msg>
<status status="PASS" starttime="20201110 08:37:24.981" endtime="20201110 08:37:24.989"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.993" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:24.992" endtime="20201110 08:37:24.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.995" level="INFO">VALUE: [6.167000000001366e-06, 6.347000000003766e-06, 4.2499999999973115e-06, 4.55600000000278e-06, 2.4860000000029303e-06, 4.347000000001766e-06, 4.84800000000174e-06, 2.7220000000036104e-06, 3.902000000000072e-06, 6.235999999999742e-06, 6.2090000000000756e-06, 4.111000000001086e-06, 5.735999999999242e-06, 5.096999999995577e-06, 4.403000000000046e-06, 3.54200000000221e-06, 4.237000000004154e-06, 2.346999999999766e-06, 2.610999999999586e-06, 5.971999999999922e-06, 2.4030000000049845e-06, 4.568999999995937e-06, 2.346999999999766e-06, 5.651999999994883e-06, 3.861000000000836e-06]</msg>
<status status="PASS" starttime="20201110 08:37:24.994" endtime="20201110 08:37:24.996"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.989" endtime="20201110 08:37:24.997"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.000" endtime="20201110 08:37:25.001"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:25.004" endtime="20201110 08:37:25.023"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.002" endtime="20201110 08:37:25.024"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.998" endtime="20201110 08:37:25.024"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.610" endtime="20201110 08:37:25.024"></status>
</kw>
<msg timestamp="20201110 08:37:25.025" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.034" endtime="20201110 08:37:25.048"></status>
</kw>
<msg timestamp="20201110 08:37:25.049" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:25.033" endtime="20201110 08:37:25.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.051" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:25.050" endtime="20201110 08:37:25.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.053" endtime="20201110 08:37:25.054"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.028" endtime="20201110 08:37:25.055"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.026" endtime="20201110 08:37:25.055"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.062" endtime="20201110 08:37:25.331"></status>
</kw>
<msg timestamp="20201110 08:37:25.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019771264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019776111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:25.060" endtime="20201110 08:37:25.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019771264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019776111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:25.334" endtime="20201110 08:37:25.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.340" endtime="20201110 08:37:25.341"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.058" endtime="20201110 08:37:25.343"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.056" endtime="20201110 08:37:25.344"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.352" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:25.350" endtime="20201110 08:37:25.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.361" level="INFO">VALUE: [{'time': 0.019771264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019776111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.846999999998797e-06, 'source_diff': 4.846999999998797e-06}, {'time': 0.019781958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.019787056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.09800000000199e-06, 'source_diff': 5.09800000000199e-06}, {'time': 0.019791361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.304999999999587e-06, 'source_diff': 4.304999999999587e-06}, {'time': 0.019794694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.333000000001196e-06, 'source_diff': 3.333000000001196e-06}, {'time': 0.019800667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.9729999999993955e-06, 'source_diff': 5.9729999999993955e-06}, {'time': 0.019806847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.179999999997993e-06, 'source_diff': 6.179999999997993e-06}, {'time': 0.01981, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.153000000002265e-06, 'source_diff': 3.153000000002265e-06}, {'time': 0.019812528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5279999999981706e-06, 'source_diff': 2.5279999999981706e-06}, {'time': 0.019815528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.999999999999531e-06, 'source_diff': 2.999999999999531e-06}, {'time': 0.0198215, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.019824958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.458000000001321e-06, 'source_diff': 3.458000000001321e-06}, {'time': 0.0198305, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.542000000000741e-06, 'source_diff': 5.542000000000741e-06}, {'time': 0.019834542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.041999999999241e-06, 'source_diff': 4.041999999999241e-06}, {'time': 0.019837819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.276999999999447e-06, 'source_diff': 3.276999999999447e-06}, {'time': 0.019840861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.04200000000171e-06, 'source_diff': 3.04200000000171e-06}, {'time': 0.019843278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4169999999976155e-06, 'source_diff': 2.4169999999976155e-06}, {'time': 0.019847194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.915999999999642e-06, 'source_diff': 3.915999999999642e-06}, {'time': 0.019851417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.223000000001115e-06, 'source_diff': 4.223000000001115e-06}, {'time': 0.019855014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.597000000001016e-06, 'source_diff': 3.597000000001016e-06}, {'time': 0.019861236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.019863625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3889999999984757e-06, 'source_diff': 2.3889999999984757e-06}, {'time': 0.019868444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.818999999999657e-06, 'source_diff': 4.818999999999657e-06}, {'time': 0.019870847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.403000000001515e-06, 'source_diff': 2.403000000001515e-06}, {'time': 0.019876708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.019879389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.681000000000905e-06, 'source_diff': 2.681000000000905e-06}, {'time': 0.019884583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.194000000000032e-06, 'source_diff': 5.194000000000032e-06}, {'time': 0.019887819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.236000000000211e-06, 'source_diff': 3.236000000000211e-06}, {'time': 0.019890347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5279999999981706e-06, 'source_diff': 2.5279999999981706e-06}, {'time': 0.019896333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.019899, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.667000000001335e-06, 'source_diff': 2.667000000001335e-06}, {'time': 0.019903222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.222000000001641e-06, 'source_diff': 4.222000000001641e-06}, {'time': 0.019908153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.930999999999686e-06, 'source_diff': 4.930999999999686e-06}, {'time': 0.019910861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7079999999971016e-06, 'source_diff': 2.7079999999971016e-06}, {'time': 0.019913458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.597000000000016e-06, 'source_diff': 2.597000000000016e-06}, {'time': 0.019919056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.59800000000249e-06, 'source_diff': 5.59800000000249e-06}, {'time': 0.019921653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.597000000000016e-06, 'source_diff': 2.597000000000016e-06}, {'time': 0.019926375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.721999999998672e-06, 'source_diff': 4.721999999998672e-06}, {'time': 0.019932292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.917000000001116e-06, 'source_diff': 5.917000000001116e-06}, {'time': 0.019935708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.415999999999142e-06, 'source_diff': 3.415999999999142e-06}, {'time': 0.019940181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.473000000001365e-06, 'source_diff': 4.473000000001365e-06}, {'time': 0.019944347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.165999999999892e-06, 'source_diff': 4.165999999999892e-06}, {'time': 0.019948028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6809999999984355e-06, 'source_diff': 3.6809999999984355e-06}, {'time': 0.019951736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.708000000001571e-06, 'source_diff': 3.708000000001571e-06}, {'time': 0.019955903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.01995975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.846999999997797e-06, 'source_diff': 3.846999999997797e-06}, {'time': 0.019965167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.417000000000616e-06, 'source_diff': 5.417000000000616e-06}, {'time': 0.019969028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.861000000000836e-06, 'source_diff': 3.861000000000836e-06}, {'time': 0.019972417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3889999999994758e-06, 'source_diff': 3.3889999999994758e-06}]</msg>
<status status="PASS" starttime="20201110 08:37:25.355" endtime="20201110 08:37:25.363"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.345" endtime="20201110 08:37:25.364"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:25.397" level="INFO">${debug-compressed} = {'diff': [0, 4.846999999998797e-06, 5.846999999999797e-06, 5.09800000000199e-06, 4.304999999999587e-06, 3.333000000001196e-06, 5.9729999999993955e-06, 6.179999999997993e-06, 3.153000000002265e-06, 2.5...</msg>
<status status="PASS" starttime="20201110 08:37:25.366" endtime="20201110 08:37:25.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.406" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:25.404" endtime="20201110 08:37:25.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.413" level="INFO">VALUE: {'diff': [0, 4.846999999998797e-06, 5.846999999999797e-06, 5.09800000000199e-06, 4.304999999999587e-06, 3.333000000001196e-06, 5.9729999999993955e-06, 6.179999999997993e-06, 3.153000000002265e-06, 2.5279999999981706e-06, 2.999999999999531e-06, 5.971999999999922e-06, 3.458000000001321e-06, 5.542000000000741e-06, 4.041999999999241e-06, 3.276999999999447e-06, 3.04200000000171e-06, 2.4169999999976155e-06, 3.915999999999642e-06, 4.223000000001115e-06, 3.597000000001016e-06, 6.222000000000172e-06, 2.3889999999984757e-06, 4.818999999999657e-06, 2.403000000001515e-06, 5.860999999999367e-06, 2.681000000000905e-06, 5.194000000000032e-06, 3.236000000000211e-06, 2.5279999999981706e-06, 5.985999999999492e-06, 2.667000000001335e-06, 4.222000000001641e-06, 4.930999999999686e-06, 2.7079999999971016e-06, 2.597000000000016e-06, 5.59800000000249e-06, 2.597000000000016e-06, 4.721999999998672e-06, 5.917000000001116e-06, 3.415999999999142e-06, 4.473000000001365e-06, 4.165999999999892e-06, 3.6809999999984355e-06, 3.708000000001571e-06, 4.166999999999366e-06, 3.846999999997797e-06, 5.417000000000616e-06, 3.861000000000836e-06, 3.3889999999994758e-06], 'time': [0.019771264, 0.019776111, 0.019781958, 0.019787056, 0.019791361, 0.019794694, 0.019800667, 0.019806847, 0.01981, 0.019812528, 0.019815528, 0.0198215, 0.019824958, 0.0198305, 0.019834542, 0.019837819, 0.019840861, 0.019843278, 0.019847194, 0.019851417, 0.019855014, 0.019861236, 0.019863625, 0.019868444, 0.019870847, 0.019876708, 0.019879389, 0.019884583, 0.019887819, 0.019890347, 0.019896333, 0.019899, 0.019903222, 0.019908153, 0.019910861, 0.019913458, 0.019919056, 0.019921653, 0.019926375, 0.019932292, 0.019935708, 0.019940181, 0.019944347, 0.019948028, 0.019951736, 0.019955903, 0.01995975, 0.019965167, 0.019969028, 0.019972417], 'eventsourcesource_diff': [0, 4.846999999998797e-06, 5.846999999999797e-06, 5.09800000000199e-06, 4.304999999999587e-06, 3.333000000001196e-06, 5.9729999999993955e-06, 6.179999999997993e-06, 3.153000000002265e-06, 2.5279999999981706e-06, 2.999999999999531e-06, 5.971999999999922e-06, 3.458000000001321e-06, 5.542000000000741e-06, 4.041999999999241e-06, 3.276999999999447e-06, 3.04200000000171e-06, 2.4169999999976155e-06, 3.915999999999642e-06, 4.223000000001115e-06, 3.597000000001016e-06, 6.222000000000172e-06, 2.3889999999984757e-06, 4.818999999999657e-06, 2.403000000001515e-06, 5.860999999999367e-06, 2.681000000000905e-06, 5.194000000000032e-06, 3.236000000000211e-06, 2.5279999999981706e-06, 5.985999999999492e-06, 2.667000000001335e-06, 4.222000000001641e-06, 4.930999999999686e-06, 2.7079999999971016e-06, 2.597000000000016e-06, 5.59800000000249e-06, 2.597000000000016e-06, 4.721999999998672e-06, 5.917000000001116e-06, 3.415999999999142e-06, 4.473000000001365e-06, 4.165999999999892e-06, 3.6809999999984355e-06, 3.708000000001571e-06, 4.166999999999366e-06, 3.846999999997797e-06, 5.417000000000616e-06, 3.861000000000836e-06, 3.3889999999994758e-06]}</msg>
<status status="PASS" starttime="20201110 08:37:25.409" endtime="20201110 08:37:25.415"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.399" endtime="20201110 08:37:25.416"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:25.423" level="INFO">${RESULT} = [{'time': 0.019776111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.846999999998797e-06, 'source_diff': 4.846999999998797e-06}, {'time': 0.019787056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:25.417" endtime="20201110 08:37:25.424"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:25.443" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.846999999998797e-06, 5.09800000000199e-06, 3.333000000001196e-06, 6.179999999997993e-06, 2.5279999999981706e-06, 5.971999999999922e-06, 5.542000000000741e-06, 3.276999999999447e-06, 2.4169...</msg>
<status status="PASS" starttime="20201110 08:37:25.425" endtime="20201110 08:37:25.443"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.452" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:25.449" endtime="20201110 08:37:25.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.455" level="INFO">VALUE: [4.846999999998797e-06, 5.09800000000199e-06, 3.333000000001196e-06, 6.179999999997993e-06, 2.5279999999981706e-06, 5.971999999999922e-06, 5.542000000000741e-06, 3.276999999999447e-06, 2.4169999999976155e-06, 4.223000000001115e-06, 6.222000000000172e-06, 4.818999999999657e-06, 5.860999999999367e-06, 5.194000000000032e-06, 2.5279999999981706e-06, 2.667000000001335e-06, 4.930999999999686e-06, 2.597000000000016e-06, 2.597000000000016e-06, 5.917000000001116e-06, 4.473000000001365e-06, 3.6809999999984355e-06, 4.166999999999366e-06, 5.417000000000616e-06, 3.3889999999994758e-06]</msg>
<status status="PASS" starttime="20201110 08:37:25.453" endtime="20201110 08:37:25.455"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.444" endtime="20201110 08:37:25.456"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.459" endtime="20201110 08:37:25.460"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:25.463" endtime="20201110 08:37:25.482"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.460" endtime="20201110 08:37:25.483"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.457" endtime="20201110 08:37:25.483"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.025" endtime="20201110 08:37:25.484"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.415" endtime="20201110 08:37:25.484"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:25.488" endtime="20201110 08:37:25.507"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.486" endtime="20201110 08:37:25.508"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.485" endtime="20201110 08:37:25.508"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201110 08:37:17.300" endtime="20201110 08:37:25.509" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:25.516" endtime="20201110 08:37:25.536"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.514" endtime="20201110 08:37:25.536"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.550" endtime="20201110 08:37:25.568"></status>
</kw>
<msg timestamp="20201110 08:37:25.569" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:25.548" endtime="20201110 08:37:25.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.571" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:25.570" endtime="20201110 08:37:25.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.574" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:37:25.572" endtime="20201110 08:37:25.575"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:25.546" endtime="20201110 08:37:25.575"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:25.543" endtime="20201110 08:37:25.576"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.542" endtime="20201110 08:37:25.576"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:37:25.580" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:37:25.579" endtime="20201110 08:37:25.581"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.577" endtime="20201110 08:37:25.581"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.541" endtime="20201110 08:37:25.581"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.540" endtime="20201110 08:37:25.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.582" endtime="20201110 08:37:25.583"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.539" endtime="20201110 08:37:25.584"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.537" endtime="20201110 08:37:25.584"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.513" endtime="20201110 08:37:25.585"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201110 08:37:25.587" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.595" endtime="20201110 08:37:25.612"></status>
</kw>
<msg timestamp="20201110 08:37:25.612" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:25.593" endtime="20201110 08:37:25.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.615" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:25.613" endtime="20201110 08:37:25.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.616" endtime="20201110 08:37:25.617"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.590" endtime="20201110 08:37:25.618"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.588" endtime="20201110 08:37:25.618"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.625" endtime="20201110 08:37:25.914"></status>
</kw>
<msg timestamp="20201110 08:37:25.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069486083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069491583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:25.624" endtime="20201110 08:37:25.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069486083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069491583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:25.919" endtime="20201110 08:37:25.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.927" endtime="20201110 08:37:25.929"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.621" endtime="20201110 08:37:25.929"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.619" endtime="20201110 08:37:25.930"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:25.934" level="INFO">${RESULT} = [{'time': 0.069491583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.499999999991623e-06, 'source_diff': 5.499999999991623e-06}, {'time': 0.069495069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:25.931" endtime="20201110 08:37:25.935"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:25.949" level="INFO">${OVERHEAD} = {'diff': [5.499999999991623e-06, 1.1520000000042607e-06, 1.1389999999972256e-06, 1.1110000000119635e-06, 1.069000000006315e-06, 1.1670000000102432e-06, 1.1520000000042607e-06, 1.1109999999980857e-06, ...</msg>
<status status="PASS" starttime="20201110 08:37:25.935" endtime="20201110 08:37:25.950"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.954" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:25.953" endtime="20201110 08:37:25.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.957" level="INFO">VALUE: [5.499999999991623e-06, 1.1520000000042607e-06, 1.1389999999972256e-06, 1.1110000000119635e-06, 1.069000000006315e-06, 1.1670000000102432e-06, 1.1520000000042607e-06, 1.1109999999980857e-06, 1.1529999999898566e-06, 1.1389999999972256e-06, 1.1529999999898566e-06, 1.1389999999972256e-06, 1.1250000000045945e-06, 1.1520000000042607e-06, 1.2219999999951714e-06, 1.1529999999898566e-06, 1.1810000000028742e-06, 1.1529999999898566e-06, 1.1520000000042607e-06, 1.1530000000037344e-06, 1.1249999999907168e-06, 1.1810000000028742e-06, 1.1389999999972256e-06, 1.1389999999972256e-06, 1.1529999999898566e-06, 1.1530000000037344e-06, 1.137999999997752e-06, 1.1530000000037344e-06, 1.1669999999963654e-06, 1.1520000000042607e-06, 1.1389999999972256e-06, 1.1529999999898566e-06, 1.1529999999898566e-06, 1.1810000000028742e-06, 1.151999999990383e-06, 1.1530000000037344e-06, 1.1799999999895228e-06, 1.1390000000111034e-06, 1.1530000000037344e-06, 1.1520000000042607e-06, 1.1389999999972256e-06, 1.1389999999972256e-06, 1.1659999999968917e-06, 1.1389999999972256e-06, 1.1800000000034006e-06, 1.1530000000037344e-06, 1.1530000000037344e-06, 1.1389999999972256e-06, 1.1530000000037344e-06, 1.1529999999898566e-06]</msg>
<status status="PASS" starttime="20201110 08:37:25.955" endtime="20201110 08:37:25.957"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.950" endtime="20201110 08:37:25.958"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.961" endtime="20201110 08:37:25.962"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:25.965" endtime="20201110 08:37:25.984"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.963" endtime="20201110 08:37:25.985"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.958" endtime="20201110 08:37:25.985"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.587" endtime="20201110 08:37:25.986"></status>
</kw>
<msg timestamp="20201110 08:37:25.986" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.994" endtime="20201110 08:37:26.010"></status>
</kw>
<msg timestamp="20201110 08:37:26.010" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:25.993" endtime="20201110 08:37:26.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:26.013" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:26.011" endtime="20201110 08:37:26.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:26.014" endtime="20201110 08:37:26.016"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.990" endtime="20201110 08:37:26.016"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.988" endtime="20201110 08:37:26.017"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:26.024" endtime="20201110 08:37:26.308"></status>
</kw>
<msg timestamp="20201110 08:37:26.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019030778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019031875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:26.023" endtime="20201110 08:37:26.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:26.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019030778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019031875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:26.312" endtime="20201110 08:37:26.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:26.321" endtime="20201110 08:37:26.323"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.019" endtime="20201110 08:37:26.323"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.017" endtime="20201110 08:37:26.324"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:26.328" level="INFO">${RESULT} = [{'time': 0.019031875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}, {'time': 0.019038097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:26.324" endtime="20201110 08:37:26.328"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:26.342" level="INFO">${OVERHEAD} = {'diff': [1.0969999999985158e-06, 1.0970000000019853e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1249999999976557e-06, 1.179999999999931e-06, 1.153000000000265e-06, 1....</msg>
<status status="PASS" starttime="20201110 08:37:26.329" endtime="20201110 08:37:26.342"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:26.346" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:26.345" endtime="20201110 08:37:26.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:26.349" level="INFO">VALUE: [1.0969999999985158e-06, 1.0970000000019853e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1249999999976557e-06, 1.179999999999931e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1529999999967955e-06, 1.153000000000265e-06, 1.082999999998946e-06, 1.1669999999998348e-06, 1.125000000001125e-06, 1.153000000000265e-06, 1.1529999999967955e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.082999999998946e-06, 1.1809999999994047e-06, 1.1519999999973218e-06, 1.1529999999967955e-06, 1.1660000000003612e-06, 1.1809999999994047e-06, 1.1110000000015552e-06, 1.1520000000007913e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.1389999999972256e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1520000000007913e-06, 1.1389999999972256e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.179999999999931e-06, 1.1669999999998348e-06, 1.1519999999973218e-06, 1.179999999999931e-06, 1.1380000000012214e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1809999999994047e-06, 1.0839999999984196e-06, 1.1389999999972256e-06, 1.139000000000695e-06, 1.153000000000265e-06]</msg>
<status status="PASS" starttime="20201110 08:37:26.347" endtime="20201110 08:37:26.349"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.343" endtime="20201110 08:37:26.350"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:26.352" endtime="20201110 08:37:26.354"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:26.356" endtime="20201110 08:37:26.376"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.354" endtime="20201110 08:37:26.376"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.350" endtime="20201110 08:37:26.377"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.987" endtime="20201110 08:37:26.377"></status>
</kw>
<msg timestamp="20201110 08:37:26.377" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:26.385" endtime="20201110 08:37:26.401"></status>
</kw>
<msg timestamp="20201110 08:37:26.401" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:26.384" endtime="20201110 08:37:26.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:26.404" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:26.402" endtime="20201110 08:37:26.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:26.405" endtime="20201110 08:37:26.407"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.381" endtime="20201110 08:37:26.407"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.379" endtime="20201110 08:37:26.408"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:26.415" endtime="20201110 08:37:26.706"></status>
</kw>
<msg timestamp="20201110 08:37:26.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018539444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018540583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:26.413" endtime="20201110 08:37:26.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:26.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018539444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018540583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:26.710" endtime="20201110 08:37:26.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:26.719" endtime="20201110 08:37:26.720"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.410" endtime="20201110 08:37:26.721"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.408" endtime="20201110 08:37:26.721"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:26.726" level="INFO">${RESULT} = [{'time': 0.018540583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.018547625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:26.722" endtime="20201110 08:37:26.726"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:26.741" level="INFO">${OVERHEAD} = {'diff': [1.139000000000695e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1810000000028742e-06, 1.1669999999998348e-06, 1.125000000001125e-06, 1.068999999999376e-06, 1.139000000000695e-06, 1.12...</msg>
<status status="PASS" starttime="20201110 08:37:26.727" endtime="20201110 08:37:26.741"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:26.745" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:26.744" endtime="20201110 08:37:26.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:26.748" level="INFO">VALUE: [1.139000000000695e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1810000000028742e-06, 1.1669999999998348e-06, 1.125000000001125e-06, 1.068999999999376e-06, 1.139000000000695e-06, 1.125000000001125e-06, 1.153000000000265e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.1810000000028742e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.1520000000007913e-06, 1.153000000000265e-06, 1.137999999997752e-06, 1.153000000000265e-06, 1.1389999999972256e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1529999999967955e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.125000000001125e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.1659999999968917e-06, 1.1669999999998348e-06, 1.179999999999931e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1529999999967955e-06, 1.139000000000695e-06, 1.1809999999994047e-06, 1.1809999999994047e-06, 1.153000000000265e-06, 1.082999999998946e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.1380000000012214e-06]</msg>
<status status="PASS" starttime="20201110 08:37:26.746" endtime="20201110 08:37:26.749"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.742" endtime="20201110 08:37:26.749"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:26.752" endtime="20201110 08:37:26.754"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:26.756" endtime="20201110 08:37:26.776"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.754" endtime="20201110 08:37:26.776"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.750" endtime="20201110 08:37:26.777"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.378" endtime="20201110 08:37:26.777"></status>
</kw>
<msg timestamp="20201110 08:37:26.777" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:26.785" endtime="20201110 08:37:26.801"></status>
</kw>
<msg timestamp="20201110 08:37:26.802" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:26.784" endtime="20201110 08:37:26.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:26.804" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:26.803" endtime="20201110 08:37:26.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:26.805" endtime="20201110 08:37:26.807"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.781" endtime="20201110 08:37:26.808"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.779" endtime="20201110 08:37:26.808"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:26.815" endtime="20201110 08:37:27.104"></status>
</kw>
<msg timestamp="20201110 08:37:27.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018491069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018492222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:26.813" endtime="20201110 08:37:27.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018491069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018492222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:27.108" endtime="20201110 08:37:27.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:27.117" endtime="20201110 08:37:27.119"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.810" endtime="20201110 08:37:27.120"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.809" endtime="20201110 08:37:27.120"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:27.124" level="INFO">${RESULT} = [{'time': 0.018492222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.153000000000265e-06, 'source_diff': 1.153000000000265e-06}, {'time': 0.0184955, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:37:27.121" endtime="20201110 08:37:27.125"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:27.138" level="INFO">${OVERHEAD} = {'diff': [1.153000000000265e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1520000000007913e-06, 1.193999999999501e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.179...</msg>
<status status="PASS" starttime="20201110 08:37:27.125" endtime="20201110 08:37:27.139"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.143" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:27.142" endtime="20201110 08:37:27.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.145" level="INFO">VALUE: [1.153000000000265e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1520000000007913e-06, 1.193999999999501e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.179999999999931e-06, 1.2089999999985446e-06, 1.1809999999994047e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.0970000000019853e-06, 1.1669999999998348e-06, 1.137999999997752e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.1810000000028742e-06, 1.139000000000695e-06, 1.1809999999994047e-06, 1.1669999999998348e-06, 1.1519999999973218e-06, 1.153000000000265e-06, 1.1519999999973218e-06, 1.0969999999985158e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.1520000000007913e-06, 1.1389999999972256e-06, 1.153000000000265e-06, 1.1520000000007913e-06, 1.1669999999998348e-06, 1.139000000000695e-06, 1.1380000000012214e-06, 1.153000000000265e-06, 1.1520000000007913e-06, 1.139000000000695e-06, 1.1809999999994047e-06, 1.1669999999998348e-06, 1.139000000000695e-06, 1.1380000000012214e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.1520000000007913e-06]</msg>
<status status="PASS" starttime="20201110 08:37:27.144" endtime="20201110 08:37:27.146"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.139" endtime="20201110 08:37:27.147"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:27.149" endtime="20201110 08:37:27.150"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:27.153" endtime="20201110 08:37:27.172"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.151" endtime="20201110 08:37:27.173"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.147" endtime="20201110 08:37:27.173"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.778" endtime="20201110 08:37:27.173"></status>
</kw>
<msg timestamp="20201110 08:37:27.174" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:27.181" endtime="20201110 08:37:27.197"></status>
</kw>
<msg timestamp="20201110 08:37:27.197" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:27.180" endtime="20201110 08:37:27.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.200" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:27.198" endtime="20201110 08:37:27.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:27.201" endtime="20201110 08:37:27.202"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.177" endtime="20201110 08:37:27.203"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.175" endtime="20201110 08:37:27.203"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:27.210" endtime="20201110 08:37:27.498"></status>
</kw>
<msg timestamp="20201110 08:37:27.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018401722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018402875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:27.208" endtime="20201110 08:37:27.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018401722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018402875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:27.502" endtime="20201110 08:37:27.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:27.511" endtime="20201110 08:37:27.513"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.206" endtime="20201110 08:37:27.513"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.204" endtime="20201110 08:37:27.514"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:27.518" level="INFO">${RESULT} = [{'time': 0.018402875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.153000000000265e-06, 'source_diff': 1.153000000000265e-06}, {'time': 0.018407472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:27.515" endtime="20201110 08:37:27.518"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:27.532" level="INFO">${OVERHEAD} = {'diff': [1.153000000000265e-06, 1.139000000000695e-06, 1.1660000000003612e-06, 1.1110000000015552e-06, 1.153000000000265e-06, 1.179999999999931e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.1...</msg>
<status status="PASS" starttime="20201110 08:37:27.519" endtime="20201110 08:37:27.532"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.537" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:27.535" endtime="20201110 08:37:27.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.539" level="INFO">VALUE: [1.153000000000265e-06, 1.139000000000695e-06, 1.1660000000003612e-06, 1.1110000000015552e-06, 1.153000000000265e-06, 1.179999999999931e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.1389999999972256e-06, 1.153000000000265e-06, 1.0970000000019853e-06, 1.153000000000265e-06, 1.1380000000012214e-06, 1.153000000000265e-06, 1.1810000000028742e-06, 1.1389999999972256e-06, 1.1800000000034006e-06, 1.153000000000265e-06, 1.0969999999985158e-06, 1.1669999999998348e-06, 1.193999999999501e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.1520000000007913e-06, 1.1669999999998348e-06, 1.1519999999973218e-06, 1.0699999999988496e-06, 1.153000000000265e-06, 1.1380000000012214e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1249999999976557e-06, 1.1249999999976557e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1249999999976557e-06, 1.139000000000695e-06, 1.1809999999994047e-06, 1.1389999999972256e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.1520000000007913e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1660000000003612e-06, 1.139000000000695e-06]</msg>
<status status="PASS" starttime="20201110 08:37:27.538" endtime="20201110 08:37:27.540"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.533" endtime="20201110 08:37:27.541"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:27.543" endtime="20201110 08:37:27.544"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:27.547" endtime="20201110 08:37:27.566"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.545" endtime="20201110 08:37:27.567"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.541" endtime="20201110 08:37:27.567"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.174" endtime="20201110 08:37:27.567"></status>
</kw>
<msg timestamp="20201110 08:37:27.568" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:27.576" endtime="20201110 08:37:27.592"></status>
</kw>
<msg timestamp="20201110 08:37:27.592" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:27.574" endtime="20201110 08:37:27.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.595" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:27.593" endtime="20201110 08:37:27.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:27.596" endtime="20201110 08:37:27.597"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.571" endtime="20201110 08:37:27.598"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.569" endtime="20201110 08:37:27.598"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:27.605" endtime="20201110 08:37:27.895"></status>
</kw>
<msg timestamp="20201110 08:37:27.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018573806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018574958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:27.603" endtime="20201110 08:37:27.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018573806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018574958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:27.900" endtime="20201110 08:37:27.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:27.908" endtime="20201110 08:37:27.910"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.601" endtime="20201110 08:37:27.911"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.599" endtime="20201110 08:37:27.911"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:27.916" level="INFO">${RESULT} = [{'time': 0.018574958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1519999999973218e-06, 'source_diff': 1.1519999999973218e-06}, {'time': 0.018581361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:27.912" endtime="20201110 08:37:27.916"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:27.930" level="INFO">${OVERHEAD} = {'diff': [1.1519999999973218e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.179999999999931e-06, 1.1669999999998348e-06, 1.137999999997752e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.15...</msg>
<status status="PASS" starttime="20201110 08:37:27.917" endtime="20201110 08:37:27.930"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.935" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:27.933" endtime="20201110 08:37:27.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.937" level="INFO">VALUE: [1.1519999999973218e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.179999999999931e-06, 1.1669999999998348e-06, 1.137999999997752e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.1249999999976557e-06, 1.0979999999979895e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.1520000000007913e-06, 1.1520000000007913e-06, 1.139000000000695e-06, 1.1670000000033043e-06, 1.139000000000695e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.125000000001125e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.193999999999501e-06, 1.1249999999976557e-06, 1.1249999999976557e-06, 1.1520000000007913e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.1389999999972256e-06, 1.153000000000265e-06, 1.1389999999972256e-06, 1.0839999999984196e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1520000000007913e-06, 1.1389999999972256e-06]</msg>
<status status="PASS" starttime="20201110 08:37:27.936" endtime="20201110 08:37:27.938"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.931" endtime="20201110 08:37:27.939"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:27.941" endtime="20201110 08:37:27.942"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:27.944" endtime="20201110 08:37:27.964"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.943" endtime="20201110 08:37:27.964"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.939" endtime="20201110 08:37:27.965"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.568" endtime="20201110 08:37:27.965"></status>
</kw>
<msg timestamp="20201110 08:37:27.965" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:27.973" endtime="20201110 08:37:27.990"></status>
</kw>
<msg timestamp="20201110 08:37:27.990" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:27.972" endtime="20201110 08:37:27.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.993" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:27.991" endtime="20201110 08:37:27.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:27.994" endtime="20201110 08:37:27.995"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.969" endtime="20201110 08:37:27.996"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.967" endtime="20201110 08:37:27.996"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:28.003" endtime="20201110 08:37:28.292"></status>
</kw>
<msg timestamp="20201110 08:37:28.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018501444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018502611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:28.002" endtime="20201110 08:37:28.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:28.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018501444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018502611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:28.296" endtime="20201110 08:37:28.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:28.305" endtime="20201110 08:37:28.307"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.999" endtime="20201110 08:37:28.307"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.997" endtime="20201110 08:37:28.308"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:28.312" level="INFO">${RESULT} = [{'time': 0.018502611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1669999999998348e-06, 'source_diff': 1.1669999999998348e-06}, {'time': 0.018505944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:28.308" endtime="20201110 08:37:28.312"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:28.327" level="INFO">${OVERHEAD} = {'diff': [1.1669999999998348e-06, 1.1520000000007913e-06, 1.179999999999931e-06, 1.1519999999973218e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.1520000000007913e-06, 1.1389999999972256e-06, ...</msg>
<status status="PASS" starttime="20201110 08:37:28.313" endtime="20201110 08:37:28.328"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:28.332" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:28.331" endtime="20201110 08:37:28.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:28.334" level="INFO">VALUE: [1.1669999999998348e-06, 1.1520000000007913e-06, 1.179999999999931e-06, 1.1519999999973218e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.1520000000007913e-06, 1.1389999999972256e-06, 1.139000000000695e-06, 1.1669999999998348e-06, 1.2219999999986408e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.1520000000007913e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1519999999973218e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.125000000001125e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.1670000000033043e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.1809999999994047e-06, 1.153000000000265e-06, 1.125000000001125e-06, 1.1529999999967955e-06, 1.153000000000265e-06, 1.1520000000007913e-06, 1.153000000000265e-06, 1.179999999999931e-06, 1.153000000000265e-06, 1.1389999999972256e-06, 1.1520000000007913e-06, 1.139000000000695e-06, 1.1669999999998348e-06, 1.1380000000012214e-06, 1.1669999999998348e-06, 1.1389999999972256e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.1669999999998348e-06]</msg>
<status status="PASS" starttime="20201110 08:37:28.333" endtime="20201110 08:37:28.335"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.328" endtime="20201110 08:37:28.336"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:28.338" endtime="20201110 08:37:28.339"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:28.342" endtime="20201110 08:37:28.361"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.340" endtime="20201110 08:37:28.362"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.336" endtime="20201110 08:37:28.362"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.966" endtime="20201110 08:37:28.362"></status>
</kw>
<msg timestamp="20201110 08:37:28.363" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:28.371" endtime="20201110 08:37:28.386"></status>
</kw>
<msg timestamp="20201110 08:37:28.387" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:28.369" endtime="20201110 08:37:28.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:28.389" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:28.388" endtime="20201110 08:37:28.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:28.390" endtime="20201110 08:37:28.392"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.366" endtime="20201110 08:37:28.392"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.365" endtime="20201110 08:37:28.393"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:28.399" endtime="20201110 08:37:28.691"></status>
</kw>
<msg timestamp="20201110 08:37:28.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018588014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018589181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:28.398" endtime="20201110 08:37:28.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:28.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018588014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018589181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:28.695" endtime="20201110 08:37:28.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:28.704" endtime="20201110 08:37:28.705"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.395" endtime="20201110 08:37:28.706"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.394" endtime="20201110 08:37:28.707"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:28.711" level="INFO">${RESULT} = [{'time': 0.018589181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1669999999998348e-06, 'source_diff': 1.1669999999998348e-06}, {'time': 0.018592708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:28.707" endtime="20201110 08:37:28.711"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:28.725" level="INFO">${OVERHEAD} = {'diff': [1.1669999999998348e-06, 1.1520000000007913e-06, 1.1110000000015552e-06, 1.1669999999998348e-06, 1.1380000000012214e-06, 1.1389999999972256e-06, 1.1520000000007913e-06, 1.1669999999998348e-06...</msg>
<status status="PASS" starttime="20201110 08:37:28.712" endtime="20201110 08:37:28.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:28.729" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:28.728" endtime="20201110 08:37:28.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:28.732" level="INFO">VALUE: [1.1669999999998348e-06, 1.1520000000007913e-06, 1.1110000000015552e-06, 1.1669999999998348e-06, 1.1380000000012214e-06, 1.1389999999972256e-06, 1.1520000000007913e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.1380000000012214e-06, 1.139000000000695e-06, 1.1519999999973218e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.137999999997752e-06, 1.1529999999967955e-06, 1.139000000000695e-06, 1.1109999999980857e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.125000000001125e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.125000000001125e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.1389999999972256e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.1520000000007913e-06, 1.153000000000265e-06, 1.1110000000015552e-06, 1.1389999999972256e-06, 1.1809999999994047e-06, 1.1380000000012214e-06, 1.153000000000265e-06, 1.1809999999994047e-06, 1.1529999999967955e-06, 1.139000000000695e-06, 1.1380000000012214e-06, 1.1809999999994047e-06, 1.153000000000265e-06, 1.1809999999994047e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.153000000000265e-06]</msg>
<status status="PASS" starttime="20201110 08:37:28.731" endtime="20201110 08:37:28.733"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.726" endtime="20201110 08:37:28.733"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:28.736" endtime="20201110 08:37:28.737"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:28.739" endtime="20201110 08:37:28.759"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.738" endtime="20201110 08:37:28.759"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.734" endtime="20201110 08:37:28.760"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.363" endtime="20201110 08:37:28.760"></status>
</kw>
<msg timestamp="20201110 08:37:28.760" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:28.768" endtime="20201110 08:37:28.784"></status>
</kw>
<msg timestamp="20201110 08:37:28.784" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:28.767" endtime="20201110 08:37:28.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:28.787" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:28.786" endtime="20201110 08:37:28.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:28.789" endtime="20201110 08:37:28.790"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.764" endtime="20201110 08:37:28.791"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.762" endtime="20201110 08:37:28.791"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:28.798" endtime="20201110 08:37:29.087"></status>
</kw>
<msg timestamp="20201110 08:37:29.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018527986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018529125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:28.796" endtime="20201110 08:37:29.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:29.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018527986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018529125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:29.092" endtime="20201110 08:37:29.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:29.100" endtime="20201110 08:37:29.102"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.794" endtime="20201110 08:37:29.103"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.792" endtime="20201110 08:37:29.103"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:29.107" level="INFO">${RESULT} = [{'time': 0.018529125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.018533472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:29.104" endtime="20201110 08:37:29.107"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:29.121" level="INFO">${OVERHEAD} = {'diff': [1.139000000000695e-06, 1.1389999999972256e-06, 1.1380000000012214e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.1660000000003612e-06, 1....</msg>
<status status="PASS" starttime="20201110 08:37:29.108" endtime="20201110 08:37:29.122"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:29.126" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:29.125" endtime="20201110 08:37:29.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:29.128" level="INFO">VALUE: [1.139000000000695e-06, 1.1389999999972256e-06, 1.1380000000012214e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.1660000000003612e-06, 1.1529999999967955e-06, 1.153000000000265e-06, 1.1519999999973218e-06, 1.179999999999931e-06, 1.1529999999967955e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.125000000001125e-06, 1.1380000000012214e-06, 1.153000000000265e-06, 1.1520000000007913e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.1519999999973218e-06, 1.1809999999994047e-06, 1.1669999999998348e-06, 1.1249999999976557e-06, 1.153000000000265e-06, 1.179999999999931e-06, 1.1660000000003612e-06, 1.1809999999994047e-06, 1.1380000000012214e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.125000000001125e-06, 1.1669999999998348e-06, 1.1249999999976557e-06, 1.153000000000265e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1669999999998348e-06]</msg>
<status status="PASS" starttime="20201110 08:37:29.127" endtime="20201110 08:37:29.129"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.122" endtime="20201110 08:37:29.130"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:29.132" endtime="20201110 08:37:29.134"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:29.136" endtime="20201110 08:37:29.155"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.134" endtime="20201110 08:37:29.156"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.130" endtime="20201110 08:37:29.156"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.761" endtime="20201110 08:37:29.156"></status>
</kw>
<msg timestamp="20201110 08:37:29.157" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:29.165" endtime="20201110 08:37:29.180"></status>
</kw>
<msg timestamp="20201110 08:37:29.181" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:29.163" endtime="20201110 08:37:29.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:29.183" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:29.182" endtime="20201110 08:37:29.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:29.184" endtime="20201110 08:37:29.186"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.160" endtime="20201110 08:37:29.186"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.159" endtime="20201110 08:37:29.187"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:29.194" endtime="20201110 08:37:29.486"></status>
</kw>
<msg timestamp="20201110 08:37:29.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018563639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018564778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:29.192" endtime="20201110 08:37:29.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:29.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018563639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018564778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:29.490" endtime="20201110 08:37:29.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:29.499" endtime="20201110 08:37:29.501"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.189" endtime="20201110 08:37:29.501"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.187" endtime="20201110 08:37:29.502"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:29.506" level="INFO">${RESULT} = [{'time': 0.018564778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.018568514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:29.503" endtime="20201110 08:37:29.506"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:29.520" level="INFO">${OVERHEAD} = {'diff': [1.139000000000695e-06, 1.153000000000265e-06, 1.1249999999976557e-06, 1.153000000000265e-06, 1.1389999999972256e-06, 1.1950000000024441e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1....</msg>
<status status="PASS" starttime="20201110 08:37:29.507" endtime="20201110 08:37:29.520"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:29.525" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:29.524" endtime="20201110 08:37:29.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:29.527" level="INFO">VALUE: [1.139000000000695e-06, 1.153000000000265e-06, 1.1249999999976557e-06, 1.153000000000265e-06, 1.1389999999972256e-06, 1.1950000000024441e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.1520000000007913e-06, 1.1110000000015552e-06, 1.2360000000016802e-06, 1.1669999999998348e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.1519999999973218e-06, 1.1389999999972256e-06, 1.0969999999985158e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.1520000000007913e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.1810000000028742e-06, 1.139000000000695e-06, 1.068999999999376e-06, 1.0969999999985158e-06, 1.1659999999968917e-06, 1.153000000000265e-06, 1.1389999999972256e-06, 1.1380000000012214e-06, 1.153000000000265e-06, 1.137999999997752e-06, 1.1669999999998348e-06, 1.1389999999972256e-06, 1.1809999999994047e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.1520000000007913e-06, 1.1809999999994047e-06, 1.1669999999998348e-06]</msg>
<status status="PASS" starttime="20201110 08:37:29.526" endtime="20201110 08:37:29.528"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.521" endtime="20201110 08:37:29.529"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:29.531" endtime="20201110 08:37:29.532"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:29.535" endtime="20201110 08:37:29.554"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.533" endtime="20201110 08:37:29.555"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.529" endtime="20201110 08:37:29.555"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.157" endtime="20201110 08:37:29.555"></status>
</kw>
<msg timestamp="20201110 08:37:29.556" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:29.564" endtime="20201110 08:37:29.579"></status>
</kw>
<msg timestamp="20201110 08:37:29.580" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:29.562" endtime="20201110 08:37:29.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:29.582" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:29.581" endtime="20201110 08:37:29.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:29.583" endtime="20201110 08:37:29.585"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.559" endtime="20201110 08:37:29.586"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.558" endtime="20201110 08:37:29.586"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:29.593" endtime="20201110 08:37:29.881"></status>
</kw>
<msg timestamp="20201110 08:37:29.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018471486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018472639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:29.591" endtime="20201110 08:37:29.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:29.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018471486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018472639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:29.885" endtime="20201110 08:37:29.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:29.894" endtime="20201110 08:37:29.896"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.588" endtime="20201110 08:37:29.896"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.587" endtime="20201110 08:37:29.897"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:29.901" level="INFO">${RESULT} = [{'time': 0.018472639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.153000000000265e-06, 'source_diff': 1.153000000000265e-06}, {'time': 0.018477236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:29.897" endtime="20201110 08:37:29.901"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:29.916" level="INFO">${OVERHEAD} = {'diff': [1.153000000000265e-06, 1.125000000001125e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.1520000000007913e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.153...</msg>
<status status="PASS" starttime="20201110 08:37:29.902" endtime="20201110 08:37:29.917"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:29.921" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:29.920" endtime="20201110 08:37:29.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:29.923" level="INFO">VALUE: [1.153000000000265e-06, 1.125000000001125e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.1520000000007913e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.1249999999976557e-06, 1.1519999999973218e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.1380000000012214e-06, 1.1809999999994047e-06, 1.1249999999976557e-06, 1.137999999997752e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.068999999999376e-06, 1.1110000000015552e-06, 1.153000000000265e-06, 1.1520000000007913e-06, 1.139000000000695e-06, 1.1529999999967955e-06, 1.125000000001125e-06, 1.1389999999972256e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.137999999997752e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.1809999999994047e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.1809999999994047e-06, 1.1520000000007913e-06, 1.0830000000024154e-06, 1.1519999999973218e-06, 1.153000000000265e-06, 1.068999999999376e-06, 1.1520000000007913e-06, 1.139000000000695e-06, 1.1520000000007913e-06, 1.153000000000265e-06, 1.1389999999972256e-06, 1.179999999999931e-06]</msg>
<status status="PASS" starttime="20201110 08:37:29.922" endtime="20201110 08:37:29.924"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.917" endtime="20201110 08:37:29.925"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:29.927" endtime="20201110 08:37:29.929"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:29.931" endtime="20201110 08:37:29.950"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.929" endtime="20201110 08:37:29.951"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.925" endtime="20201110 08:37:29.951"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.556" endtime="20201110 08:37:29.952"></status>
</kw>
<msg timestamp="20201110 08:37:29.952" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:29.960" endtime="20201110 08:37:29.976"></status>
</kw>
<msg timestamp="20201110 08:37:29.976" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:29.958" endtime="20201110 08:37:29.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:29.979" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:29.977" endtime="20201110 08:37:29.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:29.980" endtime="20201110 08:37:29.982"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.955" endtime="20201110 08:37:29.982"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.954" endtime="20201110 08:37:29.982"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:29.989" endtime="20201110 08:37:30.279"></status>
</kw>
<msg timestamp="20201110 08:37:30.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018518458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018519611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:29.987" endtime="20201110 08:37:30.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:30.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018518458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018519611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:30.283" endtime="20201110 08:37:30.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:30.292" endtime="20201110 08:37:30.294"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.985" endtime="20201110 08:37:30.294"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.983" endtime="20201110 08:37:30.295"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:30.299" level="INFO">${RESULT} = [{'time': 0.018519611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1529999999967955e-06, 'source_diff': 1.1529999999967955e-06}, {'time': 0.018525694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:30.295" endtime="20201110 08:37:30.299"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:30.313" level="INFO">${OVERHEAD} = {'diff': [1.1529999999967955e-06, 1.137999999997752e-06, 1.1660000000003612e-06, 1.139000000000695e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.179999999999931e-06, 1....</msg>
<status status="PASS" starttime="20201110 08:37:30.300" endtime="20201110 08:37:30.313"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:30.317" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:30.316" endtime="20201110 08:37:30.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:30.320" level="INFO">VALUE: [1.1529999999967955e-06, 1.137999999997752e-06, 1.1660000000003612e-06, 1.139000000000695e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.179999999999931e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.0839999999984196e-06, 1.139000000000695e-06, 1.1660000000003612e-06, 1.0969999999985158e-06, 1.1380000000012214e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1380000000012214e-06, 1.1389999999972256e-06, 1.1520000000007913e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.1109999999980857e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1249999999976557e-06, 1.179999999999931e-06, 1.1520000000007913e-06, 1.139000000000695e-06, 1.1520000000007913e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.1520000000007913e-06, 1.139000000000695e-06, 1.1519999999973218e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.1810000000028742e-06, 1.139000000000695e-06, 1.1520000000007913e-06]</msg>
<status status="PASS" starttime="20201110 08:37:30.318" endtime="20201110 08:37:30.327"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.314" endtime="20201110 08:37:30.327"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:30.330" endtime="20201110 08:37:30.331"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:30.334" endtime="20201110 08:37:30.353"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.332" endtime="20201110 08:37:30.354"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.328" endtime="20201110 08:37:30.354"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.952" endtime="20201110 08:37:30.354"></status>
</kw>
<msg timestamp="20201110 08:37:30.355" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:30.363" endtime="20201110 08:37:30.378"></status>
</kw>
<msg timestamp="20201110 08:37:30.379" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:30.361" endtime="20201110 08:37:30.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:30.381" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:30.380" endtime="20201110 08:37:30.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:30.383" endtime="20201110 08:37:30.384"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.358" endtime="20201110 08:37:30.385"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.356" endtime="20201110 08:37:30.385"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:30.392" endtime="20201110 08:37:30.679"></status>
</kw>
<msg timestamp="20201110 08:37:30.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018443389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018444528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:30.390" endtime="20201110 08:37:30.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:30.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018443389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018444528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:30.683" endtime="20201110 08:37:30.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:30.692" endtime="20201110 08:37:30.693"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.388" endtime="20201110 08:37:30.694"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.386" endtime="20201110 08:37:30.694"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:30.699" level="INFO">${RESULT} = [{'time': 0.018444528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.018448375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:30.695" endtime="20201110 08:37:30.699"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:30.713" level="INFO">${OVERHEAD} = {'diff': [1.139000000000695e-06, 1.139000000000695e-06, 1.1669999999998348e-06, 1.1389999999972256e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1520000000007913e-06, 1.139000000000695e-06, 1.1...</msg>
<status status="PASS" starttime="20201110 08:37:30.700" endtime="20201110 08:37:30.713"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:30.717" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:30.716" endtime="20201110 08:37:30.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:30.720" level="INFO">VALUE: [1.139000000000695e-06, 1.139000000000695e-06, 1.1669999999998348e-06, 1.1389999999972256e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1520000000007913e-06, 1.139000000000695e-06, 1.1520000000007913e-06, 1.139000000000695e-06, 1.1669999999998348e-06, 1.137999999997752e-06, 1.2089999999985446e-06, 1.1249999999976557e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1810000000028742e-06, 1.179999999999931e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.1669999999998348e-06, 1.1949999999989747e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.125000000001125e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.0969999999985158e-06, 1.0839999999984196e-06, 1.139000000000695e-06, 1.1809999999994047e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1529999999967955e-06, 1.1389999999972256e-06, 1.125000000001125e-06, 1.1809999999994047e-06, 1.153000000000265e-06]</msg>
<status status="PASS" starttime="20201110 08:37:30.718" endtime="20201110 08:37:30.721"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.714" endtime="20201110 08:37:30.721"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:30.724" endtime="20201110 08:37:30.725"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:30.727" endtime="20201110 08:37:30.746"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.725" endtime="20201110 08:37:30.747"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.722" endtime="20201110 08:37:30.748"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.355" endtime="20201110 08:37:30.748"></status>
</kw>
<msg timestamp="20201110 08:37:30.748" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:30.756" endtime="20201110 08:37:30.771"></status>
</kw>
<msg timestamp="20201110 08:37:30.772" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:30.754" endtime="20201110 08:37:30.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:30.774" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:30.773" endtime="20201110 08:37:30.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:30.775" endtime="20201110 08:37:30.777"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.752" endtime="20201110 08:37:30.778"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.750" endtime="20201110 08:37:30.778"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:30.785" endtime="20201110 08:37:31.071"></status>
</kw>
<msg timestamp="20201110 08:37:31.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018399139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018400264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:30.783" endtime="20201110 08:37:31.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:31.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018399139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018400264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:31.075" endtime="20201110 08:37:31.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.084" endtime="20201110 08:37:31.085"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.780" endtime="20201110 08:37:31.086"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.779" endtime="20201110 08:37:31.086"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:31.091" level="INFO">${RESULT} = [{'time': 0.018400264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018403542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:31.087" endtime="20201110 08:37:31.091"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:31.105" level="INFO">${OVERHEAD} = {'diff': [1.125000000001125e-06, 1.1389999999972256e-06, 1.1519999999973218e-06, 1.1389999999972256e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.1...</msg>
<status status="PASS" starttime="20201110 08:37:31.092" endtime="20201110 08:37:31.105"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:31.109" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:31.108" endtime="20201110 08:37:31.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:31.112" level="INFO">VALUE: [1.125000000001125e-06, 1.1389999999972256e-06, 1.1519999999973218e-06, 1.1389999999972256e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.179999999999931e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.1669999999998348e-06, 1.0969999999985158e-06, 1.1389999999972256e-06, 1.179999999999931e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.1809999999994047e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.1520000000007913e-06, 1.1249999999976557e-06, 1.1519999999973218e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.137999999997752e-06, 1.153000000000265e-06, 1.1389999999972256e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.179999999999931e-06, 1.1809999999994047e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.179999999999931e-06, 1.139000000000695e-06, 1.1109999999980857e-06, 1.153000000000265e-06, 1.1529999999967955e-06, 1.1519999999973218e-06, 1.153000000000265e-06]</msg>
<status status="PASS" starttime="20201110 08:37:31.110" endtime="20201110 08:37:31.112"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.106" endtime="20201110 08:37:31.113"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.115" endtime="20201110 08:37:31.117"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:31.119" endtime="20201110 08:37:31.138"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.117" endtime="20201110 08:37:31.139"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.114" endtime="20201110 08:37:31.139"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.749" endtime="20201110 08:37:31.140"></status>
</kw>
<msg timestamp="20201110 08:37:31.140" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.148" endtime="20201110 08:37:31.163"></status>
</kw>
<msg timestamp="20201110 08:37:31.163" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:31.146" endtime="20201110 08:37:31.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:31.166" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:31.164" endtime="20201110 08:37:31.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.167" endtime="20201110 08:37:31.168"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.144" endtime="20201110 08:37:31.169"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.142" endtime="20201110 08:37:31.170"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.176" endtime="20201110 08:37:31.470"></status>
</kw>
<msg timestamp="20201110 08:37:31.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018398556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018399694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:31.175" endtime="20201110 08:37:31.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:31.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018398556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018399694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:31.474" endtime="20201110 08:37:31.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.482" endtime="20201110 08:37:31.484"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.172" endtime="20201110 08:37:31.484"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.170" endtime="20201110 08:37:31.485"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:31.489" level="INFO">${RESULT} = [{'time': 0.018399694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1380000000012214e-06, 'source_diff': 1.1380000000012214e-06}, {'time': 0.018405861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:31.486" endtime="20201110 08:37:31.489"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:31.504" level="INFO">${OVERHEAD} = {'diff': [1.1380000000012214e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.137999999997752e-06, 1.139000000000695e-06, 1.1380000000012214e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.1...</msg>
<status status="PASS" starttime="20201110 08:37:31.490" endtime="20201110 08:37:31.504"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:31.508" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:31.507" endtime="20201110 08:37:31.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:31.511" level="INFO">VALUE: [1.1380000000012214e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.137999999997752e-06, 1.139000000000695e-06, 1.1380000000012214e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.1669999999998348e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.179999999999931e-06, 1.139000000000695e-06, 1.1809999999994047e-06, 1.179999999999931e-06, 1.1520000000007913e-06, 1.1809999999994047e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.1520000000007913e-06, 1.1520000000007913e-06, 1.153000000000265e-06, 1.1380000000012214e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.1659999999968917e-06, 1.125000000001125e-06, 1.1669999999998348e-06, 1.1519999999973218e-06, 1.153000000000265e-06, 1.1520000000007913e-06, 1.179999999999931e-06, 1.1669999999998348e-06, 1.139000000000695e-06, 1.1110000000015552e-06, 1.1519999999973218e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.1669999999998348e-06, 1.153000000000265e-06]</msg>
<status status="PASS" starttime="20201110 08:37:31.509" endtime="20201110 08:37:31.511"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.505" endtime="20201110 08:37:31.512"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.514" endtime="20201110 08:37:31.516"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:31.518" endtime="20201110 08:37:31.542"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.516" endtime="20201110 08:37:31.543"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.513" endtime="20201110 08:37:31.544"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.140" endtime="20201110 08:37:31.544"></status>
</kw>
<msg timestamp="20201110 08:37:31.544" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.557" endtime="20201110 08:37:31.573"></status>
</kw>
<msg timestamp="20201110 08:37:31.574" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:31.555" endtime="20201110 08:37:31.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:31.578" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:31.576" endtime="20201110 08:37:31.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.580" endtime="20201110 08:37:31.583"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.550" endtime="20201110 08:37:31.584"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.548" endtime="20201110 08:37:31.585"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.595" endtime="20201110 08:37:31.902"></status>
</kw>
<msg timestamp="20201110 08:37:31.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030086194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030087361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:31.593" endtime="20201110 08:37:31.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:31.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030086194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030087361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:31.912" endtime="20201110 08:37:31.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.921" endtime="20201110 08:37:31.923"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.589" endtime="20201110 08:37:31.924"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.586" endtime="20201110 08:37:31.924"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:31.928" level="INFO">${RESULT} = [{'time': 0.030087361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1669999999998348e-06, 'source_diff': 1.1669999999998348e-06}, {'time': 0.030092194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:31.925" endtime="20201110 08:37:31.929"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:31.942" level="INFO">${OVERHEAD} = {'diff': [1.1669999999998348e-06, 1.1520000000007913e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1...</msg>
<status status="PASS" starttime="20201110 08:37:31.929" endtime="20201110 08:37:31.943"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:31.947" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:31.946" endtime="20201110 08:37:31.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:31.949" level="INFO">VALUE: [1.1669999999998348e-06, 1.1520000000007913e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1520000000007913e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.1519999999973218e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.137999999997752e-06, 1.098000000001459e-06, 1.1669999999998348e-06, 1.139000000000695e-06, 1.1669999999998348e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.1809999999994047e-06, 1.1109999999980857e-06, 1.207999999999071e-06, 1.139000000000695e-06, 1.1249999999976557e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.1669999999998348e-06, 1.1249999999976557e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.1520000000007913e-06]</msg>
<status status="PASS" starttime="20201110 08:37:31.948" endtime="20201110 08:37:31.950"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.943" endtime="20201110 08:37:31.951"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.953" endtime="20201110 08:37:31.954"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:31.956" endtime="20201110 08:37:31.976"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.955" endtime="20201110 08:37:31.976"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.951" endtime="20201110 08:37:31.977"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.545" endtime="20201110 08:37:31.977"></status>
</kw>
<msg timestamp="20201110 08:37:31.977" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.985" endtime="20201110 08:37:32.001"></status>
</kw>
<msg timestamp="20201110 08:37:32.001" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:31.984" endtime="20201110 08:37:32.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.004" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:32.002" endtime="20201110 08:37:32.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:32.005" endtime="20201110 08:37:32.007"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.981" endtime="20201110 08:37:32.007"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.979" endtime="20201110 08:37:32.008"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:32.014" endtime="20201110 08:37:32.301"></status>
</kw>
<msg timestamp="20201110 08:37:32.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0184265, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018427681, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:37:32.013" endtime="20201110 08:37:32.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0184265, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018427681, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:37:32.306" endtime="20201110 08:37:32.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:32.314" endtime="20201110 08:37:32.316"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.010" endtime="20201110 08:37:32.316"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.008" endtime="20201110 08:37:32.317"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:32.321" level="INFO">${RESULT} = [{'time': 0.018427681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1810000000028742e-06, 'source_diff': 1.1810000000028742e-06}, {'time': 0.0184315, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:32.318" endtime="20201110 08:37:32.322"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:32.335" level="INFO">${OVERHEAD} = {'diff': [1.1810000000028742e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.179999999999931e-06, 1.1520000000007913e-06, 1.1529999999967955e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1...</msg>
<status status="PASS" starttime="20201110 08:37:32.322" endtime="20201110 08:37:32.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.340" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:32.339" endtime="20201110 08:37:32.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.342" level="INFO">VALUE: [1.1810000000028742e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.179999999999931e-06, 1.1520000000007913e-06, 1.1529999999967955e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1389999999972256e-06, 1.1389999999972256e-06, 1.125000000001125e-06, 1.1519999999973218e-06, 1.1809999999994047e-06, 1.1520000000007913e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.1519999999973218e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.1669999999998348e-06, 1.1809999999994047e-06, 1.137999999997752e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.139000000000695e-06, 1.1520000000007913e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.1389999999972256e-06, 1.153000000000265e-06, 1.1520000000007913e-06, 1.153000000000265e-06, 1.1520000000007913e-06, 1.125000000001125e-06, 1.0969999999985158e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.1519999999973218e-06, 1.1519999999973218e-06, 1.153000000000265e-06, 1.1519999999973218e-06]</msg>
<status status="PASS" starttime="20201110 08:37:32.341" endtime="20201110 08:37:32.343"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.336" endtime="20201110 08:37:32.344"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:32.346" endtime="20201110 08:37:32.347"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:32.350" endtime="20201110 08:37:32.369"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.348" endtime="20201110 08:37:32.370"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.344" endtime="20201110 08:37:32.370"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.978" endtime="20201110 08:37:32.370"></status>
</kw>
<msg timestamp="20201110 08:37:32.371" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:32.379" endtime="20201110 08:37:32.395"></status>
</kw>
<msg timestamp="20201110 08:37:32.395" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:32.377" endtime="20201110 08:37:32.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.398" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:32.396" endtime="20201110 08:37:32.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:32.399" endtime="20201110 08:37:32.400"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.374" endtime="20201110 08:37:32.401"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.373" endtime="20201110 08:37:32.402"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:32.408" endtime="20201110 08:37:32.704"></status>
</kw>
<msg timestamp="20201110 08:37:32.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018628097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018629264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:32.407" endtime="20201110 08:37:32.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018628097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018629264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:32.709" endtime="20201110 08:37:32.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:32.717" endtime="20201110 08:37:32.719"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.404" endtime="20201110 08:37:32.719"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.402" endtime="20201110 08:37:32.720"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:32.724" level="INFO">${RESULT} = [{'time': 0.018629264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1669999999998348e-06, 'source_diff': 1.1669999999998348e-06}, {'time': 0.018634042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:32.721" endtime="20201110 08:37:32.725"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:32.738" level="INFO">${OVERHEAD} = {'diff': [1.1669999999998348e-06, 1.125000000001125e-06, 1.137999999997752e-06, 1.1529999999967955e-06, 1.1660000000003612e-06, 1.1809999999994047e-06, 1.125000000001125e-06, 1.1660000000003612e-06, 1...</msg>
<status status="PASS" starttime="20201110 08:37:32.725" endtime="20201110 08:37:32.739"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.743" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:32.742" endtime="20201110 08:37:32.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.745" level="INFO">VALUE: [1.1669999999998348e-06, 1.125000000001125e-06, 1.137999999997752e-06, 1.1529999999967955e-06, 1.1660000000003612e-06, 1.1809999999994047e-06, 1.125000000001125e-06, 1.1660000000003612e-06, 1.139000000000695e-06, 1.1810000000028742e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.1519999999973218e-06, 1.139000000000695e-06, 1.1520000000007913e-06, 1.1380000000012214e-06, 1.223000000001584e-06, 1.125000000001125e-06, 1.179999999999931e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1389999999972256e-06, 1.193999999999501e-06, 1.153000000000265e-06, 1.1519999999973218e-06, 1.0830000000024154e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1519999999973218e-06, 1.153000000000265e-06, 1.1809999999994047e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.179999999999931e-06, 1.139000000000695e-06, 1.1520000000007913e-06, 1.153000000000265e-06, 1.125000000001125e-06, 1.1380000000012214e-06, 1.139000000000695e-06, 1.1520000000007913e-06, 1.139000000000695e-06, 1.2220000000021103e-06, 1.1809999999994047e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.153000000000265e-06]</msg>
<status status="PASS" starttime="20201110 08:37:32.744" endtime="20201110 08:37:32.746"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.739" endtime="20201110 08:37:32.747"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:32.749" endtime="20201110 08:37:32.750"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:32.753" endtime="20201110 08:37:32.772"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.751" endtime="20201110 08:37:32.773"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.747" endtime="20201110 08:37:32.773"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.371" endtime="20201110 08:37:32.774"></status>
</kw>
<msg timestamp="20201110 08:37:32.774" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:32.782" endtime="20201110 08:37:32.797"></status>
</kw>
<msg timestamp="20201110 08:37:32.798" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:32.780" endtime="20201110 08:37:32.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.800" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:32.799" endtime="20201110 08:37:32.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:32.802" endtime="20201110 08:37:32.803"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.777" endtime="20201110 08:37:32.804"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.776" endtime="20201110 08:37:32.804"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:32.811" endtime="20201110 08:37:33.102"></status>
</kw>
<msg timestamp="20201110 08:37:33.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018555722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018556847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:32.809" endtime="20201110 08:37:33.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:33.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018555722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018556847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:33.107" endtime="20201110 08:37:33.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.116" endtime="20201110 08:37:33.117"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.807" endtime="20201110 08:37:33.118"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.805" endtime="20201110 08:37:33.118"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:33.123" level="INFO">${RESULT} = [{'time': 0.018556847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018561875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:33.119" endtime="20201110 08:37:33.123"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:33.138" level="INFO">${OVERHEAD} = {'diff': [1.125000000001125e-06, 1.1529999999967955e-06, 1.153000000000265e-06, 1.1519999999973218e-06, 1.1669999999998348e-06, 1.0969999999985158e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1....</msg>
<status status="PASS" starttime="20201110 08:37:33.124" endtime="20201110 08:37:33.138"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:33.143" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:33.142" endtime="20201110 08:37:33.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:33.145" level="INFO">VALUE: [1.125000000001125e-06, 1.1529999999967955e-06, 1.153000000000265e-06, 1.1519999999973218e-06, 1.1669999999998348e-06, 1.0969999999985158e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.193999999999501e-06, 1.1940000000029705e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.139000000000695e-06, 1.1529999999967955e-06, 1.139000000000695e-06, 1.1520000000007913e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.1520000000007913e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.1660000000003612e-06, 1.1669999999998348e-06, 1.1520000000007913e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.1519999999973218e-06, 1.0839999999984196e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.1380000000012214e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.125000000001125e-06, 1.179999999999931e-06, 1.153000000000265e-06, 1.1120000000010288e-06, 1.153000000000265e-06, 1.1380000000012214e-06, 1.1389999999972256e-06, 1.1519999999973218e-06, 1.179999999999931e-06, 1.153000000000265e-06, 1.1520000000007913e-06]</msg>
<status status="PASS" starttime="20201110 08:37:33.144" endtime="20201110 08:37:33.146"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.139" endtime="20201110 08:37:33.147"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.149" endtime="20201110 08:37:33.150"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:33.152" endtime="20201110 08:37:33.172"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.151" endtime="20201110 08:37:33.172"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.147" endtime="20201110 08:37:33.173"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.774" endtime="20201110 08:37:33.173"></status>
</kw>
<msg timestamp="20201110 08:37:33.173" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.182" endtime="20201110 08:37:33.196"></status>
</kw>
<msg timestamp="20201110 08:37:33.197" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:33.180" endtime="20201110 08:37:33.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:33.199" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:33.198" endtime="20201110 08:37:33.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.201" endtime="20201110 08:37:33.202"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.177" endtime="20201110 08:37:33.203"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.175" endtime="20201110 08:37:33.203"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.210" endtime="20201110 08:37:33.500"></status>
</kw>
<msg timestamp="20201110 08:37:33.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018567139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018568347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:33.208" endtime="20201110 08:37:33.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:33.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018567139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018568347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:33.504" endtime="20201110 08:37:33.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.513" endtime="20201110 08:37:33.514"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.206" endtime="20201110 08:37:33.515"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.204" endtime="20201110 08:37:33.515"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:33.520" level="INFO">${RESULT} = [{'time': 0.018568347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.207999999999071e-06, 'source_diff': 1.207999999999071e-06}, {'time': 0.018573819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:33.516" endtime="20201110 08:37:33.520"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:33.534" level="INFO">${OVERHEAD} = {'diff': [1.207999999999071e-06, 1.137999999997752e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.1659999999968917e-06, 1.153000000000265e-06, 1.1389999999972256e-06, 1.1669999999998348e-06, 1....</msg>
<status status="PASS" starttime="20201110 08:37:33.521" endtime="20201110 08:37:33.534"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:33.538" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:33.537" endtime="20201110 08:37:33.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:33.541" level="INFO">VALUE: [1.207999999999071e-06, 1.137999999997752e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.1659999999968917e-06, 1.153000000000265e-06, 1.1389999999972256e-06, 1.1669999999998348e-06, 1.139000000000695e-06, 1.2220000000021103e-06, 1.139000000000695e-06, 1.1520000000007913e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.1389999999972256e-06, 1.153000000000265e-06, 1.082999999998946e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1520000000007913e-06, 1.1519999999973218e-06, 1.1669999999998348e-06, 1.137999999997752e-06, 1.1529999999967955e-06, 1.1660000000003612e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1659999999968917e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1249999999976557e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1520000000007913e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.1809999999994047e-06, 1.139000000000695e-06, 1.0969999999985158e-06, 1.153000000000265e-06, 1.1520000000007913e-06]</msg>
<status status="PASS" starttime="20201110 08:37:33.540" endtime="20201110 08:37:33.542"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.535" endtime="20201110 08:37:33.543"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.545" endtime="20201110 08:37:33.546"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:33.548" endtime="20201110 08:37:33.568"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.547" endtime="20201110 08:37:33.568"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.543" endtime="20201110 08:37:33.569"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.174" endtime="20201110 08:37:33.569"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.586" endtime="20201110 08:37:33.569"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:33.573" endtime="20201110 08:37:33.593"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.572" endtime="20201110 08:37:33.593"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.571" endtime="20201110 08:37:33.594"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201110 08:37:25.510" endtime="20201110 08:37:33.594" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:33.601" endtime="20201110 08:37:33.620"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.599" endtime="20201110 08:37:33.621"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.634" endtime="20201110 08:37:33.652"></status>
</kw>
<msg timestamp="20201110 08:37:33.653" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:33.633" endtime="20201110 08:37:33.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:33.656" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:33.654" endtime="20201110 08:37:33.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:37:33.659" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:37:33.657" endtime="20201110 08:37:33.659"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:33.630" endtime="20201110 08:37:33.660"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:33.628" endtime="20201110 08:37:33.660"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.626" endtime="20201110 08:37:33.660"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:37:33.664" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:37:33.664" endtime="20201110 08:37:33.665"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.661" endtime="20201110 08:37:33.665"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.625" endtime="20201110 08:37:33.665"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.625" endtime="20201110 08:37:33.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.666" endtime="20201110 08:37:33.668"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.623" endtime="20201110 08:37:33.668"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.622" endtime="20201110 08:37:33.669"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.598" endtime="20201110 08:37:33.669"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.678" endtime="20201110 08:37:33.700"></status>
</kw>
<msg timestamp="20201110 08:37:33.700" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:33.676" endtime="20201110 08:37:33.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:33.703" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:33.701" endtime="20201110 08:37:33.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.704" endtime="20201110 08:37:33.706"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.673" endtime="20201110 08:37:33.706"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.671" endtime="20201110 08:37:33.707"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.709" endtime="20201110 08:37:33.711"></status>
</kw>
<msg timestamp="20201110 08:37:33.711" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201110 08:37:33.708" endtime="20201110 08:37:33.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:33.715" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:37:33.714" endtime="20201110 08:37:33.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:33.718" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:37:33.717" endtime="20201110 08:37:33.718"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.712" endtime="20201110 08:37:33.718"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:33.722" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:37:33.721" endtime="20201110 08:37:33.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:33.725" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:37:33.724" endtime="20201110 08:37:33.725"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.719" endtime="20201110 08:37:33.726"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.732" endtime="20201110 08:37:34.019"></status>
</kw>
<msg timestamp="20201110 08:37:34.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067886806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067892847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:33.731" endtime="20201110 08:37:34.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067886806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067892847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:34.023" endtime="20201110 08:37:34.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:34.032" endtime="20201110 08:37:34.034"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.728" endtime="20201110 08:37:34.034"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.726" endtime="20201110 08:37:34.035"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:34.039" level="INFO">${RESULT} = [{'time': 0.067892847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0410000000121755e-06, 'source_diff': 6.0410000000121755e-06}, {'time': 0.067905333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:34.035" endtime="20201110 08:37:34.039"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:34.053" level="INFO">${OVERHEAD} = {'diff': [6.0410000000121755e-06, 6.986000000000492e-06, 7.000000000007001e-06, 6.999999999993123e-06, 6.931000000001686e-06, 6.986000000000492e-06, 7.000000000007001e-06, 7.013999999999632e-06, 7.055...</msg>
<status status="PASS" starttime="20201110 08:37:34.040" endtime="20201110 08:37:34.053"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.058" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201110 08:37:34.057" endtime="20201110 08:37:34.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.061" level="INFO">VALUE: [6.0410000000121755e-06, 6.986000000000492e-06, 7.000000000007001e-06, 6.999999999993123e-06, 6.931000000001686e-06, 6.986000000000492e-06, 7.000000000007001e-06, 7.013999999999632e-06, 7.055000000005807e-06, 7.027000000006667e-06, 6.986000000000492e-06, 6.986000000000492e-06, 7.013999999999632e-06, 6.986000000000492e-06, 6.9869999999999655e-06, 6.971999999993983e-06, 7.013999999999632e-06, 6.986000000000492e-06, 7.000000000007001e-06, 7.054999999991929e-06, 7.0830000000049465e-06, 6.986000000000492e-06, 7.000000000007001e-06, 6.999999999993123e-06, 7.000000000007001e-06, 7.027000000006667e-06, 6.986000000000492e-06, 7.0559999999914025e-06, 7.000000000007001e-06, 6.999999999993123e-06, 6.9730000000073344e-06, 7.013999999999632e-06, 7.000000000007001e-06, 6.986000000000492e-06, 7.013999999999632e-06, 7.000000000007001e-06, 6.9869999999999655e-06, 6.999999999993123e-06, 7.000000000007001e-06, 7.013999999999632e-06, 7.0280000000061404e-06, 7.000000000007001e-06, 6.986000000000492e-06, 6.999999999993123e-06, 6.999999999993123e-06, 7.000000000007001e-06, 7.000000000007001e-06, 6.999999999993123e-06, 6.999999999993123e-06, 6.986000000000492e-06]</msg>
<status status="PASS" starttime="20201110 08:37:34.059" endtime="20201110 08:37:34.061"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.054" endtime="20201110 08:37:34.062"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:34.064" endtime="20201110 08:37:34.065"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:34.068" endtime="20201110 08:37:34.087"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.066" endtime="20201110 08:37:34.088"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.062" endtime="20201110 08:37:34.088"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.669" endtime="20201110 08:37:34.088"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201110 08:37:33.595" endtime="20201110 08:37:34.089" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:34.096" endtime="20201110 08:37:34.115"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.094" endtime="20201110 08:37:34.116"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:34.130" endtime="20201110 08:37:34.148"></status>
</kw>
<msg timestamp="20201110 08:37:34.149" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:34.128" endtime="20201110 08:37:34.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.151" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:34.150" endtime="20201110 08:37:34.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.155" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:37:34.153" endtime="20201110 08:37:34.155"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:34.125" endtime="20201110 08:37:34.156"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:34.122" endtime="20201110 08:37:34.156"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.121" endtime="20201110 08:37:34.157"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:37:34.160" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:37:34.160" endtime="20201110 08:37:34.161"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.157" endtime="20201110 08:37:34.161"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.120" endtime="20201110 08:37:34.161"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.119" endtime="20201110 08:37:34.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:34.162" endtime="20201110 08:37:34.164"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.118" endtime="20201110 08:37:34.164"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.116" endtime="20201110 08:37:34.165"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.093" endtime="20201110 08:37:34.165"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:34.174" endtime="20201110 08:37:34.226"></status>
</kw>
<msg timestamp="20201110 08:37:34.227" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:34.172" endtime="20201110 08:37:34.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.229" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:34.228" endtime="20201110 08:37:34.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:34.230" endtime="20201110 08:37:34.232"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.170" endtime="20201110 08:37:34.233"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.167" endtime="20201110 08:37:34.233"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:34.235" endtime="20201110 08:37:34.237"></status>
</kw>
<msg timestamp="20201110 08:37:34.237" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201110 08:37:34.234" endtime="20201110 08:37:34.237"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.242" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:37:34.240" endtime="20201110 08:37:34.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.244" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:37:34.243" endtime="20201110 08:37:34.244"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.238" endtime="20201110 08:37:34.245"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.249" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:37:34.248" endtime="20201110 08:37:34.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.253" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:37:34.250" endtime="20201110 08:37:34.255"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.245" endtime="20201110 08:37:34.255"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:34.271" endtime="20201110 08:37:34.564"></status>
</kw>
<msg timestamp="20201110 08:37:34.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069126458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069140181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:34.265" endtime="20201110 08:37:34.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069126458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069140181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:34.569" endtime="20201110 08:37:34.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:34.577" endtime="20201110 08:37:34.579"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.259" endtime="20201110 08:37:34.579"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.256" endtime="20201110 08:37:34.580"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:34.584" level="INFO">${RESULT} = [{'time': 0.069140181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3722999999993268e-05, 'source_diff': 1.3722999999993268e-05}, {'time': 0.069793819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:34.581" endtime="20201110 08:37:34.585"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:34.600" level="INFO">${OVERHEAD} = {'diff': [1.3722999999993268e-05, 2.2388000000012065e-05, 2.237500000000503e-05, 2.236099999999852e-05, 2.233299999999938e-05, 2.23610000000124e-05, 2.24169999999968e-05, 2.2374999999991152e-05, 2.238...</msg>
<status status="PASS" starttime="20201110 08:37:34.585" endtime="20201110 08:37:34.601"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.606" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201110 08:37:34.604" endtime="20201110 08:37:34.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.608" level="INFO">VALUE: [1.3722999999993268e-05, 2.2388000000012065e-05, 2.237500000000503e-05, 2.236099999999852e-05, 2.233299999999938e-05, 2.23610000000124e-05, 2.24169999999968e-05, 2.2374999999991152e-05, 2.238899999999766e-05, 2.240300000000417e-05, 2.237500000000503e-05, 2.237500000000503e-05, 2.237500000000503e-05, 2.2402999999990292e-05, 2.2362000000011872e-05, 2.2374999999991152e-05, 2.245900000000245e-05, 2.237500000000503e-05, 2.2443999999996467e-05, 2.237500000000503e-05, 2.240300000000417e-05, 2.237500000000503e-05, 2.2374999999991152e-05, 2.2387999999998187e-05, 2.238899999999766e-05, 2.236099999999852e-05, 2.236099999999852e-05, 2.238899999999766e-05, 2.237500000000503e-05, 2.238899999999766e-05, 2.2374999999991152e-05, 2.238899999999766e-05, 2.2361999999997995e-05, 2.233299999999938e-05, 2.238899999999766e-05, 2.237500000000503e-05, 2.237500000000503e-05, 2.2374999999991152e-05, 2.238899999999766e-05, 2.236099999999852e-05, 2.2402000000004696e-05, 2.2374999999991152e-05, 2.237500000000503e-05, 2.2374999999991152e-05, 2.2374999999991152e-05, 2.236099999999852e-05, 2.234700000000589e-05, 2.238899999999766e-05, 2.240300000000417e-05, 2.2374999999991152e-05]</msg>
<status status="PASS" starttime="20201110 08:37:34.607" endtime="20201110 08:37:34.609"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.602" endtime="20201110 08:37:34.609"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:34.611" endtime="20201110 08:37:34.613"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:34.615" endtime="20201110 08:37:34.634"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.613" endtime="20201110 08:37:34.635"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.610" endtime="20201110 08:37:34.635"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.166" endtime="20201110 08:37:34.636"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201110 08:37:34.090" endtime="20201110 08:37:34.636" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:34.643" endtime="20201110 08:37:34.662"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.641" endtime="20201110 08:37:34.663"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:34.677" endtime="20201110 08:37:34.694"></status>
</kw>
<msg timestamp="20201110 08:37:34.695" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:34.675" endtime="20201110 08:37:34.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.697" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:34.696" endtime="20201110 08:37:34.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.700" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:37:34.698" endtime="20201110 08:37:34.701"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:34.672" endtime="20201110 08:37:34.701"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:34.670" endtime="20201110 08:37:34.702"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.668" endtime="20201110 08:37:34.702"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:37:34.706" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:37:34.705" endtime="20201110 08:37:34.707"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.703" endtime="20201110 08:37:34.707"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.667" endtime="20201110 08:37:34.707"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.667" endtime="20201110 08:37:34.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:34.708" endtime="20201110 08:37:34.709"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.665" endtime="20201110 08:37:34.710"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.664" endtime="20201110 08:37:34.711"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.640" endtime="20201110 08:37:34.711"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:34.720" endtime="20201110 08:37:34.853"></status>
</kw>
<msg timestamp="20201110 08:37:34.854" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:34.718" endtime="20201110 08:37:34.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.856" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:34.855" endtime="20201110 08:37:34.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:34.857" endtime="20201110 08:37:34.859"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.716" endtime="20201110 08:37:34.860"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.713" endtime="20201110 08:37:34.860"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:34.862" endtime="20201110 08:37:34.865"></status>
</kw>
<msg timestamp="20201110 08:37:34.865" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201110 08:37:34.861" endtime="20201110 08:37:34.866"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.872" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:37:34.870" endtime="20201110 08:37:34.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.875" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:37:34.874" endtime="20201110 08:37:34.876"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.867" endtime="20201110 08:37:34.877"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.883" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:37:34.882" endtime="20201110 08:37:34.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.887" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:37:34.885" endtime="20201110 08:37:34.888"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.878" endtime="20201110 08:37:34.889"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:34.899" endtime="20201110 08:37:35.193"></status>
</kw>
<msg timestamp="20201110 08:37:35.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068393861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068418778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:34.897" endtime="20201110 08:37:35.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068393861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068418778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:35.198" endtime="20201110 08:37:35.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.206" endtime="20201110 08:37:35.208"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.893" endtime="20201110 08:37:35.208"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.890" endtime="20201110 08:37:35.209"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:35.213" level="INFO">${RESULT} = [{'time': 0.068418778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.49169999999993e-05, 'source_diff': 2.49169999999993e-05}, {'time': 0.070686097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:37:35.209" endtime="20201110 08:37:35.214"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:35.228" level="INFO">${OVERHEAD} = {'diff': [2.49169999999993e-05, 4.143000000000896e-05, 4.1389000000002785e-05, 4.1417000000001924e-05, 4.1402999999995416e-05, 4.1374999999996276e-05, 4.1374999999996276e-05, 4.1346999999997136e-05, 4...</msg>
<status status="PASS" starttime="20201110 08:37:35.214" endtime="20201110 08:37:35.228"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.233" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201110 08:37:35.232" endtime="20201110 08:37:35.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.235" level="INFO">VALUE: [2.49169999999993e-05, 4.143000000000896e-05, 4.1389000000002785e-05, 4.1417000000001924e-05, 4.1402999999995416e-05, 4.1374999999996276e-05, 4.1374999999996276e-05, 4.1346999999997136e-05, 4.141699999998805e-05, 4.1389000000002785e-05, 4.1403000000009293e-05, 4.1375000000010154e-05, 4.1389000000002785e-05, 4.1374999999996276e-05, 4.140200000000982e-05, 4.1389000000002785e-05, 4.1389000000002785e-05, 4.1417000000001924e-05, 4.1402999999995416e-05, 4.1389000000002785e-05, 4.1374999999996276e-05, 4.1374999999996276e-05, 4.1403000000009293e-05, 4.14580000000081e-05, 4.1403000000009293e-05, 4.1375000000010154e-05, 4.144400000000159e-05, 4.141699999998805e-05, 4.140199999999594e-05, 4.13749999999824e-05, 4.138800000000331e-05, 4.1375000000010154e-05, 4.143100000000843e-05, 4.1402999999995416e-05, 4.1375000000010154e-05, 4.1389000000002785e-05, 4.1389000000002785e-05, 4.1375000000010154e-05, 4.1375000000010154e-05, 4.140199999999594e-05, 4.1389000000002785e-05, 4.1387999999975555e-05, 4.1402999999995416e-05, 4.141699999998805e-05, 4.1389000000002785e-05, 4.133400000000398e-05, 4.138899999997503e-05, 4.1402999999995416e-05, 4.1389000000002785e-05, 4.141699999998805e-05]</msg>
<status status="PASS" starttime="20201110 08:37:35.234" endtime="20201110 08:37:35.236"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.229" endtime="20201110 08:37:35.236"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.238" endtime="20201110 08:37:35.240"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:35.242" endtime="20201110 08:37:35.262"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.240" endtime="20201110 08:37:35.262"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.237" endtime="20201110 08:37:35.263"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.712" endtime="20201110 08:37:35.263"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201110 08:37:34.638" endtime="20201110 08:37:35.263" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:35.270" endtime="20201110 08:37:35.290"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.269" endtime="20201110 08:37:35.290"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.304" endtime="20201110 08:37:35.321"></status>
</kw>
<msg timestamp="20201110 08:37:35.322" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:35.302" endtime="20201110 08:37:35.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.325" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:35.323" endtime="20201110 08:37:35.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.328" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:37:35.326" endtime="20201110 08:37:35.328"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:35.299" endtime="20201110 08:37:35.329"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:35.297" endtime="20201110 08:37:35.329"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.296" endtime="20201110 08:37:35.330"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:37:35.334" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:37:35.333" endtime="20201110 08:37:35.334"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.331" endtime="20201110 08:37:35.341"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.295" endtime="20201110 08:37:35.341"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.294" endtime="20201110 08:37:35.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.342" endtime="20201110 08:37:35.344"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.293" endtime="20201110 08:37:35.345"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.291" endtime="20201110 08:37:35.345"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.267" endtime="20201110 08:37:35.345"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.354" endtime="20201110 08:37:35.377"></status>
</kw>
<msg timestamp="20201110 08:37:35.377" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:35.353" endtime="20201110 08:37:35.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.380" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:35.378" endtime="20201110 08:37:35.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.381" endtime="20201110 08:37:35.383"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.350" endtime="20201110 08:37:35.383"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.348" endtime="20201110 08:37:35.384"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.386" endtime="20201110 08:37:35.388"></status>
</kw>
<msg timestamp="20201110 08:37:35.388" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201110 08:37:35.385" endtime="20201110 08:37:35.388"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.392" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:37:35.391" endtime="20201110 08:37:35.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.394" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:37:35.393" endtime="20201110 08:37:35.395"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.389" endtime="20201110 08:37:35.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.399" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:37:35.398" endtime="20201110 08:37:35.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.402" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:37:35.400" endtime="20201110 08:37:35.402"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.396" endtime="20201110 08:37:35.402"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.409" endtime="20201110 08:37:35.697"></status>
</kw>
<msg timestamp="20201110 08:37:35.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074542097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074546694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:35.407" endtime="20201110 08:37:35.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074542097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074546694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:35.701" endtime="20201110 08:37:35.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.709" endtime="20201110 08:37:35.711"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.405" endtime="20201110 08:37:35.712"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.403" endtime="20201110 08:37:35.713"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:35.717" level="INFO">${RESULT} = [{'time': 0.074546694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.596999999995077e-06, 'source_diff': 4.596999999995077e-06}, {'time': 0.074560194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:35.713" endtime="20201110 08:37:35.717"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:35.731" level="INFO">${OVERHEAD} = {'diff': [4.596999999995077e-06, 4.583000000002446e-06, 4.568999999995937e-06, 4.583000000002446e-06, 4.5000000000045e-06, 4.583000000002446e-06, 4.570000000009289e-06, 4.569999999995411e-06, 4.582999...</msg>
<status status="PASS" starttime="20201110 08:37:35.718" endtime="20201110 08:37:35.731"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.736" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201110 08:37:35.735" endtime="20201110 08:37:35.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.738" level="INFO">VALUE: [4.596999999995077e-06, 4.583000000002446e-06, 4.568999999995937e-06, 4.583000000002446e-06, 4.5000000000045e-06, 4.583000000002446e-06, 4.570000000009289e-06, 4.569999999995411e-06, 4.5829999999885684e-06, 4.583000000002446e-06, 4.583000000002446e-06, 4.583000000002446e-06, 4.55600000000278e-06, 4.583000000002446e-06, 4.569000000009815e-06, 4.583000000002446e-06, 4.58400000000192e-06, 4.513999999997131e-06, 4.569999999995411e-06, 4.583000000002446e-06, 4.597000000008955e-06, 4.596999999995077e-06, 4.596999999995077e-06, 4.583000000002446e-06, 4.555000000003306e-06, 4.596999999995077e-06, 4.583999999988042e-06, 4.569000000009815e-06, 4.569000000009815e-06, 4.569999999995411e-06, 4.568999999995937e-06, 4.569999999995411e-06, 4.55600000000278e-06, 4.569000000009815e-06, 4.540999999996798e-06, 4.55600000000278e-06, 4.58400000000192e-06, 4.52800000000364e-06, 4.569999999995411e-06, 4.58400000000192e-06, 4.58400000000192e-06, 4.651999999993883e-06, 4.568999999995937e-06, 4.61200000000106e-06, 4.568999999995937e-06, 4.58400000000192e-06, 4.653000000007235e-06, 4.58400000000192e-06, 4.596999999995077e-06, 4.52800000000364e-06]</msg>
<status status="PASS" starttime="20201110 08:37:35.737" endtime="20201110 08:37:35.739"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.732" endtime="20201110 08:37:35.739"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.742" endtime="20201110 08:37:35.743"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:35.745" endtime="20201110 08:37:35.765"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.744" endtime="20201110 08:37:35.765"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.740" endtime="20201110 08:37:35.766"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.346" endtime="20201110 08:37:35.766"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201110 08:37:35.265" endtime="20201110 08:37:35.766" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:35.773" endtime="20201110 08:37:35.793"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.772" endtime="20201110 08:37:35.794"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.814" endtime="20201110 08:37:35.833"></status>
</kw>
<msg timestamp="20201110 08:37:35.834" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:35.812" endtime="20201110 08:37:35.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.836" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:35.835" endtime="20201110 08:37:35.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.839" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:37:35.837" endtime="20201110 08:37:35.840"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:35.807" endtime="20201110 08:37:35.840"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:35.804" endtime="20201110 08:37:35.841"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.802" endtime="20201110 08:37:35.841"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:37:35.846" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:37:35.845" endtime="20201110 08:37:35.846"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.843" endtime="20201110 08:37:35.846"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.800" endtime="20201110 08:37:35.847"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.799" endtime="20201110 08:37:35.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.847" endtime="20201110 08:37:35.849"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.797" endtime="20201110 08:37:35.850"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.794" endtime="20201110 08:37:35.850"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.770" endtime="20201110 08:37:35.850"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.859" endtime="20201110 08:37:35.913"></status>
</kw>
<msg timestamp="20201110 08:37:35.913" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:35.857" endtime="20201110 08:37:35.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.916" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:35.914" endtime="20201110 08:37:35.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.917" endtime="20201110 08:37:35.919"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.855" endtime="20201110 08:37:35.919"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.853" endtime="20201110 08:37:35.920"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.922" endtime="20201110 08:37:35.924"></status>
</kw>
<msg timestamp="20201110 08:37:35.924" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201110 08:37:35.921" endtime="20201110 08:37:35.924"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.928" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:37:35.927" endtime="20201110 08:37:35.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.931" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:37:35.929" endtime="20201110 08:37:35.931"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.925" endtime="20201110 08:37:35.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.936" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:37:35.935" endtime="20201110 08:37:35.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.938" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:37:35.937" endtime="20201110 08:37:35.938"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.932" endtime="20201110 08:37:35.938"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.947" endtime="20201110 08:37:36.240"></status>
</kw>
<msg timestamp="20201110 08:37:36.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.076741694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.076756264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:35.944" endtime="20201110 08:37:36.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:36.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.076741694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.076756264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:36.244" endtime="20201110 08:37:36.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:36.253" endtime="20201110 08:37:36.255"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.941" endtime="20201110 08:37:36.255"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.939" endtime="20201110 08:37:36.256"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:36.260" level="INFO">${RESULT} = [{'time': 0.076756264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4570000000005412e-05, 'source_diff': 1.4570000000005412e-05}, {'time': 0.077412153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:36.256" endtime="20201110 08:37:36.260"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:36.276" level="INFO">${OVERHEAD} = {'diff': [1.4570000000005412e-05, 1.4583999999998043e-05, 1.4555999999998903e-05, 1.4597000000005078e-05, 1.458299999999857e-05, 1.4569000000005938e-05, 1.461099999999771e-05, 1.4583999999998043e-05, ...</msg>
<status status="PASS" starttime="20201110 08:37:36.261" endtime="20201110 08:37:36.277"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:36.281" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201110 08:37:36.280" endtime="20201110 08:37:36.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:36.284" level="INFO">VALUE: [1.4570000000005412e-05, 1.4583999999998043e-05, 1.4555999999998903e-05, 1.4597000000005078e-05, 1.458299999999857e-05, 1.4569000000005938e-05, 1.461099999999771e-05, 1.4583999999998043e-05, 1.4598000000004552e-05, 1.4555999999998903e-05, 1.45969999999912e-05, 1.4611000000011587e-05, 1.4597000000005078e-05, 1.4569000000005938e-05, 1.4583999999998043e-05, 1.458299999999857e-05, 1.4653000000003358e-05, 1.456899999999206e-05, 1.452700000000029e-05, 1.4569000000005938e-05, 1.4597999999990674e-05, 1.4597000000005078e-05, 1.4569000000005938e-05, 1.458299999999857e-05, 1.4598000000004552e-05, 1.458299999999857e-05, 1.4583999999998043e-05, 1.4527999999999763e-05, 1.458299999999857e-05, 1.458299999999857e-05, 1.4597000000005078e-05, 1.4598000000004552e-05, 1.4570000000005412e-05, 1.458299999999857e-05, 1.456899999999206e-05, 1.458299999999857e-05, 1.4597000000005078e-05, 1.4570000000005412e-05, 1.4569000000005938e-05, 1.4583999999998043e-05, 1.458299999999857e-05, 1.4598000000004552e-05, 1.4583999999998043e-05, 1.461099999999771e-05, 1.4597000000005078e-05, 1.4597000000005078e-05, 1.4512999999993781e-05, 1.4625000000004218e-05, 1.4570000000005412e-05, 1.461099999999771e-05]</msg>
<status status="PASS" starttime="20201110 08:37:36.283" endtime="20201110 08:37:36.284"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.277" endtime="20201110 08:37:36.285"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:36.287" endtime="20201110 08:37:36.288"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:36.291" endtime="20201110 08:37:36.310"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.289" endtime="20201110 08:37:36.311"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.286" endtime="20201110 08:37:36.311"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.851" endtime="20201110 08:37:36.311"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201110 08:37:35.768" endtime="20201110 08:37:36.312" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:36.319" endtime="20201110 08:37:36.338"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.317" endtime="20201110 08:37:36.339"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:36.353" endtime="20201110 08:37:36.372"></status>
</kw>
<msg timestamp="20201110 08:37:36.372" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:36.351" endtime="20201110 08:37:36.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:36.375" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:36.373" endtime="20201110 08:37:36.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:37:36.378" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:37:36.376" endtime="20201110 08:37:36.379"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:36.348" endtime="20201110 08:37:36.379"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:36.345" endtime="20201110 08:37:36.380"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.344" endtime="20201110 08:37:36.380"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:37:36.384" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:37:36.384" endtime="20201110 08:37:36.385"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.381" endtime="20201110 08:37:36.385"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.343" endtime="20201110 08:37:36.385"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.343" endtime="20201110 08:37:36.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:36.386" endtime="20201110 08:37:36.388"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.341" endtime="20201110 08:37:36.388"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.339" endtime="20201110 08:37:36.389"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.316" endtime="20201110 08:37:36.389"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:36.398" endtime="20201110 08:37:36.531"></status>
</kw>
<msg timestamp="20201110 08:37:36.532" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:36.396" endtime="20201110 08:37:36.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:36.534" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:36.533" endtime="20201110 08:37:36.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:36.536" endtime="20201110 08:37:36.537"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.393" endtime="20201110 08:37:36.538"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.391" endtime="20201110 08:37:36.538"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:36.541" endtime="20201110 08:37:36.542"></status>
</kw>
<msg timestamp="20201110 08:37:36.543" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201110 08:37:36.539" endtime="20201110 08:37:36.543"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:36.547" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:37:36.546" endtime="20201110 08:37:36.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:36.549" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:37:36.548" endtime="20201110 08:37:36.550"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.544" endtime="20201110 08:37:36.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:36.554" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:37:36.553" endtime="20201110 08:37:36.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:36.556" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:37:36.555" endtime="20201110 08:37:36.557"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.551" endtime="20201110 08:37:36.557"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:36.564" endtime="20201110 08:37:36.858"></status>
</kw>
<msg timestamp="20201110 08:37:36.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070528819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070551528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:36.562" endtime="20201110 08:37:36.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:36.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070528819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070551528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:36.863" endtime="20201110 08:37:36.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:36.871" endtime="20201110 08:37:36.873"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.560" endtime="20201110 08:37:36.873"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.558" endtime="20201110 08:37:36.874"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:36.878" level="INFO">${RESULT} = [{'time': 0.070551528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.270899999999576e-05, 'source_diff': 2.270899999999576e-05}, {'time': 0.072823806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:36.874" endtime="20201110 08:37:36.878"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:36.892" level="INFO">${OVERHEAD} = {'diff': [2.270899999999576e-05, 2.2709000000009638e-05, 2.269500000000313e-05, 2.2722000000002796e-05, 2.2708000000010164e-05, 2.272300000000227e-05, 2.269500000000313e-05, 2.2735999999995427e-05, 2....</msg>
<status status="PASS" starttime="20201110 08:37:36.879" endtime="20201110 08:37:36.892"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:36.897" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201110 08:37:36.896" endtime="20201110 08:37:36.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:36.899" level="INFO">VALUE: [2.270899999999576e-05, 2.2709000000009638e-05, 2.269500000000313e-05, 2.2722000000002796e-05, 2.2708000000010164e-05, 2.272300000000227e-05, 2.269500000000313e-05, 2.2735999999995427e-05, 2.2763999999994566e-05, 2.270899999999576e-05, 2.2750000000001935e-05, 2.272300000000227e-05, 2.2694000000003656e-05, 2.2735999999995427e-05, 2.272300000000227e-05, 2.2707999999996287e-05, 2.2721999999988918e-05, 2.2721999999988918e-05, 2.2708000000010164e-05, 2.269499999998925e-05, 2.2651999999998007e-05, 2.2763999999994566e-05, 2.2707999999996287e-05, 2.2707999999996287e-05, 2.2708000000010164e-05, 2.2708000000010164e-05, 2.2708000000010164e-05, 2.2736000000023182e-05, 2.2722000000002796e-05, 2.270799999998241e-05, 2.268099999999662e-05, 2.2695000000017007e-05, 2.2735999999995427e-05, 2.2708000000010164e-05, 2.272300000000227e-05, 2.2735999999995427e-05, 2.2694000000017533e-05, 2.272300000000227e-05, 2.268099999999662e-05, 2.2709000000009638e-05, 2.2695000000017007e-05, 2.2749999999988058e-05, 2.265300000001136e-05, 2.272300000000227e-05, 2.265300000001136e-05, 2.2709000000009638e-05, 2.2695000000017007e-05, 2.272300000000227e-05, 2.2693999999989778e-05, 2.2693999999989778e-05]</msg>
<status status="PASS" starttime="20201110 08:37:36.898" endtime="20201110 08:37:36.900"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.893" endtime="20201110 08:37:36.900"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:36.903" endtime="20201110 08:37:36.904"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:36.906" endtime="20201110 08:37:36.926"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.905" endtime="20201110 08:37:36.926"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.901" endtime="20201110 08:37:36.927"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.389" endtime="20201110 08:37:36.927"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201110 08:37:36.313" endtime="20201110 08:37:36.927" critical="yes"></status>
</test>
<status status="PASS" starttime="20201110 08:37:14.882" endtime="20201110 08:37:36.935"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.000" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201110 08:37:37.008" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201110 08:37:38.060" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201110 08:37:36.999" endtime="20201110 08:37:38.061"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201110 08:37:39.064" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20201110 08:37:38.062" endtime="20201110 08:37:39.065"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.998" endtime="20201110 08:37:39.066"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:39.071" endtime="20201110 08:37:39.303"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.068" endtime="20201110 08:37:39.303"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:39.316" endtime="20201110 08:37:39.336"></status>
</kw>
<msg timestamp="20201110 08:37:39.337" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:39.315" endtime="20201110 08:37:39.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:39.339" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:39.338" endtime="20201110 08:37:39.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:37:39.343" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:37:39.341" endtime="20201110 08:37:39.343"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:39.313" endtime="20201110 08:37:39.344"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:39.310" endtime="20201110 08:37:39.344"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.308" endtime="20201110 08:37:39.345"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:37:39.350" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:37:39.348" endtime="20201110 08:37:39.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.346" endtime="20201110 08:37:39.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.308" endtime="20201110 08:37:39.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.307" endtime="20201110 08:37:39.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:39.351" endtime="20201110 08:37:39.353"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.306" endtime="20201110 08:37:39.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:39.354" endtime="20201110 08:37:39.356"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.304" endtime="20201110 08:37:39.356"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.997" endtime="20201110 08:37:39.357"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:39.362" endtime="20201110 08:37:39.382"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.361" endtime="20201110 08:37:39.382"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:39.395" endtime="20201110 08:37:39.412"></status>
</kw>
<msg timestamp="20201110 08:37:39.413" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:39.394" endtime="20201110 08:37:39.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:39.415" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:39.414" endtime="20201110 08:37:39.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:37:39.418" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:37:39.417" endtime="20201110 08:37:39.419"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:39.391" endtime="20201110 08:37:39.419"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:39.389" endtime="20201110 08:37:39.420"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.387" endtime="20201110 08:37:39.420"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:37:39.425" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:37:39.424" endtime="20201110 08:37:39.425"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.421" endtime="20201110 08:37:39.425"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.387" endtime="20201110 08:37:39.425"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.386" endtime="20201110 08:37:39.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:39.426" endtime="20201110 08:37:39.428"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.385" endtime="20201110 08:37:39.428"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.383" endtime="20201110 08:37:39.429"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.360" endtime="20201110 08:37:39.429"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:39.440" endtime="20201110 08:37:39.458"></status>
</kw>
<msg timestamp="20201110 08:37:39.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:39.438" endtime="20201110 08:37:39.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:39.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:39.459" endtime="20201110 08:37:39.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:39.462" endtime="20201110 08:37:39.463"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.434" endtime="20201110 08:37:39.464"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.432" endtime="20201110 08:37:39.464"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:39.471" endtime="20201110 08:37:39.762"></status>
</kw>
<msg timestamp="20201110 08:37:39.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.06772675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067749764, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:39.469" endtime="20201110 08:37:39.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:39.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.06772675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067749764, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:39.766" endtime="20201110 08:37:39.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:39.775" endtime="20201110 08:37:39.776"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.467" endtime="20201110 08:37:39.777"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.465" endtime="20201110 08:37:39.777"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:39.781" level="INFO">${RESULT} = [{'time': 0.067749764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3014000000001755e-05, 'source_diff': 2.3014000000001755e-05}, {'time': 0.067778944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:39.778" endtime="20201110 08:37:39.782"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:39.795" level="INFO">${ACCURACY} = {'diff': [2.3014000000001755e-05, 1.354099999999192e-05, 1.4097000000004578e-05, 1.4069000000005438e-05, 1.355499999999843e-05, 1.3930000000009213e-05, 1.4097000000004578e-05, 1.3901999999996195e-05, ...</msg>
<status status="PASS" starttime="20201110 08:37:39.783" endtime="20201110 08:37:39.796"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:39.800" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201110 08:37:39.799" endtime="20201110 08:37:39.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:39.803" level="INFO">VALUE: [2.3014000000001755e-05, 1.354099999999192e-05, 1.4097000000004578e-05, 1.4069000000005438e-05, 1.355499999999843e-05, 1.3930000000009213e-05, 1.4097000000004578e-05, 1.3901999999996195e-05, 1.3665999999995515e-05, 1.3916000000002704e-05, 1.4374999999997029e-05, 1.40969999999907e-05, 1.4306000000005592e-05, 1.3901999999996195e-05, 1.4249999999993435e-05, 1.4041000000006298e-05, 1.4416000000003204e-05, 1.4472000000001484e-05, 1.3861000000003898e-05, 1.4166999999995489e-05, 1.3986000000007492e-05, 1.4429999999995835e-05, 1.3736000000000304e-05, 1.4098000000004052e-05, 1.4361000000004398e-05, 1.4374999999997029e-05, 1.3721999999993795e-05, 1.4027999999999263e-05, 1.384699999999739e-05, 1.3819999999997723e-05, 1.3902999999995669e-05, 1.4222000000008173e-05, 1.4277000000006979e-05, 1.3610999999996709e-05, 1.4249999999993435e-05, 1.3695000000008006e-05, 1.4027999999999263e-05, 1.3514000000006132e-05, 1.4194999999994629e-05, 1.4125000000003718e-05, 1.3721999999993795e-05, 1.4181000000001998e-05, 1.3681000000001498e-05, 1.4236000000000804e-05, 1.3986000000007492e-05, 1.4417000000002678e-05, 1.4347999999997363e-05, 1.4374999999997029e-05, 1.4111000000011087e-05, 1.381899999999825e-05]</msg>
<status status="PASS" starttime="20201110 08:37:39.801" endtime="20201110 08:37:39.804"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.796" endtime="20201110 08:37:39.804"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:39.806" endtime="20201110 08:37:39.808"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:39.810" endtime="20201110 08:37:39.829"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.808" endtime="20201110 08:37:39.830"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.805" endtime="20201110 08:37:39.830"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.430" endtime="20201110 08:37:39.830"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.430" endtime="20201110 08:37:39.831"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:39.839" endtime="20201110 08:37:39.859"></status>
</kw>
<msg timestamp="20201110 08:37:39.859" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:39.838" endtime="20201110 08:37:39.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:39.863" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:39.861" endtime="20201110 08:37:39.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:39.864" endtime="20201110 08:37:39.867"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.835" endtime="20201110 08:37:39.868"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.833" endtime="20201110 08:37:39.868"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:39.878" endtime="20201110 08:37:40.166"></status>
</kw>
<msg timestamp="20201110 08:37:40.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020659042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020672875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:39.876" endtime="20201110 08:37:40.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020659042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020672875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:40.172" endtime="20201110 08:37:40.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.182" endtime="20201110 08:37:40.183"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.873" endtime="20201110 08:37:40.184"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.869" endtime="20201110 08:37:40.184"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:40.189" level="INFO">${RESULT} = [{'time': 0.020672875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3833000000001289e-05, 'source_diff': 1.3833000000001289e-05}, {'time': 0.020697861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:40.185" endtime="20201110 08:37:40.189"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:40.203" level="INFO">${ACCURACY} = {'diff': [1.3833000000001289e-05, 1.3847000000000859e-05, 1.4291999999999083e-05, 1.3681000000001498e-05, 1.3667000000001928e-05, 1.4000000000000123e-05, 1.3777999999999013e-05, 1.4027999999999263e-05...</msg>
<status status="PASS" starttime="20201110 08:37:40.190" endtime="20201110 08:37:40.204"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.208" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201110 08:37:40.207" endtime="20201110 08:37:40.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.210" level="INFO">VALUE: [1.3833000000001289e-05, 1.3847000000000859e-05, 1.4291999999999083e-05, 1.3681000000001498e-05, 1.3667000000001928e-05, 1.4000000000000123e-05, 1.3777999999999013e-05, 1.4027999999999263e-05, 1.4402999999999638e-05, 1.4445000000001817e-05, 1.3902999999999138e-05, 1.4027999999999263e-05, 1.4500000000000624e-05, 1.3847000000000859e-05, 1.4235999999997334e-05, 1.3680999999998028e-05, 1.4069000000001969e-05, 1.3860999999996959e-05, 1.4375000000000498e-05, 1.3931000000001748e-05, 1.4486000000001054e-05, 1.3721999999997264e-05, 1.4402999999999638e-05, 1.4375000000000498e-05, 1.3652999999998888e-05, 1.3874999999999998e-05, 1.3848000000000332e-05, 1.3598000000000082e-05, 1.4416999999999208e-05, 1.3888999999999568e-05, 1.4471999999998014e-05, 1.3611999999999652e-05, 1.4443999999998874e-05, 1.3541999999998333e-05, 1.3709000000000637e-05, 1.3611000000000179e-05, 1.4221999999997764e-05, 1.3986000000000554e-05, 1.3930000000002274e-05, 1.404099999999936e-05, 1.4165999999999485e-05, 1.4236000000000804e-05, 1.4415999999999735e-05, 1.405499999999893e-05, 1.4151999999999915e-05, 1.379099999999911e-05, 1.4457999999998444e-05, 1.3972000000000984e-05, 1.4347000000001359e-05, 1.4166000000002954e-05]</msg>
<status status="PASS" starttime="20201110 08:37:40.209" endtime="20201110 08:37:40.211"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.204" endtime="20201110 08:37:40.212"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.214" endtime="20201110 08:37:40.215"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:40.217" endtime="20201110 08:37:40.237"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.216" endtime="20201110 08:37:40.237"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.212" endtime="20201110 08:37:40.238"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.831" endtime="20201110 08:37:40.238"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.831" endtime="20201110 08:37:40.238"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.247" endtime="20201110 08:37:40.264"></status>
</kw>
<msg timestamp="20201110 08:37:40.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:40.246" endtime="20201110 08:37:40.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:40.266" endtime="20201110 08:37:40.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.268" endtime="20201110 08:37:40.271"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.243" endtime="20201110 08:37:40.271"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.241" endtime="20201110 08:37:40.272"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.278" endtime="20201110 08:37:40.564"></status>
</kw>
<msg timestamp="20201110 08:37:40.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019892069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019906194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:40.277" endtime="20201110 08:37:40.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019892069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019906194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:40.568" endtime="20201110 08:37:40.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.577" endtime="20201110 08:37:40.579"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.274" endtime="20201110 08:37:40.579"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.273" endtime="20201110 08:37:40.580"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:40.584" level="INFO">${RESULT} = [{'time': 0.019906194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4125000000000248e-05, 'source_diff': 1.4125000000000248e-05}, {'time': 0.019931181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:40.580" endtime="20201110 08:37:40.584"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:40.598" level="INFO">${ACCURACY} = {'diff': [1.4125000000000248e-05, 1.4027999999999263e-05, 1.4027999999999263e-05, 1.3763999999999443e-05, 1.4402000000000165e-05, 1.3667000000001928e-05, 1.3611000000000179e-05, 1.3722000000000734e-05...</msg>
<status status="PASS" starttime="20201110 08:37:40.585" endtime="20201110 08:37:40.598"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.603" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201110 08:37:40.601" endtime="20201110 08:37:40.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.605" level="INFO">VALUE: [1.4125000000000248e-05, 1.4027999999999263e-05, 1.4027999999999263e-05, 1.3763999999999443e-05, 1.4402000000000165e-05, 1.3667000000001928e-05, 1.3611000000000179e-05, 1.3722000000000734e-05, 1.3722000000000734e-05, 1.3860999999996959e-05, 1.4041999999998833e-05, 1.4097000000001109e-05, 1.4305000000002649e-05, 1.3971999999997514e-05, 1.3915999999999235e-05, 1.3652000000002884e-05, 1.3986000000000554e-05, 1.4111000000000679e-05, 1.4277999999999513e-05, 1.405499999999893e-05, 1.3916999999998708e-05, 1.4166999999998958e-05, 1.3749999999999873e-05, 1.3861000000000429e-05, 1.4416999999999208e-05, 1.4042000000002303e-05, 1.3569000000001469e-05, 1.4111000000000679e-05, 1.4333000000001789e-05, 1.4402999999999638e-05, 1.4375000000000498e-05, 1.4222000000001234e-05, 1.4472000000001484e-05, 1.3527999999998763e-05, 1.3638999999999318e-05, 1.3695000000001067e-05, 1.4444999999998348e-05, 1.3903000000002608e-05, 1.3749999999999873e-05, 1.3972000000000984e-05, 1.4486000000001054e-05, 1.4388000000000595e-05, 1.3958999999997418e-05, 1.4305999999998653e-05, 1.3874999999999998e-05, 1.4000000000000123e-05, 1.3653000000002358e-05, 1.4473000000000957e-05, 1.401300000000022e-05, 1.4125000000000248e-05]</msg>
<status status="PASS" starttime="20201110 08:37:40.604" endtime="20201110 08:37:40.613"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.599" endtime="20201110 08:37:40.613"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.616" endtime="20201110 08:37:40.617"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:40.619" endtime="20201110 08:37:40.638"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.617" endtime="20201110 08:37:40.639"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.614" endtime="20201110 08:37:40.639"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.239" endtime="20201110 08:37:40.640"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.239" endtime="20201110 08:37:40.640"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.649" endtime="20201110 08:37:40.666"></status>
</kw>
<msg timestamp="20201110 08:37:40.666" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:40.647" endtime="20201110 08:37:40.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.669" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:40.667" endtime="20201110 08:37:40.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.670" endtime="20201110 08:37:40.672"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.644" endtime="20201110 08:37:40.673"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.642" endtime="20201110 08:37:40.673"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.680" endtime="20201110 08:37:40.966"></status>
</kw>
<msg timestamp="20201110 08:37:40.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019864444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019878403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:40.678" endtime="20201110 08:37:40.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019864444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019878403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:40.971" endtime="20201110 08:37:40.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.979" endtime="20201110 08:37:40.981"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.676" endtime="20201110 08:37:40.982"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.674" endtime="20201110 08:37:40.982"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:40.986" level="INFO">${RESULT} = [{'time': 0.019878403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3959000000000887e-05, 'source_diff': 1.3959000000000887e-05}, {'time': 0.019902361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:40.983" endtime="20201110 08:37:40.986"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:41.000" level="INFO">${ACCURACY} = {'diff': [1.3959000000000887e-05, 1.3736000000000304e-05, 1.3847000000000859e-05, 1.3916000000002704e-05, 1.3611000000000179e-05, 1.3527999999998763e-05, 1.409699999999764e-05, 1.3874999999999998e-05,...</msg>
<status status="PASS" starttime="20201110 08:37:40.987" endtime="20201110 08:37:41.001"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:41.005" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201110 08:37:41.004" endtime="20201110 08:37:41.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:41.007" level="INFO">VALUE: [1.3959000000000887e-05, 1.3736000000000304e-05, 1.3847000000000859e-05, 1.3916000000002704e-05, 1.3611000000000179e-05, 1.3527999999998763e-05, 1.409699999999764e-05, 1.3874999999999998e-05, 1.3874999999999998e-05, 1.3916999999998708e-05, 1.3681000000001498e-05, 1.4347000000001359e-05, 1.3874999999999998e-05, 1.4430999999998778e-05, 1.4222000000001234e-05, 1.4041999999998833e-05, 1.4222999999997238e-05, 1.3792000000002053e-05, 1.3902999999999138e-05, 1.4236000000000804e-05, 1.4042000000002303e-05, 1.4097000000001109e-05, 1.4195000000001567e-05, 1.4263999999999943e-05, 1.3722000000000734e-05, 1.3930999999998278e-05, 1.4375000000000498e-05, 1.3638999999999318e-05, 1.4180999999998528e-05, 1.4473000000000957e-05, 1.3611000000000179e-05, 1.3930999999998278e-05, 1.4250000000000373e-05, 1.3667000000001928e-05, 1.4112000000000152e-05, 1.3973000000000457e-05, 1.4459000000001387e-05, 1.426300000000047e-05, 1.377699999999954e-05, 1.430499999999918e-05, 1.40689999999985e-05, 1.4514000000000193e-05, 1.3653000000002358e-05, 1.4111000000000679e-05, 1.405499999999893e-05, 1.3541000000002329e-05, 1.4193999999998624e-05, 1.3651999999999415e-05, 1.3568999999998e-05, 1.3611000000000179e-05]</msg>
<status status="PASS" starttime="20201110 08:37:41.006" endtime="20201110 08:37:41.008"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.001" endtime="20201110 08:37:41.009"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:41.011" endtime="20201110 08:37:41.012"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:41.014" endtime="20201110 08:37:41.034"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.013" endtime="20201110 08:37:41.034"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.009" endtime="20201110 08:37:41.035"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.641" endtime="20201110 08:37:41.035"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.640" endtime="20201110 08:37:41.035"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:41.044" endtime="20201110 08:37:41.061"></status>
</kw>
<msg timestamp="20201110 08:37:41.062" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:41.042" endtime="20201110 08:37:41.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:41.064" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:41.063" endtime="20201110 08:37:41.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:41.065" endtime="20201110 08:37:41.068"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.040" endtime="20201110 08:37:41.068"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.038" endtime="20201110 08:37:41.069"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:41.075" endtime="20201110 08:37:41.381"></status>
</kw>
<msg timestamp="20201110 08:37:41.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019524917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019538958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:41.073" endtime="20201110 08:37:41.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:41.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019524917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019538958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:41.393" endtime="20201110 08:37:41.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:41.411" endtime="20201110 08:37:41.413"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.071" endtime="20201110 08:37:41.414"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.069" endtime="20201110 08:37:41.414"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:41.418" level="INFO">${RESULT} = [{'time': 0.019538958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.404099999999936e-05, 'source_diff': 1.404099999999936e-05}, {'time': 0.019561958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:41.415" endtime="20201110 08:37:41.419"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:41.432" level="INFO">${ACCURACY} = {'diff': [1.404099999999936e-05, 1.3722000000000734e-05, 1.402699999999979e-05, 1.4055000000002399e-05, 1.4069000000001969e-05, 1.4179999999999054e-05, 1.427700000000004e-05, 1.4110999999997209e-05, 1...</msg>
<status status="PASS" starttime="20201110 08:37:41.419" endtime="20201110 08:37:41.433"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:41.437" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201110 08:37:41.436" endtime="20201110 08:37:41.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:41.440" level="INFO">VALUE: [1.404099999999936e-05, 1.3722000000000734e-05, 1.402699999999979e-05, 1.4055000000002399e-05, 1.4069000000001969e-05, 1.4179999999999054e-05, 1.427700000000004e-05, 1.4110999999997209e-05, 1.3652999999998888e-05, 1.3693999999998124e-05, 1.4429999999999304e-05, 1.3652999999998888e-05, 1.4111000000000679e-05, 1.3722000000000734e-05, 1.4319999999998223e-05, 1.4443999999998874e-05, 1.3541999999998333e-05, 1.434699999999789e-05, 1.3555999999997903e-05, 1.4389000000000068e-05, 1.4125000000000248e-05, 1.4013999999999693e-05, 1.3902999999999138e-05, 1.4389000000000068e-05, 1.3708000000001164e-05, 1.4402999999999638e-05, 1.3624999999999748e-05, 1.3763999999999443e-05, 1.4000000000000123e-05, 1.3680999999998028e-05, 1.3888999999999568e-05, 1.4375000000000498e-05, 1.3708000000001164e-05, 1.3736000000000304e-05, 1.4250000000000373e-05, 1.4430999999998778e-05, 1.3833999999997293e-05, 1.3570000000000942e-05, 1.4263999999999943e-05, 1.4486000000001054e-05, 1.4195000000001567e-05, 1.4083000000001539e-05, 1.4098000000000582e-05, 1.4416999999999208e-05, 1.4403000000003108e-05, 1.4388000000000595e-05, 1.4263999999999943e-05, 1.4429999999999304e-05, 1.3679999999998554e-05, 1.4487000000000527e-05]</msg>
<status status="PASS" starttime="20201110 08:37:41.438" endtime="20201110 08:37:41.441"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.433" endtime="20201110 08:37:41.441"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:41.444" endtime="20201110 08:37:41.445"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:41.447" endtime="20201110 08:37:41.466"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.445" endtime="20201110 08:37:41.467"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.442" endtime="20201110 08:37:41.468"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.036" endtime="20201110 08:37:41.468"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.036" endtime="20201110 08:37:41.468"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:41.477" endtime="20201110 08:37:41.494"></status>
</kw>
<msg timestamp="20201110 08:37:41.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:41.475" endtime="20201110 08:37:41.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:41.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:41.495" endtime="20201110 08:37:41.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:41.498" endtime="20201110 08:37:41.501"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.473" endtime="20201110 08:37:41.501"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.470" endtime="20201110 08:37:41.502"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:41.509" endtime="20201110 08:37:41.794"></status>
</kw>
<msg timestamp="20201110 08:37:41.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020054444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020068889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:41.507" endtime="20201110 08:37:41.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:41.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020054444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020068889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:41.798" endtime="20201110 08:37:41.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:41.807" endtime="20201110 08:37:41.809"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.504" endtime="20201110 08:37:41.809"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.503" endtime="20201110 08:37:41.810"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:41.814" level="INFO">${RESULT} = [{'time': 0.020068889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4444999999998348e-05, 'source_diff': 1.4444999999998348e-05}, {'time': 0.020091903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:41.810" endtime="20201110 08:37:41.814"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:41.829" level="INFO">${ACCURACY} = {'diff': [1.4444999999998348e-05, 1.4250000000000373e-05, 1.3624999999999748e-05, 1.4389000000000068e-05, 1.4347000000001359e-05, 1.4361000000000929e-05, 1.4180999999998528e-05, 1.3638999999999318e-05...</msg>
<status status="PASS" starttime="20201110 08:37:41.815" endtime="20201110 08:37:41.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:41.834" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201110 08:37:41.833" endtime="20201110 08:37:41.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:41.837" level="INFO">VALUE: [1.4444999999998348e-05, 1.4250000000000373e-05, 1.3624999999999748e-05, 1.4389000000000068e-05, 1.4347000000001359e-05, 1.4361000000000929e-05, 1.4180999999998528e-05, 1.3638999999999318e-05, 1.4180999999998528e-05, 1.384699999999739e-05, 1.4138999999999818e-05, 1.3570000000000942e-05, 1.3987000000000027e-05, 1.40689999999985e-05, 1.4000000000000123e-05, 1.4473000000000957e-05, 1.4222000000001234e-05, 1.376299999999997e-05, 1.4223000000000707e-05, 1.3624999999999748e-05, 1.3597000000000609e-05, 1.4389000000000068e-05, 1.4084000000001012e-05, 1.4179999999999054e-05, 1.3930000000002274e-05, 1.404099999999936e-05, 1.4221999999997764e-05, 1.384699999999739e-05, 1.3708000000001164e-05, 1.3583000000001039e-05, 1.3778000000002483e-05, 1.4083000000001539e-05, 1.3861000000000429e-05, 1.3943999999998374e-05, 1.3805000000002149e-05, 1.3929999999998804e-05, 1.4179999999999054e-05, 1.4195000000001567e-05, 1.3611000000000179e-05, 1.3597000000000609e-05, 1.4236000000000804e-05, 1.3666999999998458e-05, 1.3570000000000942e-05, 1.3861000000000429e-05, 1.3596999999997139e-05, 1.4277999999999513e-05, 1.3667000000001928e-05, 1.4500000000000624e-05, 1.4347000000001359e-05, 1.3778000000002483e-05]</msg>
<status status="PASS" starttime="20201110 08:37:41.835" endtime="20201110 08:37:41.837"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.830" endtime="20201110 08:37:41.838"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:41.840" endtime="20201110 08:37:41.842"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:41.844" endtime="20201110 08:37:41.863"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.842" endtime="20201110 08:37:41.864"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.839" endtime="20201110 08:37:41.864"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.469" endtime="20201110 08:37:41.865"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.468" endtime="20201110 08:37:41.865"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:41.874" endtime="20201110 08:37:41.892"></status>
</kw>
<msg timestamp="20201110 08:37:41.892" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:41.872" endtime="20201110 08:37:41.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:41.895" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:41.893" endtime="20201110 08:37:41.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:41.896" endtime="20201110 08:37:41.898"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.869" endtime="20201110 08:37:41.899"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.867" endtime="20201110 08:37:41.899"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:41.906" endtime="20201110 08:37:42.194"></status>
</kw>
<msg timestamp="20201110 08:37:42.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02021625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020230667, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:41.905" endtime="20201110 08:37:42.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02021625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020230667, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:42.198" endtime="20201110 08:37:42.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.207" endtime="20201110 08:37:42.209"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.902" endtime="20201110 08:37:42.209"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.900" endtime="20201110 08:37:42.210"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:42.214" level="INFO">${RESULT} = [{'time': 0.020230667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4416999999999208e-05, 'source_diff': 1.4416999999999208e-05}, {'time': 0.020256681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:42.210" endtime="20201110 08:37:42.214"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:42.228" level="INFO">${ACCURACY} = {'diff': [1.4416999999999208e-05, 1.3805999999998153e-05, 1.4097999999997113e-05, 1.3624999999999748e-05, 1.3930000000002274e-05, 1.3638999999999318e-05, 1.3847000000000859e-05, 1.354099999999886e-05,...</msg>
<status status="PASS" starttime="20201110 08:37:42.215" endtime="20201110 08:37:42.229"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.233" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201110 08:37:42.232" endtime="20201110 08:37:42.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.236" level="INFO">VALUE: [1.4416999999999208e-05, 1.3805999999998153e-05, 1.4097999999997113e-05, 1.3624999999999748e-05, 1.3930000000002274e-05, 1.3638999999999318e-05, 1.3847000000000859e-05, 1.354099999999886e-05, 1.3986000000000554e-05, 1.3513999999999193e-05, 1.354099999999886e-05, 1.3611000000000179e-05, 1.3874999999999998e-05, 1.427700000000004e-05, 1.3819000000001719e-05, 1.4443999999998874e-05, 1.4389000000000068e-05, 1.379099999999911e-05, 1.379099999999911e-05, 1.3874999999999998e-05, 1.3915999999999235e-05, 1.4193999999998624e-05, 1.4389000000000068e-05, 1.4416999999999208e-05, 1.4486000000001054e-05, 1.4263999999999943e-05, 1.4152999999999388e-05, 1.3915999999999235e-05, 1.3542000000001803e-05, 1.4208999999997668e-05, 1.3930999999998278e-05, 1.3624999999999748e-05, 1.3888000000000095e-05, 1.3681000000001498e-05, 1.3791999999998583e-05, 1.3611000000000179e-05, 1.4291999999999083e-05, 1.4263999999999943e-05, 1.4097000000001109e-05, 1.3972000000000984e-05, 1.3874999999999998e-05, 1.4042000000002303e-05, 1.3806000000001623e-05, 1.3792000000002053e-05, 1.3542000000001803e-05, 1.3624999999999748e-05, 1.3723000000000207e-05, 1.3945000000001317e-05, 1.3652999999998888e-05, 1.3736000000000304e-05]</msg>
<status status="PASS" starttime="20201110 08:37:42.234" endtime="20201110 08:37:42.236"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.229" endtime="20201110 08:37:42.237"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.239" endtime="20201110 08:37:42.241"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:42.243" endtime="20201110 08:37:42.262"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.241" endtime="20201110 08:37:42.263"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.238" endtime="20201110 08:37:42.263"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.866" endtime="20201110 08:37:42.264"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.865" endtime="20201110 08:37:42.264"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.273" endtime="20201110 08:37:42.291"></status>
</kw>
<msg timestamp="20201110 08:37:42.291" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:42.271" endtime="20201110 08:37:42.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.294" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:42.292" endtime="20201110 08:37:42.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.295" endtime="20201110 08:37:42.297"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.268" endtime="20201110 08:37:42.298"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.266" endtime="20201110 08:37:42.299"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.305" endtime="20201110 08:37:42.592"></status>
</kw>
<msg timestamp="20201110 08:37:42.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020135389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020149222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:42.304" endtime="20201110 08:37:42.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020135389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020149222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:42.597" endtime="20201110 08:37:42.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.607" endtime="20201110 08:37:42.610"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.301" endtime="20201110 08:37:42.611"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.299" endtime="20201110 08:37:42.613"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:42.620" level="INFO">${RESULT} = [{'time': 0.020149222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3833000000001289e-05, 'source_diff': 1.3833000000001289e-05}, {'time': 0.020173222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:42.614" endtime="20201110 08:37:42.620"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:42.641" level="INFO">${ACCURACY} = {'diff': [1.3833000000001289e-05, 1.4222000000001234e-05, 1.3847000000000859e-05, 1.380499999999868e-05, 1.4360999999997459e-05, 1.429099999999961e-05, 1.3611000000000179e-05, 1.4277999999999513e-05, ...</msg>
<status status="PASS" starttime="20201110 08:37:42.622" endtime="20201110 08:37:42.642"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.651" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201110 08:37:42.649" endtime="20201110 08:37:42.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.656" level="INFO">VALUE: [1.3833000000001289e-05, 1.4222000000001234e-05, 1.3847000000000859e-05, 1.380499999999868e-05, 1.4360999999997459e-05, 1.429099999999961e-05, 1.3611000000000179e-05, 1.4277999999999513e-05, 1.4000000000000123e-05, 1.40689999999985e-05, 1.3902999999999138e-05, 1.383299999999782e-05, 1.4471999999998014e-05, 1.3931000000001748e-05, 1.4000000000000123e-05, 1.4417000000002678e-05, 1.4222000000001234e-05, 1.4027999999999263e-05, 1.3777999999999013e-05, 1.3611000000000179e-05, 1.4013999999999693e-05, 1.4097000000001109e-05, 1.3652999999998888e-05, 1.4084000000001012e-05, 1.4291999999999083e-05, 1.4069999999997973e-05, 1.3820000000001192e-05, 1.3541999999998333e-05, 1.3542000000001803e-05, 1.404099999999936e-05, 1.4180999999998528e-05, 1.4402999999999638e-05, 1.3749999999999873e-05, 1.4112000000000152e-05, 1.4263999999999943e-05, 1.4416999999999208e-05, 1.4223000000000707e-05, 1.4237000000000277e-05, 1.3651999999999415e-05, 1.4166999999998958e-05, 1.3555000000001899e-05, 1.4459000000001387e-05, 1.4000000000000123e-05, 1.3903000000002608e-05, 1.3736000000000304e-05, 1.4084000000001012e-05, 1.4179999999999054e-05, 1.4250000000000373e-05, 1.3541000000002329e-05, 1.401300000000022e-05]</msg>
<status status="PASS" starttime="20201110 08:37:42.653" endtime="20201110 08:37:42.658"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.644" endtime="20201110 08:37:42.659"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.663" endtime="20201110 08:37:42.665"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:42.669" endtime="20201110 08:37:42.689"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.666" endtime="20201110 08:37:42.690"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.660" endtime="20201110 08:37:42.691"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.265" endtime="20201110 08:37:42.692"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.264" endtime="20201110 08:37:42.692"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.708" endtime="20201110 08:37:42.726"></status>
</kw>
<msg timestamp="20201110 08:37:42.727" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:42.705" endtime="20201110 08:37:42.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:42.728" endtime="20201110 08:37:42.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.731" endtime="20201110 08:37:42.734"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.701" endtime="20201110 08:37:42.734"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.697" endtime="20201110 08:37:42.735"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.741" endtime="20201110 08:37:43.039"></status>
</kw>
<msg timestamp="20201110 08:37:43.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028835375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028849639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:42.740" endtime="20201110 08:37:43.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:43.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028835375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028849639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:43.044" endtime="20201110 08:37:43.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.052" endtime="20201110 08:37:43.054"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.737" endtime="20201110 08:37:43.054"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.735" endtime="20201110 08:37:43.055"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:43.059" level="INFO">${RESULT} = [{'time': 0.028849639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4263999999999943e-05, 'source_diff': 1.4263999999999943e-05}, {'time': 0.028871722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:43.056" endtime="20201110 08:37:43.059"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:43.073" level="INFO">${ACCURACY} = {'diff': [1.4263999999999943e-05, 1.3888999999999568e-05, 1.3888999999999568e-05, 1.3792000000002053e-05, 1.3902999999999138e-05, 1.3583000000001039e-05, 1.4056000000001873e-05, 1.4360999999997459e-05...</msg>
<status status="PASS" starttime="20201110 08:37:43.060" endtime="20201110 08:37:43.073"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:43.077" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201110 08:37:43.076" endtime="20201110 08:37:43.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:43.079" level="INFO">VALUE: [1.4263999999999943e-05, 1.3888999999999568e-05, 1.3888999999999568e-05, 1.3792000000002053e-05, 1.3902999999999138e-05, 1.3583000000001039e-05, 1.4056000000001873e-05, 1.4360999999997459e-05, 1.4042000000002303e-05, 1.4402999999999638e-05, 1.4237000000000277e-05, 1.4000000000000123e-05, 1.3805999999998153e-05, 1.4181000000001998e-05, 1.3847999999996863e-05, 1.3542000000001803e-05, 1.3791000000002579e-05, 1.381899999999825e-05, 1.3723000000000207e-05, 1.4179999999999054e-05, 1.4055000000002399e-05, 1.4193999999998624e-05, 1.429099999999961e-05, 1.4263999999999943e-05, 1.427700000000004e-05, 1.4236000000000804e-05, 1.3736000000000304e-05, 1.3708000000001164e-05, 1.3541000000002329e-05, 1.4361000000000929e-05, 1.4165999999999485e-05, 1.354099999999886e-05, 1.3722000000000734e-05, 1.4443999999998874e-05, 1.40689999999985e-05, 1.429099999999961e-05, 1.4429999999999304e-05, 1.4333000000001789e-05, 1.4457999999998444e-05, 1.4389000000000068e-05, 1.3972000000000984e-05, 1.3888999999999568e-05, 1.4361000000000929e-05, 1.4306000000002123e-05, 1.431899999999875e-05, 1.3930999999998278e-05, 1.3527999999998763e-05, 1.4166999999998958e-05, 1.3736000000000304e-05, 1.3542000000001803e-05]</msg>
<status status="PASS" starttime="20201110 08:37:43.078" endtime="20201110 08:37:43.080"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.073" endtime="20201110 08:37:43.081"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.083" endtime="20201110 08:37:43.084"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:43.086" endtime="20201110 08:37:43.106"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.085" endtime="20201110 08:37:43.106"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.081" endtime="20201110 08:37:43.107"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.694" endtime="20201110 08:37:43.107"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.693" endtime="20201110 08:37:43.107"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.116" endtime="20201110 08:37:43.134"></status>
</kw>
<msg timestamp="20201110 08:37:43.134" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:43.114" endtime="20201110 08:37:43.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:43.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:43.135" endtime="20201110 08:37:43.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.138" endtime="20201110 08:37:43.140"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.112" endtime="20201110 08:37:43.141"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.110" endtime="20201110 08:37:43.141"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.147" endtime="20201110 08:37:43.435"></status>
</kw>
<msg timestamp="20201110 08:37:43.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019596958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019611069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:43.146" endtime="20201110 08:37:43.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:43.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019596958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019611069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:43.440" endtime="20201110 08:37:43.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.450" endtime="20201110 08:37:43.452"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.143" endtime="20201110 08:37:43.453"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.142" endtime="20201110 08:37:43.453"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:43.458" level="INFO">${RESULT} = [{'time': 0.019611069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4110999999997209e-05, 'source_diff': 1.4110999999997209e-05}, {'time': 0.019634083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:43.454" endtime="20201110 08:37:43.459"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:43.475" level="INFO">${ACCURACY} = {'diff': [1.4110999999997209e-05, 1.4179999999999054e-05, 1.4179999999999054e-05, 1.4429999999999304e-05, 1.3986000000000554e-05, 1.4347000000001359e-05, 1.4055000000002399e-05, 1.3541000000002329e-05...</msg>
<status status="PASS" starttime="20201110 08:37:43.460" endtime="20201110 08:37:43.476"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:43.480" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201110 08:37:43.479" endtime="20201110 08:37:43.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:43.482" level="INFO">VALUE: [1.4110999999997209e-05, 1.4179999999999054e-05, 1.4179999999999054e-05, 1.4429999999999304e-05, 1.3986000000000554e-05, 1.4347000000001359e-05, 1.4055000000002399e-05, 1.3541000000002329e-05, 1.3665999999998985e-05, 1.3638999999999318e-05, 1.3778000000002483e-05, 1.4415999999999735e-05, 1.4500000000000624e-05, 1.4445000000001817e-05, 1.3763999999999443e-05, 1.3722000000000734e-05, 1.3527999999998763e-05, 1.3819000000001719e-05, 1.4194000000002094e-05, 1.3874999999999998e-05, 1.3916999999998708e-05, 1.4249999999996904e-05, 1.4486000000001054e-05, 1.3555999999997903e-05, 1.4375000000000498e-05, 1.3721999999997264e-05, 1.4250000000000373e-05, 1.3806000000001623e-05, 1.4027999999999263e-05, 1.3542000000001803e-05, 1.4138999999999818e-05, 1.4111000000000679e-05, 1.3667000000001928e-05, 1.4000000000000123e-05, 1.4027999999999263e-05, 1.377699999999954e-05, 1.3624999999999748e-05, 1.4375000000000498e-05, 1.3556000000001373e-05, 1.3916999999998708e-05, 1.4487000000000527e-05, 1.4125000000000248e-05, 1.3791999999998583e-05, 1.3791999999998583e-05, 1.4111000000000679e-05, 1.431899999999875e-05, 1.4500000000000624e-05, 1.4278000000002983e-05, 1.401300000000022e-05, 1.3598000000000082e-05]</msg>
<status status="PASS" starttime="20201110 08:37:43.481" endtime="20201110 08:37:43.483"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.476" endtime="20201110 08:37:43.484"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.486" endtime="20201110 08:37:43.487"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:43.489" endtime="20201110 08:37:43.509"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.488" endtime="20201110 08:37:43.509"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.484" endtime="20201110 08:37:43.510"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.108" endtime="20201110 08:37:43.510"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.108" endtime="20201110 08:37:43.510"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.519" endtime="20201110 08:37:43.536"></status>
</kw>
<msg timestamp="20201110 08:37:43.537" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:43.517" endtime="20201110 08:37:43.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:43.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:43.538" endtime="20201110 08:37:43.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.540" endtime="20201110 08:37:43.543"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.515" endtime="20201110 08:37:43.544"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.513" endtime="20201110 08:37:43.544"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.550" endtime="20201110 08:37:43.837"></status>
</kw>
<msg timestamp="20201110 08:37:43.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019627903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019642819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:43.549" endtime="20201110 08:37:43.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:43.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019627903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019642819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:43.842" endtime="20201110 08:37:43.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.851" endtime="20201110 08:37:43.853"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.546" endtime="20201110 08:37:43.853"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.545" endtime="20201110 08:37:43.854"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:43.858" level="INFO">${RESULT} = [{'time': 0.019642819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4916000000000235e-05, 'source_diff': 1.4916000000000235e-05}, {'time': 0.019669833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:43.855" endtime="20201110 08:37:43.858"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:43.872" level="INFO">${ACCURACY} = {'diff': [1.4916000000000235e-05, 1.534700000000236e-05, 1.5249999999997904e-05, 1.4971999999998514e-05, 1.5166000000000485e-05, 1.537499999999803e-05, 1.5485999999998584e-05, 1.534699999999889e-05, 1...</msg>
<status status="PASS" starttime="20201110 08:37:43.859" endtime="20201110 08:37:43.872"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:43.876" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201110 08:37:43.875" endtime="20201110 08:37:43.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:43.879" level="INFO">VALUE: [1.4916000000000235e-05, 1.534700000000236e-05, 1.5249999999997904e-05, 1.4971999999998514e-05, 1.5166000000000485e-05, 1.537499999999803e-05, 1.5485999999998584e-05, 1.534699999999889e-05, 1.5249999999997904e-05, 1.5236000000001804e-05, 1.5471999999999014e-05, 1.4667000000002928e-05, 1.4971999999998514e-05, 1.4527999999999763e-05, 1.4569000000002469e-05, 1.5292000000000083e-05, 1.4528000000003233e-05, 1.480499999999968e-05, 1.4625000000000749e-05, 1.4443999999998874e-05, 1.4999999999997654e-05, 1.458299999999857e-05, 1.5028000000000263e-05, 1.552700000000129e-05, 1.534699999999889e-05, 1.5264000000000943e-05, 1.534699999999889e-05, 1.5319999999999223e-05, 1.4749999999997404e-05, 1.533299999999932e-05, 1.5305999999999653e-05, 1.5194999999999098e-05, 1.4583000000002039e-05, 1.4750000000000874e-05, 1.5500000000001624e-05, 1.5319999999999223e-05, 1.4764000000000443e-05, 1.4722000000001734e-05, 1.5069999999998973e-05, 1.5249999999997904e-05, 1.4736000000001304e-05, 1.5458999999998918e-05, 1.536100000000193e-05, 1.4527999999999763e-05, 1.5249999999997904e-05, 1.5112000000001152e-05, 1.5055999999999403e-05, 1.5000000000001124e-05, 1.5348000000001832e-05, 1.4931000000002748e-05]</msg>
<status status="PASS" starttime="20201110 08:37:43.877" endtime="20201110 08:37:43.879"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.873" endtime="20201110 08:37:43.880"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.882" endtime="20201110 08:37:43.884"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:43.886" endtime="20201110 08:37:43.905"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.884" endtime="20201110 08:37:43.906"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.880" endtime="20201110 08:37:43.906"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.511" endtime="20201110 08:37:43.906"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.510" endtime="20201110 08:37:43.907"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.915" endtime="20201110 08:37:43.933"></status>
</kw>
<msg timestamp="20201110 08:37:43.933" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:43.914" endtime="20201110 08:37:43.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:43.936" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:43.934" endtime="20201110 08:37:43.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.937" endtime="20201110 08:37:43.939"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.911" endtime="20201110 08:37:43.940"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.909" endtime="20201110 08:37:43.940"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.947" endtime="20201110 08:37:44.232"></status>
</kw>
<msg timestamp="20201110 08:37:44.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019752903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019769389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:43.945" endtime="20201110 08:37:44.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:44.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019752903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019769389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:44.237" endtime="20201110 08:37:44.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:44.245" endtime="20201110 08:37:44.247"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.943" endtime="20201110 08:37:44.247"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.941" endtime="20201110 08:37:44.248"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:44.252" level="INFO">${RESULT} = [{'time': 0.019769389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6485999999999584e-05, 'source_diff': 1.6485999999999584e-05}, {'time': 0.019796403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:44.248" endtime="20201110 08:37:44.252"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:44.266" level="INFO">${ACCURACY} = {'diff': [1.6485999999999584e-05, 1.6195000000000098e-05, 1.609699999999964e-05, 1.5791999999997114e-05, 1.6000000000002124e-05, 1.5597999999998613e-05, 1.5792000000000583e-05, 1.5931000000000278e-05,...</msg>
<status status="PASS" starttime="20201110 08:37:44.253" endtime="20201110 08:37:44.266"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:44.270" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201110 08:37:44.269" endtime="20201110 08:37:44.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:44.273" level="INFO">VALUE: [1.6485999999999584e-05, 1.6195000000000098e-05, 1.609699999999964e-05, 1.5791999999997114e-05, 1.6000000000002124e-05, 1.5597999999998613e-05, 1.5792000000000583e-05, 1.5931000000000278e-05, 1.561100000000218e-05, 1.5737000000001777e-05, 1.5777999999997544e-05, 1.561100000000218e-05, 1.566700000000046e-05, 1.5973000000002457e-05, 1.612500000000225e-05, 1.6514000000002194e-05, 1.5597999999998613e-05, 1.5985999999999084e-05, 1.641700000000121e-05, 1.6277999999998044e-05, 1.6249999999998904e-05, 1.604100000000136e-05, 1.60690000000005e-05, 1.6235999999999334e-05, 1.555500000000043e-05, 1.5666000000000985e-05, 1.6499999999999154e-05, 1.6306000000000653e-05, 1.584699999999939e-05, 1.5915999999997765e-05, 1.587499999999853e-05, 1.6235999999999334e-05, 1.5665999999997515e-05, 1.630500000000118e-05, 1.5707999999999694e-05, 1.6056000000000403e-05, 1.6027999999997794e-05, 1.559699999999914e-05, 1.634699999999989e-05, 1.618099999999706e-05, 1.591700000000071e-05, 1.6221999999999764e-05, 1.5778000000001013e-05, 1.5681000000000028e-05, 1.584700000000286e-05, 1.5931000000000278e-05, 1.643100000000078e-05, 1.6041999999997364e-05, 1.565300000000089e-05, 1.6195000000000098e-05]</msg>
<status status="PASS" starttime="20201110 08:37:44.271" endtime="20201110 08:37:44.273"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.267" endtime="20201110 08:37:44.274"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:44.276" endtime="20201110 08:37:44.277"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:44.279" endtime="20201110 08:37:44.299"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.278" endtime="20201110 08:37:44.299"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.275" endtime="20201110 08:37:44.300"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.907" endtime="20201110 08:37:44.300"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.907" endtime="20201110 08:37:44.300"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:44.309" endtime="20201110 08:37:44.327"></status>
</kw>
<msg timestamp="20201110 08:37:44.327" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:44.307" endtime="20201110 08:37:44.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:44.330" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:44.328" endtime="20201110 08:37:44.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:44.331" endtime="20201110 08:37:44.333"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.305" endtime="20201110 08:37:44.334"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.303" endtime="20201110 08:37:44.334"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:44.341" endtime="20201110 08:37:44.628"></status>
</kw>
<msg timestamp="20201110 08:37:44.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019710667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019728056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:44.339" endtime="20201110 08:37:44.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:44.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019710667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019728056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:44.632" endtime="20201110 08:37:44.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:44.640" endtime="20201110 08:37:44.642"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.337" endtime="20201110 08:37:44.642"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.335" endtime="20201110 08:37:44.643"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:44.647" level="INFO">${RESULT} = [{'time': 0.019728056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.73889999999996e-05, 'source_diff': 1.73889999999996e-05}, {'time': 0.019754028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:37:44.644" endtime="20201110 08:37:44.647"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:44.661" level="INFO">${ACCURACY} = {'diff': [1.73889999999996e-05, 1.7305999999998184e-05, 1.666699999999799e-05, 1.7249999999999904e-05, 1.666699999999799e-05, 1.7070000000000973e-05, 1.737500000000003e-05, 1.7333999999997324e-05, 1.7...</msg>
<status status="PASS" starttime="20201110 08:37:44.648" endtime="20201110 08:37:44.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:44.666" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201110 08:37:44.665" endtime="20201110 08:37:44.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:44.669" level="INFO">VALUE: [1.73889999999996e-05, 1.7305999999998184e-05, 1.666699999999799e-05, 1.7249999999999904e-05, 1.666699999999799e-05, 1.7070000000000973e-05, 1.737500000000003e-05, 1.7333999999997324e-05, 1.7195000000001098e-05, 1.7278000000002514e-05, 1.743099999999831e-05, 1.6945000000000848e-05, 1.6570000000000473e-05, 1.741699999999874e-05, 1.712499999999978e-05, 1.6722999999999738e-05, 1.687499999999953e-05, 1.716699999999849e-05, 1.7013999999999224e-05, 1.73889999999996e-05, 1.6694000000001125e-05, 1.686099999999996e-05, 1.7500000000000154e-05, 1.6528000000001764e-05, 1.6930000000001805e-05, 1.659700000000014e-05, 1.655500000000143e-05, 1.712499999999978e-05, 1.7013999999999224e-05, 1.6972000000000514e-05, 1.709700000000064e-05, 1.7222000000000764e-05, 1.6972000000000514e-05, 1.679099999999864e-05, 1.712499999999978e-05, 1.6569000000001e-05, 1.7013999999999224e-05, 1.7222000000000764e-05, 1.6528000000001764e-05, 1.6749999999999404e-05, 1.716700000000196e-05, 1.734700000000089e-05, 1.7249999999999904e-05, 1.7222000000000764e-05, 1.6972000000000514e-05, 1.6735999999999834e-05, 1.7221999999997295e-05, 1.691700000000171e-05, 1.727699999999957e-05, 1.7236000000000334e-05]</msg>
<status status="PASS" starttime="20201110 08:37:44.668" endtime="20201110 08:37:44.670"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.662" endtime="20201110 08:37:44.671"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:44.673" endtime="20201110 08:37:44.675"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:44.677" endtime="20201110 08:37:44.696"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.675" endtime="20201110 08:37:44.697"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.671" endtime="20201110 08:37:44.697"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.301" endtime="20201110 08:37:44.698"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.301" endtime="20201110 08:37:44.698"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:44.706" endtime="20201110 08:37:44.723"></status>
</kw>
<msg timestamp="20201110 08:37:44.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:44.705" endtime="20201110 08:37:44.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:44.726" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:44.725" endtime="20201110 08:37:44.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:44.727" endtime="20201110 08:37:44.730"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.702" endtime="20201110 08:37:44.730"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.700" endtime="20201110 08:37:44.731"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:44.737" endtime="20201110 08:37:45.024"></status>
</kw>
<msg timestamp="20201110 08:37:45.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019791736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019809417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:44.736" endtime="20201110 08:37:45.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019791736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019809417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:45.028" endtime="20201110 08:37:45.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.036" endtime="20201110 08:37:45.038"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.733" endtime="20201110 08:37:45.039"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.732" endtime="20201110 08:37:45.039"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:45.043" level="INFO">${RESULT} = [{'time': 0.019809417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.768099999999856e-05, 'source_diff': 1.768099999999856e-05}, {'time': 0.019838403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:45.040" endtime="20201110 08:37:45.044"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:45.058" level="INFO">${ACCURACY} = {'diff': [1.768099999999856e-05, 1.7777999999999544e-05, 1.8236000000001334e-05, 1.841699999999974e-05, 1.7723000000000738e-05, 1.791699999999924e-05, 1.8098000000001113e-05, 1.793099999999881e-05, 1....</msg>
<status status="PASS" starttime="20201110 08:37:45.044" endtime="20201110 08:37:45.059"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.063" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201110 08:37:45.062" endtime="20201110 08:37:45.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.065" level="INFO">VALUE: [1.768099999999856e-05, 1.7777999999999544e-05, 1.8236000000001334e-05, 1.841699999999974e-05, 1.7723000000000738e-05, 1.791699999999924e-05, 1.8098000000001113e-05, 1.793099999999881e-05, 1.8098000000001113e-05, 1.7737000000000308e-05, 1.766699999999899e-05, 1.766700000000246e-05, 1.761100000000071e-05, 1.805499999999946e-05, 1.783300000000182e-05, 1.780499999999921e-05, 1.787500000000053e-05, 1.8000000000000654e-05, 1.8000000000000654e-05, 1.784699999999792e-05, 1.829100000000014e-05, 1.834700000000189e-05, 1.8166000000000015e-05, 1.7750000000000404e-05, 1.7777999999999544e-05, 1.8208000000002195e-05, 1.766699999999899e-05, 1.830499999999971e-05, 1.8500000000001154e-05, 1.8179999999999585e-05, 1.8250000000000904e-05, 1.7708000000001695e-05, 1.7527999999999294e-05, 1.836100000000146e-05, 1.8305999999999184e-05, 1.8513999999997255e-05, 1.783299999999835e-05, 1.840300000000017e-05, 1.763899999999985e-05, 1.82089999999982e-05, 1.8305999999999184e-05, 1.7569999999998004e-05, 1.791699999999924e-05, 1.816700000000296e-05, 1.8278000000000044e-05, 1.793100000000228e-05, 1.7527999999999294e-05, 1.7709000000001168e-05, 1.790300000000314e-05, 1.8278000000000044e-05]</msg>
<status status="PASS" starttime="20201110 08:37:45.064" endtime="20201110 08:37:45.066"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.059" endtime="20201110 08:37:45.067"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.069" endtime="20201110 08:37:45.070"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:45.073" endtime="20201110 08:37:45.092"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.071" endtime="20201110 08:37:45.092"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.067" endtime="20201110 08:37:45.093"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.699" endtime="20201110 08:37:45.093"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.698" endtime="20201110 08:37:45.093"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.102" endtime="20201110 08:37:45.120"></status>
</kw>
<msg timestamp="20201110 08:37:45.120" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:45.100" endtime="20201110 08:37:45.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.123" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:45.121" endtime="20201110 08:37:45.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.124" endtime="20201110 08:37:45.126"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.098" endtime="20201110 08:37:45.127"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.096" endtime="20201110 08:37:45.127"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.134" endtime="20201110 08:37:45.420"></status>
</kw>
<msg timestamp="20201110 08:37:45.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019538083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019557597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:45.132" endtime="20201110 08:37:45.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019538083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019557597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:45.425" endtime="20201110 08:37:45.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.433" endtime="20201110 08:37:45.435"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.130" endtime="20201110 08:37:45.435"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.128" endtime="20201110 08:37:45.436"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:45.440" level="INFO">${RESULT} = [{'time': 0.019557597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9513999999998255e-05, 'source_diff': 1.9513999999998255e-05}, {'time': 0.019585583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:45.436" endtime="20201110 08:37:45.440"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:45.453" level="INFO">${ACCURACY} = {'diff': [1.9513999999998255e-05, 1.8680000000000085e-05, 1.92769999999981e-05, 1.9236000000002335e-05, 1.930500000000071e-05, 1.9166000000001016e-05, 1.9444000000000405e-05, 1.863899999999738e-05, 1....</msg>
<status status="PASS" starttime="20201110 08:37:45.441" endtime="20201110 08:37:45.454"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.458" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201110 08:37:45.457" endtime="20201110 08:37:45.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.460" level="INFO">VALUE: [1.9513999999998255e-05, 1.8680000000000085e-05, 1.92769999999981e-05, 1.9236000000002335e-05, 1.930500000000071e-05, 1.9166000000001016e-05, 1.9444000000000405e-05, 1.863899999999738e-05, 1.8930000000000335e-05, 1.89029999999972e-05, 1.8972000000002515e-05, 1.9430000000000835e-05, 1.941700000000074e-05, 1.861100000000171e-05, 1.940300000000117e-05, 1.9111999999998214e-05, 1.868099999999956e-05, 1.934699999999942e-05, 1.8957999999999475e-05, 1.933299999999985e-05, 1.912500000000178e-05, 1.909699999999917e-05, 1.943100000000031e-05, 1.8778000000000544e-05, 1.941700000000074e-05, 1.9278000000001044e-05, 1.8847999999998394e-05, 1.945899999999945e-05, 1.9236000000002335e-05, 1.8555999999999434e-05, 1.944499999999988e-05, 1.9055999999999934e-05, 1.9249999999998435e-05, 1.897299999999852e-05, 1.9291999999997145e-05, 1.8736000000001835e-05, 1.9443999999996936e-05, 1.9278000000001044e-05, 1.9387999999998656e-05, 1.8541999999999864e-05, 1.8528000000000294e-05, 1.913899999999788e-05, 1.9041999999996895e-05, 1.886100000000196e-05, 1.890300000000067e-05, 1.940300000000117e-05, 1.9235999999998865e-05, 1.859699999999867e-05, 1.883299999999935e-05, 1.8707999999999225e-05]</msg>
<status status="PASS" starttime="20201110 08:37:45.459" endtime="20201110 08:37:45.461"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.454" endtime="20201110 08:37:45.462"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.464" endtime="20201110 08:37:45.465"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:45.467" endtime="20201110 08:37:45.487"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.466" endtime="20201110 08:37:45.487"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.462" endtime="20201110 08:37:45.488"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.094" endtime="20201110 08:37:45.488"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.094" endtime="20201110 08:37:45.488"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.497" endtime="20201110 08:37:45.516"></status>
</kw>
<msg timestamp="20201110 08:37:45.516" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:45.495" endtime="20201110 08:37:45.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.519" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:45.518" endtime="20201110 08:37:45.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.521" endtime="20201110 08:37:45.525"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.493" endtime="20201110 08:37:45.526"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.491" endtime="20201110 08:37:45.526"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.533" endtime="20201110 08:37:45.817"></status>
</kw>
<msg timestamp="20201110 08:37:45.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020675639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020695528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:45.531" endtime="20201110 08:37:45.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020675639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020695528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:45.821" endtime="20201110 08:37:45.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.830" endtime="20201110 08:37:45.832"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.529" endtime="20201110 08:37:45.832"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.527" endtime="20201110 08:37:45.833"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:45.837" level="INFO">${RESULT} = [{'time': 0.020695528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.98890000000021e-05, 'source_diff': 1.98890000000021e-05}, {'time': 0.020723528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:37:45.833" endtime="20201110 08:37:45.837"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:45.850" level="INFO">${ACCURACY} = {'diff': [1.98890000000021e-05, 1.9514000000001724e-05, 1.9721999999999795e-05, 2.0458000000000975e-05, 1.981900000000078e-05, 2.0041999999997895e-05, 2.011099999999974e-05, 1.9736000000002835e-05, 2....</msg>
<status status="PASS" starttime="20201110 08:37:45.838" endtime="20201110 08:37:45.851"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.855" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201110 08:37:45.854" endtime="20201110 08:37:45.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.857" level="INFO">VALUE: [1.98890000000021e-05, 1.9514000000001724e-05, 1.9721999999999795e-05, 2.0458000000000975e-05, 1.981900000000078e-05, 2.0041999999997895e-05, 2.011099999999974e-05, 1.9736000000002835e-05, 2.0222000000000295e-05, 1.997299999999952e-05, 1.983300000000035e-05, 1.965299999999795e-05, 2.0320000000000754e-05, 1.9806000000000684e-05, 1.99029999999982e-05, 2.016700000000149e-05, 1.972299999999927e-05, 1.972299999999927e-05, 2.0486000000000115e-05, 2.0429999999998366e-05, 2.02090000000002e-05, 1.9999999999999185e-05, 1.9707999999996756e-05, 1.986099999999949e-05, 1.9735999999999365e-05, 1.954100000000139e-05, 2.009700000000017e-05, 2.030500000000171e-05, 1.9736000000002835e-05, 2.002699999999885e-05, 1.952700000000182e-05, 2.036099999999999e-05, 2.0193999999997686e-05, 1.9666000000001516e-05, 2.029100000000214e-05, 1.959699999999967e-05, 1.9778000000001544e-05, 2.0237000000002808e-05, 1.9985999999999615e-05, 2.009700000000017e-05, 2.037500000000303e-05, 2.044500000000088e-05, 2.0027999999998325e-05, 1.9985999999999615e-05, 2.009700000000017e-05, 2.02090000000002e-05, 2.034700000000042e-05, 2.016700000000149e-05, 2.0457999999997506e-05, 2.0056000000000934e-05]</msg>
<status status="PASS" starttime="20201110 08:37:45.856" endtime="20201110 08:37:45.865"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.851" endtime="20201110 08:37:45.865"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.868" endtime="20201110 08:37:45.869"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:45.871" endtime="20201110 08:37:45.891"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.870" endtime="20201110 08:37:45.891"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.866" endtime="20201110 08:37:45.892"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.489" endtime="20201110 08:37:45.892"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.488" endtime="20201110 08:37:45.892"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.901" endtime="20201110 08:37:45.918"></status>
</kw>
<msg timestamp="20201110 08:37:45.918" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:45.899" endtime="20201110 08:37:45.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.921" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:45.919" endtime="20201110 08:37:45.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.922" endtime="20201110 08:37:45.924"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.897" endtime="20201110 08:37:45.925"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.895" endtime="20201110 08:37:45.925"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.932" endtime="20201110 08:37:46.218"></status>
</kw>
<msg timestamp="20201110 08:37:46.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019584264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019605569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:45.930" endtime="20201110 08:37:46.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:46.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019584264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019605569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:46.223" endtime="20201110 08:37:46.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:46.231" endtime="20201110 08:37:46.233"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.928" endtime="20201110 08:37:46.233"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.926" endtime="20201110 08:37:46.234"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:46.238" level="INFO">${RESULT} = [{'time': 0.019605569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.130499999999924e-05, 'source_diff': 2.130499999999924e-05}, {'time': 0.019636569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:46.235" endtime="20201110 08:37:46.238"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:46.252" level="INFO">${ACCURACY} = {'diff': [2.130499999999924e-05, 2.105499999999899e-05, 2.0888000000000156e-05, 2.0777999999999075e-05, 2.0958000000001475e-05, 2.079100000000264e-05, 2.105499999999899e-05, 2.104099999999942e-05, 2.1...</msg>
<status status="PASS" starttime="20201110 08:37:46.239" endtime="20201110 08:37:46.252"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:46.256" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201110 08:37:46.255" endtime="20201110 08:37:46.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:46.259" level="INFO">VALUE: [2.130499999999924e-05, 2.105499999999899e-05, 2.0888000000000156e-05, 2.0777999999999075e-05, 2.0958000000001475e-05, 2.079100000000264e-05, 2.105499999999899e-05, 2.104099999999942e-05, 2.133299999999838e-05, 2.137500000000056e-05, 2.119500000000163e-05, 2.1415999999999796e-05, 2.1222000000001295e-05, 2.112500000000031e-05, 2.131899999999881e-05, 2.109700000000117e-05, 2.1165999999999546e-05, 2.104099999999942e-05, 2.0943999999998436e-05, 2.0486000000000115e-05, 2.1055999999998465e-05, 2.1291999999999145e-05, 2.1250000000000435e-05, 2.143099999999884e-05, 2.116699999999902e-05, 2.0749999999999935e-05, 2.058299999999763e-05, 2.1264000000000005e-05, 2.116699999999902e-05, 2.087500000000006e-05, 2.143099999999884e-05, 2.1500000000000685e-05, 2.091699999999877e-05, 2.0513999999999255e-05, 2.0556000000001434e-05, 2.111100000000074e-05, 2.0819999999997785e-05, 2.112500000000031e-05, 2.145900000000145e-05, 2.1236000000000865e-05, 2.1056000000001934e-05, 2.0541999999998395e-05, 2.0749999999999935e-05, 2.1486000000001115e-05, 2.0777999999999075e-05, 2.0527999999998825e-05, 2.1193999999998686e-05, 2.105499999999899e-05, 2.0929999999998866e-05, 2.108299999999813e-05]</msg>
<status status="PASS" starttime="20201110 08:37:46.257" endtime="20201110 08:37:46.260"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.253" endtime="20201110 08:37:46.260"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:46.262" endtime="20201110 08:37:46.264"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:46.266" endtime="20201110 08:37:46.285"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.264" endtime="20201110 08:37:46.286"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.261" endtime="20201110 08:37:46.286"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.893" endtime="20201110 08:37:46.286"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.892" endtime="20201110 08:37:46.286"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:46.295" endtime="20201110 08:37:46.312"></status>
</kw>
<msg timestamp="20201110 08:37:46.312" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:46.293" endtime="20201110 08:37:46.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:46.315" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:46.313" endtime="20201110 08:37:46.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:46.316" endtime="20201110 08:37:46.318"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.291" endtime="20201110 08:37:46.319"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.289" endtime="20201110 08:37:46.319"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:46.326" endtime="20201110 08:37:46.611"></status>
</kw>
<msg timestamp="20201110 08:37:46.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019537931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019560431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:46.324" endtime="20201110 08:37:46.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:46.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019537931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019560431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:46.616" endtime="20201110 08:37:46.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:46.624" endtime="20201110 08:37:46.626"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.322" endtime="20201110 08:37:46.626"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.320" endtime="20201110 08:37:46.627"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:46.631" level="INFO">${RESULT} = [{'time': 0.019560431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2499999999998216e-05, 'source_diff': 2.2499999999998216e-05}, {'time': 0.019592444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:46.627" endtime="20201110 08:37:46.631"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:46.645" level="INFO">${ACCURACY} = {'diff': [2.2499999999998216e-05, 2.237500000000156e-05, 2.1694000000002656e-05, 2.2500000000001685e-05, 2.204100000000042e-05, 2.2235999999998396e-05, 2.191699999999977e-05, 2.1693999999999186e-05, 2...</msg>
<status status="PASS" starttime="20201110 08:37:46.632" endtime="20201110 08:37:46.646"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:46.650" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201110 08:37:46.649" endtime="20201110 08:37:46.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:46.652" level="INFO">VALUE: [2.2499999999998216e-05, 2.237500000000156e-05, 2.1694000000002656e-05, 2.2500000000001685e-05, 2.204100000000042e-05, 2.2235999999998396e-05, 2.191699999999977e-05, 2.1693999999999186e-05, 2.205499999999999e-05, 2.1985999999998146e-05, 2.231899999999981e-05, 2.1943999999999436e-05, 2.181899999999931e-05, 2.1721999999998326e-05, 2.1791999999999645e-05, 2.2416000000000796e-05, 2.2471999999999076e-05, 2.1916000000000296e-05, 2.2471999999999076e-05, 2.1750000000000935e-05, 2.1971999999998576e-05, 2.186099999999802e-05, 2.236099999999852e-05, 2.191699999999977e-05, 2.1749999999997466e-05, 2.237499999999809e-05, 2.188900000000063e-05, 2.191699999999977e-05, 2.2221999999998826e-05, 2.2041999999999895e-05, 2.166699999999952e-05, 2.191699999999977e-05, 2.1721999999998326e-05, 2.2500000000001685e-05, 2.194499999999891e-05, 2.1805999999999215e-05, 2.161100000000124e-05, 2.212500000000131e-05, 2.1847999999997925e-05, 2.166699999999952e-05, 2.1542000000002864e-05, 2.172300000000127e-05, 2.2098000000001644e-05, 2.198699999999762e-05, 2.161100000000124e-05, 2.1679999999999616e-05, 2.1612000000000714e-05, 2.2471999999999076e-05, 2.2263999999997536e-05, 2.1721999999998326e-05]</msg>
<status status="PASS" starttime="20201110 08:37:46.651" endtime="20201110 08:37:46.653"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.646" endtime="20201110 08:37:46.654"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:46.656" endtime="20201110 08:37:46.657"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:46.660" endtime="20201110 08:37:46.679"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.658" endtime="20201110 08:37:46.679"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.654" endtime="20201110 08:37:46.680"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.287" endtime="20201110 08:37:46.680"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.287" endtime="20201110 08:37:46.680"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:46.689" endtime="20201110 08:37:46.706"></status>
</kw>
<msg timestamp="20201110 08:37:46.706" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:46.687" endtime="20201110 08:37:46.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:46.709" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:46.707" endtime="20201110 08:37:46.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:46.710" endtime="20201110 08:37:46.713"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.685" endtime="20201110 08:37:46.713"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.683" endtime="20201110 08:37:46.714"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:46.720" endtime="20201110 08:37:47.007"></status>
</kw>
<msg timestamp="20201110 08:37:47.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019616333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019639542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:46.718" endtime="20201110 08:37:47.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019616333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019639542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:47.011" endtime="20201110 08:37:47.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.019" endtime="20201110 08:37:47.021"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.716" endtime="20201110 08:37:47.022"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.714" endtime="20201110 08:37:47.022"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:47.026" level="INFO">${RESULT} = [{'time': 0.019639542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.320899999999973e-05, 'source_diff': 2.320899999999973e-05}, {'time': 0.019674528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:47.023" endtime="20201110 08:37:47.026"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:47.040" level="INFO">${ACCURACY} = {'diff': [2.320899999999973e-05, 2.295899999999948e-05, 2.3042000000000895e-05, 2.2806000000000215e-05, 2.2612000000001714e-05, 2.294499999999991e-05, 2.2833999999999355e-05, 2.255500000000049e-05, 2....</msg>
<status status="PASS" starttime="20201110 08:37:47.027" endtime="20201110 08:37:47.040"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.044" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201110 08:37:47.043" endtime="20201110 08:37:47.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.047" level="INFO">VALUE: [2.320899999999973e-05, 2.295899999999948e-05, 2.3042000000000895e-05, 2.2806000000000215e-05, 2.2612000000001714e-05, 2.294499999999991e-05, 2.2833999999999355e-05, 2.255500000000049e-05, 2.2791999999997176e-05, 2.268100000000009e-05, 2.2944000000000436e-05, 2.266700000000052e-05, 2.3040999999997952e-05, 2.3165999999998077e-05, 2.256900000000006e-05, 2.344500000000041e-05, 2.3194000000000686e-05, 2.3179999999997647e-05, 2.3318999999997342e-05, 2.2930000000000866e-05, 2.286100000000249e-05, 2.2916000000001296e-05, 2.3485999999999646e-05, 2.3054999999997522e-05, 2.2985999999999146e-05, 2.341700000000127e-05, 2.269499999999966e-05, 2.3055999999996996e-05, 2.334699999999995e-05, 2.266700000000052e-05, 2.344499999999694e-05, 2.2555999999999965e-05, 2.3056000000000465e-05, 2.2792000000000645e-05, 2.2764000000001505e-05, 2.2750000000001935e-05, 2.259700000000267e-05, 2.2555999999999965e-05, 2.3041999999997426e-05, 2.312499999999884e-05, 2.3361999999998995e-05, 2.268100000000009e-05, 2.3458000000000506e-05, 2.343099999999737e-05, 2.2762999999998562e-05, 2.273699999999837e-05, 2.3165999999998077e-05, 2.347299999999955e-05, 2.286100000000249e-05, 2.3290999999998202e-05]</msg>
<status status="PASS" starttime="20201110 08:37:47.045" endtime="20201110 08:37:47.048"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.041" endtime="20201110 08:37:47.048"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.050" endtime="20201110 08:37:47.052"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:47.054" endtime="20201110 08:37:47.073"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.052" endtime="20201110 08:37:47.074"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.049" endtime="20201110 08:37:47.074"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.681" endtime="20201110 08:37:47.075"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.681" endtime="20201110 08:37:47.075"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.084" endtime="20201110 08:37:47.102"></status>
</kw>
<msg timestamp="20201110 08:37:47.103" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:47.082" endtime="20201110 08:37:47.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.105" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:47.104" endtime="20201110 08:37:47.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.106" endtime="20201110 08:37:47.109"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.080" endtime="20201110 08:37:47.110"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.077" endtime="20201110 08:37:47.110"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.116" endtime="20201110 08:37:47.401"></status>
</kw>
<msg timestamp="20201110 08:37:47.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020937389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020961528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:47.115" endtime="20201110 08:37:47.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020937389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020961528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:47.406" endtime="20201110 08:37:47.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.414" endtime="20201110 08:37:47.416"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.112" endtime="20201110 08:37:47.416"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.111" endtime="20201110 08:37:47.417"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:47.421" level="INFO">${RESULT} = [{'time': 0.020961528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.413899999999941e-05, 'source_diff': 2.413899999999941e-05}, {'time': 0.0209965, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:37:47.417" endtime="20201110 08:37:47.421"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:47.434" level="INFO">${ACCURACY} = {'diff': [2.413899999999941e-05, 2.4222000000000826e-05, 2.4250000000003435e-05, 2.4000000000003185e-05, 2.3846999999996982e-05, 2.3735999999999896e-05, 2.40970000000007e-05, 2.39169999999983e-05, 2.3...</msg>
<status status="PASS" starttime="20201110 08:37:47.422" endtime="20201110 08:37:47.435"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.439" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201110 08:37:47.438" endtime="20201110 08:37:47.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.441" level="INFO">VALUE: [2.413899999999941e-05, 2.4222000000000826e-05, 2.4250000000003435e-05, 2.4000000000003185e-05, 2.3846999999996982e-05, 2.3735999999999896e-05, 2.40970000000007e-05, 2.39169999999983e-05, 2.3986000000000146e-05, 2.362499999999934e-05, 2.4137999999999937e-05, 2.418100000000159e-05, 2.369499999999719e-05, 2.3597999999999675e-05, 2.4042000000001895e-05, 2.3804999999998272e-05, 2.4098000000000175e-05, 2.3778000000002075e-05, 2.4179999999998647e-05, 2.39030000000022e-05, 2.4486000000000646e-05, 2.3999999999999716e-05, 2.3806000000001215e-05, 2.4222000000000826e-05, 2.3665999999998577e-05, 2.431900000000181e-05, 2.4500000000000216e-05, 2.3915999999998827e-05, 2.384700000000045e-05, 2.356900000000106e-05, 2.4193999999998217e-05, 2.4472000000001076e-05, 2.39030000000022e-05, 2.416700000000202e-05, 2.4527999999999356e-05, 2.4486000000000646e-05, 2.3556000000000965e-05, 2.3528000000001825e-05, 2.437500000000009e-05, 2.4207999999997787e-05, 2.368100000000109e-05, 2.368100000000109e-05, 2.397300000000005e-05, 2.4500000000000216e-05, 2.444500000000141e-05, 2.391700000000177e-05, 2.415299999999898e-05, 2.3722000000000326e-05, 2.4305999999998246e-05, 2.3722000000000326e-05]</msg>
<status status="PASS" starttime="20201110 08:37:47.440" endtime="20201110 08:37:47.442"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.435" endtime="20201110 08:37:47.443"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.445" endtime="20201110 08:37:47.446"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:47.448" endtime="20201110 08:37:47.468"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.447" endtime="20201110 08:37:47.468"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.443" endtime="20201110 08:37:47.469"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.076" endtime="20201110 08:37:47.469"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.075" endtime="20201110 08:37:47.469"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.478" endtime="20201110 08:37:47.494"></status>
</kw>
<msg timestamp="20201110 08:37:47.495" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:47.476" endtime="20201110 08:37:47.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:47.496" endtime="20201110 08:37:47.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.498" endtime="20201110 08:37:47.501"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.474" endtime="20201110 08:37:47.501"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.472" endtime="20201110 08:37:47.502"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.508" endtime="20201110 08:37:47.794"></status>
</kw>
<msg timestamp="20201110 08:37:47.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019626278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019650903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:47.506" endtime="20201110 08:37:47.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019626278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019650903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:47.798" endtime="20201110 08:37:47.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.807" endtime="20201110 08:37:47.808"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.504" endtime="20201110 08:37:47.809"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.502" endtime="20201110 08:37:47.809"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:47.814" level="INFO">${RESULT} = [{'time': 0.019650903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.462500000000034e-05, 'source_diff': 2.462500000000034e-05}, {'time': 0.019684917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:47.810" endtime="20201110 08:37:47.814"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:47.827" level="INFO">${ACCURACY} = {'diff': [2.462500000000034e-05, 2.5485999999998177e-05, 2.5235999999997927e-05, 2.516699999999955e-05, 2.5278000000000106e-05, 2.466699999999905e-05, 2.4541999999998926e-05, 2.5179999999999647e-05, 2...</msg>
<status status="PASS" starttime="20201110 08:37:47.815" endtime="20201110 08:37:47.828"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.832" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201110 08:37:47.831" endtime="20201110 08:37:47.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.834" level="INFO">VALUE: [2.462500000000034e-05, 2.5485999999998177e-05, 2.5235999999997927e-05, 2.516699999999955e-05, 2.5278000000000106e-05, 2.466699999999905e-05, 2.4541999999998926e-05, 2.5179999999999647e-05, 2.5110999999997802e-05, 2.4929999999999397e-05, 2.533300000000238e-05, 2.5304999999999772e-05, 2.458300000000163e-05, 2.45970000000012e-05, 2.4665999999999577e-05, 2.4778000000003075e-05, 2.5416000000000327e-05, 2.4555999999998496e-05, 2.4915999999999827e-05, 2.490299999999973e-05, 2.4804999999999272e-05, 2.4679999999999147e-05, 2.484700000000145e-05, 2.4693999999998717e-05, 2.469500000000166e-05, 2.458300000000163e-05, 2.5096999999998232e-05, 2.4818999999998842e-05, 2.4750000000000466e-05, 2.5027999999999856e-05, 2.5084000000001605e-05, 2.540300000000023e-05, 2.5278000000000106e-05, 2.543100000000284e-05, 2.468099999999862e-05, 2.4750000000000466e-05, 2.4846999999997982e-05, 2.518099999999912e-05, 2.519499999999869e-05, 2.4555999999998496e-05, 2.5068999999999092e-05, 2.4791999999999176e-05, 2.462500000000034e-05, 2.4848000000000925e-05, 2.466700000000252e-05, 2.512500000000084e-05, 2.5179999999999647e-05, 2.497299999999758e-05, 2.5457999999999037e-05, 2.5249999999997497e-05]</msg>
<status status="PASS" starttime="20201110 08:37:47.833" endtime="20201110 08:37:47.835"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.828" endtime="20201110 08:37:47.836"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.838" endtime="20201110 08:37:47.839"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:47.841" endtime="20201110 08:37:47.861"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.840" endtime="20201110 08:37:47.861"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.836" endtime="20201110 08:37:47.862"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.470" endtime="20201110 08:37:47.862"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.469" endtime="20201110 08:37:47.862"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.871" endtime="20201110 08:37:47.888"></status>
</kw>
<msg timestamp="20201110 08:37:47.889" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:47.869" endtime="20201110 08:37:47.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.891" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:47.890" endtime="20201110 08:37:47.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.892" endtime="20201110 08:37:47.895"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.866" endtime="20201110 08:37:47.895"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.864" endtime="20201110 08:37:47.896"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.902" endtime="20201110 08:37:48.188"></status>
</kw>
<msg timestamp="20201110 08:37:48.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019890278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019915972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:47.900" endtime="20201110 08:37:48.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:48.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019890278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019915972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:48.192" endtime="20201110 08:37:48.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:48.200" endtime="20201110 08:37:48.202"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.898" endtime="20201110 08:37:48.203"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.896" endtime="20201110 08:37:48.203"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:48.207" level="INFO">${RESULT} = [{'time': 0.019915972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5693999999999717e-05, 'source_diff': 2.5693999999999717e-05}, {'time': 0.019952944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:48.204" endtime="20201110 08:37:48.207"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:48.222" level="INFO">${ACCURACY} = {'diff': [2.5693999999999717e-05, 2.5736000000001896e-05, 2.6500000000002216e-05, 2.563900000000091e-05, 2.5805000000000272e-05, 2.611100000000227e-05, 2.5721999999998857e-05, 2.584700000000245e-05, 2...</msg>
<status status="PASS" starttime="20201110 08:37:48.208" endtime="20201110 08:37:48.222"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:48.226" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201110 08:37:48.225" endtime="20201110 08:37:48.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:48.229" level="INFO">VALUE: [2.5693999999999717e-05, 2.5736000000001896e-05, 2.6500000000002216e-05, 2.563900000000091e-05, 2.5805000000000272e-05, 2.611100000000227e-05, 2.5721999999998857e-05, 2.584700000000245e-05, 2.55970000000022e-05, 2.565300000000048e-05, 2.5832999999999412e-05, 2.5986000000002146e-05, 2.6374999999998622e-05, 2.636100000000252e-05, 2.640300000000123e-05, 2.5986000000002146e-05, 2.6360999999999052e-05, 2.64170000000008e-05, 2.5735999999998427e-05, 2.586100000000202e-05, 2.5736000000001896e-05, 2.619499999999969e-05, 2.6292000000000676e-05, 2.6124999999998372e-05, 2.613899999999794e-05, 2.5833999999998886e-05, 2.5874999999998122e-05, 2.62369999999984e-05, 2.5749999999997997e-05, 2.622299999999883e-05, 2.5999999999998247e-05, 2.5680000000000147e-05, 2.6306000000000246e-05, 2.6306000000000246e-05, 2.5832999999999412e-05, 2.59170000000003e-05, 2.6305000000000772e-05, 2.636100000000252e-05, 2.6304999999997303e-05, 2.6055000000000522e-05, 2.6542000000000926e-05, 2.6055000000000522e-05, 2.5930000000000397e-05, 2.5610999999998302e-05, 2.5985999999998677e-05, 2.5735999999998427e-05, 2.565300000000048e-05, 2.6166000000001077e-05, 2.6430000000000897e-05, 2.565300000000048e-05]</msg>
<status status="PASS" starttime="20201110 08:37:48.228" endtime="20201110 08:37:48.230"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.223" endtime="20201110 08:37:48.230"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:48.233" endtime="20201110 08:37:48.234"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:48.236" endtime="20201110 08:37:48.255"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.234" endtime="20201110 08:37:48.256"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.231" endtime="20201110 08:37:48.256"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.863" endtime="20201110 08:37:48.257"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.862" endtime="20201110 08:37:48.257"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:48.265" endtime="20201110 08:37:48.281"></status>
</kw>
<msg timestamp="20201110 08:37:48.282" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:48.264" endtime="20201110 08:37:48.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:48.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:48.283" endtime="20201110 08:37:48.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:48.285" endtime="20201110 08:37:48.288"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.261" endtime="20201110 08:37:48.288"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.259" endtime="20201110 08:37:48.289"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:48.295" endtime="20201110 08:37:48.582"></status>
</kw>
<msg timestamp="20201110 08:37:48.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019712, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019739486, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:37:48.294" endtime="20201110 08:37:48.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:48.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019712, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019739486, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:37:48.586" endtime="20201110 08:37:48.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:48.595" endtime="20201110 08:37:48.596"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.291" endtime="20201110 08:37:48.597"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.289" endtime="20201110 08:37:48.597"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:48.601" level="INFO">${RESULT} = [{'time': 0.019739486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7486000000000177e-05, 'source_diff': 2.7486000000000177e-05}, {'time': 0.0197785, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:48.598" endtime="20201110 08:37:48.602"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:48.615" level="INFO">${ACCURACY} = {'diff': [2.7486000000000177e-05, 2.6985999999999677e-05, 2.7070000000000566e-05, 2.7028000000001856e-05, 2.743100000000137e-05, 2.7083000000000662e-05, 2.691699999999783e-05, 2.7291999999998207e-05, ...</msg>
<status status="PASS" starttime="20201110 08:37:48.602" endtime="20201110 08:37:48.615"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:48.620" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201110 08:37:48.619" endtime="20201110 08:37:48.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:48.622" level="INFO">VALUE: [2.7486000000000177e-05, 2.6985999999999677e-05, 2.7070000000000566e-05, 2.7028000000001856e-05, 2.743100000000137e-05, 2.7083000000000662e-05, 2.691699999999783e-05, 2.7291999999998207e-05, 2.695900000000001e-05, 2.6528000000001356e-05, 2.666699999999758e-05, 2.7097000000000232e-05, 2.7415999999998858e-05, 2.715299999999851e-05, 2.6958000000000537e-05, 2.7124999999999372e-05, 2.661100000000277e-05, 2.6570000000000066e-05, 2.6860999999999552e-05, 2.7069000000001092e-05, 2.6721999999999857e-05, 2.7096999999996763e-05, 2.7097000000000232e-05, 2.6624999999998872e-05, 2.6902000000002257e-05, 2.7040999999998483e-05, 2.6555000000001022e-05, 2.6526999999998413e-05, 2.7527999999998887e-05, 2.7486000000000177e-05, 2.6791000000001702e-05, 2.7249999999999497e-05, 2.6513999999998317e-05, 2.6986000000003146e-05, 2.690300000000173e-05, 2.7235999999999927e-05, 2.7499999999999747e-05, 2.6721999999999857e-05, 2.7083000000000662e-05, 2.712500000000284e-05, 2.6596999999999732e-05, 2.741699999999833e-05, 2.6985999999999677e-05, 2.6874999999999122e-05, 2.669500000000019e-05, 2.7014000000002286e-05, 2.668100000000062e-05, 2.6735999999999427e-05, 2.716700000000155e-05, 2.695900000000001e-05]</msg>
<status status="PASS" starttime="20201110 08:37:48.621" endtime="20201110 08:37:48.623"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.616" endtime="20201110 08:37:48.624"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:48.626" endtime="20201110 08:37:48.627"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:48.629" endtime="20201110 08:37:48.648"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.628" endtime="20201110 08:37:48.649"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.624" endtime="20201110 08:37:48.649"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.258" endtime="20201110 08:37:48.650"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.257" endtime="20201110 08:37:48.650"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:48.659" endtime="20201110 08:37:48.676"></status>
</kw>
<msg timestamp="20201110 08:37:48.677" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:48.657" endtime="20201110 08:37:48.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:48.679" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:48.678" endtime="20201110 08:37:48.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:48.680" endtime="20201110 08:37:48.683"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.654" endtime="20201110 08:37:48.683"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.652" endtime="20201110 08:37:48.684"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:48.690" endtime="20201110 08:37:48.976"></status>
</kw>
<msg timestamp="20201110 08:37:48.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019722194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019749958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:48.689" endtime="20201110 08:37:48.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:48.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019722194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019749958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:48.980" endtime="20201110 08:37:48.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:48.989" endtime="20201110 08:37:48.990"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.686" endtime="20201110 08:37:48.991"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.684" endtime="20201110 08:37:48.991"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:48.995" level="INFO">${RESULT} = [{'time': 0.019749958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7764000000003036e-05, 'source_diff': 2.7764000000003036e-05}, {'time': 0.019785958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:48.992" endtime="20201110 08:37:48.996"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:49.009" level="INFO">${ACCURACY} = {'diff': [2.7764000000003036e-05, 2.7722000000000857e-05, 2.7611000000000302e-05, 2.8291999999999207e-05, 2.8000000000000247e-05, 2.8180000000002647e-05, 2.8264000000000067e-05, 2.8514000000000317e-05...</msg>
<status status="PASS" starttime="20201110 08:37:48.996" endtime="20201110 08:37:49.009"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:49.014" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201110 08:37:49.013" endtime="20201110 08:37:49.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:49.016" level="INFO">VALUE: [2.7764000000003036e-05, 2.7722000000000857e-05, 2.7611000000000302e-05, 2.8291999999999207e-05, 2.8000000000000247e-05, 2.8180000000002647e-05, 2.8264000000000067e-05, 2.8514000000000317e-05, 2.7943999999998498e-05, 2.8486000000001177e-05, 2.7792000000002176e-05, 2.7888999999999692e-05, 2.8389000000000192e-05, 2.841699999999933e-05, 2.7985999999997208e-05, 2.791699999999883e-05, 2.8138999999999942e-05, 2.818100000000212e-05, 2.7763999999999567e-05, 2.7861000000000552e-05, 2.7736000000000427e-05, 2.8041999999998957e-05, 2.8097000000001232e-05, 2.8125000000000372e-05, 2.766699999999858e-05, 2.8375000000000622e-05, 2.8097000000001232e-05, 2.822300000000083e-05, 2.8348000000000956e-05, 2.82370000000004e-05, 2.791699999999883e-05, 2.7542000000001926e-05, 2.770900000000076e-05, 2.8041999999998957e-05, 2.8165999999999608e-05, 2.7861000000000552e-05, 2.7875000000000122e-05, 2.8097000000001232e-05, 2.7736000000000427e-05, 2.8375000000000622e-05, 2.8415999999999858e-05, 2.7971999999997638e-05, 2.7526999999999413e-05, 2.8290999999999733e-05, 2.7986000000000677e-05, 2.7736000000000427e-05, 2.8096999999997763e-05, 2.793100000000187e-05, 2.7611000000000302e-05, 2.8334000000001386e-05]</msg>
<status status="PASS" starttime="20201110 08:37:49.015" endtime="20201110 08:37:49.017"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.010" endtime="20201110 08:37:49.018"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:49.020" endtime="20201110 08:37:49.021"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:49.023" endtime="20201110 08:37:49.042"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.022" endtime="20201110 08:37:49.043"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.018" endtime="20201110 08:37:49.044"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.651" endtime="20201110 08:37:49.044"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.650" endtime="20201110 08:37:49.044"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:49.052" endtime="20201110 08:37:49.070"></status>
</kw>
<msg timestamp="20201110 08:37:49.071" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:49.051" endtime="20201110 08:37:49.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:49.073" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:49.072" endtime="20201110 08:37:49.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:49.074" endtime="20201110 08:37:49.077"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.048" endtime="20201110 08:37:49.077"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.046" endtime="20201110 08:37:49.078"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:49.084" endtime="20201110 08:37:49.391"></status>
</kw>
<msg timestamp="20201110 08:37:49.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0195825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019611917, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:37:49.083" endtime="20201110 08:37:49.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:49.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0195825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019611917, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:37:49.395" endtime="20201110 08:37:49.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:49.404" endtime="20201110 08:37:49.406"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.080" endtime="20201110 08:37:49.406"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.078" endtime="20201110 08:37:49.407"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:49.411" level="INFO">${RESULT} = [{'time': 0.019611917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9417000000000332e-05, 'source_diff': 2.9417000000000332e-05}, {'time': 0.019650917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:49.408" endtime="20201110 08:37:49.411"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:49.425" level="INFO">${ACCURACY} = {'diff': [2.9417000000000332e-05, 2.9348000000001956e-05, 2.8985999999998208e-05, 2.8820000000002316e-05, 2.8875000000001122e-05, 2.9055000000000053e-05, 2.9499999999998278e-05, 2.8666000000000108e-05...</msg>
<status status="PASS" starttime="20201110 08:37:49.412" endtime="20201110 08:37:49.426"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:49.430" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201110 08:37:49.429" endtime="20201110 08:37:49.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:49.433" level="INFO">VALUE: [2.9417000000000332e-05, 2.9348000000001956e-05, 2.8985999999998208e-05, 2.8820000000002316e-05, 2.8875000000001122e-05, 2.9055000000000053e-05, 2.9499999999998278e-05, 2.8666000000000108e-05, 2.9430000000000428e-05, 2.9500000000001747e-05, 2.9166000000000608e-05, 2.8818999999999373e-05, 2.9180000000000178e-05, 2.9014000000000817e-05, 2.9000000000001247e-05, 2.8694000000002717e-05, 2.8582999999998693e-05, 2.8888999999997222e-05, 2.8971999999998638e-05, 2.8694000000002717e-05, 2.9041999999999957e-05, 2.9319999999999347e-05, 2.8721999999998388e-05, 2.9096999999998763e-05, 2.9139000000000942e-05, 2.9055999999999527e-05, 2.9055999999999527e-05, 2.8583000000002162e-05, 2.8500000000000747e-05, 2.9235999999998458e-05, 2.8957999999999068e-05, 2.9346999999999013e-05, 2.8624999999997403e-05, 2.9000000000001247e-05, 2.9221999999998888e-05, 2.8848000000001456e-05, 2.94309999999999e-05, 2.9180000000000178e-05, 2.9068999999999623e-05, 2.9124999999997903e-05, 2.9430000000000428e-05, 2.9040999999997014e-05, 2.8693999999999248e-05, 2.9514000000001317e-05, 2.9250000000001497e-05, 2.8527000000000413e-05, 2.9250000000001497e-05, 2.9276999999997694e-05, 2.8540999999999983e-05, 2.9375000000001622e-05]</msg>
<status status="PASS" starttime="20201110 08:37:49.431" endtime="20201110 08:37:49.434"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.426" endtime="20201110 08:37:49.434"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:49.436" endtime="20201110 08:37:49.438"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:49.440" endtime="20201110 08:37:49.459"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.438" endtime="20201110 08:37:49.460"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.435" endtime="20201110 08:37:49.460"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.045" endtime="20201110 08:37:49.461"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.044" endtime="20201110 08:37:49.461"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:49.470" endtime="20201110 08:37:49.488"></status>
</kw>
<msg timestamp="20201110 08:37:49.489" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:49.468" endtime="20201110 08:37:49.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:49.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:49.490" endtime="20201110 08:37:49.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:49.492" endtime="20201110 08:37:49.495"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.466" endtime="20201110 08:37:49.496"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.463" endtime="20201110 08:37:49.496"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:49.503" endtime="20201110 08:37:49.789"></status>
</kw>
<msg timestamp="20201110 08:37:49.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020217986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020248389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:49.501" endtime="20201110 08:37:49.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:49.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020217986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020248389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:49.793" endtime="20201110 08:37:49.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:49.802" endtime="20201110 08:37:49.804"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.498" endtime="20201110 08:37:49.804"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.497" endtime="20201110 08:37:49.805"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:49.809" level="INFO">${RESULT} = [{'time': 0.020248389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0402999999998293e-05, 'source_diff': 3.0402999999998293e-05}, {'time': 0.020289403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:49.806" endtime="20201110 08:37:49.809"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:49.824" level="INFO">${ACCURACY} = {'diff': [3.0402999999998293e-05, 2.9625000000001872e-05, 3.0250000000002497e-05, 2.9735999999998958e-05, 2.998699999999868e-05, 2.972299999999886e-05, 3.0028000000001387e-05, 2.9903000000001262e-05, ...</msg>
<status status="PASS" starttime="20201110 08:37:49.810" endtime="20201110 08:37:49.825"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:49.829" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201110 08:37:49.828" endtime="20201110 08:37:49.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:49.832" level="INFO">VALUE: [3.0402999999998293e-05, 2.9625000000001872e-05, 3.0250000000002497e-05, 2.9735999999998958e-05, 2.998699999999868e-05, 2.972299999999886e-05, 3.0028000000001387e-05, 2.9903000000001262e-05, 2.9611999999998306e-05, 2.9638999999997973e-05, 3.048699999999918e-05, 3.0055000000001053e-05, 3.0360999999999583e-05, 3.0083000000000193e-05, 2.9735999999998958e-05, 3.0235999999999458e-05, 3.0040999999998014e-05, 3.0306000000000777e-05, 2.9596999999999263e-05, 2.9777000000001663e-05, 3.0485999999999708e-05, 2.9735999999998958e-05, 3.042999999999796e-05, 2.9542000000000457e-05, 3.020899999999979e-05, 3.0403000000001762e-05, 2.9819999999999847e-05, 2.9778000000001137e-05, 2.9653000000001012e-05, 3.0153000000001512e-05, 3.0417000000001332e-05, 3.0388999999998723e-05, 3.0374999999999153e-05, 2.9749999999998528e-05, 2.9971999999999638e-05, 3.0249999999999028e-05, 2.9722000000002857e-05, 2.9667000000000582e-05, 2.9875000000002122e-05, 3.0485999999999708e-05, 2.969499999999972e-05, 2.9862000000002026e-05, 2.9944000000000498e-05, 3.0194000000000748e-05, 3.0028000000001387e-05, 2.9805000000000803e-05, 3.0513999999998848e-05, 2.9666000000001108e-05, 2.9763999999998098e-05, 2.9930000000000928e-05]</msg>
<status status="PASS" starttime="20201110 08:37:49.830" endtime="20201110 08:37:49.832"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.825" endtime="20201110 08:37:49.833"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:49.835" endtime="20201110 08:37:49.837"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:49.839" endtime="20201110 08:37:49.858"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.837" endtime="20201110 08:37:49.859"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.834" endtime="20201110 08:37:49.860"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.462" endtime="20201110 08:37:49.860"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.461" endtime="20201110 08:37:49.860"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:49.869" endtime="20201110 08:37:49.885"></status>
</kw>
<msg timestamp="20201110 08:37:49.885" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:49.867" endtime="20201110 08:37:49.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:49.888" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:49.886" endtime="20201110 08:37:49.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:49.889" endtime="20201110 08:37:49.891"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.865" endtime="20201110 08:37:49.892"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.863" endtime="20201110 08:37:49.892"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:49.899" endtime="20201110 08:37:50.204"></status>
</kw>
<msg timestamp="20201110 08:37:50.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020303389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020334028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:49.897" endtime="20201110 08:37:50.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:50.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020303389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020334028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:50.208" endtime="20201110 08:37:50.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:50.216" endtime="20201110 08:37:50.218"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.895" endtime="20201110 08:37:50.218"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.893" endtime="20201110 08:37:50.219"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:50.223" level="INFO">${RESULT} = [{'time': 0.020334028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.063899999999897e-05, 'source_diff': 3.063899999999897e-05}, {'time': 0.020373028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:50.220" endtime="20201110 08:37:50.223"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:50.237" level="INFO">${ACCURACY} = {'diff': [3.063899999999897e-05, 3.068100000000115e-05, 3.093099999999793e-05, 3.127799999999917e-05, 3.14310000000019e-05, 3.143099999999843e-05, 3.136100000000058e-05, 3.091599999999889e-05, 3.12780...</msg>
<status status="PASS" starttime="20201110 08:37:50.224" endtime="20201110 08:37:50.237"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:50.241" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201110 08:37:50.240" endtime="20201110 08:37:50.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:50.244" level="INFO">VALUE: [3.063899999999897e-05, 3.068100000000115e-05, 3.093099999999793e-05, 3.127799999999917e-05, 3.14310000000019e-05, 3.143099999999843e-05, 3.136100000000058e-05, 3.091599999999889e-05, 3.127800000000264e-05, 3.117999999999871e-05, 3.097300000000011e-05, 3.056900000000112e-05, 3.151399999999985e-05, 3.0500000000002747e-05, 3.068000000000168e-05, 3.076400000000257e-05, 3.069400000000125e-05, 3.09440000000015e-05, 3.147200000000114e-05, 3.136100000000058e-05, 3.136100000000058e-05, 3.097200000000064e-05, 3.151399999999985e-05, 3.087499999999965e-05, 3.113899999999947e-05, 3.097200000000064e-05, 3.137500000000015e-05, 3.144500000000147e-05, 3.065300000000201e-05, 3.080600000000128e-05, 3.069500000000072e-05, 3.072200000000039e-05, 3.099999999999978e-05, 3.072200000000039e-05, 3.058300000000069e-05, 3.140300000000276e-05, 3.129200000000221e-05, 3.143000000000243e-05, 3.120900000000079e-05, 3.108400000000067e-05, 3.074999999999953e-05, 3.0513999999998848e-05, 3.061099999999983e-05, 3.066699999999811e-05, 3.125000000000003e-05, 3.142999999999896e-05, 3.1346999999997543e-05, 3.0513999999998848e-05, 3.115199999999957e-05, 3.1054999999998584e-05]</msg>
<status status="PASS" starttime="20201110 08:37:50.242" endtime="20201110 08:37:50.245"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.238" endtime="20201110 08:37:50.245"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:50.247" endtime="20201110 08:37:50.249"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:50.251" endtime="20201110 08:37:50.270"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.249" endtime="20201110 08:37:50.271"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.246" endtime="20201110 08:37:50.271"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.861" endtime="20201110 08:37:50.271"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.860" endtime="20201110 08:37:50.272"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:50.283" endtime="20201110 08:37:50.302"></status>
</kw>
<msg timestamp="20201110 08:37:50.302" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:50.280" endtime="20201110 08:37:50.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:50.305" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:50.303" endtime="20201110 08:37:50.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:50.306" endtime="20201110 08:37:50.311"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.276" endtime="20201110 08:37:50.312"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.274" endtime="20201110 08:37:50.313"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:50.321" endtime="20201110 08:37:50.606"></status>
</kw>
<msg timestamp="20201110 08:37:50.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022818847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022851319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:50.319" endtime="20201110 08:37:50.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:50.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022818847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022851319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:50.610" endtime="20201110 08:37:50.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:50.619" endtime="20201110 08:37:50.621"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.315" endtime="20201110 08:37:50.621"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.313" endtime="20201110 08:37:50.622"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:50.626" level="INFO">${RESULT} = [{'time': 0.022851319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.247199999999867e-05, 'source_diff': 3.247199999999867e-05}, {'time': 0.022892333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:50.622" endtime="20201110 08:37:50.626"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:50.639" level="INFO">${ACCURACY} = {'diff': [3.247199999999867e-05, 3.250000000000128e-05, 3.173600000000096e-05, 3.1790999999999764e-05, 3.186100000000108e-05, 3.250000000000128e-05, 3.166599999999964e-05, 3.198600000000121e-05, 3.197...</msg>
<status status="PASS" starttime="20201110 08:37:50.627" endtime="20201110 08:37:50.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:50.644" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201110 08:37:50.643" endtime="20201110 08:37:50.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:50.646" level="INFO">VALUE: [3.247199999999867e-05, 3.250000000000128e-05, 3.173600000000096e-05, 3.1790999999999764e-05, 3.186100000000108e-05, 3.250000000000128e-05, 3.166599999999964e-05, 3.198600000000121e-05, 3.197200000000164e-05, 3.200000000000078e-05, 3.17640000000001e-05, 3.161100000000083e-05, 3.218099999999918e-05, 3.154199999999899e-05, 3.155600000000203e-05, 3.209700000000176e-05, 3.190300000000326e-05, 3.180600000000228e-05, 3.154199999999899e-05, 3.222199999999842e-05, 3.227800000000017e-05, 3.230600000000278e-05, 3.190299999999979e-05, 3.191699999999936e-05, 3.179199999999924e-05, 3.223599999999799e-05, 3.204199999999949e-05, 3.2374999999997683e-05, 3.169400000000225e-05, 3.2362000000001057e-05, 3.236199999999759e-05, 3.19440000000025e-05, 3.169400000000225e-05, 3.166599999999964e-05, 3.225000000000103e-05, 3.225000000000103e-05, 3.225000000000103e-05, 3.1568999999998654e-05, 3.186100000000108e-05, 3.173600000000096e-05, 3.240300000000029e-05, 3.184700000000151e-05, 3.17640000000001e-05, 3.231999999999888e-05, 3.187499999999718e-05, 3.216699999999961e-05, 3.2360999999998113e-05, 3.229199999999974e-05, 3.197199999999817e-05, 3.206999999999863e-05]</msg>
<status status="PASS" starttime="20201110 08:37:50.645" endtime="20201110 08:37:50.647"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.640" endtime="20201110 08:37:50.648"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:50.650" endtime="20201110 08:37:50.651"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:50.653" endtime="20201110 08:37:50.673"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.652" endtime="20201110 08:37:50.673"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.648" endtime="20201110 08:37:50.674"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.272" endtime="20201110 08:37:50.674"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.272" endtime="20201110 08:37:50.674"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:50.683" endtime="20201110 08:37:50.700"></status>
</kw>
<msg timestamp="20201110 08:37:50.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:50.681" endtime="20201110 08:37:50.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:50.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:50.702" endtime="20201110 08:37:50.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:50.704" endtime="20201110 08:37:50.707"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.678" endtime="20201110 08:37:50.707"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.676" endtime="20201110 08:37:50.708"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:50.714" endtime="20201110 08:37:51.001"></status>
</kw>
<msg timestamp="20201110 08:37:51.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019616764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019649792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:50.713" endtime="20201110 08:37:51.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:51.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019616764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019649792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:51.005" endtime="20201110 08:37:51.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.013" endtime="20201110 08:37:51.015"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.710" endtime="20201110 08:37:51.016"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.708" endtime="20201110 08:37:51.016"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:51.020" level="INFO">${RESULT} = [{'time': 0.019649792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.302800000000092e-05, 'source_diff': 3.302800000000092e-05}, {'time': 0.019691792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:51.017" endtime="20201110 08:37:51.020"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:51.034" level="INFO">${ACCURACY} = {'diff': [3.302800000000092e-05, 3.2610999999998364e-05, 3.3332999999999974e-05, 3.324999999999856e-05, 3.3360999999999114e-05, 3.316700000000061e-05, 3.275000000000153e-05, 3.273599999999849e-05, 3.2...</msg>
<status status="PASS" starttime="20201110 08:37:51.021" endtime="20201110 08:37:51.034"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:51.038" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201110 08:37:51.037" endtime="20201110 08:37:51.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:51.041" level="INFO">VALUE: [3.302800000000092e-05, 3.2610999999998364e-05, 3.3332999999999974e-05, 3.324999999999856e-05, 3.3360999999999114e-05, 3.316700000000061e-05, 3.275000000000153e-05, 3.273599999999849e-05, 3.266700000000011e-05, 3.298599999999874e-05, 3.3360999999999114e-05, 3.322199999999942e-05, 3.268000000000021e-05, 3.318000000000071e-05, 3.2568999999999654e-05, 3.3040999999997545e-05, 3.274999999999806e-05, 3.290299999999732e-05, 3.268000000000021e-05, 3.3124999999998433e-05, 3.298599999999874e-05, 3.290300000000079e-05, 3.297199999999917e-05, 3.29449999999995e-05, 3.302800000000092e-05, 3.3360999999999114e-05, 3.341700000000086e-05, 3.295899999999907e-05, 3.340299999999782e-05, 3.327800000000117e-05, 3.275000000000153e-05, 3.305600000000006e-05, 3.311100000000233e-05, 3.319400000000028e-05, 3.330600000000031e-05, 3.329200000000074e-05, 3.247300000000161e-05, 3.288900000000122e-05, 3.297299999999864e-05, 3.255599999999956e-05, 3.324999999999856e-05, 3.276399999999763e-05, 3.341599999999792e-05, 3.2527000000000944e-05, 3.3318999999996934e-05, 3.297199999999917e-05, 3.2805000000000334e-05, 3.337500000000215e-05, 3.266700000000011e-05, 3.293000000000046e-05]</msg>
<status status="PASS" starttime="20201110 08:37:51.039" endtime="20201110 08:37:51.059"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.035" endtime="20201110 08:37:51.059"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.062" endtime="20201110 08:37:51.063"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:51.065" endtime="20201110 08:37:51.084"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.064" endtime="20201110 08:37:51.085"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.060" endtime="20201110 08:37:51.085"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.675" endtime="20201110 08:37:51.086"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.674" endtime="20201110 08:37:51.086"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.094" endtime="20201110 08:37:51.112"></status>
</kw>
<msg timestamp="20201110 08:37:51.112" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:51.093" endtime="20201110 08:37:51.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:51.115" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:51.113" endtime="20201110 08:37:51.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.116" endtime="20201110 08:37:51.118"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.090" endtime="20201110 08:37:51.119"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.088" endtime="20201110 08:37:51.119"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.126" endtime="20201110 08:37:51.412"></status>
</kw>
<msg timestamp="20201110 08:37:51.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019531917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019565833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:51.124" endtime="20201110 08:37:51.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:51.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019531917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019565833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:51.416" endtime="20201110 08:37:51.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.425" endtime="20201110 08:37:51.426"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.122" endtime="20201110 08:37:51.427"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.120" endtime="20201110 08:37:51.427"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:51.431" level="INFO">${RESULT} = [{'time': 0.019565833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.391600000000189e-05, 'source_diff': 3.391600000000189e-05}, {'time': 0.019608833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:51.428" endtime="20201110 08:37:51.432"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:51.446" level="INFO">${ACCURACY} = {'diff': [3.391600000000189e-05, 3.422200000000042e-05, 3.4290999999998795e-05, 3.394400000000103e-05, 3.4096999999996824e-05, 3.445799999999763e-05, 3.372199999999992e-05, 3.3860999999999614e-05, 3.4...</msg>
<status status="PASS" starttime="20201110 08:37:51.432" endtime="20201110 08:37:51.446"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:51.451" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201110 08:37:51.450" endtime="20201110 08:37:51.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:51.453" level="INFO">VALUE: [3.391600000000189e-05, 3.422200000000042e-05, 3.4290999999998795e-05, 3.394400000000103e-05, 3.4096999999996824e-05, 3.445799999999763e-05, 3.372199999999992e-05, 3.3860999999999614e-05, 3.4347000000000544e-05, 3.4402999999998823e-05, 3.429199999999827e-05, 3.423599999999999e-05, 3.386100000000308e-05, 3.388900000000222e-05, 3.441699999999839e-05, 3.441700000000186e-05, 3.405600000000106e-05, 3.3888999999998753e-05, 3.415300000000204e-05, 3.399999999999931e-05, 3.399999999999931e-05, 3.416699999999814e-05, 3.4374999999999684e-05, 3.379200000000124e-05, 3.400000000000278e-05, 3.445900000000057e-05, 3.4069000000001154e-05, 3.373599999999949e-05, 3.422200000000042e-05, 3.4041000000002014e-05, 3.3833000000000474e-05, 3.4110999999999864e-05, 3.363900000000197e-05, 3.352799999999795e-05, 3.4138999999999003e-05, 3.419400000000128e-05, 3.3804999999997865e-05, 3.374999999999906e-05, 3.3610999999999364e-05, 3.3583000000000224e-05, 3.391699999999789e-05, 3.429200000000174e-05, 3.398699999999921e-05, 3.377800000000167e-05, 3.4374999999999684e-05, 3.391699999999789e-05, 3.380600000000081e-05, 3.352800000000142e-05, 3.366699999999764e-05, 3.4291000000002264e-05]</msg>
<status status="PASS" starttime="20201110 08:37:51.452" endtime="20201110 08:37:51.454"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.447" endtime="20201110 08:37:51.454"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.457" endtime="20201110 08:37:51.458"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:51.460" endtime="20201110 08:37:51.479"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.459" endtime="20201110 08:37:51.480"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.455" endtime="20201110 08:37:51.480"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.087" endtime="20201110 08:37:51.481"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.086" endtime="20201110 08:37:51.481"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.489" endtime="20201110 08:37:51.507"></status>
</kw>
<msg timestamp="20201110 08:37:51.508" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:51.488" endtime="20201110 08:37:51.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:51.510" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:51.509" endtime="20201110 08:37:51.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.511" endtime="20201110 08:37:51.514"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.485" endtime="20201110 08:37:51.514"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.483" endtime="20201110 08:37:51.515"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.521" endtime="20201110 08:37:51.808"></status>
</kw>
<msg timestamp="20201110 08:37:51.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019495764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01953075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:51.519" endtime="20201110 08:37:51.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:51.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019495764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01953075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:51.812" endtime="20201110 08:37:51.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.821" endtime="20201110 08:37:51.822"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.517" endtime="20201110 08:37:51.823"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.515" endtime="20201110 08:37:51.823"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:51.827" level="INFO">${RESULT} = [{'time': 0.01953075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.498600000000074e-05, 'source_diff': 3.498600000000074e-05}, {'time': 0.019575722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:37:51.824" endtime="20201110 08:37:51.828"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:51.841" level="INFO">${ACCURACY} = {'diff': [3.498600000000074e-05, 3.5375000000000684e-05, 3.519400000000228e-05, 3.542999999999949e-05, 3.4638999999999504e-05, 3.475000000000006e-05, 3.49580000000016e-05, 3.516599999999967e-05, 3.504...</msg>
<status status="PASS" starttime="20201110 08:37:51.828" endtime="20201110 08:37:51.841"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:51.846" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201110 08:37:51.845" endtime="20201110 08:37:51.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:51.848" level="INFO">VALUE: [3.498600000000074e-05, 3.5375000000000684e-05, 3.519400000000228e-05, 3.542999999999949e-05, 3.4638999999999504e-05, 3.475000000000006e-05, 3.49580000000016e-05, 3.516599999999967e-05, 3.504199999999902e-05, 3.455600000000156e-05, 3.5318999999998935e-05, 3.476399999999963e-05, 3.493100000000193e-05, 3.5026999999999975e-05, 3.481999999999791e-05, 3.5166999999999143e-05, 3.543099999999896e-05, 3.477800000000267e-05, 3.4638999999999504e-05, 3.4832999999998004e-05, 3.533399999999798e-05, 3.493100000000193e-05, 3.551399999999691e-05, 3.548600000000124e-05, 3.492999999999899e-05, 3.516599999999967e-05, 3.493100000000193e-05, 3.4790999999999295e-05, 3.500000000000031e-05, 3.5361000000001114e-05, 3.495799999999813e-05, 3.5055000000002584e-05, 3.4861000000000614e-05, 3.4597000000000794e-05, 3.5304999999999365e-05, 3.518099999999871e-05, 3.5096999999997824e-05, 3.522200000000142e-05, 3.516700000000261e-05, 3.4861000000000614e-05, 3.469399999999831e-05, 3.5375000000000684e-05, 3.550000000000081e-05, 3.5125000000000434e-05, 3.548599999999777e-05, 3.548600000000124e-05, 3.5332999999998504e-05, 3.47779999999992e-05, 3.5152999999999573e-05, 3.469499999999778e-05]</msg>
<status status="PASS" starttime="20201110 08:37:51.847" endtime="20201110 08:37:51.849"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.842" endtime="20201110 08:37:51.849"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.852" endtime="20201110 08:37:51.853"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:51.855" endtime="20201110 08:37:51.874"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.854" endtime="20201110 08:37:51.875"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.850" endtime="20201110 08:37:51.875"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.482" endtime="20201110 08:37:51.876"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.481" endtime="20201110 08:37:51.876"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.884" endtime="20201110 08:37:51.902"></status>
</kw>
<msg timestamp="20201110 08:37:51.903" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:51.883" endtime="20201110 08:37:51.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:51.905" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:51.904" endtime="20201110 08:37:51.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.906" endtime="20201110 08:37:51.909"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.880" endtime="20201110 08:37:51.909"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.878" endtime="20201110 08:37:51.910"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.916" endtime="20201110 08:37:52.203"></status>
</kw>
<msg timestamp="20201110 08:37:52.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019614444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019650611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:51.915" endtime="20201110 08:37:52.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:52.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019614444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019650611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:52.207" endtime="20201110 08:37:52.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:52.215" endtime="20201110 08:37:52.217"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.912" endtime="20201110 08:37:52.217"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.910" endtime="20201110 08:37:52.218"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:52.222" level="INFO">${RESULT} = [{'time': 0.019650611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6166999999996674e-05, 'source_diff': 3.6166999999996674e-05}, {'time': 0.019697597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:52.219" endtime="20201110 08:37:52.222"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:52.236" level="INFO">${ACCURACY} = {'diff': [3.6166999999996674e-05, 3.591600000000042e-05, 3.6110999999998394e-05, 3.620799999999938e-05, 3.5653000000000074e-05, 3.622200000000242e-05, 3.630599999999984e-05, 3.606999999999916e-05, 3.5...</msg>
<status status="PASS" starttime="20201110 08:37:52.223" endtime="20201110 08:37:52.236"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:52.240" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201110 08:37:52.239" endtime="20201110 08:37:52.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:52.243" level="INFO">VALUE: [3.6166999999996674e-05, 3.591600000000042e-05, 3.6110999999998394e-05, 3.620799999999938e-05, 3.5653000000000074e-05, 3.622200000000242e-05, 3.630599999999984e-05, 3.606999999999916e-05, 3.573599999999802e-05, 3.597200000000217e-05, 3.630600000000331e-05, 3.605600000000306e-05, 3.575000000000106e-05, 3.629200000000027e-05, 3.631999999999941e-05, 3.580599999999934e-05, 3.569499999999878e-05, 3.580600000000281e-05, 3.601400000000088e-05, 3.6374999999998214e-05, 3.586200000000109e-05, 3.604200000000002e-05, 3.5791000000000295e-05, 3.572200000000192e-05, 3.598599999999827e-05, 3.581999999999891e-05, 3.6291000000000795e-05, 3.6124999999997964e-05, 3.5790999999996825e-05, 3.5541000000000045e-05, 3.6055000000000115e-05, 3.575000000000106e-05, 3.62780000000007e-05, 3.648599999999877e-05, 3.55979999999978e-05, 3.600000000000131e-05, 3.593100000000293e-05, 3.5666999999999643e-05, 3.6360999999998644e-05, 3.6180999999999713e-05, 3.629200000000027e-05, 3.629200000000027e-05, 3.552799999999995e-05, 3.580599999999934e-05, 3.620899999999885e-05, 3.62780000000007e-05, 3.6124999999997964e-05, 3.630599999999984e-05, 3.572300000000139e-05, 3.561200000000084e-05]</msg>
<status status="PASS" starttime="20201110 08:37:52.241" endtime="20201110 08:37:52.244"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.237" endtime="20201110 08:37:52.244"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:52.246" endtime="20201110 08:37:52.248"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:52.250" endtime="20201110 08:37:52.269"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.248" endtime="20201110 08:37:52.270"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.245" endtime="20201110 08:37:52.270"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.877" endtime="20201110 08:37:52.270"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.876" endtime="20201110 08:37:52.271"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:52.279" endtime="20201110 08:37:52.296"></status>
</kw>
<msg timestamp="20201110 08:37:52.297" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:52.278" endtime="20201110 08:37:52.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:52.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:52.298" endtime="20201110 08:37:52.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:52.300" endtime="20201110 08:37:52.303"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.275" endtime="20201110 08:37:52.303"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.273" endtime="20201110 08:37:52.304"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:52.310" endtime="20201110 08:37:52.596"></status>
</kw>
<msg timestamp="20201110 08:37:52.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019612917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019649583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:52.309" endtime="20201110 08:37:52.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:52.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019612917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019649583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:52.600" endtime="20201110 08:37:52.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:52.609" endtime="20201110 08:37:52.610"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.306" endtime="20201110 08:37:52.611"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.304" endtime="20201110 08:37:52.611"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:52.615" level="INFO">${RESULT} = [{'time': 0.019649583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.666600000000117e-05, 'source_diff': 3.666600000000117e-05}, {'time': 0.019695597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:52.612" endtime="20201110 08:37:52.616"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:52.629" level="INFO">${ACCURACY} = {'diff': [3.666600000000117e-05, 3.717999999999777e-05, 3.7153000000001574e-05, 3.676400000000163e-05, 3.7360999999999644e-05, 3.6653000000001074e-05, 3.747199999999673e-05, 3.6625000000001934e-05, 3....</msg>
<status status="PASS" starttime="20201110 08:37:52.616" endtime="20201110 08:37:52.629"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:52.634" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201110 08:37:52.633" endtime="20201110 08:37:52.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:52.636" level="INFO">VALUE: [3.666600000000117e-05, 3.717999999999777e-05, 3.7153000000001574e-05, 3.676400000000163e-05, 3.7360999999999644e-05, 3.6653000000001074e-05, 3.747199999999673e-05, 3.6625000000001934e-05, 3.7096999999999825e-05, 3.736199999999912e-05, 3.72780000000017e-05, 3.732000000000041e-05, 3.72780000000017e-05, 3.6903000000001324e-05, 3.672199999999945e-05, 3.655600000000009e-05, 3.7431000000000964e-05, 3.7417000000001394e-05, 3.734799999999955e-05, 3.676399999999816e-05, 3.7124999999998964e-05, 3.65979999999988e-05, 3.716600000000167e-05, 3.658399999999923e-05, 3.7304999999997895e-05, 3.7083000000000255e-05, 3.7041000000001545e-05, 3.6653000000001074e-05, 3.6888999999998284e-05, 3.701400000000188e-05, 3.751399999999891e-05, 3.694400000000056e-05, 3.6903000000001324e-05, 3.7181000000000713e-05, 3.7166999999997674e-05, 3.720800000000038e-05, 3.7360999999999644e-05, 3.7111000000002864e-05, 3.6582999999999755e-05, 3.705599999999712e-05, 3.749999999999934e-05, 3.6861000000002614e-05, 3.7360999999999644e-05, 3.723599999999952e-05, 3.6667000000000644e-05, 3.748699999999924e-05, 3.7055000000001115e-05, 3.654200000000052e-05, 3.675000000000206e-05, 3.713799999999906e-05]</msg>
<status status="PASS" starttime="20201110 08:37:52.635" endtime="20201110 08:37:52.637"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.630" endtime="20201110 08:37:52.637"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:52.640" endtime="20201110 08:37:52.641"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:52.643" endtime="20201110 08:37:52.662"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.642" endtime="20201110 08:37:52.663"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.638" endtime="20201110 08:37:52.663"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.271" endtime="20201110 08:37:52.664"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.271" endtime="20201110 08:37:52.664"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:52.672" endtime="20201110 08:37:52.690"></status>
</kw>
<msg timestamp="20201110 08:37:52.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:52.671" endtime="20201110 08:37:52.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:52.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:52.692" endtime="20201110 08:37:52.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:52.694" endtime="20201110 08:37:52.697"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.668" endtime="20201110 08:37:52.697"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.666" endtime="20201110 08:37:52.698"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:52.704" endtime="20201110 08:37:52.990"></status>
</kw>
<msg timestamp="20201110 08:37:52.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019608611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019646486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:52.703" endtime="20201110 08:37:52.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:53.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019608611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019646486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:52.994" endtime="20201110 08:37:53.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:53.003" endtime="20201110 08:37:53.005"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.700" endtime="20201110 08:37:53.005"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.698" endtime="20201110 08:37:53.005"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:53.010" level="INFO">${RESULT} = [{'time': 0.019646486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7874999999999714e-05, 'source_diff': 3.7874999999999714e-05}, {'time': 0.019692458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:53.006" endtime="20201110 08:37:53.010"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:53.024" level="INFO">${ACCURACY} = {'diff': [3.7874999999999714e-05, 3.769399999999784e-05, 3.7791000000002295e-05, 3.8459000000001103e-05, 3.822200000000095e-05, 3.777799999999873e-05, 3.792999999999852e-05, 3.754199999999805e-05, 3.8...</msg>
<status status="PASS" starttime="20201110 08:37:53.010" endtime="20201110 08:37:53.025"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:53.029" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201110 08:37:53.028" endtime="20201110 08:37:53.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:53.031" level="INFO">VALUE: [3.7874999999999714e-05, 3.769399999999784e-05, 3.7791000000002295e-05, 3.8459000000001103e-05, 3.822200000000095e-05, 3.777799999999873e-05, 3.792999999999852e-05, 3.754199999999805e-05, 3.8166999999998674e-05, 3.8111000000000395e-05, 3.8194999999997814e-05, 3.8097000000000825e-05, 3.7597000000000325e-05, 3.758400000000023e-05, 3.7610999999999895e-05, 3.822200000000095e-05, 3.780600000000134e-05, 3.7681000000001214e-05, 3.8430999999998494e-05, 3.784800000000005e-05, 3.773700000000296e-05, 3.7917000000001894e-05, 3.7916999999998424e-05, 3.7832999999997535e-05, 3.8139000000003004e-05, 3.791599999999895e-05, 3.8097000000000825e-05, 3.8375000000000214e-05, 3.826399999999966e-05, 3.798600000000027e-05, 3.8082999999997785e-05, 3.7888999999999284e-05, 3.847199999999773e-05, 3.772199999999698e-05, 3.751399999999891e-05, 3.8347000000001075e-05, 3.8416999999998924e-05, 3.830600000000184e-05, 3.823699999999999e-05, 3.772200000000045e-05, 3.7861000000000145e-05, 3.8195000000001283e-05, 3.799999999999984e-05, 3.755600000000109e-05, 3.847199999999773e-05, 3.825000000000009e-05, 3.754200000000152e-05, 3.784800000000005e-05, 3.850000000000034e-05, 3.7610999999999895e-05]</msg>
<status status="PASS" starttime="20201110 08:37:53.030" endtime="20201110 08:37:53.032"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.025" endtime="20201110 08:37:53.033"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:53.035" endtime="20201110 08:37:53.036"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:53.038" endtime="20201110 08:37:53.058"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.037" endtime="20201110 08:37:53.058"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.033" endtime="20201110 08:37:53.059"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.665" endtime="20201110 08:37:53.059"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.664" endtime="20201110 08:37:53.059"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:53.068" endtime="20201110 08:37:53.085"></status>
</kw>
<msg timestamp="20201110 08:37:53.086" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:53.066" endtime="20201110 08:37:53.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:53.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:53.087" endtime="20201110 08:37:53.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:53.089" endtime="20201110 08:37:53.092"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.064" endtime="20201110 08:37:53.093"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.062" endtime="20201110 08:37:53.093"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:53.099" endtime="20201110 08:37:53.385"></status>
</kw>
<msg timestamp="20201110 08:37:53.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019776528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019815319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:53.098" endtime="20201110 08:37:53.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:53.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019776528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019815319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:53.389" endtime="20201110 08:37:53.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:53.397" endtime="20201110 08:37:53.399"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.095" endtime="20201110 08:37:53.400"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.094" endtime="20201110 08:37:53.400"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:53.404" level="INFO">${RESULT} = [{'time': 0.019815319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8790999999999826e-05, 'source_diff': 3.8790999999999826e-05}, {'time': 0.019865319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:53.401" endtime="20201110 08:37:53.404"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:53.418" level="INFO">${ACCURACY} = {'diff': [3.8790999999999826e-05, 3.8846999999998105e-05, 3.8889000000000284e-05, 3.876400000000016e-05, 3.941600000000045e-05, 3.8611000000000895e-05, 3.895800000000213e-05, 3.902799999999998e-05, 3....</msg>
<status status="PASS" starttime="20201110 08:37:53.405" endtime="20201110 08:37:53.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:53.422" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201110 08:37:53.421" endtime="20201110 08:37:53.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:53.425" level="INFO">VALUE: [3.8790999999999826e-05, 3.8846999999998105e-05, 3.8889000000000284e-05, 3.876400000000016e-05, 3.941600000000045e-05, 3.8611000000000895e-05, 3.895800000000213e-05, 3.902799999999998e-05, 3.8902999999999854e-05, 3.949999999999787e-05, 3.8916999999999424e-05, 3.8861000000001145e-05, 3.873600000000102e-05, 3.8666999999999174e-05, 3.8694999999998314e-05, 3.950000000000134e-05, 3.9347000000002075e-05, 3.901400000000041e-05, 3.854199999999905e-05, 3.8889000000000284e-05, 3.8667000000002644e-05, 3.880599999999887e-05, 3.8624999999996995e-05, 3.91660000000002e-05, 3.925000000000109e-05, 3.902799999999998e-05, 3.875000000000059e-05, 3.9304999999999896e-05, 3.9054999999999646e-05, 3.8611000000000895e-05, 3.8568999999998715e-05, 3.923600000000152e-05, 3.8804999999999396e-05, 3.9374999999997745e-05, 3.873600000000102e-05, 3.922199999999848e-05, 3.873600000000102e-05, 3.944399999999959e-05, 3.870799999999841e-05, 3.925000000000109e-05, 3.8667000000002644e-05, 3.873600000000102e-05, 3.8597000000001325e-05, 3.9430999999999494e-05, 3.9347000000002075e-05, 3.934799999999808e-05, 3.9430999999999494e-05, 3.905600000000259e-05, 3.9445000000002534e-05, 3.8680999999998744e-05]</msg>
<status status="PASS" starttime="20201110 08:37:53.423" endtime="20201110 08:37:53.426"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.419" endtime="20201110 08:37:53.426"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:53.428" endtime="20201110 08:37:53.430"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:53.432" endtime="20201110 08:37:53.451"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.430" endtime="20201110 08:37:53.452"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.427" endtime="20201110 08:37:53.452"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.060" endtime="20201110 08:37:53.453"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.059" endtime="20201110 08:37:53.453"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:53.461" endtime="20201110 08:37:53.480"></status>
</kw>
<msg timestamp="20201110 08:37:53.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:53.460" endtime="20201110 08:37:53.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:53.483" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:53.481" endtime="20201110 08:37:53.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:53.484" endtime="20201110 08:37:53.486"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.457" endtime="20201110 08:37:53.487"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.455" endtime="20201110 08:37:53.487"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:53.494" endtime="20201110 08:37:53.780"></status>
</kw>
<msg timestamp="20201110 08:37:53.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019665806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019705389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:53.492" endtime="20201110 08:37:53.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:53.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019665806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019705389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:53.784" endtime="20201110 08:37:53.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:53.793" endtime="20201110 08:37:53.794"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.489" endtime="20201110 08:37:53.795"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.488" endtime="20201110 08:37:53.795"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:53.799" level="INFO">${RESULT} = [{'time': 0.019705389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9582999999999285e-05, 'source_diff': 3.9582999999999285e-05}, {'time': 0.019755403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:53.796" endtime="20201110 08:37:53.799"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:53.813" level="INFO">${ACCURACY} = {'diff': [3.9582999999999285e-05, 4.0181000000000244e-05, 4.0360999999999175e-05, 4.0403000000001354e-05, 3.9624999999997995e-05, 3.9917000000000424e-05, 4.0167000000000674e-05, 4.045800000000016e-05,...</msg>
<status status="PASS" starttime="20201110 08:37:53.800" endtime="20201110 08:37:53.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:53.817" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201110 08:37:53.816" endtime="20201110 08:37:53.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:53.820" level="INFO">VALUE: [3.9582999999999285e-05, 4.0181000000000244e-05, 4.0360999999999175e-05, 4.0403000000001354e-05, 3.9624999999997995e-05, 3.9917000000000424e-05, 4.0167000000000674e-05, 4.045800000000016e-05, 3.9653000000000604e-05, 3.9625000000001465e-05, 3.9790999999997356e-05, 3.997199999999923e-05, 3.9723000000001923e-05, 3.9846999999999105e-05, 4.0360999999999175e-05, 4.043000000000102e-05, 3.9861000000002145e-05, 3.993000000000052e-05, 3.9541000000000576e-05, 3.9555000000000146e-05, 3.9541000000000576e-05, 4.047199999999973e-05, 3.9889000000001285e-05, 3.97920000000003e-05, 3.9625000000001465e-05, 3.9945000000003034e-05, 4.023599999999905e-05, 4.0110999999998925e-05, 3.97920000000003e-05, 4.0153000000001104e-05, 4.0374999999998745e-05, 3.9667000000000174e-05, 4.006999999999969e-05, 3.9568999999999716e-05, 3.999999999999837e-05, 4.02920000000008e-05, 4.0526999999998536e-05, 3.9861000000002145e-05, 3.991600000000095e-05, 4.002799999999751e-05, 4.041599999999798e-05, 4.023599999999905e-05, 4.041600000000145e-05, 3.992999999999705e-05, 3.99859999999988e-05, 4.019400000000034e-05, 4.023599999999905e-05, 4.0096999999999355e-05, 3.991599999999748e-05, 4.047199999999973e-05]</msg>
<status status="PASS" starttime="20201110 08:37:53.818" endtime="20201110 08:37:53.821"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.814" endtime="20201110 08:37:53.821"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:53.824" endtime="20201110 08:37:53.825"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:53.827" endtime="20201110 08:37:53.846"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.825" endtime="20201110 08:37:53.847"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.822" endtime="20201110 08:37:53.847"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.454" endtime="20201110 08:37:53.847"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.453" endtime="20201110 08:37:53.848"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:53.856" endtime="20201110 08:37:53.874"></status>
</kw>
<msg timestamp="20201110 08:37:53.874" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:53.855" endtime="20201110 08:37:53.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:53.876" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:53.875" endtime="20201110 08:37:53.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:53.877" endtime="20201110 08:37:53.880"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.852" endtime="20201110 08:37:53.881"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.850" endtime="20201110 08:37:53.881"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:53.887" endtime="20201110 08:37:54.173"></status>
</kw>
<msg timestamp="20201110 08:37:54.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019534611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019575236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:53.886" endtime="20201110 08:37:54.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:54.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019534611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019575236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:54.177" endtime="20201110 08:37:54.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:54.186" endtime="20201110 08:37:54.187"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.883" endtime="20201110 08:37:54.188"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.882" endtime="20201110 08:37:54.188"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:54.193" level="INFO">${RESULT} = [{'time': 0.019575236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0624999999998995e-05, 'source_diff': 4.0624999999998995e-05}, {'time': 0.019625236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:54.189" endtime="20201110 08:37:54.193"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:54.207" level="INFO">${ACCURACY} = {'diff': [4.0624999999998995e-05, 4.1097000000000355e-05, 4.101399999999894e-05, 4.1416999999998455e-05, 4.07920000000013e-05, 4.0681000000000744e-05, 4.13059999999979e-05, 4.052800000000148e-05, 4.11...</msg>
<status status="PASS" starttime="20201110 08:37:54.194" endtime="20201110 08:37:54.207"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:54.211" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201110 08:37:54.210" endtime="20201110 08:37:54.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:54.214" level="INFO">VALUE: [4.0624999999998995e-05, 4.1097000000000355e-05, 4.101399999999894e-05, 4.1416999999998455e-05, 4.07920000000013e-05, 4.0681000000000744e-05, 4.13059999999979e-05, 4.052800000000148e-05, 4.1110999999999925e-05, 4.104200000000155e-05, 4.0681000000000744e-05, 4.0736999999999024e-05, 4.127799999999876e-05, 4.104199999999808e-05, 4.0833000000000536e-05, 4.057000000000019e-05, 4.1195000000000814e-05, 4.07920000000013e-05, 4.084799999999958e-05, 4.141600000000245e-05, 4.1374999999999745e-05, 4.065199999999866e-05, 4.1125000000002965e-05, 4.142999999999855e-05, 4.127800000000223e-05, 4.069400000000084e-05, 4.094399999999762e-05, 4.07920000000013e-05, 4.09859999999998e-05, 4.0555000000001146e-05, 4.130600000000137e-05, 4.052800000000148e-05, 4.0874999999999245e-05, 4.1403000000002355e-05, 4.124999999999962e-05, 4.145800000000116e-05, 4.1138999999999065e-05, 4.0736999999999024e-05, 4.104199999999808e-05, 4.102800000000198e-05, 4.094399999999762e-05, 4.084799999999958e-05, 4.0986999999999274e-05, 4.1318999999997996e-05, 4.095800000000066e-05, 4.145800000000116e-05, 4.097200000000023e-05, 4.0818999999997496e-05, 4.1167000000001674e-05, 4.0860999999999675e-05]</msg>
<status status="PASS" starttime="20201110 08:37:54.212" endtime="20201110 08:37:54.215"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.208" endtime="20201110 08:37:54.215"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:54.217" endtime="20201110 08:37:54.219"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:54.221" endtime="20201110 08:37:54.240"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.219" endtime="20201110 08:37:54.241"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.216" endtime="20201110 08:37:54.241"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.849" endtime="20201110 08:37:54.241"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.848" endtime="20201110 08:37:54.242"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:54.250" endtime="20201110 08:37:54.267"></status>
</kw>
<msg timestamp="20201110 08:37:54.268" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:54.249" endtime="20201110 08:37:54.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:54.270" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:54.269" endtime="20201110 08:37:54.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:54.272" endtime="20201110 08:37:54.274"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.246" endtime="20201110 08:37:54.275"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.244" endtime="20201110 08:37:54.275"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:54.282" endtime="20201110 08:37:54.567"></status>
</kw>
<msg timestamp="20201110 08:37:54.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019758208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019800403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:54.280" endtime="20201110 08:37:54.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:54.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019758208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019800403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:54.572" endtime="20201110 08:37:54.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:54.580" endtime="20201110 08:37:54.582"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.277" endtime="20201110 08:37:54.582"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.276" endtime="20201110 08:37:54.583"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:54.587" level="INFO">${RESULT} = [{'time': 0.019800403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2195000000001814e-05, 'source_diff': 4.2195000000001814e-05}, {'time': 0.019852417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:54.583" endtime="20201110 08:37:54.587"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:54.601" level="INFO">${ACCURACY} = {'diff': [4.2195000000001814e-05, 4.225000000000062e-05, 4.230600000000237e-05, 4.2444999999998595e-05, 4.151399999999944e-05, 4.202800000000298e-05, 4.2222999999997485e-05, 4.2473000000001204e-05, 4....</msg>
<status status="PASS" starttime="20201110 08:37:54.588" endtime="20201110 08:37:54.602"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:54.606" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201110 08:37:54.605" endtime="20201110 08:37:54.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:54.608" level="INFO">VALUE: [4.2195000000001814e-05, 4.225000000000062e-05, 4.230600000000237e-05, 4.2444999999998595e-05, 4.151399999999944e-05, 4.202800000000298e-05, 4.2222999999997485e-05, 4.2473000000001204e-05, 4.225000000000062e-05, 4.1805000000002396e-05, 4.219399999999887e-05, 4.1723000000000454e-05, 4.2290999999999856e-05, 4.2096999999997886e-05, 4.2375000000000745e-05, 4.180600000000187e-05, 4.1875000000000245e-05, 4.2125000000000495e-05, 4.223600000000105e-05, 4.155600000000162e-05, 4.24860000000013e-05, 4.1624999999999995e-05, 4.2416999999999455e-05, 4.1680999999998275e-05, 4.2208999999997915e-05, 4.197200000000123e-05, 4.19860000000008e-05, 4.1624999999999995e-05, 4.177799999999926e-05, 4.1709000000000884e-05, 4.225000000000062e-05, 4.227799999999976e-05, 4.2125000000000495e-05, 4.1723000000000454e-05, 4.175000000000012e-05, 4.250000000000087e-05, 4.179199999999883e-05, 4.16119999999999e-05, 4.201399999999994e-05, 4.2027000000000037e-05, 4.166599999999923e-05, 4.251400000000044e-05, 4.16799999999988e-05, 4.21799999999993e-05, 4.166599999999923e-05, 4.1611000000000425e-05, 4.1666999999998705e-05, 4.183400000000101e-05, 4.173600000000055e-05, 4.180600000000187e-05]</msg>
<status status="PASS" starttime="20201110 08:37:54.607" endtime="20201110 08:37:54.609"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.602" endtime="20201110 08:37:54.610"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:54.612" endtime="20201110 08:37:54.613"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:54.615" endtime="20201110 08:37:54.635"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.614" endtime="20201110 08:37:54.635"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.610" endtime="20201110 08:37:54.636"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.242" endtime="20201110 08:37:54.636"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.242" endtime="20201110 08:37:54.636"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:54.645" endtime="20201110 08:37:54.663"></status>
</kw>
<msg timestamp="20201110 08:37:54.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:54.643" endtime="20201110 08:37:54.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:54.666" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:54.664" endtime="20201110 08:37:54.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:54.667" endtime="20201110 08:37:54.669"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.641" endtime="20201110 08:37:54.670"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.639" endtime="20201110 08:37:54.670"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:54.677" endtime="20201110 08:37:54.961"></status>
</kw>
<msg timestamp="20201110 08:37:54.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019575194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019618347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:54.675" endtime="20201110 08:37:54.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:54.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019575194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019618347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:54.965" endtime="20201110 08:37:54.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:54.974" endtime="20201110 08:37:54.975"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.673" endtime="20201110 08:37:54.976"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.671" endtime="20201110 08:37:54.976"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:54.980" level="INFO">${RESULT} = [{'time': 0.019618347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3153000000000635e-05, 'source_diff': 4.3153000000000635e-05}, {'time': 0.019671333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:54.977" endtime="20201110 08:37:54.980"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:54.994" level="INFO">${ACCURACY} = {'diff': [4.3153000000000635e-05, 4.297199999999876e-05, 4.319399999999987e-05, 4.3068999999999746e-05, 4.3139000000001065e-05, 4.3347000000002606e-05, 4.279199999999983e-05, 4.3180999999999775e-05, 4...</msg>
<status status="PASS" starttime="20201110 08:37:54.981" endtime="20201110 08:37:54.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:54.998" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201110 08:37:54.997" endtime="20201110 08:37:54.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:55.001" level="INFO">VALUE: [4.3153000000000635e-05, 4.297199999999876e-05, 4.319399999999987e-05, 4.3068999999999746e-05, 4.3139000000001065e-05, 4.3347000000002606e-05, 4.279199999999983e-05, 4.3180999999999775e-05, 4.347199999999926e-05, 4.348599999999883e-05, 4.277800000000026e-05, 4.306999999999922e-05, 4.2861000000001676e-05, 4.309799999999836e-05, 4.2916999999999955e-05, 4.2624999999997526e-05, 4.259800000000133e-05, 4.3487000000001774e-05, 4.286199999999768e-05, 4.351400000000144e-05, 4.3110999999998456e-05, 4.322200000000248e-05, 4.3055000000000176e-05, 4.322199999999901e-05, 4.293000000000005e-05, 4.26799999999998e-05, 4.3055000000000176e-05, 4.28059999999994e-05, 4.2597000000001856e-05, 4.341600000000098e-05, 4.3110999999998456e-05, 4.3444999999999595e-05, 4.2625000000000995e-05, 4.2624999999997526e-05, 4.251400000000044e-05, 4.255599999999915e-05, 4.2680999999999275e-05, 4.3180999999999775e-05, 4.28059999999994e-05, 4.3110999999998456e-05, 4.3389000000001315e-05, 4.255600000000262e-05, 4.305599999999965e-05, 4.3375000000001745e-05, 4.294399999999962e-05, 4.340199999999794e-05, 4.272199999999851e-05, 4.2639000000000565e-05, 4.2582999999998816e-05, 4.2625000000000995e-05]</msg>
<status status="PASS" starttime="20201110 08:37:54.999" endtime="20201110 08:37:55.002"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.995" endtime="20201110 08:37:55.002"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:55.005" endtime="20201110 08:37:55.006"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:55.008" endtime="20201110 08:37:55.027"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.006" endtime="20201110 08:37:55.028"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.003" endtime="20201110 08:37:55.028"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.637" endtime="20201110 08:37:55.028"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.637" endtime="20201110 08:37:55.029"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:55.037" endtime="20201110 08:37:55.055"></status>
</kw>
<msg timestamp="20201110 08:37:55.056" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:55.036" endtime="20201110 08:37:55.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:55.058" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:55.057" endtime="20201110 08:37:55.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:55.059" endtime="20201110 08:37:55.062"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.033" endtime="20201110 08:37:55.063"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.031" endtime="20201110 08:37:55.063"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:55.069" endtime="20201110 08:37:55.355"></status>
</kw>
<msg timestamp="20201110 08:37:55.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019592, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019635792, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:37:55.068" endtime="20201110 08:37:55.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:55.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019592, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019635792, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:37:55.359" endtime="20201110 08:37:55.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:55.368" endtime="20201110 08:37:55.369"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.065" endtime="20201110 08:37:55.370"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.064" endtime="20201110 08:37:55.370"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:55.374" level="INFO">${RESULT} = [{'time': 0.019635792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.379200000000083e-05, 'source_diff': 4.379200000000083e-05}, {'time': 0.019690806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:55.371" endtime="20201110 08:37:55.375"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:55.388" level="INFO">${ACCURACY} = {'diff': [4.379200000000083e-05, 4.452800000000201e-05, 4.376400000000169e-05, 4.381999999999997e-05, 4.372199999999951e-05, 4.379199999999736e-05, 4.422200000000001e-05, 4.4096999999999886e-05, 4.418...</msg>
<status status="PASS" starttime="20201110 08:37:55.375" endtime="20201110 08:37:55.388"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:55.393" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201110 08:37:55.392" endtime="20201110 08:37:55.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:55.395" level="INFO">VALUE: [4.379200000000083e-05, 4.452800000000201e-05, 4.376400000000169e-05, 4.381999999999997e-05, 4.372199999999951e-05, 4.379199999999736e-05, 4.422200000000001e-05, 4.4096999999999886e-05, 4.4181000000000775e-05, 4.44860000000033e-05, 4.366600000000123e-05, 4.436200000000265e-05, 4.3903000000001385e-05, 4.427699999999882e-05, 4.3874999999998776e-05, 4.4305000000001427e-05, 4.375000000000212e-05, 4.4124999999999026e-05, 4.377699999999832e-05, 4.4138999999998596e-05, 4.391599999999801e-05, 4.376400000000169e-05, 4.429200000000133e-05, 4.405600000000065e-05, 4.369400000000037e-05, 4.404200000000108e-05, 4.397199999999976e-05, 4.43060000000009e-05, 4.424999999999915e-05, 4.3681000000000275e-05, 4.4374999999999276e-05, 4.356999999999972e-05, 4.404200000000108e-05, 4.38060000000004e-05, 4.3972999999999235e-05, 4.3986999999998805e-05, 4.39999999999989e-05, 4.448599999999983e-05, 4.429100000000186e-05, 4.376400000000169e-05, 4.4375000000002746e-05, 4.390199999999844e-05, 4.404100000000161e-05, 4.3860999999999206e-05, 4.3860999999999206e-05, 4.424999999999915e-05, 4.4375000000002746e-05, 4.358399999999929e-05, 4.3624999999998526e-05, 4.3680999999996806e-05]</msg>
<status status="PASS" starttime="20201110 08:37:55.394" endtime="20201110 08:37:55.396"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.389" endtime="20201110 08:37:55.396"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:55.399" endtime="20201110 08:37:55.400"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:55.402" endtime="20201110 08:37:55.421"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.401" endtime="20201110 08:37:55.422"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.397" endtime="20201110 08:37:55.423"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.030" endtime="20201110 08:37:55.423"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.029" endtime="20201110 08:37:55.423"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:55.432" endtime="20201110 08:37:55.449"></status>
</kw>
<msg timestamp="20201110 08:37:55.450" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:55.430" endtime="20201110 08:37:55.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:55.452" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:55.451" endtime="20201110 08:37:55.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:55.453" endtime="20201110 08:37:55.456"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.427" endtime="20201110 08:37:55.457"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.425" endtime="20201110 08:37:55.457"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:55.464" endtime="20201110 08:37:55.749"></status>
</kw>
<msg timestamp="20201110 08:37:55.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019684917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019730028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:55.462" endtime="20201110 08:37:55.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:55.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019684917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019730028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:55.754" endtime="20201110 08:37:55.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:55.762" endtime="20201110 08:37:55.764"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.459" endtime="20201110 08:37:55.764"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.458" endtime="20201110 08:37:55.765"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:55.769" level="INFO">${RESULT} = [{'time': 0.019730028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5111000000000456e-05, 'source_diff': 4.5111000000000456e-05}, {'time': 0.019787042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:55.765" endtime="20201110 08:37:55.769"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:55.782" level="INFO">${ACCURACY} = {'diff': [4.5111000000000456e-05, 4.5361000000000706e-05, 4.4861000000000206e-05, 4.55130000000005e-05, 4.4874999999999776e-05, 4.5138999999999596e-05, 4.466599999999876e-05, 4.5375000000000276e-05, 4...</msg>
<status status="PASS" starttime="20201110 08:37:55.770" endtime="20201110 08:37:55.783"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:55.787" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201110 08:37:55.786" endtime="20201110 08:37:55.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:55.789" level="INFO">VALUE: [4.5111000000000456e-05, 4.5361000000000706e-05, 4.4861000000000206e-05, 4.55130000000005e-05, 4.4874999999999776e-05, 4.5138999999999596e-05, 4.466599999999876e-05, 4.5375000000000276e-05, 4.504099999999914e-05, 4.4874999999999776e-05, 4.466599999999876e-05, 4.5111000000000456e-05, 4.473600000000008e-05, 4.495800000000119e-05, 4.526399999999972e-05, 4.5430999999998556e-05, 4.502800000000251e-05, 4.5097000000000886e-05, 4.4973000000000235e-05, 4.4652999999998666e-05, 4.452800000000201e-05, 4.5181000000001775e-05, 4.483399999999707e-05, 4.4889000000002816e-05, 4.548600000000083e-05, 4.4903000000002385e-05, 4.5361000000000706e-05, 4.530599999999843e-05, 4.49999999999999e-05, 4.547199999999779e-05, 4.479200000000183e-05, 4.4625000000002996e-05, 4.531899999999853e-05, 4.551399999999997e-05, 4.506899999999828e-05, 4.474999999999965e-05, 4.53329999999981e-05, 4.5111000000000456e-05, 4.505500000000218e-05, 4.4652999999998666e-05, 4.504200000000208e-05, 4.495799999999772e-05, 4.4624999999999526e-05, 4.451399999999897e-05, 4.55000000000004e-05, 4.5444999999998126e-05, 4.5430999999998556e-05, 4.5361000000000706e-05, 4.4944999999997626e-05, 4.548600000000083e-05]</msg>
<status status="PASS" starttime="20201110 08:37:55.788" endtime="20201110 08:37:55.790"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.783" endtime="20201110 08:37:55.791"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:55.793" endtime="20201110 08:37:55.794"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:55.796" endtime="20201110 08:37:55.816"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.795" endtime="20201110 08:37:55.816"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.791" endtime="20201110 08:37:55.817"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.424" endtime="20201110 08:37:55.817"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.423" endtime="20201110 08:37:55.817"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:55.826" endtime="20201110 08:37:55.844"></status>
</kw>
<msg timestamp="20201110 08:37:55.844" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:55.824" endtime="20201110 08:37:55.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:55.846" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:55.845" endtime="20201110 08:37:55.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:55.847" endtime="20201110 08:37:55.850"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.822" endtime="20201110 08:37:55.851"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.820" endtime="20201110 08:37:55.851"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:55.857" endtime="20201110 08:37:56.143"></status>
</kw>
<msg timestamp="20201110 08:37:56.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019619042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019665403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:55.856" endtime="20201110 08:37:56.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:56.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019619042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019665403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:56.147" endtime="20201110 08:37:56.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:56.156" endtime="20201110 08:37:56.157"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.853" endtime="20201110 08:37:56.158"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.852" endtime="20201110 08:37:56.158"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:56.162" level="INFO">${RESULT} = [{'time': 0.019665403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.6361000000001706e-05, 'source_diff': 4.6361000000001706e-05}, {'time': 0.019723319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:56.159" endtime="20201110 08:37:56.163"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:56.177" level="INFO">${ACCURACY} = {'diff': [4.6361000000001706e-05, 4.647199999999879e-05, 4.569400000000237e-05, 4.566599999999976e-05, 4.581899999999903e-05, 4.648600000000183e-05, 4.627799999999682e-05, 4.5625000000000526e-05, 4.58...</msg>
<status status="PASS" starttime="20201110 08:37:56.163" endtime="20201110 08:37:56.177"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:56.182" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201110 08:37:56.181" endtime="20201110 08:37:56.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:56.184" level="INFO">VALUE: [4.6361000000001706e-05, 4.647199999999879e-05, 4.569400000000237e-05, 4.566599999999976e-05, 4.581899999999903e-05, 4.648600000000183e-05, 4.627799999999682e-05, 4.5625000000000526e-05, 4.584699999999817e-05, 4.579199999999936e-05, 4.622200000000201e-05, 4.6180999999999306e-05, 4.630599999999943e-05, 4.5875000000000776e-05, 4.648600000000183e-05, 4.606999999999875e-05, 4.622200000000201e-05, 4.629199999999986e-05, 4.5666999999999236e-05, 4.5875000000000776e-05, 4.5695000000001845e-05, 4.559800000000086e-05, 4.584800000000111e-05, 4.554199999999911e-05, 4.558299999999835e-05, 4.577799999999979e-05, 4.636099999999824e-05, 4.604199999999961e-05, 4.645799999999922e-05, 4.577700000000032e-05, 4.631899999999953e-05, 4.606899999999928e-05, 4.60000000000009e-05, 4.6083000000002317e-05, 4.626400000000072e-05, 4.648599999999836e-05, 4.572200000000151e-05, 4.6166999999999736e-05, 4.601400000000047e-05, 4.573600000000108e-05, 4.623600000000158e-05, 4.622200000000201e-05, 4.6375000000001276e-05, 4.5916999999999486e-05, 4.586199999999721e-05, 4.6473000000001735e-05, 4.575000000000065e-05, 4.587499999999731e-05, 4.611099999999799e-05, 4.566599999999976e-05]</msg>
<status status="PASS" starttime="20201110 08:37:56.183" endtime="20201110 08:37:56.191"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.178" endtime="20201110 08:37:56.191"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:56.194" endtime="20201110 08:37:56.195"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:56.197" endtime="20201110 08:37:56.217"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.196" endtime="20201110 08:37:56.217"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.192" endtime="20201110 08:37:56.218"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.818" endtime="20201110 08:37:56.218"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.818" endtime="20201110 08:37:56.218"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:56.228" endtime="20201110 08:37:56.246"></status>
</kw>
<msg timestamp="20201110 08:37:56.247" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:56.226" endtime="20201110 08:37:56.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:56.249" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:56.248" endtime="20201110 08:37:56.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:56.250" endtime="20201110 08:37:56.253"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.223" endtime="20201110 08:37:56.254"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.221" endtime="20201110 08:37:56.254"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:56.260" endtime="20201110 08:37:56.546"></status>
</kw>
<msg timestamp="20201110 08:37:56.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020984347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021030944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:56.259" endtime="20201110 08:37:56.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:56.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020984347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021030944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:56.551" endtime="20201110 08:37:56.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:56.559" endtime="20201110 08:37:56.561"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.256" endtime="20201110 08:37:56.562"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.255" endtime="20201110 08:37:56.562"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:56.566" level="INFO">${RESULT} = [{'time': 0.021030944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.659699999999892e-05, 'source_diff': 4.659699999999892e-05}, {'time': 0.021086944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:56.563" endtime="20201110 08:37:56.566"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:56.580" level="INFO">${ACCURACY} = {'diff': [4.659699999999892e-05, 4.743000000000108e-05, 4.673599999999861e-05, 4.687499999999831e-05, 4.742999999999761e-05, 4.705500000000071e-05, 4.740299999999795e-05, 4.6931000000000056e-05, 4.737...</msg>
<status status="PASS" starttime="20201110 08:37:56.567" endtime="20201110 08:37:56.580"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:56.584" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201110 08:37:56.583" endtime="20201110 08:37:56.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:56.587" level="INFO">VALUE: [4.659699999999892e-05, 4.743000000000108e-05, 4.673599999999861e-05, 4.687499999999831e-05, 4.742999999999761e-05, 4.705500000000071e-05, 4.740299999999795e-05, 4.6931000000000056e-05, 4.737499999999881e-05, 4.7431000000000556e-05, 4.6903000000000916e-05, 4.7431000000000556e-05, 4.656999999999925e-05, 4.7111000000002456e-05, 4.740299999999795e-05, 4.7431000000000556e-05, 4.672199999999904e-05, 4.690299999999745e-05, 4.730600000000043e-05, 4.7417000000000986e-05, 4.7167000000000736e-05, 4.743000000000108e-05, 4.6709000000002415e-05, 4.709699999999942e-05, 4.697199999999929e-05, 4.743000000000108e-05, 4.720799999999997e-05, 4.695799999999972e-05, 4.731899999999706e-05, 4.687499999999831e-05, 4.705499999999724e-05, 4.687499999999831e-05, 4.747199999999979e-05, 4.695799999999972e-05, 4.730600000000043e-05, 4.734699999999967e-05, 4.657000000000272e-05, 4.713799999999865e-05, 4.747199999999979e-05, 4.682000000000297e-05, 4.684800000000211e-05, 4.654200000000011e-05, 4.713800000000212e-05, 4.736199999999871e-05, 4.681900000000003e-05, 4.6847000000002637e-05, 4.654099999999717e-05, 4.675000000000165e-05, 4.651299999999803e-05, 4.699999999999843e-05]</msg>
<status status="PASS" starttime="20201110 08:37:56.585" endtime="20201110 08:37:56.588"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.581" endtime="20201110 08:37:56.588"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:56.590" endtime="20201110 08:37:56.592"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:56.594" endtime="20201110 08:37:56.613"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.592" endtime="20201110 08:37:56.614"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.589" endtime="20201110 08:37:56.614"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.219" endtime="20201110 08:37:56.614"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.218" endtime="20201110 08:37:56.615"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:56.623" endtime="20201110 08:37:56.642"></status>
</kw>
<msg timestamp="20201110 08:37:56.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:56.622" endtime="20201110 08:37:56.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:56.645" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:56.643" endtime="20201110 08:37:56.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:56.646" endtime="20201110 08:37:56.648"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.619" endtime="20201110 08:37:56.649"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.617" endtime="20201110 08:37:56.649"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:56.656" endtime="20201110 08:37:56.941"></status>
</kw>
<msg timestamp="20201110 08:37:56.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019686542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01973425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:56.654" endtime="20201110 08:37:56.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:56.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019686542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01973425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:56.945" endtime="20201110 08:37:56.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:56.953" endtime="20201110 08:37:56.955"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.652" endtime="20201110 08:37:56.955"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.650" endtime="20201110 08:37:56.956"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:56.960" level="INFO">${RESULT} = [{'time': 0.01973425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7707999999997e-05, 'source_diff': 4.7707999999997e-05}, {'time': 0.019791222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4....</msg>
<status status="PASS" starttime="20201110 08:37:56.957" endtime="20201110 08:37:56.960"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:56.974" level="INFO">${ACCURACY} = {'diff': [4.7707999999997e-05, 4.780500000000146e-05, 4.794399999999768e-05, 4.81940000000014e-05, 4.8431000000001556e-05, 4.790299999999845e-05, 4.770800000000047e-05, 4.773600000000308e-05, 4.820900...</msg>
<status status="PASS" starttime="20201110 08:37:56.961" endtime="20201110 08:37:56.974"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:56.978" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201110 08:37:56.977" endtime="20201110 08:37:56.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:56.981" level="INFO">VALUE: [4.7707999999997e-05, 4.780500000000146e-05, 4.794399999999768e-05, 4.81940000000014e-05, 4.8431000000001556e-05, 4.790299999999845e-05, 4.770800000000047e-05, 4.773600000000308e-05, 4.8209000000000446e-05, 4.8195000000000876e-05, 4.779199999999789e-05, 4.811099999999999e-05, 4.7695000000000376e-05, 4.81940000000014e-05, 4.7972999999999766e-05, 4.772200000000004e-05, 4.808400000000032e-05, 4.826399999999925e-05, 4.766600000000176e-05, 4.811099999999999e-05, 4.804100000000214e-05, 4.823600000000011e-05, 4.809700000000042e-05, 4.7903000000001916e-05, 4.816699999999827e-05, 4.8195000000000876e-05, 4.847199999999732e-05, 4.797200000000029e-05, 4.807000000000075e-05, 4.804200000000161e-05, 4.779200000000136e-05, 4.7972999999999766e-05, 4.8194999999997407e-05, 4.78330000000006e-05, 4.754199999999764e-05, 4.8167000000001736e-05, 4.81529999999987e-05, 4.797200000000029e-05, 4.781900000000103e-05, 4.768000000000133e-05, 4.80269999999991e-05, 4.784700000000017e-05, 4.752700000000207e-05, 4.761099999999949e-05, 4.815199999999922e-05, 4.804200000000161e-05, 4.791599999999854e-05, 4.754099999999817e-05, 4.827800000000229e-05, 4.824999999999968e-05]</msg>
<status status="PASS" starttime="20201110 08:37:56.979" endtime="20201110 08:37:56.981"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.975" endtime="20201110 08:37:56.982"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:56.984" endtime="20201110 08:37:56.985"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:56.988" endtime="20201110 08:37:57.007"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.986" endtime="20201110 08:37:57.008"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.983" endtime="20201110 08:37:57.008"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.615" endtime="20201110 08:37:57.008"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.615" endtime="20201110 08:37:57.008"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:57.017" endtime="20201110 08:37:57.037"></status>
</kw>
<msg timestamp="20201110 08:37:57.037" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:57.015" endtime="20201110 08:37:57.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:57.040" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:57.038" endtime="20201110 08:37:57.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:57.041" endtime="20201110 08:37:57.044"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.013" endtime="20201110 08:37:57.044"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.011" endtime="20201110 08:37:57.045"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:57.051" endtime="20201110 08:37:57.338"></status>
</kw>
<msg timestamp="20201110 08:37:57.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019733583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019782889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:57.049" endtime="20201110 08:37:57.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:57.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019733583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019782889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:57.342" endtime="20201110 08:37:57.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:57.350" endtime="20201110 08:37:57.352"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.047" endtime="20201110 08:37:57.353"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.045" endtime="20201110 08:37:57.353"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:57.357" level="INFO">${RESULT} = [{'time': 0.019782889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.930600000000243e-05, 'source_diff': 4.930600000000243e-05}, {'time': 0.019840889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:57.354" endtime="20201110 08:37:57.357"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:57.371" level="INFO">${ACCURACY} = {'diff': [4.930600000000243e-05, 4.918099999999884e-05, 4.894499999999816e-05, 4.924999999999721e-05, 4.9223000000001016e-05, 4.862500000000006e-05, 4.907000000000175e-05, 4.933400000000157e-05, 4.922...</msg>
<status status="PASS" starttime="20201110 08:37:57.358" endtime="20201110 08:37:57.371"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:57.375" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201110 08:37:57.374" endtime="20201110 08:37:57.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:57.378" level="INFO">VALUE: [4.930600000000243e-05, 4.918099999999884e-05, 4.894499999999816e-05, 4.924999999999721e-05, 4.9223000000001016e-05, 4.862500000000006e-05, 4.907000000000175e-05, 4.933400000000157e-05, 4.9222999999997546e-05, 4.880599999999846e-05, 4.908399999999785e-05, 4.879099999999942e-05, 4.898599999999739e-05, 4.886099999999727e-05, 4.879100000000289e-05, 4.925000000000068e-05, 4.942999999999961e-05, 4.886099999999727e-05, 4.948600000000136e-05, 4.909800000000089e-05, 4.877799999999932e-05, 4.858300000000135e-05, 4.919399999999893e-05, 4.893099999999859e-05, 4.926400000000025e-05, 4.879200000000236e-05, 4.897200000000129e-05, 4.912500000000056e-05, 4.922200000000154e-05, 4.872199999999757e-05, 4.873600000000061e-05, 4.861199999999996e-05, 4.943099999999909e-05, 4.930600000000243e-05, 4.8973000000000766e-05, 4.9208999999997977e-05, 4.866599999999929e-05, 4.948600000000136e-05, 4.886100000000074e-05, 4.913900000000013e-05, 4.861100000000049e-05, 4.926400000000025e-05, 4.861100000000049e-05, 4.930499999999949e-05, 4.881899999999856e-05, 4.862500000000006e-05, 4.886100000000074e-05, 4.905599999999871e-05, 4.897199999999782e-05, 4.897200000000129e-05]</msg>
<status status="PASS" starttime="20201110 08:37:57.376" endtime="20201110 08:37:57.378"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.372" endtime="20201110 08:37:57.379"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:57.381" endtime="20201110 08:37:57.383"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:57.385" endtime="20201110 08:37:57.404"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.383" endtime="20201110 08:37:57.405"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.380" endtime="20201110 08:37:57.405"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.009" endtime="20201110 08:37:57.405"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.009" endtime="20201110 08:37:57.405"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:57.414" endtime="20201110 08:37:57.432"></status>
</kw>
<msg timestamp="20201110 08:37:57.433" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:57.412" endtime="20201110 08:37:57.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:57.435" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:57.434" endtime="20201110 08:37:57.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:57.436" endtime="20201110 08:37:57.439"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.410" endtime="20201110 08:37:57.439"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.408" endtime="20201110 08:37:57.440"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:57.446" endtime="20201110 08:37:57.731"></status>
</kw>
<msg timestamp="20201110 08:37:57.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019673708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019723528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:57.445" endtime="20201110 08:37:57.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:57.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019673708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019723528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:57.735" endtime="20201110 08:37:57.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:57.743" endtime="20201110 08:37:57.745"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.442" endtime="20201110 08:37:57.745"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.440" endtime="20201110 08:37:57.746"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:57.750" level="INFO">${RESULT} = [{'time': 0.019723528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.981999999999903e-05, 'source_diff': 4.981999999999903e-05}, {'time': 0.019782514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:57.747" endtime="20201110 08:37:57.750"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:57.765" level="INFO">${ACCURACY} = {'diff': [4.981999999999903e-05, 4.961100000000149e-05, 4.977800000000032e-05, 5.01530000000007e-05, 5.000000000000143e-05, 5.029200000000039e-05, 5.051399999999803e-05, 5.016700000000027e-05, 4.99170...</msg>
<status status="PASS" starttime="20201110 08:37:57.751" endtime="20201110 08:37:57.765"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:57.772" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201110 08:37:57.770" endtime="20201110 08:37:57.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:57.775" level="INFO">VALUE: [4.981999999999903e-05, 4.961100000000149e-05, 4.977800000000032e-05, 5.01530000000007e-05, 5.000000000000143e-05, 5.029200000000039e-05, 5.051399999999803e-05, 5.016700000000027e-05, 4.991700000000002e-05, 5.018000000000036e-05, 4.967999999999986e-05, 4.993000000000011e-05, 5.036099999999877e-05, 5.036099999999877e-05, 5.004100000000067e-05, 4.972199999999857e-05, 5.027799999999735e-05, 4.956899999999931e-05, 5.029100000000092e-05, 4.958299999999888e-05, 5.024999999999821e-05, 5.002800000000057e-05, 5.037500000000181e-05, 5.006999999999928e-05, 5.044400000000018e-05, 5.016700000000027e-05, 4.997200000000229e-05, 4.9973000000001766e-05, 4.9723000000001516e-05, 4.961200000000096e-05, 4.991700000000002e-05, 5.009799999999842e-05, 5.048600000000236e-05, 5.019399999999993e-05, 5.024999999999821e-05, 5.033299999999963e-05, 5.049999999999846e-05, 5.018000000000036e-05, 5.018000000000036e-05, 4.956899999999931e-05, 5.009700000000242e-05, 5.019399999999993e-05, 5.034700000000267e-05, 4.958300000000235e-05, 5.048599999999889e-05, 4.998599999999839e-05, 4.976400000000075e-05, 4.991700000000002e-05, 4.962499999999759e-05, 5.030599999999996e-05]</msg>
<status status="PASS" starttime="20201110 08:37:57.773" endtime="20201110 08:37:57.776"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.766" endtime="20201110 08:37:57.777"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:57.780" endtime="20201110 08:37:57.782"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:57.785" endtime="20201110 08:37:57.805"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.783" endtime="20201110 08:37:57.806"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.778" endtime="20201110 08:37:57.806"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.406" endtime="20201110 08:37:57.806"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.406" endtime="20201110 08:37:57.807"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:57.815" endtime="20201110 08:37:57.834"></status>
</kw>
<msg timestamp="20201110 08:37:57.834" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:57.814" endtime="20201110 08:37:57.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:57.837" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:57.835" endtime="20201110 08:37:57.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:57.838" endtime="20201110 08:37:57.840"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.811" endtime="20201110 08:37:57.841"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.809" endtime="20201110 08:37:57.841"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:57.848" endtime="20201110 08:37:58.134"></status>
</kw>
<msg timestamp="20201110 08:37:58.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019721347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019772819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:57.846" endtime="20201110 08:37:58.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:58.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019721347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019772819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:58.138" endtime="20201110 08:37:58.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:58.147" endtime="20201110 08:37:58.148"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.844" endtime="20201110 08:37:58.149"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.842" endtime="20201110 08:37:58.149"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:58.154" level="INFO">${RESULT} = [{'time': 0.019772819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.147200000000032e-05, 'source_diff': 5.147200000000032e-05}, {'time': 0.019833833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:58.150" endtime="20201110 08:37:58.154"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:58.167" level="INFO">${ACCURACY} = {'diff': [5.147200000000032e-05, 5.077699999999838e-05, 5.072199999999957e-05, 5.068000000000086e-05, 5.086099999999927e-05, 5.055500000000074e-05, 5.143000000000161e-05, 5.090300000000145e-05, 5.1125...</msg>
<status status="PASS" starttime="20201110 08:37:58.155" endtime="20201110 08:37:58.167"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:58.172" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201110 08:37:58.171" endtime="20201110 08:37:58.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:58.174" level="INFO">VALUE: [5.147200000000032e-05, 5.077699999999838e-05, 5.072199999999957e-05, 5.068000000000086e-05, 5.086099999999927e-05, 5.055500000000074e-05, 5.143000000000161e-05, 5.090300000000145e-05, 5.112500000000256e-05, 5.129200000000139e-05, 5.150000000000293e-05, 5.1014000000002e-05, 5.151399999999903e-05, 5.08339999999996e-05, 5.061099999999902e-05, 5.061099999999902e-05, 5.143099999999762e-05, 5.055500000000074e-05, 5.056900000000031e-05, 5.141700000000152e-05, 5.072199999999957e-05, 5.105500000000124e-05, 5.068000000000086e-05, 5.073599999999914e-05, 5.0651999999998254e-05, 5.059700000000292e-05, 5.077800000000132e-05, 5.0929999999997644e-05, 5.136099999999977e-05, 5.06530000000012e-05, 5.062499999999859e-05, 5.097199999999982e-05, 5.105600000000071e-05, 5.136099999999977e-05, 5.120899999999998e-05, 5.0708e-05, 5.097199999999982e-05, 5.147200000000032e-05, 5.0723000000002516e-05, 5.0986999999998867e-05, 5.130600000000096e-05, 5.091700000000102e-05, 5.069400000000043e-05, 5.127800000000182e-05, 5.106899999999734e-05, 5.068000000000086e-05, 5.095800000000025e-05, 5.052699999999813e-05, 5.0915999999998074e-05, 5.077799999999785e-05]</msg>
<status status="PASS" starttime="20201110 08:37:58.173" endtime="20201110 08:37:58.175"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.168" endtime="20201110 08:37:58.176"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:58.178" endtime="20201110 08:37:58.179"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:58.181" endtime="20201110 08:37:58.201"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.180" endtime="20201110 08:37:58.201"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.176" endtime="20201110 08:37:58.202"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.807" endtime="20201110 08:37:58.202"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.807" endtime="20201110 08:37:58.202"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:58.211" endtime="20201110 08:37:58.229"></status>
</kw>
<msg timestamp="20201110 08:37:58.230" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:58.209" endtime="20201110 08:37:58.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:58.232" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:58.231" endtime="20201110 08:37:58.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:58.233" endtime="20201110 08:37:58.236"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.207" endtime="20201110 08:37:58.236"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.205" endtime="20201110 08:37:58.237"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:58.243" endtime="20201110 08:37:58.529"></status>
</kw>
<msg timestamp="20201110 08:37:58.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019746278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019797903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:58.241" endtime="20201110 08:37:58.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:58.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019746278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019797903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:58.533" endtime="20201110 08:37:58.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:58.542" endtime="20201110 08:37:58.543"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.239" endtime="20201110 08:37:58.544"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.237" endtime="20201110 08:37:58.544"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:58.548" level="INFO">${RESULT} = [{'time': 0.019797903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.162499999999959e-05, 'source_diff': 5.162499999999959e-05}, {'time': 0.019860903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:58.545" endtime="20201110 08:37:58.549"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:58.562" level="INFO">${ACCURACY} = {'diff': [5.162499999999959e-05, 5.15279999999986e-05, 5.154199999999817e-05, 5.165299999999873e-05, 5.159700000000045e-05, 5.154200000000164e-05, 5.180600000000146e-05, 5.215299999999923e-05, 5.21110...</msg>
<status status="PASS" starttime="20201110 08:37:58.549" endtime="20201110 08:37:58.562"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:58.567" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201110 08:37:58.566" endtime="20201110 08:37:58.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:58.569" level="INFO">VALUE: [5.162499999999959e-05, 5.15279999999986e-05, 5.154199999999817e-05, 5.165299999999873e-05, 5.159700000000045e-05, 5.154200000000164e-05, 5.180600000000146e-05, 5.215299999999923e-05, 5.211100000000052e-05, 5.180499999999852e-05, 5.1929999999998644e-05, 5.2415999999999574e-05, 5.161100000000002e-05, 5.229099999999945e-05, 5.15409999999987e-05, 5.186100000000027e-05, 5.195800000000125e-05, 5.201399999999953e-05, 5.204200000000214e-05, 5.236100000000077e-05, 5.180599999999799e-05, 5.216700000000227e-05, 5.241699999999905e-05, 5.250000000000046e-05, 5.248600000000089e-05, 5.230600000000196e-05, 5.219500000000141e-05, 5.2249999999996743e-05, 5.209800000000042e-05, 5.24869999999969e-05, 5.187499999999984e-05, 5.184800000000017e-05, 5.2485999999997424e-05, 5.187499999999984e-05, 5.173600000000014e-05, 5.175000000000318e-05, 5.181900000000156e-05, 5.15409999999987e-05, 5.165299999999873e-05, 5.154199999999817e-05, 5.229200000000239e-05, 5.226399999999978e-05, 5.180600000000146e-05, 5.231999999999806e-05, 5.237500000000034e-05, 5.218100000000184e-05, 5.181899999999809e-05, 5.218100000000184e-05, 5.183399999999713e-05, 5.157000000000078e-05]</msg>
<status status="PASS" starttime="20201110 08:37:58.568" endtime="20201110 08:37:58.570"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.563" endtime="20201110 08:37:58.570"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:58.573" endtime="20201110 08:37:58.574"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:58.576" endtime="20201110 08:37:58.595"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.575" endtime="20201110 08:37:58.596"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.571" endtime="20201110 08:37:58.596"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.203" endtime="20201110 08:37:58.597"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.202" endtime="20201110 08:37:58.597"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:58.605" endtime="20201110 08:37:58.624"></status>
</kw>
<msg timestamp="20201110 08:37:58.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:58.604" endtime="20201110 08:37:58.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:58.627" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:58.626" endtime="20201110 08:37:58.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:58.628" endtime="20201110 08:37:58.631"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.601" endtime="20201110 08:37:58.631"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.599" endtime="20201110 08:37:58.632"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:58.638" endtime="20201110 08:37:58.924"></status>
</kw>
<msg timestamp="20201110 08:37:58.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019657306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019709875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:58.637" endtime="20201110 08:37:58.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:58.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019657306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019709875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:58.928" endtime="20201110 08:37:58.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:58.937" endtime="20201110 08:37:58.938"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.634" endtime="20201110 08:37:58.939"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.633" endtime="20201110 08:37:58.939"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:58.944" level="INFO">${RESULT} = [{'time': 0.019709875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.256900000000231e-05, 'source_diff': 5.256900000000231e-05}, {'time': 0.019773917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:58.940" endtime="20201110 08:37:58.944"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:58.957" level="INFO">${ACCURACY} = {'diff': [5.256900000000231e-05, 5.3277999999996883e-05, 5.250000000000046e-05, 5.286100000000127e-05, 5.31669999999998e-05, 5.281999999999856e-05, 5.3443999999999714e-05, 5.28340000000016e-05, 5.2916...</msg>
<status status="PASS" starttime="20201110 08:37:58.945" endtime="20201110 08:37:58.958"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:58.962" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201110 08:37:58.961" endtime="20201110 08:37:58.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:58.964" level="INFO">VALUE: [5.256900000000231e-05, 5.3277999999996883e-05, 5.250000000000046e-05, 5.286100000000127e-05, 5.31669999999998e-05, 5.281999999999856e-05, 5.3443999999999714e-05, 5.28340000000016e-05, 5.291699999999955e-05, 5.345899999999876e-05, 5.351400000000103e-05, 5.288900000000041e-05, 5.297200000000182e-05, 5.286100000000127e-05, 5.337500000000134e-05, 5.28609999999978e-05, 5.336100000000177e-05, 5.305499999999977e-05, 5.2679999999999394e-05, 5.350000000000146e-05, 5.287500000000084e-05, 5.293100000000259e-05, 5.322200000000207e-05, 5.3235999999998174e-05, 5.308299999999891e-05, 5.301400000000053e-05, 5.318100000000284e-05, 5.34730000000018e-05, 5.265299999999973e-05, 5.341700000000005e-05, 5.305499999999977e-05, 5.279099999999995e-05, 5.281899999999909e-05, 5.265299999999973e-05, 5.331899999999959e-05, 5.2707999999998534e-05, 5.2708000000002e-05, 5.325000000000121e-05, 5.273600000000114e-05, 5.31669999999998e-05, 5.2985999999997924e-05, 5.281999999999856e-05, 5.25279999999996e-05, 5.312500000000109e-05, 5.3471999999998854e-05, 5.319499999999894e-05, 5.329199999999992e-05, 5.33340000000021e-05, 5.304199999999967e-05, 5.318099999999937e-05]</msg>
<status status="PASS" starttime="20201110 08:37:58.963" endtime="20201110 08:37:58.965"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.958" endtime="20201110 08:37:58.966"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:58.968" endtime="20201110 08:37:58.969"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:58.971" endtime="20201110 08:37:58.991"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.970" endtime="20201110 08:37:58.991"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.966" endtime="20201110 08:37:58.992"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.598" endtime="20201110 08:37:58.992"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.597" endtime="20201110 08:37:58.992"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:59.001" endtime="20201110 08:37:59.021"></status>
</kw>
<msg timestamp="20201110 08:37:59.021" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:58.999" endtime="20201110 08:37:59.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:59.024" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:59.022" endtime="20201110 08:37:59.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:59.025" endtime="20201110 08:37:59.027"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.997" endtime="20201110 08:37:59.028"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.994" endtime="20201110 08:37:59.028"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:59.035" endtime="20201110 08:37:59.320"></status>
</kw>
<msg timestamp="20201110 08:37:59.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019947208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020001694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:59.033" endtime="20201110 08:37:59.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:59.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019947208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020001694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:59.324" endtime="20201110 08:37:59.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:59.333" endtime="20201110 08:37:59.334"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.031" endtime="20201110 08:37:59.335"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.029" endtime="20201110 08:37:59.335"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:59.339" level="INFO">${RESULT} = [{'time': 0.020001694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.4485999999999424e-05, 'source_diff': 5.4485999999999424e-05}, {'time': 0.020067722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:59.336" endtime="20201110 08:37:59.340"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:59.354" level="INFO">${ACCURACY} = {'diff': [5.4485999999999424e-05, 5.4263999999998314e-05, 5.355500000000027e-05, 5.4235999999999174e-05, 5.3957999999999784e-05, 5.405500000000077e-05, 5.437499999999887e-05, 5.4249999999998744e-05, 5...</msg>
<status status="PASS" starttime="20201110 08:37:59.340" endtime="20201110 08:37:59.355"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:59.359" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201110 08:37:59.358" endtime="20201110 08:37:59.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:59.361" level="INFO">VALUE: [5.4485999999999424e-05, 5.4263999999998314e-05, 5.355500000000027e-05, 5.4235999999999174e-05, 5.3957999999999784e-05, 5.405500000000077e-05, 5.437499999999887e-05, 5.4249999999998744e-05, 5.375000000000171e-05, 5.43609999999993e-05, 5.3985999999998924e-05, 5.412500000000209e-05, 5.419499999999994e-05, 5.444500000000019e-05, 5.3693999999999964e-05, 5.381999999999956e-05, 5.423699999999865e-05, 5.440299999999801e-05, 5.44869999999989e-05, 5.362500000000159e-05, 5.35410000000007e-05, 5.3680000000000394e-05, 5.438900000000191e-05, 5.388899999999794e-05, 5.3971999999999354e-05, 5.384699999999923e-05, 5.380500000000052e-05, 5.406999999999981e-05, 5.4457999999996815e-05, 5.438899999999844e-05, 5.362500000000159e-05, 5.405600000000024e-05, 5.395899999999926e-05, 5.432000000000006e-05, 5.358399999999888e-05, 5.368099999999987e-05, 5.358299999999941e-05, 5.391700000000055e-05, 5.427800000000135e-05, 5.3693999999999964e-05, 5.379100000000095e-05, 5.35410000000007e-05, 5.4471999999999854e-05, 5.362499999999812e-05, 5.372200000000257e-05, 5.409699999999948e-05, 5.412500000000209e-05, 5.3985999999998924e-05, 5.437499999999887e-05, 5.361199999999802e-05]</msg>
<status status="PASS" starttime="20201110 08:37:59.360" endtime="20201110 08:37:59.362"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.355" endtime="20201110 08:37:59.363"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:59.365" endtime="20201110 08:37:59.366"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:59.368" endtime="20201110 08:37:59.388"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.367" endtime="20201110 08:37:59.388"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.363" endtime="20201110 08:37:59.389"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.993" endtime="20201110 08:37:59.389"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.992" endtime="20201110 08:37:59.389"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:59.398" endtime="20201110 08:37:59.416"></status>
</kw>
<msg timestamp="20201110 08:37:59.417" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:59.396" endtime="20201110 08:37:59.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:59.419" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:59.418" endtime="20201110 08:37:59.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:59.420" endtime="20201110 08:37:59.423"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.394" endtime="20201110 08:37:59.423"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.391" endtime="20201110 08:37:59.424"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:59.430" endtime="20201110 08:37:59.717"></status>
</kw>
<msg timestamp="20201110 08:37:59.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019611458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019666444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:59.428" endtime="20201110 08:37:59.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:59.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019611458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019666444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:59.721" endtime="20201110 08:37:59.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:59.729" endtime="20201110 08:37:59.731"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.426" endtime="20201110 08:37:59.732"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.424" endtime="20201110 08:37:59.732"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:59.736" level="INFO">${RESULT} = [{'time': 0.019666444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.498600000000339e-05, 'source_diff': 5.498600000000339e-05}, {'time': 0.019733431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:59.733" endtime="20201110 08:37:59.736"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:59.750" level="INFO">${ACCURACY} = {'diff': [5.498600000000339e-05, 5.512499999999962e-05, 5.5472000000000854e-05, 5.5249999999999744e-05, 5.53610000000003e-05, 5.53480000000002e-05, 5.512499999999962e-05, 5.451299999999909e-05, 5.4540...</msg>
<status status="PASS" starttime="20201110 08:37:59.737" endtime="20201110 08:37:59.750"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:59.754" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201110 08:37:59.753" endtime="20201110 08:37:59.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:59.757" level="INFO">VALUE: [5.498600000000339e-05, 5.512499999999962e-05, 5.5472000000000854e-05, 5.5249999999999744e-05, 5.53610000000003e-05, 5.53480000000002e-05, 5.512499999999962e-05, 5.451299999999909e-05, 5.454099999999823e-05, 5.461099999999955e-05, 5.4680000000001394e-05, 5.534700000000073e-05, 5.5291999999998453e-05, 5.5249999999999744e-05, 5.500000000000296e-05, 5.4513999999998564e-05, 5.484700000000023e-05, 5.5013999999999064e-05, 5.509700000000048e-05, 5.458300000000041e-05, 5.5499999999999994e-05, 5.473699999999915e-05, 5.520900000000051e-05, 5.511199999999952e-05, 5.475000000000271e-05, 5.477699999999891e-05, 5.505600000000124e-05, 5.508299999999744e-05, 5.512499999999962e-05, 5.529099999999898e-05, 5.462500000000259e-05, 5.480600000000099e-05, 5.4943999999997745e-05, 5.484700000000023e-05, 5.487499999999937e-05, 5.462499999999912e-05, 5.484700000000023e-05, 5.4944000000001214e-05, 5.4999999999999494e-05, 5.4985999999999924e-05, 5.469500000000044e-05, 5.457000000000031e-05, 5.511100000000005e-05, 5.445899999999976e-05, 5.491700000000155e-05, 5.4735999999999674e-05, 5.4791999999997953e-05, 5.479099999999848e-05, 5.463899999999869e-05, 5.4999999999999494e-05]</msg>
<status status="PASS" starttime="20201110 08:37:59.755" endtime="20201110 08:37:59.758"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.751" endtime="20201110 08:37:59.758"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:59.760" endtime="20201110 08:37:59.762"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:59.764" endtime="20201110 08:37:59.783"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.762" endtime="20201110 08:37:59.784"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.759" endtime="20201110 08:37:59.784"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.390" endtime="20201110 08:37:59.784"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.389" endtime="20201110 08:37:59.785"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:59.793" endtime="20201110 08:37:59.811"></status>
</kw>
<msg timestamp="20201110 08:37:59.812" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:59.792" endtime="20201110 08:37:59.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:59.814" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:59.813" endtime="20201110 08:37:59.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:59.815" endtime="20201110 08:37:59.818"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.789" endtime="20201110 08:37:59.819"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.787" endtime="20201110 08:37:59.819"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:59.825" endtime="20201110 08:38:00.110"></status>
</kw>
<msg timestamp="20201110 08:38:00.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019696264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019751903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:59.824" endtime="20201110 08:38:00.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:00.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019696264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019751903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:00.114" endtime="20201110 08:38:00.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:00.123" endtime="20201110 08:38:00.124"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.821" endtime="20201110 08:38:00.125"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.820" endtime="20201110 08:38:00.125"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:00.129" level="INFO">${RESULT} = [{'time': 0.019751903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.563899999999969e-05, 'source_diff': 5.563899999999969e-05}, {'time': 0.019819917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:00.126" endtime="20201110 08:38:00.130"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:00.143" level="INFO">${ACCURACY} = {'diff': [5.563899999999969e-05, 5.594499999999822e-05, 5.590299999999951e-05, 5.618100000000237e-05, 5.641699999999958e-05, 5.591699999999908e-05, 5.6041999999999204e-05, 5.561200000000002e-05, 5.630...</msg>
<status status="PASS" starttime="20201110 08:38:00.130" endtime="20201110 08:38:00.143"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:00.148" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201110 08:38:00.147" endtime="20201110 08:38:00.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:00.150" level="INFO">VALUE: [5.563899999999969e-05, 5.594499999999822e-05, 5.590299999999951e-05, 5.618100000000237e-05, 5.641699999999958e-05, 5.591699999999908e-05, 5.6041999999999204e-05, 5.561200000000002e-05, 5.630499999999955e-05, 5.58610000000008e-05, 5.5763999999999814e-05, 5.611099999999758e-05, 5.5930000000002644e-05, 5.580499999999905e-05, 5.6471999999998385e-05, 5.556900000000184e-05, 5.561100000000055e-05, 5.591699999999908e-05, 5.6305999999999023e-05, 5.6027999999999634e-05, 5.591699999999908e-05, 5.5791999999998954e-05, 5.563899999999969e-05, 5.619500000000194e-05, 5.5805999999998523e-05, 5.584699999999776e-05, 5.61809999999989e-05, 5.6291999999999454e-05, 5.5750000000000244e-05, 5.551300000000009e-05, 5.5679999999998925e-05, 5.611100000000105e-05, 5.5693999999998495e-05, 5.5750000000000244e-05, 5.630499999999955e-05, 5.5694000000001964e-05, 5.5929999999999175e-05, 5.6027999999999634e-05, 5.562500000000012e-05, 5.566699999999883e-05, 5.6319999999998593e-05, 5.561100000000055e-05, 5.640300000000001e-05, 5.5722000000001104e-05, 5.5986000000000924e-05, 5.588899999999994e-05, 5.559800000000045e-05, 5.590299999999951e-05, 5.565300000000273e-05, 5.620899999999804e-05]</msg>
<status status="PASS" starttime="20201110 08:38:00.149" endtime="20201110 08:38:00.151"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.144" endtime="20201110 08:38:00.151"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:00.154" endtime="20201110 08:38:00.155"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:00.157" endtime="20201110 08:38:00.176"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.156" endtime="20201110 08:38:00.177"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.152" endtime="20201110 08:38:00.177"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.786" endtime="20201110 08:38:00.178"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.785" endtime="20201110 08:38:00.178"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:00.187" endtime="20201110 08:38:00.205"></status>
</kw>
<msg timestamp="20201110 08:38:00.206" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:00.185" endtime="20201110 08:38:00.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:00.208" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:00.207" endtime="20201110 08:38:00.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:00.209" endtime="20201110 08:38:00.212"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.182" endtime="20201110 08:38:00.212"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.180" endtime="20201110 08:38:00.213"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:00.219" endtime="20201110 08:38:00.505"></status>
</kw>
<msg timestamp="20201110 08:38:00.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019644056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019701236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:00.218" endtime="20201110 08:38:00.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:00.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019644056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019701236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:00.510" endtime="20201110 08:38:00.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:00.518" endtime="20201110 08:38:00.520"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.215" endtime="20201110 08:38:00.520"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.213" endtime="20201110 08:38:00.521"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:00.525" level="INFO">${RESULT} = [{'time': 0.019701236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7180000000000425e-05, 'source_diff': 5.7180000000000425e-05}, {'time': 0.019767264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:00.522" endtime="20201110 08:38:00.525"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:00.539" level="INFO">${ACCURACY} = {'diff': [5.7180000000000425e-05, 5.7319999999999593e-05, 5.709699999999901e-05, 5.7235999999998705e-05, 5.743100000000015e-05, 5.6819999999999093e-05, 5.6555999999999274e-05, 5.7221999999999135e-05, ...</msg>
<status status="PASS" starttime="20201110 08:38:00.526" endtime="20201110 08:38:00.539"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:00.543" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201110 08:38:00.542" endtime="20201110 08:38:00.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:00.546" level="INFO">VALUE: [5.7180000000000425e-05, 5.7319999999999593e-05, 5.709699999999901e-05, 5.7235999999998705e-05, 5.743100000000015e-05, 5.6819999999999093e-05, 5.6555999999999274e-05, 5.7221999999999135e-05, 5.6791999999999954e-05, 5.663899999999722e-05, 5.7250000000001744e-05, 5.68610000000018e-05, 5.7249999999998274e-05, 5.736099999999883e-05, 5.7249999999998274e-05, 5.6707999999999065e-05, 5.738900000000144e-05, 5.706899999999987e-05, 5.65549999999998e-05, 5.73749999999984e-05, 5.6971999999998885e-05, 5.6778000000000384e-05, 5.666699999999983e-05, 5.6819999999999093e-05, 5.723700000000165e-05, 5.6736000000001674e-05, 5.734700000000273e-05, 5.7319999999999593e-05, 5.737500000000187e-05, 5.7319999999999593e-05, 5.666699999999983e-05, 5.656899999999937e-05, 5.712499999999815e-05, 5.733299999999969e-05, 5.6764000000000814e-05, 5.734699999999926e-05, 5.6985999999998455e-05, 5.706900000000334e-05, 5.706899999999987e-05, 5.6943999999999745e-05, 5.7222000000002604e-05, 5.732000000000306e-05, 5.712500000000162e-05, 5.661099999999808e-05, 5.7500000000001994e-05, 5.661099999999808e-05, 5.7499999999998525e-05, 5.736099999999883e-05, 5.7514000000001564e-05, 5.7055999999999774e-05]</msg>
<status status="PASS" starttime="20201110 08:38:00.544" endtime="20201110 08:38:00.546"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.540" endtime="20201110 08:38:00.547"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:00.549" endtime="20201110 08:38:00.550"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:00.553" endtime="20201110 08:38:00.572"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.551" endtime="20201110 08:38:00.573"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.548" endtime="20201110 08:38:00.573"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.179" endtime="20201110 08:38:00.573"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.178" endtime="20201110 08:38:00.573"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:00.582" endtime="20201110 08:38:00.601"></status>
</kw>
<msg timestamp="20201110 08:38:00.601" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:00.580" endtime="20201110 08:38:00.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:00.604" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:00.602" endtime="20201110 08:38:00.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:00.605" endtime="20201110 08:38:00.607"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.578" endtime="20201110 08:38:00.608"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.576" endtime="20201110 08:38:00.608"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:00.615" endtime="20201110 08:38:00.900"></status>
</kw>
<msg timestamp="20201110 08:38:00.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019610125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019667861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:00.613" endtime="20201110 08:38:00.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:00.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019610125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019667861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:00.904" endtime="20201110 08:38:00.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:00.913" endtime="20201110 08:38:00.914"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.610" endtime="20201110 08:38:00.915"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.609" endtime="20201110 08:38:00.915"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:00.919" level="INFO">${RESULT} = [{'time': 0.019667861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7735999999999205e-05, 'source_diff': 5.7735999999999205e-05}, {'time': 0.019736875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:00.916" endtime="20201110 08:38:00.920"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:00.934" level="INFO">${ACCURACY} = {'diff': [5.7735999999999205e-05, 5.836099999999983e-05, 5.7929999999997706e-05, 5.8179999999997956e-05, 5.761099999999908e-05, 5.765299999999779e-05, 5.80689999999974e-05, 5.822299999999961e-05, 5.81...</msg>
<status status="PASS" starttime="20201110 08:38:00.920" endtime="20201110 08:38:00.934"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:00.939" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201110 08:38:00.938" endtime="20201110 08:38:00.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:00.941" level="INFO">VALUE: [5.7735999999999205e-05, 5.836099999999983e-05, 5.7929999999997706e-05, 5.8179999999997956e-05, 5.761099999999908e-05, 5.765299999999779e-05, 5.80689999999974e-05, 5.822299999999961e-05, 5.819500000000047e-05, 5.8235999999999705e-05, 5.836099999999983e-05, 5.841700000000158e-05, 5.811099999999958e-05, 5.769499999999997e-05, 5.8236000000003174e-05, 5.761099999999908e-05, 5.808300000000044e-05, 5.770899999999954e-05, 5.848699999999943e-05, 5.7806000000000524e-05, 5.8499999999999525e-05, 5.755499999999733e-05, 5.786099999999933e-05, 5.831900000000112e-05, 5.8014000000002064e-05, 5.769499999999997e-05, 5.8499999999999525e-05, 5.7930000000001175e-05, 5.7971999999999885e-05, 5.81810000000009e-05, 5.834700000000026e-05, 5.76810000000004e-05, 5.797299999999936e-05, 5.816700000000133e-05, 5.756900000000037e-05, 5.7806000000000524e-05, 5.8042000000001204e-05, 5.818099999999743e-05, 5.812499999999915e-05, 5.7930000000001175e-05, 5.8235999999999705e-05, 5.836099999999983e-05, 5.808299999999697e-05, 5.831900000000112e-05, 5.8457999999997345e-05, 5.812499999999915e-05, 5.8527999999998664e-05, 5.838900000000244e-05, 5.831900000000112e-05, 5.7806000000000524e-05]</msg>
<status status="PASS" starttime="20201110 08:38:00.940" endtime="20201110 08:38:00.942"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.935" endtime="20201110 08:38:00.942"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:00.945" endtime="20201110 08:38:00.946"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:00.948" endtime="20201110 08:38:00.967"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.947" endtime="20201110 08:38:00.968"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.943" endtime="20201110 08:38:00.968"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.574" endtime="20201110 08:38:00.969"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.574" endtime="20201110 08:38:00.969"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:00.977" endtime="20201110 08:38:00.997"></status>
</kw>
<msg timestamp="20201110 08:38:00.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:00.976" endtime="20201110 08:38:00.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:01.000" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:00.999" endtime="20201110 08:38:01.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:01.001" endtime="20201110 08:38:01.004"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.973" endtime="20201110 08:38:01.005"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.971" endtime="20201110 08:38:01.005"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:01.011" endtime="20201110 08:38:01.298"></status>
</kw>
<msg timestamp="20201110 08:38:01.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019650833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019709403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:01.010" endtime="20201110 08:38:01.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:01.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019650833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019709403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:01.302" endtime="20201110 08:38:01.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:01.311" endtime="20201110 08:38:01.312"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.007" endtime="20201110 08:38:01.313"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.006" endtime="20201110 08:38:01.313"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:01.317" level="INFO">${RESULT} = [{'time': 0.019709403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8570000000000844e-05, 'source_diff': 5.8570000000000844e-05}, {'time': 0.019779403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:01.314" endtime="20201110 08:38:01.318"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:01.331" level="INFO">${ACCURACY} = {'diff': [5.8570000000000844e-05, 5.893100000000165e-05, 5.9250000000000275e-05, 5.8777999999998914e-05, 5.9250000000000275e-05, 5.898699999999993e-05, 5.9306000000002024e-05, 5.8637999999999746e-05, ...</msg>
<status status="PASS" starttime="20201110 08:38:01.318" endtime="20201110 08:38:01.331"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:01.336" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201110 08:38:01.335" endtime="20201110 08:38:01.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:01.338" level="INFO">VALUE: [5.8570000000000844e-05, 5.893100000000165e-05, 5.9250000000000275e-05, 5.8777999999998914e-05, 5.9250000000000275e-05, 5.898699999999993e-05, 5.9306000000002024e-05, 5.8637999999999746e-05, 5.8527999999998664e-05, 5.8736000000000205e-05, 5.877699999999944e-05, 5.930499999999908e-05, 5.905499999999883e-05, 5.8749999999999775e-05, 5.9193999999998526e-05, 5.861100000000008e-05, 5.9179999999998956e-05, 5.9250000000000275e-05, 5.9277999999999414e-05, 5.936099999999736e-05, 5.9056000000001774e-05, 5.861099999999661e-05, 5.8820000000001094e-05, 5.8584000000000414e-05, 5.9320000000001594e-05, 5.890299999999904e-05, 5.9320000000001594e-05, 5.858299999999747e-05, 5.912500000000015e-05, 5.88749999999999e-05, 5.909700000000101e-05, 5.904099999999926e-05, 5.881899999999815e-05, 5.8749999999999775e-05, 5.912500000000015e-05, 5.934699999999779e-05, 5.9250000000000275e-05, 5.91810000000019e-05, 5.9305999999998554e-05, 5.9055999999998304e-05, 5.9250000000000275e-05, 5.9000000000000025e-05, 5.863900000000269e-05, 5.9334000000001164e-05, 5.9083999999997444e-05, 5.863899999999922e-05, 5.9277999999999414e-05, 5.943100000000215e-05, 5.8694000000001495e-05, 5.8749999999999775e-05]</msg>
<status status="PASS" starttime="20201110 08:38:01.337" endtime="20201110 08:38:01.358"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.332" endtime="20201110 08:38:01.359"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:01.361" endtime="20201110 08:38:01.363"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:01.365" endtime="20201110 08:38:01.384"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.363" endtime="20201110 08:38:01.385"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.360" endtime="20201110 08:38:01.385"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.970" endtime="20201110 08:38:01.385"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.969" endtime="20201110 08:38:01.386"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:01.394" endtime="20201110 08:38:01.414"></status>
</kw>
<msg timestamp="20201110 08:38:01.414" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:01.393" endtime="20201110 08:38:01.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:01.417" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:01.415" endtime="20201110 08:38:01.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:01.418" endtime="20201110 08:38:01.420"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.390" endtime="20201110 08:38:01.421"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.388" endtime="20201110 08:38:01.421"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:01.428" endtime="20201110 08:38:01.713"></status>
</kw>
<msg timestamp="20201110 08:38:01.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019619, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019679069, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:38:01.426" endtime="20201110 08:38:01.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:01.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019619, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019679069, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:38:01.717" endtime="20201110 08:38:01.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:01.725" endtime="20201110 08:38:01.727"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.424" endtime="20201110 08:38:01.728"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.422" endtime="20201110 08:38:01.728"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:01.732" level="INFO">${RESULT} = [{'time': 0.019679069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.00689999999994e-05, 'source_diff': 6.00689999999994e-05}, {'time': 0.019749125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:38:01.729" endtime="20201110 08:38:01.732"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:01.746" level="INFO">${ACCURACY} = {'diff': [6.00689999999994e-05, 5.95689999999989e-05, 6.004100000000026e-05, 5.986100000000133e-05, 6.0499999999998055e-05, 6.030500000000008e-05, 5.9750000000000775e-05, 5.991699999999961e-05, 5.9750...</msg>
<status status="PASS" starttime="20201110 08:38:01.733" endtime="20201110 08:38:01.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:01.750" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201110 08:38:01.749" endtime="20201110 08:38:01.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:01.753" level="INFO">VALUE: [6.00689999999994e-05, 5.95689999999989e-05, 6.004100000000026e-05, 5.986100000000133e-05, 6.0499999999998055e-05, 6.030500000000008e-05, 5.9750000000000775e-05, 5.991699999999961e-05, 5.9750000000000775e-05, 5.965299999999979e-05, 6.037499999999793e-05, 5.9971999999998415e-05, 5.96949999999985e-05, 6.036099999999836e-05, 5.9736000000001205e-05, 5.9805999999999054e-05, 6.0014000000000595e-05, 6.0278000000000415e-05, 5.998700000000093e-05, 5.95689999999989e-05, 6.0471999999998916e-05, 6.0486000000001955e-05, 5.9985999999997985e-05, 6.0264000000000845e-05, 6.011100000000158e-05, 5.962500000000065e-05, 5.9736000000001205e-05, 6.0221999999998665e-05, 5.968099999999893e-05, 6.013900000000072e-05, 6.0013999999997125e-05, 5.968099999999893e-05, 5.98750000000009e-05, 6.0485999999998485e-05, 5.980500000000305e-05, 5.993099999999918e-05, 5.9848000000001234e-05, 5.958299999999847e-05, 6.0486000000001955e-05, 5.9694000000002495e-05, 5.9929999999999706e-05, 6.0471999999998916e-05, 5.979100000000001e-05, 5.959699999999804e-05, 5.966699999999936e-05, 5.961100000000108e-05, 5.966699999999936e-05, 6.0013999999997125e-05, 6.0069999999998874e-05, 6.0236000000001705e-05]</msg>
<status status="PASS" starttime="20201110 08:38:01.752" endtime="20201110 08:38:01.754"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.747" endtime="20201110 08:38:01.754"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:01.757" endtime="20201110 08:38:01.758"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:01.760" endtime="20201110 08:38:01.779"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.758" endtime="20201110 08:38:01.780"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.755" endtime="20201110 08:38:01.780"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.386" endtime="20201110 08:38:01.781"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.386" endtime="20201110 08:38:01.781"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:01.789" endtime="20201110 08:38:01.808"></status>
</kw>
<msg timestamp="20201110 08:38:01.808" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:01.788" endtime="20201110 08:38:01.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:01.811" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:01.809" endtime="20201110 08:38:01.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:01.812" endtime="20201110 08:38:01.814"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.785" endtime="20201110 08:38:01.815"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.783" endtime="20201110 08:38:01.815"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:01.822" endtime="20201110 08:38:02.107"></status>
</kw>
<msg timestamp="20201110 08:38:02.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019611986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019672931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:01.820" endtime="20201110 08:38:02.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:02.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019611986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019672931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:02.112" endtime="20201110 08:38:02.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:02.121" endtime="20201110 08:38:02.122"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.818" endtime="20201110 08:38:02.123"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.816" endtime="20201110 08:38:02.123"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:02.128" level="INFO">${RESULT} = [{'time': 0.019672931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.094499999999975e-05, 'source_diff': 6.094499999999975e-05}, {'time': 0.019745917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:02.124" endtime="20201110 08:38:02.128"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:02.142" level="INFO">${ACCURACY} = {'diff': [6.094499999999975e-05, 6.0834000000002664e-05, 6.065300000000079e-05, 6.087499999999843e-05, 6.06810000000034e-05, 6.1014000000001595e-05, 6.0944000000000276e-05, 6.077700000000144e-05, 6.09...</msg>
<status status="PASS" starttime="20201110 08:38:02.129" endtime="20201110 08:38:02.142"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:02.146" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201110 08:38:02.145" endtime="20201110 08:38:02.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:02.149" level="INFO">VALUE: [6.094499999999975e-05, 6.0834000000002664e-05, 6.065300000000079e-05, 6.087499999999843e-05, 6.06810000000034e-05, 6.1014000000001595e-05, 6.0944000000000276e-05, 6.077700000000144e-05, 6.0930000000000706e-05, 6.143100000000068e-05, 6.084699999999929e-05, 6.116599999999792e-05, 6.0999999999998555e-05, 6.0750000000001775e-05, 6.141700000000111e-05, 6.111099999999911e-05, 6.148599999999949e-05, 6.136099999999936e-05, 6.066700000000036e-05, 6.152700000000219e-05, 6.0957999999999846e-05, 6.109800000000248e-05, 6.132000000000012e-05, 6.127800000000141e-05, 6.0694000000000026e-05, 6.10690000000004e-05, 6.122199999999967e-05, 6.061099999999861e-05, 6.0749999999998305e-05, 6.0680000000000456e-05, 6.0930000000000706e-05, 6.136099999999936e-05, 6.0971999999999416e-05, 6.1014000000001595e-05, 6.143100000000068e-05, 6.0806000000000054e-05, 6.138900000000197e-05, 6.0792000000000485e-05, 6.072299999999864e-05, 6.112500000000215e-05, 6.112500000000215e-05, 6.13889999999985e-05, 6.0736000000002205e-05, 6.070899999999907e-05, 6.061099999999861e-05, 6.12360000000027e-05, 6.05689999999999e-05, 6.055500000000033e-05, 6.0986000000002455e-05, 6.118000000000096e-05]</msg>
<status status="PASS" starttime="20201110 08:38:02.148" endtime="20201110 08:38:02.150"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.143" endtime="20201110 08:38:02.150"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:02.153" endtime="20201110 08:38:02.154"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:02.156" endtime="20201110 08:38:02.176"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.155" endtime="20201110 08:38:02.176"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.151" endtime="20201110 08:38:02.177"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.782" endtime="20201110 08:38:02.177"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.781" endtime="20201110 08:38:02.177"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:02.186" endtime="20201110 08:38:02.209"></status>
</kw>
<msg timestamp="20201110 08:38:02.210" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:02.185" endtime="20201110 08:38:02.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:02.215" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:02.212" endtime="20201110 08:38:02.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:02.218" endtime="20201110 08:38:02.223"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.182" endtime="20201110 08:38:02.224"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.180" endtime="20201110 08:38:02.226"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:02.240" endtime="20201110 08:38:02.536"></status>
</kw>
<msg timestamp="20201110 08:38:02.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020265444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020327583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:02.237" endtime="20201110 08:38:02.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:02.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020265444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020327583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:02.540" endtime="20201110 08:38:02.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:02.549" endtime="20201110 08:38:02.551"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.231" endtime="20201110 08:38:02.551"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.227" endtime="20201110 08:38:02.552"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:02.556" level="INFO">${RESULT} = [{'time': 0.020327583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.213899999999925e-05, 'source_diff': 6.213899999999925e-05}, {'time': 0.020400569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:02.552" endtime="20201110 08:38:02.556"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:02.571" level="INFO">${ACCURACY} = {'diff': [6.213899999999925e-05, 6.172200000000017e-05, 6.248600000000049e-05, 6.245800000000135e-05, 6.201399999999913e-05, 6.248599999999702e-05, 6.198599999999999e-05, 6.165300000000179e-05, 6.2388...</msg>
<status status="PASS" starttime="20201110 08:38:02.557" endtime="20201110 08:38:02.571"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:02.576" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201110 08:38:02.575" endtime="20201110 08:38:02.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:02.578" level="INFO">VALUE: [6.213899999999925e-05, 6.172200000000017e-05, 6.248600000000049e-05, 6.245800000000135e-05, 6.201399999999913e-05, 6.248599999999702e-05, 6.198599999999999e-05, 6.165300000000179e-05, 6.23889999999995e-05, 6.209700000000054e-05, 6.226400000000284e-05, 6.212499999999968e-05, 6.180600000000105e-05, 6.190299999999857e-05, 6.165300000000179e-05, 6.17499999999993e-05, 6.166700000000136e-05, 6.168000000000146e-05, 6.170900000000007e-05, 6.238900000000297e-05, 6.209700000000054e-05, 6.17499999999993e-05, 6.220799999999763e-05, 6.211100000000011e-05, 6.15690000000009e-05, 6.180600000000105e-05, 6.229200000000198e-05, 6.157000000000037e-05, 6.154199999999777e-05, 6.190300000000204e-05, 6.240300000000254e-05, 6.20560000000013e-05, 6.184799999999976e-05, 6.168099999999746e-05, 6.180600000000105e-05, 6.241600000000264e-05, 6.168099999999746e-05, 6.154199999999777e-05, 6.186099999999986e-05, 6.234700000000079e-05, 6.197199999999695e-05, 6.177799999999845e-05, 6.209700000000054e-05, 6.240299999999907e-05, 6.173599999999974e-05, 6.191700000000161e-05, 6.222200000000067e-05, 6.168100000000093e-05, 6.193099999999771e-05, 6.166700000000136e-05]</msg>
<status status="PASS" starttime="20201110 08:38:02.577" endtime="20201110 08:38:02.579"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.572" endtime="20201110 08:38:02.580"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:02.582" endtime="20201110 08:38:02.583"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:02.586" endtime="20201110 08:38:02.605"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.584" endtime="20201110 08:38:02.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.580" endtime="20201110 08:38:02.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.178" endtime="20201110 08:38:02.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.178" endtime="20201110 08:38:02.607"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:02.616" endtime="20201110 08:38:02.635"></status>
</kw>
<msg timestamp="20201110 08:38:02.635" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:02.614" endtime="20201110 08:38:02.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:02.638" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:02.636" endtime="20201110 08:38:02.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:02.639" endtime="20201110 08:38:02.642"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.611" endtime="20201110 08:38:02.642"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.609" endtime="20201110 08:38:02.643"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:02.649" endtime="20201110 08:38:02.936"></status>
</kw>
<msg timestamp="20201110 08:38:02.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020141694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020204236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:02.648" endtime="20201110 08:38:02.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:02.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020141694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020204236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:02.940" endtime="20201110 08:38:02.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:02.949" endtime="20201110 08:38:02.950"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.645" endtime="20201110 08:38:02.951"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.643" endtime="20201110 08:38:02.951"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:02.956" level="INFO">${RESULT} = [{'time': 0.020204236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.254199999999877e-05, 'source_diff': 6.254199999999877e-05}, {'time': 0.02027725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:38:02.952" endtime="20201110 08:38:02.956"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:02.970" level="INFO">${ACCURACY} = {'diff': [6.254199999999877e-05, 6.34439999999993e-05, 6.261099999999714e-05, 6.330499999999961e-05, 6.334700000000179e-05, 6.268100000000193e-05, 6.277799999999945e-05, 6.254200000000223e-05, 6.27639...</msg>
<status status="PASS" starttime="20201110 08:38:02.957" endtime="20201110 08:38:02.970"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:02.975" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201110 08:38:02.973" endtime="20201110 08:38:02.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:02.977" level="INFO">VALUE: [6.254199999999877e-05, 6.34439999999993e-05, 6.261099999999714e-05, 6.330499999999961e-05, 6.334700000000179e-05, 6.268100000000193e-05, 6.277799999999945e-05, 6.254200000000223e-05, 6.276399999999988e-05, 6.337499999999746e-05, 6.3195000000002e-05, 6.266599999999942e-05, 6.312500000000068e-05, 6.28340000000012e-05, 6.287500000000043e-05, 6.334800000000126e-05, 6.269400000000203e-05, 6.259700000000104e-05, 6.267999999999899e-05, 6.268000000000246e-05, 6.276399999999988e-05, 6.273600000000074e-05, 6.336100000000136e-05, 6.33890000000005e-05, 6.32630000000009e-05, 6.347199999999845e-05, 6.313900000000025e-05, 6.273600000000074e-05, 6.25560000000018e-05, 6.330599999999909e-05, 6.257000000000137e-05, 6.268099999999846e-05, 6.317999999999949e-05, 6.347299999999792e-05, 6.287500000000043e-05, 6.268000000000246e-05, 6.337499999999746e-05, 6.279100000000301e-05, 6.351400000000063e-05, 6.262500000000018e-05, 6.267999999999899e-05, 6.262500000000018e-05, 6.27080000000016e-05, 6.30560000000023e-05, 6.280499999999911e-05, 6.30560000000023e-05, 6.28340000000012e-05, 6.259699999999757e-05, 6.3195000000002e-05, 6.256899999999843e-05]</msg>
<status status="PASS" starttime="20201110 08:38:02.976" endtime="20201110 08:38:02.978"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.971" endtime="20201110 08:38:02.978"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:02.981" endtime="20201110 08:38:02.982"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:02.984" endtime="20201110 08:38:03.004"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.983" endtime="20201110 08:38:03.004"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.979" endtime="20201110 08:38:03.005"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.608" endtime="20201110 08:38:03.005"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.607" endtime="20201110 08:38:03.005"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.014" endtime="20201110 08:38:03.034"></status>
</kw>
<msg timestamp="20201110 08:38:03.034" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:03.013" endtime="20201110 08:38:03.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:03.037" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:03.035" endtime="20201110 08:38:03.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.038" endtime="20201110 08:38:03.041"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.010" endtime="20201110 08:38:03.041"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.008" endtime="20201110 08:38:03.042"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.048" endtime="20201110 08:38:03.334"></status>
</kw>
<msg timestamp="20201110 08:38:03.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020352889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020417097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:03.047" endtime="20201110 08:38:03.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:03.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020352889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020417097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:03.338" endtime="20201110 08:38:03.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.347" endtime="20201110 08:38:03.349"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.044" endtime="20201110 08:38:03.349"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.042" endtime="20201110 08:38:03.350"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:03.354" level="INFO">${RESULT} = [{'time': 0.020417097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.420799999999963e-05, 'source_diff': 6.420799999999963e-05}, {'time': 0.020490083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:03.351" endtime="20201110 08:38:03.354"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:03.368" level="INFO">${ACCURACY} = {'diff': [6.420799999999963e-05, 6.399999999999809e-05, 6.411099999999864e-05, 6.383300000000272e-05, 6.447199999999945e-05, 6.409700000000254e-05, 6.430600000000009e-05, 6.368099999999946e-05, 6.3792...</msg>
<status status="PASS" starttime="20201110 08:38:03.355" endtime="20201110 08:38:03.369"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:03.373" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201110 08:38:03.372" endtime="20201110 08:38:03.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:03.376" level="INFO">VALUE: [6.420799999999963e-05, 6.399999999999809e-05, 6.411099999999864e-05, 6.383300000000272e-05, 6.447199999999945e-05, 6.409700000000254e-05, 6.430600000000009e-05, 6.368099999999946e-05, 6.379200000000002e-05, 6.434700000000279e-05, 6.37219999999987e-05, 6.373599999999827e-05, 6.393099999999971e-05, 6.418099999999996e-05, 6.362500000000118e-05, 6.3889000000001e-05, 6.363899999999728e-05, 6.441600000000117e-05, 6.401399999999766e-05, 6.412499999999821e-05, 6.430500000000061e-05, 6.419400000000006e-05, 6.430499999999714e-05, 6.431900000000018e-05, 6.369400000000303e-05, 6.423599999999877e-05, 6.405599999999984e-05, 6.441700000000064e-05, 6.362500000000118e-05, 6.366699999999989e-05, 6.397300000000189e-05, 6.451300000000215e-05, 6.407000000000287e-05, 6.395899999999885e-05, 6.372299999999817e-05, 6.422299999999867e-05, 6.443000000000074e-05, 6.366600000000042e-05, 6.39439999999998e-05, 6.417999999999702e-05, 6.391700000000014e-05, 6.386100000000186e-05, 6.395799999999938e-05, 6.398599999999852e-05, 6.369499999999903e-05, 6.42219999999992e-05, 6.419499999999953e-05, 6.412499999999821e-05, 6.437500000000193e-05, 6.444499999999978e-05]</msg>
<status status="PASS" starttime="20201110 08:38:03.374" endtime="20201110 08:38:03.376"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.369" endtime="20201110 08:38:03.377"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.379" endtime="20201110 08:38:03.381"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:03.383" endtime="20201110 08:38:03.402"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.381" endtime="20201110 08:38:03.403"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.378" endtime="20201110 08:38:03.403"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.006" endtime="20201110 08:38:03.404"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.006" endtime="20201110 08:38:03.404"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.413" endtime="20201110 08:38:03.432"></status>
</kw>
<msg timestamp="20201110 08:38:03.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:03.411" endtime="20201110 08:38:03.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:03.435" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:03.433" endtime="20201110 08:38:03.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.436" endtime="20201110 08:38:03.438"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.409" endtime="20201110 08:38:03.439"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.406" endtime="20201110 08:38:03.440"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.446" endtime="20201110 08:38:03.732"></status>
</kw>
<msg timestamp="20201110 08:38:03.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020297861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020362792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:03.445" endtime="20201110 08:38:03.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:03.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020297861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020362792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:03.736" endtime="20201110 08:38:03.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.745" endtime="20201110 08:38:03.747"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.442" endtime="20201110 08:38:03.747"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.440" endtime="20201110 08:38:03.748"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:03.752" level="INFO">${RESULT} = [{'time': 0.020362792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.493100000000071e-05, 'source_diff': 6.493100000000071e-05}, {'time': 0.020436792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:03.748" endtime="20201110 08:38:03.752"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:03.766" level="INFO">${ACCURACY} = {'diff': [6.493100000000071e-05, 6.527799999999848e-05, 6.512499999999921e-05, 6.466700000000089e-05, 6.512499999999921e-05, 6.541600000000217e-05, 6.504099999999832e-05, 6.518000000000149e-05, 6.4860...</msg>
<status status="PASS" starttime="20201110 08:38:03.753" endtime="20201110 08:38:03.767"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:03.771" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201110 08:38:03.770" endtime="20201110 08:38:03.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:03.774" level="INFO">VALUE: [6.493100000000071e-05, 6.527799999999848e-05, 6.512499999999921e-05, 6.466700000000089e-05, 6.512499999999921e-05, 6.541600000000217e-05, 6.504099999999832e-05, 6.518000000000149e-05, 6.486099999999939e-05, 6.487499999999896e-05, 6.4583e-05, 6.552799999999873e-05, 6.506900000000093e-05, 6.529199999999805e-05, 6.484699999999982e-05, 6.498599999999952e-05, 6.523599999999977e-05, 6.487500000000243e-05, 6.50419999999978e-05, 6.549999999999959e-05, 6.523599999999977e-05, 6.504200000000127e-05, 6.479199999999755e-05, 6.551399999999916e-05, 6.49440000000008e-05, 6.483300000000025e-05, 6.499999999999909e-05, 6.531900000000118e-05, 6.534700000000032e-05, 6.479100000000154e-05, 6.486099999999939e-05, 6.543000000000174e-05, 6.511199999999912e-05, 6.536099999999989e-05, 6.461099999999914e-05, 6.468100000000046e-05, 6.547200000000045e-05, 6.523599999999977e-05, 6.530600000000109e-05, 6.463900000000175e-05, 6.486099999999939e-05, 6.516699999999792e-05, 6.455600000000034e-05, 6.462500000000218e-05, 6.523599999999977e-05, 6.49440000000008e-05, 6.468000000000099e-05, 6.466599999999795e-05, 6.47639999999984e-05, 6.499999999999909e-05]</msg>
<status status="PASS" starttime="20201110 08:38:03.772" endtime="20201110 08:38:03.775"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.767" endtime="20201110 08:38:03.775"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.777" endtime="20201110 08:38:03.779"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:03.781" endtime="20201110 08:38:03.800"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.779" endtime="20201110 08:38:03.801"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.776" endtime="20201110 08:38:03.802"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.405" endtime="20201110 08:38:03.802"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.404" endtime="20201110 08:38:03.802"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.811" endtime="20201110 08:38:03.831"></status>
</kw>
<msg timestamp="20201110 08:38:03.831" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:03.809" endtime="20201110 08:38:03.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:03.834" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:03.832" endtime="20201110 08:38:03.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.835" endtime="20201110 08:38:03.837"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.807" endtime="20201110 08:38:03.838"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.805" endtime="20201110 08:38:03.838"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.845" endtime="20201110 08:38:04.132"></status>
</kw>
<msg timestamp="20201110 08:38:04.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020223611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020289417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:03.844" endtime="20201110 08:38:04.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:04.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020223611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020289417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:04.136" endtime="20201110 08:38:04.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:04.145" endtime="20201110 08:38:04.147"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.841" endtime="20201110 08:38:04.147"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.839" endtime="20201110 08:38:04.148"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:04.152" level="INFO">${RESULT} = [{'time': 0.020289417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.580600000000159e-05, 'source_diff': 6.580600000000159e-05}, {'time': 0.020364431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:04.148" endtime="20201110 08:38:04.152"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:04.167" level="INFO">${ACCURACY} = {'diff': [6.580600000000159e-05, 6.625000000000034e-05, 6.582000000000116e-05, 6.64440000000023e-05, 6.611100000000064e-05, 6.59159999999992e-05, 6.598600000000052e-05, 6.62639999999999e-05, 6.5847000...</msg>
<status status="PASS" starttime="20201110 08:38:04.153" endtime="20201110 08:38:04.167"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:04.172" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201110 08:38:04.171" endtime="20201110 08:38:04.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:04.174" level="INFO">VALUE: [6.580600000000159e-05, 6.625000000000034e-05, 6.582000000000116e-05, 6.64440000000023e-05, 6.611100000000064e-05, 6.59159999999992e-05, 6.598600000000052e-05, 6.62639999999999e-05, 6.584700000000082e-05, 6.594399999999834e-05, 6.55280000000022e-05, 6.572199999999723e-05, 6.643099999999874e-05, 6.616700000000239e-05, 6.637500000000046e-05, 6.616699999999892e-05, 6.618099999999849e-05, 6.627799999999948e-05, 6.593099999999824e-05, 6.558299999999753e-05, 6.637500000000046e-05, 6.552699999999925e-05, 6.612500000000021e-05, 6.587499999999996e-05, 6.57769999999995e-05, 6.601399999999966e-05, 6.636100000000089e-05, 6.587499999999996e-05, 6.647200000000145e-05, 6.633399999999776e-05, 6.644500000000178e-05, 6.62220000000012e-05, 6.615299999999935e-05, 6.611100000000064e-05, 6.57220000000007e-05, 6.580600000000159e-05, 6.57090000000006e-05, 6.648700000000049e-05, 6.632000000000166e-05, 6.593099999999824e-05, 6.586100000000039e-05, 6.586099999999692e-05, 6.587499999999996e-05, 6.601399999999966e-05, 6.591700000000214e-05, 6.64029999999996e-05, 6.572300000000017e-05, 6.57639999999994e-05, 6.562499999999971e-05, 6.64029999999996e-05]</msg>
<status status="PASS" starttime="20201110 08:38:04.173" endtime="20201110 08:38:04.175"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.168" endtime="20201110 08:38:04.176"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:04.178" endtime="20201110 08:38:04.179"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:04.182" endtime="20201110 08:38:04.201"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.180" endtime="20201110 08:38:04.202"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.176" endtime="20201110 08:38:04.202"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.803" endtime="20201110 08:38:04.203"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.802" endtime="20201110 08:38:04.203"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:04.212" endtime="20201110 08:38:04.231"></status>
</kw>
<msg timestamp="20201110 08:38:04.231" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:04.210" endtime="20201110 08:38:04.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:04.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:04.232" endtime="20201110 08:38:04.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:04.235" endtime="20201110 08:38:04.238"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.207" endtime="20201110 08:38:04.238"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.205" endtime="20201110 08:38:04.239"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:04.245" endtime="20201110 08:38:04.531"></status>
</kw>
<msg timestamp="20201110 08:38:04.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020291042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020357972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:04.244" endtime="20201110 08:38:04.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:04.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020291042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020357972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:04.536" endtime="20201110 08:38:04.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:04.545" endtime="20201110 08:38:04.547"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.241" endtime="20201110 08:38:04.548"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.239" endtime="20201110 08:38:04.548"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:04.552" level="INFO">${RESULT} = [{'time': 0.020357972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.692999999999977e-05, 'source_diff': 6.692999999999977e-05}, {'time': 0.020433986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:04.549" endtime="20201110 08:38:04.553"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:04.566" level="INFO">${ACCURACY} = {'diff': [6.692999999999977e-05, 6.748600000000202e-05, 6.692999999999977e-05, 6.687499999999749e-05, 6.745900000000235e-05, 6.679199999999955e-05, 6.725000000000134e-05, 6.679199999999955e-05, 6.7360...</msg>
<status status="PASS" starttime="20201110 08:38:04.553" endtime="20201110 08:38:04.567"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:04.576" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201110 08:38:04.575" endtime="20201110 08:38:04.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:04.579" level="INFO">VALUE: [6.692999999999977e-05, 6.748600000000202e-05, 6.692999999999977e-05, 6.687499999999749e-05, 6.745900000000235e-05, 6.679199999999955e-05, 6.725000000000134e-05, 6.679199999999955e-05, 6.736099999999842e-05, 6.693100000000271e-05, 6.697299999999795e-05, 6.701400000000066e-05, 6.68480000000013e-05, 6.668100000000246e-05, 6.666599999999995e-05, 6.698599999999805e-05, 6.743000000000027e-05, 6.731899999999971e-05, 6.750000000000159e-05, 6.655599999999887e-05, 6.72359999999983e-05, 6.736099999999842e-05, 6.668100000000246e-05, 6.725000000000134e-05, 6.652799999999973e-05, 6.698600000000152e-05, 6.699999999999762e-05, 6.747200000000245e-05, 6.713900000000078e-05, 6.722199999999873e-05, 6.680499999999964e-05, 6.655499999999939e-05, 6.692999999999977e-05, 6.744399999999984e-05, 6.67770000000005e-05, 6.661100000000114e-05, 6.720800000000263e-05, 6.659700000000157e-05, 6.65419999999993e-05, 6.751400000000116e-05, 6.708299999999903e-05, 6.723600000000177e-05, 6.701400000000066e-05, 6.741700000000017e-05, 6.652799999999973e-05, 6.730600000000309e-05, 6.750000000000159e-05, 6.67640000000004e-05, 6.6583000000002e-05, 6.684699999999835e-05]</msg>
<status status="PASS" starttime="20201110 08:38:04.578" endtime="20201110 08:38:04.580"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.567" endtime="20201110 08:38:04.580"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:04.583" endtime="20201110 08:38:04.584"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:04.586" endtime="20201110 08:38:04.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.585" endtime="20201110 08:38:04.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.581" endtime="20201110 08:38:04.607"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.204" endtime="20201110 08:38:04.607"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.203" endtime="20201110 08:38:04.607"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:04.616" endtime="20201110 08:38:04.636"></status>
</kw>
<msg timestamp="20201110 08:38:04.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:04.615" endtime="20201110 08:38:04.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:04.639" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:04.638" endtime="20201110 08:38:04.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:04.640" endtime="20201110 08:38:04.643"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.612" endtime="20201110 08:38:04.644"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.610" endtime="20201110 08:38:04.644"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:04.651" endtime="20201110 08:38:04.937"></status>
</kw>
<msg timestamp="20201110 08:38:04.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020411431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020479153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:04.649" endtime="20201110 08:38:04.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:04.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020411431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020479153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:04.942" endtime="20201110 08:38:04.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:04.950" endtime="20201110 08:38:04.952"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.646" endtime="20201110 08:38:04.952"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.645" endtime="20201110 08:38:04.953"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:04.957" level="INFO">${RESULT} = [{'time': 0.020479153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.772199999999923e-05, 'source_diff': 6.772199999999923e-05}, {'time': 0.020556153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:04.954" endtime="20201110 08:38:04.957"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:04.971" level="INFO">${ACCURACY} = {'diff': [6.772199999999923e-05, 6.80420000000008e-05, 6.804199999999733e-05, 6.840299999999813e-05, 6.800000000000209e-05, 6.791700000000067e-05, 6.752700000000125e-05, 6.784700000000282e-05, 6.82640...</msg>
<status status="PASS" starttime="20201110 08:38:04.958" endtime="20201110 08:38:04.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:04.975" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201110 08:38:04.974" endtime="20201110 08:38:04.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:04.978" level="INFO">VALUE: [6.772199999999923e-05, 6.80420000000008e-05, 6.804199999999733e-05, 6.840299999999813e-05, 6.800000000000209e-05, 6.791700000000067e-05, 6.752700000000125e-05, 6.784700000000282e-05, 6.82640000000019e-05, 6.772199999999923e-05, 6.801399999999819e-05, 6.794399999999687e-05, 6.838899999999856e-05, 6.848599999999955e-05, 6.850000000000259e-05, 6.775000000000184e-05, 6.805600000000037e-05, 6.830600000000062e-05, 6.769499999999956e-05, 6.838900000000203e-05, 6.848699999999902e-05, 6.837500000000246e-05, 6.77640000000014e-05, 6.770799999999966e-05, 6.762499999999824e-05, 6.806900000000046e-05, 6.804100000000132e-05, 6.79160000000012e-05, 6.797199999999948e-05, 6.797299999999895e-05, 6.784699999999935e-05, 6.77090000000026e-05, 6.824999999999887e-05, 6.773600000000227e-05, 6.783299999999978e-05, 6.851400000000216e-05, 6.788899999999806e-05, 6.802800000000123e-05, 6.823700000000224e-05, 6.798599999999905e-05, 6.836099999999942e-05, 6.766600000000095e-05, 6.848599999999955e-05, 6.805600000000037e-05, 6.756899999999996e-05, 6.817999999999755e-05, 6.798599999999905e-05, 6.822199999999973e-05, 6.830600000000062e-05, 6.773600000000227e-05]</msg>
<status status="PASS" starttime="20201110 08:38:04.976" endtime="20201110 08:38:04.979"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.972" endtime="20201110 08:38:04.979"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:04.982" endtime="20201110 08:38:04.983"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:04.985" endtime="20201110 08:38:05.004"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.983" endtime="20201110 08:38:05.005"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.980" endtime="20201110 08:38:05.005"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.608" endtime="20201110 08:38:05.006"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.608" endtime="20201110 08:38:05.006"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.014" endtime="20201110 08:38:05.034"></status>
</kw>
<msg timestamp="20201110 08:38:05.034" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:05.013" endtime="20201110 08:38:05.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:05.037" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:05.035" endtime="20201110 08:38:05.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.038" endtime="20201110 08:38:05.040"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.010" endtime="20201110 08:38:05.041"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.008" endtime="20201110 08:38:05.041"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.048" endtime="20201110 08:38:05.347"></status>
</kw>
<msg timestamp="20201110 08:38:05.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019725444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019794986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:05.046" endtime="20201110 08:38:05.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:05.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019725444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019794986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:05.351" endtime="20201110 08:38:05.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.360" endtime="20201110 08:38:05.362"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.044" endtime="20201110 08:38:05.362"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.042" endtime="20201110 08:38:05.363"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:05.367" level="INFO">${RESULT} = [{'time': 0.019794986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.954199999999883e-05, 'source_diff': 6.954199999999883e-05}, {'time': 0.019873958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:05.363" endtime="20201110 08:38:05.367"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:05.380" level="INFO">${ACCURACY} = {'diff': [6.954199999999883e-05, 6.866600000000195e-05, 6.94299999999988e-05, 6.911100000000017e-05, 6.89160000000022e-05, 6.947200000000098e-05, 6.950000000000012e-05, 6.915300000000235e-05, 6.862499...</msg>
<status status="PASS" starttime="20201110 08:38:05.368" endtime="20201110 08:38:05.381"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:05.385" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201110 08:38:05.384" endtime="20201110 08:38:05.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:05.387" level="INFO">VALUE: [6.954199999999883e-05, 6.866600000000195e-05, 6.94299999999988e-05, 6.911100000000017e-05, 6.89160000000022e-05, 6.947200000000098e-05, 6.950000000000012e-05, 6.915300000000235e-05, 6.862499999999924e-05, 6.934700000000085e-05, 6.886099999999992e-05, 6.919500000000106e-05, 6.857000000000044e-05, 6.926399999999944e-05, 6.879199999999808e-05, 6.913799999999984e-05, 6.933300000000128e-05, 6.897200000000048e-05, 6.850000000000259e-05, 6.952799999999926e-05, 6.858300000000053e-05, 6.913899999999931e-05, 6.924999999999987e-05, 6.859699999999663e-05, 6.865300000000185e-05, 6.926399999999944e-05, 6.880600000000112e-05, 6.855600000000087e-05, 6.926399999999944e-05, 6.897200000000048e-05, 6.879199999999808e-05, 6.899999999999962e-05, 6.936100000000042e-05, 6.899999999999962e-05, 6.911100000000017e-05, 6.945899999999741e-05, 6.887499999999949e-05, 6.862500000000271e-05, 6.866599999999848e-05, 6.880499999999817e-05, 6.866600000000195e-05, 6.894400000000134e-05, 6.85970000000001e-05, 6.951399999999969e-05, 6.916699999999845e-05, 6.887499999999949e-05, 6.950000000000012e-05, 6.868100000000099e-05, 6.894500000000081e-05, 6.934800000000033e-05]</msg>
<status status="PASS" starttime="20201110 08:38:05.386" endtime="20201110 08:38:05.388"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.381" endtime="20201110 08:38:05.389"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.391" endtime="20201110 08:38:05.392"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:05.394" endtime="20201110 08:38:05.414"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.393" endtime="20201110 08:38:05.414"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.389" endtime="20201110 08:38:05.415"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.007" endtime="20201110 08:38:05.415"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.006" endtime="20201110 08:38:05.415"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.424" endtime="20201110 08:38:05.443"></status>
</kw>
<msg timestamp="20201110 08:38:05.443" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:05.422" endtime="20201110 08:38:05.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:05.446" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:05.444" endtime="20201110 08:38:05.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.447" endtime="20201110 08:38:05.449"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.420" endtime="20201110 08:38:05.450"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.418" endtime="20201110 08:38:05.450"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.457" endtime="20201110 08:38:05.745"></status>
</kw>
<msg timestamp="20201110 08:38:05.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019614347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019684611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:05.455" endtime="20201110 08:38:05.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:05.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019614347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019684611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:05.749" endtime="20201110 08:38:05.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.757" endtime="20201110 08:38:05.759"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.453" endtime="20201110 08:38:05.760"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.451" endtime="20201110 08:38:05.760"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:05.764" level="INFO">${RESULT} = [{'time': 0.019684611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.026400000000044e-05, 'source_diff': 7.026400000000044e-05}, {'time': 0.019763625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:05.761" endtime="20201110 08:38:05.764"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:05.779" level="INFO">${ACCURACY} = {'diff': [7.026400000000044e-05, 6.998600000000105e-05, 7.002799999999976e-05, 7.020799999999869e-05, 6.991700000000267e-05, 7.004199999999933e-05, 6.986100000000092e-05, 7.045899999999841e-05, 7.0112...</msg>
<status status="PASS" starttime="20201110 08:38:05.765" endtime="20201110 08:38:05.779"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:05.783" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201110 08:38:05.782" endtime="20201110 08:38:05.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:05.786" level="INFO">VALUE: [7.026400000000044e-05, 6.998600000000105e-05, 7.002799999999976e-05, 7.020799999999869e-05, 6.991700000000267e-05, 7.004199999999933e-05, 6.986100000000092e-05, 7.045899999999841e-05, 7.011200000000065e-05, 7.02230000000012e-05, 6.980499999999917e-05, 6.99299999999993e-05, 7.02910000000001e-05, 6.975000000000037e-05, 7.030499999999967e-05, 7.037500000000099e-05, 7.050000000000112e-05, 7.016699999999945e-05, 7.019500000000206e-05, 7.004199999999933e-05, 7.022299999999773e-05, 6.979199999999908e-05, 7.038900000000056e-05, 6.970900000000113e-05, 6.954199999999883e-05, 7.043099999999927e-05, 6.983300000000178e-05, 6.966700000000242e-05, 7.030599999999915e-05, 7.012500000000074e-05, 7.036100000000142e-05, 7.023599999999783e-05, 6.961100000000067e-05, 7.040300000000013e-05, 6.988900000000006e-05, 6.954199999999883e-05, 7.007000000000194e-05, 6.961100000000067e-05, 7.002799999999976e-05, 7.047200000000198e-05, 6.961100000000067e-05, 6.970900000000113e-05, 7.008399999999804e-05, 7.041600000000023e-05, 7.044399999999937e-05, 6.998600000000105e-05, 6.958299999999806e-05, 7.017999999999955e-05, 7.008300000000203e-05, 6.988900000000006e-05]</msg>
<status status="PASS" starttime="20201110 08:38:05.784" endtime="20201110 08:38:05.787"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.780" endtime="20201110 08:38:05.787"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.789" endtime="20201110 08:38:05.791"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:05.793" endtime="20201110 08:38:05.812"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.791" endtime="20201110 08:38:05.813"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.788" endtime="20201110 08:38:05.813"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.416" endtime="20201110 08:38:05.813"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.416" endtime="20201110 08:38:05.814"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.822" endtime="20201110 08:38:05.842"></status>
</kw>
<msg timestamp="20201110 08:38:05.842" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:05.820" endtime="20201110 08:38:05.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:05.845" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:05.843" endtime="20201110 08:38:05.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.846" endtime="20201110 08:38:05.848"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.818" endtime="20201110 08:38:05.849"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.816" endtime="20201110 08:38:05.849"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.856" endtime="20201110 08:38:06.142"></status>
</kw>
<msg timestamp="20201110 08:38:06.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01954525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019616514, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:38:05.854" endtime="20201110 08:38:06.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:06.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01954525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019616514, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:38:06.147" endtime="20201110 08:38:06.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:06.155" endtime="20201110 08:38:06.157"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.852" endtime="20201110 08:38:06.157"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.850" endtime="20201110 08:38:06.158"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:06.162" level="INFO">${RESULT} = [{'time': 0.019616514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.126400000000144e-05, 'source_diff': 7.126400000000144e-05}, {'time': 0.019699514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:06.158" endtime="20201110 08:38:06.162"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:06.176" level="INFO">${ACCURACY} = {'diff': [7.126400000000144e-05, 7.10970000000026e-05, 7.094399999999987e-05, 7.133299999999981e-05, 7.087499999999802e-05, 7.136100000000242e-05, 7.061200000000115e-05, 7.105500000000042e-05, 7.12779...</msg>
<status status="PASS" starttime="20201110 08:38:06.163" endtime="20201110 08:38:06.176"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:06.180" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201110 08:38:06.179" endtime="20201110 08:38:06.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:06.183" level="INFO">VALUE: [7.126400000000144e-05, 7.10970000000026e-05, 7.094399999999987e-05, 7.133299999999981e-05, 7.087499999999802e-05, 7.136100000000242e-05, 7.061200000000115e-05, 7.105500000000042e-05, 7.127799999999754e-05, 7.081899999999974e-05, 7.070799999999919e-05, 7.07910000000006e-05, 7.076400000000094e-05, 7.145799999999994e-05, 7.151400000000169e-05, 7.111100000000217e-05, 7.072199999999876e-05, 7.06109999999982e-05, 7.10559999999999e-05, 7.063899999999734e-05, 7.113900000000131e-05, 7.10979999999986e-05, 7.081899999999974e-05, 7.097300000000195e-05, 7.141599999999776e-05, 7.12230000000022e-05, 7.131900000000024e-05, 7.052700000000078e-05, 7.075000000000137e-05, 7.072199999999876e-05, 7.09300000000003e-05, 7.129200000000058e-05, 7.148599999999908e-05, 7.120899999999916e-05, 7.120899999999916e-05, 7.130600000000015e-05, 7.10559999999999e-05, 7.143100000000027e-05, 7.152799999999779e-05, 7.056999999999897e-05, 7.10559999999999e-05, 7.073599999999833e-05, 7.068000000000005e-05, 7.14300000000008e-05, 7.094399999999987e-05, 7.11109999999987e-05, 7.14170000000007e-05, 7.082000000000269e-05, 7.09170000000002e-05, 7.079200000000008e-05]</msg>
<status status="PASS" starttime="20201110 08:38:06.182" endtime="20201110 08:38:06.184"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.177" endtime="20201110 08:38:06.184"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:06.186" endtime="20201110 08:38:06.188"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:06.190" endtime="20201110 08:38:06.209"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.188" endtime="20201110 08:38:06.210"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.185" endtime="20201110 08:38:06.210"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.814" endtime="20201110 08:38:06.210"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.814" endtime="20201110 08:38:06.211"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:06.219" endtime="20201110 08:38:06.238"></status>
</kw>
<msg timestamp="20201110 08:38:06.239" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:06.218" endtime="20201110 08:38:06.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:06.241" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:06.240" endtime="20201110 08:38:06.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:06.242" endtime="20201110 08:38:06.245"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.215" endtime="20201110 08:38:06.246"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.213" endtime="20201110 08:38:06.246"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:06.252" endtime="20201110 08:38:06.538"></status>
</kw>
<msg timestamp="20201110 08:38:06.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019561792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019633375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:06.251" endtime="20201110 08:38:06.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:06.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019561792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019633375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:06.542" endtime="20201110 08:38:06.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:06.550" endtime="20201110 08:38:06.552"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.248" endtime="20201110 08:38:06.553"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.247" endtime="20201110 08:38:06.553"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:06.557" level="INFO">${RESULT} = [{'time': 0.019633375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.158300000000006e-05, 'source_diff': 7.158300000000006e-05}, {'time': 0.019717375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:06.554" endtime="20201110 08:38:06.557"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:06.571" level="INFO">${ACCURACY} = {'diff': [7.158300000000006e-05, 7.237499999999952e-05, 7.163900000000181e-05, 7.19170000000012e-05, 7.213899999999884e-05, 7.158399999999954e-05, 7.202700000000228e-05, 7.166699999999748e-05, 7.17359...</msg>
<status status="PASS" starttime="20201110 08:38:06.558" endtime="20201110 08:38:06.571"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:06.576" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201110 08:38:06.575" endtime="20201110 08:38:06.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:06.578" level="INFO">VALUE: [7.158300000000006e-05, 7.237499999999952e-05, 7.163900000000181e-05, 7.19170000000012e-05, 7.213899999999884e-05, 7.158399999999954e-05, 7.202700000000228e-05, 7.166699999999748e-05, 7.173599999999933e-05, 7.211199999999918e-05, 7.236199999999943e-05, 7.218000000000155e-05, 7.217999999999808e-05, 7.175000000000237e-05, 7.247199999999704e-05, 7.240300000000213e-05, 7.223599999999983e-05, 7.247200000000051e-05, 7.230599999999768e-05, 7.208400000000004e-05, 7.186099999999945e-05, 7.197200000000001e-05, 7.173599999999933e-05, 7.16109999999992e-05, 7.173599999999933e-05, 7.209799999999961e-05, 7.191599999999826e-05, 7.241599999999876e-05, 7.233299999999734e-05, 7.236099999999995e-05, 7.191600000000173e-05, 7.217999999999808e-05, 7.202800000000176e-05, 7.162499999999877e-05, 7.177799999999804e-05, 7.244500000000084e-05, 7.194400000000087e-05, 7.212499999999927e-05, 7.237500000000299e-05, 7.193100000000077e-05, 7.209700000000013e-05, 7.165299999999791e-05, 7.175000000000237e-05, 7.204200000000133e-05, 7.219400000000112e-05, 7.209700000000013e-05, 7.198599999999958e-05, 7.155499999999745e-05, 7.200000000000262e-05, 7.23049999999982e-05]</msg>
<status status="PASS" starttime="20201110 08:38:06.577" endtime="20201110 08:38:06.586"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.572" endtime="20201110 08:38:06.586"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:06.589" endtime="20201110 08:38:06.590"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:06.592" endtime="20201110 08:38:06.612"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.590" endtime="20201110 08:38:06.612"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.587" endtime="20201110 08:38:06.613"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.211" endtime="20201110 08:38:06.613"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.211" endtime="20201110 08:38:06.613"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:06.622" endtime="20201110 08:38:06.641"></status>
</kw>
<msg timestamp="20201110 08:38:06.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:06.620" endtime="20201110 08:38:06.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:06.644" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:06.643" endtime="20201110 08:38:06.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:06.645" endtime="20201110 08:38:06.648"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.617" endtime="20201110 08:38:06.649"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.615" endtime="20201110 08:38:06.649"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:06.655" endtime="20201110 08:38:06.942"></status>
</kw>
<msg timestamp="20201110 08:38:06.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019586264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019658819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:06.654" endtime="20201110 08:38:06.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:06.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019586264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019658819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:06.946" endtime="20201110 08:38:06.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:06.954" endtime="20201110 08:38:06.956"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.651" endtime="20201110 08:38:06.956"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.650" endtime="20201110 08:38:06.957"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:06.961" level="INFO">${RESULT} = [{'time': 0.019658819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.255500000000192e-05, 'source_diff': 7.255500000000192e-05}, {'time': 0.019742833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:06.958" endtime="20201110 08:38:06.961"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:06.975" level="INFO">${ACCURACY} = {'diff': [7.255500000000192e-05, 7.305500000000242e-05, 7.280500000000217e-05, 7.255499999999845e-05, 7.341599999999976e-05, 7.3069000000002e-05, 7.330600000000215e-05, 7.334700000000138e-05, 7.293099...</msg>
<status status="PASS" starttime="20201110 08:38:06.962" endtime="20201110 08:38:06.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:06.979" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201110 08:38:06.978" endtime="20201110 08:38:06.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:06.982" level="INFO">VALUE: [7.255500000000192e-05, 7.305500000000242e-05, 7.280500000000217e-05, 7.255499999999845e-05, 7.341599999999976e-05, 7.3069000000002e-05, 7.330600000000215e-05, 7.334700000000138e-05, 7.29309999999983e-05, 7.270800000000119e-05, 7.280599999999818e-05, 7.318100000000202e-05, 7.334699999999791e-05, 7.301300000000024e-05, 7.337500000000052e-05, 7.301300000000024e-05, 7.269400000000162e-05, 7.263900000000281e-05, 7.312500000000027e-05, 7.287500000000002e-05, 7.333300000000181e-05, 7.252800000000226e-05, 7.276399999999947e-05, 7.265299999999891e-05, 7.298600000000058e-05, 7.309699999999766e-05, 7.316700000000245e-05, 7.323600000000083e-05, 7.341599999999976e-05, 7.262499999999977e-05, 7.34309999999988e-05, 7.313899999999984e-05, 7.316599999999951e-05, 7.292999999999883e-05, 7.265300000000238e-05, 7.287500000000002e-05, 7.348600000000108e-05, 7.333299999999834e-05, 7.256899999999802e-05, 7.337500000000052e-05, 7.273600000000033e-05, 7.291699999999873e-05, 7.319500000000159e-05, 7.347199999999804e-05, 7.27499999999999e-05, 7.317999999999908e-05, 7.330599999999868e-05, 7.31110000000007e-05, 7.312500000000027e-05, 7.329099999999963e-05]</msg>
<status status="PASS" starttime="20201110 08:38:06.980" endtime="20201110 08:38:06.982"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.975" endtime="20201110 08:38:06.983"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:06.985" endtime="20201110 08:38:06.986"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:06.988" endtime="20201110 08:38:07.008"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.987" endtime="20201110 08:38:07.008"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.983" endtime="20201110 08:38:07.009"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.614" endtime="20201110 08:38:07.009"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.613" endtime="20201110 08:38:07.009"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:07.018" endtime="20201110 08:38:07.037"></status>
</kw>
<msg timestamp="20201110 08:38:07.037" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:07.016" endtime="20201110 08:38:07.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:07.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:07.038" endtime="20201110 08:38:07.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:07.041" endtime="20201110 08:38:07.043"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.014" endtime="20201110 08:38:07.044"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.012" endtime="20201110 08:38:07.044"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:07.050" endtime="20201110 08:38:07.335"></status>
</kw>
<msg timestamp="20201110 08:38:07.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019699306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019772958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:07.049" endtime="20201110 08:38:07.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:07.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019699306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019772958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:07.339" endtime="20201110 08:38:07.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:07.348" endtime="20201110 08:38:07.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.046" endtime="20201110 08:38:07.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.045" endtime="20201110 08:38:07.351"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:07.355" level="INFO">${RESULT} = [{'time': 0.019772958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.365200000000044e-05, 'source_diff': 7.365200000000044e-05}, {'time': 0.019856972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:07.351" endtime="20201110 08:38:07.355"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:07.369" level="INFO">${ACCURACY} = {'diff': [7.365200000000044e-05, 7.377800000000004e-05, 7.406899999999952e-05, 7.39170000000032e-05, 7.366699999999948e-05, 7.370899999999819e-05, 7.372200000000176e-05, 7.380599999999918e-05, 7.40140...</msg>
<status status="PASS" starttime="20201110 08:38:07.356" endtime="20201110 08:38:07.369"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:07.374" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201110 08:38:07.373" endtime="20201110 08:38:07.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:07.377" level="INFO">VALUE: [7.365200000000044e-05, 7.377800000000004e-05, 7.406899999999952e-05, 7.39170000000032e-05, 7.366699999999948e-05, 7.370899999999819e-05, 7.372200000000176e-05, 7.380599999999918e-05, 7.401400000000072e-05, 7.401400000000072e-05, 7.441700000000023e-05, 7.398700000000105e-05, 7.42500000000014e-05, 7.383399999999832e-05, 7.362500000000077e-05, 7.436099999999848e-05, 7.444499999999937e-05, 7.352799999999979e-05, 7.379200000000308e-05, 7.376400000000047e-05, 7.404199999999986e-05, 7.418099999999955e-05, 7.44309999999998e-05, 7.36249999999973e-05, 7.409699999999866e-05, 7.373600000000133e-05, 7.416699999999998e-05, 7.36249999999973e-05, 7.355499999999945e-05, 7.454200000000036e-05, 7.367999999999958e-05, 7.398600000000158e-05, 7.369400000000262e-05, 7.40829999999991e-05, 7.4069000000003e-05, 7.350000000000065e-05, 7.41110000000017e-05, 7.370899999999819e-05, 7.398599999999811e-05, 7.437500000000152e-05, 7.423600000000183e-05, 7.365299999999991e-05, 7.4069999999999e-05, 7.447299999999851e-05, 7.44439999999999e-05, 7.450000000000165e-05, 7.392999999999983e-05, 7.447199999999904e-05, 7.388900000000059e-05, 7.404100000000038e-05]</msg>
<status status="PASS" starttime="20201110 08:38:07.375" endtime="20201110 08:38:07.378"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.370" endtime="20201110 08:38:07.378"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:07.381" endtime="20201110 08:38:07.382"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:07.384" endtime="20201110 08:38:07.404"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.383" endtime="20201110 08:38:07.404"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.379" endtime="20201110 08:38:07.405"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.010" endtime="20201110 08:38:07.405"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.010" endtime="20201110 08:38:07.405"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:07.414" endtime="20201110 08:38:07.433"></status>
</kw>
<msg timestamp="20201110 08:38:07.434" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:07.412" endtime="20201110 08:38:07.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:07.436" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:07.435" endtime="20201110 08:38:07.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:07.437" endtime="20201110 08:38:07.440"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.410" endtime="20201110 08:38:07.440"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.408" endtime="20201110 08:38:07.441"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:07.447" endtime="20201110 08:38:07.733"></status>
</kw>
<msg timestamp="20201110 08:38:07.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019709403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019784153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:07.446" endtime="20201110 08:38:07.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:07.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019709403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019784153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:07.737" endtime="20201110 08:38:07.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:07.745" endtime="20201110 08:38:07.747"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.443" endtime="20201110 08:38:07.748"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.441" endtime="20201110 08:38:07.748"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:07.752" level="INFO">${RESULT} = [{'time': 0.019784153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.474999999999843e-05, 'source_diff': 7.474999999999843e-05}, {'time': 0.019869139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:07.749" endtime="20201110 08:38:07.753"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:07.766" level="INFO">${ACCURACY} = {'diff': [7.474999999999843e-05, 7.537500000000252e-05, 7.536099999999948e-05, 7.473599999999886e-05, 7.54310000000008e-05, 7.463899999999787e-05, 7.531900000000077e-05, 7.458399999999907e-05, 7.50270...</msg>
<status status="PASS" starttime="20201110 08:38:07.753" endtime="20201110 08:38:07.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:07.771" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201110 08:38:07.770" endtime="20201110 08:38:07.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:07.773" level="INFO">VALUE: [7.474999999999843e-05, 7.537500000000252e-05, 7.536099999999948e-05, 7.473599999999886e-05, 7.54310000000008e-05, 7.463899999999787e-05, 7.531900000000077e-05, 7.458399999999907e-05, 7.502700000000181e-05, 7.473599999999886e-05, 7.537499999999905e-05, 7.494499999999987e-05, 7.491600000000126e-05, 7.551400000000222e-05, 7.49310000000003e-05, 7.477800000000104e-05, 7.455599999999993e-05, 7.497199999999954e-05, 7.543099999999733e-05, 7.459699999999916e-05, 7.487499999999855e-05, 7.450000000000165e-05, 7.519500000000012e-05, 7.549999999999918e-05, 7.455500000000045e-05, 7.493000000000083e-05, 7.522199999999979e-05, 7.490199999999822e-05, 7.487499999999855e-05, 7.47500000000019e-05, 7.462500000000177e-05, 7.513899999999837e-05, 7.465299999999744e-05, 7.512500000000227e-05, 7.49310000000003e-05, 7.481999999999975e-05, 7.504200000000086e-05, 7.466700000000048e-05, 7.516700000000098e-05, 7.549999999999918e-05, 7.548599999999961e-05, 7.49440000000004e-05, 7.456900000000002e-05, 7.45829999999996e-05, 7.52639999999985e-05, 7.481900000000027e-05, 7.530600000000068e-05, 7.515300000000141e-05, 7.523599999999936e-05, 7.466700000000048e-05]</msg>
<status status="PASS" starttime="20201110 08:38:07.772" endtime="20201110 08:38:07.774"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.767" endtime="20201110 08:38:07.774"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:07.777" endtime="20201110 08:38:07.778"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:07.780" endtime="20201110 08:38:07.799"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.778" endtime="20201110 08:38:07.800"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.775" endtime="20201110 08:38:07.800"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.406" endtime="20201110 08:38:07.801"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.406" endtime="20201110 08:38:07.801"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:07.809" endtime="20201110 08:38:07.828"></status>
</kw>
<msg timestamp="20201110 08:38:07.829" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:07.808" endtime="20201110 08:38:07.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:07.831" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:07.830" endtime="20201110 08:38:07.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:07.833" endtime="20201110 08:38:07.835"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.805" endtime="20201110 08:38:07.836"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.803" endtime="20201110 08:38:07.836"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:07.842" endtime="20201110 08:38:08.128"></status>
</kw>
<msg timestamp="20201110 08:38:08.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019581431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019657597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:07.841" endtime="20201110 08:38:08.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:08.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019581431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019657597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:08.133" endtime="20201110 08:38:08.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:08.141" endtime="20201110 08:38:08.143"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.838" endtime="20201110 08:38:08.143"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.837" endtime="20201110 08:38:08.144"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:08.148" level="INFO">${RESULT} = [{'time': 0.019657597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.616599999999904e-05, 'source_diff': 7.616599999999904e-05}, {'time': 0.019744597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:08.144" endtime="20201110 08:38:08.148"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:08.162" level="INFO">${ACCURACY} = {'diff': [7.616599999999904e-05, 7.555499999999798e-05, 7.554200000000136e-05, 7.576400000000247e-05, 7.552800000000179e-05, 7.637500000000005e-05, 7.640300000000266e-05, 7.586099999999998e-05, 7.5749...</msg>
<status status="PASS" starttime="20201110 08:38:08.149" endtime="20201110 08:38:08.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:08.166" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201110 08:38:08.165" endtime="20201110 08:38:08.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:08.169" level="INFO">VALUE: [7.616599999999904e-05, 7.555499999999798e-05, 7.554200000000136e-05, 7.576400000000247e-05, 7.552800000000179e-05, 7.637500000000005e-05, 7.640300000000266e-05, 7.586099999999998e-05, 7.574999999999943e-05, 7.629200000000211e-05, 7.561099999999973e-05, 7.598699999999958e-05, 7.552699999999885e-05, 7.598600000000011e-05, 7.586099999999998e-05, 7.563899999999887e-05, 7.637500000000005e-05, 7.602799999999882e-05, 7.623600000000036e-05, 7.566700000000148e-05, 7.629200000000211e-05, 7.591700000000173e-05, 7.616700000000198e-05, 7.624999999999993e-05, 7.586099999999998e-05, 7.645900000000094e-05, 7.584700000000041e-05, 7.552799999999832e-05, 7.650000000000018e-05, 7.624999999999993e-05, 7.642999999999886e-05, 7.641599999999929e-05, 7.566599999999854e-05, 7.619400000000165e-05, 7.630599999999821e-05, 7.595900000000044e-05, 7.597200000000054e-05, 7.593099999999783e-05, 7.648600000000061e-05, 7.60969999999972e-05, 7.618100000000155e-05, 7.636100000000048e-05, 7.629200000000211e-05, 7.599999999999968e-05, 7.556900000000102e-05, 7.58050000000017e-05, 7.584700000000041e-05, 7.573599999999986e-05, 7.619400000000165e-05, 7.591699999999826e-05]</msg>
<status status="PASS" starttime="20201110 08:38:08.167" endtime="20201110 08:38:08.169"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.163" endtime="20201110 08:38:08.170"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:08.172" endtime="20201110 08:38:08.174"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:08.176" endtime="20201110 08:38:08.195"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.174" endtime="20201110 08:38:08.196"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.171" endtime="20201110 08:38:08.196"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.802" endtime="20201110 08:38:08.196"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.801" endtime="20201110 08:38:08.196"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:08.205" endtime="20201110 08:38:08.225"></status>
</kw>
<msg timestamp="20201110 08:38:08.225" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:08.203" endtime="20201110 08:38:08.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:08.228" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:08.226" endtime="20201110 08:38:08.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:08.229" endtime="20201110 08:38:08.232"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.201" endtime="20201110 08:38:08.232"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.199" endtime="20201110 08:38:08.232"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:08.239" endtime="20201110 08:38:08.525"></status>
</kw>
<msg timestamp="20201110 08:38:08.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019573986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0196515, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:38:08.237" endtime="20201110 08:38:08.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:08.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019573986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0196515, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:38:08.529" endtime="20201110 08:38:08.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:08.537" endtime="20201110 08:38:08.539"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.235" endtime="20201110 08:38:08.540"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.233" endtime="20201110 08:38:08.540"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:08.544" level="INFO">${RESULT} = [{'time': 0.0196515, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.751399999999728e-05, 'source_diff': 7.751399999999728e-05}, {'time': 0.0197375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7...</msg>
<status status="PASS" starttime="20201110 08:38:08.541" endtime="20201110 08:38:08.545"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:08.558" level="INFO">${ACCURACY} = {'diff': [7.751399999999728e-05, 7.655600000000193e-05, 7.655600000000193e-05, 7.700000000000068e-05, 7.730599999999921e-05, 7.718099999999908e-05, 7.719499999999865e-05, 7.675000000000043e-05, 7.7236...</msg>
<status status="PASS" starttime="20201110 08:38:08.545" endtime="20201110 08:38:08.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:08.563" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201110 08:38:08.562" endtime="20201110 08:38:08.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:08.565" level="INFO">VALUE: [7.751399999999728e-05, 7.655600000000193e-05, 7.655600000000193e-05, 7.700000000000068e-05, 7.730599999999921e-05, 7.718099999999908e-05, 7.719499999999865e-05, 7.675000000000043e-05, 7.723600000000136e-05, 7.695800000000197e-05, 7.694399999999893e-05, 7.704099999999992e-05, 7.749999999999771e-05, 7.692999999999936e-05, 7.688900000000012e-05, 7.662499999999683e-05, 7.74030000000002e-05, 7.724999999999746e-05, 7.652799999999932e-05, 7.663899999999987e-05, 7.670900000000119e-05, 7.656900000000202e-05, 7.69029999999997e-05, 7.67229999999973e-05, 7.725000000000093e-05, 7.688800000000065e-05, 7.698599999999764e-05, 7.711099999999776e-05, 7.718099999999908e-05, 7.686099999999751e-05, 7.674999999999696e-05, 7.672199999999782e-05, 7.729200000000311e-05, 7.711100000000123e-05, 7.654199999999889e-05, 7.751399999999728e-05, 7.681999999999828e-05, 7.720800000000222e-05, 7.716600000000004e-05, 7.720899999999822e-05, 7.679099999999967e-05, 7.692999999999936e-05, 7.747199999999857e-05, 7.68189999999988e-05, 7.651399999999975e-05, 7.74030000000002e-05, 7.741699999999976e-05, 7.720799999999875e-05, 7.658299999999812e-05, 7.659700000000116e-05]</msg>
<status status="PASS" starttime="20201110 08:38:08.564" endtime="20201110 08:38:08.566"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.559" endtime="20201110 08:38:08.566"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:08.569" endtime="20201110 08:38:08.570"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:08.572" endtime="20201110 08:38:08.591"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.570" endtime="20201110 08:38:08.592"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.567" endtime="20201110 08:38:08.592"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.197" endtime="20201110 08:38:08.593"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.197" endtime="20201110 08:38:08.593"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:08.602" endtime="20201110 08:38:08.621"></status>
</kw>
<msg timestamp="20201110 08:38:08.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:08.600" endtime="20201110 08:38:08.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:08.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:08.623" endtime="20201110 08:38:08.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:08.625" endtime="20201110 08:38:08.628"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.597" endtime="20201110 08:38:08.629"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.595" endtime="20201110 08:38:08.629"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:08.635" endtime="20201110 08:38:08.921"></status>
</kw>
<msg timestamp="20201110 08:38:08.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019752889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019830569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:08.634" endtime="20201110 08:38:08.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:08.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019752889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019830569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:08.925" endtime="20201110 08:38:08.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:08.934" endtime="20201110 08:38:08.935"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.631" endtime="20201110 08:38:08.936"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.630" endtime="20201110 08:38:08.936"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:08.940" level="INFO">${RESULT} = [{'time': 0.019830569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.768000000000011e-05, 'source_diff': 7.768000000000011e-05}, {'time': 0.019920542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:08.937" endtime="20201110 08:38:08.940"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:08.955" level="INFO">${ACCURACY} = {'diff': [7.768000000000011e-05, 7.793099999999983e-05, 7.809799999999867e-05, 7.793099999999983e-05, 7.79030000000007e-05, 7.761100000000173e-05, 7.790200000000122e-05, 7.837499999999858e-05, 7.83199...</msg>
<status status="PASS" starttime="20201110 08:38:08.941" endtime="20201110 08:38:08.955"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:08.959" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201110 08:38:08.958" endtime="20201110 08:38:08.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:08.962" level="INFO">VALUE: [7.768000000000011e-05, 7.793099999999983e-05, 7.809799999999867e-05, 7.793099999999983e-05, 7.79030000000007e-05, 7.761100000000173e-05, 7.790200000000122e-05, 7.837499999999858e-05, 7.831999999999978e-05, 7.786099999999851e-05, 7.836100000000248e-05, 7.831999999999978e-05, 7.812499999999833e-05, 7.829200000000064e-05, 7.849999999999871e-05, 7.755599999999946e-05, 7.762499999999783e-05, 7.761200000000121e-05, 7.837499999999858e-05, 7.806900000000006e-05, 7.818000000000061e-05, 7.76250000000013e-05, 7.792999999999689e-05, 7.779100000000067e-05, 7.797199999999907e-05, 7.76389999999974e-05, 7.820799999999975e-05, 7.836099999999901e-05, 7.84169999999973e-05, 7.806999999999953e-05, 7.843100000000033e-05, 7.831999999999978e-05, 7.811099999999876e-05, 7.848699999999861e-05, 7.836199999999849e-05, 7.775000000000143e-05, 7.773599999999839e-05, 7.754100000000042e-05, 7.801400000000125e-05, 7.811100000000223e-05, 7.800000000000168e-05, 7.812499999999833e-05, 7.819499999999965e-05, 7.836100000000248e-05, 7.781999999999928e-05, 7.754199999999989e-05, 7.838899999999815e-05, 7.772300000000176e-05, 7.784800000000189e-05, 7.801400000000125e-05]</msg>
<status status="PASS" starttime="20201110 08:38:08.960" endtime="20201110 08:38:08.963"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.956" endtime="20201110 08:38:08.963"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:08.966" endtime="20201110 08:38:08.967"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:08.969" endtime="20201110 08:38:08.988"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.967" endtime="20201110 08:38:08.989"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.964" endtime="20201110 08:38:08.989"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.594" endtime="20201110 08:38:08.989"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.593" endtime="20201110 08:38:08.990"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:08.998" endtime="20201110 08:38:09.018"></status>
</kw>
<msg timestamp="20201110 08:38:09.018" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:08.997" endtime="20201110 08:38:09.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:09.021" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:09.019" endtime="20201110 08:38:09.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:09.022" endtime="20201110 08:38:09.025"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.994" endtime="20201110 08:38:09.025"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.992" endtime="20201110 08:38:09.026"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:09.032" endtime="20201110 08:38:09.317"></status>
</kw>
<msg timestamp="20201110 08:38:09.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01960075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019679847, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:38:09.030" endtime="20201110 08:38:09.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:09.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01960075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019679847, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:38:09.321" endtime="20201110 08:38:09.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:09.330" endtime="20201110 08:38:09.331"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.028" endtime="20201110 08:38:09.332"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.026" endtime="20201110 08:38:09.332"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:09.336" level="INFO">${RESULT} = [{'time': 0.019679847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.90970000000002e-05, 'source_diff': 7.90970000000002e-05}, {'time': 0.019767875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:38:09.333" endtime="20201110 08:38:09.337"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:09.350" level="INFO">${ACCURACY} = {'diff': [7.90970000000002e-05, 7.875000000000243e-05, 7.87779999999981e-05, 7.870800000000025e-05, 7.91389999999989e-05, 7.943100000000133e-05, 7.934700000000044e-05, 7.855600000000046e-05, 7.8651999...</msg>
<status status="PASS" starttime="20201110 08:38:09.337" endtime="20201110 08:38:09.350"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:09.355" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201110 08:38:09.354" endtime="20201110 08:38:09.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:09.357" level="INFO">VALUE: [7.90970000000002e-05, 7.875000000000243e-05, 7.87779999999981e-05, 7.870800000000025e-05, 7.91389999999989e-05, 7.943100000000133e-05, 7.934700000000044e-05, 7.855600000000046e-05, 7.86519999999985e-05, 7.948699999999961e-05, 7.898599999999964e-05, 7.937499999999958e-05, 7.912499999999933e-05, 7.948600000000014e-05, 7.90970000000002e-05, 7.940299999999872e-05, 7.884699999999994e-05, 7.93329999999974e-05, 7.856900000000056e-05, 7.895899999999997e-05, 7.89030000000017e-05, 7.924999999999946e-05, 7.866700000000101e-05, 7.909800000000314e-05, 7.856899999999709e-05, 7.898699999999911e-05, 7.875000000000243e-05, 7.891600000000179e-05, 7.938899999999915e-05, 7.85969999999997e-05, 7.927800000000207e-05, 7.905499999999802e-05, 7.873599999999939e-05, 7.922200000000032e-05, 7.879200000000114e-05, 7.879199999999767e-05, 7.94450000000009e-05, 7.870900000000319e-05, 7.870800000000025e-05, 7.924999999999946e-05, 7.915299999999847e-05, 7.936199999999949e-05, 7.858300000000012e-05, 7.911099999999976e-05, 7.940299999999872e-05, 7.880500000000124e-05, 7.901400000000225e-05, 7.898599999999964e-05, 7.930599999999774e-05, 7.880599999999724e-05]</msg>
<status status="PASS" starttime="20201110 08:38:09.356" endtime="20201110 08:38:09.358"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.351" endtime="20201110 08:38:09.358"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:09.360" endtime="20201110 08:38:09.362"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:09.364" endtime="20201110 08:38:09.383"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.362" endtime="20201110 08:38:09.384"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.359" endtime="20201110 08:38:09.384"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.990" endtime="20201110 08:38:09.385"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.990" endtime="20201110 08:38:09.385"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:09.393" endtime="20201110 08:38:09.413"></status>
</kw>
<msg timestamp="20201110 08:38:09.414" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:09.392" endtime="20201110 08:38:09.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:09.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:09.415" endtime="20201110 08:38:09.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:09.418" endtime="20201110 08:38:09.420"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.389" endtime="20201110 08:38:09.421"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.387" endtime="20201110 08:38:09.421"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:09.427" endtime="20201110 08:38:09.712"></status>
</kw>
<msg timestamp="20201110 08:38:09.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019605569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019685583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:09.426" endtime="20201110 08:38:09.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:09.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019605569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019685583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:09.716" endtime="20201110 08:38:09.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:09.724" endtime="20201110 08:38:09.726"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.423" endtime="20201110 08:38:09.727"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.422" endtime="20201110 08:38:09.727"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:09.731" level="INFO">${RESULT} = [{'time': 0.019685583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.001399999999978e-05, 'source_diff': 8.001399999999978e-05}, {'time': 0.019774583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:09.728" endtime="20201110 08:38:09.731"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:09.745" level="INFO">${ACCURACY} = {'diff': [8.001399999999978e-05, 7.980499999999877e-05, 7.956900000000156e-05, 8.034699999999798e-05, 8.036100000000101e-05, 8.019499999999818e-05, 8.002799999999935e-05, 8.023599999999742e-05, 8.0305...</msg>
<status status="PASS" starttime="20201110 08:38:09.732" endtime="20201110 08:38:09.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:09.749" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201110 08:38:09.748" endtime="20201110 08:38:09.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:09.752" level="INFO">VALUE: [8.001399999999978e-05, 7.980499999999877e-05, 7.956900000000156e-05, 8.034699999999798e-05, 8.036100000000101e-05, 8.019499999999818e-05, 8.002799999999935e-05, 8.023599999999742e-05, 8.030599999999874e-05, 8.011100000000076e-05, 7.982000000000128e-05, 7.998699999999664e-05, 7.954200000000189e-05, 8.023600000000089e-05, 7.98329999999979e-05, 8.018000000000261e-05, 8.034699999999798e-05, 7.987500000000008e-05, 8.006900000000206e-05, 8.018100000000208e-05, 7.955599999999799e-05, 7.983300000000138e-05, 7.969500000000115e-05, 7.993099999999836e-05, 8.023600000000089e-05, 8.051400000000028e-05, 8.012500000000033e-05, 8.018000000000261e-05, 7.955499999999852e-05, 8.00970000000012e-05, 7.997200000000107e-05, 8.04719999999981e-05, 8.011100000000076e-05, 8.02909999999997e-05, 7.980500000000224e-05, 8.048600000000114e-05, 8.030599999999874e-05, 7.955600000000146e-05, 8.01389999999999e-05, 8.0458000000002e-05, 7.995900000000097e-05, 7.998600000000064e-05, 7.969399999999821e-05, 8.016600000000304e-05, 7.991600000000279e-05, 8.044399999999896e-05, 8.004100000000292e-05, 8.037499999999712e-05, 8.019399999999871e-05, 8.043099999999886e-05]</msg>
<status status="PASS" starttime="20201110 08:38:09.750" endtime="20201110 08:38:09.753"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.746" endtime="20201110 08:38:09.753"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:09.755" endtime="20201110 08:38:09.757"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:09.759" endtime="20201110 08:38:09.778"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.757" endtime="20201110 08:38:09.779"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.754" endtime="20201110 08:38:09.779"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.386" endtime="20201110 08:38:09.779"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.385" endtime="20201110 08:38:09.780"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:09.788" endtime="20201110 08:38:09.808"></status>
</kw>
<msg timestamp="20201110 08:38:09.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:09.787" endtime="20201110 08:38:09.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:09.811" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:09.810" endtime="20201110 08:38:09.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:09.812" endtime="20201110 08:38:09.815"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.784" endtime="20201110 08:38:09.816"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.782" endtime="20201110 08:38:09.816"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:09.822" endtime="20201110 08:38:10.109"></status>
</kw>
<msg timestamp="20201110 08:38:10.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019546417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019627, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:38:09.821" endtime="20201110 08:38:10.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:10.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019546417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019627, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:38:10.113" endtime="20201110 08:38:10.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:10.122" endtime="20201110 08:38:10.123"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.818" endtime="20201110 08:38:10.124"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.817" endtime="20201110 08:38:10.124"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:10.128" level="INFO">${RESULT} = [{'time': 0.019627, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.058299999999866e-05, 'source_diff': 8.058299999999866e-05}, {'time': 0.019718069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201110 08:38:10.125" endtime="20201110 08:38:10.129"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:10.142" level="INFO">${ACCURACY} = {'diff': [8.058299999999866e-05, 8.091600000000032e-05, 8.080599999999924e-05, 8.080600000000271e-05, 8.123700000000136e-05, 8.098699999999764e-05, 8.069399999999921e-05, 8.144399999999996e-05, 8.1166...</msg>
<status status="PASS" starttime="20201110 08:38:10.129" endtime="20201110 08:38:10.142"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:10.146" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201110 08:38:10.145" endtime="20201110 08:38:10.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:10.149" level="INFO">VALUE: [8.058299999999866e-05, 8.091600000000032e-05, 8.080599999999924e-05, 8.080600000000271e-05, 8.123700000000136e-05, 8.098699999999764e-05, 8.069399999999921e-05, 8.144399999999996e-05, 8.116600000000057e-05, 8.111100000000177e-05, 8.051400000000028e-05, 8.137500000000158e-05, 8.079199999999967e-05, 8.134800000000192e-05, 8.102700000000088e-05, 8.105599999999949e-05, 8.123599999999842e-05, 8.143099999999986e-05, 8.148599999999867e-05, 8.111100000000177e-05, 8.093100000000283e-05, 8.06109999999978e-05, 8.144399999999996e-05, 8.061100000000126e-05, 8.106899999999959e-05, 8.067999999999964e-05, 8.054099999999995e-05, 8.06390000000004e-05, 8.050000000000071e-05, 8.062500000000083e-05, 8.130599999999974e-05, 8.14719999999991e-05, 8.080599999999924e-05, 8.150000000000171e-05, 8.080600000000271e-05, 8.14170000000003e-05, 8.1152999999997e-05, 8.101399999999731e-05, 8.116700000000004e-05, 8.062500000000083e-05, 8.148599999999867e-05, 8.088900000000065e-05, 8.072200000000182e-05, 8.052799999999985e-05, 8.090300000000022e-05, 8.108299999999916e-05, 8.143099999999986e-05, 8.073600000000139e-05, 8.088800000000118e-05, 8.12780000000006e-05]</msg>
<status status="PASS" starttime="20201110 08:38:10.148" endtime="20201110 08:38:10.150"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.143" endtime="20201110 08:38:10.150"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:10.153" endtime="20201110 08:38:10.154"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:10.156" endtime="20201110 08:38:10.175"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.154" endtime="20201110 08:38:10.176"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.151" endtime="20201110 08:38:10.176"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.780" endtime="20201110 08:38:10.176"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.780" endtime="20201110 08:38:10.177"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:10.185" endtime="20201110 08:38:10.205"></status>
</kw>
<msg timestamp="20201110 08:38:10.205" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:10.184" endtime="20201110 08:38:10.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:10.208" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:10.206" endtime="20201110 08:38:10.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:10.209" endtime="20201110 08:38:10.212"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.181" endtime="20201110 08:38:10.212"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.179" endtime="20201110 08:38:10.212"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:10.219" endtime="20201110 08:38:10.504"></status>
</kw>
<msg timestamp="20201110 08:38:10.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019524806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019606681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:10.217" endtime="20201110 08:38:10.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:10.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019524806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019606681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:10.509" endtime="20201110 08:38:10.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:10.517" endtime="20201110 08:38:10.519"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.215" endtime="20201110 08:38:10.519"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.213" endtime="20201110 08:38:10.520"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:10.524" level="INFO">${RESULT} = [{'time': 0.019606681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.187500000000208e-05, 'source_diff': 8.187500000000208e-05}, {'time': 0.019699694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:10.520" endtime="20201110 08:38:10.524"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:10.538" level="INFO">${ACCURACY} = {'diff': [8.187500000000208e-05, 8.218000000000114e-05, 8.206900000000059e-05, 8.218000000000114e-05, 8.169499999999968e-05, 8.245799999999706e-05, 8.175000000000196e-05, 8.179200000000067e-05, 8.2124...</msg>
<status status="PASS" starttime="20201110 08:38:10.525" endtime="20201110 08:38:10.539"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:10.547" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201110 08:38:10.546" endtime="20201110 08:38:10.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:10.551" level="INFO">VALUE: [8.187500000000208e-05, 8.218000000000114e-05, 8.206900000000059e-05, 8.218000000000114e-05, 8.169499999999968e-05, 8.245799999999706e-05, 8.175000000000196e-05, 8.179200000000067e-05, 8.212499999999887e-05, 8.173599999999892e-05, 8.248599999999967e-05, 8.230599999999727e-05, 8.16109999999988e-05, 8.162500000000183e-05, 8.177700000000163e-05, 8.181900000000034e-05, 8.18329999999999e-05, 8.166600000000107e-05, 8.198599999999917e-05, 8.212499999999887e-05, 8.216699999999758e-05, 8.191699999999733e-05, 8.22780000000016e-05, 8.156999999999956e-05, 8.16390000000014e-05, 8.19589999999995e-05, 8.21109999999993e-05, 8.184800000000242e-05, 8.200000000000221e-05, 8.17230000000023e-05, 8.181900000000034e-05, 8.250000000000271e-05, 8.180500000000077e-05, 8.195800000000003e-05, 8.163899999999794e-05, 8.240300000000172e-05, 8.217999999999767e-05, 8.16109999999988e-05, 8.187499999999862e-05, 8.180600000000024e-05, 8.17780000000011e-05, 8.222199999999985e-05, 8.213800000000243e-05, 8.159699999999923e-05, 8.19719999999996e-05, 8.251399999999881e-05, 8.162499999999837e-05, 8.172199999999935e-05, 8.180500000000077e-05, 8.154100000000095e-05]</msg>
<status status="PASS" starttime="20201110 08:38:10.548" endtime="20201110 08:38:10.552"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.542" endtime="20201110 08:38:10.553"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:10.557" endtime="20201110 08:38:10.558"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:10.560" endtime="20201110 08:38:10.579"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.558" endtime="20201110 08:38:10.580"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.554" endtime="20201110 08:38:10.580"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.177" endtime="20201110 08:38:10.581"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.177" endtime="20201110 08:38:10.581"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:10.592" endtime="20201110 08:38:10.613"></status>
</kw>
<msg timestamp="20201110 08:38:10.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:10.591" endtime="20201110 08:38:10.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:10.616" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:10.615" endtime="20201110 08:38:10.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:10.618" endtime="20201110 08:38:10.622"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.588" endtime="20201110 08:38:10.622"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.585" endtime="20201110 08:38:10.623"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:10.634" endtime="20201110 08:38:10.926"></status>
</kw>
<msg timestamp="20201110 08:38:10.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022700819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0227835, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:38:10.632" endtime="20201110 08:38:10.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:10.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022700819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0227835, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:38:10.930" endtime="20201110 08:38:10.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:10.939" endtime="20201110 08:38:10.941"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.627" endtime="20201110 08:38:10.941"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.624" endtime="20201110 08:38:10.942"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:10.946" level="INFO">${RESULT} = [{'time': 0.0227835, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.268100000000111e-05, 'source_diff': 8.268100000000111e-05}, {'time': 0.0228755, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8...</msg>
<status status="PASS" starttime="20201110 08:38:10.943" endtime="20201110 08:38:10.946"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:10.960" level="INFO">${ACCURACY} = {'diff': [8.268100000000111e-05, 8.268100000000111e-05, 8.350000000000024e-05, 8.257000000000056e-05, 8.31110000000003e-05, 8.329200000000217e-05, 8.324999999999999e-05, 8.304200000000192e-05, 8.31530...</msg>
<status status="PASS" starttime="20201110 08:38:10.947" endtime="20201110 08:38:10.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:10.965" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201110 08:38:10.964" endtime="20201110 08:38:10.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:10.968" level="INFO">VALUE: [8.268100000000111e-05, 8.268100000000111e-05, 8.350000000000024e-05, 8.257000000000056e-05, 8.31110000000003e-05, 8.329200000000217e-05, 8.324999999999999e-05, 8.304200000000192e-05, 8.315300000000247e-05, 8.305499999999855e-05, 8.281899999999787e-05, 8.280500000000177e-05, 8.26529999999985e-05, 8.294500000000093e-05, 8.347199999999763e-05, 8.294400000000146e-05, 8.309700000000073e-05, 8.323600000000042e-05, 8.336100000000055e-05, 8.277799999999863e-05, 8.34309999999984e-05, 8.32369999999999e-05, 8.341699999999883e-05, 8.304099999999898e-05, 8.298600000000017e-05, 8.318000000000214e-05, 8.26659999999986e-05, 8.290300000000222e-05, 8.268000000000164e-05, 8.274999999999949e-05, 8.293000000000189e-05, 8.282000000000081e-05, 8.309700000000073e-05, 8.336100000000055e-05, 8.343100000000186e-05, 8.299999999999974e-05, 8.255600000000099e-05, 8.312499999999987e-05, 8.29720000000006e-05, 8.287500000000309e-05, 8.34720000000011e-05, 8.337500000000012e-05, 8.287499999999962e-05, 8.309699999999726e-05, 8.308300000000116e-05, 8.291699999999833e-05, 8.256900000000109e-05, 8.263899999999894e-05, 8.290299999999876e-05, 8.323600000000042e-05]</msg>
<status status="PASS" starttime="20201110 08:38:10.966" endtime="20201110 08:38:10.969"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.961" endtime="20201110 08:38:10.969"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:10.972" endtime="20201110 08:38:10.973"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:10.975" endtime="20201110 08:38:10.994"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.973" endtime="20201110 08:38:10.995"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.970" endtime="20201110 08:38:10.995"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.583" endtime="20201110 08:38:10.996"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.582" endtime="20201110 08:38:10.996"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:11.005" endtime="20201110 08:38:11.026"></status>
</kw>
<msg timestamp="20201110 08:38:11.026" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:11.004" endtime="20201110 08:38:11.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:11.029" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:11.027" endtime="20201110 08:38:11.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:11.030" endtime="20201110 08:38:11.032"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.001" endtime="20201110 08:38:11.033"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.998" endtime="20201110 08:38:11.034"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:11.040" endtime="20201110 08:38:11.326"></status>
</kw>
<msg timestamp="20201110 08:38:11.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020315292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02039925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:38:11.039" endtime="20201110 08:38:11.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:11.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020315292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02039925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:38:11.331" endtime="20201110 08:38:11.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:11.339" endtime="20201110 08:38:11.341"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.036" endtime="20201110 08:38:11.342"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.034" endtime="20201110 08:38:11.342"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:11.346" level="INFO">${RESULT} = [{'time': 0.02039925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.395800000000203e-05, 'source_diff': 8.395800000000203e-05}, {'time': 0.020494236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:38:11.343" endtime="20201110 08:38:11.347"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:11.361" level="INFO">${ACCURACY} = {'diff': [8.395800000000203e-05, 8.402799999999988e-05, 8.404200000000292e-05, 8.391699999999933e-05, 8.424999999999752e-05, 8.451300000000134e-05, 8.383400000000138e-05, 8.444500000000243e-05, 8.3555...</msg>
<status status="PASS" starttime="20201110 08:38:11.347" endtime="20201110 08:38:11.361"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:11.365" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201110 08:38:11.364" endtime="20201110 08:38:11.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:11.368" level="INFO">VALUE: [8.395800000000203e-05, 8.402799999999988e-05, 8.404200000000292e-05, 8.391699999999933e-05, 8.424999999999752e-05, 8.451300000000134e-05, 8.383400000000138e-05, 8.444500000000243e-05, 8.355599999999852e-05, 8.386200000000052e-05, 8.387500000000062e-05, 8.399999999999727e-05, 8.405499999999955e-05, 8.400000000000074e-05, 8.401400000000031e-05, 8.445799999999906e-05, 8.401400000000031e-05, 8.422199999999838e-05, 8.390299999999976e-05, 8.391699999999933e-05, 8.39859999999977e-05, 8.441699999999983e-05, 8.362500000000037e-05, 8.370900000000125e-05, 8.392999999999942e-05, 8.411099999999783e-05, 8.436100000000155e-05, 8.438900000000069e-05, 8.445799999999906e-05, 8.398600000000117e-05, 8.394399999999899e-05, 8.352799999999938e-05, 8.447300000000157e-05, 8.362500000000037e-05, 8.434700000000198e-05, 8.376299999999712e-05, 8.41110000000013e-05, 8.437500000000112e-05, 8.401400000000031e-05, 8.444499999999897e-05, 8.38049999999993e-05, 8.387499999999715e-05, 8.402700000000041e-05, 8.41110000000013e-05, 8.433299999999894e-05, 8.451300000000134e-05, 8.42919999999997e-05, 8.430599999999927e-05, 8.356999999999809e-05, 8.452699999999744e-05]</msg>
<status status="PASS" starttime="20201110 08:38:11.366" endtime="20201110 08:38:11.369"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.362" endtime="20201110 08:38:11.369"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:11.372" endtime="20201110 08:38:11.373"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:11.375" endtime="20201110 08:38:11.395"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.374" endtime="20201110 08:38:11.395"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.370" endtime="20201110 08:38:11.396"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.997" endtime="20201110 08:38:11.396"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.996" endtime="20201110 08:38:11.396"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:11.405" endtime="20201110 08:38:11.426"></status>
</kw>
<msg timestamp="20201110 08:38:11.426" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:11.404" endtime="20201110 08:38:11.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:11.429" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:11.427" endtime="20201110 08:38:11.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:11.430" endtime="20201110 08:38:11.433"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.401" endtime="20201110 08:38:11.434"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.399" endtime="20201110 08:38:11.434"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:11.442" endtime="20201110 08:38:11.729"></status>
</kw>
<msg timestamp="20201110 08:38:11.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020268, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020353097, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:38:11.440" endtime="20201110 08:38:11.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:11.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020268, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020353097, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:38:11.734" endtime="20201110 08:38:11.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:11.742" endtime="20201110 08:38:11.744"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.437" endtime="20201110 08:38:11.745"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.435" endtime="20201110 08:38:11.745"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:11.749" level="INFO">${RESULT} = [{'time': 0.020353097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.509699999999926e-05, 'source_diff': 8.509699999999926e-05}, {'time': 0.020448069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:11.746" endtime="20201110 08:38:11.750"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:11.764" level="INFO">${ACCURACY} = {'diff': [8.509699999999926e-05, 8.486099999999858e-05, 8.51660000000011e-05, 8.502800000000088e-05, 8.46660000000006e-05, 8.505500000000055e-05, 8.455599999999952e-05, 8.466700000000008e-05, 8.525000...</msg>
<status status="PASS" starttime="20201110 08:38:11.750" endtime="20201110 08:38:11.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:11.768" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201110 08:38:11.767" endtime="20201110 08:38:11.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:11.771" level="INFO">VALUE: [8.509699999999926e-05, 8.486099999999858e-05, 8.51660000000011e-05, 8.502800000000088e-05, 8.46660000000006e-05, 8.505500000000055e-05, 8.455599999999952e-05, 8.466700000000008e-05, 8.525000000000199e-05, 8.522199999999938e-05, 8.529199999999723e-05, 8.519499999999972e-05, 8.481999999999934e-05, 8.494499999999947e-05, 8.461200000000127e-05, 8.469500000000268e-05, 8.519400000000024e-05, 8.493000000000042e-05, 8.531900000000037e-05, 8.475000000000149e-05, 8.531900000000037e-05, 8.536099999999908e-05, 8.4846999999999e-05, 8.487499999999815e-05, 8.454199999999995e-05, 8.461099999999833e-05, 8.469500000000268e-05, 8.500000000000174e-05, 8.548699999999868e-05, 8.473699999999793e-05, 8.487500000000162e-05, 8.455500000000005e-05, 8.481899999999987e-05, 8.540300000000126e-05, 8.488899999999772e-05, 8.497199999999913e-05, 8.54720000000031e-05, 8.481899999999987e-05, 8.536099999999908e-05, 8.540300000000126e-05, 8.526300000000209e-05, 8.459699999999876e-05, 8.520799999999981e-05, 8.511200000000177e-05, 8.518000000000067e-05, 8.549999999999877e-05, 8.544400000000049e-05, 8.472199999999888e-05, 8.469399999999974e-05, 8.530600000000027e-05]</msg>
<status status="PASS" starttime="20201110 08:38:11.769" endtime="20201110 08:38:11.803"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.765" endtime="20201110 08:38:11.804"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:11.806" endtime="20201110 08:38:11.808"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:11.810" endtime="20201110 08:38:11.830"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.808" endtime="20201110 08:38:11.830"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.805" endtime="20201110 08:38:11.831"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.397" endtime="20201110 08:38:11.831"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.396" endtime="20201110 08:38:11.831"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:11.840" endtime="20201110 08:38:11.861"></status>
</kw>
<msg timestamp="20201110 08:38:11.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:11.839" endtime="20201110 08:38:11.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:11.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:11.863" endtime="20201110 08:38:11.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:11.865" endtime="20201110 08:38:11.868"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.836" endtime="20201110 08:38:11.868"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.834" endtime="20201110 08:38:11.869"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:11.876" endtime="20201110 08:38:12.162"></status>
</kw>
<msg timestamp="20201110 08:38:12.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020359458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020445139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:11.874" endtime="20201110 08:38:12.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:12.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020359458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020445139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:12.167" endtime="20201110 08:38:12.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:12.175" endtime="20201110 08:38:12.177"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.871" endtime="20201110 08:38:12.178"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.870" endtime="20201110 08:38:12.178"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:12.182" level="INFO">${RESULT} = [{'time': 0.020445139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.568100000000065e-05, 'source_diff': 8.568100000000065e-05}, {'time': 0.020542153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:12.179" endtime="20201110 08:38:12.183"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:12.198" level="INFO">${ACCURACY} = {'diff': [8.568100000000065e-05, 8.582000000000034e-05, 8.607000000000059e-05, 8.566700000000108e-05, 8.630600000000127e-05, 8.624999999999952e-05, 8.597200000000013e-05, 8.590299999999829e-05, 8.6235...</msg>
<status status="PASS" starttime="20201110 08:38:12.183" endtime="20201110 08:38:12.198"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:12.202" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201110 08:38:12.201" endtime="20201110 08:38:12.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:12.205" level="INFO">VALUE: [8.568100000000065e-05, 8.582000000000034e-05, 8.607000000000059e-05, 8.566700000000108e-05, 8.630600000000127e-05, 8.624999999999952e-05, 8.597200000000013e-05, 8.590299999999829e-05, 8.623599999999995e-05, 8.562500000000237e-05, 8.565200000000203e-05, 8.593000000000142e-05, 8.620800000000081e-05, 8.5847e-05, 8.641699999999836e-05, 8.643099999999793e-05, 8.622199999999691e-05, 8.573599999999945e-05, 8.555600000000052e-05, 8.604200000000145e-05, 8.631900000000137e-05, 8.559799999999923e-05, 8.601399999999884e-05, 8.583300000000044e-05, 8.606900000000112e-05, 8.618000000000167e-05, 8.563899999999847e-05, 8.618099999999768e-05, 8.601399999999884e-05, 8.637499999999965e-05, 8.623599999999995e-05, 8.574999999999902e-05, 8.605600000000102e-05, 8.587499999999915e-05, 8.619400000000124e-05, 8.56119999999988e-05, 8.590200000000228e-05, 8.575000000000249e-05, 8.591599999999838e-05, 8.591599999999838e-05, 8.64860000000002e-05, 8.63189999999979e-05, 8.568100000000065e-05, 8.645799999999759e-05, 8.609700000000026e-05, 8.618099999999768e-05, 8.557000000000009e-05, 8.618099999999768e-05, 8.63059999999978e-05, 8.555500000000105e-05]</msg>
<status status="PASS" starttime="20201110 08:38:12.204" endtime="20201110 08:38:12.206"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.199" endtime="20201110 08:38:12.206"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:12.209" endtime="20201110 08:38:12.210"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:12.212" endtime="20201110 08:38:12.232"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.211" endtime="20201110 08:38:12.232"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.207" endtime="20201110 08:38:12.233"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.832" endtime="20201110 08:38:12.233"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.832" endtime="20201110 08:38:12.233"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:12.242" endtime="20201110 08:38:12.263"></status>
</kw>
<msg timestamp="20201110 08:38:12.263" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:12.240" endtime="20201110 08:38:12.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:12.266" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:12.264" endtime="20201110 08:38:12.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:12.267" endtime="20201110 08:38:12.269"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.238" endtime="20201110 08:38:12.270"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.236" endtime="20201110 08:38:12.270"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:12.277" endtime="20201110 08:38:12.563"></status>
</kw>
<msg timestamp="20201110 08:38:12.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020205792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020292778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:12.276" endtime="20201110 08:38:12.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:12.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020205792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020292778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:12.567" endtime="20201110 08:38:12.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:12.576" endtime="20201110 08:38:12.577"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.273" endtime="20201110 08:38:12.578"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.271" endtime="20201110 08:38:12.578"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:12.582" level="INFO">${RESULT} = [{'time': 0.020292778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.69860000000007e-05, 'source_diff': 8.69860000000007e-05}, {'time': 0.020389778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:38:12.579" endtime="20201110 08:38:12.583"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:12.596" level="INFO">${ACCURACY} = {'diff': [8.69860000000007e-05, 8.666700000000208e-05, 8.732000000000184e-05, 8.659700000000076e-05, 8.719400000000224e-05, 8.693099999999843e-05, 8.709799999999726e-05, 8.663899999999947e-05, 8.67360...</msg>
<status status="PASS" starttime="20201110 08:38:12.583" endtime="20201110 08:38:12.596"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:12.601" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201110 08:38:12.599" endtime="20201110 08:38:12.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:12.603" level="INFO">VALUE: [8.69860000000007e-05, 8.666700000000208e-05, 8.732000000000184e-05, 8.659700000000076e-05, 8.719400000000224e-05, 8.693099999999843e-05, 8.709799999999726e-05, 8.663899999999947e-05, 8.673600000000045e-05, 8.711100000000083e-05, 8.740299999999979e-05, 8.723600000000095e-05, 8.704199999999898e-05, 8.665299999999904e-05, 8.713899999999997e-05, 8.723600000000095e-05, 8.652799999999891e-05, 8.725000000000052e-05, 8.718099999999868e-05, 8.724999999999705e-05, 8.688899999999972e-05, 8.677799999999916e-05, 8.686100000000058e-05, 8.690299999999929e-05, 8.71799999999992e-05, 8.750000000000077e-05, 8.713899999999997e-05, 8.66669999999986e-05, 8.713899999999997e-05, 8.672200000000088e-05, 8.655600000000152e-05, 8.657000000000109e-05, 8.655600000000152e-05, 8.69860000000007e-05, 8.754199999999948e-05, 8.737500000000065e-05, 8.654099999999901e-05, 8.691599999999938e-05, 8.655499999999858e-05, 8.686099999999711e-05, 8.665299999999904e-05, 8.734699999999804e-05, 8.6847000000001e-05, 8.741699999999936e-05, 8.698599999999723e-05, 8.675000000000002e-05, 8.672299999999689e-05, 8.71120000000003e-05, 8.690299999999929e-05, 8.687500000000015e-05]</msg>
<status status="PASS" starttime="20201110 08:38:12.602" endtime="20201110 08:38:12.604"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.597" endtime="20201110 08:38:12.604"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:12.607" endtime="20201110 08:38:12.608"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:12.610" endtime="20201110 08:38:12.629"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.608" endtime="20201110 08:38:12.630"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.605" endtime="20201110 08:38:12.630"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.234" endtime="20201110 08:38:12.631"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.234" endtime="20201110 08:38:12.631"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:12.639" endtime="20201110 08:38:12.659"></status>
</kw>
<msg timestamp="20201110 08:38:12.660" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:12.638" endtime="20201110 08:38:12.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:12.662" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:12.661" endtime="20201110 08:38:12.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:12.663" endtime="20201110 08:38:12.666"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.635" endtime="20201110 08:38:12.666"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.633" endtime="20201110 08:38:12.667"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:12.673" endtime="20201110 08:38:12.958"></status>
</kw>
<msg timestamp="20201110 08:38:12.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019587694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019675944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:12.671" endtime="20201110 08:38:12.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:12.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019587694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019675944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:12.963" endtime="20201110 08:38:12.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:12.971" endtime="20201110 08:38:12.973"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.669" endtime="20201110 08:38:12.973"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.667" endtime="20201110 08:38:12.974"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:12.978" level="INFO">${RESULT} = [{'time': 0.019675944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.825000000000152e-05, 'source_diff': 8.825000000000152e-05}, {'time': 0.019775917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:12.974" endtime="20201110 08:38:12.978"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:12.991" level="INFO">${ACCURACY} = {'diff': [8.825000000000152e-05, 8.815300000000054e-05, 8.791699999999986e-05, 8.783299999999897e-05, 8.76250000000009e-05, 8.845799999999959e-05, 8.804100000000051e-05, 8.79999999999978e-05, 8.805500...</msg>
<status status="PASS" starttime="20201110 08:38:12.979" endtime="20201110 08:38:12.992"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:12.996" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201110 08:38:12.995" endtime="20201110 08:38:12.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:12.998" level="INFO">VALUE: [8.825000000000152e-05, 8.815300000000054e-05, 8.791699999999986e-05, 8.783299999999897e-05, 8.76250000000009e-05, 8.845799999999959e-05, 8.804100000000051e-05, 8.79999999999978e-05, 8.805500000000008e-05, 8.766600000000013e-05, 8.850000000000177e-05, 8.773599999999798e-05, 8.81389999999975e-05, 8.763900000000047e-05, 8.833400000000241e-05, 8.811099999999836e-05, 8.829200000000023e-05, 8.81120000000013e-05, 8.759699999999829e-05, 8.790200000000081e-05, 8.788900000000072e-05, 8.841600000000088e-05, 8.83189999999999e-05, 8.844400000000002e-05, 8.780600000000277e-05, 8.837499999999818e-05, 8.812499999999793e-05, 8.841699999999689e-05, 8.773599999999798e-05, 8.786100000000158e-05, 8.84449999999995e-05, 8.779199999999973e-05, 8.787500000000115e-05, 8.813900000000097e-05, 8.836100000000208e-05, 8.765200000000056e-05, 8.830500000000033e-05, 8.769399999999927e-05, 8.758299999999872e-05, 8.818099999999968e-05, 8.850000000000177e-05, 8.775000000000102e-05, 8.774999999999755e-05, 8.840299999999732e-05, 8.76250000000009e-05, 8.791600000000038e-05, 8.795899999999857e-05, 8.838899999999775e-05, 8.756899999999915e-05, 8.822199999999891e-05]</msg>
<status status="PASS" starttime="20201110 08:38:12.997" endtime="20201110 08:38:12.999"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.992" endtime="20201110 08:38:13.000"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:13.003" endtime="20201110 08:38:13.005"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:13.010" endtime="20201110 08:38:13.031"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.006" endtime="20201110 08:38:13.033"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.000" endtime="20201110 08:38:13.034"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.632" endtime="20201110 08:38:13.034"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.631" endtime="20201110 08:38:13.035"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:13.052" endtime="20201110 08:38:13.078"></status>
</kw>
<msg timestamp="20201110 08:38:13.079" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:13.049" endtime="20201110 08:38:13.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:13.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:13.081" endtime="20201110 08:38:13.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:13.086" endtime="20201110 08:38:13.092"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.044" endtime="20201110 08:38:13.093"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.039" endtime="20201110 08:38:13.094"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:13.105" endtime="20201110 08:38:13.390"></status>
</kw>
<msg timestamp="20201110 08:38:13.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033643042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033732444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:13.103" endtime="20201110 08:38:13.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:13.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033643042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033732444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:13.395" endtime="20201110 08:38:13.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:13.403" endtime="20201110 08:38:13.405"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.098" endtime="20201110 08:38:13.405"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.095" endtime="20201110 08:38:13.406"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:13.410" level="INFO">${RESULT} = [{'time': 0.033732444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.940200000000231e-05, 'source_diff': 8.940200000000231e-05}, {'time': 0.033833431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:13.407" endtime="20201110 08:38:13.410"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:13.424" level="INFO">${ACCURACY} = {'diff': [8.940200000000231e-05, 8.936199999999561e-05, 8.91250000000024e-05, 8.89999999999988e-05, 8.91800000000012e-05, 8.863900000000147e-05, 8.852799999999744e-05, 8.906900000000412e-05, 8.9167000...</msg>
<status status="PASS" starttime="20201110 08:38:13.411" endtime="20201110 08:38:13.424"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:13.428" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201110 08:38:13.427" endtime="20201110 08:38:13.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:13.430" level="INFO">VALUE: [8.940200000000231e-05, 8.936199999999561e-05, 8.91250000000024e-05, 8.89999999999988e-05, 8.91800000000012e-05, 8.863900000000147e-05, 8.852799999999744e-05, 8.906900000000412e-05, 8.91670000000011e-05, 8.870899999999932e-05, 8.857000000000309e-05, 8.94999999999993e-05, 8.918099999999374e-05, 8.924999999999905e-05, 8.897299999999914e-05, 8.920800000000034e-05, 8.944400000000102e-05, 8.912499999999546e-05, 8.917999999999426e-05, 8.923599999999948e-05, 8.904200000000445e-05, 8.870799999999984e-05, 8.947200000000016e-05, 8.891700000000086e-05, 8.852800000000438e-05, 8.9332999999997e-05, 8.923599999999948e-05, 8.898599999999923e-05, 8.874999999999855e-05, 8.8945e-05, 8.933300000000394e-05, 8.888900000000172e-05, 8.929099999999829e-05, 8.861100000000233e-05, 8.948599999999973e-05, 8.937499999999571e-05, 8.8945e-05, 8.927799999999819e-05, 8.943000000000145e-05, 8.936100000000308e-05, 8.933400000000341e-05, 8.851399999999787e-05, 8.918100000000068e-05, 8.922299999999939e-05, 8.86800000000007e-05, 8.936099999999614e-05, 8.855499999999711e-05, 8.91250000000024e-05, 8.854200000000395e-05, 8.861100000000233e-05]</msg>
<status status="PASS" starttime="20201110 08:38:13.429" endtime="20201110 08:38:13.431"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.424" endtime="20201110 08:38:13.432"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:13.434" endtime="20201110 08:38:13.435"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:13.437" endtime="20201110 08:38:13.457"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.436" endtime="20201110 08:38:13.457"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.432" endtime="20201110 08:38:13.458"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.036" endtime="20201110 08:38:13.458"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.035" endtime="20201110 08:38:13.458"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:13.468" endtime="20201110 08:38:13.488"></status>
</kw>
<msg timestamp="20201110 08:38:13.489" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:13.466" endtime="20201110 08:38:13.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:13.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:13.490" endtime="20201110 08:38:13.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:13.492" endtime="20201110 08:38:13.495"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.463" endtime="20201110 08:38:13.495"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.461" endtime="20201110 08:38:13.496"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:13.502" endtime="20201110 08:38:13.788"></status>
</kw>
<msg timestamp="20201110 08:38:13.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020840903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020931347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:13.501" endtime="20201110 08:38:13.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:13.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020840903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020931347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:13.793" endtime="20201110 08:38:13.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:13.801" endtime="20201110 08:38:13.803"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.498" endtime="20201110 08:38:13.803"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.496" endtime="20201110 08:38:13.804"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:13.808" level="INFO">${RESULT} = [{'time': 0.020931347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.044399999999855e-05, 'source_diff': 9.044399999999855e-05}, {'time': 0.021032361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:13.804" endtime="20201110 08:38:13.808"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:13.822" level="INFO">${ACCURACY} = {'diff': [9.044399999999855e-05, 9.036100000000061e-05, 9.054199999999901e-05, 9.012499999999993e-05, 9.023600000000048e-05, 9.027800000000266e-05, 9.018100000000168e-05, 8.974999999999955e-05, 8.9749...</msg>
<status status="PASS" starttime="20201110 08:38:13.809" endtime="20201110 08:38:13.823"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:13.827" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201110 08:38:13.826" endtime="20201110 08:38:13.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:13.829" level="INFO">VALUE: [9.044399999999855e-05, 9.036100000000061e-05, 9.054199999999901e-05, 9.012499999999993e-05, 9.023600000000048e-05, 9.027800000000266e-05, 9.018100000000168e-05, 8.974999999999955e-05, 8.974999999999955e-05, 9.023600000000048e-05, 9.017999999999873e-05, 8.951399999999887e-05, 9.029099999999929e-05, 8.974999999999955e-05, 9.01389999999995e-05, 9.041699999999889e-05, 8.962499999999943e-05, 9.019500000000125e-05, 9.012499999999993e-05, 8.968100000000118e-05, 9.009700000000079e-05, 9.04589999999976e-05, 8.962499999999943e-05, 9.047200000000116e-05, 8.958300000000072e-05, 8.977799999999869e-05, 9.029099999999929e-05, 8.993000000000195e-05, 9.037500000000018e-05, 9.038899999999975e-05, 8.982000000000087e-05, 9.001399999999937e-05, 8.980599999999783e-05, 9.008300000000122e-05, 9.023699999999996e-05, 9.009800000000026e-05, 9.036200000000008e-05, 9.018099999999821e-05, 9.008400000000069e-05, 8.988900000000272e-05, 9.025000000000005e-05, 8.984700000000054e-05, 9.05000000000003e-05, 9.037500000000018e-05, 9.05000000000003e-05, 8.970899999999685e-05, 9.048600000000073e-05, 9.019499999999778e-05, 9.007000000000112e-05, 8.983300000000097e-05]</msg>
<status status="PASS" starttime="20201110 08:38:13.828" endtime="20201110 08:38:13.830"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.823" endtime="20201110 08:38:13.831"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:13.833" endtime="20201110 08:38:13.834"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:13.836" endtime="20201110 08:38:13.856"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.835" endtime="20201110 08:38:13.856"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.831" endtime="20201110 08:38:13.857"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.459" endtime="20201110 08:38:13.857"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.459" endtime="20201110 08:38:13.857"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:13.866" endtime="20201110 08:38:13.886"></status>
</kw>
<msg timestamp="20201110 08:38:13.886" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:13.864" endtime="20201110 08:38:13.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:13.889" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:13.887" endtime="20201110 08:38:13.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:13.890" endtime="20201110 08:38:13.893"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.862" endtime="20201110 08:38:13.893"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.859" endtime="20201110 08:38:13.894"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:13.902" endtime="20201110 08:38:14.189"></status>
</kw>
<msg timestamp="20201110 08:38:14.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019588583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019679306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:13.900" endtime="20201110 08:38:14.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:14.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019588583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019679306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:14.193" endtime="20201110 08:38:14.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:14.201" endtime="20201110 08:38:14.203"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.896" endtime="20201110 08:38:14.203"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.894" endtime="20201110 08:38:14.204"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:14.208" level="INFO">${RESULT} = [{'time': 0.019679306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.072300000000089e-05, 'source_diff': 9.072300000000089e-05}, {'time': 0.019779319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:14.204" endtime="20201110 08:38:14.208"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:14.221" level="INFO">${ACCURACY} = {'diff': [9.072300000000089e-05, 9.087500000000068e-05, 9.055499999999911e-05, 9.081899999999893e-05, 9.111099999999789e-05, 9.116699999999964e-05, 9.106900000000265e-05, 9.115300000000007e-05, 9.0542...</msg>
<status status="PASS" starttime="20201110 08:38:14.209" endtime="20201110 08:38:14.222"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:14.226" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201110 08:38:14.225" endtime="20201110 08:38:14.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:14.229" level="INFO">VALUE: [9.072300000000089e-05, 9.087500000000068e-05, 9.055499999999911e-05, 9.081899999999893e-05, 9.111099999999789e-05, 9.116699999999964e-05, 9.106900000000265e-05, 9.115300000000007e-05, 9.054200000000248e-05, 9.083300000000197e-05, 9.143099999999946e-05, 9.116699999999964e-05, 9.077700000000022e-05, 9.140300000000032e-05, 9.109800000000126e-05, 9.151299999999793e-05, 9.073599999999751e-05, 9.080499999999936e-05, 9.079099999999979e-05, 9.098599999999776e-05, 9.134699999999857e-05, 9.0639e-05, 9.145799999999912e-05, 9.094499999999853e-05, 9.109699999999832e-05, 9.056999999999815e-05, 9.102700000000047e-05, 9.105599999999908e-05, 9.149999999999783e-05, 9.125000000000105e-05, 9.087500000000068e-05, 9.141600000000041e-05, 9.086099999999764e-05, 9.130599999999933e-05, 9.098599999999776e-05, 9.13190000000029e-05, 9.0639e-05, 9.14589999999986e-05, 9.059700000000129e-05, 9.140300000000032e-05, 9.055600000000205e-05, 9.061100000000086e-05, 9.106899999999918e-05, 9.061100000000086e-05, 9.091599999999991e-05, 9.151400000000087e-05, 9.142999999999998e-05, 9.104199999999951e-05, 9.058299999999825e-05, 9.076400000000012e-05]</msg>
<status status="PASS" starttime="20201110 08:38:14.227" endtime="20201110 08:38:14.229"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.222" endtime="20201110 08:38:14.230"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:14.232" endtime="20201110 08:38:14.234"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:14.236" endtime="20201110 08:38:14.255"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.234" endtime="20201110 08:38:14.256"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.230" endtime="20201110 08:38:14.256"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.858" endtime="20201110 08:38:14.256"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.857" endtime="20201110 08:38:14.256"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:14.265" endtime="20201110 08:38:14.285"></status>
</kw>
<msg timestamp="20201110 08:38:14.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:14.264" endtime="20201110 08:38:14.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:14.288" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:14.287" endtime="20201110 08:38:14.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:14.289" endtime="20201110 08:38:14.292"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.261" endtime="20201110 08:38:14.292"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.259" endtime="20201110 08:38:14.293"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:14.299" endtime="20201110 08:38:14.585"></status>
</kw>
<msg timestamp="20201110 08:38:14.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019743917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019836181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:14.297" endtime="20201110 08:38:14.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:14.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019743917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019836181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:14.589" endtime="20201110 08:38:14.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:14.597" endtime="20201110 08:38:14.599"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.295" endtime="20201110 08:38:14.600"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.293" endtime="20201110 08:38:14.600"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:14.604" level="INFO">${RESULT} = [{'time': 0.019836181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.226400000000162e-05, 'source_diff': 9.226400000000162e-05}, {'time': 0.019937153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:14.601" endtime="20201110 08:38:14.604"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:14.618" level="INFO">${ACCURACY} = {'diff': [9.226400000000162e-05, 9.243100000000046e-05, 9.154200000000001e-05, 9.172300000000189e-05, 9.190300000000082e-05, 9.147300000000164e-05, 9.168000000000023e-05, 9.240199999999837e-05, 9.2471...</msg>
<status status="PASS" starttime="20201110 08:38:14.605" endtime="20201110 08:38:14.618"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:14.622" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201110 08:38:14.621" endtime="20201110 08:38:14.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:14.625" level="INFO">VALUE: [9.226400000000162e-05, 9.243100000000046e-05, 9.154200000000001e-05, 9.172300000000189e-05, 9.190300000000082e-05, 9.147300000000164e-05, 9.168000000000023e-05, 9.240199999999837e-05, 9.24719999999997e-05, 9.248600000000273e-05, 9.234699999999957e-05, 9.226399999999815e-05, 9.255500000000111e-05, 9.155599999999958e-05, 9.162499999999796e-05, 9.209699999999932e-05, 9.154200000000001e-05, 9.204200000000051e-05, 9.205600000000008e-05, 9.16939999999998e-05, 9.218000000000073e-05, 9.238899999999828e-05, 9.152800000000044e-05, 9.218000000000073e-05, 9.205500000000061e-05, 9.237499999999871e-05, 9.161100000000186e-05, 9.24719999999997e-05, 9.227700000000172e-05, 9.154200000000001e-05, 9.254100000000154e-05, 9.182000000000287e-05, 9.168000000000023e-05, 9.227699999999825e-05, 9.218000000000073e-05, 9.198599999999876e-05, 9.244400000000055e-05, 9.188899999999778e-05, 9.173599999999851e-05, 9.170799999999937e-05, 9.199999999999833e-05, 9.187500000000168e-05, 9.15000000000013e-05, 9.181899999999993e-05, 9.184800000000201e-05, 9.21659999999977e-05, 9.254199999999754e-05, 9.158299999999925e-05, 9.173600000000198e-05, 9.162500000000143e-05]</msg>
<status status="PASS" starttime="20201110 08:38:14.623" endtime="20201110 08:38:14.626"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.619" endtime="20201110 08:38:14.626"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:14.628" endtime="20201110 08:38:14.630"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:14.632" endtime="20201110 08:38:14.651"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.630" endtime="20201110 08:38:14.652"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.627" endtime="20201110 08:38:14.652"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.257" endtime="20201110 08:38:14.653"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.257" endtime="20201110 08:38:14.653"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:14.661" endtime="20201110 08:38:14.682"></status>
</kw>
<msg timestamp="20201110 08:38:14.682" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:14.660" endtime="20201110 08:38:14.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:14.684" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:14.683" endtime="20201110 08:38:14.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:14.686" endtime="20201110 08:38:14.688"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.657" endtime="20201110 08:38:14.689"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.655" endtime="20201110 08:38:14.689"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:14.695" endtime="20201110 08:38:14.981"></status>
</kw>
<msg timestamp="20201110 08:38:14.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019675389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019768625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:14.694" endtime="20201110 08:38:14.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:14.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019675389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019768625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:14.985" endtime="20201110 08:38:14.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:14.994" endtime="20201110 08:38:14.996"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.691" endtime="20201110 08:38:14.996"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.690" endtime="20201110 08:38:14.996"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:15.001" level="INFO">${RESULT} = [{'time': 0.019768625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.323600000000001e-05, 'source_diff': 9.323600000000001e-05}, {'time': 0.019871653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:14.997" endtime="20201110 08:38:15.001"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:15.014" level="INFO">${ACCURACY} = {'diff': [9.323600000000001e-05, 9.33200000000009e-05, 9.299999999999933e-05, 9.258399999999972e-05, 9.307000000000065e-05, 9.351299999999993e-05, 9.305500000000161e-05, 9.348600000000026e-05, 9.25550...</msg>
<status status="PASS" starttime="20201110 08:38:15.002" endtime="20201110 08:38:15.015"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:15.019" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201110 08:38:15.018" endtime="20201110 08:38:15.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:15.021" level="INFO">VALUE: [9.323600000000001e-05, 9.33200000000009e-05, 9.299999999999933e-05, 9.258399999999972e-05, 9.307000000000065e-05, 9.351299999999993e-05, 9.305500000000161e-05, 9.348600000000026e-05, 9.255500000000111e-05, 9.273599999999951e-05, 9.291599999999844e-05, 9.262499999999896e-05, 9.345800000000112e-05, 9.276399999999865e-05, 9.323600000000001e-05, 9.266699999999767e-05, 9.348699999999974e-05, 9.274999999999908e-05, 9.298699999999924e-05, 9.281900000000093e-05, 9.338899999999928e-05, 9.276399999999865e-05, 9.265300000000157e-05, 9.257000000000015e-05, 9.35139999999994e-05, 9.349999999999983e-05, 9.318100000000121e-05, 9.325000000000305e-05, 9.275000000000255e-05, 9.258399999999972e-05, 9.318100000000121e-05, 9.266700000000114e-05, 9.330500000000186e-05, 9.298599999999976e-05, 9.330500000000186e-05, 9.298599999999976e-05, 9.293000000000148e-05, 9.263899999999853e-05, 9.279199999999779e-05, 9.268100000000071e-05, 9.349999999999983e-05, 9.349999999999983e-05, 9.254200000000101e-05, 9.337499999999971e-05, 9.280599999999736e-05, 9.259799999999929e-05, 9.313899999999903e-05, 9.341599999999894e-05, 9.342999999999851e-05, 9.262499999999896e-05]</msg>
<status status="PASS" starttime="20201110 08:38:15.020" endtime="20201110 08:38:15.022"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.015" endtime="20201110 08:38:15.023"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:15.025" endtime="20201110 08:38:15.026"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:15.028" endtime="20201110 08:38:15.048"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.027" endtime="20201110 08:38:15.048"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.023" endtime="20201110 08:38:15.049"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.654" endtime="20201110 08:38:15.049"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.653" endtime="20201110 08:38:15.049"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:15.058" endtime="20201110 08:38:15.078"></status>
</kw>
<msg timestamp="20201110 08:38:15.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:15.056" endtime="20201110 08:38:15.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:15.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:15.080" endtime="20201110 08:38:15.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:15.082" endtime="20201110 08:38:15.085"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.054" endtime="20201110 08:38:15.085"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.051" endtime="20201110 08:38:15.086"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:15.092" endtime="20201110 08:38:15.377"></status>
</kw>
<msg timestamp="20201110 08:38:15.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019655708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019749306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:15.090" endtime="20201110 08:38:15.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:15.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019655708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019749306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:15.382" endtime="20201110 08:38:15.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:15.390" endtime="20201110 08:38:15.392"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.088" endtime="20201110 08:38:15.392"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.086" endtime="20201110 08:38:15.393"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:15.397" level="INFO">${RESULT} = [{'time': 0.019749306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.359800000000029e-05, 'source_diff': 9.359800000000029e-05}, {'time': 0.019853278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:15.393" endtime="20201110 08:38:15.397"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:15.411" level="INFO">${ACCURACY} = {'diff': [9.359800000000029e-05, 9.38339999999975e-05, 9.422300000000092e-05, 9.354199999999854e-05, 9.411100000000089e-05, 9.441599999999994e-05, 9.429099999999982e-05, 9.426400000000015e-05, 9.44719...</msg>
<status status="PASS" starttime="20201110 08:38:15.398" endtime="20201110 08:38:15.412"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:15.416" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201110 08:38:15.415" endtime="20201110 08:38:15.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:15.418" level="INFO">VALUE: [9.359800000000029e-05, 9.38339999999975e-05, 9.422300000000092e-05, 9.354199999999854e-05, 9.411100000000089e-05, 9.441599999999994e-05, 9.429099999999982e-05, 9.426400000000015e-05, 9.447199999999822e-05, 9.409700000000132e-05, 9.386099999999717e-05, 9.425000000000058e-05, 9.430600000000233e-05, 9.390199999999987e-05, 9.436100000000114e-05, 9.438799999999734e-05, 9.438900000000028e-05, 9.426300000000068e-05, 9.444399999999908e-05, 9.355499999999864e-05, 9.377799999999922e-05, 9.356900000000168e-05, 9.357000000000115e-05, 9.447199999999822e-05, 9.425000000000058e-05, 9.404199999999904e-05, 9.451399999999693e-05, 9.407000000000165e-05, 9.433299999999853e-05, 9.390199999999987e-05, 9.354099999999907e-05, 9.411099999999742e-05, 9.355500000000211e-05, 9.406899999999871e-05, 9.443000000000298e-05, 9.448600000000126e-05, 9.375000000000008e-05, 9.384700000000107e-05, 9.443099999999899e-05, 9.449999999999736e-05, 9.437500000000071e-05, 9.422199999999797e-05, 9.354200000000201e-05, 9.405499999999914e-05, 9.392999999999901e-05, 9.400000000000033e-05, 9.437500000000071e-05, 9.373600000000051e-05, 9.377799999999922e-05, 9.448600000000126e-05]</msg>
<status status="PASS" starttime="20201110 08:38:15.417" endtime="20201110 08:38:15.419"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.412" endtime="20201110 08:38:15.420"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:15.422" endtime="20201110 08:38:15.423"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:15.425" endtime="20201110 08:38:15.445"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.424" endtime="20201110 08:38:15.445"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.420" endtime="20201110 08:38:15.446"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.050" endtime="20201110 08:38:15.446"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.049" endtime="20201110 08:38:15.446"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:15.455" endtime="20201110 08:38:15.476"></status>
</kw>
<msg timestamp="20201110 08:38:15.476" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:15.453" endtime="20201110 08:38:15.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:15.479" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:15.477" endtime="20201110 08:38:15.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:15.480" endtime="20201110 08:38:15.482"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.450" endtime="20201110 08:38:15.483"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.448" endtime="20201110 08:38:15.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:15.490" endtime="20201110 08:38:15.776"></status>
</kw>
<msg timestamp="20201110 08:38:15.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019649319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019744361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:15.489" endtime="20201110 08:38:15.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:15.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019649319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019744361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:15.780" endtime="20201110 08:38:15.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:15.788" endtime="20201110 08:38:15.790"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.486" endtime="20201110 08:38:15.790"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.484" endtime="20201110 08:38:15.791"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:15.795" level="INFO">${RESULT} = [{'time': 0.019744361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.504200000000004e-05, 'source_diff': 9.504200000000004e-05}, {'time': 0.019849306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:15.792" endtime="20201110 08:38:15.795"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:15.809" level="INFO">${ACCURACY} = {'diff': [9.504200000000004e-05, 9.518099999999974e-05, 9.472199999999847e-05, 9.487500000000121e-05, 9.472200000000194e-05, 9.479199999999979e-05, 9.498600000000176e-05, 9.530500000000039e-05, 9.5375...</msg>
<status status="PASS" starttime="20201110 08:38:15.796" endtime="20201110 08:38:15.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:15.813" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201110 08:38:15.812" endtime="20201110 08:38:15.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:15.816" level="INFO">VALUE: [9.504200000000004e-05, 9.518099999999974e-05, 9.472199999999847e-05, 9.487500000000121e-05, 9.472200000000194e-05, 9.479199999999979e-05, 9.498600000000176e-05, 9.530500000000039e-05, 9.537500000000171e-05, 9.541700000000042e-05, 9.490300000000035e-05, 9.455599999999911e-05, 9.463800000000105e-05, 9.505599999999961e-05, 9.477800000000022e-05, 9.515299999999713e-05, 9.544400000000008e-05, 9.523600000000201e-05, 9.45270000000005e-05, 9.550000000000183e-05, 9.477800000000022e-05, 9.53469999999991e-05, 9.531999999999943e-05, 9.52079999999994e-05, 9.480599999999936e-05, 9.516700000000017e-05, 9.545899999999913e-05, 9.533400000000247e-05, 9.50140000000009e-05, 9.534700000000257e-05, 9.481899999999946e-05, 9.547199999999922e-05, 9.467999999999976e-05, 9.537499999999824e-05, 9.49720000000022e-05, 9.487500000000121e-05, 9.469499999999881e-05, 9.49859999999983e-05, 9.515299999999713e-05, 9.501299999999796e-05, 9.512499999999799e-05, 9.540300000000085e-05, 9.505500000000014e-05, 9.481899999999946e-05, 9.505500000000014e-05, 9.50140000000009e-05, 9.473599999999804e-05, 9.505599999999961e-05, 9.466699999999967e-05, 9.519500000000278e-05]</msg>
<status status="PASS" starttime="20201110 08:38:15.814" endtime="20201110 08:38:15.816"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.809" endtime="20201110 08:38:15.817"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:15.819" endtime="20201110 08:38:15.820"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:15.823" endtime="20201110 08:38:15.842"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.821" endtime="20201110 08:38:15.842"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.817" endtime="20201110 08:38:15.843"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.447" endtime="20201110 08:38:15.843"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.446" endtime="20201110 08:38:15.843"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:15.852" endtime="20201110 08:38:15.872"></status>
</kw>
<msg timestamp="20201110 08:38:15.873" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:15.850" endtime="20201110 08:38:15.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:15.875" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:15.874" endtime="20201110 08:38:15.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:15.876" endtime="20201110 08:38:15.879"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.848" endtime="20201110 08:38:15.879"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.846" endtime="20201110 08:38:15.880"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:15.886" endtime="20201110 08:38:16.173"></status>
</kw>
<msg timestamp="20201110 08:38:16.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019611361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019707875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:15.885" endtime="20201110 08:38:16.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:16.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019611361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019707875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:16.179" endtime="20201110 08:38:16.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:16.189" endtime="20201110 08:38:16.191"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.882" endtime="20201110 08:38:16.192"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.880" endtime="20201110 08:38:16.192"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:16.196" level="INFO">${RESULT} = [{'time': 0.019707875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.651399999999893e-05, 'source_diff': 9.651399999999893e-05}, {'time': 0.019814847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:16.193" endtime="20201110 08:38:16.197"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:16.213" level="INFO">${ACCURACY} = {'diff': [9.651399999999893e-05, 9.649999999999936e-05, 9.58059999999969e-05, 9.572199999999947e-05, 9.637499999999924e-05, 9.591700000000092e-05, 9.58469999999996e-05, 9.58059999999969e-05, 9.6097999...</msg>
<status status="PASS" starttime="20201110 08:38:16.198" endtime="20201110 08:38:16.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:16.217" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201110 08:38:16.216" endtime="20201110 08:38:16.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:16.220" level="INFO">VALUE: [9.651399999999893e-05, 9.649999999999936e-05, 9.58059999999969e-05, 9.572199999999947e-05, 9.637499999999924e-05, 9.591700000000092e-05, 9.58469999999996e-05, 9.58059999999969e-05, 9.609799999999932e-05, 9.565200000000162e-05, 9.579099999999785e-05, 9.637500000000271e-05, 9.636099999999967e-05, 9.56660000000012e-05, 9.595899999999963e-05, 9.554200000000054e-05, 9.579200000000079e-05, 9.552800000000097e-05, 9.561099999999892e-05, 9.629199999999782e-05, 9.572199999999947e-05, 9.643100000000099e-05, 9.579199999999732e-05, 9.619399999999736e-05, 9.623599999999954e-05, 9.587499999999874e-05, 9.631900000000096e-05, 9.555500000000064e-05, 9.611099999999942e-05, 9.644400000000108e-05, 9.636099999999967e-05, 9.64859999999998e-05, 9.602800000000147e-05, 9.568100000000024e-05, 9.587500000000221e-05, 9.619499999999684e-05, 9.593100000000049e-05, 9.56660000000012e-05, 9.588900000000178e-05, 9.56660000000012e-05, 9.605500000000114e-05, 9.611099999999942e-05, 9.624999999999911e-05, 9.586099999999917e-05, 9.613900000000203e-05, 9.588899999999831e-05, 9.588899999999831e-05, 9.641700000000142e-05, 9.622300000000292e-05, 9.573599999999904e-05]</msg>
<status status="PASS" starttime="20201110 08:38:16.218" endtime="20201110 08:38:16.221"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.214" endtime="20201110 08:38:16.221"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:16.223" endtime="20201110 08:38:16.225"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:16.227" endtime="20201110 08:38:16.246"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.225" endtime="20201110 08:38:16.247"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.222" endtime="20201110 08:38:16.247"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.844" endtime="20201110 08:38:16.247"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.844" endtime="20201110 08:38:16.248"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:16.256" endtime="20201110 08:38:16.276"></status>
</kw>
<msg timestamp="20201110 08:38:16.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:16.255" endtime="20201110 08:38:16.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:16.279" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:16.278" endtime="20201110 08:38:16.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:16.280" endtime="20201110 08:38:16.283"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.252" endtime="20201110 08:38:16.283"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.250" endtime="20201110 08:38:16.284"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:16.290" endtime="20201110 08:38:16.576"></status>
</kw>
<msg timestamp="20201110 08:38:16.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019599847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019697278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:16.289" endtime="20201110 08:38:16.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:16.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019599847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019697278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:16.580" endtime="20201110 08:38:16.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:16.589" endtime="20201110 08:38:16.590"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.286" endtime="20201110 08:38:16.591"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.284" endtime="20201110 08:38:16.591"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:16.596" level="INFO">${RESULT} = [{'time': 0.019697278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.743099999999852e-05, 'source_diff': 9.743099999999852e-05}, {'time': 0.019806306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:16.592" endtime="20201110 08:38:16.596"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:16.609" level="INFO">${ACCURACY} = {'diff': [9.743099999999852e-05, 9.731999999999796e-05, 9.699999999999986e-05, 9.743000000000251e-05, 9.716599999999923e-05, 9.73470000000011e-05, 9.67080000000009e-05, 9.736100000000067e-05, 9.745799...</msg>
<status status="PASS" starttime="20201110 08:38:16.597" endtime="20201110 08:38:16.609"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:16.614" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201110 08:38:16.613" endtime="20201110 08:38:16.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:16.616" level="INFO">VALUE: [9.743099999999852e-05, 9.731999999999796e-05, 9.699999999999986e-05, 9.743000000000251e-05, 9.716599999999923e-05, 9.73470000000011e-05, 9.67080000000009e-05, 9.736100000000067e-05, 9.745799999999818e-05, 9.744399999999862e-05, 9.725000000000011e-05, 9.747200000000122e-05, 9.737500000000024e-05, 9.734699999999763e-05, 9.719499999999784e-05, 9.697200000000072e-05, 9.677700000000275e-05, 9.736100000000067e-05, 9.736100000000067e-05, 9.706899999999824e-05, 9.71660000000027e-05, 9.701399999999943e-05, 9.716700000000217e-05, 9.669500000000081e-05, 9.669500000000081e-05, 9.711100000000042e-05, 9.733399999999753e-05, 9.724999999999664e-05, 9.727799999999925e-05, 9.709700000000085e-05, 9.668000000000176e-05, 9.737500000000024e-05, 9.730500000000239e-05, 9.708299999999781e-05, 9.71669999999987e-05, 9.713899999999956e-05, 9.711100000000042e-05, 9.712499999999999e-05, 9.709700000000085e-05, 9.737500000000024e-05, 9.694400000000158e-05, 9.66799999999983e-05, 9.677699999999928e-05, 9.741599999999948e-05, 9.73609999999972e-05, 9.663900000000253e-05, 9.723600000000054e-05, 9.669500000000081e-05, 9.74860000000008e-05, 9.669500000000081e-05]</msg>
<status status="PASS" starttime="20201110 08:38:16.615" endtime="20201110 08:38:16.617"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.610" endtime="20201110 08:38:16.618"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:16.620" endtime="20201110 08:38:16.621"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:16.623" endtime="20201110 08:38:16.643"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.622" endtime="20201110 08:38:16.643"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.618" endtime="20201110 08:38:16.644"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.248" endtime="20201110 08:38:16.644"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.248" endtime="20201110 08:38:16.644"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:16.653" endtime="20201110 08:38:16.673"></status>
</kw>
<msg timestamp="20201110 08:38:16.673" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:16.651" endtime="20201110 08:38:16.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:16.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:16.674" endtime="20201110 08:38:16.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:16.677" endtime="20201110 08:38:16.679"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.648" endtime="20201110 08:38:16.680"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.646" endtime="20201110 08:38:16.680"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:16.687" endtime="20201110 08:38:16.973"></status>
</kw>
<msg timestamp="20201110 08:38:16.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019570333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019668778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:16.685" endtime="20201110 08:38:16.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:16.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019570333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019668778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:16.977" endtime="20201110 08:38:16.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:16.986" endtime="20201110 08:38:16.987"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.683" endtime="20201110 08:38:16.988"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.681" endtime="20201110 08:38:16.988"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:16.992" level="INFO">${RESULT} = [{'time': 0.019668778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.844500000000256e-05, 'source_diff': 9.844500000000256e-05}, {'time': 0.019776764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:16.989" endtime="20201110 08:38:16.993"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:17.007" level="INFO">${ACCURACY} = {'diff': [9.844500000000256e-05, 9.813899999999709e-05, 9.788900000000031e-05, 9.798700000000077e-05, 9.83059999999994e-05, 9.812500000000099e-05, 9.766599999999973e-05, 9.844399999999962e-05, 9.84719...</msg>
<status status="PASS" starttime="20201110 08:38:16.993" endtime="20201110 08:38:17.007"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:17.012" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201110 08:38:17.011" endtime="20201110 08:38:17.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:17.014" level="INFO">VALUE: [9.844500000000256e-05, 9.813899999999709e-05, 9.788900000000031e-05, 9.798700000000077e-05, 9.83059999999994e-05, 9.812500000000099e-05, 9.766599999999973e-05, 9.844399999999962e-05, 9.847199999999875e-05, 9.76799999999993e-05, 9.761100000000092e-05, 9.838899999999734e-05, 9.818099999999927e-05, 9.837499999999777e-05, 9.804199999999957e-05, 9.772200000000147e-05, 9.820799999999894e-05, 9.75279999999995e-05, 9.819499999999884e-05, 9.824999999999764e-05, 9.787500000000074e-05, 9.80410000000001e-05, 9.845799999999919e-05, 9.793099999999902e-05, 9.811100000000142e-05, 9.787500000000074e-05, 9.768099999999877e-05, 9.755600000000211e-05, 9.827800000000025e-05, 9.776400000000018e-05, 9.841600000000048e-05, 9.81799999999998e-05, 9.75409999999996e-05, 9.786100000000117e-05, 9.788900000000031e-05, 9.823599999999807e-05, 9.848599999999832e-05, 9.812500000000099e-05, 9.768099999999877e-05, 9.768100000000224e-05, 9.75279999999995e-05, 9.772299999999748e-05, 9.838900000000081e-05, 9.756899999999874e-05, 9.850000000000136e-05, 9.787500000000074e-05, 9.819400000000283e-05, 9.787500000000074e-05, 9.758299999999831e-05, 9.841699999999995e-05]</msg>
<status status="PASS" starttime="20201110 08:38:17.013" endtime="20201110 08:38:17.015"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.008" endtime="20201110 08:38:17.015"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:17.018" endtime="20201110 08:38:17.019"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:17.021" endtime="20201110 08:38:17.040"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.019" endtime="20201110 08:38:17.041"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.016" endtime="20201110 08:38:17.041"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.645" endtime="20201110 08:38:17.042"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.644" endtime="20201110 08:38:17.042"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:17.050" endtime="20201110 08:38:17.071"></status>
</kw>
<msg timestamp="20201110 08:38:17.071" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:17.049" endtime="20201110 08:38:17.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:17.073" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:17.072" endtime="20201110 08:38:17.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:17.075" endtime="20201110 08:38:17.077"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.046" endtime="20201110 08:38:17.078"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.044" endtime="20201110 08:38:17.078"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:17.084" endtime="20201110 08:38:17.370"></status>
</kw>
<msg timestamp="20201110 08:38:17.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019595361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019694556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:17.083" endtime="20201110 08:38:17.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:17.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019595361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019694556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:17.374" endtime="20201110 08:38:17.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:17.383" endtime="20201110 08:38:17.384"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.080" endtime="20201110 08:38:17.385"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.079" endtime="20201110 08:38:17.385"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:17.389" level="INFO">${RESULT} = [{'time': 0.019694556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.919499999999984e-05, 'source_diff': 9.919499999999984e-05}, {'time': 0.019804583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:17.386" endtime="20201110 08:38:17.390"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:17.403" level="INFO">${ACCURACY} = {'diff': [9.919499999999984e-05, 9.89860000000023e-05, 9.924999999999864e-05, 9.8721999999999e-05, 9.888899999999784e-05, 9.92219999999995e-05, 9.897199999999926e-05, 9.93060000000004e-05, 9.895899999...</msg>
<status status="PASS" starttime="20201110 08:38:17.390" endtime="20201110 08:38:17.403"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:17.407" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201110 08:38:17.406" endtime="20201110 08:38:17.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:17.410" level="INFO">VALUE: [9.919499999999984e-05, 9.89860000000023e-05, 9.924999999999864e-05, 9.8721999999999e-05, 9.888899999999784e-05, 9.92219999999995e-05, 9.897199999999926e-05, 9.93060000000004e-05, 9.895899999999916e-05, 9.93479999999991e-05, 9.86670000000002e-05, 9.869399999999987e-05, 9.94869999999988e-05, 9.929100000000135e-05, 9.93609999999992e-05, 9.861099999999845e-05, 9.908299999999981e-05, 9.915300000000113e-05, 9.85280000000005e-05, 9.883399999999903e-05, 9.884699999999913e-05, 9.938899999999834e-05, 9.898599999999882e-05, 9.923599999999907e-05, 9.91670000000007e-05, 9.865200000000116e-05, 9.852699999999756e-05, 9.876399999999771e-05, 9.924999999999864e-05, 9.909699999999938e-05, 9.905500000000067e-05, 9.951400000000193e-05, 9.893100000000002e-05, 9.91670000000007e-05, 9.918100000000027e-05, 9.859700000000235e-05, 9.902699999999806e-05, 9.922299999999898e-05, 9.945899999999966e-05, 9.86800000000003e-05, 9.895800000000315e-05, 9.905500000000067e-05, 9.905500000000067e-05, 9.869499999999934e-05, 9.913900000000156e-05, 9.854200000000007e-05, 9.868099999999977e-05, 9.875000000000161e-05, 9.862500000000149e-05, 9.882000000000293e-05]</msg>
<status status="PASS" starttime="20201110 08:38:17.409" endtime="20201110 08:38:17.411"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.404" endtime="20201110 08:38:17.411"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:17.414" endtime="20201110 08:38:17.415"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:17.417" endtime="20201110 08:38:17.436"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.415" endtime="20201110 08:38:17.437"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.412" endtime="20201110 08:38:17.437"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.043" endtime="20201110 08:38:17.438"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.042" endtime="20201110 08:38:17.438"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:17.446" endtime="20201110 08:38:17.467"></status>
</kw>
<msg timestamp="20201110 08:38:17.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:17.445" endtime="20201110 08:38:17.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:17.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:17.469" endtime="20201110 08:38:17.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:17.471" endtime="20201110 08:38:17.474"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.442" endtime="20201110 08:38:17.474"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.440" endtime="20201110 08:38:17.475"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:17.481" endtime="20201110 08:38:17.767"></status>
</kw>
<msg timestamp="20201110 08:38:17.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019568972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019668833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:17.479" endtime="20201110 08:38:17.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:17.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019568972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019668833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:17.771" endtime="20201110 08:38:17.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:17.779" endtime="20201110 08:38:17.781"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.477" endtime="20201110 08:38:17.781"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.475" endtime="20201110 08:38:17.782"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:17.786" level="INFO">${RESULT} = [{'time': 0.019668833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.98609999999997e-05, 'source_diff': 9.98609999999997e-05}, {'time': 0.019776861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:38:17.783" endtime="20201110 08:38:17.786"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:17.799" level="INFO">${ACCURACY} = {'diff': [9.98609999999997e-05, 9.976399999999871e-05, 9.981900000000099e-05, 0.0001002220000000005, 0.0001002220000000005, 9.987499999999927e-05, 9.993100000000102e-05, 9.973599999999957e-05, 0.00010...</msg>
<status status="PASS" starttime="20201110 08:38:17.787" endtime="20201110 08:38:17.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:17.804" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201110 08:38:17.803" endtime="20201110 08:38:17.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:17.806" level="INFO">VALUE: [9.98609999999997e-05, 9.976399999999871e-05, 9.981900000000099e-05, 0.0001002220000000005, 0.0001002220000000005, 9.987499999999927e-05, 9.993100000000102e-05, 9.973599999999957e-05, 0.00010007000000000071, 9.968100000000077e-05, 0.00010024999999999964, 0.00010040199999999944, 0.00010001399999999896, 9.984700000000013e-05, 0.00010022299999999998, 9.99999999999994e-05, 0.00010009700000000038, 0.00010051299999999999, 9.99999999999994e-05, 0.00010051399999999946, 9.973599999999957e-05, 0.00010008400000000028, 0.0001003060000000014, 9.984700000000013e-05, 9.974999999999914e-05, 9.997200000000026e-05, 9.962499999999902e-05, 0.0001002220000000005, 9.970899999999991e-05, 9.959699999999988e-05, 0.00010005600000000114, 9.986100000000317e-05, 9.990199999999894e-05, 0.00010008300000000081, 9.991700000000145e-05, 9.984700000000013e-05, 0.00010024999999999964, 0.0001003610000000002, 0.00010024999999999964, 0.0001000419999999981, 0.00010032000000000096, 0.00010044499999999762, 0.00010040299999999891, 9.990299999999841e-05, 9.984700000000013e-05, 9.992999999999808e-05, 9.962499999999902e-05, 0.00010006899999999777, 9.98609999999997e-05, 9.970800000000044e-05]</msg>
<status status="PASS" starttime="20201110 08:38:17.805" endtime="20201110 08:38:17.807"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.800" endtime="20201110 08:38:17.808"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:17.810" endtime="20201110 08:38:17.811"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:17.813" endtime="20201110 08:38:17.833"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.812" endtime="20201110 08:38:17.833"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.808" endtime="20201110 08:38:17.834"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.439" endtime="20201110 08:38:17.834"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.438" endtime="20201110 08:38:17.834"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:17.843" endtime="20201110 08:38:17.864"></status>
</kw>
<msg timestamp="20201110 08:38:17.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:17.841" endtime="20201110 08:38:17.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:17.867" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:17.865" endtime="20201110 08:38:17.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:17.868" endtime="20201110 08:38:17.870"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.839" endtime="20201110 08:38:17.871"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.837" endtime="20201110 08:38:17.871"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:17.878" endtime="20201110 08:38:18.162"></status>
</kw>
<msg timestamp="20201110 08:38:18.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019816014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019916875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:17.876" endtime="20201110 08:38:18.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:18.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019816014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019916875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:18.166" endtime="20201110 08:38:18.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:18.175" endtime="20201110 08:38:18.176"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.874" endtime="20201110 08:38:18.177"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.872" endtime="20201110 08:38:18.177"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:18.181" level="INFO">${RESULT} = [{'time': 0.019916875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001008610000000007, 'source_diff': 0.0001008610000000007}, {'time': 0.020028889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:18.178" endtime="20201110 08:38:18.181"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:18.194" level="INFO">${ACCURACY} = {'diff': [0.0001008610000000007, 0.00010073600000000058, 0.00010105600000000214, 0.00010145900000000166, 0.00010075000000000014, 0.00010061100000000045, 0.00010055600000000164, 0.00010131899999999902,...</msg>
<status status="PASS" starttime="20201110 08:38:18.182" endtime="20201110 08:38:18.195"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:18.199" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201110 08:38:18.198" endtime="20201110 08:38:18.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:18.201" level="INFO">VALUE: [0.0001008610000000007, 0.00010073600000000058, 0.00010105600000000214, 0.00010145900000000166, 0.00010075000000000014, 0.00010061100000000045, 0.00010055600000000164, 0.00010131899999999902, 0.00010147199999999829, 0.00010151400000000046, 0.00010144399999999915, 0.00010120900000000141, 0.00010093099999999855, 0.00010127799999999978, 0.00010111100000000095, 0.00010068100000000177, 0.0001008610000000007, 0.00010138900000000034, 0.00010075000000000014, 0.00010090199999999994, 0.00010094399999999865, 0.00010117999999999933, 0.00010120800000000194, 0.00010059700000000088, 0.00010144399999999915, 0.00010079199999999885, 0.00010123600000000108, 0.00010144499999999862, 0.0001008610000000007, 0.0001006939999999984, 0.00010073700000000005, 0.00010137500000000077, 0.0001005410000000026, 0.00010065299999999916, 0.0001006800000000023, 0.00010075000000000014, 0.00010083300000000156, 0.00010094499999999812, 0.00010109700000000138, 0.00010087500000000027, 0.00010082000000000146, 0.00010111200000000042, 0.00010067999999999883, 0.00010086099999999723, 0.00010113900000000009, 0.00010051399999999946, 0.00010072199999999754, 0.00010144399999999915, 0.00010079199999999885, 0.0001010419999999991]</msg>
<status status="PASS" starttime="20201110 08:38:18.200" endtime="20201110 08:38:18.202"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.195" endtime="20201110 08:38:18.203"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:18.205" endtime="20201110 08:38:18.206"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:18.208" endtime="20201110 08:38:18.228"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.207" endtime="20201110 08:38:18.228"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.203" endtime="20201110 08:38:18.229"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.835" endtime="20201110 08:38:18.229"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.835" endtime="20201110 08:38:18.229"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:18.238" endtime="20201110 08:38:18.259"></status>
</kw>
<msg timestamp="20201110 08:38:18.259" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:18.236" endtime="20201110 08:38:18.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:18.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:18.260" endtime="20201110 08:38:18.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:18.263" endtime="20201110 08:38:18.265"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.234" endtime="20201110 08:38:18.266"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.232" endtime="20201110 08:38:18.266"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:18.273" endtime="20201110 08:38:18.560"></status>
</kw>
<msg timestamp="20201110 08:38:18.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019579792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019682125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:18.271" endtime="20201110 08:38:18.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:18.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019579792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019682125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:18.564" endtime="20201110 08:38:18.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:18.572" endtime="20201110 08:38:18.574"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.269" endtime="20201110 08:38:18.574"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.267" endtime="20201110 08:38:18.574"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:18.578" level="INFO">${RESULT} = [{'time': 0.019682125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010233300000000306, 'source_diff': 0.00010233300000000306}, {'time': 0.019796111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:18.575" endtime="20201110 08:38:18.579"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:18.593" level="INFO">${ACCURACY} = {'diff': [0.00010233300000000306, 0.0001023610000000022, 0.00010219499999999937, 0.00010213899999999762, 0.00010155600000000264, 0.00010198600000000183, 0.00010180599999999942, 0.00010180499999999995,...</msg>
<status status="PASS" starttime="20201110 08:38:18.579" endtime="20201110 08:38:18.593"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:18.597" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201110 08:38:18.596" endtime="20201110 08:38:18.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:18.600" level="INFO">VALUE: [0.00010233300000000306, 0.0001023610000000022, 0.00010219499999999937, 0.00010213899999999762, 0.00010155600000000264, 0.00010198600000000183, 0.00010180599999999942, 0.00010180499999999995, 0.00010212500000000152, 0.00010218000000000033, 0.00010162500000000102, 0.0001018749999999978, 0.00010241700000000048, 0.00010222199999999904, 0.00010186099999999823, 0.0001021809999999998, 0.00010219499999999937, 0.0001023610000000022, 0.00010212499999999805, 0.00010180499999999995, 0.00010216599999999729, 0.00010190300000000041, 0.00010245799999999972, 0.00010234699999999916, 0.00010187500000000127, 0.0001016939999999994, 0.00010193099999999955, 0.00010166699999999973, 0.00010208399999999881, 0.00010162500000000102, 0.0001018879999999979, 0.00010172199999999854, 0.00010212499999999805, 0.00010161099999999798, 0.00010165300000000016, 0.00010245799999999972, 0.00010198600000000183, 0.00010184700000000213, 0.00010229200000000035, 0.00010230599999999992, 0.00010248599999999886, 0.00010212499999999805, 0.00010209799999999838, 0.00010234799999999863, 0.0001021809999999998, 0.00010156899999999927, 0.0001021939999999999, 0.00010231900000000002, 0.00010172199999999854, 0.00010180599999999942]</msg>
<status status="PASS" starttime="20201110 08:38:18.598" endtime="20201110 08:38:18.600"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.594" endtime="20201110 08:38:18.601"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:18.603" endtime="20201110 08:38:18.605"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:18.607" endtime="20201110 08:38:18.626"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.605" endtime="20201110 08:38:18.627"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.602" endtime="20201110 08:38:18.627"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.230" endtime="20201110 08:38:18.627"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.229" endtime="20201110 08:38:18.627"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:18.636" endtime="20201110 08:38:18.657"></status>
</kw>
<msg timestamp="20201110 08:38:18.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:18.634" endtime="20201110 08:38:18.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:18.660" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:18.658" endtime="20201110 08:38:18.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:18.661" endtime="20201110 08:38:18.663"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.632" endtime="20201110 08:38:18.664"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.630" endtime="20201110 08:38:18.664"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:18.671" endtime="20201110 08:38:18.956"></status>
</kw>
<msg timestamp="20201110 08:38:18.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019675028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019778097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:18.669" endtime="20201110 08:38:18.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:18.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019675028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019778097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:18.960" endtime="20201110 08:38:18.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:18.969" endtime="20201110 08:38:18.970"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.667" endtime="20201110 08:38:18.971"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.665" endtime="20201110 08:38:18.971"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:18.975" level="INFO">${RESULT} = [{'time': 0.019778097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010306900000000077, 'source_diff': 0.00010306900000000077}, {'time': 0.019892097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:18.972" endtime="20201110 08:38:18.976"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:18.989" level="INFO">${ACCURACY} = {'diff': [0.00010306900000000077, 0.00010268000000000083, 0.00010270799999999997, 0.00010336200000000267, 0.00010340299999999844, 0.00010305499999999773, 0.00010282, 0.00010272199999999954, 0.00010307...</msg>
<status status="PASS" starttime="20201110 08:38:18.976" endtime="20201110 08:38:18.989"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:18.993" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201110 08:38:18.992" endtime="20201110 08:38:18.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:18.996" level="INFO">VALUE: [0.00010306900000000077, 0.00010268000000000083, 0.00010270799999999997, 0.00010336200000000267, 0.00010340299999999844, 0.00010305499999999773, 0.00010282, 0.00010272199999999954, 0.00010307000000000024, 0.00010297299999999926, 0.00010286099999999923, 0.00010276299999999877, 0.00010349999999999943, 0.00010349999999999943, 0.00010254100000000113, 0.00010261099999999898, 0.00010324999999999918, 0.00010266700000000073, 0.00010269499999999987, 0.00010276399999999825, 0.00010280600000000042, 0.0001033200000000005, 0.00010336099999999973, 0.00010352699999999909, 0.00010294400000000065, 0.00010329100000000188, 0.00010305499999999773, 0.00010320800000000047, 0.00010312499999999905, 0.00010347200000000029, 0.00010283300000000009, 0.00010293100000000055, 0.0001033749999999993, 0.0001031810000000008, 0.00010340299999999844, 0.00010284699999999966, 0.00010280500000000095, 0.00010275000000000215, 0.00010320800000000047, 0.00010272199999999954, 0.00010281899999999705, 0.00010283300000000009, 0.0001025420000000006, 0.000102513999999998, 0.00010261099999999898, 0.00010343099999999758, 0.00010297299999999926, 0.00010344399999999768, 0.0001030550000000012, 0.0001033749999999993]</msg>
<status status="PASS" starttime="20201110 08:38:18.994" endtime="20201110 08:38:18.996"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.990" endtime="20201110 08:38:18.997"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:18.999" endtime="20201110 08:38:19.001"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:19.003" endtime="20201110 08:38:19.022"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.001" endtime="20201110 08:38:19.023"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.998" endtime="20201110 08:38:19.023"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.628" endtime="20201110 08:38:19.023"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.628" endtime="20201110 08:38:19.023"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:19.032" endtime="20201110 08:38:19.052"></status>
</kw>
<msg timestamp="20201110 08:38:19.053" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:19.030" endtime="20201110 08:38:19.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:19.055" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:19.054" endtime="20201110 08:38:19.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:19.056" endtime="20201110 08:38:19.059"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.028" endtime="20201110 08:38:19.059"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.026" endtime="20201110 08:38:19.060"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:19.066" endtime="20201110 08:38:19.351"></status>
</kw>
<msg timestamp="20201110 08:38:19.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019798264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019901958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:19.064" endtime="20201110 08:38:19.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:19.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019798264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019901958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:19.355" endtime="20201110 08:38:19.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:19.364" endtime="20201110 08:38:19.365"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.062" endtime="20201110 08:38:19.366"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.060" endtime="20201110 08:38:19.366"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:19.370" level="INFO">${RESULT} = [{'time': 0.019901958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001036940000000014, 'source_diff': 0.0001036940000000014}, {'time': 0.020017917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:19.367" endtime="20201110 08:38:19.370"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:19.384" level="INFO">${ACCURACY} = {'diff': [0.0001036940000000014, 0.00010386100000000023, 0.00010368099999999783, 0.0001038749999999998, 0.00010411199999999995, 0.00010445800000000172, 0.00010404099999999916, 0.0001042360000000006, 0...</msg>
<status status="PASS" starttime="20201110 08:38:19.371" endtime="20201110 08:38:19.384"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:19.388" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201110 08:38:19.387" endtime="20201110 08:38:19.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:19.391" level="INFO">VALUE: [0.0001036940000000014, 0.00010386100000000023, 0.00010368099999999783, 0.0001038749999999998, 0.00010411199999999995, 0.00010445800000000172, 0.00010404099999999916, 0.0001042360000000006, 0.00010398600000000036, 0.00010438899999999987, 0.00010377799999999882, 0.00010388899999999937, 0.0001037360000000001, 0.00010406900000000177, 0.00010362500000000302, 0.00010381900000000152, 0.00010374999999999968, 0.00010362499999999955, 0.00010430499999999898, 0.00010399999999999993, 0.00010417999999999886, 0.00010447200000000129, 0.00010357000000000074, 0.00010393100000000155, 0.00010422200000000104, 0.00010438899999999987, 0.00010448599999999739, 0.00010365199999999922, 0.00010366599999999879, 0.00010409699999999744, 0.00010441700000000248, 0.00010361099999999998, 0.00010379199999999839, 0.00010368099999999783, 0.00010437499999999683, 0.00010404199999999864, 0.00010349999999999943, 0.0001043750000000003, 0.00010380599999999796, 0.00010369399999999793, 0.0001043750000000003, 0.00010381900000000152, 0.00010436100000000073, 0.00010365300000000216, 0.00010406900000000177, 0.00010377800000000229, 0.0001037079999999975, 0.00010383400000000056, 0.00010374999999999968, 0.00010443100000000205]</msg>
<status status="PASS" starttime="20201110 08:38:19.389" endtime="20201110 08:38:19.391"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.385" endtime="20201110 08:38:19.392"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:19.394" endtime="20201110 08:38:19.395"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:19.398" endtime="20201110 08:38:19.417"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.396" endtime="20201110 08:38:19.417"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.393" endtime="20201110 08:38:19.418"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.024" endtime="20201110 08:38:19.418"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.024" endtime="20201110 08:38:19.418"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.429" endtime="20201110 08:38:19.418"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:19.422" endtime="20201110 08:38:19.442"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.421" endtime="20201110 08:38:19.442"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.420" endtime="20201110 08:38:19.443"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201110 08:37:39.357" endtime="20201110 08:38:19.443" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:19.449" endtime="20201110 08:38:19.469"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.448" endtime="20201110 08:38:19.469"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:19.483" endtime="20201110 08:38:19.500"></status>
</kw>
<msg timestamp="20201110 08:38:19.500" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:19.482" endtime="20201110 08:38:19.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:19.503" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:19.501" endtime="20201110 08:38:19.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:38:19.506" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:38:19.504" endtime="20201110 08:38:19.506"></status>
</kw>
<status status="FAIL" starttime="20201110 08:38:19.479" endtime="20201110 08:38:19.507"></status>
</kw>
<status status="FAIL" starttime="20201110 08:38:19.477" endtime="20201110 08:38:19.507"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.475" endtime="20201110 08:38:19.508"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:38:19.512" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:38:19.511" endtime="20201110 08:38:19.512"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.509" endtime="20201110 08:38:19.512"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.474" endtime="20201110 08:38:19.512"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.473" endtime="20201110 08:38:19.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:19.513" endtime="20201110 08:38:19.515"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.472" endtime="20201110 08:38:19.515"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.470" endtime="20201110 08:38:19.516"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.447" endtime="20201110 08:38:19.516"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:19.526" endtime="20201110 08:38:19.544"></status>
</kw>
<msg timestamp="20201110 08:38:19.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:19.524" endtime="20201110 08:38:19.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:19.547" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:19.546" endtime="20201110 08:38:19.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:19.548" endtime="20201110 08:38:19.550"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.521" endtime="20201110 08:38:19.551"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.519" endtime="20201110 08:38:19.551"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:19.559" endtime="20201110 08:38:19.844"></status>
</kw>
<msg timestamp="20201110 08:38:19.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066947611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066982583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:19.556" endtime="20201110 08:38:19.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:19.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066947611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066982583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:19.849" endtime="20201110 08:38:19.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:19.857" endtime="20201110 08:38:19.859"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.554" endtime="20201110 08:38:19.859"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.552" endtime="20201110 08:38:19.859"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:19.864" level="INFO">${RESULT} = [{'time': 0.066982583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.497199999999423e-05, 'source_diff': 3.497199999999423e-05}, {'time': 0.067017556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:19.860" endtime="20201110 08:38:19.864"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:19.877" level="INFO">${ACCURACY} = {'diff': [3.497199999999423e-05, 3.052800000000189e-05, 3.0513999999995378e-05, 3.052800000000189e-05, 3.052700000000241e-05, 3.054199999999452e-05, 3.052700000000241e-05, 3.054199999999452e-05, 3.054...</msg>
<status status="PASS" starttime="20201110 08:38:19.865" endtime="20201110 08:38:19.877"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:19.882" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201110 08:38:19.881" endtime="20201110 08:38:19.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:19.884" level="INFO">VALUE: [3.497199999999423e-05, 3.052800000000189e-05, 3.0513999999995378e-05, 3.052800000000189e-05, 3.052700000000241e-05, 3.054199999999452e-05, 3.052700000000241e-05, 3.054199999999452e-05, 3.054100000000892e-05, 3.0540999999995044e-05, 3.056999999999366e-05, 3.0526999999988536e-05, 3.054199999999452e-05, 3.052700000000241e-05, 3.052799999998801e-05, 3.052800000000189e-05, 3.0514000000009256e-05, 3.0514000000009256e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.0513999999995378e-05, 3.052700000000241e-05, 3.0542000000008396e-05, 3.052800000000189e-05, 3.0526999999988536e-05, 3.0472999999989203e-05, 3.052800000000189e-05, 3.052799999998801e-05, 3.055600000000103e-05, 3.054199999999452e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.0542000000008396e-05, 3.0513999999995378e-05, 3.047199999998973e-05, 3.0513999999995378e-05, 3.0584000000000167e-05, 3.055500000000155e-05, 3.054199999999452e-05, 3.052800000000189e-05, 3.054199999999452e-05, 3.052700000000241e-05, 3.054199999999452e-05, 3.0514000000009256e-05, 3.0526999999988536e-05, 3.052800000000189e-05, 3.0542000000008396e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.052800000000189e-05]</msg>
<status status="PASS" starttime="20201110 08:38:19.883" endtime="20201110 08:38:19.885"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.878" endtime="20201110 08:38:19.885"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:19.887" endtime="20201110 08:38:19.888"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:19.891" endtime="20201110 08:38:19.910"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.889" endtime="20201110 08:38:19.911"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.886" endtime="20201110 08:38:19.912"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.517" endtime="20201110 08:38:19.912"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.517" endtime="20201110 08:38:19.913"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:19.922" endtime="20201110 08:38:19.939"></status>
</kw>
<msg timestamp="20201110 08:38:19.940" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:19.920" endtime="20201110 08:38:19.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:19.942" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:19.941" endtime="20201110 08:38:19.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:19.943" endtime="20201110 08:38:19.945"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.918" endtime="20201110 08:38:19.945"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.916" endtime="20201110 08:38:19.946"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:19.952" endtime="20201110 08:38:20.239"></status>
</kw>
<msg timestamp="20201110 08:38:20.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021703125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021738056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:19.950" endtime="20201110 08:38:20.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:20.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021703125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021738056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:20.243" endtime="20201110 08:38:20.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:20.251" endtime="20201110 08:38:20.253"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.948" endtime="20201110 08:38:20.254"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.946" endtime="20201110 08:38:20.254"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:20.258" level="INFO">${RESULT} = [{'time': 0.021738056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.493099999999846e-05, 'source_diff': 3.493099999999846e-05}, {'time': 0.021772722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:20.255" endtime="20201110 08:38:20.258"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:20.316" level="INFO">${ACCURACY} = {'diff': [3.493099999999846e-05, 3.052800000000189e-05, 3.054199999999799e-05, 3.054100000000198e-05, 3.052799999999842e-05, 3.0540999999998514e-05, 3.052800000000189e-05, 3.0513000000002843e-05, 3.05...</msg>
<status status="PASS" starttime="20201110 08:38:20.259" endtime="20201110 08:38:20.317"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:20.321" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201110 08:38:20.320" endtime="20201110 08:38:20.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:20.323" level="INFO">VALUE: [3.493099999999846e-05, 3.052800000000189e-05, 3.054199999999799e-05, 3.054100000000198e-05, 3.052799999999842e-05, 3.0540999999998514e-05, 3.052800000000189e-05, 3.0513000000002843e-05, 3.052799999999842e-05, 3.0513999999998848e-05, 3.0513999999998848e-05, 3.052800000000189e-05, 3.054199999999799e-05, 3.054200000000146e-05, 3.0514000000002317e-05, 3.0540999999998514e-05, 3.0584000000000167e-05, 3.052799999999842e-05, 3.054100000000198e-05, 3.0526999999998944e-05, 3.05700000000006e-05, 3.052800000000189e-05, 3.052799999999842e-05, 3.052799999999842e-05, 3.0584000000000167e-05, 3.0513999999998848e-05, 3.052799999999842e-05, 3.056900000000112e-05, 3.054199999999799e-05, 3.052800000000189e-05, 3.0513999999998848e-05, 3.0540999999998514e-05, 3.0472000000000138e-05, 3.052799999999842e-05, 3.052799999999842e-05, 3.0513999999998848e-05, 3.0526999999998944e-05, 3.0500000000002747e-05, 3.052800000000189e-05, 3.0526999999998944e-05, 3.052799999999842e-05, 3.0514000000002317e-05, 3.052799999999842e-05, 3.0526999999998944e-05, 3.054199999999799e-05, 3.054100000000198e-05, 3.055600000000103e-05, 3.0514000000002317e-05, 3.0513999999998848e-05, 3.052800000000189e-05]</msg>
<status status="PASS" starttime="20201110 08:38:20.322" endtime="20201110 08:38:20.324"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.317" endtime="20201110 08:38:20.324"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:20.326" endtime="20201110 08:38:20.328"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:20.330" endtime="20201110 08:38:20.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.329" endtime="20201110 08:38:20.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.325" endtime="20201110 08:38:20.351"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.914" endtime="20201110 08:38:20.351"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.914" endtime="20201110 08:38:20.351"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:20.360" endtime="20201110 08:38:20.378"></status>
</kw>
<msg timestamp="20201110 08:38:20.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:20.359" endtime="20201110 08:38:20.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:20.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:20.380" endtime="20201110 08:38:20.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:20.382" endtime="20201110 08:38:20.384"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.356" endtime="20201110 08:38:20.384"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.354" endtime="20201110 08:38:20.385"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:20.391" endtime="20201110 08:38:20.676"></status>
</kw>
<msg timestamp="20201110 08:38:20.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020460167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020495139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:20.389" endtime="20201110 08:38:20.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:20.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020460167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020495139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:20.680" endtime="20201110 08:38:20.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:20.689" endtime="20201110 08:38:20.690"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.387" endtime="20201110 08:38:20.691"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.385" endtime="20201110 08:38:20.691"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:20.695" level="INFO">${RESULT} = [{'time': 0.020495139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.49719999999977e-05, 'source_diff': 3.49719999999977e-05}, {'time': 0.020529097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:38:20.692" endtime="20201110 08:38:20.696"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:20.709" level="INFO">${ACCURACY} = {'diff': [3.49719999999977e-05, 3.0513999999998848e-05, 3.0526999999998944e-05, 3.052799999999842e-05, 3.0514000000002317e-05, 3.054200000000146e-05, 3.052800000000189e-05, 3.0499999999999278e-05, 3.0...</msg>
<status status="PASS" starttime="20201110 08:38:20.696" endtime="20201110 08:38:20.709"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:20.714" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201110 08:38:20.713" endtime="20201110 08:38:20.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:20.716" level="INFO">VALUE: [3.49719999999977e-05, 3.0513999999998848e-05, 3.0526999999998944e-05, 3.052799999999842e-05, 3.0514000000002317e-05, 3.054200000000146e-05, 3.052800000000189e-05, 3.0499999999999278e-05, 3.0584000000000167e-05, 3.044500000000047e-05, 3.0499999999999278e-05, 3.052799999999842e-05, 3.052800000000189e-05, 3.054199999999799e-05, 3.052800000000189e-05, 3.052799999999842e-05, 3.0499999999999278e-05, 3.0540999999998514e-05, 3.0499999999999278e-05, 3.052799999999842e-05, 3.0513999999998848e-05, 3.05700000000006e-05, 3.061099999999983e-05, 3.052799999999842e-05, 3.0514000000002317e-05, 3.0514000000002317e-05, 3.045900000000004e-05, 3.052700000000241e-05, 3.0499999999999278e-05, 3.056900000000112e-05, 3.0513999999998848e-05, 3.0513999999998848e-05, 3.054200000000146e-05, 3.0526999999998944e-05, 3.052799999999842e-05, 3.052800000000189e-05, 3.056900000000112e-05, 3.052800000000189e-05, 3.052700000000241e-05, 3.054199999999799e-05, 3.059700000000026e-05, 3.054200000000146e-05, 3.052700000000241e-05, 3.052799999999842e-05, 3.0540999999998514e-05, 3.054200000000146e-05, 3.048699999999918e-05, 3.052799999999842e-05, 3.0472000000000138e-05, 3.052800000000189e-05]</msg>
<status status="PASS" starttime="20201110 08:38:20.715" endtime="20201110 08:38:20.717"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.710" endtime="20201110 08:38:20.717"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:20.720" endtime="20201110 08:38:20.721"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:20.723" endtime="20201110 08:38:20.742"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.722" endtime="20201110 08:38:20.743"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.718" endtime="20201110 08:38:20.743"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.352" endtime="20201110 08:38:20.744"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.351" endtime="20201110 08:38:20.744"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:20.753" endtime="20201110 08:38:20.771"></status>
</kw>
<msg timestamp="20201110 08:38:20.771" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:20.752" endtime="20201110 08:38:20.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:20.774" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:20.772" endtime="20201110 08:38:20.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:20.775" endtime="20201110 08:38:20.776"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.748" endtime="20201110 08:38:20.777"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.746" endtime="20201110 08:38:20.777"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:20.784" endtime="20201110 08:38:21.069"></status>
</kw>
<msg timestamp="20201110 08:38:21.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020490681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020525653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:20.782" endtime="20201110 08:38:21.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020490681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020525653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:21.073" endtime="20201110 08:38:21.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:21.082" endtime="20201110 08:38:21.083"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.780" endtime="20201110 08:38:21.084"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.778" endtime="20201110 08:38:21.084"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:21.088" level="INFO">${RESULT} = [{'time': 0.020525653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.497200000000117e-05, 'source_diff': 3.497200000000117e-05}, {'time': 0.020558986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:21.085" endtime="20201110 08:38:21.089"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:21.102" level="INFO">${ACCURACY} = {'diff': [3.497200000000117e-05, 3.0444000000000998e-05, 3.0540999999998514e-05, 3.0584000000000167e-05, 3.0499999999999278e-05, 3.052800000000189e-05, 3.054199999999799e-05, 3.0513999999998848e-05, 3...</msg>
<status status="PASS" starttime="20201110 08:38:21.089" endtime="20201110 08:38:21.102"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.107" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201110 08:38:21.106" endtime="20201110 08:38:21.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.109" level="INFO">VALUE: [3.497200000000117e-05, 3.0444000000000998e-05, 3.0540999999998514e-05, 3.0584000000000167e-05, 3.0499999999999278e-05, 3.052800000000189e-05, 3.054199999999799e-05, 3.0513999999998848e-05, 3.052800000000189e-05, 3.044500000000047e-05, 3.052799999999842e-05, 3.0485999999999708e-05, 3.0540999999998514e-05, 3.0514000000002317e-05, 3.054200000000146e-05, 3.052799999999842e-05, 3.052799999999842e-05, 3.054200000000146e-05, 3.052800000000189e-05, 3.054200000000146e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.054100000000198e-05, 3.0514000000002317e-05, 3.0513999999998848e-05, 3.052799999999842e-05, 3.0485999999999708e-05, 3.052799999999842e-05, 3.052800000000189e-05, 3.0514000000002317e-05, 3.054100000000198e-05, 3.052799999999842e-05, 3.0513999999998848e-05, 3.0514000000002317e-05, 3.052800000000189e-05, 3.0499999999999278e-05, 3.0513999999998848e-05, 3.052799999999842e-05, 3.052800000000189e-05, 3.0500000000002747e-05, 3.0513999999998848e-05, 3.052799999999842e-05, 3.0568999999997654e-05, 3.052800000000189e-05, 3.052700000000241e-05, 3.052799999999842e-05, 3.0514000000002317e-05, 3.052799999999842e-05, 3.0485999999999708e-05, 3.054200000000146e-05]</msg>
<status status="PASS" starttime="20201110 08:38:21.108" endtime="20201110 08:38:21.110"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.103" endtime="20201110 08:38:21.110"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:21.113" endtime="20201110 08:38:21.114"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:21.116" endtime="20201110 08:38:21.135"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.115" endtime="20201110 08:38:21.136"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.111" endtime="20201110 08:38:21.136"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.745" endtime="20201110 08:38:21.137"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.744" endtime="20201110 08:38:21.137"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:21.146" endtime="20201110 08:38:21.164"></status>
</kw>
<msg timestamp="20201110 08:38:21.164" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:21.144" endtime="20201110 08:38:21.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.167" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:21.165" endtime="20201110 08:38:21.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:21.168" endtime="20201110 08:38:21.169"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.141" endtime="20201110 08:38:21.170"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.139" endtime="20201110 08:38:21.170"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:21.177" endtime="20201110 08:38:21.462"></status>
</kw>
<msg timestamp="20201110 08:38:21.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020587764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020622792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:21.175" endtime="20201110 08:38:21.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020587764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020622792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:21.466" endtime="20201110 08:38:21.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:21.475" endtime="20201110 08:38:21.476"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.173" endtime="20201110 08:38:21.477"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.171" endtime="20201110 08:38:21.477"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:21.481" level="INFO">${RESULT} = [{'time': 0.020622792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.502799999999945e-05, 'source_diff': 3.502799999999945e-05}, {'time': 0.020656153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:21.478" endtime="20201110 08:38:21.482"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:21.495" level="INFO">${ACCURACY} = {'diff': [3.502799999999945e-05, 3.0513999999998848e-05, 3.056999999999713e-05, 3.0513999999998848e-05, 3.0514000000002317e-05, 3.0526999999998944e-05, 3.0568999999997654e-05, 3.0514000000002317e-05, ...</msg>
<status status="PASS" starttime="20201110 08:38:21.482" endtime="20201110 08:38:21.495"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.499" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201110 08:38:21.498" endtime="20201110 08:38:21.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.502" level="INFO">VALUE: [3.502799999999945e-05, 3.0513999999998848e-05, 3.056999999999713e-05, 3.0513999999998848e-05, 3.0514000000002317e-05, 3.0526999999998944e-05, 3.0568999999997654e-05, 3.0514000000002317e-05, 3.052799999999842e-05, 3.0526999999998944e-05, 3.052800000000189e-05, 3.0514000000002317e-05, 3.052799999999842e-05, 3.0472000000000138e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.054199999999799e-05, 3.052799999999842e-05, 3.0526999999998944e-05, 3.058300000000069e-05, 3.054200000000146e-05, 3.0526999999998944e-05, 3.0540999999998514e-05, 3.054199999999799e-05, 3.0514000000002317e-05, 3.0526999999998944e-05, 3.052800000000189e-05, 3.052799999999842e-05, 3.0431000000000902e-05, 3.052700000000241e-05, 3.054200000000146e-05, 3.054199999999799e-05, 3.0513999999998848e-05, 3.054200000000146e-05, 3.052800000000189e-05, 3.054200000000146e-05, 3.0513999999998848e-05, 3.0513999999998848e-05, 3.0526999999998944e-05, 3.052799999999842e-05, 3.052799999999842e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.054200000000146e-05, 3.052799999999842e-05, 3.0499999999999278e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.058300000000069e-05]</msg>
<status status="PASS" starttime="20201110 08:38:21.500" endtime="20201110 08:38:21.503"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.496" endtime="20201110 08:38:21.503"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:21.506" endtime="20201110 08:38:21.507"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:21.509" endtime="20201110 08:38:21.528"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.507" endtime="20201110 08:38:21.529"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.504" endtime="20201110 08:38:21.529"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.138" endtime="20201110 08:38:21.530"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.137" endtime="20201110 08:38:21.530"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:21.538" endtime="20201110 08:38:21.556"></status>
</kw>
<msg timestamp="20201110 08:38:21.557" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:21.537" endtime="20201110 08:38:21.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.559" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:21.558" endtime="20201110 08:38:21.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:21.560" endtime="20201110 08:38:21.562"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.534" endtime="20201110 08:38:21.563"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.532" endtime="20201110 08:38:21.563"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:21.570" endtime="20201110 08:38:21.855"></status>
</kw>
<msg timestamp="20201110 08:38:21.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019780764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019815778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:21.568" endtime="20201110 08:38:21.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019780764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019815778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:21.859" endtime="20201110 08:38:21.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:21.868" endtime="20201110 08:38:21.869"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.565" endtime="20201110 08:38:21.870"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.564" endtime="20201110 08:38:21.870"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:21.875" level="INFO">${RESULT} = [{'time': 0.019815778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.501399999999988e-05, 'source_diff': 3.501399999999988e-05}, {'time': 0.019849514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:21.871" endtime="20201110 08:38:21.875"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:21.889" level="INFO">${ACCURACY} = {'diff': [3.501399999999988e-05, 3.052799999999842e-05, 3.052799999999842e-05, 3.0512999999999374e-05, 3.054200000000146e-05, 3.052800000000189e-05, 3.0513999999998848e-05, 3.0540999999998514e-05, 3.0...</msg>
<status status="PASS" starttime="20201110 08:38:21.875" endtime="20201110 08:38:21.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.894" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201110 08:38:21.893" endtime="20201110 08:38:21.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.896" level="INFO">VALUE: [3.501399999999988e-05, 3.052799999999842e-05, 3.052799999999842e-05, 3.0512999999999374e-05, 3.054200000000146e-05, 3.052800000000189e-05, 3.0513999999998848e-05, 3.0540999999998514e-05, 3.0554999999998084e-05, 3.059700000000026e-05, 3.052799999999842e-05, 3.0514000000002317e-05, 3.052800000000189e-05, 3.0514000000002317e-05, 3.054100000000198e-05, 3.055500000000155e-05, 3.055599999999756e-05, 3.052800000000189e-05, 3.052799999999842e-05, 3.052799999999842e-05, 3.056900000000112e-05, 3.052800000000189e-05, 3.052799999999842e-05, 3.0472000000000138e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.0499999999999278e-05, 3.0444000000000998e-05, 3.052799999999842e-05, 3.0430000000001428e-05, 3.054100000000198e-05, 3.0500000000002747e-05, 3.054200000000146e-05, 3.0584000000000167e-05, 3.058300000000069e-05, 3.052799999999842e-05, 3.0485999999999708e-05, 3.055600000000103e-05, 3.0584000000000167e-05, 3.052800000000189e-05, 3.052799999999842e-05, 3.054200000000146e-05, 3.052799999999842e-05, 3.0526999999998944e-05, 3.052799999999842e-05, 3.052700000000241e-05, 3.052800000000189e-05, 3.0514000000002317e-05, 3.052800000000189e-05, 3.05700000000006e-05]</msg>
<status status="PASS" starttime="20201110 08:38:21.895" endtime="20201110 08:38:21.897"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.890" endtime="20201110 08:38:21.897"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:21.900" endtime="20201110 08:38:21.901"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:21.903" endtime="20201110 08:38:21.922"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.902" endtime="20201110 08:38:21.923"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.898" endtime="20201110 08:38:21.923"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.531" endtime="20201110 08:38:21.924"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.530" endtime="20201110 08:38:21.924"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:21.932" endtime="20201110 08:38:21.950"></status>
</kw>
<msg timestamp="20201110 08:38:21.951" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:21.931" endtime="20201110 08:38:21.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.953" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:21.952" endtime="20201110 08:38:21.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:21.954" endtime="20201110 08:38:21.957"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.928" endtime="20201110 08:38:21.957"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.926" endtime="20201110 08:38:21.958"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:21.964" endtime="20201110 08:38:22.250"></status>
</kw>
<msg timestamp="20201110 08:38:22.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019636181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019671181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:21.963" endtime="20201110 08:38:22.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:22.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019636181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019671181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:22.254" endtime="20201110 08:38:22.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:22.262" endtime="20201110 08:38:22.264"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.960" endtime="20201110 08:38:22.264"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.958" endtime="20201110 08:38:22.265"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:22.269" level="INFO">${RESULT} = [{'time': 0.019671181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.500000000000031e-05, 'source_diff': 3.500000000000031e-05}, {'time': 0.01970625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:38:22.266" endtime="20201110 08:38:22.269"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:22.283" level="INFO">${ACCURACY} = {'diff': [3.500000000000031e-05, 3.052800000000189e-05, 3.052799999999842e-05, 3.054199999999799e-05, 3.0514000000002317e-05, 3.0540999999998514e-05, 3.0514000000002317e-05, 3.0514000000002317e-05, 3....</msg>
<status status="PASS" starttime="20201110 08:38:22.270" endtime="20201110 08:38:22.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:22.287" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201110 08:38:22.286" endtime="20201110 08:38:22.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:22.290" level="INFO">VALUE: [3.500000000000031e-05, 3.052800000000189e-05, 3.052799999999842e-05, 3.054199999999799e-05, 3.0514000000002317e-05, 3.0540999999998514e-05, 3.0514000000002317e-05, 3.0514000000002317e-05, 3.0499999999999278e-05, 3.052799999999842e-05, 3.0582999999997224e-05, 3.052799999999842e-05, 3.0554999999998084e-05, 3.054200000000146e-05, 3.0526999999998944e-05, 3.054200000000146e-05, 3.052800000000189e-05, 3.0540999999998514e-05, 3.052800000000189e-05, 3.0526999999998944e-05, 3.056999999999713e-05, 3.052799999999842e-05, 3.052799999999842e-05, 3.054100000000198e-05, 3.0513999999998848e-05, 3.0513999999998848e-05, 3.0513999999998848e-05, 3.0513999999998848e-05, 3.054199999999799e-05, 3.052799999999842e-05, 3.054199999999799e-05, 3.055500000000155e-05, 3.0513999999998848e-05, 3.052800000000189e-05, 3.0485999999999708e-05, 3.054200000000146e-05, 3.055600000000103e-05, 3.052799999999842e-05, 3.054200000000146e-05, 3.052800000000189e-05, 3.055500000000155e-05, 3.0526999999998944e-05, 3.0513999999998848e-05, 3.052799999999842e-05, 3.052800000000189e-05, 3.0499999999999278e-05, 3.0540999999998514e-05, 3.052799999999842e-05, 3.0526999999998944e-05, 3.054200000000146e-05]</msg>
<status status="PASS" starttime="20201110 08:38:22.288" endtime="20201110 08:38:22.294"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.284" endtime="20201110 08:38:22.295"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:22.297" endtime="20201110 08:38:22.298"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:22.301" endtime="20201110 08:38:22.320"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.299" endtime="20201110 08:38:22.320"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.296" endtime="20201110 08:38:22.321"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.925" endtime="20201110 08:38:22.321"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.924" endtime="20201110 08:38:22.321"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:22.330" endtime="20201110 08:38:22.348"></status>
</kw>
<msg timestamp="20201110 08:38:22.349" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:22.328" endtime="20201110 08:38:22.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:22.351" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:22.350" endtime="20201110 08:38:22.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:22.352" endtime="20201110 08:38:22.355"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.326" endtime="20201110 08:38:22.355"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.324" endtime="20201110 08:38:22.356"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:22.362" endtime="20201110 08:38:22.647"></status>
</kw>
<msg timestamp="20201110 08:38:22.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019751208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019786208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:22.360" endtime="20201110 08:38:22.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:22.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019751208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019786208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:22.652" endtime="20201110 08:38:22.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:22.660" endtime="20201110 08:38:22.662"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.358" endtime="20201110 08:38:22.662"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.356" endtime="20201110 08:38:22.663"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:22.667" level="INFO">${RESULT} = [{'time': 0.019786208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.500000000000031e-05, 'source_diff': 3.500000000000031e-05}, {'time': 0.019821653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:22.663" endtime="20201110 08:38:22.667"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:22.680" level="INFO">${ACCURACY} = {'diff': [3.500000000000031e-05, 3.0514000000002317e-05, 3.0513000000002843e-05, 3.0513999999998848e-05, 3.0472000000000138e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.0485999999999708e-05, 3...</msg>
<status status="PASS" starttime="20201110 08:38:22.668" endtime="20201110 08:38:22.681"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:22.685" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201110 08:38:22.684" endtime="20201110 08:38:22.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:22.687" level="INFO">VALUE: [3.500000000000031e-05, 3.0514000000002317e-05, 3.0513000000002843e-05, 3.0513999999998848e-05, 3.0472000000000138e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.0485999999999708e-05, 3.052799999999842e-05, 3.0540999999998514e-05, 3.0513999999998848e-05, 3.054199999999799e-05, 3.0513999999998848e-05, 3.052800000000189e-05, 3.052799999999842e-05, 3.055500000000155e-05, 3.0526999999998944e-05, 3.052800000000189e-05, 3.0513999999998848e-05, 3.054200000000146e-05, 3.056900000000112e-05, 3.056900000000112e-05, 3.054100000000198e-05, 3.052799999999842e-05, 3.052799999999842e-05, 3.052799999999842e-05, 3.054199999999799e-05, 3.0526999999998944e-05, 3.052800000000189e-05, 3.0526999999998944e-05, 3.0513999999998848e-05, 3.052800000000189e-05, 3.055599999999756e-05, 3.0499999999999278e-05, 3.054200000000146e-05, 3.052700000000241e-05, 3.0431000000000902e-05, 3.0513999999998848e-05, 3.0514000000002317e-05, 3.0514000000002317e-05, 3.054199999999799e-05, 3.054199999999799e-05, 3.0500000000002747e-05, 3.054199999999799e-05, 3.054200000000146e-05, 3.0526999999998944e-05, 3.052799999999842e-05, 3.054200000000146e-05, 3.052799999999842e-05, 3.052800000000189e-05]</msg>
<status status="PASS" starttime="20201110 08:38:22.686" endtime="20201110 08:38:22.688"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.681" endtime="20201110 08:38:22.689"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:22.691" endtime="20201110 08:38:22.692"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:22.694" endtime="20201110 08:38:22.714"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.693" endtime="20201110 08:38:22.714"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.689" endtime="20201110 08:38:22.715"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.322" endtime="20201110 08:38:22.715"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.322" endtime="20201110 08:38:22.715"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:22.724" endtime="20201110 08:38:22.740"></status>
</kw>
<msg timestamp="20201110 08:38:22.740" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:22.722" endtime="20201110 08:38:22.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:22.743" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:22.741" endtime="20201110 08:38:22.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:22.744" endtime="20201110 08:38:22.746"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.719" endtime="20201110 08:38:22.747"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.717" endtime="20201110 08:38:22.747"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:22.754" endtime="20201110 08:38:23.039"></status>
</kw>
<msg timestamp="20201110 08:38:23.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019649056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019684028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:22.752" endtime="20201110 08:38:23.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:23.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019649056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019684028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:23.043" endtime="20201110 08:38:23.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:23.052" endtime="20201110 08:38:23.054"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.750" endtime="20201110 08:38:23.054"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.748" endtime="20201110 08:38:23.054"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:23.059" level="INFO">${RESULT} = [{'time': 0.019684028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.49719999999977e-05, 'source_diff': 3.49719999999977e-05}, {'time': 0.019717, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3....</msg>
<status status="PASS" starttime="20201110 08:38:23.055" endtime="20201110 08:38:23.059"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:23.072" level="INFO">${ACCURACY} = {'diff': [3.49719999999977e-05, 3.052799999999842e-05, 3.0540999999998514e-05, 3.052799999999842e-05, 3.055600000000103e-05, 3.05700000000006e-05, 3.0526999999998944e-05, 3.054199999999799e-05, 3.0541...</msg>
<status status="PASS" starttime="20201110 08:38:23.059" endtime="20201110 08:38:23.073"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:23.077" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201110 08:38:23.076" endtime="20201110 08:38:23.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:23.079" level="INFO">VALUE: [3.49719999999977e-05, 3.052799999999842e-05, 3.0540999999998514e-05, 3.052799999999842e-05, 3.055600000000103e-05, 3.05700000000006e-05, 3.0526999999998944e-05, 3.054199999999799e-05, 3.054199999999799e-05, 3.054200000000146e-05, 3.055500000000155e-05, 3.0500000000002747e-05, 3.052799999999842e-05, 3.052800000000189e-05, 3.0514000000002317e-05, 3.0526999999998944e-05, 3.0444000000000998e-05, 3.052800000000189e-05, 3.0584000000000167e-05, 3.0526999999998944e-05, 3.054200000000146e-05, 3.054199999999799e-05, 3.052799999999842e-05, 3.052799999999842e-05, 3.0513999999998848e-05, 3.052799999999842e-05, 3.052799999999842e-05, 3.0513999999998848e-05, 3.0485999999999708e-05, 3.0540999999998514e-05, 3.0513999999998848e-05, 3.056999999999713e-05, 3.0499999999999278e-05, 3.054100000000198e-05, 3.052799999999842e-05, 3.0526999999998944e-05, 3.055600000000103e-05, 3.054200000000146e-05, 3.044500000000047e-05, 3.059700000000026e-05, 3.052800000000189e-05, 3.0526999999998944e-05, 3.052800000000189e-05, 3.052799999999842e-05, 3.0513999999998848e-05, 3.0513999999998848e-05, 3.0526999999998944e-05, 3.05700000000006e-05, 3.05700000000006e-05, 3.052800000000189e-05]</msg>
<status status="PASS" starttime="20201110 08:38:23.078" endtime="20201110 08:38:23.080"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.073" endtime="20201110 08:38:23.080"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:23.083" endtime="20201110 08:38:23.084"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:23.086" endtime="20201110 08:38:23.105"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.085" endtime="20201110 08:38:23.106"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.081" endtime="20201110 08:38:23.106"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.716" endtime="20201110 08:38:23.107"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.715" endtime="20201110 08:38:23.107"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:23.115" endtime="20201110 08:38:23.132"></status>
</kw>
<msg timestamp="20201110 08:38:23.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:23.114" endtime="20201110 08:38:23.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:23.135" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:23.133" endtime="20201110 08:38:23.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:23.136" endtime="20201110 08:38:23.138"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.111" endtime="20201110 08:38:23.139"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.109" endtime="20201110 08:38:23.139"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:23.146" endtime="20201110 08:38:23.431"></status>
</kw>
<msg timestamp="20201110 08:38:23.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019754361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019789347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:23.144" endtime="20201110 08:38:23.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:23.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019754361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019789347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:23.435" endtime="20201110 08:38:23.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:23.443" endtime="20201110 08:38:23.445"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.141" endtime="20201110 08:38:23.445"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.140" endtime="20201110 08:38:23.446"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:23.450" level="INFO">${RESULT} = [{'time': 0.019789347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.498599999999727e-05, 'source_diff': 3.498599999999727e-05}, {'time': 0.019824125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:23.447" endtime="20201110 08:38:23.450"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:23.464" level="INFO">${ACCURACY} = {'diff': [3.498599999999727e-05, 3.054200000000146e-05, 3.0513999999998848e-05, 3.0431000000000902e-05, 3.0568999999997654e-05, 3.0485999999999708e-05, 3.0499999999999278e-05, 3.054199999999799e-05, 3...</msg>
<status status="PASS" starttime="20201110 08:38:23.451" endtime="20201110 08:38:23.465"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:23.469" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201110 08:38:23.468" endtime="20201110 08:38:23.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:23.471" level="INFO">VALUE: [3.498599999999727e-05, 3.054200000000146e-05, 3.0513999999998848e-05, 3.0431000000000902e-05, 3.0568999999997654e-05, 3.0485999999999708e-05, 3.0499999999999278e-05, 3.054199999999799e-05, 3.0540999999998514e-05, 3.0514000000002317e-05, 3.054200000000146e-05, 3.054200000000146e-05, 3.054199999999799e-05, 3.0514000000002317e-05, 3.054100000000198e-05, 3.05700000000006e-05, 3.0514000000002317e-05, 3.04579999999971e-05, 3.052799999999842e-05, 3.0514000000002317e-05, 3.052799999999842e-05, 3.0514000000002317e-05, 3.0514000000002317e-05, 3.054100000000198e-05, 3.054199999999799e-05, 3.047300000000308e-05, 3.0526999999998944e-05, 3.052799999999842e-05, 3.0512999999999374e-05, 3.0513999999998848e-05, 3.0540999999998514e-05, 3.0526999999998944e-05, 3.052799999999842e-05, 3.0513999999998848e-05, 3.05700000000006e-05, 3.055600000000103e-05, 3.052799999999842e-05, 3.058300000000069e-05, 3.054199999999799e-05, 3.054199999999799e-05, 3.054200000000146e-05, 3.0499999999999278e-05, 3.052799999999842e-05, 3.0513999999998848e-05, 3.052799999999842e-05, 3.054200000000146e-05, 3.0526999999998944e-05, 3.054200000000146e-05, 3.0444000000000998e-05, 3.052799999999842e-05]</msg>
<status status="PASS" starttime="20201110 08:38:23.470" endtime="20201110 08:38:23.472"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.465" endtime="20201110 08:38:23.473"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:23.475" endtime="20201110 08:38:23.476"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:23.478" endtime="20201110 08:38:23.498"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.477" endtime="20201110 08:38:23.498"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.473" endtime="20201110 08:38:23.499"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.108" endtime="20201110 08:38:23.499"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.107" endtime="20201110 08:38:23.499"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:23.508" endtime="20201110 08:38:23.526"></status>
</kw>
<msg timestamp="20201110 08:38:23.526" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:23.506" endtime="20201110 08:38:23.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:23.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:23.527" endtime="20201110 08:38:23.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:23.530" endtime="20201110 08:38:23.532"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.504" endtime="20201110 08:38:23.533"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.502" endtime="20201110 08:38:23.533"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:23.540" endtime="20201110 08:38:23.826"></status>
</kw>
<msg timestamp="20201110 08:38:23.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019781625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019816611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:23.538" endtime="20201110 08:38:23.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:23.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019781625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019816611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:23.830" endtime="20201110 08:38:23.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:23.839" endtime="20201110 08:38:23.840"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.535" endtime="20201110 08:38:23.841"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.534" endtime="20201110 08:38:23.841"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:23.845" level="INFO">${RESULT} = [{'time': 0.019816611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.498600000000074e-05, 'source_diff': 3.498600000000074e-05}, {'time': 0.019849694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:23.842" endtime="20201110 08:38:23.846"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:23.859" level="INFO">${ACCURACY} = {'diff': [3.498600000000074e-05, 3.0500000000002747e-05, 3.0514000000002317e-05, 3.054200000000146e-05, 3.0514000000002317e-05, 3.0499999999999278e-05, 3.0499999999999278e-05, 3.0485999999999708e-05, ...</msg>
<status status="PASS" starttime="20201110 08:38:23.846" endtime="20201110 08:38:23.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:23.864" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201110 08:38:23.863" endtime="20201110 08:38:23.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:23.866" level="INFO">VALUE: [3.498600000000074e-05, 3.0500000000002747e-05, 3.0514000000002317e-05, 3.054200000000146e-05, 3.0514000000002317e-05, 3.0499999999999278e-05, 3.0499999999999278e-05, 3.0485999999999708e-05, 3.052700000000241e-05, 3.052800000000189e-05, 3.0513999999998848e-05, 3.0513999999998848e-05, 3.0526999999998944e-05, 3.052799999999842e-05, 3.044399999999753e-05, 3.0514000000002317e-05, 3.052700000000241e-05, 3.052800000000189e-05, 3.0540999999998514e-05, 3.0526999999998944e-05, 3.061099999999983e-05, 3.0526999999998944e-05, 3.0513999999998848e-05, 3.0526999999998944e-05, 3.052799999999842e-05, 3.052799999999842e-05, 3.0513999999998848e-05, 3.052800000000189e-05, 3.054100000000198e-05, 3.052800000000189e-05, 3.052799999999842e-05, 3.052799999999842e-05, 3.055500000000155e-05, 3.052800000000189e-05, 3.054100000000198e-05, 3.045900000000004e-05, 3.0472000000000138e-05, 3.052799999999842e-05, 3.052799999999842e-05, 3.054100000000198e-05, 3.0513999999998848e-05, 3.054200000000146e-05, 3.054200000000146e-05, 3.055600000000103e-05, 3.052800000000189e-05, 3.0526999999998944e-05, 3.054199999999799e-05, 3.048699999999918e-05, 3.052799999999842e-05, 3.0513999999998848e-05]</msg>
<status status="PASS" starttime="20201110 08:38:23.865" endtime="20201110 08:38:23.867"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.860" endtime="20201110 08:38:23.867"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:23.870" endtime="20201110 08:38:23.871"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:23.873" endtime="20201110 08:38:23.892"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.872" endtime="20201110 08:38:23.893"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.868" endtime="20201110 08:38:23.893"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.500" endtime="20201110 08:38:23.894"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.500" endtime="20201110 08:38:23.894"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:23.902" endtime="20201110 08:38:23.920"></status>
</kw>
<msg timestamp="20201110 08:38:23.920" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:23.901" endtime="20201110 08:38:23.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:23.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:23.921" endtime="20201110 08:38:23.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:23.924" endtime="20201110 08:38:23.926"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.898" endtime="20201110 08:38:23.927"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.896" endtime="20201110 08:38:23.927"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:23.934" endtime="20201110 08:38:24.218"></status>
</kw>
<msg timestamp="20201110 08:38:24.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019705472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019740444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:23.932" endtime="20201110 08:38:24.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:24.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019705472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019740444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:24.223" endtime="20201110 08:38:24.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:24.231" endtime="20201110 08:38:24.233"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.929" endtime="20201110 08:38:24.234"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.928" endtime="20201110 08:38:24.234"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:24.238" level="INFO">${RESULT} = [{'time': 0.019740444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.49719999999977e-05, 'source_diff': 3.49719999999977e-05}, {'time': 0.019775333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:38:24.235" endtime="20201110 08:38:24.238"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:24.252" level="INFO">${ACCURACY} = {'diff': [3.49719999999977e-05, 3.058300000000069e-05, 3.059700000000026e-05, 3.052800000000189e-05, 3.054199999999799e-05, 3.044500000000047e-05, 3.052799999999842e-05, 3.0472000000000138e-05, 3.0527...</msg>
<status status="PASS" starttime="20201110 08:38:24.239" endtime="20201110 08:38:24.252"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:24.256" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201110 08:38:24.255" endtime="20201110 08:38:24.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:24.259" level="INFO">VALUE: [3.49719999999977e-05, 3.058300000000069e-05, 3.059700000000026e-05, 3.052800000000189e-05, 3.054199999999799e-05, 3.044500000000047e-05, 3.052799999999842e-05, 3.0472000000000138e-05, 3.052799999999842e-05, 3.054100000000198e-05, 3.052799999999842e-05, 3.0514000000002317e-05, 3.0513999999998848e-05, 3.054199999999799e-05, 3.0513999999998848e-05, 3.054200000000146e-05, 3.052799999999842e-05, 3.0513999999998848e-05, 3.054200000000146e-05, 3.052800000000189e-05, 3.054100000000198e-05, 3.058300000000069e-05, 3.054100000000198e-05, 3.0526999999998944e-05, 3.054199999999799e-05, 3.054200000000146e-05, 3.052799999999842e-05, 3.0526999999998944e-05, 3.052799999999842e-05, 3.052799999999842e-05, 3.058300000000069e-05, 3.0540999999998514e-05, 3.054199999999799e-05, 3.0499999999999278e-05, 3.0526999999998944e-05, 3.052800000000189e-05, 3.052700000000241e-05, 3.054200000000146e-05, 3.054100000000198e-05, 3.052800000000189e-05, 3.0499999999999278e-05, 3.052800000000189e-05, 3.0513999999998848e-05, 3.0526999999998944e-05, 3.052799999999842e-05, 3.054200000000146e-05, 3.052799999999842e-05, 3.052799999999842e-05, 3.0513999999998848e-05, 3.0472000000000138e-05]</msg>
<status status="PASS" starttime="20201110 08:38:24.257" endtime="20201110 08:38:24.259"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.253" endtime="20201110 08:38:24.260"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:24.262" endtime="20201110 08:38:24.263"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:24.266" endtime="20201110 08:38:24.285"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.264" endtime="20201110 08:38:24.285"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.260" endtime="20201110 08:38:24.286"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.895" endtime="20201110 08:38:24.286"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.894" endtime="20201110 08:38:24.286"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:24.295" endtime="20201110 08:38:24.312"></status>
</kw>
<msg timestamp="20201110 08:38:24.313" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:24.293" endtime="20201110 08:38:24.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:24.315" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:24.314" endtime="20201110 08:38:24.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:24.316" endtime="20201110 08:38:24.319"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.291" endtime="20201110 08:38:24.319"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.289" endtime="20201110 08:38:24.320"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:24.326" endtime="20201110 08:38:24.613"></status>
</kw>
<msg timestamp="20201110 08:38:24.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019742014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019777014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:24.325" endtime="20201110 08:38:24.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:24.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019742014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019777014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:24.618" endtime="20201110 08:38:24.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:24.627" endtime="20201110 08:38:24.629"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.322" endtime="20201110 08:38:24.629"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.320" endtime="20201110 08:38:24.630"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:24.634" level="INFO">${RESULT} = [{'time': 0.019777014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.500000000000031e-05, 'source_diff': 3.500000000000031e-05}, {'time': 0.019813528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:24.631" endtime="20201110 08:38:24.634"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:24.648" level="INFO">${ACCURACY} = {'diff': [3.500000000000031e-05, 3.052800000000189e-05, 3.06249999999994e-05, 3.047299999999961e-05, 3.0499999999999278e-05, 3.052800000000189e-05, 3.055600000000103e-05, 3.0499999999999278e-05, 3.052...</msg>
<status status="PASS" starttime="20201110 08:38:24.635" endtime="20201110 08:38:24.648"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:24.652" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201110 08:38:24.651" endtime="20201110 08:38:24.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:24.655" level="INFO">VALUE: [3.500000000000031e-05, 3.052800000000189e-05, 3.06249999999994e-05, 3.047299999999961e-05, 3.0499999999999278e-05, 3.052800000000189e-05, 3.055600000000103e-05, 3.0499999999999278e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.055600000000103e-05, 3.094399999999803e-05, 3.055599999999756e-05, 3.091599999999889e-05, 3.047199999999667e-05, 3.090299999999879e-05, 3.055600000000103e-05, 3.0526999999998944e-05, 3.0513999999998848e-05, 3.056900000000112e-05, 3.054200000000146e-05, 3.0513999999998848e-05, 3.052800000000189e-05, 3.0526999999998944e-05, 3.155599999999856e-05, 3.055600000000103e-05, 3.055600000000103e-05, 3.0526999999998944e-05, 3.091700000000183e-05, 3.054199999999799e-05, 3.095800000000107e-05, 3.054199999999799e-05, 3.094399999999803e-05, 3.0499999999999278e-05, 3.091700000000183e-05, 3.0514000000002317e-05, 3.0472000000000138e-05, 3.0513999999998848e-05, 3.055600000000103e-05, 3.0526999999998944e-05, 3.158300000000169e-05, 3.058300000000069e-05, 3.058300000000069e-05, 3.095800000000107e-05, 3.054200000000146e-05, 3.055599999999756e-05, 3.091699999999836e-05, 3.056900000000112e-05, 3.055600000000103e-05, 3.148600000000071e-05]</msg>
<status status="PASS" starttime="20201110 08:38:24.654" endtime="20201110 08:38:24.656"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.649" endtime="20201110 08:38:24.656"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:24.659" endtime="20201110 08:38:24.660"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:24.662" endtime="20201110 08:38:24.681"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.660" endtime="20201110 08:38:24.682"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.657" endtime="20201110 08:38:24.682"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.287" endtime="20201110 08:38:24.683"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.287" endtime="20201110 08:38:24.683"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:24.691" endtime="20201110 08:38:24.708"></status>
</kw>
<msg timestamp="20201110 08:38:24.708" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:24.690" endtime="20201110 08:38:24.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:24.711" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:24.709" endtime="20201110 08:38:24.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:24.712" endtime="20201110 08:38:24.715"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.687" endtime="20201110 08:38:24.715"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.685" endtime="20201110 08:38:24.716"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:24.722" endtime="20201110 08:38:25.009"></status>
</kw>
<msg timestamp="20201110 08:38:25.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019746139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019781139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:24.721" endtime="20201110 08:38:25.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:25.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019746139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019781139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:25.014" endtime="20201110 08:38:25.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:25.023" endtime="20201110 08:38:25.025"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.718" endtime="20201110 08:38:25.026"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.716" endtime="20201110 08:38:25.026"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:25.030" level="INFO">${RESULT} = [{'time': 0.019781139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.500000000000031e-05, 'source_diff': 3.500000000000031e-05}, {'time': 0.019819028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:25.027" endtime="20201110 08:38:25.031"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:25.045" level="INFO">${ACCURACY} = {'diff': [3.500000000000031e-05, 3.368100000000068e-05, 3.058300000000069e-05, 3.363900000000197e-05, 3.365300000000154e-05, 3.3638999999998503e-05, 3.3624999999998934e-05, 3.3638999999998503e-05, 3.0...</msg>
<status status="PASS" starttime="20201110 08:38:25.031" endtime="20201110 08:38:25.045"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:25.049" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201110 08:38:25.048" endtime="20201110 08:38:25.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:25.052" level="INFO">VALUE: [3.500000000000031e-05, 3.368100000000068e-05, 3.058300000000069e-05, 3.363900000000197e-05, 3.365300000000154e-05, 3.3638999999998503e-05, 3.3624999999998934e-05, 3.3638999999998503e-05, 3.05700000000006e-05, 3.365300000000154e-05, 3.3638999999998503e-05, 3.369500000000025e-05, 3.3610999999999364e-05, 3.0568999999997654e-05, 3.054199999999799e-05, 3.0568999999997654e-05, 3.056900000000112e-05, 3.05700000000006e-05, 3.3638999999998503e-05, 3.05700000000006e-05, 3.056999999999713e-05, 3.05700000000006e-05, 3.365299999999807e-05, 3.3638999999998503e-05, 3.369399999999731e-05, 3.0514000000002317e-05, 3.055600000000103e-05, 3.363900000000197e-05, 3.365300000000154e-05, 3.363799999999903e-05, 3.3624999999998934e-05, 3.365300000000154e-05, 3.357000000000013e-05, 3.3624999999998934e-05, 3.365300000000154e-05, 3.363900000000197e-05, 3.363900000000197e-05, 3.3610999999999364e-05, 3.055500000000155e-05, 3.3638999999998503e-05, 3.35839999999997e-05, 3.363799999999903e-05, 3.366599999999817e-05, 3.363900000000197e-05, 3.3638999999998503e-05, 3.365299999999807e-05, 3.3624999999998934e-05, 3.365300000000154e-05, 3.054200000000146e-05, 3.055599999999756e-05]</msg>
<status status="PASS" starttime="20201110 08:38:25.051" endtime="20201110 08:38:25.053"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.046" endtime="20201110 08:38:25.053"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:25.055" endtime="20201110 08:38:25.057"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:25.059" endtime="20201110 08:38:25.078"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.057" endtime="20201110 08:38:25.079"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.054" endtime="20201110 08:38:25.079"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.684" endtime="20201110 08:38:25.080"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.683" endtime="20201110 08:38:25.080"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:25.088" endtime="20201110 08:38:25.106"></status>
</kw>
<msg timestamp="20201110 08:38:25.106" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:25.087" endtime="20201110 08:38:25.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:25.109" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:25.107" endtime="20201110 08:38:25.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:25.110" endtime="20201110 08:38:25.112"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.084" endtime="20201110 08:38:25.113"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.082" endtime="20201110 08:38:25.113"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:25.120" endtime="20201110 08:38:25.406"></status>
</kw>
<msg timestamp="20201110 08:38:25.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019771875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019810028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:25.118" endtime="20201110 08:38:25.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:25.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019771875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019810028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:25.410" endtime="20201110 08:38:25.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:25.418" endtime="20201110 08:38:25.420"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.116" endtime="20201110 08:38:25.420"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.114" endtime="20201110 08:38:25.421"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:25.425" level="INFO">${RESULT} = [{'time': 0.019810028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8152999999999104e-05, 'source_diff': 3.8152999999999104e-05}, {'time': 0.019846097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:25.422" endtime="20201110 08:38:25.425"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:25.439" level="INFO">${ACCURACY} = {'diff': [3.8152999999999104e-05, 3.3638999999998503e-05, 3.3624999999998934e-05, 3.3610999999999364e-05, 3.3638999999998503e-05, 3.3624999999998934e-05, 3.363799999999903e-05, 3.3596999999999794e-05,...</msg>
<status status="PASS" starttime="20201110 08:38:25.426" endtime="20201110 08:38:25.439"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:25.443" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201110 08:38:25.442" endtime="20201110 08:38:25.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:25.446" level="INFO">VALUE: [3.8152999999999104e-05, 3.3638999999998503e-05, 3.3624999999998934e-05, 3.3610999999999364e-05, 3.3638999999998503e-05, 3.3624999999998934e-05, 3.363799999999903e-05, 3.3596999999999794e-05, 3.365300000000154e-05, 3.36250000000024e-05, 3.3610999999999364e-05, 3.366600000000164e-05, 3.363900000000197e-05, 3.369400000000078e-05, 3.36250000000024e-05, 3.366700000000111e-05, 3.3624999999998934e-05, 3.3638999999998503e-05, 3.369400000000078e-05, 3.369400000000078e-05, 3.365300000000154e-05, 3.366699999999764e-05, 3.36380000000025e-05, 3.3638999999998503e-05, 3.365299999999807e-05, 3.3638999999998503e-05, 3.36380000000025e-05, 3.365299999999807e-05, 3.363900000000197e-05, 3.366600000000164e-05, 3.36380000000025e-05, 3.3596999999999794e-05, 3.365300000000154e-05, 3.366700000000111e-05, 3.369399999999731e-05, 3.363900000000197e-05, 3.3638999999998503e-05, 3.3638999999998503e-05, 3.363799999999903e-05, 3.366700000000111e-05, 3.3610999999999364e-05, 3.363900000000197e-05, 3.365200000000207e-05, 3.363900000000197e-05, 3.3638999999998503e-05, 3.3638999999998503e-05, 3.3624999999998934e-05, 3.363900000000197e-05, 3.3638999999998503e-05, 3.370800000000035e-05]</msg>
<status status="PASS" starttime="20201110 08:38:25.444" endtime="20201110 08:38:25.447"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.440" endtime="20201110 08:38:25.447"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:25.449" endtime="20201110 08:38:25.451"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:25.453" endtime="20201110 08:38:25.472"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.451" endtime="20201110 08:38:25.473"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.448" endtime="20201110 08:38:25.473"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.081" endtime="20201110 08:38:25.473"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.080" endtime="20201110 08:38:25.474"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:25.482" endtime="20201110 08:38:25.500"></status>
</kw>
<msg timestamp="20201110 08:38:25.500" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:25.481" endtime="20201110 08:38:25.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:25.503" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:25.501" endtime="20201110 08:38:25.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:25.504" endtime="20201110 08:38:25.506"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.478" endtime="20201110 08:38:25.507"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.476" endtime="20201110 08:38:25.507"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:25.513" endtime="20201110 08:38:25.799"></status>
</kw>
<msg timestamp="20201110 08:38:25.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019836306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019874472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:25.512" endtime="20201110 08:38:25.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:25.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019836306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019874472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:25.804" endtime="20201110 08:38:25.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:25.812" endtime="20201110 08:38:25.814"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.509" endtime="20201110 08:38:25.814"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.508" endtime="20201110 08:38:25.815"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:25.819" level="INFO">${RESULT} = [{'time': 0.019874472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.81659999999992e-05, 'source_diff': 3.81659999999992e-05}, {'time': 0.019913375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:38:25.816" endtime="20201110 08:38:25.819"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:25.833" level="INFO">${ACCURACY} = {'diff': [3.81659999999992e-05, 3.3624999999998934e-05, 3.3596999999999794e-05, 3.3638999999998503e-05, 3.3638999999998503e-05, 3.3624999999998934e-05, 3.36519999999986e-05, 3.3638999999998503e-05, 3....</msg>
<status status="PASS" starttime="20201110 08:38:25.820" endtime="20201110 08:38:25.833"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:25.837" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201110 08:38:25.836" endtime="20201110 08:38:25.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:25.840" level="INFO">VALUE: [3.81659999999992e-05, 3.3624999999998934e-05, 3.3596999999999794e-05, 3.3638999999998503e-05, 3.3638999999998503e-05, 3.3624999999998934e-05, 3.36519999999986e-05, 3.3638999999998503e-05, 3.366699999999764e-05, 3.363900000000197e-05, 3.36519999999986e-05, 3.365300000000154e-05, 3.3638999999998503e-05, 3.3638999999998503e-05, 3.36250000000024e-05, 3.3638999999998503e-05, 3.357000000000013e-05, 3.36250000000024e-05, 3.363900000000197e-05, 3.369500000000025e-05, 3.365300000000154e-05, 3.369400000000078e-05, 3.363900000000197e-05, 3.3638999999998503e-05, 3.3624999999998934e-05, 3.363799999999903e-05, 3.36250000000024e-05, 3.3638999999998503e-05, 3.365300000000154e-05, 3.3638999999998503e-05, 3.3624999999998934e-05, 3.3583000000000224e-05, 3.3638999999998503e-05, 3.365299999999807e-05, 3.365300000000154e-05, 3.370800000000035e-05, 3.3638999999998503e-05, 3.36250000000024e-05, 3.3638999999998503e-05, 3.365299999999807e-05, 3.363900000000197e-05, 3.3624999999998934e-05, 3.365300000000154e-05, 3.363799999999903e-05, 3.363900000000197e-05, 3.363799999999903e-05, 3.369400000000078e-05, 3.3610999999999364e-05, 3.365300000000154e-05, 3.363799999999903e-05]</msg>
<status status="PASS" starttime="20201110 08:38:25.838" endtime="20201110 08:38:25.840"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.833" endtime="20201110 08:38:25.841"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:25.843" endtime="20201110 08:38:25.844"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:25.846" endtime="20201110 08:38:25.866"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.845" endtime="20201110 08:38:25.867"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.842" endtime="20201110 08:38:25.868"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.474" endtime="20201110 08:38:25.868"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.474" endtime="20201110 08:38:25.868"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:25.880" endtime="20201110 08:38:25.899"></status>
</kw>
<msg timestamp="20201110 08:38:25.899" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:25.878" endtime="20201110 08:38:25.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:25.902" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:25.900" endtime="20201110 08:38:25.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:25.903" endtime="20201110 08:38:25.905"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.874" endtime="20201110 08:38:25.906"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.871" endtime="20201110 08:38:25.906"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:25.913" endtime="20201110 08:38:26.199"></status>
</kw>
<msg timestamp="20201110 08:38:26.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024557444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024595611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:25.911" endtime="20201110 08:38:26.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:26.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024557444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024595611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:26.203" endtime="20201110 08:38:26.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:26.212" endtime="20201110 08:38:26.213"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.908" endtime="20201110 08:38:26.214"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.907" endtime="20201110 08:38:26.214"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:26.218" level="INFO">${RESULT} = [{'time': 0.024595611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8166999999998674e-05, 'source_diff': 3.8166999999998674e-05}, {'time': 0.024633125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:26.215" endtime="20201110 08:38:26.218"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:26.232" level="INFO">${ACCURACY} = {'diff': [3.8166999999998674e-05, 3.3610999999999364e-05, 3.3638999999998503e-05, 3.3610999999999364e-05, 3.3638999999998503e-05, 3.366599999999817e-05, 3.365300000000154e-05, 3.363900000000197e-05, 3...</msg>
<status status="PASS" starttime="20201110 08:38:26.219" endtime="20201110 08:38:26.232"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:26.236" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201110 08:38:26.235" endtime="20201110 08:38:26.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:26.239" level="INFO">VALUE: [3.8166999999998674e-05, 3.3610999999999364e-05, 3.3638999999998503e-05, 3.3610999999999364e-05, 3.3638999999998503e-05, 3.366599999999817e-05, 3.365300000000154e-05, 3.363900000000197e-05, 3.370800000000035e-05, 3.3624999999998934e-05, 3.370800000000035e-05, 3.365299999999807e-05, 3.3568999999997184e-05, 3.365300000000154e-05, 3.3638999999998503e-05, 3.3638999999998503e-05, 3.363900000000197e-05, 3.363900000000197e-05, 3.363900000000197e-05, 3.3638999999998503e-05, 3.3624999999998934e-05, 3.3638999999998503e-05, 3.3596999999999794e-05, 3.3638999999998503e-05, 3.3638999999998503e-05, 3.3638999999998503e-05, 3.365299999999807e-05, 3.365300000000154e-05, 3.361199999999884e-05, 3.363900000000197e-05, 3.365300000000154e-05, 3.369500000000025e-05, 3.3624999999998934e-05, 3.363799999999903e-05, 3.35839999999997e-05, 3.365300000000154e-05, 3.365299999999807e-05, 3.3638999999998503e-05, 3.365300000000154e-05, 3.3638999999998503e-05, 3.36380000000025e-05, 3.3638999999998503e-05, 3.365300000000154e-05, 3.363900000000197e-05, 3.3624999999998934e-05, 3.365299999999807e-05, 3.3624999999998934e-05, 3.3638999999998503e-05, 3.365300000000154e-05, 3.363900000000197e-05]</msg>
<status status="PASS" starttime="20201110 08:38:26.238" endtime="20201110 08:38:26.240"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.233" endtime="20201110 08:38:26.240"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:26.243" endtime="20201110 08:38:26.244"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:26.246" endtime="20201110 08:38:26.265"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.244" endtime="20201110 08:38:26.266"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.241" endtime="20201110 08:38:26.266"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.869" endtime="20201110 08:38:26.266"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.869" endtime="20201110 08:38:26.267"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:26.275" endtime="20201110 08:38:26.293"></status>
</kw>
<msg timestamp="20201110 08:38:26.293" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:26.274" endtime="20201110 08:38:26.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:26.296" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:26.294" endtime="20201110 08:38:26.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:26.297" endtime="20201110 08:38:26.299"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.271" endtime="20201110 08:38:26.300"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.269" endtime="20201110 08:38:26.300"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:26.306" endtime="20201110 08:38:26.593"></status>
</kw>
<msg timestamp="20201110 08:38:26.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019777986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019816153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:26.305" endtime="20201110 08:38:26.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:26.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019777986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019816153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:26.597" endtime="20201110 08:38:26.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:26.605" endtime="20201110 08:38:26.607"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.302" endtime="20201110 08:38:26.607"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.301" endtime="20201110 08:38:26.608"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:26.612" level="INFO">${RESULT} = [{'time': 0.019816153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8166999999998674e-05, 'source_diff': 3.8166999999998674e-05}, {'time': 0.019853958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:26.608" endtime="20201110 08:38:26.612"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:26.626" level="INFO">${ACCURACY} = {'diff': [3.8166999999998674e-05, 3.397200000000017e-05, 3.397200000000017e-05, 3.365300000000154e-05, 3.370800000000035e-05, 3.429200000000174e-05, 3.3638999999998503e-05, 3.4790999999999295e-05, 3.5...</msg>
<status status="PASS" starttime="20201110 08:38:26.613" endtime="20201110 08:38:26.627"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:26.631" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201110 08:38:26.630" endtime="20201110 08:38:26.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:26.634" level="INFO">VALUE: [3.8166999999998674e-05, 3.397200000000017e-05, 3.397200000000017e-05, 3.365300000000154e-05, 3.370800000000035e-05, 3.429200000000174e-05, 3.3638999999998503e-05, 3.4790999999999295e-05, 3.5125000000000434e-05, 3.4582999999997754e-05, 3.430599999999784e-05, 3.42779999999987e-05, 3.368100000000068e-05, 3.4875000000000184e-05, 3.4262999999999655e-05, 3.407000000000063e-05, 3.366700000000111e-05, 3.454200000000199e-05, 3.473600000000049e-05, 3.4611000000000364e-05, 3.4374999999999684e-05, 3.448600000000024e-05, 3.4304999999998365e-05, 3.4597000000000794e-05, 3.3638999999998503e-05, 3.519399999999881e-05, 3.3638999999998503e-05, 3.423599999999999e-05, 3.4124999999999434e-05, 3.4638999999999504e-05, 3.4333000000000974e-05, 3.452799999999895e-05, 3.424999999999956e-05, 3.5152999999999573e-05, 3.36250000000024e-05, 3.416599999999867e-05, 3.3638999999998503e-05, 3.4610999999996894e-05, 3.370800000000035e-05, 3.455599999999809e-05, 3.429199999999827e-05, 3.42779999999987e-05, 3.401400000000235e-05, 3.4611000000000364e-05, 3.37779999999982e-05, 3.466699999999864e-05, 3.41250000000029e-05, 3.3833000000000474e-05, 3.401399999999888e-05, 3.366699999999764e-05]</msg>
<status status="PASS" starttime="20201110 08:38:26.632" endtime="20201110 08:38:26.634"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.627" endtime="20201110 08:38:26.635"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:26.637" endtime="20201110 08:38:26.638"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:26.641" endtime="20201110 08:38:26.660"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.639" endtime="20201110 08:38:26.661"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.635" endtime="20201110 08:38:26.661"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.268" endtime="20201110 08:38:26.662"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.267" endtime="20201110 08:38:26.662"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:26.670" endtime="20201110 08:38:26.688"></status>
</kw>
<msg timestamp="20201110 08:38:26.688" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:26.669" endtime="20201110 08:38:26.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:26.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:26.689" endtime="20201110 08:38:26.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:26.692" endtime="20201110 08:38:26.694"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.666" endtime="20201110 08:38:26.695"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.664" endtime="20201110 08:38:26.695"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:26.702" endtime="20201110 08:38:26.987"></status>
</kw>
<msg timestamp="20201110 08:38:26.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019931944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019971681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:26.700" endtime="20201110 08:38:26.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:26.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019931944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019971681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:26.991" endtime="20201110 08:38:26.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:27.000" endtime="20201110 08:38:27.001"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.698" endtime="20201110 08:38:27.002"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.696" endtime="20201110 08:38:27.002"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:27.006" level="INFO">${RESULT} = [{'time': 0.019971681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.973700000000149e-05, 'source_diff': 3.973700000000149e-05}, {'time': 0.020013417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:27.003" endtime="20201110 08:38:27.007"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:27.020" level="INFO">${ACCURACY} = {'diff': [3.973700000000149e-05, 3.605599999999959e-05, 3.4888999999999754e-05, 3.5402999999999823e-05, 3.494399999999856e-05, 3.522199999999795e-05, 3.6055000000000115e-05, 3.6138999999997534e-05, 3....</msg>
<status status="PASS" starttime="20201110 08:38:27.007" endtime="20201110 08:38:27.020"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:27.025" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201110 08:38:27.024" endtime="20201110 08:38:27.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:27.027" level="INFO">VALUE: [3.973700000000149e-05, 3.605599999999959e-05, 3.4888999999999754e-05, 3.5402999999999823e-05, 3.494399999999856e-05, 3.522199999999795e-05, 3.6055000000000115e-05, 3.6138999999997534e-05, 3.5139000000000004e-05, 3.504199999999902e-05, 3.5846999999998574e-05, 3.6138999999997534e-05, 3.520799999999838e-05, 3.495900000000107e-05, 3.572199999999845e-05, 3.519400000000228e-05, 3.5040999999999545e-05, 3.498600000000074e-05, 3.480600000000181e-05, 3.5666999999999643e-05, 3.5416999999999393e-05, 3.519500000000175e-05, 3.517999999999924e-05, 3.5125000000000434e-05, 3.5054999999999115e-05, 3.569499999999878e-05, 3.5083000000001724e-05, 3.558399999999823e-05, 3.491599999999942e-05, 3.5861000000001614e-05, 3.5069000000002154e-05, 3.5582999999998755e-05, 3.544399999999906e-05, 3.519399999999881e-05, 3.518099999999871e-05, 3.6041000000000545e-05, 3.6124999999997964e-05, 3.551399999999691e-05, 3.5832999999999005e-05, 3.547200000000167e-05, 3.518099999999871e-05, 3.6041000000000545e-05, 3.6110999999998394e-05, 3.5416999999999393e-05, 3.5832999999999005e-05, 3.54719999999982e-05, 3.522199999999795e-05, 3.498600000000074e-05, 3.551400000000038e-05, 3.544499999999853e-05]</msg>
<status status="PASS" starttime="20201110 08:38:27.026" endtime="20201110 08:38:27.028"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.021" endtime="20201110 08:38:27.028"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:27.031" endtime="20201110 08:38:27.032"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:27.034" endtime="20201110 08:38:27.053"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.033" endtime="20201110 08:38:27.054"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.029" endtime="20201110 08:38:27.054"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.663" endtime="20201110 08:38:27.055"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.662" endtime="20201110 08:38:27.055"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:27.063" endtime="20201110 08:38:27.079"></status>
</kw>
<msg timestamp="20201110 08:38:27.080" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:27.062" endtime="20201110 08:38:27.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:27.082" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:27.081" endtime="20201110 08:38:27.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:27.083" endtime="20201110 08:38:27.086"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.059" endtime="20201110 08:38:27.087"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.057" endtime="20201110 08:38:27.087"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:27.093" endtime="20201110 08:38:27.380"></status>
</kw>
<msg timestamp="20201110 08:38:27.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019766167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019807708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:27.092" endtime="20201110 08:38:27.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:27.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019766167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019807708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:27.384" endtime="20201110 08:38:27.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:27.392" endtime="20201110 08:38:27.394"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.089" endtime="20201110 08:38:27.394"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.088" endtime="20201110 08:38:27.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:27.399" level="INFO">${RESULT} = [{'time': 0.019807708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1540999999999106e-05, 'source_diff': 4.1540999999999106e-05}, {'time': 0.019846972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:27.395" endtime="20201110 08:38:27.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:27.413" level="INFO">${ACCURACY} = {'diff': [4.1540999999999106e-05, 3.701400000000188e-05, 3.7083000000000255e-05, 3.697200000000317e-05, 3.6041000000000545e-05, 3.5833000000002474e-05, 3.701400000000188e-05, 3.698599999999927e-05, 3....</msg>
<status status="PASS" starttime="20201110 08:38:27.400" endtime="20201110 08:38:27.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:27.417" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201110 08:38:27.416" endtime="20201110 08:38:27.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:27.419" level="INFO">VALUE: [4.1540999999999106e-05, 3.701400000000188e-05, 3.7083000000000255e-05, 3.697200000000317e-05, 3.6041000000000545e-05, 3.5833000000002474e-05, 3.701400000000188e-05, 3.698599999999927e-05, 3.698599999999927e-05, 3.6068999999999685e-05, 3.5875000000001184e-05, 3.699999999999884e-05, 3.598599999999827e-05, 3.622199999999895e-05, 3.699999999999884e-05, 3.6388999999997784e-05, 3.5889000000000754e-05, 3.699999999999884e-05, 3.69719999999997e-05, 3.6138999999997534e-05, 3.600000000000131e-05, 3.700000000000231e-05, 3.702799999999798e-05, 3.698599999999927e-05, 3.698599999999927e-05, 3.698599999999927e-05, 3.594399999999956e-05, 3.5860999999998144e-05, 3.698600000000274e-05, 3.601400000000088e-05, 3.592999999999999e-05, 3.7027000000001975e-05, 3.698600000000274e-05, 3.699999999999884e-05, 3.5888999999997284e-05, 3.6389000000001254e-05, 3.699999999999884e-05, 3.699999999999884e-05, 3.69589999999996e-05, 3.698599999999927e-05, 3.583400000000195e-05, 3.5916999999999893e-05, 3.7083000000000255e-05, 3.6125000000001434e-05, 3.64589999999991e-05, 3.698600000000274e-05, 3.5889000000000754e-05, 3.591599999999695e-05, 3.6360999999998644e-05, 3.62780000000007e-05]</msg>
<status status="PASS" starttime="20201110 08:38:27.418" endtime="20201110 08:38:27.425"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.413" endtime="20201110 08:38:27.425"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:27.428" endtime="20201110 08:38:27.429"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:27.431" endtime="20201110 08:38:27.451"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.430" endtime="20201110 08:38:27.451"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.426" endtime="20201110 08:38:27.452"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.056" endtime="20201110 08:38:27.452"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.055" endtime="20201110 08:38:27.452"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:27.461" endtime="20201110 08:38:27.479"></status>
</kw>
<msg timestamp="20201110 08:38:27.479" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:27.459" endtime="20201110 08:38:27.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:27.482" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:27.480" endtime="20201110 08:38:27.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:27.483" endtime="20201110 08:38:27.485"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.457" endtime="20201110 08:38:27.486"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.455" endtime="20201110 08:38:27.486"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:27.493" endtime="20201110 08:38:27.778"></status>
</kw>
<msg timestamp="20201110 08:38:27.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019770819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019812889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:27.491" endtime="20201110 08:38:27.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:27.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019770819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019812889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:27.783" endtime="20201110 08:38:27.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:27.791" endtime="20201110 08:38:27.793"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.488" endtime="20201110 08:38:27.793"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.487" endtime="20201110 08:38:27.794"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:27.798" level="INFO">${RESULT} = [{'time': 0.019812889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.207000000000169e-05, 'source_diff': 4.207000000000169e-05}, {'time': 0.019855903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:27.794" endtime="20201110 08:38:27.798"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:27.811" level="INFO">${ACCURACY} = {'diff': [4.207000000000169e-05, 3.808400000000073e-05, 3.730600000000084e-05, 3.748599999999977e-05, 3.807000000000116e-05, 3.776399999999916e-05, 3.748599999999977e-05, 3.7181000000000713e-05, 3.745...</msg>
<status status="PASS" starttime="20201110 08:38:27.799" endtime="20201110 08:38:27.812"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:27.816" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201110 08:38:27.815" endtime="20201110 08:38:27.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:27.818" level="INFO">VALUE: [4.207000000000169e-05, 3.808400000000073e-05, 3.730600000000084e-05, 3.748599999999977e-05, 3.807000000000116e-05, 3.776399999999916e-05, 3.748599999999977e-05, 3.7181000000000713e-05, 3.74590000000001e-05, 3.782000000000091e-05, 3.7695000000000783e-05, 3.779200000000177e-05, 3.761199999999937e-05, 3.7874999999999714e-05, 3.774999999999959e-05, 3.749999999999934e-05, 3.7568999999997715e-05, 3.7305000000001365e-05, 3.773600000000002e-05, 3.715199999999863e-05, 3.798600000000027e-05, 3.748599999999977e-05, 3.799999999999984e-05, 3.7874999999999714e-05, 3.7374999999999214e-05, 3.743000000000149e-05, 3.7652999999998604e-05, 3.723599999999952e-05, 3.749999999999934e-05, 3.799999999999984e-05, 3.8082999999997785e-05, 3.7583000000000755e-05, 3.756999999999719e-05, 3.7681000000001214e-05, 3.8124999999999964e-05, 3.7597000000000325e-05, 3.799999999999984e-05, 3.7417000000001394e-05, 3.7110999999999394e-05, 3.751399999999891e-05, 3.783400000000048e-05, 3.7388999999998784e-05, 3.7153000000001574e-05, 3.7958999999997134e-05, 3.754200000000152e-05, 3.8124999999999964e-05, 3.7610999999999895e-05, 3.794400000000156e-05, 3.744400000000106e-05, 3.720800000000038e-05]</msg>
<status status="PASS" starttime="20201110 08:38:27.817" endtime="20201110 08:38:27.819"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.812" endtime="20201110 08:38:27.820"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:27.822" endtime="20201110 08:38:27.823"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:27.825" endtime="20201110 08:38:27.845"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.824" endtime="20201110 08:38:27.845"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.820" endtime="20201110 08:38:27.846"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.453" endtime="20201110 08:38:27.846"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.452" endtime="20201110 08:38:27.846"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:27.855" endtime="20201110 08:38:27.873"></status>
</kw>
<msg timestamp="20201110 08:38:27.873" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:27.853" endtime="20201110 08:38:27.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:27.876" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:27.874" endtime="20201110 08:38:27.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:27.877" endtime="20201110 08:38:27.879"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.851" endtime="20201110 08:38:27.880"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.849" endtime="20201110 08:38:27.880"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:27.887" endtime="20201110 08:38:28.173"></status>
</kw>
<msg timestamp="20201110 08:38:28.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019772458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019815681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:27.885" endtime="20201110 08:38:28.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:28.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019772458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019815681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:28.177" endtime="20201110 08:38:28.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:28.186" endtime="20201110 08:38:28.187"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.883" endtime="20201110 08:38:28.188"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.881" endtime="20201110 08:38:28.188"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:28.192" level="INFO">${RESULT} = [{'time': 0.019815681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3223000000001954e-05, 'source_diff': 4.3223000000001954e-05}, {'time': 0.019857694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:28.189" endtime="20201110 08:38:28.193"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:28.207" level="INFO">${ACCURACY} = {'diff': [4.3223000000001954e-05, 3.874999999999712e-05, 3.8139000000003004e-05, 3.8276999999999756e-05, 3.844399999999859e-05, 3.825000000000009e-05, 3.8319000000001935e-05, 3.8554999999999146e-05, 3...</msg>
<status status="PASS" starttime="20201110 08:38:28.193" endtime="20201110 08:38:28.207"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:28.211" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201110 08:38:28.210" endtime="20201110 08:38:28.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:28.214" level="INFO">VALUE: [4.3223000000001954e-05, 3.874999999999712e-05, 3.8139000000003004e-05, 3.8276999999999756e-05, 3.844399999999859e-05, 3.825000000000009e-05, 3.8319000000001935e-05, 3.8554999999999146e-05, 3.8333000000001505e-05, 3.823600000000052e-05, 3.8818999999998965e-05, 3.877799999999973e-05, 3.8625000000000465e-05, 3.894399999999909e-05, 3.822200000000095e-05, 3.8388999999999784e-05, 3.8333000000001505e-05, 3.831999999999794e-05, 3.900000000000084e-05, 3.8375000000000214e-05, 3.9110999999997925e-05, 3.900000000000084e-05, 3.902799999999998e-05, 3.8875000000000715e-05, 3.8709000000001353e-05, 3.851399999999991e-05, 3.850000000000034e-05, 3.820800000000138e-05, 3.8930999999998994e-05, 3.890200000000038e-05, 3.886200000000062e-05, 3.8375000000000214e-05, 3.8625000000000465e-05, 3.900000000000084e-05, 3.8610999999997425e-05, 3.8332999999998035e-05, 3.867999999999927e-05, 3.899999999999737e-05, 3.8554999999999146e-05, 3.822200000000095e-05, 3.8375000000000214e-05, 3.8138999999999534e-05, 3.8167000000002144e-05, 3.8818999999998965e-05, 3.822200000000095e-05, 3.8818999999998965e-05, 3.8818999999998965e-05, 3.908400000000173e-05, 3.832000000000141e-05, 3.873600000000102e-05]</msg>
<status status="PASS" starttime="20201110 08:38:28.213" endtime="20201110 08:38:28.215"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.208" endtime="20201110 08:38:28.215"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:28.217" endtime="20201110 08:38:28.219"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:28.221" endtime="20201110 08:38:28.240"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.219" endtime="20201110 08:38:28.241"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.216" endtime="20201110 08:38:28.241"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.847" endtime="20201110 08:38:28.242"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.847" endtime="20201110 08:38:28.242"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:28.251" endtime="20201110 08:38:28.270"></status>
</kw>
<msg timestamp="20201110 08:38:28.270" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:28.249" endtime="20201110 08:38:28.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:28.273" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:28.271" endtime="20201110 08:38:28.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:28.275" endtime="20201110 08:38:28.278"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.246" endtime="20201110 08:38:28.279"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.244" endtime="20201110 08:38:28.279"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:28.288" endtime="20201110 08:38:28.574"></status>
</kw>
<msg timestamp="20201110 08:38:28.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020781278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020825722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:28.286" endtime="20201110 08:38:28.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:28.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020781278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020825722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:28.578" endtime="20201110 08:38:28.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:28.586" endtime="20201110 08:38:28.588"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.283" endtime="20201110 08:38:28.588"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.280" endtime="20201110 08:38:28.589"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:28.593" level="INFO">${RESULT} = [{'time': 0.020825722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.444400000000112e-05, 'source_diff': 4.444400000000112e-05}, {'time': 0.020867736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:28.590" endtime="20201110 08:38:28.593"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:28.607" level="INFO">${ACCURACY} = {'diff': [4.444400000000112e-05, 3.944399999999959e-05, 3.919399999999934e-05, 3.919399999999934e-05, 3.944399999999959e-05, 3.980599999999987e-05, 3.9832999999999535e-05, 3.9375000000001215e-05, 3.96...</msg>
<status status="PASS" starttime="20201110 08:38:28.594" endtime="20201110 08:38:28.607"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:28.611" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201110 08:38:28.610" endtime="20201110 08:38:28.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:28.614" level="INFO">VALUE: [4.444400000000112e-05, 3.944399999999959e-05, 3.919399999999934e-05, 3.919399999999934e-05, 3.944399999999959e-05, 3.980599999999987e-05, 3.9832999999999535e-05, 3.9375000000001215e-05, 3.9611000000001895e-05, 3.950000000000134e-05, 3.9223000000001423e-05, 4.001400000000141e-05, 3.9389000000000784e-05, 4.0125000000001965e-05, 3.9194999999998814e-05, 3.9680999999999744e-05, 3.9722999999998454e-05, 3.9944999999999564e-05, 3.9889000000001285e-05, 3.990200000000138e-05, 4.0069000000000216e-05, 3.9304999999999896e-05, 3.927800000000023e-05, 3.9624999999997995e-05, 4.0069000000000216e-05, 3.926400000000066e-05, 3.9610999999998425e-05, 3.9818999999999966e-05, 3.9805000000000396e-05, 4.0082999999999785e-05, 4.0055000000000646e-05, 3.951400000000091e-05, 3.969399999999984e-05, 3.945799999999916e-05, 3.94859999999983e-05, 3.9194999999998814e-05, 3.981999999999944e-05, 3.9125000000000965e-05, 3.974999999999812e-05, 3.926400000000066e-05, 3.981999999999944e-05, 3.974999999999812e-05, 3.930600000000284e-05, 3.9375000000001215e-05, 3.973600000000202e-05, 3.9680999999999744e-05, 3.9874999999998245e-05, 3.950000000000134e-05, 3.926399999999719e-05, 3.961200000000137e-05]</msg>
<status status="PASS" starttime="20201110 08:38:28.612" endtime="20201110 08:38:28.614"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.608" endtime="20201110 08:38:28.615"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:28.617" endtime="20201110 08:38:28.618"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:28.621" endtime="20201110 08:38:28.640"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.619" endtime="20201110 08:38:28.640"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.616" endtime="20201110 08:38:28.641"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.243" endtime="20201110 08:38:28.641"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.242" endtime="20201110 08:38:28.641"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:28.650" endtime="20201110 08:38:28.668"></status>
</kw>
<msg timestamp="20201110 08:38:28.669" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:28.648" endtime="20201110 08:38:28.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:28.671" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:28.670" endtime="20201110 08:38:28.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:28.673" endtime="20201110 08:38:28.675"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.646" endtime="20201110 08:38:28.676"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.644" endtime="20201110 08:38:28.676"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:28.683" endtime="20201110 08:38:28.968"></status>
</kw>
<msg timestamp="20201110 08:38:28.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019972375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020017833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:28.682" endtime="20201110 08:38:28.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:28.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019972375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020017833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:28.973" endtime="20201110 08:38:28.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:28.981" endtime="20201110 08:38:28.983"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.679" endtime="20201110 08:38:28.983"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.677" endtime="20201110 08:38:28.984"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:28.988" level="INFO">${RESULT} = [{'time': 0.020017833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.545799999999822e-05, 'source_diff': 4.545799999999822e-05}, {'time': 0.020060847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:28.984" endtime="20201110 08:38:28.988"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:29.001" level="INFO">${ACCURACY} = {'diff': [4.545799999999822e-05, 4.043000000000102e-05, 4.1069000000001216e-05, 4.068000000000127e-05, 4.024999999999862e-05, 4.0512999999998967e-05, 4.0833000000000536e-05, 4.0902999999998385e-05, 4....</msg>
<status status="PASS" starttime="20201110 08:38:28.989" endtime="20201110 08:38:29.002"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:29.006" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201110 08:38:29.005" endtime="20201110 08:38:29.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:29.008" level="INFO">VALUE: [4.545799999999822e-05, 4.043000000000102e-05, 4.1069000000001216e-05, 4.068000000000127e-05, 4.024999999999862e-05, 4.0512999999998967e-05, 4.0833000000000536e-05, 4.0902999999998385e-05, 4.0181000000000244e-05, 4.0388999999998315e-05, 4.019399999999687e-05, 4.073599999999955e-05, 4.0652999999998135e-05, 4.074999999999912e-05, 4.0194999999999814e-05, 4.0681000000000744e-05, 4.0624999999998995e-05, 4.0138999999998065e-05, 4.099999999999937e-05, 4.097200000000023e-05, 4.054200000000105e-05, 4.074999999999912e-05, 4.0194999999999814e-05, 4.0181000000000244e-05, 4.0888999999998815e-05, 4.074999999999912e-05, 4.0333000000000035e-05, 4.101400000000241e-05, 4.0375000000002215e-05, 4.074999999999912e-05, 4.0889000000002285e-05, 4.044400000000059e-05, 4.1110999999999925e-05, 4.018000000000077e-05, 4.0291000000001326e-05, 4.069400000000084e-05, 4.026400000000166e-05, 4.0916999999997955e-05, 4.101399999999894e-05, 4.1097000000000355e-05, 4.0819000000000966e-05, 4.025000000000209e-05, 4.0569000000000716e-05, 4.0194999999999814e-05, 4.0610999999999425e-05, 4.077800000000173e-05, 4.0223000000002423e-05, 4.0667000000001174e-05, 4.0153000000001104e-05, 4.0360999999999175e-05]</msg>
<status status="PASS" starttime="20201110 08:38:29.007" endtime="20201110 08:38:29.009"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.002" endtime="20201110 08:38:29.010"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:29.012" endtime="20201110 08:38:29.013"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:29.015" endtime="20201110 08:38:29.035"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.014" endtime="20201110 08:38:29.035"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.010" endtime="20201110 08:38:29.036"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.642" endtime="20201110 08:38:29.036"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.642" endtime="20201110 08:38:29.036"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:29.045" endtime="20201110 08:38:29.062"></status>
</kw>
<msg timestamp="20201110 08:38:29.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:29.043" endtime="20201110 08:38:29.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:29.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:29.064" endtime="20201110 08:38:29.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:29.066" endtime="20201110 08:38:29.069"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.041" endtime="20201110 08:38:29.069"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.039" endtime="20201110 08:38:29.070"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:29.076" endtime="20201110 08:38:29.361"></status>
</kw>
<msg timestamp="20201110 08:38:29.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019817806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019863708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:29.074" endtime="20201110 08:38:29.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:29.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019817806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019863708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:29.366" endtime="20201110 08:38:29.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:29.376" endtime="20201110 08:38:29.378"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.072" endtime="20201110 08:38:29.379"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.070" endtime="20201110 08:38:29.380"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:29.385" level="INFO">${RESULT} = [{'time': 0.019863708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.590200000000044e-05, 'source_diff': 4.590200000000044e-05}, {'time': 0.019911722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:29.380" endtime="20201110 08:38:29.385"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:29.400" level="INFO">${ACCURACY} = {'diff': [4.590200000000044e-05, 4.201399999999994e-05, 4.1652999999999135e-05, 4.2111000000000925e-05, 4.200000000000037e-05, 4.194399999999862e-05, 4.13059999999979e-05, 4.194400000000209e-05, 4.122...</msg>
<status status="PASS" starttime="20201110 08:38:29.386" endtime="20201110 08:38:29.401"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:29.405" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201110 08:38:29.404" endtime="20201110 08:38:29.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:29.407" level="INFO">VALUE: [4.590200000000044e-05, 4.201399999999994e-05, 4.1652999999999135e-05, 4.2111000000000925e-05, 4.200000000000037e-05, 4.194399999999862e-05, 4.13059999999979e-05, 4.194400000000209e-05, 4.122200000000048e-05, 4.18059999999984e-05, 4.195800000000166e-05, 4.206999999999822e-05, 4.204200000000255e-05, 4.1930999999998525e-05, 4.2139000000000065e-05, 4.1695000000001314e-05, 4.182000000000144e-05, 4.1945000000001564e-05, 4.1860999999997206e-05, 4.200000000000037e-05, 4.1374999999999745e-05, 4.1638999999999565e-05, 4.158400000000076e-05, 4.2068999999998746e-05, 4.1333000000001036e-05, 4.170799999999794e-05, 4.172199999999751e-05, 4.11660000000022e-05, 4.194400000000209e-05, 4.1541000000002576e-05, 4.194400000000209e-05, 4.1583000000001286e-05, 4.1624999999999995e-05, 4.149999999999987e-05, 4.201399999999994e-05, 4.1318999999997996e-05, 4.1652999999999135e-05, 4.151399999999944e-05, 4.2054999999999176e-05, 4.197199999999776e-05, 4.157000000000119e-05, 4.1833000000001536e-05, 4.1930999999998525e-05, 4.154200000000205e-05, 4.1681000000001744e-05, 4.1973000000000704e-05, 4.1888999999999815e-05, 4.1459000000000634e-05, 4.158399999999729e-05, 4.180600000000187e-05]</msg>
<status status="PASS" starttime="20201110 08:38:29.406" endtime="20201110 08:38:29.408"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.401" endtime="20201110 08:38:29.409"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:29.411" endtime="20201110 08:38:29.412"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:29.414" endtime="20201110 08:38:29.434"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.413" endtime="20201110 08:38:29.434"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.409" endtime="20201110 08:38:29.435"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.037" endtime="20201110 08:38:29.435"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.037" endtime="20201110 08:38:29.435"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:29.444" endtime="20201110 08:38:29.461"></status>
</kw>
<msg timestamp="20201110 08:38:29.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:29.442" endtime="20201110 08:38:29.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:29.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:29.463" endtime="20201110 08:38:29.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:29.465" endtime="20201110 08:38:29.468"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.440" endtime="20201110 08:38:29.468"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.438" endtime="20201110 08:38:29.469"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:29.475" endtime="20201110 08:38:29.760"></status>
</kw>
<msg timestamp="20201110 08:38:29.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019882069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019929264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:29.473" endtime="20201110 08:38:29.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:29.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019882069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019929264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:29.764" endtime="20201110 08:38:29.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:29.773" endtime="20201110 08:38:29.774"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.471" endtime="20201110 08:38:29.775"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.469" endtime="20201110 08:38:29.775"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:29.779" level="INFO">${RESULT} = [{'time': 0.019929264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7194999999999876e-05, 'source_diff': 4.7194999999999876e-05}, {'time': 0.01997725, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201110 08:38:29.776" endtime="20201110 08:38:29.780"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:29.794" level="INFO">${ACCURACY} = {'diff': [4.7194999999999876e-05, 4.219399999999887e-05, 4.225000000000062e-05, 4.236200000000065e-05, 4.244399999999912e-05, 4.2903000000000385e-05, 4.2694999999998845e-05, 4.275000000000112e-05, 4.2...</msg>
<status status="PASS" starttime="20201110 08:38:29.780" endtime="20201110 08:38:29.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:29.798" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201110 08:38:29.797" endtime="20201110 08:38:29.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:29.801" level="INFO">VALUE: [4.7194999999999876e-05, 4.219399999999887e-05, 4.225000000000062e-05, 4.236200000000065e-05, 4.244399999999912e-05, 4.2903000000000385e-05, 4.2694999999998845e-05, 4.275000000000112e-05, 4.270799999999894e-05, 4.2903000000000385e-05, 4.2709000000001884e-05, 4.281999999999897e-05, 4.255599999999915e-05, 4.302800000000051e-05, 4.2944999999999095e-05, 4.2332999999998566e-05, 4.2930999999999525e-05, 4.256999999999872e-05, 4.2625000000000995e-05, 4.290200000000091e-05, 4.276400000000069e-05, 4.2903000000000385e-05, 4.2361000000001175e-05, 4.272199999999851e-05, 4.2125000000000495e-05, 4.2360999999997706e-05, 4.2582999999998816e-05, 4.244400000000259e-05, 4.2139000000000065e-05, 4.2916999999999955e-05, 4.293000000000005e-05, 4.252800000000001e-05, 4.226400000000019e-05, 4.305599999999965e-05, 4.2818999999999496e-05, 4.225000000000062e-05, 4.301399999999747e-05, 4.300000000000137e-05, 4.2374999999997276e-05, 4.280600000000287e-05, 4.2195000000001814e-05, 4.2332999999998566e-05, 4.2389000000000315e-05, 4.2139000000000065e-05, 4.2666999999999705e-05, 4.245800000000216e-05, 4.2430999999999025e-05, 4.219399999999887e-05, 4.295799999999919e-05, 4.244399999999912e-05]</msg>
<status status="PASS" starttime="20201110 08:38:29.799" endtime="20201110 08:38:29.802"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.795" endtime="20201110 08:38:29.802"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:29.805" endtime="20201110 08:38:29.806"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:29.808" endtime="20201110 08:38:29.827"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.806" endtime="20201110 08:38:29.828"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.803" endtime="20201110 08:38:29.828"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.436" endtime="20201110 08:38:29.829"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.436" endtime="20201110 08:38:29.829"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:29.837" endtime="20201110 08:38:29.855"></status>
</kw>
<msg timestamp="20201110 08:38:29.856" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:29.836" endtime="20201110 08:38:29.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:29.858" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:29.857" endtime="20201110 08:38:29.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:29.859" endtime="20201110 08:38:29.862"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.833" endtime="20201110 08:38:29.862"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.831" endtime="20201110 08:38:29.863"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:29.869" endtime="20201110 08:38:30.153"></status>
</kw>
<msg timestamp="20201110 08:38:30.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019952028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020000319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:29.867" endtime="20201110 08:38:30.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:30.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019952028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020000319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:30.157" endtime="20201110 08:38:30.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:30.166" endtime="20201110 08:38:30.167"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.865" endtime="20201110 08:38:30.168"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.863" endtime="20201110 08:38:30.168"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:30.172" level="INFO">${RESULT} = [{'time': 0.020000319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.829099999999892e-05, 'source_diff': 4.829099999999892e-05}, {'time': 0.020048361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:30.169" endtime="20201110 08:38:30.173"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:30.186" level="INFO">${ACCURACY} = {'diff': [4.829099999999892e-05, 4.327800000000076e-05, 4.341600000000098e-05, 4.326399999999772e-05, 4.3318999999999996e-05, 4.375000000000212e-05, 4.350000000000187e-05, 4.4083000000000316e-05, 4.34...</msg>
<status status="PASS" starttime="20201110 08:38:30.173" endtime="20201110 08:38:30.186"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:30.190" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201110 08:38:30.189" endtime="20201110 08:38:30.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:30.193" level="INFO">VALUE: [4.829099999999892e-05, 4.327800000000076e-05, 4.341600000000098e-05, 4.326399999999772e-05, 4.3318999999999996e-05, 4.375000000000212e-05, 4.350000000000187e-05, 4.4083000000000316e-05, 4.343000000000055e-05, 4.3124999999998026e-05, 4.3569000000000246e-05, 4.406899999999728e-05, 4.3361000000002176e-05, 4.3180999999999775e-05, 4.4138999999998596e-05, 4.4138999999998596e-05, 4.4110999999999456e-05, 4.3611000000002426e-05, 4.406999999999675e-05, 4.331999999999947e-05, 4.3473000000002204e-05, 4.324999999999815e-05, 4.340200000000141e-05, 4.342999999999708e-05, 4.415200000000216e-05, 4.363800000000209e-05, 4.3180999999999775e-05, 4.395800000000019e-05, 4.3389000000001315e-05, 4.3681000000000275e-05, 4.395800000000019e-05, 4.347199999999926e-05, 4.377800000000126e-05, 4.326400000000119e-05, 4.354200000000058e-05, 4.4069000000000746e-05, 4.39999999999989e-05, 4.3305000000000426e-05, 4.397199999999976e-05, 4.379200000000083e-05, 4.3819000000000496e-05, 4.3431000000000025e-05, 4.3403000000000885e-05, 4.355600000000015e-05, 4.3805000000000927e-05, 4.4124999999999026e-05, 4.329200000000033e-05, 4.4124999999999026e-05, 4.33059999999999e-05, 4.3375000000001745e-05]</msg>
<status status="PASS" starttime="20201110 08:38:30.192" endtime="20201110 08:38:30.194"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.187" endtime="20201110 08:38:30.194"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:30.196" endtime="20201110 08:38:30.198"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:30.200" endtime="20201110 08:38:30.219"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.198" endtime="20201110 08:38:30.220"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.195" endtime="20201110 08:38:30.220"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.830" endtime="20201110 08:38:30.220"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.829" endtime="20201110 08:38:30.221"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:30.229" endtime="20201110 08:38:30.247"></status>
</kw>
<msg timestamp="20201110 08:38:30.247" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:30.228" endtime="20201110 08:38:30.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:30.249" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:30.248" endtime="20201110 08:38:30.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:30.250" endtime="20201110 08:38:30.253"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.225" endtime="20201110 08:38:30.254"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.223" endtime="20201110 08:38:30.254"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:30.260" endtime="20201110 08:38:30.545"></status>
</kw>
<msg timestamp="20201110 08:38:30.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019877417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019926125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:30.259" endtime="20201110 08:38:30.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:30.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019877417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019926125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:30.550" endtime="20201110 08:38:30.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:30.558" endtime="20201110 08:38:30.560"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.256" endtime="20201110 08:38:30.560"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.255" endtime="20201110 08:38:30.561"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:30.565" level="INFO">${RESULT} = [{'time': 0.019926125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.8707999999998e-05, 'source_diff': 4.8707999999998e-05}, {'time': 0.019975097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4...</msg>
<status status="PASS" starttime="20201110 08:38:30.561" endtime="20201110 08:38:30.565"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:30.578" level="INFO">${ACCURACY} = {'diff': [4.8707999999998e-05, 4.4638999999999096e-05, 4.4624999999999526e-05, 4.472200000000051e-05, 4.419400000000087e-05, 4.4431000000001025e-05, 4.455600000000115e-05, 4.476399999999922e-05, 4.415...</msg>
<status status="PASS" starttime="20201110 08:38:30.566" endtime="20201110 08:38:30.579"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:30.583" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201110 08:38:30.582" endtime="20201110 08:38:30.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:30.586" level="INFO">VALUE: [4.8707999999998e-05, 4.4638999999999096e-05, 4.4624999999999526e-05, 4.472200000000051e-05, 4.419400000000087e-05, 4.4431000000001025e-05, 4.455600000000115e-05, 4.476399999999922e-05, 4.4153000000001635e-05, 4.4861000000000206e-05, 4.482000000000097e-05, 4.44999999999994e-05, 4.4153000000001635e-05, 4.4861000000000206e-05, 4.483400000000054e-05, 4.4374999999999276e-05, 4.4139000000002065e-05, 4.443000000000155e-05, 4.4847000000000636e-05, 4.4486999999999305e-05, 4.502699999999957e-05, 4.4360999999999706e-05, 4.445799999999722e-05, 4.4861000000000206e-05, 4.4333000000000566e-05, 4.444399999999765e-05, 4.504100000000261e-05, 4.4374999999999276e-05, 4.4903000000002385e-05, 4.472199999999704e-05, 4.505500000000218e-05, 4.4610999999999956e-05, 4.4402999999998416e-05, 4.4638999999999096e-05, 4.420800000000044e-05, 4.4861000000000206e-05, 4.4208999999999915e-05, 4.43060000000009e-05, 4.473600000000008e-05, 4.4874999999999776e-05, 4.4945000000001095e-05, 4.4139000000002065e-05, 4.4444999999997126e-05, 4.4931000000001525e-05, 4.440199999999894e-05, 4.447199999999679e-05, 4.5069000000001747e-05, 4.46120000000029e-05, 4.4888999999999346e-05, 4.4555000000001677e-05]</msg>
<status status="PASS" starttime="20201110 08:38:30.584" endtime="20201110 08:38:30.586"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.579" endtime="20201110 08:38:30.587"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:30.589" endtime="20201110 08:38:30.590"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:30.592" endtime="20201110 08:38:30.612"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.591" endtime="20201110 08:38:30.612"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.587" endtime="20201110 08:38:30.613"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.222" endtime="20201110 08:38:30.613"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.221" endtime="20201110 08:38:30.613"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:30.622" endtime="20201110 08:38:30.639"></status>
</kw>
<msg timestamp="20201110 08:38:30.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:30.620" endtime="20201110 08:38:30.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:30.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:30.641" endtime="20201110 08:38:30.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:30.643" endtime="20201110 08:38:30.646"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.618" endtime="20201110 08:38:30.646"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.616" endtime="20201110 08:38:30.647"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:30.653" endtime="20201110 08:38:30.941"></status>
</kw>
<msg timestamp="20201110 08:38:30.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019773625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019824139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:30.652" endtime="20201110 08:38:30.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:30.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019773625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019824139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:30.945" endtime="20201110 08:38:30.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:30.954" endtime="20201110 08:38:30.955"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.649" endtime="20201110 08:38:30.956"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.648" endtime="20201110 08:38:30.956"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:30.960" level="INFO">${RESULT} = [{'time': 0.019824139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.05140000000015e-05, 'source_diff': 5.05140000000015e-05}, {'time': 0.019872139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:38:30.957" endtime="20201110 08:38:30.960"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:30.974" level="INFO">${ACCURACY} = {'diff': [5.05140000000015e-05, 4.525000000000015e-05, 4.5138999999999596e-05, 4.5639000000000096e-05, 4.5430999999998556e-05, 4.517999999999883e-05, 4.5458999999997696e-05, 4.55000000000004e-05, 4.58...</msg>
<status status="PASS" starttime="20201110 08:38:30.961" endtime="20201110 08:38:30.974"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:30.979" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201110 08:38:30.978" endtime="20201110 08:38:30.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:30.981" level="INFO">VALUE: [5.05140000000015e-05, 4.525000000000015e-05, 4.5138999999999596e-05, 4.5639000000000096e-05, 4.5430999999998556e-05, 4.517999999999883e-05, 4.5458999999997696e-05, 4.55000000000004e-05, 4.5889000000000346e-05, 4.540199999999994e-05, 4.5695000000001845e-05, 4.51939999999984e-05, 4.576299999999728e-05, 4.5583000000001817e-05, 4.556899999999878e-05, 4.548600000000083e-05, 4.526399999999972e-05, 4.551399999999997e-05, 4.576400000000022e-05, 4.570800000000194e-05, 4.594399999999915e-05, 4.51939999999984e-05, 4.5597000000001386e-05, 4.548599999999736e-05, 4.519400000000187e-05, 4.545800000000169e-05, 4.561099999999749e-05, 4.5402999999999416e-05, 4.612499999999756e-05, 4.549999999999693e-05, 4.5195000000001345e-05, 4.580499999999946e-05, 4.5917000000002955e-05, 4.557000000000172e-05, 4.5430999999998556e-05, 4.5680999999998806e-05, 4.55000000000004e-05, 4.5639000000000096e-05, 4.5180999999998306e-05, 4.573599999999761e-05, 4.594400000000262e-05, 4.6125000000001026e-05, 4.526399999999972e-05, 4.523600000000058e-05, 4.55000000000004e-05, 4.606899999999928e-05, 4.605499999999971e-05, 4.556899999999878e-05, 4.555499999999921e-05, 4.569400000000237e-05]</msg>
<status status="PASS" starttime="20201110 08:38:30.980" endtime="20201110 08:38:30.982"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.975" endtime="20201110 08:38:30.982"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:30.985" endtime="20201110 08:38:30.986"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:30.988" endtime="20201110 08:38:31.007"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.987" endtime="20201110 08:38:31.008"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.983" endtime="20201110 08:38:31.008"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.614" endtime="20201110 08:38:31.009"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.614" endtime="20201110 08:38:31.009"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:31.017" endtime="20201110 08:38:31.036"></status>
</kw>
<msg timestamp="20201110 08:38:31.036" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:31.016" endtime="20201110 08:38:31.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:31.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:31.037" endtime="20201110 08:38:31.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:31.040" endtime="20201110 08:38:31.042"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.013" endtime="20201110 08:38:31.043"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.011" endtime="20201110 08:38:31.043"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:31.050" endtime="20201110 08:38:31.335"></status>
</kw>
<msg timestamp="20201110 08:38:31.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019801542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019852111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:31.048" endtime="20201110 08:38:31.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:31.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019801542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019852111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:31.339" endtime="20201110 08:38:31.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:31.347" endtime="20201110 08:38:31.349"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.046" endtime="20201110 08:38:31.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.044" endtime="20201110 08:38:31.350"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:31.354" level="INFO">${RESULT} = [{'time': 0.019852111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.056900000000031e-05, 'source_diff': 5.056900000000031e-05}, {'time': 0.019903139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:31.351" endtime="20201110 08:38:31.354"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:31.369" level="INFO">${ACCURACY} = {'diff': [5.056900000000031e-05, 4.6139000000000596e-05, 4.625000000000115e-05, 4.705600000000018e-05, 4.6459000000002165e-05, 4.629199999999986e-05, 4.713899999999813e-05, 4.6889000000001346e-05, 4.6...</msg>
<status status="PASS" starttime="20201110 08:38:31.355" endtime="20201110 08:38:31.369"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:31.373" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201110 08:38:31.372" endtime="20201110 08:38:31.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:31.376" level="INFO">VALUE: [5.056900000000031e-05, 4.6139000000000596e-05, 4.625000000000115e-05, 4.705600000000018e-05, 4.6459000000002165e-05, 4.629199999999986e-05, 4.713899999999813e-05, 4.6889000000001346e-05, 4.63060000000029e-05, 4.623600000000158e-05, 4.68199999999995e-05, 4.6139000000000596e-05, 4.6737000000001555e-05, 4.629100000000039e-05, 4.708299999999985e-05, 4.688899999999788e-05, 4.681900000000003e-05, 4.6931000000000056e-05, 4.666600000000076e-05, 4.6139000000000596e-05, 4.617999999999983e-05, 4.6139000000000596e-05, 4.686099999999874e-05, 4.670799999999947e-05, 4.673599999999861e-05, 4.620799999999897e-05, 4.648600000000183e-05, 4.6180999999999306e-05, 4.658299999999935e-05, 4.6931000000000056e-05, 4.6389000000000846e-05, 4.6208999999998446e-05, 4.627800000000029e-05, 4.6166999999999736e-05, 4.6361000000001706e-05, 4.648600000000183e-05, 4.677700000000132e-05, 4.672199999999904e-05, 4.630599999999943e-05, 4.652700000000107e-05, 4.625000000000115e-05, 4.625000000000115e-05, 4.66939999999999e-05, 4.620799999999897e-05, 4.644399999999965e-05, 4.625000000000115e-05, 4.652800000000054e-05, 4.6430999999999556e-05, 4.61939999999994e-05, 4.655500000000021e-05]</msg>
<status status="PASS" starttime="20201110 08:38:31.374" endtime="20201110 08:38:31.376"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.370" endtime="20201110 08:38:31.377"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:31.379" endtime="20201110 08:38:31.380"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:31.383" endtime="20201110 08:38:31.402"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.381" endtime="20201110 08:38:31.403"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.378" endtime="20201110 08:38:31.403"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.010" endtime="20201110 08:38:31.403"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.009" endtime="20201110 08:38:31.403"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:31.412" endtime="20201110 08:38:31.430"></status>
</kw>
<msg timestamp="20201110 08:38:31.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:31.410" endtime="20201110 08:38:31.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:31.433" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:31.431" endtime="20201110 08:38:31.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:31.434" endtime="20201110 08:38:31.436"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.408" endtime="20201110 08:38:31.437"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.406" endtime="20201110 08:38:31.437"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:31.444" endtime="20201110 08:38:31.729"></status>
</kw>
<msg timestamp="20201110 08:38:31.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019710403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019762694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:31.442" endtime="20201110 08:38:31.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:31.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019710403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019762694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:31.733" endtime="20201110 08:38:31.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:31.742" endtime="20201110 08:38:31.743"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.440" endtime="20201110 08:38:31.744"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.438" endtime="20201110 08:38:31.744"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:31.748" level="INFO">${RESULT} = [{'time': 0.019762694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.229099999999945e-05, 'source_diff': 5.229099999999945e-05}, {'time': 0.019814694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:31.745" endtime="20201110 08:38:31.749"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:31.762" level="INFO">${ACCURACY} = {'diff': [5.229099999999945e-05, 4.730500000000096e-05, 4.744400000000065e-05, 4.749999999999893e-05, 4.744400000000065e-05, 4.7458999999999696e-05, 4.793000000000158e-05, 4.780499999999799e-05, 4.730...</msg>
<status status="PASS" starttime="20201110 08:38:31.749" endtime="20201110 08:38:31.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:31.767" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201110 08:38:31.766" endtime="20201110 08:38:31.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:31.769" level="INFO">VALUE: [5.229099999999945e-05, 4.730500000000096e-05, 4.744400000000065e-05, 4.749999999999893e-05, 4.744400000000065e-05, 4.7458999999999696e-05, 4.793000000000158e-05, 4.780499999999799e-05, 4.730500000000096e-05, 4.7639000000002096e-05, 4.712499999999856e-05, 4.784700000000017e-05, 4.7681000000000806e-05, 4.761099999999949e-05, 4.806900000000128e-05, 4.749999999999893e-05, 4.7458999999999696e-05, 4.722199999999954e-05, 4.798599999999986e-05, 4.7209000000002915e-05, 4.758399999999982e-05, 4.7639000000002096e-05, 4.757000000000025e-05, 4.8013999999999e-05, 4.757000000000025e-05, 4.812499999999956e-05, 4.813799999999965e-05, 4.772200000000004e-05, 4.756899999999731e-05, 4.812499999999956e-05, 4.756900000000078e-05, 4.7389000000001846e-05, 4.718000000000083e-05, 4.737499999999881e-05, 4.71940000000004e-05, 4.773599999999961e-05, 4.747199999999979e-05, 4.727799999999782e-05, 4.740299999999795e-05, 4.724999999999868e-05, 4.7903000000001916e-05, 4.787499999999931e-05, 4.729200000000086e-05, 4.7472999999999266e-05, 4.7375000000002276e-05, 4.7708999999999946e-05, 4.776399999999875e-05, 4.7959000000000196e-05, 4.7194999999999876e-05, 4.780600000000093e-05]</msg>
<status status="PASS" starttime="20201110 08:38:31.768" endtime="20201110 08:38:31.770"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.763" endtime="20201110 08:38:31.770"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:31.773" endtime="20201110 08:38:31.774"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:31.776" endtime="20201110 08:38:31.795"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.775" endtime="20201110 08:38:31.796"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.771" endtime="20201110 08:38:31.796"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.404" endtime="20201110 08:38:31.797"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.404" endtime="20201110 08:38:31.797"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:31.805" endtime="20201110 08:38:31.824"></status>
</kw>
<msg timestamp="20201110 08:38:31.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:31.804" endtime="20201110 08:38:31.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:31.827" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:31.825" endtime="20201110 08:38:31.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:31.828" endtime="20201110 08:38:31.830"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.801" endtime="20201110 08:38:31.831"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.799" endtime="20201110 08:38:31.831"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:31.838" endtime="20201110 08:38:32.123"></status>
</kw>
<msg timestamp="20201110 08:38:32.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019814375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019867472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:31.836" endtime="20201110 08:38:32.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:32.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019814375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019867472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:32.127" endtime="20201110 08:38:32.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:32.135" endtime="20201110 08:38:32.137"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.834" endtime="20201110 08:38:32.138"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.832" endtime="20201110 08:38:32.138"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:32.142" level="INFO">${RESULT} = [{'time': 0.019867472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.309700000000195e-05, 'source_diff': 5.309700000000195e-05}, {'time': 0.019919458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:32.139" endtime="20201110 08:38:32.142"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:32.156" level="INFO">${ACCURACY} = {'diff': [5.309700000000195e-05, 4.862500000000006e-05, 4.849999999999993e-05, 4.8707999999998e-05, 4.874999999999671e-05, 4.905499999999924e-05, 4.848600000000036e-05, 4.870800000000147e-05, 4.816600...</msg>
<status status="PASS" starttime="20201110 08:38:32.143" endtime="20201110 08:38:32.156"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:32.160" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201110 08:38:32.159" endtime="20201110 08:38:32.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:32.163" level="INFO">VALUE: [5.309700000000195e-05, 4.862500000000006e-05, 4.849999999999993e-05, 4.8707999999998e-05, 4.874999999999671e-05, 4.905499999999924e-05, 4.848600000000036e-05, 4.870800000000147e-05, 4.816600000000226e-05, 4.9014e-05, 4.823600000000011e-05, 4.870800000000147e-05, 4.838899999999938e-05, 4.826399999999925e-05, 4.888899999999988e-05, 4.830599999999796e-05, 4.8723000000000516e-05, 4.875000000000018e-05, 4.830599999999796e-05, 4.823600000000011e-05, 4.86529999999992e-05, 4.876399999999975e-05, 4.875000000000018e-05, 4.833400000000057e-05, 4.855599999999821e-05, 4.906999999999828e-05, 4.831899999999806e-05, 4.8707999999998e-05, 4.8737000000000086e-05, 4.877799999999932e-05, 4.867999999999886e-05, 4.888899999999988e-05, 4.816699999999827e-05, 4.9014e-05, 4.866599999999929e-05, 4.906900000000228e-05, 4.881899999999856e-05, 4.879199999999889e-05, 4.895799999999825e-05, 4.836100000000024e-05, 4.9014e-05, 4.8444999999997657e-05, 4.881999999999803e-05, 4.904199999999914e-05, 4.886100000000074e-05, 4.837499999999981e-05, 4.8445000000001126e-05, 4.823600000000011e-05, 4.8167000000001736e-05, 4.8139000000002596e-05]</msg>
<status status="PASS" starttime="20201110 08:38:32.161" endtime="20201110 08:38:32.164"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.157" endtime="20201110 08:38:32.164"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:32.166" endtime="20201110 08:38:32.168"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:32.170" endtime="20201110 08:38:32.189"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.168" endtime="20201110 08:38:32.190"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.165" endtime="20201110 08:38:32.190"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.798" endtime="20201110 08:38:32.190"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.797" endtime="20201110 08:38:32.190"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:32.199" endtime="20201110 08:38:32.217"></status>
</kw>
<msg timestamp="20201110 08:38:32.217" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:32.197" endtime="20201110 08:38:32.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:32.219" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:32.218" endtime="20201110 08:38:32.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:32.220" endtime="20201110 08:38:32.223"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.195" endtime="20201110 08:38:32.224"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.193" endtime="20201110 08:38:32.224"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:32.230" endtime="20201110 08:38:32.515"></status>
</kw>
<msg timestamp="20201110 08:38:32.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019708333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019762028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:32.229" endtime="20201110 08:38:32.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:32.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019708333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019762028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:32.519" endtime="20201110 08:38:32.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:32.528" endtime="20201110 08:38:32.529"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.226" endtime="20201110 08:38:32.530"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.225" endtime="20201110 08:38:32.530"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:32.535" level="INFO">${RESULT} = [{'time': 0.019762028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.369499999999944e-05, 'source_diff': 5.369499999999944e-05}, {'time': 0.019814028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:32.531" endtime="20201110 08:38:32.535"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:32.548" level="INFO">${ACCURACY} = {'diff': [5.369499999999944e-05, 4.983400000000207e-05, 4.918099999999884e-05, 4.9945000000002626e-05, 4.9401999999997004e-05, 4.961099999999802e-05, 4.929199999999939e-05, 4.994400000000315e-05, 4.97...</msg>
<status status="PASS" starttime="20201110 08:38:32.536" endtime="20201110 08:38:32.549"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:32.553" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201110 08:38:32.552" endtime="20201110 08:38:32.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:32.555" level="INFO">VALUE: [5.369499999999944e-05, 4.983400000000207e-05, 4.918099999999884e-05, 4.9945000000002626e-05, 4.9401999999997004e-05, 4.961099999999802e-05, 4.929199999999939e-05, 4.994400000000315e-05, 4.975000000000118e-05, 5.002800000000057e-05, 4.965200000000072e-05, 4.922200000000154e-05, 4.977800000000032e-05, 5.013900000000113e-05, 4.92079999999985e-05, 4.942999999999961e-05, 4.983299999999913e-05, 4.986099999999827e-05, 4.972199999999857e-05, 4.927799999999982e-05, 5.008299999999938e-05, 5.000000000000143e-05, 4.997199999999882e-05, 4.975000000000118e-05, 4.9681000000002806e-05, 4.9320000000002e-05, 4.955599999999921e-05, 4.925000000000068e-05, 4.987499999999784e-05, 4.925000000000068e-05, 4.977699999999738e-05, 5.0138000000001653e-05, 4.9887999999997934e-05, 4.980599999999946e-05, 4.969399999999943e-05, 4.981899999999956e-05, 4.944400000000265e-05, 4.994399999999968e-05, 4.976399999999728e-05, 4.975000000000118e-05, 4.950000000000093e-05, 4.997200000000229e-05, 4.977800000000032e-05, 4.991700000000002e-05, 4.969399999999943e-05, 4.91529999999997e-05, 5.013899999999766e-05, 4.95140000000005e-05, 5.007000000000275e-05, 4.988900000000088e-05]</msg>
<status status="PASS" starttime="20201110 08:38:32.554" endtime="20201110 08:38:32.556"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.549" endtime="20201110 08:38:32.557"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:32.559" endtime="20201110 08:38:32.561"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:32.563" endtime="20201110 08:38:32.582"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.561" endtime="20201110 08:38:32.583"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.558" endtime="20201110 08:38:32.583"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.191" endtime="20201110 08:38:32.583"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.191" endtime="20201110 08:38:32.584"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:32.592" endtime="20201110 08:38:32.611"></status>
</kw>
<msg timestamp="20201110 08:38:32.611" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:32.591" endtime="20201110 08:38:32.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:32.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:32.612" endtime="20201110 08:38:32.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:32.615" endtime="20201110 08:38:32.617"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.588" endtime="20201110 08:38:32.618"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.586" endtime="20201110 08:38:32.618"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:32.625" endtime="20201110 08:38:32.910"></status>
</kw>
<msg timestamp="20201110 08:38:32.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019811653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019866903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:32.623" endtime="20201110 08:38:32.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:32.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019811653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019866903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:32.914" endtime="20201110 08:38:32.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:32.923" endtime="20201110 08:38:32.924"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.620" endtime="20201110 08:38:32.925"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.619" endtime="20201110 08:38:32.925"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:32.929" level="INFO">${RESULT} = [{'time': 0.019866903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.525000000000321e-05, 'source_diff': 5.525000000000321e-05}, {'time': 0.019920903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:32.926" endtime="20201110 08:38:32.930"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:32.944" level="INFO">${ACCURACY} = {'diff': [5.525000000000321e-05, 5.101399999999853e-05, 5.091700000000102e-05, 5.027800000000082e-05, 5.016700000000027e-05, 5.040300000000095e-05, 5.074999999999871e-05, 5.080600000000046e-05, 5.0582...</msg>
<status status="PASS" starttime="20201110 08:38:32.930" endtime="20201110 08:38:32.944"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:32.948" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201110 08:38:32.947" endtime="20201110 08:38:32.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:32.951" level="INFO">VALUE: [5.525000000000321e-05, 5.101399999999853e-05, 5.091700000000102e-05, 5.027800000000082e-05, 5.016700000000027e-05, 5.040300000000095e-05, 5.074999999999871e-05, 5.080600000000046e-05, 5.058299999999988e-05, 5.075000000000218e-05, 5.013899999999766e-05, 5.077700000000185e-05, 5.108300000000038e-05, 5.091699999999755e-05, 5.108299999999691e-05, 5.108300000000038e-05, 5.0929999999997644e-05, 5.03469999999992e-05, 5.018000000000036e-05, 5.081900000000056e-05, 5.081900000000056e-05, 5.030599999999996e-05, 5.029200000000039e-05, 5.0943999999997214e-05, 5.062499999999859e-05, 5.055600000000021e-05, 5.104200000000114e-05, 5.037499999999834e-05, 5.109799999999942e-05, 5.09729999999993e-05, 5.054199999999717e-05, 5.051399999999803e-05, 5.073599999999914e-05, 5.094500000000016e-05, 5.069400000000043e-05, 5.079100000000142e-05, 5.062500000000206e-05, 5.097199999999982e-05, 5.051399999999803e-05, 5.080500000000099e-05, 5.023599999999864e-05, 5.094400000000068e-05, 5.073599999999914e-05, 5.088899999999841e-05, 5.080600000000046e-05, 5.029200000000039e-05, 5.013899999999766e-05, 5.069499999999991e-05, 5.073599999999914e-05, 5.056999999999978e-05]</msg>
<status status="PASS" starttime="20201110 08:38:32.950" endtime="20201110 08:38:32.952"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.945" endtime="20201110 08:38:32.952"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:32.955" endtime="20201110 08:38:32.956"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:32.958" endtime="20201110 08:38:32.977"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.956" endtime="20201110 08:38:32.978"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.953" endtime="20201110 08:38:32.978"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.585" endtime="20201110 08:38:32.979"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.584" endtime="20201110 08:38:32.979"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:32.987" endtime="20201110 08:38:33.007"></status>
</kw>
<msg timestamp="20201110 08:38:33.008" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:32.986" endtime="20201110 08:38:33.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:33.010" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:33.009" endtime="20201110 08:38:33.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:33.011" endtime="20201110 08:38:33.014"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.983" endtime="20201110 08:38:33.014"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.981" endtime="20201110 08:38:33.015"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:33.021" endtime="20201110 08:38:33.307"></status>
</kw>
<msg timestamp="20201110 08:38:33.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019764806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019821097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:33.020" endtime="20201110 08:38:33.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:33.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019764806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019821097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:33.311" endtime="20201110 08:38:33.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:33.320" endtime="20201110 08:38:33.321"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.017" endtime="20201110 08:38:33.322"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.016" endtime="20201110 08:38:33.322"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:33.326" level="INFO">${RESULT} = [{'time': 0.019821097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.629099999999998e-05, 'source_diff': 5.629099999999998e-05}, {'time': 0.019875097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:33.323" endtime="20201110 08:38:33.327"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:33.340" level="INFO">${ACCURACY} = {'diff': [5.629099999999998e-05, 5.130500000000149e-05, 5.183299999999766e-05, 5.1457999999997284e-05, 5.1985999999996924e-05, 5.140300000000195e-05, 5.195800000000125e-05, 5.207000000000128e-05, 5.13...</msg>
<status status="PASS" starttime="20201110 08:38:33.327" endtime="20201110 08:38:33.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:33.345" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201110 08:38:33.344" endtime="20201110 08:38:33.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:33.347" level="INFO">VALUE: [5.629099999999998e-05, 5.130500000000149e-05, 5.183299999999766e-05, 5.1457999999997284e-05, 5.1985999999996924e-05, 5.140300000000195e-05, 5.195800000000125e-05, 5.207000000000128e-05, 5.137499999999934e-05, 5.197200000000082e-05, 5.163899999999916e-05, 5.188899999999941e-05, 5.177799999999885e-05, 5.1708000000001e-05, 5.123599999999964e-05, 5.158400000000035e-05, 5.137500000000281e-05, 5.198600000000039e-05, 5.1957999999997784e-05, 5.130600000000096e-05, 5.1152000000002223e-05, 5.183300000000113e-05, 5.131900000000106e-05, 5.188899999999941e-05, 5.180499999999852e-05, 5.111099999999952e-05, 5.145900000000023e-05, 5.156900000000131e-05, 5.213899999999966e-05, 5.1708000000001e-05, 5.181900000000156e-05, 5.1487000000002836e-05, 5.177799999999885e-05, 5.193100000000159e-05, 5.177800000000232e-05, 5.137499999999934e-05, 5.195900000000073e-05, 5.124999999999921e-05, 5.148599999999989e-05, 5.169500000000091e-05, 5.158300000000088e-05, 5.198600000000039e-05, 5.176299999999981e-05, 5.155499999999827e-05, 5.161199999999949e-05, 5.123599999999964e-05, 5.149999999999946e-05, 5.194400000000168e-05, 5.156900000000131e-05, 5.1193999999997464e-05]</msg>
<status status="PASS" starttime="20201110 08:38:33.346" endtime="20201110 08:38:33.348"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.341" endtime="20201110 08:38:33.348"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:33.351" endtime="20201110 08:38:33.352"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:33.354" endtime="20201110 08:38:33.373"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.353" endtime="20201110 08:38:33.374"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.349" endtime="20201110 08:38:33.374"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.980" endtime="20201110 08:38:33.375"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.979" endtime="20201110 08:38:33.375"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:33.383" endtime="20201110 08:38:33.401"></status>
</kw>
<msg timestamp="20201110 08:38:33.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:33.382" endtime="20201110 08:38:33.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:33.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:33.403" endtime="20201110 08:38:33.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:33.405" endtime="20201110 08:38:33.408"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.379" endtime="20201110 08:38:33.408"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.377" endtime="20201110 08:38:33.409"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:33.415" endtime="20201110 08:38:33.702"></status>
</kw>
<msg timestamp="20201110 08:38:33.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019811792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019868861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:33.414" endtime="20201110 08:38:33.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:33.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019811792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019868861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:33.706" endtime="20201110 08:38:33.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:33.714" endtime="20201110 08:38:33.716"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.411" endtime="20201110 08:38:33.716"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.409" endtime="20201110 08:38:33.717"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:33.721" level="INFO">${RESULT} = [{'time': 0.019868861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.706899999999987e-05, 'source_diff': 5.706899999999987e-05}, {'time': 0.019926847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:33.718" endtime="20201110 08:38:33.721"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:33.735" level="INFO">${ACCURACY} = {'diff': [5.706899999999987e-05, 5.2415999999999574e-05, 5.263900000000016e-05, 5.287500000000084e-05, 5.305499999999977e-05, 5.2652000000000254e-05, 5.302700000000063e-05, 5.2443999999998714e-05, 5.3...</msg>
<status status="PASS" starttime="20201110 08:38:33.722" endtime="20201110 08:38:33.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:33.739" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201110 08:38:33.738" endtime="20201110 08:38:33.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:33.742" level="INFO">VALUE: [5.706899999999987e-05, 5.2415999999999574e-05, 5.263900000000016e-05, 5.287500000000084e-05, 5.305499999999977e-05, 5.2652000000000254e-05, 5.302700000000063e-05, 5.2443999999998714e-05, 5.305499999999977e-05, 5.233300000000163e-05, 5.311100000000152e-05, 5.258300000000188e-05, 5.256900000000231e-05, 5.273600000000114e-05, 5.300000000000096e-05, 5.233300000000163e-05, 5.305499999999977e-05, 5.2707999999998534e-05, 5.3207999999999034e-05, 5.22080000000015e-05, 5.256999999999831e-05, 5.301400000000053e-05, 5.218100000000184e-05, 5.259800000000092e-05, 5.23340000000011e-05, 5.273600000000114e-05, 5.306999999999881e-05, 5.275000000000071e-05, 5.238899999999991e-05, 5.2138000000000184e-05, 5.225000000000021e-05, 5.280500000000299e-05, 5.2485999999997424e-05, 5.254200000000264e-05, 5.2707999999998534e-05, 5.277799999999985e-05, 5.2499999999996994e-05, 5.22080000000015e-05, 5.275000000000071e-05, 5.251400000000003e-05, 5.2735999999997674e-05, 5.215299999999923e-05, 5.226400000000325e-05, 5.286100000000127e-05, 5.231999999999806e-05, 5.311099999999805e-05, 5.219499999999794e-05, 5.293099999999912e-05, 5.283299999999866e-05, 5.288899999999694e-05]</msg>
<status status="PASS" starttime="20201110 08:38:33.740" endtime="20201110 08:38:33.743"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.736" endtime="20201110 08:38:33.743"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:33.746" endtime="20201110 08:38:33.747"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:33.749" endtime="20201110 08:38:33.769"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.748" endtime="20201110 08:38:33.770"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.744" endtime="20201110 08:38:33.770"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.376" endtime="20201110 08:38:33.770"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.375" endtime="20201110 08:38:33.770"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:33.779" endtime="20201110 08:38:33.798"></status>
</kw>
<msg timestamp="20201110 08:38:33.798" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:33.777" endtime="20201110 08:38:33.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:33.801" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:33.799" endtime="20201110 08:38:33.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:33.802" endtime="20201110 08:38:33.804"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.775" endtime="20201110 08:38:33.805"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.773" endtime="20201110 08:38:33.805"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:33.812" endtime="20201110 08:38:34.096"></status>
</kw>
<msg timestamp="20201110 08:38:34.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019861472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019919264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:33.810" endtime="20201110 08:38:34.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:34.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019861472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019919264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:34.100" endtime="20201110 08:38:34.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:34.109" endtime="20201110 08:38:34.110"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.808" endtime="20201110 08:38:34.111"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.806" endtime="20201110 08:38:34.111"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:34.115" level="INFO">${RESULT} = [{'time': 0.019919264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7791999999997484e-05, 'source_diff': 5.7791999999997484e-05}, {'time': 0.019976264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:34.112" endtime="20201110 08:38:34.116"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:34.129" level="INFO">${ACCURACY} = {'diff': [5.7791999999997484e-05, 5.387500000000184e-05, 5.395900000000273e-05, 5.406999999999981e-05, 5.398600000000239e-05, 5.31669999999998e-05, 5.312500000000109e-05, 5.326400000000078e-05, 5.3569...</msg>
<status status="PASS" starttime="20201110 08:38:34.116" endtime="20201110 08:38:34.129"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:34.134" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201110 08:38:34.132" endtime="20201110 08:38:34.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:34.136" level="INFO">VALUE: [5.7791999999997484e-05, 5.387500000000184e-05, 5.395900000000273e-05, 5.406999999999981e-05, 5.398600000000239e-05, 5.31669999999998e-05, 5.312500000000109e-05, 5.326400000000078e-05, 5.356999999999931e-05, 5.3499999999997994e-05, 5.39869999999984e-05, 5.368099999999987e-05, 5.351400000000103e-05, 5.3707999999999534e-05, 5.3179999999999894e-05, 5.351400000000103e-05, 5.3430000000000144e-05, 5.383299999999966e-05, 5.3707999999999534e-05, 5.355599999999974e-05, 5.351400000000103e-05, 5.35280000000006e-05, 5.393099999999665e-05, 5.376400000000128e-05, 5.33340000000021e-05, 5.369499999999944e-05, 5.400000000000196e-05, 5.329199999999992e-05, 5.39730000000023e-05, 5.36670000000003e-05, 5.3999999999998494e-05, 5.401400000000153e-05, 5.412499999999862e-05, 5.3402000000001004e-05, 5.376300000000181e-05, 5.3693999999999964e-05, 5.330500000000002e-05, 5.412499999999862e-05, 5.380499999999705e-05, 5.401400000000153e-05, 5.312500000000109e-05, 5.406900000000034e-05, 5.408299999999991e-05, 5.338900000000091e-05, 5.398600000000239e-05, 5.358299999999941e-05, 5.388900000000141e-05, 5.376400000000128e-05, 5.3513999999997564e-05, 5.372300000000205e-05]</msg>
<status status="PASS" starttime="20201110 08:38:34.135" endtime="20201110 08:38:34.137"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.130" endtime="20201110 08:38:34.137"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:34.140" endtime="20201110 08:38:34.141"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:34.143" endtime="20201110 08:38:34.162"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.141" endtime="20201110 08:38:34.163"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.138" endtime="20201110 08:38:34.164"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.771" endtime="20201110 08:38:34.165"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.771" endtime="20201110 08:38:34.165"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:34.177" endtime="20201110 08:38:34.196"></status>
</kw>
<msg timestamp="20201110 08:38:34.196" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:34.175" endtime="20201110 08:38:34.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:34.199" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:34.198" endtime="20201110 08:38:34.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:34.200" endtime="20201110 08:38:34.203"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.171" endtime="20201110 08:38:34.203"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.168" endtime="20201110 08:38:34.204"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:34.210" endtime="20201110 08:38:34.497"></status>
</kw>
<msg timestamp="20201110 08:38:34.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024950056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025008944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:34.209" endtime="20201110 08:38:34.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:34.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024950056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025008944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:34.501" endtime="20201110 08:38:34.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:34.509" endtime="20201110 08:38:34.511"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.206" endtime="20201110 08:38:34.512"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.204" endtime="20201110 08:38:34.512"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:34.516" level="INFO">${RESULT} = [{'time': 0.025008944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8887999999999996e-05, 'source_diff': 5.8887999999999996e-05}, {'time': 0.025065931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:34.513" endtime="20201110 08:38:34.516"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:34.531" level="INFO">${ACCURACY} = {'diff': [5.8887999999999996e-05, 5.48479999999997e-05, 5.4791999999997953e-05, 5.4708000000000534e-05, 5.4735999999999674e-05, 5.427800000000135e-05, 5.4693999999997495e-05, 5.512500000000309e-05, 5....</msg>
<status status="PASS" starttime="20201110 08:38:34.517" endtime="20201110 08:38:34.531"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:34.535" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201110 08:38:34.534" endtime="20201110 08:38:34.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:34.538" level="INFO">VALUE: [5.8887999999999996e-05, 5.48479999999997e-05, 5.4791999999997953e-05, 5.4708000000000534e-05, 5.4735999999999674e-05, 5.427800000000135e-05, 5.4693999999997495e-05, 5.512500000000309e-05, 5.4943999999997745e-05, 5.4985999999999924e-05, 5.4277999999997883e-05, 5.4458000000000284e-05, 5.462499999999912e-05, 5.4541999999997703e-05, 5.509699999999701e-05, 5.418100000000037e-05, 5.425000000000221e-05, 5.513899999999919e-05, 5.5013999999999064e-05, 5.430600000000049e-05, 5.418100000000037e-05, 5.455600000000074e-05, 5.463900000000216e-05, 5.432000000000006e-05, 5.450000000000246e-05, 5.4458000000000284e-05, 5.430500000000102e-05, 5.437499999999887e-05, 5.455600000000074e-05, 5.481900000000109e-05, 5.477800000000185e-05, 5.4943999999997745e-05, 5.413899999999819e-05, 5.480500000000152e-05, 5.475000000000271e-05, 5.426400000000178e-05, 5.4791999999997953e-05, 5.4527999999998134e-05, 5.465299999999826e-05, 5.4749999999999244e-05, 5.462499999999912e-05, 5.413899999999819e-05, 5.507000000000081e-05, 5.488900000000241e-05, 5.444500000000019e-05, 5.4735999999999674e-05, 5.4249999999998744e-05, 5.4901999999999035e-05, 5.4194000000000464e-05, 5.4471999999999854e-05]</msg>
<status status="PASS" starttime="20201110 08:38:34.537" endtime="20201110 08:38:34.539"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.532" endtime="20201110 08:38:34.539"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:34.542" endtime="20201110 08:38:34.543"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:34.545" endtime="20201110 08:38:34.564"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.544" endtime="20201110 08:38:34.565"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.540" endtime="20201110 08:38:34.565"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.166" endtime="20201110 08:38:34.566"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.165" endtime="20201110 08:38:34.566"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:34.574" endtime="20201110 08:38:34.592"></status>
</kw>
<msg timestamp="20201110 08:38:34.593" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:34.573" endtime="20201110 08:38:34.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:34.595" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:34.594" endtime="20201110 08:38:34.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:34.596" endtime="20201110 08:38:34.599"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.570" endtime="20201110 08:38:34.599"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.568" endtime="20201110 08:38:34.599"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:34.606" endtime="20201110 08:38:34.892"></status>
</kw>
<msg timestamp="20201110 08:38:34.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019741, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019800708, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:38:34.604" endtime="20201110 08:38:34.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:34.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019741, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019800708, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:38:34.896" endtime="20201110 08:38:34.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:34.905" endtime="20201110 08:38:34.906"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.602" endtime="20201110 08:38:34.907"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.600" endtime="20201110 08:38:34.907"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:34.911" level="INFO">${RESULT} = [{'time': 0.019800708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9707999999998596e-05, 'source_diff': 5.9707999999998596e-05}, {'time': 0.019861708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:34.908" endtime="20201110 08:38:34.912"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:34.925" level="INFO">${ACCURACY} = {'diff': [5.9707999999998596e-05, 5.5486000000000424e-05, 5.582000000000156e-05, 5.5694000000001964e-05, 5.5430000000002144e-05, 5.584700000000123e-05, 5.531899999999812e-05, 5.588899999999994e-05, 5....</msg>
<status status="PASS" starttime="20201110 08:38:34.912" endtime="20201110 08:38:34.925"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:34.929" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201110 08:38:34.928" endtime="20201110 08:38:34.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:34.932" level="INFO">VALUE: [5.9707999999998596e-05, 5.5486000000000424e-05, 5.582000000000156e-05, 5.5694000000001964e-05, 5.5430000000002144e-05, 5.584700000000123e-05, 5.531899999999812e-05, 5.588899999999994e-05, 5.562500000000012e-05, 5.558300000000141e-05, 5.5694000000001964e-05, 5.5472000000000854e-05, 5.533400000000063e-05, 5.563899999999969e-05, 5.590299999999951e-05, 5.584700000000123e-05, 5.583400000000113e-05, 5.586200000000027e-05, 5.6138000000000715e-05, 5.5443999999998245e-05, 5.53610000000003e-05, 5.5305999999998023e-05, 5.584700000000123e-05, 5.5485999999996954e-05, 5.537499999999987e-05, 5.5513999999999564e-05, 5.612500000000062e-05, 5.5943999999998745e-05, 5.587500000000037e-05, 5.530600000000149e-05, 5.593099999999865e-05, 5.5193999999997995e-05, 5.523699999999965e-05, 5.518100000000137e-05, 5.538899999999944e-05, 5.5499999999999994e-05, 5.543100000000162e-05, 5.51809999999979e-05, 5.577699999999991e-05, 5.60549999999993e-05, 5.576300000000034e-05, 5.529200000000192e-05, 5.5387999999999965e-05, 5.556899999999837e-05, 5.590299999999951e-05, 5.5513999999999564e-05, 5.5972000000001354e-05, 5.58610000000008e-05, 5.530500000000202e-05, 5.5929999999999175e-05]</msg>
<status status="PASS" starttime="20201110 08:38:34.931" endtime="20201110 08:38:34.933"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.926" endtime="20201110 08:38:34.933"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:34.936" endtime="20201110 08:38:34.938"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:34.941" endtime="20201110 08:38:34.960"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.939" endtime="20201110 08:38:34.961"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.934" endtime="20201110 08:38:34.961"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.567" endtime="20201110 08:38:34.962"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.566" endtime="20201110 08:38:34.962"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:34.970" endtime="20201110 08:38:34.989"></status>
</kw>
<msg timestamp="20201110 08:38:34.989" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:34.969" endtime="20201110 08:38:34.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:34.991" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:34.990" endtime="20201110 08:38:34.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:34.993" endtime="20201110 08:38:34.995"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.966" endtime="20201110 08:38:34.996"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.964" endtime="20201110 08:38:34.996"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:35.003" endtime="20201110 08:38:35.289"></status>
</kw>
<msg timestamp="20201110 08:38:35.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019827681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019888569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:35.001" endtime="20201110 08:38:35.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:35.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019827681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019888569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:35.293" endtime="20201110 08:38:35.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:35.302" endtime="20201110 08:38:35.303"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.998" endtime="20201110 08:38:35.304"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.997" endtime="20201110 08:38:35.304"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:35.308" level="INFO">${RESULT} = [{'time': 0.019888569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.088799999999853e-05, 'source_diff': 6.088799999999853e-05}, {'time': 0.019950556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:35.305" endtime="20201110 08:38:35.309"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:35.322" level="INFO">${ACCURACY} = {'diff': [6.088799999999853e-05, 5.630600000000249e-05, 5.637500000000087e-05, 5.704099999999726e-05, 5.70550000000003e-05, 5.695899999999879e-05, 5.6666000000000355e-05, 5.6193999999998995e-05, 5.662...</msg>
<status status="PASS" starttime="20201110 08:38:35.309" endtime="20201110 08:38:35.322"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:35.327" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201110 08:38:35.325" endtime="20201110 08:38:35.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:35.329" level="INFO">VALUE: [6.088799999999853e-05, 5.630600000000249e-05, 5.637500000000087e-05, 5.704099999999726e-05, 5.70550000000003e-05, 5.695899999999879e-05, 5.6666000000000355e-05, 5.6193999999998995e-05, 5.662500000000112e-05, 5.681899999999962e-05, 5.65549999999998e-05, 5.6943999999999745e-05, 5.6264000000000314e-05, 5.658299999999894e-05, 5.615299999999976e-05, 5.711100000000205e-05, 5.670900000000201e-05, 5.690300000000051e-05, 5.682000000000256e-05, 5.63610000000013e-05, 5.6555999999999274e-05, 5.638900000000044e-05, 5.6402000000000535e-05, 5.6930000000000175e-05, 5.673700000000115e-05, 5.651300000000109e-05, 5.6194000000002464e-05, 5.6500000000000994e-05, 5.6749999999997774e-05, 5.6736000000001674e-05, 5.6736000000001674e-05, 5.7014000000001064e-05, 5.637500000000087e-05, 5.6193999999998995e-05, 5.6707999999999065e-05, 5.615299999999976e-05, 5.669500000000244e-05, 5.659700000000198e-05, 5.633399999999816e-05, 5.6735999999998205e-05, 5.6791999999999954e-05, 5.615299999999976e-05, 5.7042000000000204e-05, 5.670900000000201e-05, 5.6999999999998024e-05, 5.6305999999999023e-05, 5.6750000000001244e-05, 5.613900000000019e-05, 5.688900000000094e-05, 5.662500000000112e-05]</msg>
<status status="PASS" starttime="20201110 08:38:35.328" endtime="20201110 08:38:35.330"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.323" endtime="20201110 08:38:35.330"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:35.333" endtime="20201110 08:38:35.334"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:35.336" endtime="20201110 08:38:35.355"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.334" endtime="20201110 08:38:35.356"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.331" endtime="20201110 08:38:35.356"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.963" endtime="20201110 08:38:35.357"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.962" endtime="20201110 08:38:35.357"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:35.365" endtime="20201110 08:38:35.384"></status>
</kw>
<msg timestamp="20201110 08:38:35.384" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:35.364" endtime="20201110 08:38:35.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:35.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:35.385" endtime="20201110 08:38:35.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:35.388" endtime="20201110 08:38:35.390"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.361" endtime="20201110 08:38:35.391"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.359" endtime="20201110 08:38:35.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:35.398" endtime="20201110 08:38:35.684"></status>
</kw>
<msg timestamp="20201110 08:38:35.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019759028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019820944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:35.396" endtime="20201110 08:38:35.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:35.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019759028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019820944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:35.688" endtime="20201110 08:38:35.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:35.697" endtime="20201110 08:38:35.699"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.394" endtime="20201110 08:38:35.699"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.392" endtime="20201110 08:38:35.700"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:35.704" level="INFO">${RESULT} = [{'time': 0.019820944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.191599999999867e-05, 'source_diff': 6.191599999999867e-05}, {'time': 0.019883944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:35.700" endtime="20201110 08:38:35.704"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:35.717" level="INFO">${ACCURACY} = {'diff': [6.191599999999867e-05, 5.7388000000001965e-05, 5.743100000000015e-05, 5.808300000000044e-05, 5.7792000000000954e-05, 5.7930000000001175e-05, 5.808300000000044e-05, 5.75550000000008e-05, 5.79...</msg>
<status status="PASS" starttime="20201110 08:38:35.705" endtime="20201110 08:38:35.718"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:35.722" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201110 08:38:35.721" endtime="20201110 08:38:35.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:35.725" level="INFO">VALUE: [6.191599999999867e-05, 5.7388000000001965e-05, 5.743100000000015e-05, 5.808300000000044e-05, 5.7792000000000954e-05, 5.7930000000001175e-05, 5.808300000000044e-05, 5.75550000000008e-05, 5.7985999999999455e-05, 5.7444000000000245e-05, 5.73749999999984e-05, 5.788900000000194e-05, 5.7430000000000675e-05, 5.7528000000001134e-05, 5.759699999999951e-05, 5.791700000000108e-05, 5.7556000000000274e-05, 5.794499999999675e-05, 5.7416000000001105e-05, 5.7735999999999205e-05, 5.78610000000028e-05, 5.795899999999979e-05, 5.713900000000119e-05, 5.8070000000000344e-05, 5.784699999999976e-05, 5.809700000000001e-05, 5.7694000000000495e-05, 5.7193999999999995e-05, 5.731900000000012e-05, 5.7235999999998705e-05, 5.763899999999822e-05, 5.73749999999984e-05, 5.7528000000001134e-05, 5.71809999999999e-05, 5.787500000000237e-05, 5.812499999999915e-05, 5.812499999999915e-05, 5.78749999999989e-05, 5.7999999999999025e-05, 5.712499999999815e-05, 5.790300000000151e-05, 5.7999999999999025e-05, 5.7750000000002244e-05, 5.783300000000019e-05, 5.769499999999997e-05, 5.7651999999998316e-05, 5.7958000000000315e-05, 5.737500000000187e-05, 5.81810000000009e-05, 5.729100000000098e-05]</msg>
<status status="PASS" starttime="20201110 08:38:35.723" endtime="20201110 08:38:35.725"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.718" endtime="20201110 08:38:35.726"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:35.728" endtime="20201110 08:38:35.729"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:35.731" endtime="20201110 08:38:35.751"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.730" endtime="20201110 08:38:35.751"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.726" endtime="20201110 08:38:35.752"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.358" endtime="20201110 08:38:35.752"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.357" endtime="20201110 08:38:35.752"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:35.761" endtime="20201110 08:38:35.779"></status>
</kw>
<msg timestamp="20201110 08:38:35.780" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:35.759" endtime="20201110 08:38:35.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:35.782" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:35.781" endtime="20201110 08:38:35.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:35.784" endtime="20201110 08:38:35.786"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.757" endtime="20201110 08:38:35.787"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.755" endtime="20201110 08:38:35.787"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:35.794" endtime="20201110 08:38:36.079"></status>
</kw>
<msg timestamp="20201110 08:38:36.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019853069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019915944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:35.792" endtime="20201110 08:38:36.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019853069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019915944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:36.084" endtime="20201110 08:38:36.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:36.092" endtime="20201110 08:38:36.094"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.789" endtime="20201110 08:38:36.094"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.788" endtime="20201110 08:38:36.095"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:36.099" level="INFO">${RESULT} = [{'time': 0.019915944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.287500000000043e-05, 'source_diff': 6.287500000000043e-05}, {'time': 0.019977972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:36.096" endtime="20201110 08:38:36.099"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:36.114" level="INFO">${ACCURACY} = {'diff': [6.287500000000043e-05, 5.890299999999904e-05, 5.904099999999926e-05, 5.838900000000244e-05, 5.83749999999994e-05, 5.8679999999998456e-05, 5.8235999999999705e-05, 5.8556000000001274e-05, 5.84...</msg>
<status status="PASS" starttime="20201110 08:38:36.100" endtime="20201110 08:38:36.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.118" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201110 08:38:36.117" endtime="20201110 08:38:36.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.121" level="INFO">VALUE: [6.287500000000043e-05, 5.890299999999904e-05, 5.904099999999926e-05, 5.838900000000244e-05, 5.83749999999994e-05, 5.8679999999998456e-05, 5.8235999999999705e-05, 5.8556000000001274e-05, 5.8485999999999955e-05, 5.8943999999998276e-05, 5.844500000000072e-05, 5.816699999999786e-05, 5.886100000000033e-05, 5.8264000000002314e-05, 5.869500000000097e-05, 5.81810000000009e-05, 5.8527999999998664e-05, 5.890299999999904e-05, 5.8222000000000135e-05, 5.8542000000001704e-05, 5.8306000000001024e-05, 5.8806000000001524e-05, 5.8387999999999496e-05, 5.8749999999999775e-05, 5.8320000000000594e-05, 5.8207999999997095e-05, 5.836099999999983e-05, 5.8958000000001315e-05, 5.884700000000076e-05, 5.8250000000002744e-05, 5.8986000000000455e-05, 5.859700000000051e-05, 5.911100000000058e-05, 5.8736000000000205e-05, 5.813900000000219e-05, 5.862499999999965e-05, 5.8306000000001024e-05, 5.843099999999768e-05, 5.888899999999947e-05, 5.8556000000001274e-05, 5.911100000000058e-05, 5.88749999999999e-05, 5.8387999999999496e-05, 5.870899999999707e-05, 5.862499999999965e-05, 5.8249999999999275e-05, 5.8944000000001745e-05, 5.8693999999998026e-05, 5.8306000000001024e-05, 5.8679999999998456e-05]</msg>
<status status="PASS" starttime="20201110 08:38:36.119" endtime="20201110 08:38:36.121"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.114" endtime="20201110 08:38:36.122"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:36.124" endtime="20201110 08:38:36.125"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:36.127" endtime="20201110 08:38:36.147"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.126" endtime="20201110 08:38:36.147"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.123" endtime="20201110 08:38:36.148"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.753" endtime="20201110 08:38:36.148"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.753" endtime="20201110 08:38:36.148"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:36.157" endtime="20201110 08:38:36.175"></status>
</kw>
<msg timestamp="20201110 08:38:36.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:36.155" endtime="20201110 08:38:36.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.178" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:36.177" endtime="20201110 08:38:36.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:36.179" endtime="20201110 08:38:36.182"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.153" endtime="20201110 08:38:36.183"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.151" endtime="20201110 08:38:36.183"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:36.189" endtime="20201110 08:38:36.475"></status>
</kw>
<msg timestamp="20201110 08:38:36.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019734778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019799028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:36.188" endtime="20201110 08:38:36.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019734778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019799028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:36.479" endtime="20201110 08:38:36.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:36.488" endtime="20201110 08:38:36.489"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.185" endtime="20201110 08:38:36.490"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.184" endtime="20201110 08:38:36.490"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:36.495" level="INFO">${RESULT} = [{'time': 0.019799028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.424999999999834e-05, 'source_diff': 6.424999999999834e-05}, {'time': 0.019861042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:36.491" endtime="20201110 08:38:36.495"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:36.508" level="INFO">${ACCURACY} = {'diff': [6.424999999999834e-05, 5.988900000000047e-05, 5.9500000000000525e-05, 5.981899999999915e-05, 6.0070000000002344e-05, 5.961100000000108e-05, 5.984700000000176e-05, 5.9999999999997555e-05, 5.9...</msg>
<status status="PASS" starttime="20201110 08:38:36.496" endtime="20201110 08:38:36.508"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.513" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201110 08:38:36.512" endtime="20201110 08:38:36.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.515" level="INFO">VALUE: [6.424999999999834e-05, 5.988900000000047e-05, 5.9500000000000525e-05, 5.981899999999915e-05, 6.0070000000002344e-05, 5.961100000000108e-05, 5.984700000000176e-05, 5.9999999999997555e-05, 5.9194000000001995e-05, 5.9320000000001594e-05, 5.980500000000305e-05, 5.9693999999999026e-05, 5.984699999999829e-05, 5.9457999999998346e-05, 6.012499999999768e-05, 5.966699999999936e-05, 5.958299999999847e-05, 5.9486000000000955e-05, 5.9764000000000345e-05, 5.9250000000000275e-05, 5.933300000000169e-05, 5.919500000000147e-05, 5.9263999999999845e-05, 6.0084000000001914e-05, 5.9263999999999845e-05, 5.9486000000000955e-05, 5.9500000000000525e-05, 5.984700000000176e-05, 5.9598000000000984e-05, 5.9750000000000775e-05, 5.923700000000018e-05, 5.9429999999999206e-05, 5.9429999999999206e-05, 6.00689999999994e-05, 5.913899999999972e-05, 5.9750000000000775e-05, 5.962500000000065e-05, 6.0013999999997125e-05, 5.962500000000065e-05, 5.9528000000003134e-05, 5.9319999999998124e-05, 5.938899999999997e-05, 5.988900000000047e-05, 5.969500000000197e-05, 5.9499999999997055e-05, 5.9500000000000525e-05, 6.0000000000001025e-05, 5.9764000000000345e-05, 5.9319999999998124e-05, 5.948699999999696e-05]</msg>
<status status="PASS" starttime="20201110 08:38:36.514" endtime="20201110 08:38:36.516"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.509" endtime="20201110 08:38:36.517"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:36.519" endtime="20201110 08:38:36.520"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:36.522" endtime="20201110 08:38:36.542"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.521" endtime="20201110 08:38:36.542"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.517" endtime="20201110 08:38:36.543"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.149" endtime="20201110 08:38:36.543"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.149" endtime="20201110 08:38:36.543"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:36.552" endtime="20201110 08:38:36.571"></status>
</kw>
<msg timestamp="20201110 08:38:36.571" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:36.550" endtime="20201110 08:38:36.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.574" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:36.572" endtime="20201110 08:38:36.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:36.575" endtime="20201110 08:38:36.577"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.548" endtime="20201110 08:38:36.578"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.545" endtime="20201110 08:38:36.578"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:36.585" endtime="20201110 08:38:36.869"></status>
</kw>
<msg timestamp="20201110 08:38:36.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019903042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019967903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:36.583" endtime="20201110 08:38:36.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019903042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019967903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:36.873" endtime="20201110 08:38:36.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:36.882" endtime="20201110 08:38:36.883"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.581" endtime="20201110 08:38:36.884"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.579" endtime="20201110 08:38:36.884"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:36.888" level="INFO">${RESULT} = [{'time': 0.019967903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.486099999999939e-05, 'source_diff': 6.486099999999939e-05}, {'time': 0.020031917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:36.885" endtime="20201110 08:38:36.888"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:36.902" level="INFO">${ACCURACY} = {'diff': [6.486099999999939e-05, 6.06949999999995e-05, 6.1013999999998125e-05, 6.0388000000001496e-05, 6.044500000000272e-05, 6.0207999999999096e-05, 6.0680000000000456e-05, 6.083299999999972e-05, 6.0...</msg>
<status status="PASS" starttime="20201110 08:38:36.889" endtime="20201110 08:38:36.902"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.907" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201110 08:38:36.906" endtime="20201110 08:38:36.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.909" level="INFO">VALUE: [6.486099999999939e-05, 6.06949999999995e-05, 6.1013999999998125e-05, 6.0388000000001496e-05, 6.044500000000272e-05, 6.0207999999999096e-05, 6.0680000000000456e-05, 6.083299999999972e-05, 6.083300000000319e-05, 6.0750000000001775e-05, 6.0721999999999166e-05, 6.0944000000000276e-05, 6.0736000000002205e-05, 6.0944000000000276e-05, 6.0707999999999596e-05, 6.1027999999997695e-05, 6.0264000000000845e-05, 6.0542000000000235e-05, 6.0707999999999596e-05, 6.094499999999975e-05, 6.0528000000000665e-05, 6.0555999999999804e-05, 6.0971999999999416e-05, 6.052700000000119e-05, 6.0486000000001955e-05, 6.0166000000000386e-05, 6.0735999999998735e-05, 6.109699999999954e-05, 6.0250000000001275e-05, 6.0457999999999346e-05, 6.0250000000001275e-05, 6.083299999999972e-05, 6.108299999999997e-05, 6.0194000000002995e-05, 6.0264000000000845e-05, 6.0207999999999096e-05, 6.0764000000001345e-05, 6.087499999999843e-05, 6.0944000000000276e-05, 6.070900000000254e-05, 6.095899999999932e-05, 6.044500000000272e-05, 6.015300000000029e-05, 6.0556000000003274e-05, 6.0819999999999624e-05, 6.052700000000119e-05, 6.081900000000015e-05, 6.0999999999998555e-05, 6.0443999999999776e-05, 6.0263999999997375e-05]</msg>
<status status="PASS" starttime="20201110 08:38:36.908" endtime="20201110 08:38:36.910"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.903" endtime="20201110 08:38:36.910"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:36.913" endtime="20201110 08:38:36.914"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:36.916" endtime="20201110 08:38:36.935"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.914" endtime="20201110 08:38:36.936"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.911" endtime="20201110 08:38:36.936"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.544" endtime="20201110 08:38:36.937"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.543" endtime="20201110 08:38:36.937"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:36.945" endtime="20201110 08:38:36.964"></status>
</kw>
<msg timestamp="20201110 08:38:36.964" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:36.944" endtime="20201110 08:38:36.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.966" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:36.965" endtime="20201110 08:38:36.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:36.967" endtime="20201110 08:38:36.970"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.941" endtime="20201110 08:38:36.971"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.939" endtime="20201110 08:38:36.971"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:36.977" endtime="20201110 08:38:37.262"></status>
</kw>
<msg timestamp="20201110 08:38:37.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019873653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019940042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:36.976" endtime="20201110 08:38:37.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:37.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019873653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019940042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:37.267" endtime="20201110 08:38:37.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:37.275" endtime="20201110 08:38:37.277"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.973" endtime="20201110 08:38:37.277"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.972" endtime="20201110 08:38:37.278"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:37.282" level="INFO">${RESULT} = [{'time': 0.019940042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.638900000000003e-05, 'source_diff': 6.638900000000003e-05}, {'time': 0.020007056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:37.278" endtime="20201110 08:38:37.282"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:37.295" level="INFO">${ACCURACY} = {'diff': [6.638900000000003e-05, 6.176399999999888e-05, 6.161099999999961e-05, 6.186099999999986e-05, 6.1888999999999e-05, 6.131900000000065e-05, 6.205500000000183e-05, 6.195800000000085e-05, 6.131900...</msg>
<status status="PASS" starttime="20201110 08:38:37.283" endtime="20201110 08:38:37.296"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:37.300" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201110 08:38:37.299" endtime="20201110 08:38:37.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:37.303" level="INFO">VALUE: [6.638900000000003e-05, 6.176399999999888e-05, 6.161099999999961e-05, 6.186099999999986e-05, 6.1888999999999e-05, 6.131900000000065e-05, 6.205500000000183e-05, 6.195800000000085e-05, 6.131900000000065e-05, 6.14300000000012e-05, 6.140299999999807e-05, 6.1888999999999e-05, 6.180499999999811e-05, 6.193100000000118e-05, 6.138799999999903e-05, 6.158399999999994e-05, 6.137499999999893e-05, 6.18750000000029e-05, 6.16950000000005e-05, 6.20699999999974e-05, 6.176399999999888e-05, 6.193100000000118e-05, 6.194500000000075e-05, 6.20279999999987e-05, 6.204099999999879e-05, 6.144400000000078e-05, 6.126400000000184e-05, 6.180499999999811e-05, 6.129200000000098e-05, 6.130500000000108e-05, 6.150000000000252e-05, 6.12499999999988e-05, 6.20279999999987e-05, 6.173599999999974e-05, 6.211100000000011e-05, 6.163899999999875e-05, 6.119400000000053e-05, 6.177799999999845e-05, 6.216700000000186e-05, 6.157000000000037e-05, 6.140299999999807e-05, 6.120899999999957e-05, 6.15140000000021e-05, 6.16950000000005e-05, 6.18750000000029e-05, 6.187499999999943e-05, 6.118000000000096e-05, 6.177799999999845e-05, 6.212499999999968e-05, 6.195800000000085e-05]</msg>
<status status="PASS" starttime="20201110 08:38:37.301" endtime="20201110 08:38:37.303"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.296" endtime="20201110 08:38:37.304"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:37.306" endtime="20201110 08:38:37.307"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:37.309" endtime="20201110 08:38:37.329"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.308" endtime="20201110 08:38:37.329"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.304" endtime="20201110 08:38:37.330"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.938" endtime="20201110 08:38:37.330"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.937" endtime="20201110 08:38:37.330"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:37.339" endtime="20201110 08:38:37.358"></status>
</kw>
<msg timestamp="20201110 08:38:37.358" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:37.337" endtime="20201110 08:38:37.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:37.360" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:37.359" endtime="20201110 08:38:37.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:37.362" endtime="20201110 08:38:37.364"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.335" endtime="20201110 08:38:37.365"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.333" endtime="20201110 08:38:37.365"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:37.371" endtime="20201110 08:38:37.657"></status>
</kw>
<msg timestamp="20201110 08:38:37.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019674, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019740764, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:38:37.370" endtime="20201110 08:38:37.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:37.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019674, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019740764, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:38:37.661" endtime="20201110 08:38:37.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:37.669" endtime="20201110 08:38:37.671"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.367" endtime="20201110 08:38:37.672"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.366" endtime="20201110 08:38:37.672"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:37.676" level="INFO">${RESULT} = [{'time': 0.019740764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.67640000000004e-05, 'source_diff': 6.67640000000004e-05}, {'time': 0.019807792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:38:37.673" endtime="20201110 08:38:37.676"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:37.691" level="INFO">${ACCURACY} = {'diff': [6.67640000000004e-05, 6.23340000000007e-05, 6.262500000000018e-05, 6.273600000000074e-05, 6.290299999999957e-05, 6.236100000000036e-05, 6.240300000000254e-05, 6.291599999999967e-05, 6.243000...</msg>
<status status="PASS" starttime="20201110 08:38:37.677" endtime="20201110 08:38:37.691"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:37.695" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201110 08:38:37.694" endtime="20201110 08:38:37.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:37.698" level="INFO">VALUE: [6.67640000000004e-05, 6.23340000000007e-05, 6.262500000000018e-05, 6.273600000000074e-05, 6.290299999999957e-05, 6.236100000000036e-05, 6.240300000000254e-05, 6.291599999999967e-05, 6.24300000000022e-05, 6.230599999999809e-05, 6.277699999999997e-05, 6.280499999999911e-05, 6.262500000000018e-05, 6.236100000000036e-05, 6.286100000000086e-05, 6.226400000000284e-05, 6.262500000000018e-05, 6.299999999999709e-05, 6.261099999999714e-05, 6.269400000000203e-05, 6.287500000000043e-05, 6.293099999999871e-05, 6.257000000000137e-05, 6.293099999999871e-05, 6.297300000000089e-05, 6.244500000000125e-05, 6.240300000000254e-05, 6.213899999999925e-05, 6.245800000000135e-05, 6.237499999999993e-05, 6.293099999999871e-05, 6.244500000000125e-05, 6.238800000000003e-05, 6.292999999999924e-05, 6.281900000000215e-05, 6.30279999999997e-05, 6.280599999999859e-05, 6.234700000000079e-05, 6.258300000000147e-05, 6.287500000000043e-05, 6.220799999999763e-05, 6.218100000000143e-05, 6.241699999999864e-05, 6.290299999999957e-05, 6.269499999999803e-05, 6.287500000000043e-05, 6.215300000000229e-05, 6.248600000000049e-05, 6.287499999999696e-05, 6.27500000000003e-05]</msg>
<status status="PASS" starttime="20201110 08:38:37.696" endtime="20201110 08:38:37.699"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.692" endtime="20201110 08:38:37.699"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:37.702" endtime="20201110 08:38:37.703"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:37.706" endtime="20201110 08:38:37.725"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.704" endtime="20201110 08:38:37.726"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.700" endtime="20201110 08:38:37.726"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.331" endtime="20201110 08:38:37.726"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.331" endtime="20201110 08:38:37.726"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:37.735" endtime="20201110 08:38:37.756"></status>
</kw>
<msg timestamp="20201110 08:38:37.756" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:37.734" endtime="20201110 08:38:37.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:37.760" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:37.758" endtime="20201110 08:38:37.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:37.761" endtime="20201110 08:38:37.765"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.731" endtime="20201110 08:38:37.765"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.729" endtime="20201110 08:38:37.766"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:37.772" endtime="20201110 08:38:38.059"></status>
</kw>
<msg timestamp="20201110 08:38:38.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020988319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021056042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:37.771" endtime="20201110 08:38:38.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:38.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020988319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021056042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:38.063" endtime="20201110 08:38:38.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:38.072" endtime="20201110 08:38:38.073"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.768" endtime="20201110 08:38:38.074"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.766" endtime="20201110 08:38:38.074"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:38.078" level="INFO">${RESULT} = [{'time': 0.021056042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.772300000000217e-05, 'source_diff': 6.772300000000217e-05}, {'time': 0.021126069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:38.075" endtime="20201110 08:38:38.078"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:38.092" level="INFO">${ACCURACY} = {'diff': [6.772300000000217e-05, 6.404100000000079e-05, 6.370799999999913e-05, 6.327799999999995e-05, 6.406899999999993e-05, 6.326400000000038e-05, 6.398599999999852e-05, 6.39439999999998e-05, 6.32360...</msg>
<status status="PASS" starttime="20201110 08:38:38.079" endtime="20201110 08:38:38.092"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:38.096" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201110 08:38:38.095" endtime="20201110 08:38:38.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:38.099" level="INFO">VALUE: [6.772300000000217e-05, 6.404100000000079e-05, 6.370799999999913e-05, 6.327799999999995e-05, 6.406899999999993e-05, 6.326400000000038e-05, 6.398599999999852e-05, 6.39439999999998e-05, 6.323600000000124e-05, 6.381899999999968e-05, 6.319399999999906e-05, 6.336100000000136e-05, 6.327799999999995e-05, 6.358399999999848e-05, 6.404200000000027e-05, 6.412500000000168e-05, 6.337500000000093e-05, 6.387499999999796e-05, 6.381999999999916e-05, 6.341600000000017e-05, 6.324999999999734e-05, 6.405599999999984e-05, 6.327799999999995e-05, 6.388899999999753e-05, 6.312500000000068e-05, 6.313900000000025e-05, 6.363900000000075e-05, 6.37080000000026e-05, 6.369399999999956e-05, 6.316700000000286e-05, 6.336100000000136e-05, 6.334700000000179e-05, 6.369499999999903e-05, 6.37639999999974e-05, 6.341600000000017e-05, 6.35699999999989e-05, 6.32500000000008e-05, 6.40280000000007e-05, 6.324999999999734e-05, 6.359699999999857e-05, 6.388899999999753e-05, 6.35690000000029e-05, 6.412499999999821e-05, 6.337500000000093e-05, 6.336100000000136e-05, 6.384699999999882e-05, 6.367999999999999e-05, 6.39439999999998e-05, 6.370799999999913e-05, 6.377800000000045e-05]</msg>
<status status="PASS" starttime="20201110 08:38:38.097" endtime="20201110 08:38:38.100"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.093" endtime="20201110 08:38:38.100"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:38.102" endtime="20201110 08:38:38.104"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:38.106" endtime="20201110 08:38:38.125"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.104" endtime="20201110 08:38:38.126"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.101" endtime="20201110 08:38:38.126"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.727" endtime="20201110 08:38:38.126"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.727" endtime="20201110 08:38:38.127"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:38.135" endtime="20201110 08:38:38.154"></status>
</kw>
<msg timestamp="20201110 08:38:38.155" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:38.134" endtime="20201110 08:38:38.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:38.157" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:38.156" endtime="20201110 08:38:38.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:38.158" endtime="20201110 08:38:38.161"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.131" endtime="20201110 08:38:38.161"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.129" endtime="20201110 08:38:38.162"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:38.168" endtime="20201110 08:38:38.453"></status>
</kw>
<msg timestamp="20201110 08:38:38.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019759917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019828722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:38.167" endtime="20201110 08:38:38.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:38.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019759917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019828722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:38.457" endtime="20201110 08:38:38.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:38.466" endtime="20201110 08:38:38.467"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.164" endtime="20201110 08:38:38.468"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.162" endtime="20201110 08:38:38.468"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:38.473" level="INFO">${RESULT} = [{'time': 0.019828722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.880500000000164e-05, 'source_diff': 6.880500000000164e-05}, {'time': 0.019898722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:38.469" endtime="20201110 08:38:38.473"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:38.486" level="INFO">${ACCURACY} = {'diff': [6.880500000000164e-05, 6.413900000000125e-05, 6.433299999999975e-05, 6.427800000000095e-05, 6.486100000000286e-05, 6.462499999999871e-05, 6.413899999999778e-05, 6.511099999999964e-05, 6.4250...</msg>
<status status="PASS" starttime="20201110 08:38:38.474" endtime="20201110 08:38:38.486"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:38.491" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201110 08:38:38.490" endtime="20201110 08:38:38.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:38.493" level="INFO">VALUE: [6.880500000000164e-05, 6.413900000000125e-05, 6.433299999999975e-05, 6.427800000000095e-05, 6.486100000000286e-05, 6.462499999999871e-05, 6.413899999999778e-05, 6.511099999999964e-05, 6.42500000000018e-05, 6.4889000000002e-05, 6.423599999999877e-05, 6.418099999999996e-05, 6.415300000000082e-05, 6.480500000000111e-05, 6.474999999999884e-05, 6.436200000000183e-05, 6.447200000000292e-05, 6.438799999999856e-05, 6.451400000000163e-05, 6.490300000000157e-05, 6.419400000000006e-05, 6.483300000000025e-05, 6.492999999999777e-05, 6.506900000000093e-05, 6.492999999999777e-05, 6.445799999999988e-05, 6.426400000000138e-05, 6.424999999999834e-05, 6.499999999999909e-05, 6.416700000000039e-05, 6.445900000000282e-05, 6.423600000000224e-05, 6.501399999999866e-05, 6.455600000000034e-05, 6.47089999999996e-05, 6.494500000000028e-05, 6.462499999999871e-05, 6.452700000000172e-05, 6.455500000000086e-05, 6.449999999999859e-05, 6.430500000000061e-05, 6.495800000000038e-05, 6.481900000000068e-05, 6.462499999999871e-05, 6.459699999999957e-05, 6.438899999999803e-05, 6.433299999999975e-05, 6.482000000000016e-05, 6.472200000000317e-05, 6.413900000000125e-05]</msg>
<status status="PASS" starttime="20201110 08:38:38.492" endtime="20201110 08:38:38.494"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.487" endtime="20201110 08:38:38.495"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:38.497" endtime="20201110 08:38:38.498"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:38.500" endtime="20201110 08:38:38.519"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.499" endtime="20201110 08:38:38.520"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.495" endtime="20201110 08:38:38.520"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.127" endtime="20201110 08:38:38.521"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.127" endtime="20201110 08:38:38.521"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:38.529" endtime="20201110 08:38:38.548"></status>
</kw>
<msg timestamp="20201110 08:38:38.549" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:38.528" endtime="20201110 08:38:38.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:38.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:38.550" endtime="20201110 08:38:38.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:38.552" endtime="20201110 08:38:38.555"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.525" endtime="20201110 08:38:38.555"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.523" endtime="20201110 08:38:38.556"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:38.562" endtime="20201110 08:38:38.848"></status>
</kw>
<msg timestamp="20201110 08:38:38.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0197985, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019868944, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:38:38.561" endtime="20201110 08:38:38.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:38.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0197985, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019868944, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:38:38.852" endtime="20201110 08:38:38.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:38.861" endtime="20201110 08:38:38.862"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.558" endtime="20201110 08:38:38.863"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.556" endtime="20201110 08:38:38.863"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:38.867" level="INFO">${RESULT} = [{'time': 0.019868944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.044399999999937e-05, 'source_diff': 7.044399999999937e-05}, {'time': 0.019938944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:38.864" endtime="20201110 08:38:38.868"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:38.881" level="INFO">${ACCURACY} = {'diff': [7.044399999999937e-05, 6.526299999999943e-05, 6.562499999999971e-05, 6.551400000000263e-05, 6.538899999999903e-05, 6.588899999999953e-05, 6.556900000000143e-05, 6.595800000000138e-05, 6.5777...</msg>
<status status="PASS" starttime="20201110 08:38:38.868" endtime="20201110 08:38:38.881"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:38.886" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201110 08:38:38.884" endtime="20201110 08:38:38.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:38.888" level="INFO">VALUE: [7.044399999999937e-05, 6.526299999999943e-05, 6.562499999999971e-05, 6.551400000000263e-05, 6.538899999999903e-05, 6.588899999999953e-05, 6.556900000000143e-05, 6.595800000000138e-05, 6.577799999999898e-05, 6.57500000000033e-05, 6.538899999999903e-05, 6.573600000000027e-05, 6.581999999999769e-05, 6.54029999999986e-05, 6.543099999999774e-05, 6.601399999999966e-05, 6.608400000000098e-05, 6.55280000000022e-05, 6.538899999999903e-05, 6.540199999999913e-05, 6.597300000000042e-05, 6.516699999999792e-05, 6.548600000000002e-05, 6.538899999999903e-05, 6.616699999999892e-05, 6.551399999999916e-05, 6.549999999999959e-05, 6.519399999999759e-05, 6.576400000000288e-05, 6.55280000000022e-05, 6.556999999999744e-05, 6.542999999999827e-05, 6.545799999999741e-05, 6.584700000000082e-05, 6.579199999999855e-05, 6.548600000000002e-05, 6.530499999999814e-05, 6.594499999999781e-05, 6.536099999999989e-05, 6.543100000000121e-05, 6.52639999999989e-05, 6.555599999999787e-05, 6.530600000000109e-05, 6.526400000000238e-05, 6.567999999999852e-05, 6.587499999999996e-05, 6.583299999999778e-05, 6.600000000000009e-05, 6.583300000000125e-05, 6.615299999999935e-05]</msg>
<status status="PASS" starttime="20201110 08:38:38.887" endtime="20201110 08:38:38.889"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.882" endtime="20201110 08:38:38.889"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:38.892" endtime="20201110 08:38:38.893"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:38.895" endtime="20201110 08:38:38.914"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.894" endtime="20201110 08:38:38.915"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.890" endtime="20201110 08:38:38.915"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.522" endtime="20201110 08:38:38.916"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.521" endtime="20201110 08:38:38.916"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:38.924" endtime="20201110 08:38:38.944"></status>
</kw>
<msg timestamp="20201110 08:38:38.944" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:38.923" endtime="20201110 08:38:38.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:38.946" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:38.945" endtime="20201110 08:38:38.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:38.947" endtime="20201110 08:38:38.950"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.920" endtime="20201110 08:38:38.951"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.918" endtime="20201110 08:38:38.951"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:38.957" endtime="20201110 08:38:39.242"></status>
</kw>
<msg timestamp="20201110 08:38:39.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019754694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019825778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:38.956" endtime="20201110 08:38:39.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:39.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019754694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019825778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:39.246" endtime="20201110 08:38:39.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:39.255" endtime="20201110 08:38:39.256"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.953" endtime="20201110 08:38:39.257"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.952" endtime="20201110 08:38:39.257"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:39.262" level="INFO">${RESULT} = [{'time': 0.019825778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.108399999999904e-05, 'source_diff': 7.108399999999904e-05}, {'time': 0.019897806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:39.258" endtime="20201110 08:38:39.262"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:39.276" level="INFO">${ACCURACY} = {'diff': [7.108399999999904e-05, 6.683400000000173e-05, 6.63480000000008e-05, 6.662500000000071e-05, 6.650000000000059e-05, 6.700000000000109e-05, 6.69160000000002e-05, 6.655499999999939e-05, 6.692999...</msg>
<status status="PASS" starttime="20201110 08:38:39.263" endtime="20201110 08:38:39.276"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:39.281" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201110 08:38:39.280" endtime="20201110 08:38:39.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:39.283" level="INFO">VALUE: [7.108399999999904e-05, 6.683400000000173e-05, 6.63480000000008e-05, 6.662500000000071e-05, 6.650000000000059e-05, 6.700000000000109e-05, 6.69160000000002e-05, 6.655499999999939e-05, 6.692999999999977e-05, 6.708299999999903e-05, 6.680499999999964e-05, 6.642999999999927e-05, 6.627799999999948e-05, 6.662500000000071e-05, 6.64029999999996e-05, 6.694400000000281e-05, 6.620800000000163e-05, 6.687500000000096e-05, 6.682000000000216e-05, 6.701400000000066e-05, 6.652799999999973e-05, 6.636100000000089e-05, 6.643099999999874e-05, 6.636200000000037e-05, 6.620800000000163e-05, 6.654099999999982e-05, 6.698599999999805e-05, 6.680499999999964e-05, 6.694399999999934e-05, 6.694399999999934e-05, 6.67640000000004e-05, 6.675000000000084e-05, 6.625000000000034e-05, 6.647200000000145e-05, 6.677799999999998e-05, 6.67640000000004e-05, 6.694499999999881e-05, 6.663900000000028e-05, 6.675000000000084e-05, 6.631899999999871e-05, 6.655599999999887e-05, 6.688900000000053e-05, 6.612500000000021e-05, 6.690199999999716e-05, 6.665200000000038e-05, 6.652799999999973e-05, 6.631899999999871e-05, 6.694399999999934e-05, 6.69030000000001e-05, 6.70969999999986e-05]</msg>
<status status="PASS" starttime="20201110 08:38:39.282" endtime="20201110 08:38:39.284"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.277" endtime="20201110 08:38:39.284"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:39.287" endtime="20201110 08:38:39.288"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:39.290" endtime="20201110 08:38:39.309"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.289" endtime="20201110 08:38:39.310"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.285" endtime="20201110 08:38:39.310"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.917" endtime="20201110 08:38:39.311"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.916" endtime="20201110 08:38:39.311"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:39.319" endtime="20201110 08:38:39.339"></status>
</kw>
<msg timestamp="20201110 08:38:39.339" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:39.318" endtime="20201110 08:38:39.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:39.342" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:39.340" endtime="20201110 08:38:39.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:39.343" endtime="20201110 08:38:39.345"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.315" endtime="20201110 08:38:39.346"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.313" endtime="20201110 08:38:39.346"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:39.353" endtime="20201110 08:38:39.639"></status>
</kw>
<msg timestamp="20201110 08:38:39.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019667861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019740056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:39.351" endtime="20201110 08:38:39.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:39.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019667861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019740056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:39.643" endtime="20201110 08:38:39.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:39.652" endtime="20201110 08:38:39.653"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.349" endtime="20201110 08:38:39.654"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.347" endtime="20201110 08:38:39.654"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:39.658" level="INFO">${RESULT} = [{'time': 0.019740056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.219500000000059e-05, 'source_diff': 7.219500000000059e-05}, {'time': 0.019811014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:39.655" endtime="20201110 08:38:39.659"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:39.672" level="INFO">${ACCURACY} = {'diff': [7.219500000000059e-05, 6.719499999999906e-05, 6.805500000000089e-05, 6.809799999999908e-05, 6.780599999999665e-05, 6.795899999999938e-05, 6.737499999999799e-05, 6.79030000000011e-05, 6.75140...</msg>
<status status="PASS" starttime="20201110 08:38:39.659" endtime="20201110 08:38:39.672"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:39.677" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201110 08:38:39.675" endtime="20201110 08:38:39.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:39.679" level="INFO">VALUE: [7.219500000000059e-05, 6.719499999999906e-05, 6.805500000000089e-05, 6.809799999999908e-05, 6.780599999999665e-05, 6.795899999999938e-05, 6.737499999999799e-05, 6.79030000000011e-05, 6.751400000000116e-05, 6.730500000000014e-05, 6.765200000000138e-05, 6.812500000000221e-05, 6.736100000000189e-05, 6.812500000000221e-05, 6.781900000000021e-05, 6.712499999999774e-05, 6.783299999999978e-05, 6.72640000000009e-05, 6.781999999999969e-05, 6.731999999999919e-05, 6.787499999999849e-05, 6.787500000000196e-05, 6.72229999999982e-05, 6.719499999999906e-05, 6.781900000000021e-05, 6.74160000000007e-05, 6.776399999999794e-05, 6.745799999999941e-05, 6.768000000000052e-05, 6.801400000000166e-05, 6.713900000000078e-05, 6.801400000000166e-05, 6.743099999999974e-05, 6.725000000000134e-05, 6.800000000000209e-05, 6.774999999999837e-05, 6.731999999999919e-05, 6.743099999999974e-05, 6.801400000000166e-05, 6.73480000000018e-05, 6.816600000000145e-05, 6.737499999999799e-05, 6.731899999999971e-05, 6.723600000000177e-05, 6.768099999999999e-05, 6.763900000000128e-05, 6.743000000000027e-05, 6.797199999999948e-05, 6.806899999999699e-05, 6.727800000000048e-05]</msg>
<status status="PASS" starttime="20201110 08:38:39.678" endtime="20201110 08:38:39.680"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.673" endtime="20201110 08:38:39.680"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:39.683" endtime="20201110 08:38:39.684"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:39.686" endtime="20201110 08:38:39.705"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.684" endtime="20201110 08:38:39.706"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.681" endtime="20201110 08:38:39.706"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.312" endtime="20201110 08:38:39.706"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.311" endtime="20201110 08:38:39.707"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:39.715" endtime="20201110 08:38:39.734"></status>
</kw>
<msg timestamp="20201110 08:38:39.734" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:39.714" endtime="20201110 08:38:39.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:39.737" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:39.735" endtime="20201110 08:38:39.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:39.738" endtime="20201110 08:38:39.740"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.711" endtime="20201110 08:38:39.741"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.709" endtime="20201110 08:38:39.742"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:39.748" endtime="20201110 08:38:40.034"></status>
</kw>
<msg timestamp="20201110 08:38:40.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019778569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019851847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:39.746" endtime="20201110 08:38:40.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:40.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019778569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019851847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:40.039" endtime="20201110 08:38:40.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:40.047" endtime="20201110 08:38:40.049"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.744" endtime="20201110 08:38:40.049"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.742" endtime="20201110 08:38:40.050"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:40.054" level="INFO">${RESULT} = [{'time': 0.019851847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.327799999999954e-05, 'source_diff': 7.327799999999954e-05}, {'time': 0.019924875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:40.050" endtime="20201110 08:38:40.054"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:40.067" level="INFO">${ACCURACY} = {'diff': [7.327799999999954e-05, 6.852800000000173e-05, 6.82229999999992e-05, 6.906899999999799e-05, 6.90420000000018e-05, 6.827799999999801e-05, 6.824999999999887e-05, 6.851400000000216e-05, 6.865300...</msg>
<status status="PASS" starttime="20201110 08:38:40.055" endtime="20201110 08:38:40.068"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:40.072" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201110 08:38:40.071" endtime="20201110 08:38:40.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:40.074" level="INFO">VALUE: [7.327799999999954e-05, 6.852800000000173e-05, 6.82229999999992e-05, 6.906899999999799e-05, 6.90420000000018e-05, 6.827799999999801e-05, 6.824999999999887e-05, 6.851400000000216e-05, 6.865300000000185e-05, 6.830600000000062e-05, 6.836099999999942e-05, 6.893100000000124e-05, 6.823700000000224e-05, 6.879199999999808e-05, 6.850000000000259e-05, 6.899999999999962e-05, 6.841700000000117e-05, 6.909699999999713e-05, 6.895800000000091e-05, 6.862499999999924e-05, 6.819400000000059e-05, 6.844400000000084e-05, 6.852800000000173e-05, 6.80969999999996e-05, 6.879199999999808e-05, 6.82640000000019e-05, 6.818100000000049e-05, 6.841700000000117e-05, 6.902799999999876e-05, 6.880600000000112e-05, 6.876399999999894e-05, 6.869400000000109e-05, 6.906900000000146e-05, 6.881900000000121e-05, 6.876399999999894e-05, 6.886099999999992e-05, 6.894400000000134e-05, 6.880499999999817e-05, 6.89169999999982e-05, 6.890299999999863e-05, 6.877800000000198e-05, 6.816700000000092e-05, 6.870800000000066e-05, 6.838900000000203e-05, 6.844499999999684e-05, 6.834799999999933e-05, 6.818100000000049e-05, 6.882000000000069e-05, 6.85970000000001e-05, 6.844399999999737e-05]</msg>
<status status="PASS" starttime="20201110 08:38:40.073" endtime="20201110 08:38:40.075"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.068" endtime="20201110 08:38:40.076"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:40.078" endtime="20201110 08:38:40.079"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:40.081" endtime="20201110 08:38:40.101"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.080" endtime="20201110 08:38:40.101"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.076" endtime="20201110 08:38:40.102"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.708" endtime="20201110 08:38:40.102"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.707" endtime="20201110 08:38:40.102"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:40.111" endtime="20201110 08:38:40.129"></status>
</kw>
<msg timestamp="20201110 08:38:40.130" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:40.109" endtime="20201110 08:38:40.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:40.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:40.131" endtime="20201110 08:38:40.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:40.133" endtime="20201110 08:38:40.136"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.107" endtime="20201110 08:38:40.136"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.105" endtime="20201110 08:38:40.137"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:40.143" endtime="20201110 08:38:40.429"></status>
</kw>
<msg timestamp="20201110 08:38:40.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019891806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019965458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:40.142" endtime="20201110 08:38:40.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:40.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019891806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019965458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:40.433" endtime="20201110 08:38:40.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:40.442" endtime="20201110 08:38:40.443"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.139" endtime="20201110 08:38:40.444"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.137" endtime="20201110 08:38:40.444"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:40.448" level="INFO">${RESULT} = [{'time': 0.019965458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.365199999999697e-05, 'source_diff': 7.365199999999697e-05}, {'time': 0.020038458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:40.445" endtime="20201110 08:38:40.449"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:40.462" level="INFO">${ACCURACY} = {'diff': [7.365199999999697e-05, 6.966599999999948e-05, 6.933299999999781e-05, 6.962499999999677e-05, 6.913899999999931e-05, 6.951399999999969e-05, 6.92640000000029e-05, 6.932000000000119e-05, 7.01250...</msg>
<status status="PASS" starttime="20201110 08:38:40.449" endtime="20201110 08:38:40.462"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:40.466" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201110 08:38:40.465" endtime="20201110 08:38:40.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:40.469" level="INFO">VALUE: [7.365199999999697e-05, 6.966599999999948e-05, 6.933299999999781e-05, 6.962499999999677e-05, 6.913899999999931e-05, 6.951399999999969e-05, 6.92640000000029e-05, 6.932000000000119e-05, 7.012500000000074e-05, 6.957000000000144e-05, 7.007000000000194e-05, 6.970900000000113e-05, 6.933400000000076e-05, 7.012500000000074e-05, 6.990200000000016e-05, 6.954199999999883e-05, 6.975000000000037e-05, 6.980600000000212e-05, 6.930499999999867e-05, 6.962500000000024e-05, 6.943000000000227e-05, 6.975000000000037e-05, 6.998600000000105e-05, 6.912499999999974e-05, 6.909699999999713e-05, 6.983300000000178e-05, 6.919500000000106e-05, 6.943099999999827e-05, 7.00420000000028e-05, 6.945799999999794e-05, 6.915299999999888e-05, 6.969499999999809e-05, 6.988900000000006e-05, 6.970799999999819e-05, 6.965199999999991e-05, 6.987500000000049e-05, 6.962500000000024e-05, 6.975000000000037e-05, 6.938899999999956e-05, 6.952799999999926e-05, 6.930499999999867e-05, 6.986100000000092e-05, 7.006899999999899e-05, 6.940299999999913e-05, 6.962500000000024e-05, 7.002799999999976e-05, 7.00559999999989e-05, 6.9584000000001e-05, 6.962500000000024e-05, 6.94030000000026e-05]</msg>
<status status="PASS" starttime="20201110 08:38:40.467" endtime="20201110 08:38:40.470"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.463" endtime="20201110 08:38:40.470"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:40.472" endtime="20201110 08:38:40.474"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:40.476" endtime="20201110 08:38:40.495"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.474" endtime="20201110 08:38:40.496"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.471" endtime="20201110 08:38:40.496"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.103" endtime="20201110 08:38:40.496"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.103" endtime="20201110 08:38:40.497"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:40.505" endtime="20201110 08:38:40.524"></status>
</kw>
<msg timestamp="20201110 08:38:40.525" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:40.504" endtime="20201110 08:38:40.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:40.527" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:40.526" endtime="20201110 08:38:40.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:40.528" endtime="20201110 08:38:40.531"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.501" endtime="20201110 08:38:40.532"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.499" endtime="20201110 08:38:40.532"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:40.538" endtime="20201110 08:38:40.823"></status>
</kw>
<msg timestamp="20201110 08:38:40.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019815069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019890639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:40.537" endtime="20201110 08:38:40.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:40.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019815069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019890639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:40.827" endtime="20201110 08:38:40.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:40.835" endtime="20201110 08:38:40.837"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.534" endtime="20201110 08:38:40.837"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.533" endtime="20201110 08:38:40.838"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:40.842" level="INFO">${RESULT} = [{'time': 0.019890639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.55700000000005e-05, 'source_diff': 7.55700000000005e-05}, {'time': 0.019965639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:38:40.839" endtime="20201110 08:38:40.843"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:40.857" level="INFO">${ACCURACY} = {'diff': [7.55700000000005e-05, 7.012500000000074e-05, 7.081999999999922e-05, 7.030600000000262e-05, 7.082000000000269e-05, 7.04169999999997e-05, 7.069499999999909e-05, 7.109800000000208e-05, 7.044499...</msg>
<status status="PASS" starttime="20201110 08:38:40.843" endtime="20201110 08:38:40.858"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:40.862" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201110 08:38:40.861" endtime="20201110 08:38:40.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:40.864" level="INFO">VALUE: [7.55700000000005e-05, 7.012500000000074e-05, 7.081999999999922e-05, 7.030600000000262e-05, 7.082000000000269e-05, 7.04169999999997e-05, 7.069499999999909e-05, 7.109800000000208e-05, 7.044499999999884e-05, 7.033299999999881e-05, 7.02910000000001e-05, 7.051400000000069e-05, 7.037500000000099e-05, 7.094399999999987e-05, 7.063900000000081e-05, 7.055499999999992e-05, 7.036100000000142e-05, 7.088900000000106e-05, 7.011100000000117e-05, 7.023599999999783e-05, 7.037499999999752e-05, 7.101399999999772e-05, 7.108399999999904e-05, 7.020900000000163e-05, 7.062500000000124e-05, 7.087500000000149e-05, 7.051399999999722e-05, 7.069399999999962e-05, 7.081900000000321e-05, 7.072199999999876e-05, 7.088900000000106e-05, 7.020799999999869e-05, 7.048599999999808e-05, 7.097200000000248e-05, 7.07360000000018e-05, 7.088900000000106e-05, 7.05559999999994e-05, 7.094399999999987e-05, 7.081900000000321e-05, 7.056999999999897e-05, 7.030599999999915e-05, 7.118000000000055e-05, 7.063900000000081e-05, 7.062500000000124e-05, 7.1069e-05, 7.054199999999983e-05, 7.07910000000006e-05, 7.101400000000119e-05, 7.016699999999945e-05, 7.037500000000099e-05]</msg>
<status status="PASS" starttime="20201110 08:38:40.863" endtime="20201110 08:38:40.865"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.858" endtime="20201110 08:38:40.866"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:40.868" endtime="20201110 08:38:40.869"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:40.871" endtime="20201110 08:38:40.891"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.870" endtime="20201110 08:38:40.891"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.866" endtime="20201110 08:38:40.892"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.497" endtime="20201110 08:38:40.892"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.497" endtime="20201110 08:38:40.892"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:40.901" endtime="20201110 08:38:40.920"></status>
</kw>
<msg timestamp="20201110 08:38:40.920" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:40.899" endtime="20201110 08:38:40.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:40.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:40.921" endtime="20201110 08:38:40.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:40.924" endtime="20201110 08:38:40.926"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.897" endtime="20201110 08:38:40.927"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.895" endtime="20201110 08:38:40.927"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:40.934" endtime="20201110 08:38:41.220"></status>
</kw>
<msg timestamp="20201110 08:38:41.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019878417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019954083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:40.932" endtime="20201110 08:38:41.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:41.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019878417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019954083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:41.224" endtime="20201110 08:38:41.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:41.233" endtime="20201110 08:38:41.234"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.930" endtime="20201110 08:38:41.235"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.928" endtime="20201110 08:38:41.235"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:41.239" level="INFO">${RESULT} = [{'time': 0.019954083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.566600000000201e-05, 'source_diff': 7.566600000000201e-05}, {'time': 0.020031056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:41.236" endtime="20201110 08:38:41.240"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:41.253" level="INFO">${ACCURACY} = {'diff': [7.566600000000201e-05, 7.12369999999983e-05, 7.176399999999847e-05, 7.147199999999951e-05, 7.122199999999926e-05, 7.197200000000001e-05, 7.207000000000047e-05, 7.194400000000087e-05, 7.15560...</msg>
<status status="PASS" starttime="20201110 08:38:41.240" endtime="20201110 08:38:41.253"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:41.257" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201110 08:38:41.256" endtime="20201110 08:38:41.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:41.260" level="INFO">VALUE: [7.566600000000201e-05, 7.12369999999983e-05, 7.176399999999847e-05, 7.147199999999951e-05, 7.122199999999926e-05, 7.197200000000001e-05, 7.207000000000047e-05, 7.194400000000087e-05, 7.15560000000004e-05, 7.159699999999963e-05, 7.149999999999865e-05, 7.138900000000156e-05, 7.148600000000255e-05, 7.145899999999941e-05, 7.151399999999822e-05, 7.184799999999936e-05, 7.144499999999984e-05, 7.19300000000013e-05, 7.131999999999972e-05, 7.120799999999969e-05, 7.120799999999969e-05, 7.138899999999809e-05, 7.194400000000087e-05, 7.133299999999981e-05, 7.120799999999969e-05, 7.202800000000176e-05, 7.118100000000002e-05, 7.122199999999926e-05, 7.115300000000088e-05, 7.11109999999987e-05, 7.187500000000249e-05, 7.159699999999963e-05, 7.126400000000144e-05, 7.14170000000007e-05, 7.138799999999862e-05, 7.125000000000187e-05, 7.201400000000219e-05, 7.115199999999794e-05, 7.140299999999766e-05, 7.137499999999852e-05, 7.200000000000262e-05, 7.154100000000135e-05, 7.163900000000181e-05, 7.144400000000037e-05, 7.142999999999733e-05, 7.183300000000031e-05, 7.156999999999997e-05, 7.148599999999908e-05, 7.213899999999884e-05, 7.169500000000009e-05]</msg>
<status status="PASS" starttime="20201110 08:38:41.259" endtime="20201110 08:38:41.261"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.254" endtime="20201110 08:38:41.261"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:41.264" endtime="20201110 08:38:41.265"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:41.267" endtime="20201110 08:38:41.286"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.265" endtime="20201110 08:38:41.287"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.262" endtime="20201110 08:38:41.287"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.893" endtime="20201110 08:38:41.288"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.893" endtime="20201110 08:38:41.288"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:41.296" endtime="20201110 08:38:41.315"></status>
</kw>
<msg timestamp="20201110 08:38:41.315" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:41.295" endtime="20201110 08:38:41.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:41.318" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:41.316" endtime="20201110 08:38:41.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:41.319" endtime="20201110 08:38:41.322"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.292" endtime="20201110 08:38:41.322"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.290" endtime="20201110 08:38:41.323"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:41.329" endtime="20201110 08:38:41.613"></status>
</kw>
<msg timestamp="20201110 08:38:41.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019859361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019936111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:41.327" endtime="20201110 08:38:41.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:41.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019859361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019936111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:41.618" endtime="20201110 08:38:41.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:41.626" endtime="20201110 08:38:41.628"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.325" endtime="20201110 08:38:41.628"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.323" endtime="20201110 08:38:41.629"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:41.633" level="INFO">${RESULT} = [{'time': 0.019936111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.675000000000043e-05, 'source_diff': 7.675000000000043e-05}, {'time': 0.020015111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:41.629" endtime="20201110 08:38:41.633"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:41.646" level="INFO">${ACCURACY} = {'diff': [7.675000000000043e-05, 7.298599999999711e-05, 7.29309999999983e-05, 7.300000000000015e-05, 7.252800000000226e-05, 7.266699999999848e-05, 7.216699999999798e-05, 7.286100000000045e-05, 7.25559...</msg>
<status status="PASS" starttime="20201110 08:38:41.634" endtime="20201110 08:38:41.647"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:41.651" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201110 08:38:41.650" endtime="20201110 08:38:41.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:41.653" level="INFO">VALUE: [7.675000000000043e-05, 7.298599999999711e-05, 7.29309999999983e-05, 7.300000000000015e-05, 7.252800000000226e-05, 7.266699999999848e-05, 7.216699999999798e-05, 7.286100000000045e-05, 7.255599999999793e-05, 7.243100000000127e-05, 7.287500000000002e-05, 7.279200000000208e-05, 7.305599999999843e-05, 7.2763e-05, 7.312500000000027e-05, 7.238899999999909e-05, 7.306899999999852e-05, 7.259699999999716e-05, 7.226399999999897e-05, 7.259700000000063e-05, 7.256899999999802e-05, 7.261099999999673e-05, 7.219399999999765e-05, 7.287500000000002e-05, 7.251399999999922e-05, 7.312500000000027e-05, 7.216600000000198e-05, 7.312500000000027e-05, 7.245900000000041e-05, 7.3069999999998e-05, 7.287500000000002e-05, 7.254099999999888e-05, 7.22499999999994e-05, 7.248600000000008e-05, 7.245800000000094e-05, 7.276399999999947e-05, 7.273600000000033e-05, 7.237499999999952e-05, 7.300000000000015e-05, 7.280599999999818e-05, 7.22499999999994e-05, 7.294500000000134e-05, 7.273600000000033e-05, 7.227799999999854e-05, 7.208400000000004e-05, 7.312500000000027e-05, 7.22499999999994e-05, 7.300000000000015e-05, 7.24439999999979e-05, 7.222200000000026e-05]</msg>
<status status="PASS" starttime="20201110 08:38:41.652" endtime="20201110 08:38:41.654"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.647" endtime="20201110 08:38:41.655"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:41.657" endtime="20201110 08:38:41.658"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:41.660" endtime="20201110 08:38:41.680"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.659" endtime="20201110 08:38:41.680"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.655" endtime="20201110 08:38:41.681"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.289" endtime="20201110 08:38:41.681"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.288" endtime="20201110 08:38:41.681"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:41.690" endtime="20201110 08:38:41.709"></status>
</kw>
<msg timestamp="20201110 08:38:41.709" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:41.689" endtime="20201110 08:38:41.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:41.712" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:41.710" endtime="20201110 08:38:41.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:41.713" endtime="20201110 08:38:41.716"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.686" endtime="20201110 08:38:41.716"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.684" endtime="20201110 08:38:41.717"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:41.723" endtime="20201110 08:38:42.011"></status>
</kw>
<msg timestamp="20201110 08:38:42.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020371806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020450292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:41.721" endtime="20201110 08:38:42.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:42.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020371806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020450292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:42.015" endtime="20201110 08:38:42.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:42.023" endtime="20201110 08:38:42.025"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.719" endtime="20201110 08:38:42.026"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.717" endtime="20201110 08:38:42.026"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:42.030" level="INFO">${RESULT} = [{'time': 0.020450292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.848599999999914e-05, 'source_diff': 7.848599999999914e-05}, {'time': 0.020529306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:42.027" endtime="20201110 08:38:42.030"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:42.044" level="INFO">${ACCURACY} = {'diff': [7.848599999999914e-05, 7.413900000000084e-05, 7.341699999999923e-05, 7.348599999999761e-05, 7.379199999999961e-05, 7.329199999999911e-05, 7.38049999999997e-05, 7.370800000000219e-05, 7.34579...</msg>
<status status="PASS" starttime="20201110 08:38:42.031" endtime="20201110 08:38:42.044"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:42.048" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201110 08:38:42.047" endtime="20201110 08:38:42.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:42.051" level="INFO">VALUE: [7.848599999999914e-05, 7.413900000000084e-05, 7.341699999999923e-05, 7.348599999999761e-05, 7.379199999999961e-05, 7.329199999999911e-05, 7.38049999999997e-05, 7.370800000000219e-05, 7.345799999999847e-05, 7.39439999999994e-05, 7.412500000000127e-05, 7.398599999999811e-05, 7.362500000000077e-05, 7.402800000000029e-05, 7.320900000000116e-05, 7.413900000000084e-05, 7.387499999999755e-05, 7.404199999999986e-05, 7.373600000000133e-05, 7.402800000000029e-05, 7.386200000000093e-05, 7.362500000000077e-05, 7.345800000000194e-05, 7.413900000000084e-05, 7.379100000000013e-05, 7.356899999999902e-05, 7.402800000000029e-05, 7.32500000000004e-05, 7.359700000000163e-05, 7.376400000000047e-05, 7.401399999999725e-05, 7.383399999999832e-05, 7.351400000000022e-05, 7.368099999999905e-05, 7.351400000000022e-05, 7.334699999999791e-05, 7.358400000000154e-05, 7.398599999999811e-05, 7.383299999999884e-05, 7.340300000000313e-05, 7.406899999999952e-05, 7.404199999999986e-05, 7.362500000000077e-05, 7.337500000000052e-05, 7.39439999999994e-05, 7.344499999999837e-05, 7.39309999999993e-05, 7.350000000000065e-05, 7.407000000000247e-05, 7.369500000000209e-05]</msg>
<status status="PASS" starttime="20201110 08:38:42.049" endtime="20201110 08:38:42.052"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.045" endtime="20201110 08:38:42.052"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:42.054" endtime="20201110 08:38:42.056"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:42.058" endtime="20201110 08:38:42.077"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.056" endtime="20201110 08:38:42.078"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.053" endtime="20201110 08:38:42.078"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.682" endtime="20201110 08:38:42.078"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.682" endtime="20201110 08:38:42.078"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:42.087" endtime="20201110 08:38:42.107"></status>
</kw>
<msg timestamp="20201110 08:38:42.107" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:42.086" endtime="20201110 08:38:42.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:42.110" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:42.108" endtime="20201110 08:38:42.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:42.111" endtime="20201110 08:38:42.113"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.083" endtime="20201110 08:38:42.114"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.081" endtime="20201110 08:38:42.114"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:42.121" endtime="20201110 08:38:42.406"></status>
</kw>
<msg timestamp="20201110 08:38:42.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019884347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019963681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:42.119" endtime="20201110 08:38:42.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:42.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019884347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019963681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:42.410" endtime="20201110 08:38:42.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:42.419" endtime="20201110 08:38:42.420"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.117" endtime="20201110 08:38:42.421"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.115" endtime="20201110 08:38:42.421"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:42.425" level="INFO">${RESULT} = [{'time': 0.019963681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.933400000000035e-05, 'source_diff': 7.933400000000035e-05}, {'time': 0.020040681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:42.422" endtime="20201110 08:38:42.426"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:42.440" level="INFO">${ACCURACY} = {'diff': [7.933400000000035e-05, 7.470900000000266e-05, 7.47500000000019e-05, 7.434699999999891e-05, 7.493000000000083e-05, 7.437500000000152e-05, 7.442999999999686e-05, 7.463899999999787e-05, 7.45690...</msg>
<status status="PASS" starttime="20201110 08:38:42.426" endtime="20201110 08:38:42.440"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:42.445" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201110 08:38:42.444" endtime="20201110 08:38:42.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:42.447" level="INFO">VALUE: [7.933400000000035e-05, 7.470900000000266e-05, 7.47500000000019e-05, 7.434699999999891e-05, 7.493000000000083e-05, 7.437500000000152e-05, 7.442999999999686e-05, 7.463899999999787e-05, 7.456900000000002e-05, 7.41249999999978e-05, 7.42500000000014e-05, 7.506900000000052e-05, 7.507e-05, 7.462500000000177e-05, 7.501400000000172e-05, 7.44309999999998e-05, 7.48050000000007e-05, 7.420900000000216e-05, 7.49310000000003e-05, 7.483299999999984e-05, 7.437500000000152e-05, 7.495799999999997e-05, 7.44439999999999e-05, 7.504200000000086e-05, 7.504100000000138e-05, 7.494499999999987e-05, 7.445799999999947e-05, 7.437499999999805e-05, 7.481900000000027e-05, 7.481900000000027e-05, 7.504200000000086e-05, 7.463899999999787e-05, 7.495899999999944e-05, 7.49310000000003e-05, 7.413900000000084e-05, 7.473599999999886e-05, 7.437500000000152e-05, 7.50830000000001e-05, 7.443000000000033e-05, 7.426400000000097e-05, 7.499999999999868e-05, 7.445799999999947e-05, 7.44309999999998e-05, 7.48189999999968e-05, 7.480600000000018e-05, 7.48050000000007e-05, 7.507e-05, 7.484699999999941e-05, 7.469499999999962e-05, 7.444499999999937e-05]</msg>
<status status="PASS" starttime="20201110 08:38:42.446" endtime="20201110 08:38:42.448"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.441" endtime="20201110 08:38:42.448"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:42.451" endtime="20201110 08:38:42.452"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:42.454" endtime="20201110 08:38:42.473"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.453" endtime="20201110 08:38:42.474"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.449" endtime="20201110 08:38:42.474"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.079" endtime="20201110 08:38:42.475"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.079" endtime="20201110 08:38:42.475"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:42.483" endtime="20201110 08:38:42.503"></status>
</kw>
<msg timestamp="20201110 08:38:42.504" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:42.482" endtime="20201110 08:38:42.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:42.506" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:42.505" endtime="20201110 08:38:42.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:42.507" endtime="20201110 08:38:42.510"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.479" endtime="20201110 08:38:42.510"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.477" endtime="20201110 08:38:42.511"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:42.517" endtime="20201110 08:38:42.802"></status>
</kw>
<msg timestamp="20201110 08:38:42.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019778278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019858111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:42.516" endtime="20201110 08:38:42.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:42.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019778278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019858111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:42.806" endtime="20201110 08:38:42.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:42.814" endtime="20201110 08:38:42.816"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.513" endtime="20201110 08:38:42.817"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.511" endtime="20201110 08:38:42.817"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:42.821" level="INFO">${RESULT} = [{'time': 0.019858111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.983300000000138e-05, 'source_diff': 7.983300000000138e-05}, {'time': 0.019937111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:42.818" endtime="20201110 08:38:42.821"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:42.835" level="INFO">${ACCURACY} = {'diff': [7.983300000000138e-05, 7.58050000000017e-05, 7.572200000000029e-05, 7.52639999999985e-05, 7.556999999999703e-05, 7.559700000000016e-05, 7.565299999999844e-05, 7.519500000000012e-05, 7.588899...</msg>
<status status="PASS" starttime="20201110 08:38:42.822" endtime="20201110 08:38:42.835"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:42.839" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201110 08:38:42.838" endtime="20201110 08:38:42.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:42.842" level="INFO">VALUE: [7.983300000000138e-05, 7.58050000000017e-05, 7.572200000000029e-05, 7.52639999999985e-05, 7.556999999999703e-05, 7.559700000000016e-05, 7.565299999999844e-05, 7.519500000000012e-05, 7.588899999999912e-05, 7.6070000000001e-05, 7.606999999999753e-05, 7.602799999999882e-05, 7.531900000000077e-05, 7.606899999999805e-05, 7.556900000000102e-05, 7.576400000000247e-05, 7.59440000000014e-05, 7.602799999999882e-05, 7.519400000000065e-05, 7.552799999999832e-05, 7.54029999999982e-05, 7.569500000000062e-05, 7.587499999999955e-05, 7.59029999999987e-05, 7.5763999999999e-05, 7.608299999999762e-05, 7.572200000000029e-05, 7.605499999999848e-05, 7.561199999999921e-05, 7.566599999999854e-05, 7.595800000000097e-05, 7.531900000000077e-05, 7.580599999999771e-05, 7.519400000000065e-05, 7.556900000000102e-05, 7.556899999999755e-05, 7.537500000000252e-05, 7.6070000000001e-05, 7.60839999999971e-05, 7.588899999999912e-05, 7.569500000000062e-05, 7.55700000000005e-05, 7.6070000000001e-05, 7.563899999999887e-05, 7.6070000000001e-05, 7.59579999999975e-05, 7.536099999999948e-05, 7.61249999999998e-05, 7.58050000000017e-05, 7.601399999999925e-05]</msg>
<status status="PASS" starttime="20201110 08:38:42.840" endtime="20201110 08:38:42.846"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.836" endtime="20201110 08:38:42.847"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:42.849" endtime="20201110 08:38:42.851"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:42.853" endtime="20201110 08:38:42.872"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.851" endtime="20201110 08:38:42.873"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.848" endtime="20201110 08:38:42.873"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.476" endtime="20201110 08:38:42.874"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.475" endtime="20201110 08:38:42.874"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:42.883" endtime="20201110 08:38:42.902"></status>
</kw>
<msg timestamp="20201110 08:38:42.903" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:42.882" endtime="20201110 08:38:42.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:42.905" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:42.904" endtime="20201110 08:38:42.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:42.906" endtime="20201110 08:38:42.909"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.879" endtime="20201110 08:38:42.909"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.877" endtime="20201110 08:38:42.910"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:42.916" endtime="20201110 08:38:43.201"></status>
</kw>
<msg timestamp="20201110 08:38:43.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020862722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020943333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:42.915" endtime="20201110 08:38:43.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:43.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020862722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020943333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:43.205" endtime="20201110 08:38:43.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:43.214" endtime="20201110 08:38:43.215"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.912" endtime="20201110 08:38:43.216"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.910" endtime="20201110 08:38:43.216"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:43.220" level="INFO">${RESULT} = [{'time': 0.020943333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.061100000000126e-05, 'source_diff': 8.061100000000126e-05}, {'time': 0.021025333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:43.217" endtime="20201110 08:38:43.221"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:43.234" level="INFO">${ACCURACY} = {'diff': [8.061100000000126e-05, 7.71250000000008e-05, 7.6457999999998e-05, 7.615300000000241e-05, 7.705499999999949e-05, 7.700000000000068e-05, 7.68189999999988e-05, 7.616700000000198e-05, 7.61390000...</msg>
<status status="PASS" starttime="20201110 08:38:43.222" endtime="20201110 08:38:43.234"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:43.239" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201110 08:38:43.238" endtime="20201110 08:38:43.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:43.241" level="INFO">VALUE: [8.061100000000126e-05, 7.71250000000008e-05, 7.6457999999998e-05, 7.615300000000241e-05, 7.705499999999949e-05, 7.700000000000068e-05, 7.68189999999988e-05, 7.616700000000198e-05, 7.613900000000284e-05, 7.633400000000082e-05, 7.62639999999995e-05, 7.706999999999853e-05, 7.658400000000107e-05, 7.638899999999962e-05, 7.701399999999678e-05, 7.633300000000134e-05, 7.622200000000079e-05, 7.690300000000316e-05, 7.683399999999785e-05, 7.622199999999732e-05, 7.687500000000055e-05, 7.686100000000098e-05, 7.643099999999833e-05, 7.712499999999733e-05, 7.694399999999893e-05, 7.638899999999962e-05, 7.651400000000322e-05, 7.633300000000134e-05, 7.634700000000091e-05, 7.67229999999973e-05, 7.615199999999947e-05, 7.673700000000033e-05, 7.637500000000005e-05, 7.670799999999825e-05, 7.63890000000031e-05, 7.64440000000019e-05, 7.63890000000031e-05, 7.613899999999937e-05, 7.62639999999995e-05, 7.6764e-05, 7.694500000000187e-05, 7.620900000000069e-05, 7.619499999999765e-05, 7.688899999999665e-05, 7.633400000000082e-05, 7.624999999999993e-05, 7.654200000000236e-05, 7.638899999999962e-05, 7.667999999999911e-05, 7.651399999999975e-05]</msg>
<status status="PASS" starttime="20201110 08:38:43.240" endtime="20201110 08:38:43.242"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:43.235" endtime="20201110 08:38:43.243"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:43.245" endtime="20201110 08:38:43.246"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:43.248" endtime="20201110 08:38:43.267"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:43.247" endtime="20201110 08:38:43.268"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:43.243" endtime="20201110 08:38:43.268"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.875" endtime="20201110 08:38:43.269"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.874" endtime="20201110 08:38:43.269"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:43.277" endtime="20201110 08:38:43.296"></status>
</kw>
<msg timestamp="20201110 08:38:43.297" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:43.276" endtime="20201110 08:38:43.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:43.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:43.298" endtime="20201110 08:38:43.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:43.300" endtime="20201110 08:38:43.303"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:43.273" endtime="20201110 08:38:43.303"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:43.271" endtime="20201110 08:38:43.304"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:43.310" endtime="20201110 08:38:43.596"></status>
</kw>
<msg timestamp="20201110 08:38:43.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019760458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019842986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:43.309" endtime="20201110 08:38:43.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:43.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019760458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019842986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:43.600" endtime="20201110 08:38:43.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:43.609" endtime="20201110 08:38:43.610"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:43.306" endtime="20201110 08:38:43.611"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:43.304" endtime="20201110 08:38:43.611"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:43.616" level="INFO">${RESULT} = [{'time': 0.019842986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.252799999999838e-05, 'source_diff': 8.252799999999838e-05}, {'time': 0.019923972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:43.612" endtime="20201110 08:38:43.616"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:43.629" level="INFO">${ACCURACY} = {'diff': [8.252799999999838e-05, 7.80830000000031e-05, 7.779100000000067e-05, 7.776399999999753e-05, 7.751399999999728e-05, 7.802799999999735e-05, 7.74030000000002e-05, 7.761199999999774e-05, 7.750000...</msg>
<status status="PASS" starttime="20201110 08:38:43.617" endtime="20201110 08:38:43.629"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:43.634" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201110 08:38:43.633" endtime="20201110 08:38:43.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:43.636" level="INFO">VALUE: [8.252799999999838e-05, 7.80830000000031e-05, 7.779100000000067e-05, 7.776399999999753e-05, 7.751399999999728e-05, 7.802799999999735e-05, 7.74030000000002e-05, 7.761199999999774e-05, 7.750000000000118e-05, 7.774999999999796e-05, 7.799999999999821e-05, 7.719500000000212e-05, 7.777800000000057e-05, 7.769499999999915e-05, 7.813900000000137e-05, 7.780599999999971e-05, 7.731999999999878e-05, 7.758299999999912e-05, 7.78189999999998e-05, 7.738899999999715e-05, 7.81250000000018e-05, 7.773600000000186e-05, 7.811099999999876e-05, 7.815300000000094e-05, 7.787499999999808e-05, 7.815300000000094e-05, 7.75839999999986e-05, 7.76250000000013e-05, 7.775000000000143e-05, 7.743099999999933e-05, 7.730600000000268e-05, 7.759700000000216e-05, 7.808299999999962e-05, 7.751300000000128e-05, 7.774999999999796e-05, 7.813900000000137e-05, 7.743000000000333e-05, 7.71250000000008e-05, 7.770799999999925e-05, 7.774999999999796e-05, 7.744399999999943e-05, 7.738900000000062e-05, 7.795900000000244e-05, 7.795900000000244e-05, 7.729199999999964e-05, 7.782000000000275e-05, 7.720899999999822e-05, 7.740200000000072e-05, 7.734699999999844e-05, 7.805500000000049e-05]</msg>
<status status="PASS" starttime="20201110 08:38:43.635" endtime="20201110 08:38:43.637"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:43.630" endtime="20201110 08:38:43.637"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:43.640" endtime="20201110 08:38:43.641"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:43.643" endtime="20201110 08:38:43.662"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:43.642" endtime="20201110 08:38:43.663"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:43.638" endtime="20201110 08:38:43.663"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:43.270" endtime="20201110 08:38:43.664"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:43.269" endtime="20201110 08:38:43.664"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:43.673" endtime="20201110 08:38:43.691"></status>
</kw>
<msg timestamp="20201110 08:38:43.692" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:43.671" endtime="20201110 08:38:43.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:43.694" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:43.693" endtime="20201110 08:38:43.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:43.695" endtime="20201110 08:38:43.698"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:43.668" endtime="20201110 08:38:43.699"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:43.666" endtime="20201110 08:38:43.699"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:43.705" endtime="20201110 08:38:43.992"></status>
</kw>
<msg timestamp="20201110 08:38:43.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019911931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019994681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:43.704" endtime="20201110 08:38:43.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:44.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019911931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019994681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:43.996" endtime="20201110 08:38:44.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:44.004" endtime="20201110 08:38:44.006"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:43.701" endtime="20201110 08:38:44.007"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:43.700" endtime="20201110 08:38:44.007"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:44.011" level="INFO">${RESULT} = [{'time': 0.019994681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.274999999999949e-05, 'source_diff': 8.274999999999949e-05}, {'time': 0.020075625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:44.008" endtime="20201110 08:38:44.011"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:44.026" level="INFO">${ACCURACY} = {'diff': [8.274999999999949e-05, 7.874999999999896e-05, 7.891700000000126e-05, 7.857000000000003e-05, 7.82779999999976e-05, 7.848599999999914e-05, 7.90840000000001e-05, 7.911199999999924e-05, 7.868000...</msg>
<status status="PASS" starttime="20201110 08:38:44.012" endtime="20201110 08:38:44.026"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:44.030" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201110 08:38:44.029" endtime="20201110 08:38:44.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:44.033" level="INFO">VALUE: [8.274999999999949e-05, 7.874999999999896e-05, 7.891700000000126e-05, 7.857000000000003e-05, 7.82779999999976e-05, 7.848599999999914e-05, 7.90840000000001e-05, 7.911199999999924e-05, 7.868000000000111e-05, 7.818100000000008e-05, 7.894400000000093e-05, 7.856900000000056e-05, 7.899999999999921e-05, 7.888900000000212e-05, 7.89580000000005e-05, 7.830499999999727e-05, 7.83190000000003e-05, 7.847199999999957e-05, 7.852799999999785e-05, 7.82640000000015e-05, 7.890199999999875e-05, 7.90840000000001e-05, 7.837499999999858e-05, 7.836100000000248e-05, 7.855600000000046e-05, 7.813799999999843e-05, 7.894400000000093e-05, 7.84030000000012e-05, 7.830500000000074e-05, 7.8458e-05, 7.863900000000187e-05, 7.872199999999982e-05, 7.865300000000144e-05, 7.886099999999951e-05, 7.824999999999846e-05, 7.84449999999999e-05, 7.837500000000205e-05, 7.838899999999815e-05, 7.837499999999858e-05, 7.82640000000015e-05, 7.888899999999865e-05, 7.838800000000215e-05, 7.86250000000023e-05, 7.899999999999921e-05, 7.856900000000056e-05, 7.88190000000008e-05, 7.823599999999889e-05, 7.844400000000043e-05, 7.865299999999797e-05, 7.824999999999846e-05]</msg>
<status status="PASS" starttime="20201110 08:38:44.032" endtime="20201110 08:38:44.034"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.027" endtime="20201110 08:38:44.034"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:44.036" endtime="20201110 08:38:44.038"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:44.040" endtime="20201110 08:38:44.059"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.038" endtime="20201110 08:38:44.060"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.035" endtime="20201110 08:38:44.060"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:43.665" endtime="20201110 08:38:44.060"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:43.664" endtime="20201110 08:38:44.061"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:44.069" endtime="20201110 08:38:44.088"></status>
</kw>
<msg timestamp="20201110 08:38:44.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:44.068" endtime="20201110 08:38:44.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:44.091" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:44.089" endtime="20201110 08:38:44.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:44.092" endtime="20201110 08:38:44.095"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.065" endtime="20201110 08:38:44.095"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.063" endtime="20201110 08:38:44.096"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:44.102" endtime="20201110 08:38:44.388"></status>
</kw>
<msg timestamp="20201110 08:38:44.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019722042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019806514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:44.100" endtime="20201110 08:38:44.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:44.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019722042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019806514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:44.393" endtime="20201110 08:38:44.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:44.401" endtime="20201110 08:38:44.403"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.098" endtime="20201110 08:38:44.403"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.096" endtime="20201110 08:38:44.404"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:44.408" level="INFO">${RESULT} = [{'time': 0.019806514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.44720000000021e-05, 'source_diff': 8.44720000000021e-05}, {'time': 0.019888528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:38:44.404" endtime="20201110 08:38:44.408"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:44.421" level="INFO">${ACCURACY} = {'diff': [8.44720000000021e-05, 7.933400000000035e-05, 7.933400000000035e-05, 7.99450000000014e-05, 7.976399999999953e-05, 7.954199999999842e-05, 7.994400000000193e-05, 7.991700000000226e-05, 7.926399...</msg>
<status status="PASS" starttime="20201110 08:38:44.409" endtime="20201110 08:38:44.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:44.426" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201110 08:38:44.425" endtime="20201110 08:38:44.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:44.428" level="INFO">VALUE: [8.44720000000021e-05, 7.933400000000035e-05, 7.933400000000035e-05, 7.99450000000014e-05, 7.976399999999953e-05, 7.954199999999842e-05, 7.994400000000193e-05, 7.991700000000226e-05, 7.926399999999903e-05, 7.933300000000088e-05, 7.99580000000015e-05, 7.976399999999953e-05, 8.005499999999902e-05, 7.966700000000201e-05, 7.981999999999781e-05, 7.918099999999761e-05, 7.919500000000065e-05, 7.995900000000097e-05, 8.01389999999999e-05, 7.998599999999717e-05, 7.995900000000097e-05, 7.920900000000022e-05, 7.938899999999915e-05, 7.92229999999998e-05, 8.008299999999816e-05, 7.938799999999968e-05, 7.936100000000001e-05, 7.940299999999872e-05, 7.937500000000305e-05, 7.951399999999928e-05, 7.961100000000026e-05, 7.966699999999854e-05, 7.955599999999799e-05, 7.943099999999786e-05, 7.92640000000025e-05, 7.937500000000305e-05, 8.01389999999999e-05, 7.969500000000115e-05, 7.998600000000064e-05, 8.007000000000153e-05, 8.007000000000153e-05, 7.933300000000088e-05, 7.956900000000156e-05, 7.98190000000018e-05, 8.008299999999816e-05, 7.958300000000113e-05, 8.006900000000206e-05, 7.988899999999965e-05, 7.987500000000008e-05, 8.000000000000021e-05]</msg>
<status status="PASS" starttime="20201110 08:38:44.427" endtime="20201110 08:38:44.429"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.422" endtime="20201110 08:38:44.430"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:44.432" endtime="20201110 08:38:44.433"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:44.435" endtime="20201110 08:38:44.455"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.434" endtime="20201110 08:38:44.455"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.430" endtime="20201110 08:38:44.456"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.062" endtime="20201110 08:38:44.456"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.061" endtime="20201110 08:38:44.456"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:44.465" endtime="20201110 08:38:44.484"></status>
</kw>
<msg timestamp="20201110 08:38:44.485" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:44.463" endtime="20201110 08:38:44.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:44.487" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:44.486" endtime="20201110 08:38:44.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:44.488" endtime="20201110 08:38:44.491"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.460" endtime="20201110 08:38:44.492"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.458" endtime="20201110 08:38:44.492"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:44.498" endtime="20201110 08:38:44.784"></status>
</kw>
<msg timestamp="20201110 08:38:44.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019804083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019889583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:44.497" endtime="20201110 08:38:44.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:44.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019804083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019889583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:44.788" endtime="20201110 08:38:44.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:44.796" endtime="20201110 08:38:44.798"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.494" endtime="20201110 08:38:44.798"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.493" endtime="20201110 08:38:44.799"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:44.803" level="INFO">${RESULT} = [{'time': 0.019889583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.549999999999877e-05, 'source_diff': 8.549999999999877e-05}, {'time': 0.019973583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:44.799" endtime="20201110 08:38:44.803"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:44.817" level="INFO">${ACCURACY} = {'diff': [8.549999999999877e-05, 8.044399999999896e-05, 8.06520000000005e-05, 8.044399999999896e-05, 8.06390000000004e-05, 8.062500000000083e-05, 8.097200000000207e-05, 8.045799999999853e-05, 8.079199...</msg>
<status status="PASS" starttime="20201110 08:38:44.804" endtime="20201110 08:38:44.817"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:44.821" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201110 08:38:44.820" endtime="20201110 08:38:44.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:44.825" level="INFO">VALUE: [8.549999999999877e-05, 8.044399999999896e-05, 8.06520000000005e-05, 8.044399999999896e-05, 8.06390000000004e-05, 8.062500000000083e-05, 8.097200000000207e-05, 8.045799999999853e-05, 8.079199999999967e-05, 8.018099999999861e-05, 8.080600000000271e-05, 8.026400000000003e-05, 8.072200000000182e-05, 8.04450000000019e-05, 8.037500000000058e-05, 8.058300000000213e-05, 8.022200000000132e-05, 8.050000000000071e-05, 8.081899999999934e-05, 8.070799999999878e-05, 8.024999999999699e-05, 8.105500000000002e-05, 8.070799999999878e-05, 8.030499999999927e-05, 8.032000000000178e-05, 8.09589999999985e-05, 8.050000000000071e-05, 8.11390000000009e-05, 8.11390000000009e-05, 8.075000000000096e-05, 8.073599999999792e-05, 8.044399999999896e-05, 8.036200000000049e-05, 8.06390000000004e-05, 8.102800000000035e-05, 8.108299999999916e-05, 8.019399999999871e-05, 8.034699999999798e-05, 8.025000000000046e-05, 8.019400000000218e-05, 8.068099999999911e-05, 8.099999999999774e-05, 8.052799999999985e-05, 8.016700000000251e-05, 8.059699999999823e-05, 8.026400000000003e-05, 8.042999999999939e-05, 8.072199999999835e-05, 8.073700000000086e-05, 8.06390000000004e-05]</msg>
<status status="PASS" starttime="20201110 08:38:44.823" endtime="20201110 08:38:44.826"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.817" endtime="20201110 08:38:44.827"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:44.829" endtime="20201110 08:38:44.830"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:44.832" endtime="20201110 08:38:44.852"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.831" endtime="20201110 08:38:44.852"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.827" endtime="20201110 08:38:44.853"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.457" endtime="20201110 08:38:44.853"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.456" endtime="20201110 08:38:44.853"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:44.862" endtime="20201110 08:38:44.882"></status>
</kw>
<msg timestamp="20201110 08:38:44.883" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:44.860" endtime="20201110 08:38:44.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:44.885" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:44.884" endtime="20201110 08:38:44.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:44.886" endtime="20201110 08:38:44.889"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.858" endtime="20201110 08:38:44.890"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.856" endtime="20201110 08:38:44.890"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:44.898" endtime="20201110 08:38:45.184"></status>
</kw>
<msg timestamp="20201110 08:38:45.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020051444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020138, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:38:44.896" endtime="20201110 08:38:45.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:45.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020051444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020138, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:38:45.189" endtime="20201110 08:38:45.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:45.197" endtime="20201110 08:38:45.199"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.893" endtime="20201110 08:38:45.199"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.891" endtime="20201110 08:38:45.200"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:45.204" level="INFO">${RESULT} = [{'time': 0.020138, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.655599999999805e-05, 'source_diff': 8.655599999999805e-05}, {'time': 0.020223, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.1...</msg>
<status status="PASS" starttime="20201110 08:38:45.200" endtime="20201110 08:38:45.204"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:45.217" level="INFO">${ACCURACY} = {'diff': [8.655599999999805e-05, 8.119399999999971e-05, 8.188900000000165e-05, 8.126400000000103e-05, 8.14170000000003e-05, 8.212499999999887e-05, 8.170899999999925e-05, 8.212499999999887e-05, 8.14309...</msg>
<status status="PASS" starttime="20201110 08:38:45.205" endtime="20201110 08:38:45.218"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:45.222" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201110 08:38:45.221" endtime="20201110 08:38:45.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:45.225" level="INFO">VALUE: [8.655599999999805e-05, 8.119399999999971e-05, 8.188900000000165e-05, 8.126400000000103e-05, 8.14170000000003e-05, 8.212499999999887e-05, 8.170899999999925e-05, 8.212499999999887e-05, 8.143099999999986e-05, 8.187500000000208e-05, 8.145799999999953e-05, 8.138900000000115e-05, 8.198599999999917e-05, 8.209699999999973e-05, 8.18049999999973e-05, 8.137500000000158e-05, 8.137500000000158e-05, 8.173599999999892e-05, 8.201399999999831e-05, 8.18329999999999e-05, 8.216600000000157e-05, 8.16529999999975e-05, 8.201399999999831e-05, 8.126400000000103e-05, 8.19589999999995e-05, 8.118000000000014e-05, 8.173600000000239e-05, 8.124999999999799e-05, 8.168000000000064e-05, 8.176400000000153e-05, 8.124999999999799e-05, 8.166700000000054e-05, 8.187500000000208e-05, 8.131899999999984e-05, 8.138899999999769e-05, 8.168100000000011e-05, 8.138900000000115e-05, 8.12910000000007e-05, 8.140300000000072e-05, 8.207000000000006e-05, 8.129200000000017e-05, 8.131899999999984e-05, 8.163799999999846e-05, 8.131899999999984e-05, 8.126400000000103e-05, 8.144399999999996e-05, 8.138900000000115e-05, 8.124999999999799e-05, 8.151400000000128e-05, 8.143099999999986e-05]</msg>
<status status="PASS" starttime="20201110 08:38:45.223" endtime="20201110 08:38:45.225"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:45.218" endtime="20201110 08:38:45.226"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:45.228" endtime="20201110 08:38:45.229"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:45.231" endtime="20201110 08:38:45.251"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:45.230" endtime="20201110 08:38:45.251"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:45.226" endtime="20201110 08:38:45.252"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.854" endtime="20201110 08:38:45.252"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.854" endtime="20201110 08:38:45.252"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:45.261" endtime="20201110 08:38:45.280"></status>
</kw>
<msg timestamp="20201110 08:38:45.280" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:45.259" endtime="20201110 08:38:45.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:45.283" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:45.281" endtime="20201110 08:38:45.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:45.284" endtime="20201110 08:38:45.287"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:45.257" endtime="20201110 08:38:45.287"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:45.255" endtime="20201110 08:38:45.288"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:45.294" endtime="20201110 08:38:45.579"></status>
</kw>
<msg timestamp="20201110 08:38:45.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019795361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019882569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:45.292" endtime="20201110 08:38:45.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:45.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019795361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019882569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:45.584" endtime="20201110 08:38:45.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:45.592" endtime="20201110 08:38:45.594"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:45.290" endtime="20201110 08:38:45.594"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:45.288" endtime="20201110 08:38:45.595"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:45.599" level="INFO">${RESULT} = [{'time': 0.019882569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.720799999999834e-05, 'source_diff': 8.720799999999834e-05}, {'time': 0.019970569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:45.596" endtime="20201110 08:38:45.599"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:45.614" level="INFO">${ACCURACY} = {'diff': [8.720799999999834e-05, 8.220800000000028e-05, 8.23049999999978e-05, 8.26109999999998e-05, 8.251399999999881e-05, 8.31110000000003e-05, 8.301399999999931e-05, 8.23330000000004e-05, 8.29579999...</msg>
<status status="PASS" starttime="20201110 08:38:45.600" endtime="20201110 08:38:45.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:45.618" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201110 08:38:45.617" endtime="20201110 08:38:45.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:45.621" level="INFO">VALUE: [8.720799999999834e-05, 8.220800000000028e-05, 8.23049999999978e-05, 8.26109999999998e-05, 8.251399999999881e-05, 8.31110000000003e-05, 8.301399999999931e-05, 8.23330000000004e-05, 8.295799999999756e-05, 8.272200000000035e-05, 8.31110000000003e-05, 8.280600000000124e-05, 8.219500000000018e-05, 8.232000000000031e-05, 8.269399999999774e-05, 8.222199999999985e-05, 8.225000000000246e-05, 8.220800000000028e-05, 8.262499999999937e-05, 8.288900000000265e-05, 8.218000000000114e-05, 8.215300000000147e-05, 8.293000000000189e-05, 8.225000000000246e-05, 8.211100000000277e-05, 8.223599999999942e-05, 8.280600000000124e-05, 8.223599999999942e-05, 8.249999999999924e-05, 8.269500000000068e-05, 8.288899999999919e-05, 8.274999999999949e-05, 8.254099999999848e-05, 8.268000000000164e-05, 8.220800000000028e-05, 8.292999999999842e-05, 8.295800000000103e-05, 8.211100000000277e-05, 8.269399999999774e-05, 8.294400000000146e-05, 8.302799999999888e-05, 8.305599999999802e-05, 8.218100000000061e-05, 8.238900000000215e-05, 8.257000000000056e-05, 8.31110000000003e-05, 8.312499999999987e-05, 8.295800000000103e-05, 8.215199999999853e-05, 8.29309999999979e-05]</msg>
<status status="PASS" starttime="20201110 08:38:45.619" endtime="20201110 08:38:45.622"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:45.615" endtime="20201110 08:38:45.622"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:45.624" endtime="20201110 08:38:45.626"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:45.628" endtime="20201110 08:38:45.647"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:45.626" endtime="20201110 08:38:45.647"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:45.623" endtime="20201110 08:38:45.648"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:45.253" endtime="20201110 08:38:45.648"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:45.253" endtime="20201110 08:38:45.648"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:45.657" endtime="20201110 08:38:45.676"></status>
</kw>
<msg timestamp="20201110 08:38:45.677" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:45.655" endtime="20201110 08:38:45.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:45.679" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:45.678" endtime="20201110 08:38:45.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:45.680" endtime="20201110 08:38:45.683"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:45.653" endtime="20201110 08:38:45.684"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:45.651" endtime="20201110 08:38:45.684"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:45.690" endtime="20201110 08:38:45.976"></status>
</kw>
<msg timestamp="20201110 08:38:45.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019719347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019807111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:45.689" endtime="20201110 08:38:45.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:45.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019719347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019807111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:45.981" endtime="20201110 08:38:45.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:45.989" endtime="20201110 08:38:45.991"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:45.686" endtime="20201110 08:38:45.991"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:45.685" endtime="20201110 08:38:45.992"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:45.996" level="INFO">${RESULT} = [{'time': 0.019807111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.776399999999712e-05, 'source_diff': 8.776399999999712e-05}, {'time': 0.019895111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:45.993" endtime="20201110 08:38:45.996"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:46.010" level="INFO">${ACCURACY} = {'diff': [8.776399999999712e-05, 8.33049999999988e-05, 8.402799999999988e-05, 8.39590000000015e-05, 8.352800000000285e-05, 8.38049999999993e-05, 8.350000000000024e-05, 8.380599999999877e-05, 8.3139000...</msg>
<status status="PASS" starttime="20201110 08:38:45.997" endtime="20201110 08:38:46.010"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:46.014" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201110 08:38:46.013" endtime="20201110 08:38:46.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:46.017" level="INFO">VALUE: [8.776399999999712e-05, 8.33049999999988e-05, 8.402799999999988e-05, 8.39590000000015e-05, 8.352800000000285e-05, 8.38049999999993e-05, 8.350000000000024e-05, 8.380599999999877e-05, 8.31390000000029e-05, 8.375000000000049e-05, 8.376300000000059e-05, 8.369400000000221e-05, 8.317999999999867e-05, 8.405499999999955e-05, 8.408299999999869e-05, 8.324999999999999e-05, 8.351399999999981e-05, 8.41249999999974e-05, 8.323600000000042e-05, 8.36529999999995e-05, 8.404199999999945e-05, 8.3459000000001e-05, 8.400000000000074e-05, 8.319500000000118e-05, 8.377799999999963e-05, 8.340199999999978e-05, 8.318000000000214e-05, 8.324999999999999e-05, 8.313799999999996e-05, 8.363899999999994e-05, 8.391699999999933e-05, 8.340299999999926e-05, 8.401400000000031e-05, 8.38049999999993e-05, 8.406899999999912e-05, 8.408299999999869e-05, 8.3459000000001e-05, 8.386100000000105e-05, 8.406999999999859e-05, 8.400000000000074e-05, 8.394500000000193e-05, 8.409699999999826e-05, 8.33049999999988e-05, 8.362500000000037e-05, 8.380599999999877e-05, 8.320800000000128e-05, 8.412500000000087e-05, 8.373599999999745e-05, 8.32919999999987e-05, 8.361099999999733e-05]</msg>
<status status="PASS" starttime="20201110 08:38:46.015" endtime="20201110 08:38:46.017"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.010" endtime="20201110 08:38:46.018"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:46.020" endtime="20201110 08:38:46.022"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:46.024" endtime="20201110 08:38:46.043"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.022" endtime="20201110 08:38:46.043"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.019" endtime="20201110 08:38:46.044"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:45.649" endtime="20201110 08:38:46.044"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:45.649" endtime="20201110 08:38:46.044"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:46.053" endtime="20201110 08:38:46.073"></status>
</kw>
<msg timestamp="20201110 08:38:46.073" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:46.051" endtime="20201110 08:38:46.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:46.076" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:46.074" endtime="20201110 08:38:46.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:46.077" endtime="20201110 08:38:46.080"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.049" endtime="20201110 08:38:46.080"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.047" endtime="20201110 08:38:46.081"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:46.087" endtime="20201110 08:38:46.372"></status>
</kw>
<msg timestamp="20201110 08:38:46.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019736028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01982475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:38:46.085" endtime="20201110 08:38:46.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:46.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019736028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01982475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:38:46.376" endtime="20201110 08:38:46.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:46.385" endtime="20201110 08:38:46.386"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.083" endtime="20201110 08:38:46.387"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.081" endtime="20201110 08:38:46.387"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:46.392" level="INFO">${RESULT} = [{'time': 0.01982475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.872199999999941e-05, 'source_diff': 8.872199999999941e-05}, {'time': 0.019914764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:38:46.388" endtime="20201110 08:38:46.392"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:46.405" level="INFO">${ACCURACY} = {'diff': [8.872199999999941e-05, 8.495800000000303e-05, 8.470900000000225e-05, 8.431999999999884e-05, 8.481999999999934e-05, 8.502800000000088e-05, 8.462500000000137e-05, 8.456999999999909e-05, 8.4957...</msg>
<status status="PASS" starttime="20201110 08:38:46.393" endtime="20201110 08:38:46.405"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:46.410" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201110 08:38:46.409" endtime="20201110 08:38:46.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:46.412" level="INFO">VALUE: [8.872199999999941e-05, 8.495800000000303e-05, 8.470900000000225e-05, 8.431999999999884e-05, 8.481999999999934e-05, 8.502800000000088e-05, 8.462500000000137e-05, 8.456999999999909e-05, 8.495799999999956e-05, 8.499999999999827e-05, 8.43049999999998e-05, 8.48050000000003e-05, 8.505500000000055e-05, 8.43330000000024e-05, 8.4153e-05, 8.481999999999934e-05, 8.506999999999959e-05, 8.458399999999866e-05, 8.506999999999959e-05, 8.430599999999927e-05, 8.458399999999866e-05, 8.436099999999808e-05, 8.476400000000106e-05, 8.470799999999931e-05, 8.512500000000187e-05, 8.438899999999722e-05, 8.490300000000076e-05, 8.501399999999784e-05, 8.463899999999747e-05, 8.461099999999833e-05, 8.419499999999872e-05, 8.506999999999959e-05, 8.476400000000106e-05, 8.474999999999802e-05, 8.4846999999999e-05, 8.422200000000185e-05, 8.450000000000124e-05, 8.426400000000056e-05, 8.426300000000109e-05, 8.438900000000069e-05, 8.433299999999894e-05, 8.46660000000006e-05, 8.477800000000063e-05, 8.455500000000005e-05, 8.431899999999937e-05, 8.449999999999777e-05, 8.426399999999709e-05, 8.488900000000119e-05, 8.413899999999697e-05, 8.433299999999894e-05]</msg>
<status status="PASS" starttime="20201110 08:38:46.411" endtime="20201110 08:38:46.413"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.406" endtime="20201110 08:38:46.414"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:46.416" endtime="20201110 08:38:46.417"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:46.419" endtime="20201110 08:38:46.439"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.418" endtime="20201110 08:38:46.439"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.414" endtime="20201110 08:38:46.440"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.045" endtime="20201110 08:38:46.440"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.045" endtime="20201110 08:38:46.440"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:46.449" endtime="20201110 08:38:46.468"></status>
</kw>
<msg timestamp="20201110 08:38:46.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:46.447" endtime="20201110 08:38:46.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:46.471" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:46.470" endtime="20201110 08:38:46.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:46.472" endtime="20201110 08:38:46.475"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.445" endtime="20201110 08:38:46.475"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.443" endtime="20201110 08:38:46.476"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:46.482" endtime="20201110 08:38:46.767"></status>
</kw>
<msg timestamp="20201110 08:38:46.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019872514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019962847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:46.481" endtime="20201110 08:38:46.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:46.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019872514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019962847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:46.771" endtime="20201110 08:38:46.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:46.780" endtime="20201110 08:38:46.781"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.478" endtime="20201110 08:38:46.782"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.476" endtime="20201110 08:38:46.782"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:46.787" level="INFO">${RESULT} = [{'time': 0.019962847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.0332999999998e-05, 'source_diff': 9.0332999999998e-05}, {'time': 0.020053861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8...</msg>
<status status="PASS" starttime="20201110 08:38:46.783" endtime="20201110 08:38:46.787"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:46.800" level="INFO">${ACCURACY} = {'diff': [9.0332999999998e-05, 8.540299999999779e-05, 8.531900000000037e-05, 8.57920000000012e-05, 8.595800000000056e-05, 8.580600000000077e-05, 8.590300000000176e-05, 8.550000000000224e-05, 8.5458999...</msg>
<status status="PASS" starttime="20201110 08:38:46.787" endtime="20201110 08:38:46.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:46.805" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201110 08:38:46.804" endtime="20201110 08:38:46.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:46.807" level="INFO">VALUE: [9.0332999999998e-05, 8.540299999999779e-05, 8.531900000000037e-05, 8.57920000000012e-05, 8.595800000000056e-05, 8.580600000000077e-05, 8.590300000000176e-05, 8.550000000000224e-05, 8.545899999999954e-05, 8.557000000000009e-05, 8.59310000000009e-05, 8.544499999999997e-05, 8.56530000000015e-05, 8.583300000000044e-05, 8.542999999999745e-05, 8.551399999999834e-05, 8.568000000000117e-05, 8.519400000000024e-05, 8.523599999999895e-05, 8.606900000000112e-05, 8.544400000000049e-05, 8.552799999999791e-05, 8.537500000000212e-05, 8.61249999999994e-05, 8.551400000000181e-05, 8.529100000000123e-05, 8.552799999999791e-05, 8.602800000000188e-05, 8.613799999999949e-05, 8.562500000000237e-05, 8.5847e-05, 8.556900000000062e-05, 8.554200000000095e-05, 8.543000000000092e-05, 8.59310000000009e-05, 8.508299999999969e-05, 8.606999999999712e-05, 8.518000000000067e-05, 8.536100000000255e-05, 8.549999999999877e-05, 8.529199999999723e-05, 8.588899999999872e-05, 8.607000000000059e-05, 8.587499999999915e-05, 8.588899999999872e-05, 8.537499999999865e-05, 8.523600000000242e-05, 8.550000000000224e-05, 8.594400000000099e-05, 8.609700000000026e-05]</msg>
<status status="PASS" starttime="20201110 08:38:46.806" endtime="20201110 08:38:46.808"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.801" endtime="20201110 08:38:46.808"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:46.811" endtime="20201110 08:38:46.812"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:46.814" endtime="20201110 08:38:46.834"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.813" endtime="20201110 08:38:46.834"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.809" endtime="20201110 08:38:46.835"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.441" endtime="20201110 08:38:46.835"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.440" endtime="20201110 08:38:46.835"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:46.844" endtime="20201110 08:38:46.863"></status>
</kw>
<msg timestamp="20201110 08:38:46.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:46.842" endtime="20201110 08:38:46.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:46.866" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:46.865" endtime="20201110 08:38:46.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:46.867" endtime="20201110 08:38:46.870"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.839" endtime="20201110 08:38:46.871"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.837" endtime="20201110 08:38:46.871"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:46.877" endtime="20201110 08:38:47.164"></status>
</kw>
<msg timestamp="20201110 08:38:47.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019788264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019879569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:46.876" endtime="20201110 08:38:47.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:47.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019788264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019879569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:47.168" endtime="20201110 08:38:47.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:47.176" endtime="20201110 08:38:47.178"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.873" endtime="20201110 08:38:47.178"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.872" endtime="20201110 08:38:47.179"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:47.183" level="INFO">${RESULT} = [{'time': 0.019879569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.130499999999986e-05, 'source_diff': 9.130499999999986e-05}, {'time': 0.019972597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:47.180" endtime="20201110 08:38:47.183"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:47.198" level="INFO">${ACCURACY} = {'diff': [9.130499999999986e-05, 8.69860000000007e-05, 8.66249999999999e-05, 8.640299999999879e-05, 8.675000000000002e-05, 8.69860000000007e-05, 8.695800000000156e-05, 8.654200000000195e-05, 8.7111000...</msg>
<status status="PASS" starttime="20201110 08:38:47.184" endtime="20201110 08:38:47.198"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:47.202" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201110 08:38:47.201" endtime="20201110 08:38:47.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:47.205" level="INFO">VALUE: [9.130499999999986e-05, 8.69860000000007e-05, 8.66249999999999e-05, 8.640299999999879e-05, 8.675000000000002e-05, 8.69860000000007e-05, 8.695800000000156e-05, 8.654200000000195e-05, 8.711100000000083e-05, 8.663899999999947e-05, 8.634799999999998e-05, 8.686100000000058e-05, 8.704099999999951e-05, 8.655600000000152e-05, 8.634699999999704e-05, 8.68050000000023e-05, 8.645800000000106e-05, 8.669399999999827e-05, 8.708300000000169e-05, 8.711100000000083e-05, 8.680499999999883e-05, 8.637499999999965e-05, 8.687500000000015e-05, 8.711100000000083e-05, 8.616700000000158e-05, 8.681999999999787e-05, 8.672200000000088e-05, 8.636100000000008e-05, 8.651300000000334e-05, 8.701300000000037e-05, 8.694399999999852e-05, 8.709699999999779e-05, 8.61799999999982e-05, 8.620799999999734e-05, 8.686100000000058e-05, 8.670799999999784e-05, 8.624999999999952e-05, 8.684699999999754e-05, 8.652799999999891e-05, 8.701399999999984e-05, 8.637499999999965e-05, 8.661200000000327e-05, 8.64310000000014e-05, 8.63470000000005e-05, 8.630600000000127e-05, 8.645800000000106e-05, 8.688899999999972e-05, 8.654100000000248e-05, 8.663899999999947e-05, 8.619500000000072e-05]</msg>
<status status="PASS" starttime="20201110 08:38:47.203" endtime="20201110 08:38:47.205"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.198" endtime="20201110 08:38:47.206"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:47.208" endtime="20201110 08:38:47.209"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:47.212" endtime="20201110 08:38:47.231"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.210" endtime="20201110 08:38:47.231"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.207" endtime="20201110 08:38:47.232"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.836" endtime="20201110 08:38:47.232"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.835" endtime="20201110 08:38:47.232"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:47.241" endtime="20201110 08:38:47.261"></status>
</kw>
<msg timestamp="20201110 08:38:47.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:47.239" endtime="20201110 08:38:47.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:47.264" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:47.263" endtime="20201110 08:38:47.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:47.265" endtime="20201110 08:38:47.268"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.237" endtime="20201110 08:38:47.268"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.235" endtime="20201110 08:38:47.269"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:47.275" endtime="20201110 08:38:47.561"></status>
</kw>
<msg timestamp="20201110 08:38:47.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019771556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019863569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:47.274" endtime="20201110 08:38:47.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:47.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019771556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019863569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:47.566" endtime="20201110 08:38:47.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:47.574" endtime="20201110 08:38:47.576"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.271" endtime="20201110 08:38:47.576"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.270" endtime="20201110 08:38:47.577"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:47.581" level="INFO">${RESULT} = [{'time': 0.019863569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.20130000000019e-05, 'source_diff': 9.20130000000019e-05}, {'time': 0.019954542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:38:47.577" endtime="20201110 08:38:47.581"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:47.594" level="INFO">${ACCURACY} = {'diff': [9.20130000000019e-05, 8.74449999999985e-05, 8.737500000000065e-05, 8.798599999999823e-05, 8.783300000000244e-05, 8.79730000000016e-05, 8.738900000000022e-05, 8.800000000000127e-05, 8.7318999...</msg>
<status status="PASS" starttime="20201110 08:38:47.582" endtime="20201110 08:38:47.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:47.599" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201110 08:38:47.598" endtime="20201110 08:38:47.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:47.601" level="INFO">VALUE: [9.20130000000019e-05, 8.74449999999985e-05, 8.737500000000065e-05, 8.798599999999823e-05, 8.783300000000244e-05, 8.79730000000016e-05, 8.738900000000022e-05, 8.800000000000127e-05, 8.73189999999989e-05, 8.776400000000059e-05, 8.769399999999927e-05, 8.797200000000213e-05, 8.744500000000197e-05, 8.801400000000084e-05, 8.780600000000277e-05, 8.751399999999687e-05, 8.763900000000047e-05, 8.719499999999825e-05, 8.806899999999965e-05, 8.808300000000269e-05, 8.776400000000059e-05, 8.761099999999786e-05, 8.770800000000231e-05, 8.730499999999933e-05, 8.719399999999877e-05, 8.783299999999897e-05, 8.770800000000231e-05, 8.790300000000029e-05, 8.756999999999862e-05, 8.7944999999999e-05, 8.725000000000052e-05, 8.74449999999985e-05, 8.73189999999989e-05, 8.750000000000077e-05, 8.812499999999793e-05, 8.763900000000047e-05, 8.776400000000059e-05, 8.780499999999983e-05, 8.808299999999922e-05, 8.801399999999737e-05, 8.756900000000262e-05, 8.759700000000176e-05, 8.763900000000047e-05, 8.725000000000052e-05, 8.78059999999993e-05, 8.777800000000016e-05, 8.725000000000052e-05, 8.745900000000154e-05, 8.740200000000031e-05, 8.805500000000008e-05]</msg>
<status status="PASS" starttime="20201110 08:38:47.600" endtime="20201110 08:38:47.602"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.595" endtime="20201110 08:38:47.603"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:47.605" endtime="20201110 08:38:47.606"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:47.608" endtime="20201110 08:38:47.627"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.607" endtime="20201110 08:38:47.628"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.603" endtime="20201110 08:38:47.629"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.233" endtime="20201110 08:38:47.629"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.233" endtime="20201110 08:38:47.629"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:47.638" endtime="20201110 08:38:47.658"></status>
</kw>
<msg timestamp="20201110 08:38:47.658" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:47.636" endtime="20201110 08:38:47.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:47.661" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:47.659" endtime="20201110 08:38:47.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:47.662" endtime="20201110 08:38:47.664"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.634" endtime="20201110 08:38:47.665"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.631" endtime="20201110 08:38:47.665"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:47.672" endtime="20201110 08:38:47.959"></status>
</kw>
<msg timestamp="20201110 08:38:47.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019803333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019896833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:47.670" endtime="20201110 08:38:47.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:47.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019803333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019896833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:47.963" endtime="20201110 08:38:47.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:47.971" endtime="20201110 08:38:47.973"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.668" endtime="20201110 08:38:47.973"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.666" endtime="20201110 08:38:47.974"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:47.978" level="INFO">${RESULT} = [{'time': 0.019896833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.349999999999983e-05, 'source_diff': 9.349999999999983e-05}, {'time': 0.019991847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:47.975" endtime="20201110 08:38:47.978"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:47.992" level="INFO">${ACCURACY} = {'diff': [9.349999999999983e-05, 8.901399999999837e-05, 8.859699999999929e-05, 8.833299999999947e-05, 8.856900000000015e-05, 8.89999999999988e-05, 8.84449999999995e-05, 8.838899999999775e-05, 8.819499...</msg>
<status status="PASS" starttime="20201110 08:38:47.979" endtime="20201110 08:38:47.992"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:47.996" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201110 08:38:47.995" endtime="20201110 08:38:47.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:47.999" level="INFO">VALUE: [9.349999999999983e-05, 8.901399999999837e-05, 8.859699999999929e-05, 8.833299999999947e-05, 8.856900000000015e-05, 8.89999999999988e-05, 8.84449999999995e-05, 8.838899999999775e-05, 8.819499999999925e-05, 8.8638999999998e-05, 8.834699999999904e-05, 8.881999999999987e-05, 8.881999999999987e-05, 8.851400000000134e-05, 8.86800000000007e-05, 8.844400000000002e-05, 8.861099999999886e-05, 8.890299999999782e-05, 8.873599999999898e-05, 8.844400000000002e-05, 8.81670000000001e-05, 8.873600000000245e-05, 8.866699999999714e-05, 8.86670000000006e-05, 8.881999999999987e-05, 8.855600000000005e-05, 8.84999999999983e-05, 8.81670000000001e-05, 8.863799999999852e-05, 8.837499999999818e-05, 8.850000000000177e-05, 8.851400000000134e-05, 8.901400000000184e-05, 8.862499999999843e-05, 8.901400000000184e-05, 8.884699999999954e-05, 8.832000000000284e-05, 8.818099999999968e-05, 8.866599999999766e-05, 8.912499999999893e-05, 8.843099999999993e-05, 8.809699999999879e-05, 8.844400000000002e-05, 8.825000000000152e-05, 8.89999999999988e-05, 8.908300000000022e-05, 8.826400000000109e-05, 8.855500000000058e-05, 8.833299999999947e-05, 8.86250000000019e-05]</msg>
<status status="PASS" starttime="20201110 08:38:47.997" endtime="20201110 08:38:48.004"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.993" endtime="20201110 08:38:48.005"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:48.007" endtime="20201110 08:38:48.008"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:48.010" endtime="20201110 08:38:48.030"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:48.009" endtime="20201110 08:38:48.030"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:48.005" endtime="20201110 08:38:48.031"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.630" endtime="20201110 08:38:48.031"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.629" endtime="20201110 08:38:48.031"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:48.040" endtime="20201110 08:38:48.059"></status>
</kw>
<msg timestamp="20201110 08:38:48.060" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:48.038" endtime="20201110 08:38:48.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:48.062" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:48.061" endtime="20201110 08:38:48.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:48.064" endtime="20201110 08:38:48.066"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:48.036" endtime="20201110 08:38:48.067"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:48.034" endtime="20201110 08:38:48.067"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:48.074" endtime="20201110 08:38:48.360"></status>
</kw>
<msg timestamp="20201110 08:38:48.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019889583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019983347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:48.072" endtime="20201110 08:38:48.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:48.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019889583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019983347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:48.364" endtime="20201110 08:38:48.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:48.372" endtime="20201110 08:38:48.374"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:48.069" endtime="20201110 08:38:48.375"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:48.068" endtime="20201110 08:38:48.375"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:48.379" level="INFO">${RESULT} = [{'time': 0.019983347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.376399999999965e-05, 'source_diff': 9.376399999999965e-05}, {'time': 0.020077389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:48.376" endtime="20201110 08:38:48.379"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:48.393" level="INFO">${ACCURACY} = {'diff': [9.376399999999965e-05, 8.991700000000186e-05, 8.969400000000127e-05, 8.979200000000173e-05, 8.990299999999882e-05, 8.9638999999999e-05, 8.926400000000209e-05, 8.99589999999971e-05, 9.0070000...</msg>
<status status="PASS" starttime="20201110 08:38:48.380" endtime="20201110 08:38:48.393"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:48.397" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201110 08:38:48.396" endtime="20201110 08:38:48.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:48.400" level="INFO">VALUE: [9.376399999999965e-05, 8.991700000000186e-05, 8.969400000000127e-05, 8.979200000000173e-05, 8.990299999999882e-05, 8.9638999999999e-05, 8.926400000000209e-05, 8.99589999999971e-05, 9.007000000000112e-05, 8.951399999999887e-05, 8.99999999999998e-05, 8.916599999999816e-05, 8.988799999999977e-05, 8.920800000000034e-05, 8.987499999999968e-05, 8.969400000000127e-05, 8.930500000000133e-05, 8.995800000000109e-05, 9.005600000000155e-05, 8.920800000000034e-05, 8.965300000000204e-05, 8.962499999999943e-05, 8.94450000000005e-05, 9.011100000000036e-05, 8.969500000000075e-05, 8.988799999999977e-05, 8.966599999999866e-05, 8.956900000000115e-05, 8.9638999999999e-05, 8.926400000000209e-05, 8.947200000000016e-05, 8.969400000000127e-05, 8.958300000000072e-05, 8.986100000000011e-05, 8.919500000000025e-05, 8.919500000000025e-05, 8.98199999999974e-05, 8.993000000000195e-05, 8.951400000000234e-05, 8.954099999999854e-05, 8.969400000000127e-05, 8.983300000000097e-05, 8.916599999999816e-05, 9.001399999999937e-05, 8.973599999999998e-05, 8.987499999999968e-05, 8.922199999999991e-05, 8.938900000000222e-05, 9.015299999999907e-05, 8.934799999999951e-05]</msg>
<status status="PASS" starttime="20201110 08:38:48.398" endtime="20201110 08:38:48.400"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:48.394" endtime="20201110 08:38:48.401"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:48.403" endtime="20201110 08:38:48.405"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:48.407" endtime="20201110 08:38:48.426"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:48.405" endtime="20201110 08:38:48.426"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:48.402" endtime="20201110 08:38:48.427"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:48.032" endtime="20201110 08:38:48.427"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:48.032" endtime="20201110 08:38:48.427"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:48.436" endtime="20201110 08:38:48.456"></status>
</kw>
<msg timestamp="20201110 08:38:48.456" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:48.434" endtime="20201110 08:38:48.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:48.459" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:48.457" endtime="20201110 08:38:48.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:48.460" endtime="20201110 08:38:48.462"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:48.432" endtime="20201110 08:38:48.463"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:48.430" endtime="20201110 08:38:48.463"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:48.470" endtime="20201110 08:38:48.755"></status>
</kw>
<msg timestamp="20201110 08:38:48.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019853028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019947931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:48.468" endtime="20201110 08:38:48.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:48.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019853028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019947931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:48.760" endtime="20201110 08:38:48.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:48.768" endtime="20201110 08:38:48.770"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:48.466" endtime="20201110 08:38:48.770"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:48.464" endtime="20201110 08:38:48.770"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:48.775" level="INFO">${RESULT} = [{'time': 0.019947931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.490299999999688e-05, 'source_diff': 9.490299999999688e-05}, {'time': 0.020042944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:48.771" endtime="20201110 08:38:48.775"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:48.789" level="INFO">${ACCURACY} = {'diff': [9.490299999999688e-05, 9.095799999999862e-05, 9.087499999999721e-05, 9.111099999999789e-05, 9.092999999999948e-05, 9.016699999999864e-05, 9.08329999999985e-05, 9.106899999999918e-05, 9.10559...</msg>
<status status="PASS" starttime="20201110 08:38:48.776" endtime="20201110 08:38:48.790"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:48.794" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201110 08:38:48.793" endtime="20201110 08:38:48.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:48.796" level="INFO">VALUE: [9.490299999999688e-05, 9.095799999999862e-05, 9.087499999999721e-05, 9.111099999999789e-05, 9.092999999999948e-05, 9.016699999999864e-05, 9.08329999999985e-05, 9.106899999999918e-05, 9.105599999999908e-05, 9.10000000000008e-05, 9.091699999999939e-05, 9.056999999999815e-05, 9.108400000000169e-05, 9.073600000000098e-05, 9.105499999999961e-05, 9.086200000000058e-05, 9.081899999999893e-05, 9.026399999999962e-05, 9.073599999999751e-05, 9.055499999999911e-05, 9.10000000000008e-05, 9.05000000000003e-05, 9.105599999999908e-05, 9.025000000000005e-05, 9.027799999999919e-05, 9.012499999999993e-05, 9.033400000000094e-05, 9.015300000000254e-05, 9.09870000000007e-05, 9.075000000000055e-05, 9.077799999999969e-05, 9.026399999999962e-05, 9.037500000000018e-05, 9.0639e-05, 9.043000000000245e-05, 9.044399999999855e-05, 9.101400000000037e-05, 9.062500000000043e-05, 9.054199999999901e-05, 9.0945000000002e-05, 9.10000000000008e-05, 9.094499999999853e-05, 9.070899999999785e-05, 9.083300000000197e-05, 9.073599999999751e-05, 9.031899999999843e-05, 9.069500000000175e-05, 9.036100000000061e-05, 9.022200000000091e-05, 9.04450000000015e-05]</msg>
<status status="PASS" starttime="20201110 08:38:48.795" endtime="20201110 08:38:48.797"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:48.790" endtime="20201110 08:38:48.798"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:48.800" endtime="20201110 08:38:48.801"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:48.803" endtime="20201110 08:38:48.822"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:48.802" endtime="20201110 08:38:48.823"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:48.798" endtime="20201110 08:38:48.824"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:48.428" endtime="20201110 08:38:48.824"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:48.428" endtime="20201110 08:38:48.824"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:48.832" endtime="20201110 08:38:48.852"></status>
</kw>
<msg timestamp="20201110 08:38:48.853" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:48.831" endtime="20201110 08:38:48.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:48.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:48.854" endtime="20201110 08:38:48.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:48.856" endtime="20201110 08:38:48.859"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:48.828" endtime="20201110 08:38:48.860"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:48.826" endtime="20201110 08:38:48.860"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:48.866" endtime="20201110 08:38:49.152"></status>
</kw>
<msg timestamp="20201110 08:38:49.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019758556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019854792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:48.865" endtime="20201110 08:38:49.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:49.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019758556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019854792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:49.156" endtime="20201110 08:38:49.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:49.164" endtime="20201110 08:38:49.166"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:48.862" endtime="20201110 08:38:49.167"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:48.861" endtime="20201110 08:38:49.167"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:49.171" level="INFO">${RESULT} = [{'time': 0.019854792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.623599999999954e-05, 'source_diff': 9.623599999999954e-05}, {'time': 0.019948847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:49.168" endtime="20201110 08:38:49.171"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:49.185" level="INFO">${ACCURACY} = {'diff': [9.623599999999954e-05, 9.142999999999998e-05, 9.176400000000112e-05, 9.162499999999796e-05, 9.111199999999736e-05, 9.177799999999722e-05, 9.21390000000015e-05, 9.212499999999846e-05, 9.20690...</msg>
<status status="PASS" starttime="20201110 08:38:49.172" endtime="20201110 08:38:49.185"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:49.189" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201110 08:38:49.188" endtime="20201110 08:38:49.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:49.192" level="INFO">VALUE: [9.623599999999954e-05, 9.142999999999998e-05, 9.176400000000112e-05, 9.162499999999796e-05, 9.111199999999736e-05, 9.177799999999722e-05, 9.21390000000015e-05, 9.212499999999846e-05, 9.206900000000018e-05, 9.181899999999993e-05, 9.204200000000051e-05, 9.195799999999962e-05, 9.143099999999946e-05, 9.112500000000093e-05, 9.112500000000093e-05, 9.13199999999989e-05, 9.158299999999925e-05, 9.176299999999818e-05, 9.19870000000017e-05, 9.2026999999998e-05, 9.124999999999758e-05, 9.127800000000019e-05, 9.125000000000105e-05, 9.177800000000069e-05, 9.161100000000186e-05, 9.112500000000093e-05, 9.156999999999915e-05, 9.176399999999765e-05, 9.197300000000214e-05, 9.143099999999946e-05, 9.2026999999998e-05, 9.170799999999937e-05, 9.131899999999943e-05, 9.188900000000125e-05, 9.188900000000125e-05, 9.194400000000005e-05, 9.208299999999975e-05, 9.123599999999801e-05, 9.140300000000032e-05, 9.188899999999778e-05, 9.169499999999928e-05, 9.177800000000069e-05, 9.209699999999932e-05, 9.194499999999953e-05, 9.180599999999983e-05, 9.19589999999991e-05, 9.120900000000182e-05, 9.145799999999912e-05, 9.187499999999821e-05, 9.176399999999765e-05]</msg>
<status status="PASS" starttime="20201110 08:38:49.190" endtime="20201110 08:38:49.193"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.186" endtime="20201110 08:38:49.193"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:49.195" endtime="20201110 08:38:49.197"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:49.199" endtime="20201110 08:38:49.218"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.197" endtime="20201110 08:38:49.219"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.194" endtime="20201110 08:38:49.219"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:48.825" endtime="20201110 08:38:49.219"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:48.824" endtime="20201110 08:38:49.219"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:49.228" endtime="20201110 08:38:49.249"></status>
</kw>
<msg timestamp="20201110 08:38:49.249" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:49.227" endtime="20201110 08:38:49.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:49.252" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:49.250" endtime="20201110 08:38:49.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:49.253" endtime="20201110 08:38:49.256"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.224" endtime="20201110 08:38:49.256"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.222" endtime="20201110 08:38:49.257"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:49.263" endtime="20201110 08:38:49.549"></status>
</kw>
<msg timestamp="20201110 08:38:49.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020051278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020148764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:49.261" endtime="20201110 08:38:49.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:49.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020051278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020148764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:49.553" endtime="20201110 08:38:49.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:49.561" endtime="20201110 08:38:49.563"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.259" endtime="20201110 08:38:49.564"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.257" endtime="20201110 08:38:49.564"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:49.568" level="INFO">${RESULT} = [{'time': 0.020148764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.74860000000008e-05, 'source_diff': 9.74860000000008e-05}, {'time': 0.020244806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:38:49.565" endtime="20201110 08:38:49.568"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:49.582" level="INFO">${ACCURACY} = {'diff': [9.74860000000008e-05, 9.291700000000139e-05, 9.263899999999853e-05, 9.216700000000064e-05, 9.272299999999942e-05, 9.28200000000004e-05, 9.277800000000169e-05, 9.2333e-05, 9.244400000000055e-...</msg>
<status status="PASS" starttime="20201110 08:38:49.569" endtime="20201110 08:38:49.582"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:49.586" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201110 08:38:49.585" endtime="20201110 08:38:49.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:49.589" level="INFO">VALUE: [9.74860000000008e-05, 9.291700000000139e-05, 9.263899999999853e-05, 9.216700000000064e-05, 9.272299999999942e-05, 9.28200000000004e-05, 9.277800000000169e-05, 9.2333e-05, 9.244400000000055e-05, 9.245800000000012e-05, 9.230499999999739e-05, 9.276399999999865e-05, 9.21390000000015e-05, 9.223599999999901e-05, 9.219499999999978e-05, 9.311099999999989e-05, 9.298599999999976e-05, 9.30139999999989e-05, 9.28200000000004e-05, 9.26659999999982e-05, 9.3026999999999e-05, 9.21390000000015e-05, 9.218000000000073e-05, 9.305599999999761e-05, 9.236099999999914e-05, 9.2333e-05, 9.274999999999908e-05, 9.252800000000144e-05, 9.26529999999981e-05, 9.248599999999926e-05, 9.237500000000218e-05, 9.25269999999985e-05, 9.279200000000126e-05, 9.256900000000068e-05, 9.222199999999944e-05, 9.243000000000098e-05, 9.224999999999858e-05, 9.306900000000118e-05, 9.2639000000002e-05, 9.234699999999957e-05, 9.308400000000022e-05, 9.29720000000002e-05, 9.244500000000003e-05, 9.266700000000114e-05, 9.299999999999933e-05, 9.24589999999996e-05, 9.28200000000004e-05, 9.287500000000268e-05, 9.276400000000212e-05, 9.223599999999901e-05]</msg>
<status status="PASS" starttime="20201110 08:38:49.587" endtime="20201110 08:38:49.590"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.583" endtime="20201110 08:38:49.590"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:49.593" endtime="20201110 08:38:49.594"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:49.596" endtime="20201110 08:38:49.616"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.595" endtime="20201110 08:38:49.616"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.591" endtime="20201110 08:38:49.617"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.220" endtime="20201110 08:38:49.617"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.220" endtime="20201110 08:38:49.617"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:49.626" endtime="20201110 08:38:49.645"></status>
</kw>
<msg timestamp="20201110 08:38:49.646" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:49.624" endtime="20201110 08:38:49.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:49.648" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:49.647" endtime="20201110 08:38:49.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:49.649" endtime="20201110 08:38:49.652"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.622" endtime="20201110 08:38:49.653"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.620" endtime="20201110 08:38:49.653"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:49.659" endtime="20201110 08:38:49.946"></status>
</kw>
<msg timestamp="20201110 08:38:49.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019897542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019995542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:49.658" endtime="20201110 08:38:49.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:49.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019897542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019995542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:49.950" endtime="20201110 08:38:49.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:49.958" endtime="20201110 08:38:49.960"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.655" endtime="20201110 08:38:49.960"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.654" endtime="20201110 08:38:49.961"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:49.966" level="INFO">${RESULT} = [{'time': 0.019995542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.800000000000086e-05, 'source_diff': 9.800000000000086e-05}, {'time': 0.020093542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:49.962" endtime="20201110 08:38:49.967"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:49.981" level="INFO">${ACCURACY} = {'diff': [9.800000000000086e-05, 9.381999999999793e-05, 9.397199999999772e-05, 9.37079999999979e-05, 9.400000000000033e-05, 9.326400000000262e-05, 9.397199999999772e-05, 9.34720000000007e-05, 9.369399...</msg>
<status status="PASS" starttime="20201110 08:38:49.968" endtime="20201110 08:38:49.981"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:49.986" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201110 08:38:49.984" endtime="20201110 08:38:49.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:49.988" level="INFO">VALUE: [9.800000000000086e-05, 9.381999999999793e-05, 9.397199999999772e-05, 9.37079999999979e-05, 9.400000000000033e-05, 9.326400000000262e-05, 9.397199999999772e-05, 9.34720000000007e-05, 9.369399999999833e-05, 9.356899999999821e-05, 9.394400000000205e-05, 9.380599999999836e-05, 9.359700000000082e-05, 9.362499999999996e-05, 9.358399999999725e-05, 9.380600000000183e-05, 9.322200000000044e-05, 9.391599999999944e-05, 9.405599999999861e-05, 9.404099999999957e-05, 9.352799999999897e-05, 9.338899999999928e-05, 9.343000000000198e-05, 9.395799999999815e-05, 9.393099999999849e-05, 9.312500000000293e-05, 9.387500000000021e-05, 9.400000000000033e-05, 9.395899999999763e-05, 9.393100000000196e-05, 9.331899999999796e-05, 9.31940000000013e-05, 9.380600000000183e-05, 9.379099999999932e-05, 9.330599999999786e-05, 9.390300000000282e-05, 9.362499999999996e-05, 9.317999999999826e-05, 9.40139999999999e-05, 9.35139999999994e-05, 9.344499999999756e-05, 9.349999999999983e-05, 9.404199999999904e-05, 9.369499999999781e-05, 9.338900000000275e-05, 9.319500000000078e-05, 9.313799999999955e-05, 9.318000000000173e-05, 9.390299999999935e-05, 9.324999999999958e-05]</msg>
<status status="PASS" starttime="20201110 08:38:49.987" endtime="20201110 08:38:49.989"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.982" endtime="20201110 08:38:49.990"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:49.992" endtime="20201110 08:38:49.993"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:49.995" endtime="20201110 08:38:50.015"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.994" endtime="20201110 08:38:50.015"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.990" endtime="20201110 08:38:50.016"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.618" endtime="20201110 08:38:50.016"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.617" endtime="20201110 08:38:50.016"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:50.025" endtime="20201110 08:38:50.046"></status>
</kw>
<msg timestamp="20201110 08:38:50.046" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:50.023" endtime="20201110 08:38:50.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:50.049" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:50.047" endtime="20201110 08:38:50.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:50.050" endtime="20201110 08:38:50.052"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.021" endtime="20201110 08:38:50.053"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.019" endtime="20201110 08:38:50.053"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:50.060" endtime="20201110 08:38:50.345"></status>
</kw>
<msg timestamp="20201110 08:38:50.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020153111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020252528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:50.058" endtime="20201110 08:38:50.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:50.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020153111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020252528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:50.349" endtime="20201110 08:38:50.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:50.357" endtime="20201110 08:38:50.359"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.056" endtime="20201110 08:38:50.359"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.054" endtime="20201110 08:38:50.360"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:50.364" level="INFO">${RESULT} = [{'time': 0.020252528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.941699999999748e-05, 'source_diff': 9.941699999999748e-05}, {'time': 0.020349542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:50.360" endtime="20201110 08:38:50.364"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:50.379" level="INFO">${ACCURACY} = {'diff': [9.941699999999748e-05, 9.413900000000003e-05, 9.512500000000146e-05, 9.415200000000012e-05, 9.429099999999982e-05, 9.437500000000071e-05, 9.502800000000047e-05, 9.433299999999853e-05, 9.5068...</msg>
<status status="PASS" starttime="20201110 08:38:50.365" endtime="20201110 08:38:50.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:50.383" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201110 08:38:50.382" endtime="20201110 08:38:50.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:50.386" level="INFO">VALUE: [9.941699999999748e-05, 9.413900000000003e-05, 9.512500000000146e-05, 9.415200000000012e-05, 9.429099999999982e-05, 9.437500000000071e-05, 9.502800000000047e-05, 9.433299999999853e-05, 9.506899999999971e-05, 9.45140000000004e-05, 9.41940000000023e-05, 9.476299999999771e-05, 9.483400000000197e-05, 9.46530000000001e-05, 9.456999999999868e-05, 9.480499999999989e-05, 9.438900000000028e-05, 9.476400000000065e-05, 9.490200000000087e-05, 9.481899999999946e-05, 9.467999999999976e-05, 9.476399999999718e-05, 9.458299999999878e-05, 9.455499999999964e-05, 9.461100000000139e-05, 9.501399999999743e-05, 9.425000000000058e-05, 9.430600000000233e-05, 9.48200000000024e-05, 9.430599999999886e-05, 9.481999999999893e-05, 9.493099999999949e-05, 9.493000000000001e-05, 9.436099999999767e-05, 9.451399999999693e-05, 9.430499999999939e-05, 9.469399999999933e-05, 9.430500000000286e-05, 9.476400000000065e-05, 9.48339999999985e-05, 9.494499999999906e-05, 9.443099999999899e-05, 9.476400000000065e-05, 9.493099999999949e-05, 9.509699999999885e-05, 9.493100000000296e-05, 9.47079999999989e-05, 9.494399999999958e-05, 9.424999999999711e-05, 9.476400000000065e-05]</msg>
<status status="PASS" starttime="20201110 08:38:50.384" endtime="20201110 08:38:50.386"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.380" endtime="20201110 08:38:50.387"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:50.389" endtime="20201110 08:38:50.391"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:50.393" endtime="20201110 08:38:50.412"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.391" endtime="20201110 08:38:50.413"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.388" endtime="20201110 08:38:50.413"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.017" endtime="20201110 08:38:50.413"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.017" endtime="20201110 08:38:50.413"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:50.422" endtime="20201110 08:38:50.442"></status>
</kw>
<msg timestamp="20201110 08:38:50.443" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:50.420" endtime="20201110 08:38:50.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:50.445" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:50.444" endtime="20201110 08:38:50.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:50.446" endtime="20201110 08:38:50.449"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.418" endtime="20201110 08:38:50.449"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.416" endtime="20201110 08:38:50.450"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:50.456" endtime="20201110 08:38:50.742"></status>
</kw>
<msg timestamp="20201110 08:38:50.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019849597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019949931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:50.455" endtime="20201110 08:38:50.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:50.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019849597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019949931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:50.746" endtime="20201110 08:38:50.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:50.754" endtime="20201110 08:38:50.756"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.452" endtime="20201110 08:38:50.757"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.450" endtime="20201110 08:38:50.757"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:50.761" level="INFO">${RESULT} = [{'time': 0.019949931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010033400000000053, 'source_diff': 0.00010033400000000053}, {'time': 0.020051931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:50.758" endtime="20201110 08:38:50.761"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:50.775" level="INFO">${ACCURACY} = {'diff': [0.00010033400000000053, 9.613899999999856e-05, 9.558299999999978e-05, 9.555500000000064e-05, 9.613900000000203e-05, 9.531899999999996e-05, 9.543000000000051e-05, 9.518000000000026e-05, 9.527...</msg>
<status status="PASS" starttime="20201110 08:38:50.762" endtime="20201110 08:38:50.775"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:50.779" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201110 08:38:50.778" endtime="20201110 08:38:50.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:50.782" level="INFO">VALUE: [0.00010033400000000053, 9.613899999999856e-05, 9.558299999999978e-05, 9.555500000000064e-05, 9.613900000000203e-05, 9.531899999999996e-05, 9.543000000000051e-05, 9.518000000000026e-05, 9.527800000000072e-05, 9.531899999999996e-05, 9.607000000000018e-05, 9.556999999999968e-05, 9.607000000000018e-05, 9.607000000000018e-05, 9.51530000000006e-05, 9.607000000000018e-05, 9.563799999999859e-05, 9.573599999999904e-05, 9.575000000000208e-05, 9.556900000000021e-05, 9.588900000000178e-05, 9.581999999999993e-05, 9.540300000000085e-05, 9.613899999999856e-05, 9.574999999999861e-05, 9.556999999999968e-05, 9.54019999999979e-05, 9.605600000000061e-05, 9.60140000000019e-05, 9.561099999999892e-05, 9.562500000000196e-05, 9.599999999999886e-05, 9.550000000000183e-05, 9.549999999999836e-05, 9.513900000000103e-05, 9.608300000000028e-05, 9.586100000000264e-05, 9.583300000000003e-05, 9.519499999999931e-05, 9.594500000000006e-05, 9.562500000000196e-05, 9.563899999999806e-05, 9.543099999999999e-05, 9.602699999999853e-05, 9.537500000000171e-05, 9.594400000000058e-05, 9.538900000000128e-05, 9.575000000000208e-05, 9.544400000000008e-05, 9.606900000000071e-05]</msg>
<status status="PASS" starttime="20201110 08:38:50.780" endtime="20201110 08:38:50.783"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.776" endtime="20201110 08:38:50.783"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:50.785" endtime="20201110 08:38:50.787"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:50.789" endtime="20201110 08:38:50.808"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.787" endtime="20201110 08:38:50.809"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.784" endtime="20201110 08:38:50.809"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.414" endtime="20201110 08:38:50.809"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.414" endtime="20201110 08:38:50.810"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:50.818" endtime="20201110 08:38:50.839"></status>
</kw>
<msg timestamp="20201110 08:38:50.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:50.817" endtime="20201110 08:38:50.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:50.842" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:50.840" endtime="20201110 08:38:50.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:50.843" endtime="20201110 08:38:50.845"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.814" endtime="20201110 08:38:50.846"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.812" endtime="20201110 08:38:50.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:50.853" endtime="20201110 08:38:51.138"></status>
</kw>
<msg timestamp="20201110 08:38:51.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019741222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019842667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:50.851" endtime="20201110 08:38:51.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:51.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019741222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019842667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:51.142" endtime="20201110 08:38:51.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:51.150" endtime="20201110 08:38:51.152"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.849" endtime="20201110 08:38:51.153"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.847" endtime="20201110 08:38:51.153"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:51.157" level="INFO">${RESULT} = [{'time': 0.019842667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010144500000000209, 'source_diff': 0.00010144500000000209}, {'time': 0.019945639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:51.154" endtime="20201110 08:38:51.157"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:51.171" level="INFO">${ACCURACY} = {'diff': [0.00010144500000000209, 9.705600000000161e-05, 9.692999999999855e-05, 9.715199999999966e-05, 9.620899999999988e-05, 9.656900000000121e-05, 9.641700000000142e-05, 9.613899999999856e-05, 9.712...</msg>
<status status="PASS" starttime="20201110 08:38:51.158" endtime="20201110 08:38:51.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:51.175" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201110 08:38:51.174" endtime="20201110 08:38:51.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:51.178" level="INFO">VALUE: [0.00010144500000000209, 9.705600000000161e-05, 9.692999999999855e-05, 9.715199999999966e-05, 9.620899999999988e-05, 9.656900000000121e-05, 9.641700000000142e-05, 9.613899999999856e-05, 9.712499999999999e-05, 9.705500000000214e-05, 9.64859999999998e-05, 9.709700000000085e-05, 9.650000000000283e-05, 9.638899999999881e-05, 9.637499999999924e-05, 9.645900000000013e-05, 9.611099999999942e-05, 9.63059999999974e-05, 9.686100000000017e-05, 9.644400000000108e-05, 9.699999999999986e-05, 9.697200000000072e-05, 9.663899999999906e-05, 9.627800000000172e-05, 9.690300000000235e-05, 9.681999999999746e-05, 9.682000000000093e-05, 9.695900000000063e-05, 9.699999999999986e-05, 9.6334e-05, 9.649999999999936e-05, 9.619500000000031e-05, 9.702699999999953e-05, 9.64859999999998e-05, 9.61799999999978e-05, 9.681900000000146e-05, 9.692999999999855e-05, 9.67080000000009e-05, 9.681900000000146e-05, 9.709700000000085e-05, 9.623599999999954e-05, 9.652800000000197e-05, 9.670900000000038e-05, 9.658300000000078e-05, 9.620799999999693e-05, 9.681899999999799e-05, 9.613900000000203e-05, 9.676299999999971e-05, 9.62080000000004e-05, 9.613899999999856e-05]</msg>
<status status="PASS" starttime="20201110 08:38:51.176" endtime="20201110 08:38:51.179"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.172" endtime="20201110 08:38:51.179"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:51.181" endtime="20201110 08:38:51.183"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:51.185" endtime="20201110 08:38:51.204"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.183" endtime="20201110 08:38:51.205"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.180" endtime="20201110 08:38:51.205"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.810" endtime="20201110 08:38:51.205"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.810" endtime="20201110 08:38:51.206"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:51.214" endtime="20201110 08:38:51.234"></status>
</kw>
<msg timestamp="20201110 08:38:51.235" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:51.213" endtime="20201110 08:38:51.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:51.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:51.236" endtime="20201110 08:38:51.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:51.238" endtime="20201110 08:38:51.241"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.210" endtime="20201110 08:38:51.241"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.208" endtime="20201110 08:38:51.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:51.248" endtime="20201110 08:38:51.532"></status>
</kw>
<msg timestamp="20201110 08:38:51.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019811819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019914264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:51.246" endtime="20201110 08:38:51.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:51.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019811819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019914264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:51.537" endtime="20201110 08:38:51.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:51.545" endtime="20201110 08:38:51.547"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.244" endtime="20201110 08:38:51.547"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.242" endtime="20201110 08:38:51.548"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:51.552" level="INFO">${RESULT} = [{'time': 0.019914264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010244499999999962, 'source_diff': 0.00010244499999999962}, {'time': 0.02001525, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201110 08:38:51.548" endtime="20201110 08:38:51.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:51.565" level="INFO">${ACCURACY} = {'diff': [0.00010244499999999962, 9.731899999999849e-05, 9.737500000000024e-05, 9.719500000000131e-05, 9.738899999999981e-05, 9.74860000000008e-05, 9.779099999999985e-05, 9.74019999999999e-05, 9.71380...</msg>
<status status="PASS" starttime="20201110 08:38:51.553" endtime="20201110 08:38:51.566"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:51.570" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201110 08:38:51.569" endtime="20201110 08:38:51.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:51.572" level="INFO">VALUE: [0.00010244499999999962, 9.731899999999849e-05, 9.737500000000024e-05, 9.719500000000131e-05, 9.738899999999981e-05, 9.74860000000008e-05, 9.779099999999985e-05, 9.74019999999999e-05, 9.713800000000009e-05, 9.738899999999981e-05, 9.794399999999912e-05, 9.755499999999917e-05, 9.801400000000043e-05, 9.769399999999887e-05, 9.713899999999956e-05, 9.727799999999925e-05, 9.78059999999989e-05, 9.738899999999981e-05, 9.737500000000024e-05, 9.815200000000066e-05, 9.758400000000125e-05, 9.802700000000053e-05, 9.758299999999831e-05, 9.769399999999887e-05, 9.769399999999887e-05, 9.730500000000239e-05, 9.744400000000208e-05, 9.793099999999902e-05, 9.738899999999981e-05, 9.777799999999975e-05, 9.795899999999816e-05, 9.774999999999714e-05, 9.773600000000104e-05, 9.768000000000276e-05, 9.732000000000143e-05, 9.763900000000006e-05, 9.806899999999924e-05, 9.725000000000011e-05, 9.713899999999956e-05, 9.759699999999788e-05, 9.72080000000014e-05, 9.74999999999969e-05, 9.737500000000024e-05, 9.793099999999902e-05, 9.782000000000193e-05, 9.787500000000074e-05, 9.809699999999838e-05, 9.763900000000006e-05, 9.718100000000174e-05, 9.765200000000016e-05]</msg>
<status status="PASS" starttime="20201110 08:38:51.571" endtime="20201110 08:38:51.573"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.566" endtime="20201110 08:38:51.574"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:51.576" endtime="20201110 08:38:51.577"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:51.579" endtime="20201110 08:38:51.599"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.578" endtime="20201110 08:38:51.599"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.574" endtime="20201110 08:38:51.600"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.206" endtime="20201110 08:38:51.600"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.206" endtime="20201110 08:38:51.600"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:51.609" endtime="20201110 08:38:51.629"></status>
</kw>
<msg timestamp="20201110 08:38:51.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:51.607" endtime="20201110 08:38:51.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:51.632" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:51.631" endtime="20201110 08:38:51.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:51.633" endtime="20201110 08:38:51.636"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.605" endtime="20201110 08:38:51.637"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.603" endtime="20201110 08:38:51.637"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:51.643" endtime="20201110 08:38:51.929"></status>
</kw>
<msg timestamp="20201110 08:38:51.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019781444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019884861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:51.642" endtime="20201110 08:38:51.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:51.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019781444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019884861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:51.934" endtime="20201110 08:38:51.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:51.942" endtime="20201110 08:38:51.944"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.639" endtime="20201110 08:38:51.944"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.638" endtime="20201110 08:38:51.944"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:51.949" level="INFO">${RESULT} = [{'time': 0.019884861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010341700000000148, 'source_diff': 0.00010341700000000148}, {'time': 0.019987792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:51.945" endtime="20201110 08:38:51.949"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:51.963" level="INFO">${ACCURACY} = {'diff': [0.00010341700000000148, 9.84860000000018e-05, 9.812499999999752e-05, 9.850000000000136e-05, 9.838900000000081e-05, 9.901399999999796e-05, 9.905500000000067e-05, 9.836100000000167e-05, 9.8818...</msg>
<status status="PASS" starttime="20201110 08:38:51.949" endtime="20201110 08:38:51.964"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:51.968" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201110 08:38:51.967" endtime="20201110 08:38:51.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:51.970" level="INFO">VALUE: [0.00010341700000000148, 9.84860000000018e-05, 9.812499999999752e-05, 9.850000000000136e-05, 9.838900000000081e-05, 9.901399999999796e-05, 9.905500000000067e-05, 9.836100000000167e-05, 9.881899999999999e-05, 9.851400000000093e-05, 9.843099999999952e-05, 9.862500000000149e-05, 9.912499999999852e-05, 9.837499999999777e-05, 9.858299999999931e-05, 9.881999999999946e-05, 9.908299999999981e-05, 9.826400000000068e-05, 9.873599999999857e-05, 9.908299999999981e-05, 9.90410000000011e-05, 9.819399999999937e-05, 9.837500000000124e-05, 9.870799999999944e-05, 9.901400000000143e-05, 9.819499999999884e-05, 9.870900000000238e-05, 9.881999999999946e-05, 9.85280000000005e-05, 9.834800000000157e-05, 9.825000000000111e-05, 9.909699999999938e-05, 9.845799999999919e-05, 9.893000000000055e-05, 9.840199999999744e-05, 9.862499999999802e-05, 9.865300000000063e-05, 9.83059999999994e-05, 9.89999999999984e-05, 9.870899999999891e-05, 9.850000000000136e-05, 9.858399999999878e-05, 9.844499999999909e-05, 9.815200000000066e-05, 9.833299999999906e-05, 9.823600000000154e-05, 9.906900000000024e-05, 9.833300000000253e-05, 9.831899999999949e-05, 9.877800000000075e-05]</msg>
<status status="PASS" starttime="20201110 08:38:51.969" endtime="20201110 08:38:51.971"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.964" endtime="20201110 08:38:51.972"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:51.974" endtime="20201110 08:38:51.975"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:51.977" endtime="20201110 08:38:51.997"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.976" endtime="20201110 08:38:51.997"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.972" endtime="20201110 08:38:51.998"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.601" endtime="20201110 08:38:51.998"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.600" endtime="20201110 08:38:51.998"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:52.008" endtime="20201110 08:38:52.028"></status>
</kw>
<msg timestamp="20201110 08:38:52.029" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:52.006" endtime="20201110 08:38:52.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:52.031" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:52.030" endtime="20201110 08:38:52.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:52.032" endtime="20201110 08:38:52.035"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.003" endtime="20201110 08:38:52.036"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.001" endtime="20201110 08:38:52.036"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:52.042" endtime="20201110 08:38:52.328"></status>
</kw>
<msg timestamp="20201110 08:38:52.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021246486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021350625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:52.041" endtime="20201110 08:38:52.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:52.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021246486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021350625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:52.332" endtime="20201110 08:38:52.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:52.341" endtime="20201110 08:38:52.342"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.038" endtime="20201110 08:38:52.343"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.037" endtime="20201110 08:38:52.343"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:52.347" level="INFO">${RESULT} = [{'time': 0.021350625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010413900000000309, 'source_diff': 0.00010413900000000309}, {'time': 0.021453653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:52.344" endtime="20201110 08:38:52.347"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:52.361" level="INFO">${ACCURACY} = {'diff': [0.00010413900000000309, 0.00010002799999999853, 0.00010017999999999833, 9.943100000000052e-05, 9.951400000000193e-05, 9.911099999999895e-05, 9.959699999999988e-05, 9.926399999999821e-05, 9.9...</msg>
<status status="PASS" starttime="20201110 08:38:52.348" endtime="20201110 08:38:52.361"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:52.365" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201110 08:38:52.364" endtime="20201110 08:38:52.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:52.368" level="INFO">VALUE: [0.00010413900000000309, 0.00010002799999999853, 0.00010017999999999833, 9.943100000000052e-05, 9.951400000000193e-05, 9.911099999999895e-05, 9.959699999999988e-05, 9.926399999999821e-05, 9.919400000000037e-05, 9.923599999999907e-05, 0.00010002799999999853, 9.91939999999969e-05, 9.994400000000112e-05, 9.931999999999996e-05, 9.995900000000016e-05, 9.943100000000052e-05, 9.93060000000004e-05, 0.000100028000000002, 9.943100000000052e-05, 0.00010001299999999949, 9.947199999999976e-05, 9.987499999999927e-05, 9.958299999999684e-05, 9.929200000000082e-05, 9.93609999999992e-05, 9.937500000000224e-05, 9.982000000000046e-05, 9.995900000000016e-05, 9.918100000000027e-05, 9.95410000000016e-05, 9.991600000000198e-05, 9.965199999999869e-05, 9.983299999999709e-05, 9.9722e-05, 9.962499999999902e-05, 9.945800000000019e-05, 9.961099999999945e-05, 9.961099999999945e-05, 9.920799999999994e-05, 0.00010007000000000071, 9.997200000000026e-05, 0.00010007000000000071, 9.933399999999953e-05, 0.00010002699999999906, 0.0001000419999999981, 9.963900000000206e-05, 9.913899999999809e-05, 9.994400000000112e-05, 9.958300000000031e-05, 9.977800000000175e-05]</msg>
<status status="PASS" starttime="20201110 08:38:52.366" endtime="20201110 08:38:52.369"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.362" endtime="20201110 08:38:52.369"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:52.371" endtime="20201110 08:38:52.373"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:52.375" endtime="20201110 08:38:52.394"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.373" endtime="20201110 08:38:52.395"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.370" endtime="20201110 08:38:52.395"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.999" endtime="20201110 08:38:52.395"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.999" endtime="20201110 08:38:52.396"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:52.404" endtime="20201110 08:38:52.425"></status>
</kw>
<msg timestamp="20201110 08:38:52.426" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:52.403" endtime="20201110 08:38:52.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:52.428" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:52.427" endtime="20201110 08:38:52.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:52.429" endtime="20201110 08:38:52.432"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.400" endtime="20201110 08:38:52.432"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.398" endtime="20201110 08:38:52.433"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:52.439" endtime="20201110 08:38:52.724"></status>
</kw>
<msg timestamp="20201110 08:38:52.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019816583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019921194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:52.438" endtime="20201110 08:38:52.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:52.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019816583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019921194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:52.728" endtime="20201110 08:38:52.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:52.736" endtime="20201110 08:38:52.738"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.435" endtime="20201110 08:38:52.738"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.433" endtime="20201110 08:38:52.739"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:52.743" level="INFO">${RESULT} = [{'time': 0.019921194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010461100000000098, 'source_diff': 0.00010461100000000098}, {'time': 0.020026208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:52.739" endtime="20201110 08:38:52.743"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:52.756" level="INFO">${ACCURACY} = {'diff': [0.00010461100000000098, 0.00010106899999999877, 0.00010077799999999928, 0.00010109700000000138, 0.00010081899999999852, 0.00010026399999999921, 0.00010088899999999984, 0.00010019499999999737...</msg>
<status status="PASS" starttime="20201110 08:38:52.744" endtime="20201110 08:38:52.756"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:52.761" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201110 08:38:52.760" endtime="20201110 08:38:52.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:52.763" level="INFO">VALUE: [0.00010461100000000098, 0.00010106899999999877, 0.00010077799999999928, 0.00010109700000000138, 0.00010081899999999852, 0.00010026399999999921, 0.00010088899999999984, 0.00010019499999999737, 0.00010038899999999934, 0.00010069500000000134, 0.00010051399999999946, 0.00010080599999999842, 0.00010070800000000144, 0.00010044399999999815, 0.00010087500000000027, 0.00010051399999999946, 0.00010026400000000268, 0.00010048599999999686, 0.00010098600000000083, 0.00010015300000000213, 0.00010091699999999898, 0.00010070900000000091, 0.00010082000000000146, 0.0001004999999999999, 0.00010062500000000002, 0.00010076399999999971, 0.00010095799999999822, 0.00010058300000000131, 0.00010056900000000174, 0.00010063899999999959, 0.00010073600000000058, 0.00010081899999999852, 0.00010101399999999996, 0.00010080499999999895, 0.00010107000000000171, 0.00010101399999999996, 0.00010075000000000014, 0.00010095900000000116, 0.00010090199999999994, 0.00010094399999999865, 0.00010024999999999964, 0.00010090299999999941, 0.00010087500000000027, 0.00010080500000000242, 0.00010051399999999946, 0.00010015299999999866, 0.00010045900000000066, 0.00010029200000000182, 0.00010111099999999748, 0.00010107000000000171]</msg>
<status status="PASS" starttime="20201110 08:38:52.762" endtime="20201110 08:38:52.764"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.757" endtime="20201110 08:38:52.764"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:52.767" endtime="20201110 08:38:52.768"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:52.770" endtime="20201110 08:38:52.789"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.769" endtime="20201110 08:38:52.790"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.765" endtime="20201110 08:38:52.790"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.396" endtime="20201110 08:38:52.791"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.396" endtime="20201110 08:38:52.791"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:52.799" endtime="20201110 08:38:52.820"></status>
</kw>
<msg timestamp="20201110 08:38:52.821" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:52.798" endtime="20201110 08:38:52.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:52.823" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:52.822" endtime="20201110 08:38:52.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:52.824" endtime="20201110 08:38:52.827"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.795" endtime="20201110 08:38:52.828"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.793" endtime="20201110 08:38:52.828"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:52.834" endtime="20201110 08:38:53.120"></status>
</kw>
<msg timestamp="20201110 08:38:53.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019733222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019839361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:52.833" endtime="20201110 08:38:53.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:53.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019733222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019839361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:53.125" endtime="20201110 08:38:53.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:53.133" endtime="20201110 08:38:53.135"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.830" endtime="20201110 08:38:53.135"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.829" endtime="20201110 08:38:53.136"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:53.140" level="INFO">${RESULT} = [{'time': 0.019839361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010613899999999815, 'source_diff': 0.00010613899999999815}, {'time': 0.019944389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:53.136" endtime="20201110 08:38:53.140"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:53.153" level="INFO">${ACCURACY} = {'diff': [0.00010613899999999815, 0.0001013610000000012, 0.00010208400000000228, 0.0001020000000000014, 0.00010147300000000123, 0.00010208300000000281, 0.00010156900000000274, 0.00010198699999999783, ...</msg>
<status status="PASS" starttime="20201110 08:38:53.141" endtime="20201110 08:38:53.153"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:53.158" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201110 08:38:53.157" endtime="20201110 08:38:53.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:53.160" level="INFO">VALUE: [0.00010613899999999815, 0.0001013610000000012, 0.00010208400000000228, 0.0001020000000000014, 0.00010147300000000123, 0.00010208300000000281, 0.00010156900000000274, 0.00010198699999999783, 0.000101722000000002, 0.00010137500000000077, 0.00010184699999999866, 0.00010183300000000256, 0.00010202800000000053, 0.00010158299999999884, 0.00010126399999999675, 0.00010151400000000046, 0.00010208399999999881, 0.00010112499999999705, 0.00010207000000000271, 0.00010204100000000063, 0.00010179199999999985, 0.0001020000000000014, 0.00010126400000000021, 0.00010175000000000115, 0.00010194399999999965, 0.00010134700000000163, 0.00010120799999999847, 0.0001013199999999985, 0.0001011809999999988, 0.00010197299999999826, 0.00010215200000000119, 0.00010180599999999942, 0.00010147199999999829, 0.00010208299999999934, 0.0001016939999999994, 0.00010180499999999995, 0.00010195800000000269, 0.00010184700000000213, 0.00010131899999999902, 0.00010124999999999718, 0.00010133400000000153, 0.00010176400000000071, 0.00010202800000000053, 0.00010172300000000148, 0.00010170899999999844, 0.00010193000000000008, 0.00010197199999999879, 0.00010188900000000084, 0.00010191699999999998, 0.00010198599999999836]</msg>
<status status="PASS" starttime="20201110 08:38:53.159" endtime="20201110 08:38:53.165"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.154" endtime="20201110 08:38:53.165"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:53.168" endtime="20201110 08:38:53.169"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:53.171" endtime="20201110 08:38:53.190"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.169" endtime="20201110 08:38:53.191"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.166" endtime="20201110 08:38:53.191"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.792" endtime="20201110 08:38:53.192"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.791" endtime="20201110 08:38:53.192"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:53.200" endtime="20201110 08:38:53.221"></status>
</kw>
<msg timestamp="20201110 08:38:53.221" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:53.199" endtime="20201110 08:38:53.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:53.224" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:53.222" endtime="20201110 08:38:53.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:53.225" endtime="20201110 08:38:53.227"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.196" endtime="20201110 08:38:53.228"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.194" endtime="20201110 08:38:53.228"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:53.235" endtime="20201110 08:38:53.520"></status>
</kw>
<msg timestamp="20201110 08:38:53.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019841694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019949167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:53.233" endtime="20201110 08:38:53.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:53.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019841694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019949167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:53.524" endtime="20201110 08:38:53.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:53.532" endtime="20201110 08:38:53.534"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.231" endtime="20201110 08:38:53.534"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.229" endtime="20201110 08:38:53.535"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:53.539" level="INFO">${RESULT} = [{'time': 0.019949167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010747300000000029, 'source_diff': 0.00010747300000000029}, {'time': 0.020057153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:53.535" endtime="20201110 08:38:53.539"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:53.553" level="INFO">${ACCURACY} = {'diff': [0.00010747300000000029, 0.00010275000000000215, 0.00010212500000000152, 0.00010293100000000055, 0.00010288800000000237, 0.00010265200000000169, 0.00010308300000000034, 0.00010244400000000015...</msg>
<status status="PASS" starttime="20201110 08:38:53.540" endtime="20201110 08:38:53.554"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:53.558" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201110 08:38:53.557" endtime="20201110 08:38:53.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:53.560" level="INFO">VALUE: [0.00010747300000000029, 0.00010275000000000215, 0.00010212500000000152, 0.00010293100000000055, 0.00010288800000000237, 0.00010265200000000169, 0.00010308300000000034, 0.00010244400000000015, 0.00010261100000000245, 0.00010249999999999843, 0.00010261099999999898, 0.0001023749999999983, 0.00010295899999999969, 0.0001023749999999983, 0.00010272199999999954, 0.0001023610000000022, 0.00010311099999999948, 0.00010263899999999812, 0.0001022359999999986, 0.00010243000000000058, 0.00010236099999999873, 0.00010226400000000122, 0.00010293000000000108, 0.00010222199999999904, 0.00010234699999999916, 0.00010288900000000184, 0.00010222300000000198, 0.00010293100000000055, 0.00010295899999999969, 0.00010236200000000167, 0.00010215199999999772, 0.00010313899999999862, 0.00010312499999999905, 0.00010302799999999807, 0.00010262500000000202, 0.00010299999999999893, 0.00010234699999999916, 0.0001028619999999987, 0.00010290299999999794, 0.00010279200000000085, 0.00010269499999999987, 0.00010280600000000042, 0.00010244400000000015, 0.00010294400000000065, 0.00010226400000000122, 0.00010252800000000103, 0.00010283300000000009, 0.00010281900000000052, 0.00010279200000000085, 0.00010266699999999726]</msg>
<status status="PASS" starttime="20201110 08:38:53.559" endtime="20201110 08:38:53.561"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.554" endtime="20201110 08:38:53.562"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:53.564" endtime="20201110 08:38:53.565"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:53.567" endtime="20201110 08:38:53.586"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.566" endtime="20201110 08:38:53.587"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.562" endtime="20201110 08:38:53.587"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.193" endtime="20201110 08:38:53.588"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.192" endtime="20201110 08:38:53.588"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:53.597" endtime="20201110 08:38:53.617"></status>
</kw>
<msg timestamp="20201110 08:38:53.618" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:53.595" endtime="20201110 08:38:53.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:53.620" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:53.619" endtime="20201110 08:38:53.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:53.621" endtime="20201110 08:38:53.624"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.592" endtime="20201110 08:38:53.624"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.590" endtime="20201110 08:38:53.625"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:53.631" endtime="20201110 08:38:53.916"></status>
</kw>
<msg timestamp="20201110 08:38:53.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019806972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019915306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:53.630" endtime="20201110 08:38:53.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:53.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019806972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019915306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:53.920" endtime="20201110 08:38:53.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:53.928" endtime="20201110 08:38:53.930"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.627" endtime="20201110 08:38:53.930"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.625" endtime="20201110 08:38:53.931"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:53.935" level="INFO">${RESULT} = [{'time': 0.019915306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001083340000000016, 'source_diff': 0.0001083340000000016}, {'time': 0.020022306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:53.932" endtime="20201110 08:38:53.935"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:53.948" level="INFO">${ACCURACY} = {'diff': [0.0001083340000000016, 0.00010312499999999905, 0.0001038879999999999, 0.00010340300000000191, 0.00010398600000000036, 0.00010408300000000134, 0.00010399999999999993, 0.00010366700000000173, ...</msg>
<status status="PASS" starttime="20201110 08:38:53.936" endtime="20201110 08:38:53.948"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:53.953" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201110 08:38:53.952" endtime="20201110 08:38:53.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:53.955" level="INFO">VALUE: [0.0001083340000000016, 0.00010312499999999905, 0.0001038879999999999, 0.00010340300000000191, 0.00010398600000000036, 0.00010408300000000134, 0.00010399999999999993, 0.00010366700000000173, 0.0001037360000000001, 0.00010384800000000013, 0.00010329200000000135, 0.00010336099999999973, 0.00010386100000000023, 0.00010338800000000287, 0.00010322200000000004, 0.0001040689999999983, 0.00010380500000000195, 0.00010379099999999891, 0.0001036940000000014, 0.00010412499999999658, 0.00010383299999999762, 0.0001033749999999993, 0.00010355600000000117, 0.00010376400000000272, 0.00010408400000000081, 0.00010351400000000247, 0.00010374999999999968, 0.00010323700000000255, 0.00010409700000000091, 0.00010324999999999918, 0.00010338899999999887, 0.00010398600000000036, 0.00010381899999999805, 0.00010398600000000036, 0.00010365300000000216, 0.00010415300000000266, 0.00010374999999999968, 0.00010352799999999857, 0.0001031810000000008, 0.00010391700000000198, 0.00010343099999999758, 0.00010358300000000084, 0.00010344500000000062, 0.00010394500000000112, 0.00010331900000000102, 0.00010338899999999887, 0.0001035689999999978, 0.00010326399999999875, 0.00010312500000000252, 0.00010397300000000026]</msg>
<status status="PASS" starttime="20201110 08:38:53.954" endtime="20201110 08:38:53.956"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.949" endtime="20201110 08:38:53.957"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:53.959" endtime="20201110 08:38:53.960"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:53.962" endtime="20201110 08:38:53.981"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.961" endtime="20201110 08:38:53.982"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.957" endtime="20201110 08:38:53.983"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.589" endtime="20201110 08:38:53.983"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.588" endtime="20201110 08:38:53.983"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:53.992" endtime="20201110 08:38:54.013"></status>
</kw>
<msg timestamp="20201110 08:38:54.013" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:53.990" endtime="20201110 08:38:54.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:54.015" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:54.014" endtime="20201110 08:38:54.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:54.016" endtime="20201110 08:38:54.019"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.987" endtime="20201110 08:38:54.020"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.985" endtime="20201110 08:38:54.020"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:54.027" endtime="20201110 08:38:54.313"></status>
</kw>
<msg timestamp="20201110 08:38:54.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019785736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019895042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:54.025" endtime="20201110 08:38:54.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:54.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019785736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019895042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:54.317" endtime="20201110 08:38:54.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:54.325" endtime="20201110 08:38:54.327"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.022" endtime="20201110 08:38:54.327"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.021" endtime="20201110 08:38:54.328"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:54.332" level="INFO">${RESULT} = [{'time': 0.019895042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010930599999999999, 'source_diff': 0.00010930599999999999}, {'time': 0.020002056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:54.329" endtime="20201110 08:38:54.332"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:54.345" level="INFO">${ACCURACY} = {'diff': [0.00010930599999999999, 0.00010450000000000043, 0.0001048750000000008, 0.00010467999999999936, 0.000104207999999998, 0.00010511099999999801, 0.00010494399999999918, 0.00010483299999999862, 0...</msg>
<status status="PASS" starttime="20201110 08:38:54.333" endtime="20201110 08:38:54.346"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:54.350" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201110 08:38:54.349" endtime="20201110 08:38:54.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:54.352" level="INFO">VALUE: [0.00010930599999999999, 0.00010450000000000043, 0.0001048750000000008, 0.00010467999999999936, 0.000104207999999998, 0.00010511099999999801, 0.00010494399999999918, 0.00010483299999999862, 0.00010447199999999782, 0.00010415300000000266, 0.00010493099999999908, 0.00010501399999999703, 0.00010438899999999987, 0.00010425000000000018, 0.00010457000000000174, 0.00010436199999999674, 0.00010480600000000242, 0.0001047360000000011, 0.00010481899999999905, 0.00010443099999999858, 0.00010458299999999837, 0.00010452800000000304, 0.0001045559999999987, 0.00010499999999999746, 0.00010443100000000205, 0.0001043750000000003, 0.00010415299999999919, 0.00010491600000000004, 0.00010472199999999807, 0.00010415199999999972, 0.00010444499999999815, 0.0001047079999999985, 0.00010475000000000068, 0.00010490299999999994, 0.00010499999999999746, 0.00010450000000000043, 0.00010415299999999919, 0.00010450000000000043, 0.00010425000000000018, 0.000104514, 0.0001045559999999987, 0.00010434700000000116, 0.00010429099999999941, 0.00010490200000000047, 0.00010475000000000068, 0.00010469399999999893, 0.00010480600000000242, 0.00010462500000000055, 0.00010427800000000279, 0.00010420900000000094]</msg>
<status status="PASS" starttime="20201110 08:38:54.351" endtime="20201110 08:38:54.353"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.346" endtime="20201110 08:38:54.354"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:54.356" endtime="20201110 08:38:54.357"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:54.359" endtime="20201110 08:38:54.378"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.358" endtime="20201110 08:38:54.379"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.354" endtime="20201110 08:38:54.379"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.984" endtime="20201110 08:38:54.380"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.983" endtime="20201110 08:38:54.380"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:54.388" endtime="20201110 08:38:54.409"></status>
</kw>
<msg timestamp="20201110 08:38:54.409" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:54.387" endtime="20201110 08:38:54.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:54.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:54.410" endtime="20201110 08:38:54.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:54.413" endtime="20201110 08:38:54.415"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.384" endtime="20201110 08:38:54.416"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.382" endtime="20201110 08:38:54.416"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:54.423" endtime="20201110 08:38:54.708"></status>
</kw>
<msg timestamp="20201110 08:38:54.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019887069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019997236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:54.421" endtime="20201110 08:38:54.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:54.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019887069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019997236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:54.713" endtime="20201110 08:38:54.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:54.721" endtime="20201110 08:38:54.723"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.419" endtime="20201110 08:38:54.723"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.417" endtime="20201110 08:38:54.723"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:54.727" level="INFO">${RESULT} = [{'time': 0.019997236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011016700000000129, 'source_diff': 0.00011016700000000129}, {'time': 0.020107278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:54.724" endtime="20201110 08:38:54.728"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:54.741" level="INFO">${ACCURACY} = {'diff': [0.00011016700000000129, 0.00010579200000000039, 0.00010522299999999804, 0.0001053339999999986, 0.00010512500000000105, 0.00010522300000000151, 0.00010608299999999987, 0.0001055689999999998, ...</msg>
<status status="PASS" starttime="20201110 08:38:54.728" endtime="20201110 08:38:54.741"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:54.745" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201110 08:38:54.744" endtime="20201110 08:38:54.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:54.748" level="INFO">VALUE: [0.00011016700000000129, 0.00010579200000000039, 0.00010522299999999804, 0.0001053339999999986, 0.00010512500000000105, 0.00010522300000000151, 0.00010608299999999987, 0.0001055689999999998, 0.00010601399999999803, 0.00010529100000000041, 0.00010545799999999925, 0.00010579100000000091, 0.00010554200000000014, 0.0001055559999999997, 0.00010544499999999915, 0.00010562500000000155, 0.0001058889999999979, 0.00010516600000000029, 0.00010606999999999978, 0.00010575000000000168, 0.00010562499999999808, 0.00010590299999999747, 0.00010558299999999937, 0.00010544399999999968, 0.00010513900000000062, 0.000105207999999999, 0.0001060140000000015, 0.00010518099999999933, 0.00010558399999999885, 0.00010523599999999814, 0.00010587499999999833, 0.00010541600000000054, 0.000105514000000001, 0.0001060690000000003, 0.00010573599999999864, 0.00010604200000000064, 0.00010572199999999907, 0.00010541700000000001, 0.0001057499999999982, 0.00010554200000000014, 0.00010562499999999808, 0.0001060140000000015, 0.00010591700000000051, 0.00010593000000000061, 0.00010537499999999783, 0.00010605499999999726, 0.00010530499999999998, 0.00010544399999999968, 0.00010519399999999943, 0.00010579199999999692]</msg>
<status status="PASS" starttime="20201110 08:38:54.747" endtime="20201110 08:38:54.749"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.742" endtime="20201110 08:38:54.749"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:54.751" endtime="20201110 08:38:54.753"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:54.755" endtime="20201110 08:38:54.774"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.753" endtime="20201110 08:38:54.775"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.750" endtime="20201110 08:38:54.775"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.381" endtime="20201110 08:38:54.775"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.380" endtime="20201110 08:38:54.776"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:54.784" endtime="20201110 08:38:54.805"></status>
</kw>
<msg timestamp="20201110 08:38:54.806" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:54.783" endtime="20201110 08:38:54.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:54.808" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:54.807" endtime="20201110 08:38:54.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:54.809" endtime="20201110 08:38:54.812"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.780" endtime="20201110 08:38:54.813"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.778" endtime="20201110 08:38:54.813"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:54.819" endtime="20201110 08:38:55.106"></status>
</kw>
<msg timestamp="20201110 08:38:55.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019810056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019921042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:54.818" endtime="20201110 08:38:55.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:55.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019810056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019921042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:55.110" endtime="20201110 08:38:55.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:55.118" endtime="20201110 08:38:55.120"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.815" endtime="20201110 08:38:55.120"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.814" endtime="20201110 08:38:55.120"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:55.125" level="INFO">${RESULT} = [{'time': 0.019921042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011098600000000042, 'source_diff': 0.00011098600000000042}, {'time': 0.020031042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:55.121" endtime="20201110 08:38:55.125"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:55.139" level="INFO">${ACCURACY} = {'diff': [0.00011098600000000042, 0.0001065279999999981, 0.00010707000000000078, 0.00010626400000000175, 0.00010688799999999943, 0.00010683300000000062, 0.000106208, 0.00010673599999999964, 0.00010626...</msg>
<status status="PASS" starttime="20201110 08:38:55.125" endtime="20201110 08:38:55.139"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:55.144" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201110 08:38:55.143" endtime="20201110 08:38:55.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:55.146" level="INFO">VALUE: [0.00011098600000000042, 0.0001065279999999981, 0.00010707000000000078, 0.00010626400000000175, 0.00010688799999999943, 0.00010683300000000062, 0.000106208, 0.00010673599999999964, 0.00010626399999999828, 0.0001065690000000008, 0.00010699999999999946, 0.00010662499999999908, 0.00010658400000000331, 0.00010688900000000237, 0.0001067499999999992, 0.00010645899999999972, 0.00010676399999999878, 0.000106208, 0.00010630500000000098, 0.00010627800000000132, 0.00010708300000000087, 0.00010644400000000068, 0.00010693000000000161, 0.0001067080000000005, 0.00010699999999999946, 0.0001065560000000007, 0.00010622299999999904, 0.00010676399999999878, 0.00010675000000000268, 0.0001067499999999992, 0.00010708300000000087, 0.00010694400000000118, 0.0001068889999999989, 0.00010711100000000001, 0.0001070829999999974, 0.00010712499999999958, 0.00010645899999999972, 0.00010665300000000169, 0.00010682000000000053, 0.00010658399999999985, 0.00010681999999999706, 0.000106901999999999, 0.00010712499999999958, 0.00010698599999999989, 0.0001065560000000007, 0.00010630499999999751, 0.00010701399999999903, 0.00010681899999999758, 0.00010645800000000025, 0.00010709799999999992]</msg>
<status status="PASS" starttime="20201110 08:38:55.145" endtime="20201110 08:38:55.147"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.140" endtime="20201110 08:38:55.147"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:55.149" endtime="20201110 08:38:55.151"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:55.153" endtime="20201110 08:38:55.172"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.151" endtime="20201110 08:38:55.173"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.148" endtime="20201110 08:38:55.173"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.776" endtime="20201110 08:38:55.173"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.776" endtime="20201110 08:38:55.174"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:55.182" endtime="20201110 08:38:55.203"></status>
</kw>
<msg timestamp="20201110 08:38:55.204" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:55.181" endtime="20201110 08:38:55.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:55.206" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:55.205" endtime="20201110 08:38:55.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:55.207" endtime="20201110 08:38:55.210"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.178" endtime="20201110 08:38:55.210"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.176" endtime="20201110 08:38:55.211"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:55.217" endtime="20201110 08:38:55.502"></status>
</kw>
<msg timestamp="20201110 08:38:55.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019821347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019933444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:55.216" endtime="20201110 08:38:55.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:55.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019821347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019933444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:55.506" endtime="20201110 08:38:55.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:55.515" endtime="20201110 08:38:55.516"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.213" endtime="20201110 08:38:55.517"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.211" endtime="20201110 08:38:55.517"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:55.521" level="INFO">${RESULT} = [{'time': 0.019933444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011209700000000197, 'source_diff': 0.00011209700000000197}, {'time': 0.020043472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:55.518" endtime="20201110 08:38:55.521"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:55.535" level="INFO">${ACCURACY} = {'diff': [0.00011209700000000197, 0.00010749999999999996, 0.00010731899999999808, 0.00010806899999999883, 0.00010812500000000058, 0.00010773600000000064, 0.00010762500000000008, 0.00010777799999999935...</msg>
<status status="PASS" starttime="20201110 08:38:55.522" endtime="20201110 08:38:55.535"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:55.539" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201110 08:38:55.538" endtime="20201110 08:38:55.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:55.542" level="INFO">VALUE: [0.00011209700000000197, 0.00010749999999999996, 0.00010731899999999808, 0.00010806899999999883, 0.00010812500000000058, 0.00010773600000000064, 0.00010762500000000008, 0.00010777799999999935, 0.00010737499999999983, 0.00010719400000000143, 0.00010761100000000051, 0.00010732000000000103, 0.00010727699999999937, 0.00010747199999999735, 0.00010726399999999928, 0.00010769399999999846, 0.00010762500000000008, 0.00010800000000000046, 0.00010727799999999885, 0.00010776399999999978, 0.00010747200000000082, 0.00010729100000000241, 0.00010765299999999922, 0.00010738799999999993, 0.00010722300000000004, 0.00010770799999999803, 0.00010727799999999885, 0.00010736100000000026, 0.00010737499999999983, 0.00010762500000000008, 0.00010718100000000133, 0.00010770900000000097, 0.00010745900000000072, 0.00010758400000000085, 0.00010776399999999978, 0.00010801300000000055, 0.00010731900000000155, 0.00010751300000000005, 0.0001078889999999999, 0.00010712499999999958, 0.00010781900000000205, 0.00010743000000000211, 0.00010732000000000103, 0.00010780500000000248, 0.00010758400000000085, 0.00010805599999999874, 0.00010784700000000119, 0.00010731999999999756, 0.00010756899999999833, 0.00010776399999999978]</msg>
<status status="PASS" starttime="20201110 08:38:55.540" endtime="20201110 08:38:55.542"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.535" endtime="20201110 08:38:55.543"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:55.545" endtime="20201110 08:38:55.546"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:55.549" endtime="20201110 08:38:55.568"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.547" endtime="20201110 08:38:55.568"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.544" endtime="20201110 08:38:55.569"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.175" endtime="20201110 08:38:55.569"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.174" endtime="20201110 08:38:55.569"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:55.578" endtime="20201110 08:38:55.598"></status>
</kw>
<msg timestamp="20201110 08:38:55.599" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:55.576" endtime="20201110 08:38:55.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:55.601" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:55.600" endtime="20201110 08:38:55.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:55.602" endtime="20201110 08:38:55.605"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.574" endtime="20201110 08:38:55.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.572" endtime="20201110 08:38:55.606"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:55.612" endtime="20201110 08:38:55.898"></status>
</kw>
<msg timestamp="20201110 08:38:55.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01983875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019952319, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:38:55.611" endtime="20201110 08:38:55.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:55.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01983875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019952319, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:38:55.902" endtime="20201110 08:38:55.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:55.911" endtime="20201110 08:38:55.912"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.608" endtime="20201110 08:38:55.913"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.607" endtime="20201110 08:38:55.913"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:55.917" level="INFO">${RESULT} = [{'time': 0.019952319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011356900000000086, 'source_diff': 0.00011356900000000086}, {'time': 0.020064306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:55.914" endtime="20201110 08:38:55.917"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:55.931" level="INFO">${ACCURACY} = {'diff': [0.00011356900000000086, 0.00010873700000000111, 0.00010855499999999976, 0.00010861100000000151, 0.00010905500000000026, 0.00010840299999999997, 0.00010865300000000022, 0.00010849999999999749...</msg>
<status status="PASS" starttime="20201110 08:38:55.918" endtime="20201110 08:38:55.931"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:55.935" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201110 08:38:55.934" endtime="20201110 08:38:55.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:55.938" level="INFO">VALUE: [0.00011356900000000086, 0.00010873700000000111, 0.00010855499999999976, 0.00010861100000000151, 0.00010905500000000026, 0.00010840299999999997, 0.00010865300000000022, 0.00010849999999999749, 0.00010836100000000126, 0.00010857000000000228, 0.0001083890000000004, 0.00010837500000000083, 0.00010904200000000017, 0.0001082630000000008, 0.00010831899999999908, 0.00010851400000000053, 0.00010894399999999971, 0.00010818099999999886, 0.00010912500000000158, 0.00010850000000000096, 0.00010836100000000126, 0.0001083890000000004, 0.00010845899999999825, 0.00010827799999999985, 0.00010899999999999799, 0.00010901400000000103, 0.000108208000000002, 0.00010912500000000158, 0.00010819400000000243, 0.0001089159999999971, 0.00010833300000000212, 0.00010876400000000078, 0.00010863899999999718, 0.00010882000000000253, 0.00010832000000000203, 0.00010900000000000146, 0.00010890300000000047, 0.00010815200000000025, 0.00010826400000000028, 0.00010905500000000026, 0.00010844399999999921, 0.00010833299999999865, 0.00010912500000000158, 0.00010843100000000258, 0.00010855599999999924, 0.00010840299999999997, 0.00010890300000000047, 0.00010909700000000244, 0.00010890199999999753, 0.00010817999999999939]</msg>
<status status="PASS" starttime="20201110 08:38:55.936" endtime="20201110 08:38:55.938"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.932" endtime="20201110 08:38:55.939"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:55.941" endtime="20201110 08:38:55.942"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:55.945" endtime="20201110 08:38:55.964"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.943" endtime="20201110 08:38:55.965"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.939" endtime="20201110 08:38:55.965"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.570" endtime="20201110 08:38:55.965"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.570" endtime="20201110 08:38:55.965"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:55.975" endtime="20201110 08:38:55.996"></status>
</kw>
<msg timestamp="20201110 08:38:55.997" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:55.972" endtime="20201110 08:38:55.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:55.999" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:55.998" endtime="20201110 08:38:55.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:56.000" endtime="20201110 08:38:56.003"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.970" endtime="20201110 08:38:56.003"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.968" endtime="20201110 08:38:56.004"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:56.010" endtime="20201110 08:38:56.297"></status>
</kw>
<msg timestamp="20201110 08:38:56.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021133097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021247653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:56.009" endtime="20201110 08:38:56.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:56.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021133097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021247653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:56.301" endtime="20201110 08:38:56.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:56.309" endtime="20201110 08:38:56.311"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.006" endtime="20201110 08:38:56.312"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.004" endtime="20201110 08:38:56.312"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:56.316" level="INFO">${RESULT} = [{'time': 0.021247653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001145559999999983, 'source_diff': 0.0001145559999999983}, {'time': 0.021361667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:56.313" endtime="20201110 08:38:56.316"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:56.329" level="INFO">${ACCURACY} = {'diff': [0.0001145559999999983, 0.00011009799999999945, 0.00010986099999999929, 0.00010925000000000171, 0.00010965199999999828, 0.0001095829999999999, 0.00010956900000000033, 0.00010980500000000101, ...</msg>
<status status="PASS" starttime="20201110 08:38:56.317" endtime="20201110 08:38:56.330"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:56.334" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201110 08:38:56.333" endtime="20201110 08:38:56.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:56.336" level="INFO">VALUE: [0.0001145559999999983, 0.00011009799999999945, 0.00010986099999999929, 0.00010925000000000171, 0.00010965199999999828, 0.0001095829999999999, 0.00010956900000000033, 0.00010980500000000101, 0.00010965300000000122, 0.00010934699999999922, 0.00011004200000000117, 0.00010987499999999886, 0.00010923599999999867, 0.00010936099999999879, 0.0001095699999999998, 0.00010980600000000049, 0.00010916600000000082, 0.0001099159999999981, 0.00011005500000000126, 0.00010954200000000067, 0.00010983300000000015, 0.00010951399999999806, 0.00010987499999999886, 0.00010951400000000153, 0.0001093890000000014, 0.0001100700000000003, 0.00010958400000000285, 0.00010948700000000186, 0.00010983300000000015, 0.00010988899999999843, 0.00010963899999999818, 0.00010919399999999996, 0.00010934699999999922, 0.00011015299999999825, 0.00010944399999999674, 0.00010945799999999978, 0.00010926399999999781, 0.00011006900000000083, 0.00011011099999999954, 0.00010918099999999986, 0.00010954200000000067, 0.00011006899999999736, 0.00010945799999999978, 0.00010919399999999996, 0.00011001399999999856, 0.00010931900000000008, 0.00010943100000000011, 0.00010951400000000153, 0.00010912500000000158, 0.00010961099999999904]</msg>
<status status="PASS" starttime="20201110 08:38:56.335" endtime="20201110 08:38:56.337"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.330" endtime="20201110 08:38:56.338"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:56.340" endtime="20201110 08:38:56.341"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:56.343" endtime="20201110 08:38:56.363"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.342" endtime="20201110 08:38:56.363"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.338" endtime="20201110 08:38:56.364"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.966" endtime="20201110 08:38:56.364"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.966" endtime="20201110 08:38:56.364"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:56.373" endtime="20201110 08:38:56.394"></status>
</kw>
<msg timestamp="20201110 08:38:56.394" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:56.371" endtime="20201110 08:38:56.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:56.397" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:56.395" endtime="20201110 08:38:56.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:56.398" endtime="20201110 08:38:56.400"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.368" endtime="20201110 08:38:56.401"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.366" endtime="20201110 08:38:56.402"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:56.408" endtime="20201110 08:38:56.692"></status>
</kw>
<msg timestamp="20201110 08:38:56.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019786069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019901167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:56.406" endtime="20201110 08:38:56.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:56.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019786069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019901167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:56.696" endtime="20201110 08:38:56.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:56.704" endtime="20201110 08:38:56.706"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.404" endtime="20201110 08:38:56.706"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.402" endtime="20201110 08:38:56.707"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:56.711" level="INFO">${RESULT} = [{'time': 0.019901167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011509800000000098, 'source_diff': 0.00011509800000000098}, {'time': 0.020016167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:56.708" endtime="20201110 08:38:56.711"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:56.725" level="INFO">${ACCURACY} = {'diff': [0.00011509800000000098, 0.00011082000000000106, 0.00011111200000000002, 0.00011040199999999903, 0.00011023599999999967, 0.00011045800000000078, 0.00011093000000000214, 0.00011031900000000108...</msg>
<status status="PASS" starttime="20201110 08:38:56.712" endtime="20201110 08:38:56.726"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:56.730" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201110 08:38:56.729" endtime="20201110 08:38:56.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:56.732" level="INFO">VALUE: [0.00011509800000000098, 0.00011082000000000106, 0.00011111200000000002, 0.00011040199999999903, 0.00011023599999999967, 0.00011045800000000078, 0.00011093000000000214, 0.00011031900000000108, 0.00011017999999999792, 0.00011020800000000053, 0.00011105500000000226, 0.00011062499999999961, 0.00011074999999999974, 0.00011016700000000129, 0.00011101400000000303, 0.00011018100000000086, 0.00011068000000000189, 0.00011054200000000167, 0.00011101399999999956, 0.00011112500000000011, 0.00011076400000000278, 0.00011109700000000097, 0.00011074999999999974, 0.00011074999999999974, 0.00011074999999999974, 0.0001107090000000005, 0.00011074999999999974, 0.00011061100000000004, 0.0001105700000000008, 0.00011070799999999756, 0.00011112500000000011, 0.00011088899999999943, 0.00011106900000000183, 0.00011048599999999992, 0.0001105830000000009, 0.00011076399999999931, 0.00011061100000000004, 0.00011065300000000222, 0.00011052799999999863, 0.00011032000000000056, 0.00011020800000000053, 0.00011017999999999792, 0.00011081899999999811, 0.00011025000000000271, 0.00011033300000000065, 0.0001105419999999982, 0.00011037499999999936, 0.00011027799999999838, 0.00011098600000000042, 0.00011094500000000118]</msg>
<status status="PASS" starttime="20201110 08:38:56.731" endtime="20201110 08:38:56.733"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.726" endtime="20201110 08:38:56.734"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:56.736" endtime="20201110 08:38:56.737"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:56.739" endtime="20201110 08:38:56.758"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.738" endtime="20201110 08:38:56.759"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.734" endtime="20201110 08:38:56.759"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.365" endtime="20201110 08:38:56.760"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.364" endtime="20201110 08:38:56.760"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:56.768" endtime="20201110 08:38:56.789"></status>
</kw>
<msg timestamp="20201110 08:38:56.790" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:56.767" endtime="20201110 08:38:56.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:56.792" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:56.791" endtime="20201110 08:38:56.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:56.793" endtime="20201110 08:38:56.796"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.764" endtime="20201110 08:38:56.796"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.762" endtime="20201110 08:38:56.797"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:56.803" endtime="20201110 08:38:57.088"></status>
</kw>
<msg timestamp="20201110 08:38:57.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01981275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019928486, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:38:56.802" endtime="20201110 08:38:57.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:57.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01981275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019928486, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:38:57.093" endtime="20201110 08:38:57.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:57.101" endtime="20201110 08:38:57.103"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.799" endtime="20201110 08:38:57.103"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.797" endtime="20201110 08:38:57.104"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:57.108" level="INFO">${RESULT} = [{'time': 0.019928486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011573599999999823, 'source_diff': 0.00011573599999999823}, {'time': 0.020043514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:57.104" endtime="20201110 08:38:57.108"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:57.121" level="INFO">${ACCURACY} = {'diff': [0.00011573599999999823, 0.00011205599999999927, 0.00011147200000000135, 0.00011152700000000015, 0.00011155599999999877, 0.00011195899999999828, 0.00011186200000000077, 0.0001112769999999999,...</msg>
<status status="PASS" starttime="20201110 08:38:57.108" endtime="20201110 08:38:57.121"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:57.126" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201110 08:38:57.124" endtime="20201110 08:38:57.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:57.128" level="INFO">VALUE: [0.00011573599999999823, 0.00011205599999999927, 0.00011147200000000135, 0.00011152700000000015, 0.00011155599999999877, 0.00011195899999999828, 0.00011186200000000077, 0.0001112769999999999, 0.00011140200000000003, 0.00011126399999999981, 0.00011177799999999988, 0.00011123600000000067, 0.00011202800000000013, 0.00011137500000000036, 0.00011143099999999864, 0.00011169499999999846, 0.00011197300000000132, 0.00011119399999999849, 0.00011126300000000033, 0.00011120799999999806, 0.00011145800000000178, 0.00011119400000000196, 0.00011213900000000068, 0.0001117359999999977, 0.00011120800000000153, 0.00011180600000000249, 0.00011165299999999975, 0.00011195900000000175, 0.00011144500000000168, 0.00011111100000000054, 0.00011112499999999664, 0.0001112769999999999, 0.00011187499999999739, 0.00011143000000000264, 0.00011129200000000242, 0.00011198599999999795, 0.0001115830000000019, 0.00011193099999999914, 0.0001115549999999993, 0.0001112359999999972, 0.00011199999999999752, 0.00011195899999999828, 0.00011188799999999749, 0.00011145799999999831, 0.000111903, 0.0001119160000000001, 0.00011176400000000031, 0.00011200000000000099, 0.0001114029999999995, 0.00011201399999999709]</msg>
<status status="PASS" starttime="20201110 08:38:57.127" endtime="20201110 08:38:57.129"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.122" endtime="20201110 08:38:57.129"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:57.132" endtime="20201110 08:38:57.133"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:57.135" endtime="20201110 08:38:57.154"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.133" endtime="20201110 08:38:57.155"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.130" endtime="20201110 08:38:57.155"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.761" endtime="20201110 08:38:57.156"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.760" endtime="20201110 08:38:57.156"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:57.164" endtime="20201110 08:38:57.186"></status>
</kw>
<msg timestamp="20201110 08:38:57.186" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:57.163" endtime="20201110 08:38:57.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:57.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:57.187" endtime="20201110 08:38:57.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:57.190" endtime="20201110 08:38:57.192"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.160" endtime="20201110 08:38:57.193"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.158" endtime="20201110 08:38:57.193"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:57.200" endtime="20201110 08:38:57.485"></status>
</kw>
<msg timestamp="20201110 08:38:57.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019803722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019921236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:57.198" endtime="20201110 08:38:57.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:57.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019803722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019921236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:57.489" endtime="20201110 08:38:57.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:57.497" endtime="20201110 08:38:57.499"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.196" endtime="20201110 08:38:57.499"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.194" endtime="20201110 08:38:57.500"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:57.504" level="INFO">${RESULT} = [{'time': 0.019921236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011751399999999912, 'source_diff': 0.00011751399999999912}, {'time': 0.020036236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:57.500" endtime="20201110 08:38:57.504"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:57.517" level="INFO">${ACCURACY} = {'diff': [0.00011751399999999912, 0.00011270799999999956, 0.00011258299999999943, 0.00011302800000000113, 0.00011226400000000081, 0.00011233399999999866, 0.0001128749999999984, 0.00011280500000000054,...</msg>
<status status="PASS" starttime="20201110 08:38:57.505" endtime="20201110 08:38:57.517"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:57.522" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201110 08:38:57.521" endtime="20201110 08:38:57.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:57.524" level="INFO">VALUE: [0.00011751399999999912, 0.00011270799999999956, 0.00011258299999999943, 0.00011302800000000113, 0.00011226400000000081, 0.00011233399999999866, 0.0001128749999999984, 0.00011280500000000054, 0.0001127220000000026, 0.00011311099999999907, 0.0001127359999999987, 0.00011295799999999981, 0.00011244500000000268, 0.00011215300000000025, 0.00011219399999999949, 0.00011223600000000167, 0.00011295799999999981, 0.00011226400000000081, 0.00011220899999999853, 0.00011301400000000156, 0.00011274999999999827, 0.00011280499999999707, 0.00011283299999999968, 0.00011237500000000136, 0.00011219399999999949, 0.00011226400000000081, 0.00011295799999999981, 0.00011311100000000254, 0.00011233399999999866, 0.00011249999999999802, 0.00011241700000000007, 0.00011284699999999925, 0.00011233300000000265, 0.00011251399999999759, 0.00011290199999999806, 0.0001129160000000011, 0.00011252799999999716, 0.00011251400000000106, 0.00011276399999999784, 0.00011233399999999866, 0.00011301400000000156, 0.00011263899999999771, 0.00011312500000000211, 0.00011252700000000115, 0.00011312500000000211, 0.00011251400000000106, 0.00011318099999999692, 0.00011233299999999918, 0.0001125550000000003, 0.00011234700000000222]</msg>
<status status="PASS" starttime="20201110 08:38:57.523" endtime="20201110 08:38:57.525"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.518" endtime="20201110 08:38:57.526"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:57.528" endtime="20201110 08:38:57.529"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:57.531" endtime="20201110 08:38:57.551"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.530" endtime="20201110 08:38:57.551"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.526" endtime="20201110 08:38:57.552"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.157" endtime="20201110 08:38:57.552"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.156" endtime="20201110 08:38:57.552"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:57.561" endtime="20201110 08:38:57.582"></status>
</kw>
<msg timestamp="20201110 08:38:57.583" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:57.559" endtime="20201110 08:38:57.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:57.585" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:57.584" endtime="20201110 08:38:57.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:57.586" endtime="20201110 08:38:57.589"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.556" endtime="20201110 08:38:57.589"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.554" endtime="20201110 08:38:57.590"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:57.596" endtime="20201110 08:38:57.882"></status>
</kw>
<msg timestamp="20201110 08:38:57.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019760167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019878681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:57.595" endtime="20201110 08:38:57.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:57.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019760167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019878681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:57.886" endtime="20201110 08:38:57.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:57.895" endtime="20201110 08:38:57.896"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.592" endtime="20201110 08:38:57.897"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.590" endtime="20201110 08:38:57.897"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:57.901" level="INFO">${RESULT} = [{'time': 0.019878681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011851400000000012, 'source_diff': 0.00011851400000000012}, {'time': 0.019995736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:57.898" endtime="20201110 08:38:57.901"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:57.915" level="INFO">${ACCURACY} = {'diff': [0.00011851400000000012, 0.0001140970000000005, 0.0001132359999999992, 0.00011344500000000021, 0.00011380499999999807, 0.00011376400000000231, 0.00011388899999999896, 0.00011394400000000124, ...</msg>
<status status="PASS" starttime="20201110 08:38:57.902" endtime="20201110 08:38:57.915"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:57.919" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201110 08:38:57.918" endtime="20201110 08:38:57.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:57.922" level="INFO">VALUE: [0.00011851400000000012, 0.0001140970000000005, 0.0001132359999999992, 0.00011344500000000021, 0.00011380499999999807, 0.00011376400000000231, 0.00011388899999999896, 0.00011394400000000124, 0.00011398599999999995, 0.00011366699999999785, 0.00011393100000000114, 0.00011319499999999996, 0.00011332000000000009, 0.00011374999999999927, 0.00011355600000000077, 0.00011395800000000081, 0.00011343000000000117, 0.00011394399999999777, 0.00011376399999999884, 0.00011316700000000082, 0.00011343100000000064, 0.00011330600000000052, 0.00011388900000000243, 0.00011375000000000274, 0.0001140559999999978, 0.00011408400000000041, 0.00011341700000000107, 0.0001138749999999994, 0.00011406900000000136, 0.0001132359999999992, 0.00011418100000000139, 0.00011407000000000084, 0.00011341700000000107, 0.00011344500000000021, 0.0001134030000000015, 0.00011409800000000345, 0.00011333300000000018, 0.00011397200000000038, 0.00011406999999999737, 0.00011377799999999841, 0.0001134030000000015, 0.00011358300000000043, 0.00011348699999999892, 0.00011370800000000056, 0.00011332000000000009, 0.00011315299999999778, 0.00011369500000000046, 0.00011401399999999909, 0.00011412499999999964, 0.00011357000000000034]</msg>
<status status="PASS" starttime="20201110 08:38:57.920" endtime="20201110 08:38:57.922"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.916" endtime="20201110 08:38:57.923"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:57.925" endtime="20201110 08:38:57.927"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:57.929" endtime="20201110 08:38:57.948"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.927" endtime="20201110 08:38:57.949"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.924" endtime="20201110 08:38:57.949"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.553" endtime="20201110 08:38:57.949"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.552" endtime="20201110 08:38:57.949"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:57.958" endtime="20201110 08:38:57.980"></status>
</kw>
<msg timestamp="20201110 08:38:57.980" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:57.956" endtime="20201110 08:38:57.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:57.983" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:57.981" endtime="20201110 08:38:57.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:57.984" endtime="20201110 08:38:57.987"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.954" endtime="20201110 08:38:57.987"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.952" endtime="20201110 08:38:57.988"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:57.994" endtime="20201110 08:38:58.280"></status>
</kw>
<msg timestamp="20201110 08:38:58.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019815347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019934222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:57.992" endtime="20201110 08:38:58.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:58.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019815347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019934222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:58.284" endtime="20201110 08:38:58.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:58.292" endtime="20201110 08:38:58.294"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.990" endtime="20201110 08:38:58.294"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.988" endtime="20201110 08:38:58.295"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:58.299" level="INFO">${RESULT} = [{'time': 0.019934222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011887500000000092, 'source_diff': 0.00011887500000000092}, {'time': 0.020052208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:58.296" endtime="20201110 08:38:58.299"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:58.314" level="INFO">${ACCURACY} = {'diff': [0.00011887500000000092, 0.00011477699999999993, 0.00011451399999999959, 0.0001150550000000028, 0.00011438899999999946, 0.00011444500000000121, 0.00011481999999999812, 0.00011463899999999971,...</msg>
<status status="PASS" starttime="20201110 08:38:58.300" endtime="20201110 08:38:58.314"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:58.318" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201110 08:38:58.317" endtime="20201110 08:38:58.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:58.321" level="INFO">VALUE: [0.00011887500000000092, 0.00011477699999999993, 0.00011451399999999959, 0.0001150550000000028, 0.00011438899999999946, 0.00011444500000000121, 0.00011481999999999812, 0.00011463899999999971, 0.00011495899999999781, 0.00011456999999999787, 0.00011420800000000106, 0.00011463899999999971, 0.00011468000000000242, 0.00011415300000000225, 0.00011513900000000021, 0.00011479199999999898, 0.00011482000000000159, 0.00011502799999999966, 0.00011415299999999878, 0.00011462500000000014, 0.00011475000000000027, 0.00011456900000000186, 0.00011508299999999846, 0.00011467999999999895, 0.00011427799999999891, 0.00011433299999999771, 0.00011438899999999946, 0.00011452799999999916, 0.00011484700000000125, 0.00011469399999999852, 0.00011452799999999916, 0.0001145689999999984, 0.00011493099999999867, 0.00011469400000000199, 0.0001147909999999995, 0.00011500000000000052, 0.00011430499999999857, 0.00011472200000000113, 0.00011483299999999821, 0.00011450000000000002, 0.00011462500000000014, 0.0001143749999999999, 0.00011432000000000109, 0.0001142360000000002, 0.0001148750000000004, 0.00011483299999999821, 0.00011502799999999966, 0.00011475000000000027, 0.00011458300000000143, 0.00011500000000000052]</msg>
<status status="PASS" starttime="20201110 08:38:58.319" endtime="20201110 08:38:58.330"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:58.315" endtime="20201110 08:38:58.332"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:58.337" endtime="20201110 08:38:58.339"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:58.344" endtime="20201110 08:38:58.366"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:58.341" endtime="20201110 08:38:58.367"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:58.333" endtime="20201110 08:38:58.368"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.950" endtime="20201110 08:38:58.369"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.950" endtime="20201110 08:38:58.369"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:58.388" endtime="20201110 08:38:58.414"></status>
</kw>
<msg timestamp="20201110 08:38:58.415" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:58.384" endtime="20201110 08:38:58.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:58.420" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:58.417" endtime="20201110 08:38:58.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:58.422" endtime="20201110 08:38:58.425"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:58.378" endtime="20201110 08:38:58.425"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:58.374" endtime="20201110 08:38:58.426"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:58.432" endtime="20201110 08:38:58.718"></status>
</kw>
<msg timestamp="20201110 08:38:58.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034656306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034775944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:58.431" endtime="20201110 08:38:58.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:58.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034656306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034775944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:58.722" endtime="20201110 08:38:58.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:58.730" endtime="20201110 08:38:58.732"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:58.428" endtime="20201110 08:38:58.732"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:58.426" endtime="20201110 08:38:58.733"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:58.737" level="INFO">${RESULT} = [{'time': 0.034775944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011963800000000524, 'source_diff': 0.00011963800000000524}, {'time': 0.034897972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:58.734" endtime="20201110 08:38:58.737"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:58.751" level="INFO">${ACCURACY} = {'diff': [0.00011963800000000524, 0.00011602799999999719, 0.00011577800000000388, 0.0001158750000000014, 0.00011556899999999592, 0.00011597299999999838, 0.00011600000000000499, 0.00011581999999999565,...</msg>
<status status="PASS" starttime="20201110 08:38:58.738" endtime="20201110 08:38:58.751"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:58.755" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201110 08:38:58.754" endtime="20201110 08:38:58.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:58.758" level="INFO">VALUE: [0.00011963800000000524, 0.00011602799999999719, 0.00011577800000000388, 0.0001158750000000014, 0.00011556899999999592, 0.00011597299999999838, 0.00011600000000000499, 0.00011581999999999565, 0.00011562500000000114, 0.00011563900000000071, 0.00011520799999999859, 0.00011606899999999643, 0.00011586099999999488, 0.00011613900000000121, 0.00011531900000000261, 0.0001161249999999947, 0.00011590300000000053, 0.00011598599999999848, 0.000115209000000005, 0.00011602799999999719, 0.00011543099999999917, 0.00011569499999999899, 0.0001157770000000044, 0.00011544399999999927, 0.00011538900000000046, 0.00011558300000000243, 0.00011523600000000467, 0.00011594499999999924, 0.00011558399999999497, 0.00011532000000000209, 0.00011580600000000302, 0.00011562500000000114, 0.000116082999999996, 0.00011601399999999762, 0.00011576400000000431, 0.00011576400000000431, 0.00011609699999999556, 0.00011555600000000277, 0.00011544399999999927, 0.00011583299999999574, 0.00011551399999999712, 0.00011580599999999608, 0.00011569499999999899, 0.00011572199999999866, 0.00011547200000000535, 0.00011556900000000286, 0.00011570899999999856, 0.00011523600000000467, 0.00011517999999999945, 0.00011579199999999651]</msg>
<status status="PASS" starttime="20201110 08:38:58.756" endtime="20201110 08:38:58.758"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:58.752" endtime="20201110 08:38:58.759"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:58.761" endtime="20201110 08:38:58.763"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:58.765" endtime="20201110 08:38:58.784"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:58.763" endtime="20201110 08:38:58.785"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:58.760" endtime="20201110 08:38:58.785"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:58.371" endtime="20201110 08:38:58.786"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:58.370" endtime="20201110 08:38:58.786"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:58.794" endtime="20201110 08:38:58.814"></status>
</kw>
<msg timestamp="20201110 08:38:58.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:58.793" endtime="20201110 08:38:58.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:58.817" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:58.816" endtime="20201110 08:38:58.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:58.818" endtime="20201110 08:38:58.821"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:58.790" endtime="20201110 08:38:58.822"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:58.788" endtime="20201110 08:38:58.822"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:58.828" endtime="20201110 08:38:59.115"></status>
</kw>
<msg timestamp="20201110 08:38:59.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020146028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020266694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:58.827" endtime="20201110 08:38:59.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:59.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020146028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020266694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:59.119" endtime="20201110 08:38:59.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:59.128" endtime="20201110 08:38:59.129"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:58.824" endtime="20201110 08:38:59.130"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:58.823" endtime="20201110 08:38:59.130"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:59.134" level="INFO">${RESULT} = [{'time': 0.020266694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012066599999999844, 'source_diff': 0.00012066599999999844}, {'time': 0.020387694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:59.131" endtime="20201110 08:38:59.135"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:59.148" level="INFO">${ACCURACY} = {'diff': [0.00012066599999999844, 0.00011650000000000202, 0.0001170690000000009, 0.00011673599999999923, 0.00011616700000000035, 0.00011669400000000052, 0.00011623599999999873, 0.00011620799999999959,...</msg>
<status status="PASS" starttime="20201110 08:38:59.135" endtime="20201110 08:38:59.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:59.153" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201110 08:38:59.152" endtime="20201110 08:38:59.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:59.155" level="INFO">VALUE: [0.00012066599999999844, 0.00011650000000000202, 0.0001170690000000009, 0.00011673599999999923, 0.00011616700000000035, 0.00011669400000000052, 0.00011623599999999873, 0.00011620799999999959, 0.00011701400000000209, 0.00011618099999999992, 0.00011708399999999994, 0.00011694500000000024, 0.00011613800000000174, 0.00011673599999999923, 0.00011707000000000037, 0.00011662499999999867, 0.000116597000000003, 0.0001170690000000009, 0.0001165560000000003, 0.00011694500000000024, 0.00011702799999999819, 0.00011683399999999969, 0.00011613900000000121, 0.00011638799999999852, 0.00011708300000000046, 0.00011663900000000171, 0.00011634699999999928, 0.0001167499999999988, 0.00011697199999999991, 0.00011668099999999695, 0.00011656999999999987, 0.00011615300000000078, 0.00011688900000000196, 0.0001162499999999983, 0.0001169300000000012, 0.00011622199999999916, 0.00011686100000000282, 0.00011694400000000077, 0.00011615300000000078, 0.00011682000000000012, 0.00011644499999999974, 0.0001163750000000019, 0.0001162499999999983, 0.0001169170000000011, 0.0001170560000000008, 0.00011616600000000088, 0.00011708300000000046, 0.00011652799999999769, 0.00011688900000000196, 0.00011633299999999971]</msg>
<status status="PASS" starttime="20201110 08:38:59.154" endtime="20201110 08:38:59.156"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:59.149" endtime="20201110 08:38:59.156"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:59.159" endtime="20201110 08:38:59.160"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:59.162" endtime="20201110 08:38:59.182"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:59.161" endtime="20201110 08:38:59.182"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:59.157" endtime="20201110 08:38:59.183"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:58.787" endtime="20201110 08:38:59.183"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:58.786" endtime="20201110 08:38:59.183"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.516" endtime="20201110 08:38:59.183"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:59.187" endtime="20201110 08:38:59.206"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:59.186" endtime="20201110 08:38:59.207"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:59.184" endtime="20201110 08:38:59.207"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201110 08:38:19.444" endtime="20201110 08:38:59.208" critical="yes"></status>
</test>
<status status="PASS" starttime="20201110 08:37:36.954" endtime="20201110 08:38:59.211"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201110 08:38:59.267" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201110 08:38:59.275" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201110 08:39:00.251" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201110 08:38:59.266" endtime="20201110 08:39:00.252"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201110 08:39:01.254" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20201110 08:39:00.253" endtime="20201110 08:39:01.255"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:59.264" endtime="20201110 08:39:01.256"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:01.258" endtime="20201110 08:39:01.444"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.256" endtime="20201110 08:39:01.445"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:01.457" endtime="20201110 08:39:01.477"></status>
</kw>
<msg timestamp="20201110 08:39:01.478" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:01.456" endtime="20201110 08:39:01.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:01.480" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:01.479" endtime="20201110 08:39:01.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:39:01.484" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:39:01.481" endtime="20201110 08:39:01.484"></status>
</kw>
<status status="FAIL" starttime="20201110 08:39:01.454" endtime="20201110 08:39:01.484"></status>
</kw>
<status status="FAIL" starttime="20201110 08:39:01.451" endtime="20201110 08:39:01.485"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.450" endtime="20201110 08:39:01.485"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:39:01.491" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:39:01.490" endtime="20201110 08:39:01.492"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.487" endtime="20201110 08:39:01.492"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.449" endtime="20201110 08:39:01.492"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.449" endtime="20201110 08:39:01.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:01.493" endtime="20201110 08:39:01.495"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.447" endtime="20201110 08:39:01.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:01.496" endtime="20201110 08:39:01.498"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.446" endtime="20201110 08:39:01.498"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:59.263" endtime="20201110 08:39:01.499"></status>
</kw>
<test id="s1-s4-t1" name="Measure Sleep Jitter With Increasing Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:01.505" endtime="20201110 08:39:01.524"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.503" endtime="20201110 08:39:01.524"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:01.537" endtime="20201110 08:39:01.553"></status>
</kw>
<msg timestamp="20201110 08:39:01.554" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:01.536" endtime="20201110 08:39:01.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:01.556" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:01.555" endtime="20201110 08:39:01.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:39:01.559" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:39:01.557" endtime="20201110 08:39:01.559"></status>
</kw>
<status status="FAIL" starttime="20201110 08:39:01.533" endtime="20201110 08:39:01.560"></status>
</kw>
<status status="FAIL" starttime="20201110 08:39:01.531" endtime="20201110 08:39:01.561"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.529" endtime="20201110 08:39:01.561"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:39:01.565" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:39:01.564" endtime="20201110 08:39:01.565"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.562" endtime="20201110 08:39:01.565"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.529" endtime="20201110 08:39:01.565"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.528" endtime="20201110 08:39:01.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:01.566" endtime="20201110 08:39:01.568"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.527" endtime="20201110 08:39:01.568"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.525" endtime="20201110 08:39:01.569"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.502" endtime="20201110 08:39:01.569"></status>
</kw>
<kw name="${n} IN RANGE [ 10 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:39:01.572" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:01.582" endtime="20201110 08:39:03.668"></status>
</kw>
<msg timestamp="20201110 08:39:03.669" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 1253440, 'start-iter': 1, 'wakeups': [1263472, 1273456, 1283447, 12934...</msg>
<status status="PASS" starttime="20201110 08:39:01.580" endtime="20201110 08:39:03.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:03.675" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 1253440, 'start-iter': 1, 'wakeups': [1263472, 1273456, 1283447, 12934...</msg>
<status status="PASS" starttime="20201110 08:39:03.672" endtime="20201110 08:39:03.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:03.685" endtime="20201110 08:39:03.688"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.577" endtime="20201110 08:39:03.689"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.574" endtime="20201110 08:39:03.690"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:03.696" level="INFO">${RESULT} = {'start-iter': 1, 'timer-count': 1, 'start-time': 1253440, 'wakeups': [1263472, 1273456, 1283447, 1293447, 1303447, 1313447, 1323447, 1333447, 1343447, 1353447, 1363447, 1373447, 1383447, 1393447, 140...</msg>
<status status="PASS" starttime="20201110 08:39:03.692" endtime="20201110 08:39:03.696"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:03.704" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:03.702" endtime="20201110 08:39:03.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:03.708" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:03.707" endtime="20201110 08:39:03.709"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.697" endtime="20201110 08:39:03.710"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:03.718" level="INFO">NAME: 1-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:03.716" endtime="20201110 08:39:03.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:03.723" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:03.721" endtime="20201110 08:39:03.723"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.711" endtime="20201110 08:39:03.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:03.734" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201110 08:39:03.731" endtime="20201110 08:39:03.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:03.738" level="INFO">VALUE: 1253440</msg>
<status status="PASS" starttime="20201110 08:39:03.736" endtime="20201110 08:39:03.739"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.726" endtime="20201110 08:39:03.740"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:03.748" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:03.746" endtime="20201110 08:39:03.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:03.753" level="INFO">VALUE: [1263472, 1273456, 1283447, 1293447, 1303447, 1313447, 1323447, 1333447, 1343447, 1353447, 1363447, 1373447, 1383447, 1393447, 1403447, 1413447, 1423447, 1433447, 1443447, 1453447, 1463447, 1473447, 1483447, 1493447, 1503447, 1513447, 1523447, 1533447, 1543447, 1553447, 1563447, 1573447, 1583447, 1593447, 1603447, 1613447, 1623447, 1633447, 1643447, 1653447, 1663447, 1673447, 1683447, 1693447, 1703447, 1713447, 1723447, 1733447, 1743447, 1753447, 1763447, 1773447, 1783447, 1793447, 1803447, 1813447, 1823447, 1833447, 1843447, 1853447, 1863447, 1873447, 1883447, 1893447, 1903447, 1913447, 1923447, 1933447, 1943447, 1953447, 1963447, 1973447, 1983447, 1993447, 2003447, 2013447, 2023447, 2033447, 2043447, 2053447, 2063447, 2073447, 2083447, 2093447, 2103447, 2113447, 2123447, 2133447, 2143447, 2153447, 2163447, 2173447, 2183447, 2193447, 2203447, 2213447, 2223447, 2233447, 2243447, 2253447]</msg>
<status status="PASS" starttime="20201110 08:39:03.750" endtime="20201110 08:39:03.753"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.741" endtime="20201110 08:39:03.755"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:03.768" endtime="20201110 08:39:04.071"></status>
</kw>
<msg timestamp="20201110 08:39:04.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066573986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.076603125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:03.765" endtime="20201110 08:39:04.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:04.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066573986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.076603125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:04.075" endtime="20201110 08:39:04.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:04.083" endtime="20201110 08:39:04.085"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.759" endtime="20201110 08:39:04.085"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.756" endtime="20201110 08:39:04.086"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:04.110" level="INFO">${RESULT} = {'diff': [0, 0.010029138999999992, 0.009984541999999999, 0.00999190200000001, 0.010000944999999997, 0.010000930000000005, 0.010000916999999998, 0.010000916999999998, 0.010000971999999997, 0.0100008890...</msg>
<status status="PASS" starttime="20201110 08:39:04.087" endtime="20201110 08:39:04.111"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:04.115" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201110 08:39:04.114" endtime="20201110 08:39:04.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:04.117" level="INFO">VALUE: 0.066573986</msg>
<status status="PASS" starttime="20201110 08:39:04.116" endtime="20201110 08:39:04.117"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:04.111" endtime="20201110 08:39:04.118"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:04.122" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:04.121" endtime="20201110 08:39:04.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:04.125" level="INFO">VALUE: [0.076603125, 0.086587667, 0.096579569, 0.106580514, 0.116581444, 0.126582361, 0.136583278, 0.14658425, 0.156585139, 0.166586069, 0.176586972, 0.186587903, 0.196588833, 0.20658975, 0.216590667, 0.226591611, 0.236592528, 0.246593444, 0.256594375, 0.266595306, 0.276596222, 0.286597139, 0.296598056, 0.306599, 0.316599944, 0.326600833, 0.33660175, 0.346602681, 0.356603639, 0.366604556, 0.376605444, 0.386606389, 0.396607306, 0.406608236, 0.416609139, 0.426610069, 0.436611, 0.446611917, 0.456612833, 0.466613764, 0.476614694, 0.486615611, 0.496616542, 0.506617458, 0.516618389, 0.526619319, 0.536620278, 0.546621194, 0.556622083, 0.566623028, 0.576623931, 0.586624861, 0.596625792, 0.60662675, 0.616627653, 0.626628583, 0.6366295, 0.646630472, 0.656631375, 0.66663225, 0.676633194, 0.686634111, 0.696635028, 0.706635958, 0.716636875, 0.726637806, 0.736638722, 0.746639653, 0.756640583, 0.7666415, 0.776642444, 0.786643403, 0.796644292, 0.806645208, 0.816646139, 0.826647056, 0.836647986, 0.846648917, 0.856649833, 0.866650764, 0.876651694, 0.886652597, 0.896653528, 0.906654458, 0.916655361, 0.926656306, 0.936657208, 0.946658139, 0.956659069, 0.966660014, 0.976660917, 0.986661861, 0.99666275, 1.006663694, 1.016664611, 1.026665528, 1.036666472, 1.046667389, 1.056668319, 1.066669222] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:04.124" endtime="20201110 08:39:04.125"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:04.118" endtime="20201110 08:39:04.125"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:04.128" endtime="20201110 08:39:04.129"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:04.131" endtime="20201110 08:39:04.150"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:04.129" endtime="20201110 08:39:04.151"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:04.126" endtime="20201110 08:39:04.152"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.573" endtime="20201110 08:39:04.152"></status>
</kw>
<msg timestamp="20201110 08:39:04.152" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:04.160" endtime="20201110 08:39:06.246"></status>
</kw>
<msg timestamp="20201110 08:39:06.247" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 3831849, 'start-iter': 1, 'wakeups': [3841855, 3851856, 3861856, 38718...</msg>
<status status="PASS" starttime="20201110 08:39:04.158" endtime="20201110 08:39:06.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:06.253" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 3831849, 'start-iter': 1, 'wakeups': [3841855, 3851856, 3861856, 38718...</msg>
<status status="PASS" starttime="20201110 08:39:06.249" endtime="20201110 08:39:06.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:06.256" endtime="20201110 08:39:06.261"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:04.156" endtime="20201110 08:39:06.262"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:04.154" endtime="20201110 08:39:06.263"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:06.269" level="INFO">${RESULT} = {'start-iter': 1, 'timer-count': 1, 'start-time': 3831849, 'wakeups': [3841855, 3851856, 3861856, 3871856, 3881856, 3891856, 3901856, 3911856, 3921856, 3931856, 3941856, 3951856, 3961856, 3971856, 398...</msg>
<status status="PASS" starttime="20201110 08:39:06.265" endtime="20201110 08:39:06.270"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:06.279" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:06.276" endtime="20201110 08:39:06.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:06.284" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:06.282" endtime="20201110 08:39:06.284"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.271" endtime="20201110 08:39:06.286"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:06.294" level="INFO">NAME: 1-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:06.292" endtime="20201110 08:39:06.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:06.298" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:06.296" endtime="20201110 08:39:06.299"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.287" endtime="20201110 08:39:06.300"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:06.308" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201110 08:39:06.306" endtime="20201110 08:39:06.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:06.313" level="INFO">VALUE: 3831849</msg>
<status status="PASS" starttime="20201110 08:39:06.311" endtime="20201110 08:39:06.314"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.301" endtime="20201110 08:39:06.315"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:06.323" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:06.321" endtime="20201110 08:39:06.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:06.328" level="INFO">VALUE: [3841855, 3851856, 3861856, 3871856, 3881856, 3891856, 3901856, 3911856, 3921856, 3931856, 3941856, 3951856, 3961856, 3971856, 3981856, 3991856, 4001856, 4011856, 4021856, 4031856, 4041856, 4051856, 4061856, 4071856, 4081856, 4091856, 4101856, 4111856, 4121856, 4131856, 4141856, 4151856, 4161856, 4171856, 4181856, 4191856, 4201856, 4211856, 4221856, 4231856, 4241856, 4251856, 4261856, 4271856, 4281856, 4291856, 4301856, 4311856, 4321856, 4331856, 4341856, 4351856, 4361856, 4371856, 4381856, 4391856, 4401856, 4411856, 4421856, 4431856, 4441856, 4451856, 4461856, 4471856, 4481856, 4491856, 4501856, 4511856, 4521856, 4531856, 4541856, 4551856, 4561856, 4571856, 4581856, 4591856, 4601856, 4611856, 4621856, 4631856, 4641856, 4651856, 4661856, 4671856, 4681856, 4691856, 4701856, 4711856, 4721856, 4731856, 4741856, 4751856, 4761856, 4771856, 4781856, 4791856, 4801856, 4811856, 4821856, 4831856]</msg>
<status status="PASS" starttime="20201110 08:39:06.325" endtime="20201110 08:39:06.329"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.316" endtime="20201110 08:39:06.330"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:06.350" endtime="20201110 08:39:06.642"></status>
</kw>
<msg timestamp="20201110 08:39:06.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018457778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028464611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:06.346" endtime="20201110 08:39:06.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:06.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018457778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028464611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:06.646" endtime="20201110 08:39:06.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:06.653" endtime="20201110 08:39:06.655"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.335" endtime="20201110 08:39:06.656"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.331" endtime="20201110 08:39:06.656"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:06.681" level="INFO">${RESULT} = {'diff': [0, 0.010006833, 0.010001930999999999, 0.010000943999999998, 0.010000931000000005, 0.010000915999999992, 0.010000917000000012, 0.010000916999999998, 0.010000915999999999, 0.010000931000000005...</msg>
<status status="PASS" starttime="20201110 08:39:06.657" endtime="20201110 08:39:06.681"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:06.685" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201110 08:39:06.684" endtime="20201110 08:39:06.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:06.687" level="INFO">VALUE: 0.018457778</msg>
<status status="PASS" starttime="20201110 08:39:06.686" endtime="20201110 08:39:06.687"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.682" endtime="20201110 08:39:06.688"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:06.693" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:06.692" endtime="20201110 08:39:06.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:06.695" level="INFO">VALUE: [0.028464611, 0.038466542, 0.048467486, 0.058468417, 0.068469333, 0.07847025, 0.088471167, 0.098472083, 0.108473014, 0.118474014, 0.128474931, 0.138475778, 0.148476708, 0.158477625, 0.168478569, 0.178479472, 0.188480458, 0.198481319, 0.208482264, 0.218483181, 0.228484083, 0.238485028, 0.248485944, 0.258486875, 0.268487778, 0.278488708, 0.288489625, 0.298490569, 0.308491472, 0.318492417, 0.328493319, 0.33849425, 0.348495222, 0.358496111, 0.368497028, 0.378497944, 0.388498875, 0.398499792, 0.408500722, 0.418501639, 0.428502597, 0.438503486, 0.448504431, 0.458505347, 0.468506264, 0.478507194, 0.488508111, 0.498509069, 0.508509958, 0.518510903, 0.528511806, 0.53851275, 0.548513667, 0.558514583, 0.568515514, 0.578516431, 0.588517375, 0.598518306, 0.608519236, 0.618520153, 0.628521069, 0.638521986, 0.648522903, 0.658523861, 0.668524764, 0.678525736, 0.688526611, 0.698527528, 0.708528444, 0.718529361, 0.728530278, 0.738531208, 0.748532181, 0.758533097, 0.768533986, 0.778534917, 0.788535819, 0.798536736, 0.808537681, 0.818538597, 0.828539514, 0.838540458, 0.848541375, 0.858542278, 0.868543278, 0.878544125, 0.888545056, 0.898545986, 0.908546889, 0.918547833, 0.92854875, 0.938549667, 0.948550597, 0.958551528, 0.968552431, 0.978553361, 0.988554278, 0.998555208, 1.008556125, 1.018557097] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:06.694" endtime="20201110 08:39:06.695"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.689" endtime="20201110 08:39:06.696"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:06.698" endtime="20201110 08:39:06.699"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:06.701" endtime="20201110 08:39:06.721"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.700" endtime="20201110 08:39:06.721"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.696" endtime="20201110 08:39:06.722"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:04.153" endtime="20201110 08:39:06.722"></status>
</kw>
<msg timestamp="20201110 08:39:06.722" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:06.730" endtime="20201110 08:39:08.817"></status>
</kw>
<msg timestamp="20201110 08:39:08.819" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 6401974, 'start-iter': 1, 'wakeups': [6411980, 6421981, 6431981, 64419...</msg>
<status status="PASS" starttime="20201110 08:39:06.729" endtime="20201110 08:39:08.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:08.827" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 6401974, 'start-iter': 1, 'wakeups': [6411980, 6421981, 6431981, 64419...</msg>
<status status="PASS" starttime="20201110 08:39:08.822" endtime="20201110 08:39:08.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:08.829" endtime="20201110 08:39:08.834"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.726" endtime="20201110 08:39:08.836"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.724" endtime="20201110 08:39:08.837"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:08.844" level="INFO">${RESULT} = {'start-iter': 1, 'timer-count': 1, 'start-time': 6401974, 'wakeups': [6411980, 6421981, 6431981, 6441981, 6451981, 6461981, 6471981, 6481981, 6491981, 6501981, 6511981, 6521981, 6531981, 6541981, 655...</msg>
<status status="PASS" starttime="20201110 08:39:08.839" endtime="20201110 08:39:08.845"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:08.857" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:08.853" endtime="20201110 08:39:08.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:08.866" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:08.862" endtime="20201110 08:39:08.867"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:08.846" endtime="20201110 08:39:08.868"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:08.876" level="INFO">NAME: 1-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:08.874" endtime="20201110 08:39:08.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:08.881" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:08.879" endtime="20201110 08:39:08.882"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:08.869" endtime="20201110 08:39:08.883"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:08.896" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201110 08:39:08.894" endtime="20201110 08:39:08.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:08.900" level="INFO">VALUE: 6401974</msg>
<status status="PASS" starttime="20201110 08:39:08.898" endtime="20201110 08:39:08.901"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:08.889" endtime="20201110 08:39:08.902"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:08.911" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:08.909" endtime="20201110 08:39:08.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:08.915" level="INFO">VALUE: [6411980, 6421981, 6431981, 6441981, 6451981, 6461981, 6471981, 6481981, 6491981, 6501981, 6511981, 6521981, 6531981, 6541981, 6551981, 6561981, 6571981, 6581981, 6591981, 6601981, 6611981, 6621981, 6631981, 6641981, 6651981, 6661981, 6671981, 6681981, 6691981, 6701981, 6711981, 6721981, 6731981, 6741981, 6751981, 6761981, 6771981, 6781981, 6791981, 6801981, 6811981, 6821981, 6831981, 6841981, 6851981, 6861981, 6871981, 6881981, 6891981, 6901981, 6911981, 6921981, 6931981, 6941981, 6951981, 6961981, 6971981, 6981981, 6991981, 7001981, 7011981, 7021981, 7031981, 7041981, 7051981, 7061981, 7071981, 7081981, 7091981, 7101981, 7111981, 7121981, 7131981, 7141981, 7151981, 7161981, 7171981, 7181981, 7191981, 7201981, 7211981, 7221981, 7231981, 7241981, 7251981, 7261981, 7271981, 7281981, 7291981, 7301981, 7311981, 7321981, 7331981, 7341981, 7351981, 7361981, 7371981, 7381981, 7391981, 7401981]</msg>
<status status="PASS" starttime="20201110 08:39:08.913" endtime="20201110 08:39:08.916"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:08.904" endtime="20201110 08:39:08.917"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:08.927" endtime="20201110 08:39:09.219"></status>
</kw>
<msg timestamp="20201110 08:39:09.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018157639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028164681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:08.925" endtime="20201110 08:39:09.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:09.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018157639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028164681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:09.223" endtime="20201110 08:39:09.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:09.230" endtime="20201110 08:39:09.232"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:08.922" endtime="20201110 08:39:09.233"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:08.918" endtime="20201110 08:39:09.233"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:09.258" level="INFO">${RESULT} = {'diff': [0, 0.010007042, 0.010001915999999996, 0.010000931000000005, 0.010000943999999998, 0.010000971999999997, 0.010000848000000007, 0.010000943999999998, 0.010000916999999998, 0.010000915999999999...</msg>
<status status="PASS" starttime="20201110 08:39:09.234" endtime="20201110 08:39:09.258"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:09.263" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201110 08:39:09.262" endtime="20201110 08:39:09.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:09.265" level="INFO">VALUE: 0.018157639</msg>
<status status="PASS" starttime="20201110 08:39:09.264" endtime="20201110 08:39:09.265"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:09.259" endtime="20201110 08:39:09.265"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:09.270" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:09.269" endtime="20201110 08:39:09.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:09.272" level="INFO">VALUE: [0.028164681, 0.038166597, 0.048167528, 0.058168472, 0.068169444, 0.078170292, 0.088171236, 0.098172153, 0.108173069, 0.118174, 0.128174917, 0.138175847, 0.148176833, 0.158177736, 0.168178611, 0.178179528, 0.188180444, 0.198181389, 0.208182292, 0.218183278, 0.228184139, 0.238185056, 0.248185986, 0.258186903, 0.268187833, 0.278188764, 0.288189681, 0.298190597, 0.308191528, 0.318192458, 0.328193389, 0.338194306, 0.348195236, 0.358196153, 0.368197069, 0.378197986, 0.388198917, 0.398199833, 0.408200764, 0.418201694, 0.428202611, 0.438203528, 0.448204458, 0.458205375, 0.468206306, 0.478207236, 0.488208167, 0.498209083, 0.50821, 0.518210931, 0.528211861, 0.538212778, 0.548213694, 0.558214639, 0.568215542, 0.578216472, 0.588217403, 0.598218375, 0.608219236, 0.618220167, 0.628221083, 0.638222028, 0.648222958, 0.658223861, 0.668224792, 0.678225708, 0.688226653, 0.698227625, 0.708228486, 0.718229417, 0.728230333, 0.73823125, 0.748232181, 0.758233125, 0.768234028, 0.778235014, 0.788235875, 0.798236819, 0.808237736, 0.818238653, 0.828239583, 0.8382405, 0.848241458, 0.858242347, 0.868243292, 0.878244222, 0.888245125, 0.898246056, 0.908246986, 0.918247903, 0.928248847, 0.93824975, 0.948250667, 0.958251625, 0.968252514, 0.978253431, 0.988254361, 0.998255292, 1.008256222, 1.018257125] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:09.271" endtime="20201110 08:39:09.273"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:09.266" endtime="20201110 08:39:09.273"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:09.275" endtime="20201110 08:39:09.277"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:09.279" endtime="20201110 08:39:09.298"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:09.277" endtime="20201110 08:39:09.299"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:09.274" endtime="20201110 08:39:09.299"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.723" endtime="20201110 08:39:09.299"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.571" endtime="20201110 08:39:09.300"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.570" endtime="20201110 08:39:09.300"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:39:09.302" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:09.310" endtime="20201110 08:39:11.396"></status>
</kw>
<msg timestamp="20201110 08:39:11.397" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 8982009, 'start-iter': 1, 'wakeups': [8992034, 9002016, 9012022, 90220...</msg>
<status status="PASS" starttime="20201110 08:39:09.309" endtime="20201110 08:39:11.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:11.403" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 8982009, 'start-iter': 1, 'wakeups': [8992034, 9002016, 9012022, 90220...</msg>
<status status="PASS" starttime="20201110 08:39:11.399" endtime="20201110 08:39:11.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:11.406" endtime="20201110 08:39:11.409"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:09.306" endtime="20201110 08:39:11.410"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:09.304" endtime="20201110 08:39:11.411"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:11.416" level="INFO">${RESULT} = {'start-iter': 1, 'timer-count': 2, 'start-time': 8982009, 'wakeups': [8992034, 9002016, 9012022, 9022021, 9032021, 9042021, 9052021, 9062021, 9072021, 9082021, 9092021, 9102021, 9112021, 9122021, 913...</msg>
<status status="PASS" starttime="20201110 08:39:11.412" endtime="20201110 08:39:11.417"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:11.425" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:11.423" endtime="20201110 08:39:11.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:11.429" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:11.427" endtime="20201110 08:39:11.430"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.418" endtime="20201110 08:39:11.431"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:11.439" level="INFO">NAME: 2-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:11.437" endtime="20201110 08:39:11.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:11.443" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:11.441" endtime="20201110 08:39:11.444"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.432" endtime="20201110 08:39:11.445"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:11.456" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201110 08:39:11.454" endtime="20201110 08:39:11.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:11.460" level="INFO">VALUE: 8982009</msg>
<status status="PASS" starttime="20201110 08:39:11.458" endtime="20201110 08:39:11.461"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.446" endtime="20201110 08:39:11.462"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:11.470" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:11.468" endtime="20201110 08:39:11.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:11.475" level="INFO">VALUE: [8992034, 9002016, 9012022, 9022021, 9032021, 9042021, 9052021, 9062021, 9072021, 9082021, 9092021, 9102021, 9112021, 9122021, 9132021, 9142021, 9152021, 9162021, 9172021, 9182021, 9192021, 9202021, 9212021, 9222021, 9232021, 9242021, 9252021, 9262021, 9272021, 9282021, 9292021, 9302021, 9312021, 9322021, 9332021, 9342021, 9352021, 9362021, 9372021, 9382021, 9392021, 9402021, 9412021, 9422021, 9432021, 9442021, 9452021, 9462021, 9472021, 9482021, 9492021, 9502021, 9512021, 9522021, 9532021, 9542021, 9552021, 9562021, 9572021, 9582021, 9592021, 9602021, 9612021, 9622021, 9632021, 9642021, 9652021, 9662021, 9672021, 9682021, 9692021, 9702021, 9712021, 9722021, 9732021, 9742021, 9752021, 9762021, 9772021, 9782021, 9792021, 9802021, 9812021, 9822021, 9832021, 9842021, 9852021, 9862021, 9872021, 9882021, 9892021, 9902021, 9912021, 9922021, 9932021, 9942021, 9952021, 9962021, 9972021, 9982021]</msg>
<status status="PASS" starttime="20201110 08:39:11.472" endtime="20201110 08:39:11.476"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.463" endtime="20201110 08:39:11.477"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:11.490" endtime="20201110 08:39:11.783"></status>
</kw>
<msg timestamp="20201110 08:39:11.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020992458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031018681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:11.487" endtime="20201110 08:39:11.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:11.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020992458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031018681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:11.787" endtime="20201110 08:39:11.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:11.794" endtime="20201110 08:39:11.796"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.482" endtime="20201110 08:39:11.797"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.478" endtime="20201110 08:39:11.797"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:11.821" level="INFO">${RESULT} = {'diff': [0, 0.010026223, 0.009983138000000003, 0.010006624999999998, 0.009999916999999997, 0.010000999999999996, 0.010000861000000014, 0.010000916999999998, 0.010000943999999998, 0.01000093099999999,...</msg>
<status status="PASS" starttime="20201110 08:39:11.798" endtime="20201110 08:39:11.822"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:11.826" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201110 08:39:11.825" endtime="20201110 08:39:11.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:11.828" level="INFO">VALUE: 0.020992458</msg>
<status status="PASS" starttime="20201110 08:39:11.827" endtime="20201110 08:39:11.829"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.822" endtime="20201110 08:39:11.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:11.834" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:11.833" endtime="20201110 08:39:11.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:11.836" level="INFO">VALUE: [0.031018681, 0.041001819, 0.051008444, 0.061008361, 0.071009361, 0.081010222, 0.091011139, 0.101012083, 0.111013014, 0.121013944, 0.131014833, 0.14101575, 0.151016694, 0.161017667, 0.171018514, 0.181019472, 0.191020444, 0.201021306, 0.211022208, 0.221023139, 0.231024056, 0.241025, 0.251025903, 0.261026833, 0.27102775, 0.281028681, 0.291029597, 0.301030542, 0.311031444, 0.321032361, 0.331033306, 0.341034208, 0.351035139, 0.361036056, 0.371036986, 0.381037917, 0.391038833, 0.40103975, 0.411040681, 0.421041611, 0.431042528, 0.441043458, 0.451044389, 0.461045306, 0.471046278, 0.481047167, 0.491048069, 0.501049, 0.511049917, 0.521050861, 0.531051764, 0.541052736, 0.551053611, 0.561054556, 0.571055458, 0.581056389, 0.591057306, 0.601058236, 0.611059167, 0.621060083, 0.631061028, 0.641061931, 0.651062861, 0.661063778, 0.671064736, 0.681065625, 0.691066556, 0.701067472, 0.711068417, 0.721069389, 0.73107025, 0.741071181, 0.751072125, 0.761073014, 0.771073944, 0.781074861, 0.791075833, 0.801076722, 0.811077639, 0.821078569, 0.831079486, 0.841080431, 0.851081333, 0.861082264, 0.871083194, 0.881084111, 0.891085028, 0.901085958, 0.911086875, 0.921087806, 0.931088736, 0.941089653, 0.951090569, 0.9610915, 0.971092431, 0.981093347, 0.991094347, 1.001095208, 1.011096125, 1.021097042] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:11.835" endtime="20201110 08:39:11.836"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.830" endtime="20201110 08:39:11.837"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:11.839" endtime="20201110 08:39:11.840"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:11.842" endtime="20201110 08:39:11.862"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.841" endtime="20201110 08:39:11.862"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.837" endtime="20201110 08:39:11.863"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:09.303" endtime="20201110 08:39:11.863"></status>
</kw>
<msg timestamp="20201110 08:39:11.864" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:11.871" endtime="20201110 08:39:13.963"></status>
</kw>
<msg timestamp="20201110 08:39:13.965" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 11543148, 'start-iter': 1, 'wakeups': [11553160, 11563153, 11573161, 1...</msg>
<status status="PASS" starttime="20201110 08:39:11.870" endtime="20201110 08:39:13.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:13.970" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 11543148, 'start-iter': 1, 'wakeups': [11553160, 11563153, 11573161, 1...</msg>
<status status="PASS" starttime="20201110 08:39:13.967" endtime="20201110 08:39:13.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:13.973" endtime="20201110 08:39:13.976"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.867" endtime="20201110 08:39:13.977"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.865" endtime="20201110 08:39:13.978"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:13.984" level="INFO">${RESULT} = {'start-iter': 1, 'timer-count': 2, 'start-time': 11543148, 'wakeups': [11553160, 11563153, 11573161, 11583160, 11593160, 11603160, 11613160, 11623160, 11633160, 11643160, 11653160, 11663160, 11673160...</msg>
<status status="PASS" starttime="20201110 08:39:13.980" endtime="20201110 08:39:13.984"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:13.992" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:13.990" endtime="20201110 08:39:13.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:13.996" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:13.994" endtime="20201110 08:39:13.997"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:13.985" endtime="20201110 08:39:13.998"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:14.006" level="INFO">NAME: 2-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:14.004" endtime="20201110 08:39:14.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:14.010" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:14.009" endtime="20201110 08:39:14.011"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:13.999" endtime="20201110 08:39:14.012"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:14.022" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201110 08:39:14.019" endtime="20201110 08:39:14.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:14.028" level="INFO">VALUE: 11543148</msg>
<status status="PASS" starttime="20201110 08:39:14.025" endtime="20201110 08:39:14.028"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:14.013" endtime="20201110 08:39:14.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:14.039" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:14.035" endtime="20201110 08:39:14.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:14.044" level="INFO">VALUE: [11553160, 11563153, 11573161, 11583160, 11593160, 11603160, 11613160, 11623160, 11633160, 11643160, 11653160, 11663160, 11673160, 11683160, 11693160, 11703160, 11713160, 11723160, 11733160, 11743160, 11753160, 11763160, 11773160, 11783160, 11793160, 11803160, 11813160, 11823160, 11833160, 11843160, 11853160, 11863160, 11873160, 11883160, 11893160, 11903160, 11913160, 11923160, 11933160, 11943160, 11953160, 11963160, 11973160, 11983160, 11993160, 12003160, 12013160, 12023160, 12033160, 12043160, 12053160, 12063160, 12073160, 12083160, 12093160, 12103160, 12113160, 12123160, 12133160, 12143160, 12153160, 12163160, 12173160, 12183160, 12193160, 12203160, 12213160, 12223160, 12233160, 12243160, 12253160, 12263160, 12273160, 12283160, 12293160, 12303160, 12313160, 12323160, 12333160, 12343160, 12353160, 12363160, 12373160, 12383160, 12393160, 12403160, 12413160, 12423160, 12433160, 12443160, 12453160, 12463160, 12473160, 12483160, 12493160, 12503160, 12513160, 12523160, 12533160, 12543160]</msg>
<status status="PASS" starttime="20201110 08:39:14.042" endtime="20201110 08:39:14.044"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:14.030" endtime="20201110 08:39:14.044"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:14.051" endtime="20201110 08:39:14.342"></status>
</kw>
<msg timestamp="20201110 08:39:14.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018512361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028524861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:14.050" endtime="20201110 08:39:14.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:14.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018512361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028524861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:14.345" endtime="20201110 08:39:14.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:14.353" endtime="20201110 08:39:14.355"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:14.047" endtime="20201110 08:39:14.355"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:14.045" endtime="20201110 08:39:14.356"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:14.380" level="INFO">${RESULT} = {'diff': [0, 0.010012499999999997, 0.009994306000000001, 0.010008639, 0.009999901999999998, 0.010000931000000005, 0.010000943999999998, 0.010000903000000005, 0.01000098599999999, 0.010000861, 0.010000...</msg>
<status status="PASS" starttime="20201110 08:39:14.356" endtime="20201110 08:39:14.380"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:14.384" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201110 08:39:14.383" endtime="20201110 08:39:14.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:14.386" level="INFO">VALUE: 0.018512361</msg>
<status status="PASS" starttime="20201110 08:39:14.386" endtime="20201110 08:39:14.387"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:14.381" endtime="20201110 08:39:14.387"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:14.392" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:14.391" endtime="20201110 08:39:14.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:14.394" level="INFO">VALUE: [0.028524861, 0.038519167, 0.048527806, 0.058527708, 0.068528639, 0.078529583, 0.088530486, 0.098531472, 0.108532333, 0.118533306, 0.128534194, 0.138535111, 0.148536028, 0.158537, 0.168537875, 0.178538847, 0.188539722, 0.198540667, 0.208541583, 0.2185425, 0.228543417, 0.238544347, 0.248545264, 0.258546222, 0.268547125, 0.278548056, 0.288548958, 0.298549903, 0.308550806, 0.31855175, 0.328552653, 0.338553583, 0.3485545, 0.358555431, 0.368556361, 0.378557278, 0.388558208, 0.398559139, 0.408560056, 0.418561, 0.428561944, 0.438562833, 0.448563806, 0.458564722, 0.468565597, 0.478566542, 0.4885675, 0.498568375, 0.508569306, 0.518570222, 0.528571181, 0.538572083, 0.548573, 0.558573917, 0.568574847, 0.578575806, 0.588576694, 0.598577625, 0.608578556, 0.618579472, 0.628580403, 0.638581319, 0.64858225, 0.658583167, 0.668584139, 0.678585014, 0.688585931, 0.698586861, 0.708587847, 0.71858875, 0.728589708, 0.738590542, 0.748591472, 0.758592389, 0.768593347, 0.778594236, 0.788595181, 0.798596153, 0.808597014, 0.818597931, 0.828598889, 0.838599778, 0.848600694, 0.858601625, 0.868602542, 0.878603472, 0.888604389, 0.898605319, 0.90860625, 0.918607167, 0.928608097, 0.938609, 0.948609944, 0.958610847, 0.968611778, 0.978612694, 0.988613639, 0.998614542, 1.008615472, 1.018616403] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:14.393" endtime="20201110 08:39:14.394"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:14.388" endtime="20201110 08:39:14.395"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:14.397" endtime="20201110 08:39:14.398"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:14.401" endtime="20201110 08:39:14.421"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:14.399" endtime="20201110 08:39:14.421"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:14.395" endtime="20201110 08:39:14.422"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.864" endtime="20201110 08:39:14.422"></status>
</kw>
<msg timestamp="20201110 08:39:14.422" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:14.430" endtime="20201110 08:39:16.522"></status>
</kw>
<msg timestamp="20201110 08:39:16.523" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 14101739, 'start-iter': 1, 'wakeups': [14111751, 14121751, 14131751, 1...</msg>
<status status="PASS" starttime="20201110 08:39:14.429" endtime="20201110 08:39:16.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:16.530" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 14101739, 'start-iter': 1, 'wakeups': [14111751, 14121751, 14131751, 1...</msg>
<status status="PASS" starttime="20201110 08:39:16.526" endtime="20201110 08:39:16.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:16.532" endtime="20201110 08:39:16.536"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:14.426" endtime="20201110 08:39:16.537"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:14.424" endtime="20201110 08:39:16.538"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:16.544" level="INFO">${RESULT} = {'start-iter': 1, 'timer-count': 2, 'start-time': 14101739, 'wakeups': [14111751, 14121751, 14131751, 14141751, 14151751, 14161751, 14171751, 14181751, 14191751, 14201751, 14211751, 14221751, 14231751...</msg>
<status status="PASS" starttime="20201110 08:39:16.539" endtime="20201110 08:39:16.545"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:16.554" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:16.552" endtime="20201110 08:39:16.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:16.559" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:16.557" endtime="20201110 08:39:16.559"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:16.546" endtime="20201110 08:39:16.560"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:16.569" level="INFO">NAME: 2-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:16.567" endtime="20201110 08:39:16.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:16.573" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:16.571" endtime="20201110 08:39:16.574"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:16.562" endtime="20201110 08:39:16.575"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:16.583" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201110 08:39:16.581" endtime="20201110 08:39:16.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:16.587" level="INFO">VALUE: 14101739</msg>
<status status="PASS" starttime="20201110 08:39:16.585" endtime="20201110 08:39:16.588"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:16.576" endtime="20201110 08:39:16.589"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:16.597" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:16.595" endtime="20201110 08:39:16.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:16.602" level="INFO">VALUE: [14111751, 14121751, 14131751, 14141751, 14151751, 14161751, 14171751, 14181751, 14191751, 14201751, 14211751, 14221751, 14231751, 14241751, 14251751, 14261751, 14271751, 14281751, 14291751, 14301751, 14311751, 14321751, 14331751, 14341751, 14351751, 14361751, 14371751, 14381751, 14391751, 14401751, 14411751, 14421751, 14431751, 14441751, 14451751, 14461751, 14471751, 14481751, 14491751, 14501751, 14511751, 14521751, 14531751, 14541751, 14551751, 14561751, 14571751, 14581751, 14591751, 14601751, 14611751, 14621751, 14631751, 14641751, 14651751, 14661751, 14671751, 14681751, 14691751, 14701751, 14711751, 14721751, 14731751, 14741751, 14751751, 14761751, 14771751, 14781751, 14791751, 14801751, 14811751, 14821751, 14831751, 14841751, 14851751, 14861751, 14871751, 14881751, 14891751, 14901751, 14911751, 14921751, 14931751, 14941751, 14951751, 14961751, 14971751, 14981751, 14991751, 15001751, 15011751, 15021751, 15031751, 15041751, 15051751, 15061751, 15071751, 15081751, 15091751, 15101751]</msg>
<status status="PASS" starttime="20201110 08:39:16.600" endtime="20201110 08:39:16.603"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:16.590" endtime="20201110 08:39:16.603"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:16.610" endtime="20201110 08:39:16.902"></status>
</kw>
<msg timestamp="20201110 08:39:16.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018213653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028226625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:16.608" endtime="20201110 08:39:16.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:16.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018213653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028226625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:16.906" endtime="20201110 08:39:16.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:16.914" endtime="20201110 08:39:16.916"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:16.606" endtime="20201110 08:39:16.916"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:16.604" endtime="20201110 08:39:16.917"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:16.940" level="INFO">${RESULT} = {'diff': [0, 0.010012972000000002, 0.010000931000000001, 0.010000929999999998, 0.010000902999999998, 0.010000944000000005, 0.010000916999999998, 0.010000916999999998, 0.010000943999999998, 0.010000888...</msg>
<status status="PASS" starttime="20201110 08:39:16.917" endtime="20201110 08:39:16.941"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:16.945" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201110 08:39:16.944" endtime="20201110 08:39:16.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:16.947" level="INFO">VALUE: 0.018213653</msg>
<status status="PASS" starttime="20201110 08:39:16.946" endtime="20201110 08:39:16.947"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:16.941" endtime="20201110 08:39:16.948"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:16.952" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:16.951" endtime="20201110 08:39:16.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:16.954" level="INFO">VALUE: [0.028226625, 0.038227556, 0.048228486, 0.058229389, 0.068230333, 0.07823125, 0.088232167, 0.098233111, 0.108234, 0.118234931, 0.128235847, 0.138236792, 0.148237694, 0.158238625, 0.168239583, 0.178240458, 0.188241389, 0.198242375, 0.208243236, 0.218244167, 0.228245111, 0.238246, 0.248246931, 0.258247861, 0.268248778, 0.278249694, 0.288250625, 0.298251542, 0.308252458, 0.318253389, 0.328254306, 0.338255236, 0.348256181, 0.358257069, 0.368258, 0.378258917, 0.388259861, 0.398260764, 0.408261694, 0.418262611, 0.428263556, 0.438264458, 0.448265389, 0.458266319, 0.468267306, 0.478268153, 0.488269083, 0.49827, 0.508270944, 0.518271847, 0.528272792, 0.538273694, 0.548274625, 0.558275569, 0.568276472, 0.578277403, 0.588278333, 0.59827925, 0.608280167, 0.618281097, 0.628282014, 0.638282944, 0.648283875, 0.658284792, 0.668285708, 0.678286639, 0.688287556, 0.6982885, 0.708289403, 0.718290333, 0.72829125, 0.738292181, 0.748293097, 0.758294028, 0.768294958, 0.778295875, 0.788296806, 0.798297736, 0.808298681, 0.818299597, 0.8283005, 0.838301431, 0.848302403, 0.858303292, 0.868304194, 0.878305111, 0.888306056, 0.898306986, 0.908307903, 0.918308806, 0.928309736, 0.938310667, 0.948311583, 0.958312569, 0.968313431, 0.978314403, 0.988315278, 0.998316208, 1.008317139, 1.018318056] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:16.953" endtime="20201110 08:39:16.955"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:16.948" endtime="20201110 08:39:16.955"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:16.957" endtime="20201110 08:39:16.959"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:16.961" endtime="20201110 08:39:16.980"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:16.959" endtime="20201110 08:39:16.981"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:16.956" endtime="20201110 08:39:16.981"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:14.423" endtime="20201110 08:39:16.981"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:09.301" endtime="20201110 08:39:16.982"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:09.300" endtime="20201110 08:39:16.982"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:39:16.984" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:16.993" endtime="20201110 08:39:19.085"></status>
</kw>
<msg timestamp="20201110 08:39:19.086" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 16664800, 'start-iter': 1, 'wakeups': [16674817, 16684817, 16694818, 1...</msg>
<status status="PASS" starttime="20201110 08:39:16.992" endtime="20201110 08:39:19.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:19.092" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 16664800, 'start-iter': 1, 'wakeups': [16674817, 16684817, 16694818, 1...</msg>
<status status="PASS" starttime="20201110 08:39:19.088" endtime="20201110 08:39:19.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:19.094" endtime="20201110 08:39:19.097"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:16.988" endtime="20201110 08:39:19.098"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:16.986" endtime="20201110 08:39:19.105"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:19.110" level="INFO">${RESULT} = {'start-iter': 1, 'timer-count': 3, 'start-time': 16664800, 'wakeups': [16674817, 16684817, 16694818, 16704818, 16714818, 16724818, 16734818, 16744818, 16754818, 16764818, 16774818, 16784818, 16794818...</msg>
<status status="PASS" starttime="20201110 08:39:19.106" endtime="20201110 08:39:19.111"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:19.119" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:19.117" endtime="20201110 08:39:19.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:19.123" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:19.121" endtime="20201110 08:39:19.124"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:19.112" endtime="20201110 08:39:19.125"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:19.133" level="INFO">NAME: 3-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:19.131" endtime="20201110 08:39:19.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:19.138" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:19.136" endtime="20201110 08:39:19.138"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:19.126" endtime="20201110 08:39:19.139"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:19.147" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201110 08:39:19.145" endtime="20201110 08:39:19.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:19.151" level="INFO">VALUE: 16664800</msg>
<status status="PASS" starttime="20201110 08:39:19.150" endtime="20201110 08:39:19.151"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:19.140" endtime="20201110 08:39:19.152"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:19.156" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:19.155" endtime="20201110 08:39:19.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:19.158" level="INFO">VALUE: [16674817, 16684817, 16694818, 16704818, 16714818, 16724818, 16734818, 16744818, 16754818, 16764818, 16774818, 16784818, 16794818, 16804818, 16814818, 16824818, 16834818, 16844818, 16854818, 16864818, 16874818, 16884818, 16894818, 16904818, 16914818, 16924818, 16934818, 16944818, 16954818, 16964818, 16974818, 16984818, 16994818, 17004818, 17014818, 17024818, 17034818, 17044818, 17054818, 17064818, 17074818, 17084818, 17094818, 17104818, 17114818, 17124818, 17134818, 17144818, 17154818, 17164818, 17174818, 17184818, 17194818, 17204818, 17214818, 17224818, 17234818, 17244818, 17254818, 17264818, 17274818, 17284818, 17294818, 17304818, 17314818, 17324818, 17334818, 17344818, 17354818, 17364818, 17374818, 17384818, 17394818, 17404818, 17414818, 17424818, 17434818, 17444818, 17454818, 17464818, 17474818, 17484818, 17494818, 17504818, 17514818, 17524818, 17534818, 17544818, 17554818, 17564818, 17574818, 17584818, 17594818, 17604818, 17614818, 17624818, 17634818, 17644818, 17654818, 17664818]</msg>
<status status="PASS" starttime="20201110 08:39:19.157" endtime="20201110 08:39:19.158"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:19.152" endtime="20201110 08:39:19.159"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:19.165" endtime="20201110 08:39:19.457"></status>
</kw>
<msg timestamp="20201110 08:39:19.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021714986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031733083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:19.164" endtime="20201110 08:39:19.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:19.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021714986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031733083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:19.460" endtime="20201110 08:39:19.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:19.468" endtime="20201110 08:39:19.470"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:19.161" endtime="20201110 08:39:19.470"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:19.159" endtime="20201110 08:39:19.471"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:19.496" level="INFO">${RESULT} = {'diff': [0, 0.010018097000000004, 0.010000138999999998, 0.010001944999999998, 0.010000929999999998, 0.010000902999999998, 0.010000916999999998, 0.010000916000000012, 0.01000093099999999, 0.0100009169...</msg>
<status status="PASS" starttime="20201110 08:39:19.471" endtime="20201110 08:39:19.497"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:19.501" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201110 08:39:19.500" endtime="20201110 08:39:19.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:19.503" level="INFO">VALUE: 0.021714986</msg>
<status status="PASS" starttime="20201110 08:39:19.502" endtime="20201110 08:39:19.503"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:19.497" endtime="20201110 08:39:19.504"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:19.508" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:19.507" endtime="20201110 08:39:19.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:19.510" level="INFO">VALUE: [0.031733083, 0.041733222, 0.051735167, 0.061736097, 0.071737, 0.081737917, 0.091738833, 0.101739764, 0.111740681, 0.121741625, 0.131742542, 0.141743472, 0.151744389, 0.161745292, 0.171746222, 0.181747139, 0.191748069, 0.201749028, 0.211749917, 0.221750833, 0.23175175, 0.241752722, 0.251753625, 0.261754542, 0.271755444, 0.281756431, 0.291757292, 0.301758222, 0.311759139, 0.321760069, 0.331760986, 0.341761931, 0.351762847, 0.361763778, 0.371764722, 0.381765611, 0.391766528, 0.401767472, 0.411768375, 0.421769319, 0.431770236, 0.441771153, 0.451772083, 0.461773028, 0.471773931, 0.481774861, 0.491775792, 0.501776694, 0.511777639, 0.521778583, 0.5317795, 0.541780389, 0.551781333, 0.561782236, 0.571783208, 0.581784097, 0.591785069, 0.601785944, 0.611786861, 0.621787833, 0.631788708, 0.641789639, 0.651790583, 0.6617915, 0.671792431, 0.681793333, 0.691794306, 0.701795194, 0.711796111, 0.721797042, 0.731797958, 0.741798875, 0.751799819, 0.761800722, 0.771801639, 0.781802569, 0.7918035, 0.801804417, 0.811805361, 0.821806264, 0.831807194, 0.841808125, 0.851809028, 0.861809958, 0.871810889, 0.881811806, 0.891812806, 0.901813653, 0.911814583, 0.921815486, 0.931816431, 0.941817333, 0.951818264, 0.961819194, 0.971820111, 0.981821028, 0.991821972, 1.001822875, 1.011823806, 1.021824736] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:19.509" endtime="20201110 08:39:19.511"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:19.504" endtime="20201110 08:39:19.511"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:19.513" endtime="20201110 08:39:19.515"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:19.517" endtime="20201110 08:39:19.536"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:19.515" endtime="20201110 08:39:19.537"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:19.512" endtime="20201110 08:39:19.537"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:16.985" endtime="20201110 08:39:19.537"></status>
</kw>
<msg timestamp="20201110 08:39:19.537" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:19.545" endtime="20201110 08:39:21.637"></status>
</kw>
<msg timestamp="20201110 08:39:21.639" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 19217069, 'start-iter': 1, 'wakeups': [19227088, 19237088, 19247087, 1...</msg>
<status status="PASS" starttime="20201110 08:39:19.544" endtime="20201110 08:39:21.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:21.645" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 19217069, 'start-iter': 1, 'wakeups': [19227088, 19237088, 19247087, 1...</msg>
<status status="PASS" starttime="20201110 08:39:21.641" endtime="20201110 08:39:21.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:21.647" endtime="20201110 08:39:21.651"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:19.541" endtime="20201110 08:39:21.652"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:19.539" endtime="20201110 08:39:21.653"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:21.661" level="INFO">${RESULT} = {'start-iter': 1, 'timer-count': 3, 'start-time': 19217069, 'wakeups': [19227088, 19237088, 19247087, 19257087, 19267087, 19277087, 19287087, 19297087, 19307087, 19317087, 19327087, 19337087, 19347087...</msg>
<status status="PASS" starttime="20201110 08:39:21.655" endtime="20201110 08:39:21.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:21.669" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:21.667" endtime="20201110 08:39:21.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:21.674" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:21.672" endtime="20201110 08:39:21.675"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:21.663" endtime="20201110 08:39:21.676"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:21.685" level="INFO">NAME: 3-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:21.683" endtime="20201110 08:39:21.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:21.689" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:21.687" endtime="20201110 08:39:21.690"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:21.678" endtime="20201110 08:39:21.691"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:21.699" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201110 08:39:21.697" endtime="20201110 08:39:21.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:21.704" level="INFO">VALUE: 19217069</msg>
<status status="PASS" starttime="20201110 08:39:21.702" endtime="20201110 08:39:21.704"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:21.692" endtime="20201110 08:39:21.705"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:21.714" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:21.712" endtime="20201110 08:39:21.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:21.718" level="INFO">VALUE: [19227088, 19237088, 19247087, 19257087, 19267087, 19277087, 19287087, 19297087, 19307087, 19317087, 19327087, 19337087, 19347087, 19357087, 19367087, 19377087, 19387087, 19397087, 19407087, 19417087, 19427087, 19437087, 19447087, 19457087, 19467087, 19477087, 19487087, 19497087, 19507087, 19517087, 19527087, 19537087, 19547087, 19557087, 19567087, 19577087, 19587087, 19597087, 19607087, 19617087, 19627087, 19637087, 19647087, 19657087, 19667087, 19677087, 19687087, 19697087, 19707087, 19717087, 19727087, 19737087, 19747087, 19757087, 19767087, 19777087, 19787087, 19797087, 19807087, 19817087, 19827087, 19837087, 19847087, 19857087, 19867087, 19877087, 19887087, 19897087, 19907087, 19917087, 19927087, 19937087, 19947087, 19957087, 19967087, 19977087, 19987087, 19997087, 20007087, 20017087, 20027087, 20037087, 20047087, 20057087, 20067087, 20077087, 20087087, 20097087, 20107087, 20117087, 20127087, 20137087, 20147087, 20157087, 20167087, 20177087, 20187087, 20197087, 20207087, 20217087]</msg>
<status status="PASS" starttime="20201110 08:39:21.716" endtime="20201110 08:39:21.719"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:21.707" endtime="20201110 08:39:21.720"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:21.728" endtime="20201110 08:39:22.028"></status>
</kw>
<msg timestamp="20201110 08:39:22.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018176514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028195917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:21.726" endtime="20201110 08:39:22.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:22.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018176514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028195917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:22.032" endtime="20201110 08:39:22.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:22.040" endtime="20201110 08:39:22.042"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:21.724" endtime="20201110 08:39:22.042"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:21.721" endtime="20201110 08:39:22.043"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:22.068" level="INFO">${RESULT} = {'diff': [0, 0.010019403, 0.010000791000000002, 0.009999930999999997, 0.010000916999999998, 0.010000915999999999, 0.010000931000000005, 0.010000915999999999, 0.010000916999999998, 0.010000931000000005...</msg>
<status status="PASS" starttime="20201110 08:39:22.044" endtime="20201110 08:39:22.068"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:22.073" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201110 08:39:22.072" endtime="20201110 08:39:22.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:22.075" level="INFO">VALUE: 0.018176514</msg>
<status status="PASS" starttime="20201110 08:39:22.074" endtime="20201110 08:39:22.075"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:22.069" endtime="20201110 08:39:22.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:22.081" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:22.079" endtime="20201110 08:39:22.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:22.083" level="INFO">VALUE: [0.028195917, 0.038196708, 0.048196639, 0.058197556, 0.068198472, 0.078199403, 0.088200319, 0.098201236, 0.108202167, 0.118203097, 0.128204042, 0.138204944, 0.148205847, 0.158206778, 0.168207694, 0.178208625, 0.188209569, 0.198210486, 0.208211389, 0.218212347, 0.228213236, 0.238214181, 0.248215083, 0.258216014, 0.268216931, 0.278217861, 0.288218792, 0.298219708, 0.308220639, 0.318221569, 0.328222472, 0.338223417, 0.348224333, 0.35822525, 0.368226181, 0.378227125, 0.388228028, 0.398228944, 0.408229861, 0.418230792, 0.428231708, 0.438232653, 0.448233556, 0.4582345, 0.468235458, 0.478236333, 0.48823725, 0.498238181, 0.508239111, 0.518240083, 0.528240986, 0.538241875, 0.548242875, 0.558243722, 0.568244667, 0.578245569, 0.588246514, 0.598247417, 0.608248347, 0.618249278, 0.628250208, 0.638251125, 0.648252056, 0.658252986, 0.668253903, 0.678254819, 0.688255764, 0.698256667, 0.708257583, 0.718258528, 0.728259444, 0.738260375, 0.748261292, 0.758262222, 0.768263153, 0.778264056, 0.788265014, 0.798265917, 0.808266833, 0.818267764, 0.828268694, 0.838269625, 0.848270528, 0.858271472, 0.868272389, 0.878273375, 0.888274292, 0.898275153, 0.908276069, 0.918277, 0.928277931, 0.938278861, 0.948279778, 0.958280694, 0.968281639, 0.978282556, 0.988283486, 0.998284417, 1.008285333, 1.018286264] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:22.082" endtime="20201110 08:39:22.084"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:22.076" endtime="20201110 08:39:22.084"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:22.087" endtime="20201110 08:39:22.088"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:22.090" endtime="20201110 08:39:22.110"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:22.089" endtime="20201110 08:39:22.110"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:22.085" endtime="20201110 08:39:22.111"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:19.538" endtime="20201110 08:39:22.111"></status>
</kw>
<msg timestamp="20201110 08:39:22.111" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:22.119" endtime="20201110 08:39:24.212"></status>
</kw>
<msg timestamp="20201110 08:39:24.213" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 21791169, 'start-iter': 1, 'wakeups': [21801187, 21811188, 21821187, 2...</msg>
<status status="PASS" starttime="20201110 08:39:22.118" endtime="20201110 08:39:24.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:24.220" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 21791169, 'start-iter': 1, 'wakeups': [21801187, 21811188, 21821187, 2...</msg>
<status status="PASS" starttime="20201110 08:39:24.216" endtime="20201110 08:39:24.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:24.222" endtime="20201110 08:39:24.226"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:22.115" endtime="20201110 08:39:24.227"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:22.113" endtime="20201110 08:39:24.228"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:24.234" level="INFO">${RESULT} = {'start-iter': 1, 'timer-count': 3, 'start-time': 21791169, 'wakeups': [21801187, 21811188, 21821187, 21831187, 21841187, 21851187, 21861187, 21871187, 21881187, 21891187, 21901187, 21911187, 21921187...</msg>
<status status="PASS" starttime="20201110 08:39:24.230" endtime="20201110 08:39:24.235"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:24.243" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:24.241" endtime="20201110 08:39:24.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:24.248" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:24.246" endtime="20201110 08:39:24.248"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:24.236" endtime="20201110 08:39:24.250"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:24.261" level="INFO">NAME: 3-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:24.258" endtime="20201110 08:39:24.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:24.265" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:24.263" endtime="20201110 08:39:24.266"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:24.251" endtime="20201110 08:39:24.267"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:24.279" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201110 08:39:24.273" endtime="20201110 08:39:24.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:24.281" level="INFO">VALUE: 21791169</msg>
<status status="PASS" starttime="20201110 08:39:24.280" endtime="20201110 08:39:24.282"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:24.269" endtime="20201110 08:39:24.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:24.287" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:24.285" endtime="20201110 08:39:24.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:24.289" level="INFO">VALUE: [21801187, 21811188, 21821187, 21831187, 21841187, 21851187, 21861187, 21871187, 21881187, 21891187, 21901187, 21911187, 21921187, 21931187, 21941187, 21951187, 21961187, 21971187, 21981187, 21991187, 22001187, 22011187, 22021187, 22031187, 22041187, 22051187, 22061187, 22071187, 22081187, 22091187, 22101187, 22111187, 22121187, 22131187, 22141187, 22151187, 22161187, 22171187, 22181187, 22191187, 22201187, 22211187, 22221187, 22231187, 22241187, 22251187, 22261187, 22271187, 22281187, 22291187, 22301187, 22311187, 22321187, 22331187, 22341187, 22351187, 22361187, 22371187, 22381187, 22391187, 22401187, 22411187, 22421187, 22431187, 22441187, 22451187, 22461187, 22471187, 22481187, 22491187, 22501187, 22511187, 22521187, 22531187, 22541187, 22551187, 22561187, 22571187, 22581187, 22591187, 22601187, 22611187, 22621187, 22631187, 22641187, 22651187, 22661187, 22671187, 22681187, 22691187, 22701187, 22711187, 22721187, 22731187, 22741187, 22751187, 22761187, 22771187, 22781187, 22791187]</msg>
<status status="PASS" starttime="20201110 08:39:24.288" endtime="20201110 08:39:24.289"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:24.283" endtime="20201110 08:39:24.290"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:24.296" endtime="20201110 08:39:24.588"></status>
</kw>
<msg timestamp="20201110 08:39:24.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018676653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028695792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:24.295" endtime="20201110 08:39:24.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:24.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018676653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028695792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:24.592" endtime="20201110 08:39:24.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:24.600" endtime="20201110 08:39:24.602"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:24.292" endtime="20201110 08:39:24.602"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:24.290" endtime="20201110 08:39:24.603"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:24.628" level="INFO">${RESULT} = {'diff': [0, 0.010019139, 0.010001874999999997, 0.009999930000000004, 0.010000888999999999, 0.010000930999999998, 0.010000930000000005, 0.010000916999999998, 0.010000916999999998, 0.010000930000000005...</msg>
<status status="PASS" starttime="20201110 08:39:24.603" endtime="20201110 08:39:24.628"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:24.633" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201110 08:39:24.632" endtime="20201110 08:39:24.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:24.635" level="INFO">VALUE: 0.018676653</msg>
<status status="PASS" starttime="20201110 08:39:24.634" endtime="20201110 08:39:24.636"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:24.629" endtime="20201110 08:39:24.636"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:24.641" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:24.640" endtime="20201110 08:39:24.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:24.643" level="INFO">VALUE: [0.028695792, 0.038697667, 0.048697597, 0.058698486, 0.068699417, 0.078700347, 0.088701264, 0.098702181, 0.108703111, 0.118704042, 0.128704958, 0.138705875, 0.148706806, 0.158707722, 0.168708653, 0.178709583, 0.1887105, 0.198711417, 0.208712347, 0.218713264, 0.228714181, 0.238715111, 0.248716042, 0.258716944, 0.268717875, 0.278718806, 0.28871975, 0.298720708, 0.308721569, 0.318722486, 0.328723431, 0.338724333, 0.34872525, 0.358726181, 0.368727097, 0.378728028, 0.388728944, 0.398729861, 0.408730847, 0.418731708, 0.428732667, 0.438733556, 0.448734514, 0.458735403, 0.468736333, 0.478737264, 0.488738181, 0.498739125, 0.508740028, 0.518740958, 0.528741875, 0.538742847, 0.548743722, 0.558744639, 0.568745583, 0.5787465, 0.588747417, 0.598748333, 0.608749264, 0.618750194, 0.628751125, 0.638752028, 0.648752958, 0.658753875, 0.668754806, 0.678755722, 0.688756653, 0.698757569, 0.708758542, 0.718759431, 0.728760375, 0.738761278, 0.748762194, 0.758763139, 0.768764056, 0.778764972, 0.788765903, 0.798766819, 0.808767736, 0.818768667, 0.828769597, 0.838770514, 0.848771444, 0.858772361, 0.868773292, 0.878774222, 0.888775139, 0.898776069, 0.908776972, 0.918777917, 0.928778833, 0.938779764, 0.948780681, 0.958781611, 0.968782542, 0.978783444, 0.988784375, 0.998785292, 1.008786222, 1.018787139] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:24.642" endtime="20201110 08:39:24.644"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:24.637" endtime="20201110 08:39:24.644"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:24.647" endtime="20201110 08:39:24.648"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:24.650" endtime="20201110 08:39:24.670"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:24.649" endtime="20201110 08:39:24.670"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:24.645" endtime="20201110 08:39:24.671"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:22.112" endtime="20201110 08:39:24.671"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:16.983" endtime="20201110 08:39:24.671"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:16.982" endtime="20201110 08:39:24.671"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:39:24.674" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:24.682" endtime="20201110 08:39:26.775"></status>
</kw>
<msg timestamp="20201110 08:39:26.777" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 24354066, 'start-iter': 1, 'wakeups': [24364090, 24374091, 24384090, 2...</msg>
<status status="PASS" starttime="20201110 08:39:24.681" endtime="20201110 08:39:26.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:26.783" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 24354066, 'start-iter': 1, 'wakeups': [24364090, 24374091, 24384090, 2...</msg>
<status status="PASS" starttime="20201110 08:39:26.779" endtime="20201110 08:39:26.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:26.786" endtime="20201110 08:39:26.790"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:24.678" endtime="20201110 08:39:26.791"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:24.676" endtime="20201110 08:39:26.792"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:26.798" level="INFO">${RESULT} = {'start-iter': 1, 'timer-count': 4, 'start-time': 24354066, 'wakeups': [24364090, 24374091, 24384090, 24394090, 24404090, 24414090, 24424090, 24434090, 24444090, 24454090, 24464090, 24474090, 24484090...</msg>
<status status="PASS" starttime="20201110 08:39:26.794" endtime="20201110 08:39:26.799"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:26.807" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:26.805" endtime="20201110 08:39:26.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:26.812" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:26.810" endtime="20201110 08:39:26.813"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:26.800" endtime="20201110 08:39:26.814"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:26.823" level="INFO">NAME: 4-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:26.820" endtime="20201110 08:39:26.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:26.827" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:26.825" endtime="20201110 08:39:26.828"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:26.815" endtime="20201110 08:39:26.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:26.838" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201110 08:39:26.836" endtime="20201110 08:39:26.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:26.843" level="INFO">VALUE: 24354066</msg>
<status status="PASS" starttime="20201110 08:39:26.842" endtime="20201110 08:39:26.844"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:26.830" endtime="20201110 08:39:26.844"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:26.848" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:26.847" endtime="20201110 08:39:26.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:26.851" level="INFO">VALUE: [24364090, 24374091, 24384090, 24394090, 24404090, 24414090, 24424090, 24434090, 24444090, 24454090, 24464090, 24474090, 24484090, 24494090, 24504090, 24514090, 24524090, 24534090, 24544090, 24554090, 24564090, 24574090, 24584090, 24594090, 24604090, 24614090, 24624090, 24634090, 24644090, 24654090, 24664090, 24674090, 24684090, 24694090, 24704090, 24714090, 24724090, 24734090, 24744090, 24754090, 24764090, 24774090, 24784090, 24794090, 24804090, 24814090, 24824090, 24834090, 24844090, 24854090, 24864090, 24874090, 24884090, 24894090, 24904090, 24914090, 24924090, 24934090, 24944090, 24954090, 24964090, 24974090, 24984090, 24994090, 25004090, 25014090, 25024090, 25034090, 25044090, 25054090, 25064090, 25074090, 25084090, 25094090, 25104090, 25114090, 25124090, 25134090, 25144090, 25154090, 25164090, 25174090, 25184090, 25194090, 25204090, 25214090, 25224090, 25234090, 25244090, 25254090, 25264090, 25274090, 25284090, 25294090, 25304090, 25314090, 25324090, 25334090, 25344090, 25354090]</msg>
<status status="PASS" starttime="20201110 08:39:26.850" endtime="20201110 08:39:26.852"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:26.845" endtime="20201110 08:39:26.852"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:26.859" endtime="20201110 08:39:27.152"></status>
</kw>
<msg timestamp="20201110 08:39:27.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021525181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031550486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:26.857" endtime="20201110 08:39:27.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:27.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021525181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031550486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:27.156" endtime="20201110 08:39:27.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:27.163" endtime="20201110 08:39:27.165"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:26.855" endtime="20201110 08:39:27.166"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:26.853" endtime="20201110 08:39:27.166"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:27.191" level="INFO">${RESULT} = {'diff': [0, 0.010025305000000002, 0.010001375, 0.010000083, 0.010000902999999998, 0.010000930999999998, 0.010000915999999999, 0.010000916999999998, 0.010000931000000005, 0.010000915999999999, 0.01000...</msg>
<status status="PASS" starttime="20201110 08:39:27.167" endtime="20201110 08:39:27.191"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:27.196" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201110 08:39:27.195" endtime="20201110 08:39:27.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:27.198" level="INFO">VALUE: 0.021525181</msg>
<status status="PASS" starttime="20201110 08:39:27.197" endtime="20201110 08:39:27.198"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:27.192" endtime="20201110 08:39:27.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:27.203" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:27.202" endtime="20201110 08:39:27.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:27.207" level="INFO">VALUE: [0.031550486, 0.041551861, 0.051551944, 0.061552847, 0.071553778, 0.081554694, 0.091555611, 0.101556542, 0.111557458, 0.121558389, 0.131559319, 0.141560222, 0.151561222, 0.161562069, 0.171563, 0.181563931, 0.191564847, 0.201565778, 0.211566694, 0.221567625, 0.231568611, 0.241569472, 0.251570417, 0.261571333, 0.271572236, 0.281573167, 0.291574097, 0.301575042, 0.311575944, 0.321576861, 0.331577778, 0.341578708, 0.351579639, 0.361580556, 0.371581486, 0.381582389, 0.391583319, 0.401584236, 0.411585167, 0.421586083, 0.431587028, 0.441587931, 0.451588889, 0.461589778, 0.471590708, 0.481591625, 0.491592556, 0.501593472, 0.511594403, 0.521595319, 0.531596264, 0.541597194, 0.551598097, 0.561599028, 0.571599944, 0.581600861, 0.591601806, 0.60160275, 0.611603639, 0.621604569, 0.631605486, 0.641606417, 0.651607333, 0.661608278, 0.671609181, 0.681610111, 0.691611028, 0.701611958, 0.711612889, 0.721613806, 0.73161475, 0.741615653, 0.751616583, 0.761617514, 0.771618431, 0.781619361, 0.791620278, 0.801621208, 0.811622153, 0.821623069, 0.831623972, 0.841624903, 0.851625819, 0.86162675, 0.871627681, 0.881628639, 0.891629542, 0.9016305, 0.911631417, 0.921632306, 0.931633236, 0.941634208, 0.951635083, 0.961636014, 0.971636944, 0.981637847, 0.991638806, 1.001639708, 1.011640625, 1.021641542] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:27.205" endtime="20201110 08:39:27.207"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:27.199" endtime="20201110 08:39:27.208"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:27.210" endtime="20201110 08:39:27.211"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:27.213" endtime="20201110 08:39:27.233"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:27.212" endtime="20201110 08:39:27.233"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:27.208" endtime="20201110 08:39:27.234"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:24.675" endtime="20201110 08:39:27.234"></status>
</kw>
<msg timestamp="20201110 08:39:27.235" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:27.243" endtime="20201110 08:39:29.336"></status>
</kw>
<msg timestamp="20201110 08:39:29.337" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 26914846, 'start-iter': 1, 'wakeups': [26924870, 26934871, 26944870, 2...</msg>
<status status="PASS" starttime="20201110 08:39:27.242" endtime="20201110 08:39:29.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:29.343" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 26914846, 'start-iter': 1, 'wakeups': [26924870, 26934871, 26944870, 2...</msg>
<status status="PASS" starttime="20201110 08:39:29.340" endtime="20201110 08:39:29.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:29.346" endtime="20201110 08:39:29.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:27.239" endtime="20201110 08:39:29.351"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:27.237" endtime="20201110 08:39:29.352"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:29.358" level="INFO">${RESULT} = {'start-iter': 1, 'timer-count': 4, 'start-time': 26914846, 'wakeups': [26924870, 26934871, 26944870, 26954870, 26964870, 26974870, 26984870, 26994870, 27004870, 27014870, 27024870, 27034870, 27044870...</msg>
<status status="PASS" starttime="20201110 08:39:29.353" endtime="20201110 08:39:29.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:29.367" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:29.365" endtime="20201110 08:39:29.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:29.371" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:29.369" endtime="20201110 08:39:29.372"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:29.359" endtime="20201110 08:39:29.373"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:29.382" level="INFO">NAME: 4-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:29.380" endtime="20201110 08:39:29.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:29.387" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:29.384" endtime="20201110 08:39:29.387"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:29.374" endtime="20201110 08:39:29.388"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:29.397" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201110 08:39:29.396" endtime="20201110 08:39:29.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:29.399" level="INFO">VALUE: 26914846</msg>
<status status="PASS" starttime="20201110 08:39:29.398" endtime="20201110 08:39:29.400"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:29.390" endtime="20201110 08:39:29.400"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:29.404" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:29.403" endtime="20201110 08:39:29.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:29.407" level="INFO">VALUE: [26924870, 26934871, 26944870, 26954870, 26964870, 26974870, 26984870, 26994870, 27004870, 27014870, 27024870, 27034870, 27044870, 27054870, 27064870, 27074870, 27084870, 27094870, 27104870, 27114870, 27124870, 27134870, 27144870, 27154870, 27164870, 27174870, 27184870, 27194870, 27204870, 27214870, 27224870, 27234870, 27244870, 27254870, 27264870, 27274870, 27284870, 27294870, 27304870, 27314870, 27324870, 27334870, 27344870, 27354870, 27364870, 27374870, 27384870, 27394870, 27404870, 27414870, 27424870, 27434870, 27444870, 27454870, 27464870, 27474870, 27484870, 27494870, 27504870, 27514870, 27524870, 27534870, 27544870, 27554870, 27564870, 27574870, 27584870, 27594870, 27604870, 27614870, 27624870, 27634870, 27644870, 27654870, 27664870, 27674870, 27684870, 27694870, 27704870, 27714870, 27724870, 27734870, 27744870, 27754870, 27764870, 27774870, 27784870, 27794870, 27804870, 27814870, 27824870, 27834870, 27844870, 27854870, 27864870, 27874870, 27884870, 27894870, 27904870, 27914870]</msg>
<status status="PASS" starttime="20201110 08:39:29.405" endtime="20201110 08:39:29.407"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:29.401" endtime="20201110 08:39:29.407"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:29.421" endtime="20201110 08:39:29.711"></status>
</kw>
<msg timestamp="20201110 08:39:29.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019234611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02925975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:39:29.419" endtime="20201110 08:39:29.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:29.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019234611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02925975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:39:29.715" endtime="20201110 08:39:29.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:29.723" endtime="20201110 08:39:29.725"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:29.415" endtime="20201110 08:39:29.726"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:29.408" endtime="20201110 08:39:29.726"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:29.752" level="INFO">${RESULT} = {'diff': [0, 0.010025139000000002, 0.010001389, 0.010000069, 0.010000916999999998, 0.010000931000000005, 0.010000929999999991, 0.010000903000000005, 0.010000930000000005, 0.010000916999999998, 0.01000...</msg>
<status status="PASS" starttime="20201110 08:39:29.727" endtime="20201110 08:39:29.752"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:29.756" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201110 08:39:29.755" endtime="20201110 08:39:29.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:29.758" level="INFO">VALUE: 0.019234611</msg>
<status status="PASS" starttime="20201110 08:39:29.757" endtime="20201110 08:39:29.759"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:29.753" endtime="20201110 08:39:29.759"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:29.764" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:29.763" endtime="20201110 08:39:29.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:29.766" level="INFO">VALUE: [0.02925975, 0.039261139, 0.049261208, 0.059262125, 0.069263056, 0.079263986, 0.089264889, 0.099265819, 0.109266736, 0.119267667, 0.129268583, 0.139269528, 0.149270431, 0.159271375, 0.169272292, 0.179273236, 0.189274125, 0.199275069, 0.209275972, 0.219276903, 0.229277833, 0.23927875, 0.249279667, 0.259280611, 0.269281514, 0.279282458, 0.289283375, 0.299284292, 0.309285208, 0.319286153, 0.329287056, 0.339288, 0.349288917, 0.359289833, 0.369290778, 0.379291694, 0.389292694, 0.399293528, 0.409294458, 0.419295431, 0.429296306, 0.439297236, 0.449298153, 0.459299083, 0.469300014, 0.479300944, 0.489301861, 0.499302778, 0.509303792, 0.519304639, 0.529305556, 0.539306486, 0.549307417, 0.559308319, 0.569309264, 0.579310194, 0.589311097, 0.599312028, 0.609312986, 0.619313875, 0.629314806, 0.639315722, 0.649316653, 0.659317569, 0.669318514, 0.679319417, 0.689320347, 0.699321264, 0.709322194, 0.719323111, 0.729324028, 0.739324958, 0.749325875, 0.759326806, 0.769327792, 0.779328694, 0.789329583, 0.799330486, 0.809331458, 0.819332333, 0.829333264, 0.839334222, 0.849335125, 0.859336028, 0.869336958, 0.879337875, 0.889338819, 0.899339722, 0.909340653, 0.919341569, 0.9293425, 0.939343444, 0.949344347, 0.959345264, 0.969346208, 0.979347111, 0.989348028, 0.999348958, 1.009349875, 1.019350833] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:29.765" endtime="20201110 08:39:29.767"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:29.760" endtime="20201110 08:39:29.767"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:29.769" endtime="20201110 08:39:29.771"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:29.773" endtime="20201110 08:39:29.792"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:29.771" endtime="20201110 08:39:29.793"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:29.768" endtime="20201110 08:39:29.793"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:27.235" endtime="20201110 08:39:29.794"></status>
</kw>
<msg timestamp="20201110 08:39:29.794" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:29.803" endtime="20201110 08:39:31.895"></status>
</kw>
<msg timestamp="20201110 08:39:31.896" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 29475010, 'start-iter': 1, 'wakeups': [29485034, 29495035, 29505034, 2...</msg>
<status status="PASS" starttime="20201110 08:39:29.802" endtime="20201110 08:39:31.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:31.904" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 29475010, 'start-iter': 1, 'wakeups': [29485034, 29495035, 29505034, 2...</msg>
<status status="PASS" starttime="20201110 08:39:31.900" endtime="20201110 08:39:31.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:31.907" endtime="20201110 08:39:31.911"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:29.798" endtime="20201110 08:39:31.912"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:29.796" endtime="20201110 08:39:31.913"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:31.919" level="INFO">${RESULT} = {'start-iter': 1, 'timer-count': 4, 'start-time': 29475010, 'wakeups': [29485034, 29495035, 29505034, 29515034, 29525034, 29535034, 29545034, 29555034, 29565034, 29575034, 29585034, 29595034, 29605034...</msg>
<status status="PASS" starttime="20201110 08:39:31.915" endtime="20201110 08:39:31.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:31.928" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:31.926" endtime="20201110 08:39:31.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:31.932" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:31.930" endtime="20201110 08:39:31.933"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:31.921" endtime="20201110 08:39:31.934"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:31.943" level="INFO">NAME: 4-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:31.941" endtime="20201110 08:39:31.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:31.948" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:31.946" endtime="20201110 08:39:31.949"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:31.936" endtime="20201110 08:39:31.950"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:31.959" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201110 08:39:31.957" endtime="20201110 08:39:31.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:31.964" level="INFO">VALUE: 29475010</msg>
<status status="PASS" starttime="20201110 08:39:31.962" endtime="20201110 08:39:31.964"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:31.951" endtime="20201110 08:39:31.966"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:31.975" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:31.972" endtime="20201110 08:39:31.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:31.983" level="INFO">VALUE: [29485034, 29495035, 29505034, 29515034, 29525034, 29535034, 29545034, 29555034, 29565034, 29575034, 29585034, 29595034, 29605034, 29615034, 29625034, 29635034, 29645034, 29655034, 29665034, 29675034, 29685034, 29695034, 29705034, 29715034, 29725034, 29735034, 29745034, 29755034, 29765034, 29775034, 29785034, 29795034, 29805034, 29815034, 29825034, 29835034, 29845034, 29855034, 29865034, 29875034, 29885034, 29895034, 29905034, 29915034, 29925034, 29935034, 29945034, 29955034, 29965034, 29975034, 29985034, 29995034, 30005034, 30015034, 30025034, 30035034, 30045034, 30055034, 30065034, 30075034, 30085034, 30095034, 30105034, 30115034, 30125034, 30135034, 30145034, 30155034, 30165034, 30175034, 30185034, 30195034, 30205034, 30215034, 30225034, 30235034, 30245034, 30255034, 30265034, 30275034, 30285034, 30295034, 30305034, 30315034, 30325034, 30335034, 30345034, 30355034, 30365034, 30375034, 30385034, 30395034, 30405034, 30415034, 30425034, 30435034, 30445034, 30455034, 30465034, 30475034]</msg>
<status status="PASS" starttime="20201110 08:39:31.981" endtime="20201110 08:39:31.983"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:31.967" endtime="20201110 08:39:31.984"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:31.998" endtime="20201110 08:39:32.292"></status>
</kw>
<msg timestamp="20201110 08:39:32.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019837389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029862792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:31.996" endtime="20201110 08:39:32.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:32.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019837389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029862792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:32.296" endtime="20201110 08:39:32.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:32.304" endtime="20201110 08:39:32.306"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:31.990" endtime="20201110 08:39:32.306"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:31.984" endtime="20201110 08:39:32.307"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:32.332" level="INFO">${RESULT} = {'diff': [0, 0.010025402999999999, 0.010001389, 0.010000055, 0.010000930999999998, 0.010000915999999999, 0.010000945000000011, 0.010000902999999992, 0.010000915999999999, 0.010000931000000005, 0.01000...</msg>
<status status="PASS" starttime="20201110 08:39:32.307" endtime="20201110 08:39:32.333"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:32.337" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201110 08:39:32.336" endtime="20201110 08:39:32.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:32.339" level="INFO">VALUE: 0.019837389</msg>
<status status="PASS" starttime="20201110 08:39:32.338" endtime="20201110 08:39:32.340"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:32.333" endtime="20201110 08:39:32.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:32.345" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:32.344" endtime="20201110 08:39:32.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:32.347" level="INFO">VALUE: [0.029862792, 0.039864181, 0.049864236, 0.059865167, 0.069866083, 0.079867028, 0.089867931, 0.099868847, 0.109869778, 0.119870694, 0.129871639, 0.139872542, 0.149873472, 0.159874389, 0.169875306, 0.17987625, 0.189877153, 0.199878083, 0.209879, 0.219879972, 0.229880847, 0.239881764, 0.249882694, 0.259883611, 0.269884542, 0.279885458, 0.289886403, 0.299887306, 0.309888236, 0.319889153, 0.329890083, 0.339891, 0.349891931, 0.359892847, 0.369893778, 0.379894694, 0.389895611, 0.399896556, 0.409897458, 0.419898389, 0.429899306, 0.439900306, 0.449901153, 0.459902083, 0.469903, 0.479903931, 0.489904875, 0.499905792, 0.509906708, 0.519907625, 0.529908556, 0.539909472, 0.549910417, 0.559911319, 0.56991225, 0.579913222, 0.589914097, 0.599915028, 0.609915944, 0.619916861, 0.629917792, 0.639918722, 0.649919639, 0.659920556, 0.669921486, 0.679922403, 0.689923347, 0.699924264, 0.709925181, 0.719926111, 0.729927028, 0.739927958, 0.749928875, 0.759929819, 0.769930722, 0.779931667, 0.789932583, 0.7999335, 0.809934417, 0.819935361, 0.829936264, 0.839937194, 0.849938153, 0.859939042, 0.869939958, 0.879940903, 0.889941875, 0.899942736, 0.909943667, 0.919944583, 0.929945528, 0.939946431, 0.949947361, 0.959948278, 0.969949222, 0.979950181, 0.989951056, 0.999951986, 1.009952903, 1.019953819] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:32.346" endtime="20201110 08:39:32.347"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:32.341" endtime="20201110 08:39:32.348"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:32.350" endtime="20201110 08:39:32.352"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:32.354" endtime="20201110 08:39:32.373"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:32.352" endtime="20201110 08:39:32.374"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:32.348" endtime="20201110 08:39:32.374"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:29.795" endtime="20201110 08:39:32.375"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:24.673" endtime="20201110 08:39:32.375"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:24.672" endtime="20201110 08:39:32.375"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:39:32.378" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:32.386" endtime="20201110 08:39:34.478"></status>
</kw>
<msg timestamp="20201110 08:39:34.479" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 32057650, 'start-iter': 1, 'wakeups': [32067682, 32077683, 32087663, 3...</msg>
<status status="PASS" starttime="20201110 08:39:32.384" endtime="20201110 08:39:34.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:34.485" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 32057650, 'start-iter': 1, 'wakeups': [32067682, 32077683, 32087663, 3...</msg>
<status status="PASS" starttime="20201110 08:39:34.482" endtime="20201110 08:39:34.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:34.488" endtime="20201110 08:39:34.491"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:32.382" endtime="20201110 08:39:34.493"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:32.380" endtime="20201110 08:39:34.499"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:34.506" level="INFO">${RESULT} = {'start-iter': 1, 'timer-count': 5, 'start-time': 32057650, 'wakeups': [32067682, 32077683, 32087663, 32097683, 32107663, 32117683, 32127663, 32137683, 32147663, 32157683, 32167663, 32177683, 32187663...</msg>
<status status="PASS" starttime="20201110 08:39:34.501" endtime="20201110 08:39:34.506"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:34.517" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:34.513" endtime="20201110 08:39:34.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:34.522" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:34.520" endtime="20201110 08:39:34.523"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:34.508" endtime="20201110 08:39:34.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:34.533" level="INFO">NAME: 5-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:34.530" endtime="20201110 08:39:34.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:34.537" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:34.535" endtime="20201110 08:39:34.538"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:34.525" endtime="20201110 08:39:34.539"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:34.548" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201110 08:39:34.546" endtime="20201110 08:39:34.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:34.553" level="INFO">VALUE: 32057650</msg>
<status status="PASS" starttime="20201110 08:39:34.551" endtime="20201110 08:39:34.554"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:34.541" endtime="20201110 08:39:34.555"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:34.560" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:34.559" endtime="20201110 08:39:34.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:34.562" level="INFO">VALUE: [32067682, 32077683, 32087663, 32097683, 32107663, 32117683, 32127663, 32137683, 32147663, 32157683, 32167663, 32177683, 32187663, 32197683, 32207663, 32217683, 32227663, 32237683, 32247663, 32257683, 32267663, 32277683, 32287663, 32297683, 32307663, 32317683, 32327663, 32337683, 32347663, 32357683, 32367663, 32377683, 32387663, 32397683, 32407663, 32417683, 32427663, 32437683, 32447663, 32457683, 32467663, 32477683, 32487663, 32497683, 32507663, 32517683, 32527663, 32537683, 32547663, 32557683, 32567663, 32577683, 32587663, 32597683, 32607663, 32617683, 32627663, 32637683, 32647663, 32657683, 32667663, 32677683, 32687663, 32697683, 32707663, 32717683, 32727663, 32737683, 32747663, 32757683, 32767663, 32777683, 32787663, 32797683, 32807663, 32817683, 32827663, 32837683, 32847663, 32857683, 32867663, 32877683, 32887663, 32897683, 32907663, 32917683, 32927663, 32937683, 32947663, 32957683, 32967663, 32977683, 32987663, 32997683, 33007663, 33017683, 33027663, 33037683, 33047663, 33057683]</msg>
<status status="PASS" starttime="20201110 08:39:34.561" endtime="20201110 08:39:34.563"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:34.556" endtime="20201110 08:39:34.563"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:34.570" endtime="20201110 08:39:34.862"></status>
</kw>
<msg timestamp="20201110 08:39:34.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021554694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031587389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:34.568" endtime="20201110 08:39:34.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:34.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021554694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031587389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:34.866" endtime="20201110 08:39:34.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:34.874" endtime="20201110 08:39:34.875"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:34.566" endtime="20201110 08:39:34.876"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:34.564" endtime="20201110 08:39:34.876"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:34.902" level="INFO">${RESULT} = {'diff': [0, 0.010032695000000001, 0.010001471999999997, 0.009981694999999999, 0.010020166000000004, 0.009981681000000006, 0.01002015299999999, 0.009981680000000007, 0.010020181000000003, 0.0099816799...</msg>
<status status="PASS" starttime="20201110 08:39:34.877" endtime="20201110 08:39:34.903"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:34.907" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201110 08:39:34.906" endtime="20201110 08:39:34.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:34.910" level="INFO">VALUE: 0.021554694</msg>
<status status="PASS" starttime="20201110 08:39:34.909" endtime="20201110 08:39:34.910"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:34.904" endtime="20201110 08:39:34.910"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:34.915" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:34.914" endtime="20201110 08:39:34.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:34.917" level="INFO">VALUE: [0.031587389, 0.041588861, 0.051570556, 0.061590722, 0.071572403, 0.081592556, 0.091574236, 0.101594417, 0.111576097, 0.12159625, 0.131577931, 0.141598097, 0.151579778, 0.1616, 0.171581625, 0.181601778, 0.191583472, 0.201603625, 0.211585306, 0.221605514, 0.231587181, 0.241607333, 0.251589, 0.261609194, 0.271590847, 0.281611028, 0.291592708, 0.301612861, 0.311594556, 0.321614778, 0.331596389, 0.341616597, 0.351598292, 0.361618403, 0.371600083, 0.381620264, 0.391601931, 0.401622097, 0.411603778, 0.421623958, 0.431605625, 0.441625806, 0.451607472, 0.461627639, 0.471609347, 0.481629542, 0.491611167, 0.501631333, 0.511613028, 0.521633181, 0.531614903, 0.541635042, 0.551616722, 0.561636875, 0.571618583, 0.581638736, 0.591620417, 0.601640625, 0.611622264, 0.621642458, 0.631624125, 0.641644278, 0.651625972, 0.661646125, 0.671627819, 0.681647972, 0.691629653, 0.701649861, 0.711631514, 0.721651708, 0.731633361, 0.741653514, 0.751635208, 0.761655361, 0.771637056, 0.781657208, 0.791638903, 0.801659056, 0.811640764, 0.821660917, 0.831642597, 0.841662764, 0.851644486, 0.861664611, 0.871646306, 0.881666458, 0.891648139, 0.901668306, 0.91165, 0.921670153, 0.931651833, 0.941672, 0.95165375, 0.961673847, 0.971655528, 0.981675708, 0.991657375, 1.001677542, 1.011659236, 1.021679389] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:34.916" endtime="20201110 08:39:34.918"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:34.911" endtime="20201110 08:39:34.918"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:34.921" endtime="20201110 08:39:34.922"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:34.924" endtime="20201110 08:39:34.944"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:34.923" endtime="20201110 08:39:34.944"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:34.919" endtime="20201110 08:39:34.945"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:32.378" endtime="20201110 08:39:34.945"></status>
</kw>
<msg timestamp="20201110 08:39:34.945" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:34.954" endtime="20201110 08:39:37.046"></status>
</kw>
<msg timestamp="20201110 08:39:37.047" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 34626022, 'start-iter': 1, 'wakeups': [34636054, 34646055, 34656035, 3...</msg>
<status status="PASS" starttime="20201110 08:39:34.952" endtime="20201110 08:39:37.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:37.054" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 34626022, 'start-iter': 1, 'wakeups': [34636054, 34646055, 34656035, 3...</msg>
<status status="PASS" starttime="20201110 08:39:37.050" endtime="20201110 08:39:37.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:37.056" endtime="20201110 08:39:37.060"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:34.949" endtime="20201110 08:39:37.061"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:34.947" endtime="20201110 08:39:37.062"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:37.068" level="INFO">${RESULT} = {'start-iter': 1, 'timer-count': 5, 'start-time': 34626022, 'wakeups': [34636054, 34646055, 34656035, 34666055, 34676035, 34686055, 34696035, 34706055, 34716035, 34726055, 34736035, 34746055, 34756035...</msg>
<status status="PASS" starttime="20201110 08:39:37.064" endtime="20201110 08:39:37.068"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:37.077" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:37.075" endtime="20201110 08:39:37.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:37.081" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:37.079" endtime="20201110 08:39:37.082"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:37.070" endtime="20201110 08:39:37.084"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:37.093" level="INFO">NAME: 5-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:37.091" endtime="20201110 08:39:37.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:37.098" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:37.096" endtime="20201110 08:39:37.099"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:37.085" endtime="20201110 08:39:37.100"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:37.111" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201110 08:39:37.108" endtime="20201110 08:39:37.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:37.116" level="INFO">VALUE: 34626022</msg>
<status status="PASS" starttime="20201110 08:39:37.114" endtime="20201110 08:39:37.116"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:37.101" endtime="20201110 08:39:37.118"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:37.126" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:37.124" endtime="20201110 08:39:37.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:37.131" level="INFO">VALUE: [34636054, 34646055, 34656035, 34666055, 34676035, 34686055, 34696035, 34706055, 34716035, 34726055, 34736035, 34746055, 34756035, 34766055, 34776035, 34786055, 34796035, 34806055, 34816035, 34826055, 34836035, 34846055, 34856035, 34866055, 34876035, 34886055, 34896035, 34906055, 34916035, 34926055, 34936035, 34946055, 34956035, 34966055, 34976035, 34986055, 34996035, 35006055, 35016035, 35026055, 35036035, 35046055, 35056035, 35066055, 35076035, 35086055, 35096035, 35106055, 35116035, 35126055, 35136035, 35146055, 35156035, 35166055, 35176035, 35186055, 35196035, 35206055, 35216035, 35226055, 35236035, 35246055, 35256035, 35266055, 35276035, 35286055, 35296035, 35306055, 35316035, 35326055, 35336035, 35346055, 35356035, 35366055, 35376035, 35386055, 35396035, 35406055, 35416035, 35426055, 35436035, 35446055, 35456035, 35466055, 35476035, 35486055, 35496035, 35506055, 35516035, 35526055, 35536035, 35546055, 35556035, 35566055, 35576035, 35586055, 35596035, 35606055, 35616035, 35626055]</msg>
<status status="PASS" starttime="20201110 08:39:37.129" endtime="20201110 08:39:37.132"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:37.119" endtime="20201110 08:39:37.133"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:37.140" endtime="20201110 08:39:37.432"></status>
</kw>
<msg timestamp="20201110 08:39:37.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019561792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029594903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:37.138" endtime="20201110 08:39:37.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:37.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019561792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029594903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:37.436" endtime="20201110 08:39:37.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:37.444" endtime="20201110 08:39:37.445"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:37.136" endtime="20201110 08:39:37.446"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:37.134" endtime="20201110 08:39:37.446"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:37.471" level="INFO">${RESULT} = {'diff': [0, 0.010033110999999997, 0.010001486000000004, 0.009981721999999998, 0.010020138999999997, 0.009981694000000006, 0.010020194999999996, 0.009981639, 0.010020165999999997, 0.009981737000000004...</msg>
<status status="PASS" starttime="20201110 08:39:37.447" endtime="20201110 08:39:37.472"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:37.476" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201110 08:39:37.475" endtime="20201110 08:39:37.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:37.478" level="INFO">VALUE: 0.019561792</msg>
<status status="PASS" starttime="20201110 08:39:37.477" endtime="20201110 08:39:37.478"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:37.472" endtime="20201110 08:39:37.479"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:37.485" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:37.483" endtime="20201110 08:39:37.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:37.487" level="INFO">VALUE: [0.029594903, 0.039596389, 0.049578111, 0.05959825, 0.069579944, 0.079600139, 0.089581778, 0.099601944, 0.109583681, 0.119603778, 0.129585486, 0.139605625, 0.149587319, 0.159607528, 0.169589222, 0.179609319, 0.189591, 0.199611167, 0.209592847, 0.219613028, 0.229594694, 0.239614917, 0.249596556, 0.259616722, 0.269598389, 0.279618556, 0.289600236, 0.299620444, 0.309602097, 0.31962225, 0.329604, 0.339624111, 0.349605778, 0.359625958, 0.369607667, 0.379627833, 0.389609472, 0.399629639, 0.409611319, 0.419631486, 0.429613194, 0.439633361, 0.449615014, 0.459635194, 0.469616861, 0.479637028, 0.489618722, 0.499638889, 0.509620597, 0.519640736, 0.529622403, 0.539642583, 0.549624278, 0.559644417, 0.569626111, 0.579646264, 0.589627958, 0.599648153, 0.609629806, 0.619649958, 0.629631653, 0.639651819, 0.6496335, 0.659653667, 0.669635361, 0.679655514, 0.689637208, 0.699657375, 0.709639042, 0.719659222, 0.729640903, 0.739661069, 0.74964275, 0.759662903, 0.769644583, 0.779664806, 0.789646431, 0.799666597, 0.809648375, 0.819668444, 0.829650139, 0.839670306, 0.849652, 0.859672153, 0.869653861, 0.879674014, 0.889655681, 0.899675847, 0.909657528, 0.919677694, 0.929659375, 0.939679542, 0.949661222, 0.959681403, 0.969663083, 0.979683278, 0.989664931, 0.999685097, 1.009666778, 1.019686931] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:37.486" endtime="20201110 08:39:37.487"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:37.479" endtime="20201110 08:39:37.488"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:37.490" endtime="20201110 08:39:37.492"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:37.494" endtime="20201110 08:39:37.513"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:37.492" endtime="20201110 08:39:37.514"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:37.489" endtime="20201110 08:39:37.514"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:34.946" endtime="20201110 08:39:37.514"></status>
</kw>
<msg timestamp="20201110 08:39:37.515" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:37.523" endtime="20201110 08:39:39.615"></status>
</kw>
<msg timestamp="20201110 08:39:39.617" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 37194712, 'start-iter': 1, 'wakeups': [37204744, 37214745, 37224725, 3...</msg>
<status status="PASS" starttime="20201110 08:39:37.521" endtime="20201110 08:39:39.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:39.623" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 37194712, 'start-iter': 1, 'wakeups': [37204744, 37214745, 37224725, 3...</msg>
<status status="PASS" starttime="20201110 08:39:39.619" endtime="20201110 08:39:39.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:39.626" endtime="20201110 08:39:39.629"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:37.519" endtime="20201110 08:39:39.630"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:37.517" endtime="20201110 08:39:39.631"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:39.637" level="INFO">${RESULT} = {'start-iter': 1, 'timer-count': 5, 'start-time': 37194712, 'wakeups': [37204744, 37214745, 37224725, 37234745, 37244725, 37254745, 37264725, 37274745, 37284725, 37294745, 37304725, 37314745, 37324725...</msg>
<status status="PASS" starttime="20201110 08:39:39.633" endtime="20201110 08:39:39.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:39.646" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:39.644" endtime="20201110 08:39:39.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:39.651" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:39.649" endtime="20201110 08:39:39.652"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:39.639" endtime="20201110 08:39:39.653"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:39.662" level="INFO">NAME: 5-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:39.659" endtime="20201110 08:39:39.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:39.666" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:39.664" endtime="20201110 08:39:39.667"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:39.654" endtime="20201110 08:39:39.668"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:39.684" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201110 08:39:39.675" endtime="20201110 08:39:39.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:39.689" level="INFO">VALUE: 37194712</msg>
<status status="PASS" starttime="20201110 08:39:39.687" endtime="20201110 08:39:39.690"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:39.669" endtime="20201110 08:39:39.691"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:39.699" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:39.698" endtime="20201110 08:39:39.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:39.701" level="INFO">VALUE: [37204744, 37214745, 37224725, 37234745, 37244725, 37254745, 37264725, 37274745, 37284725, 37294745, 37304725, 37314745, 37324725, 37334745, 37344725, 37354745, 37364725, 37374745, 37384725, 37394745, 37404725, 37414745, 37424725, 37434745, 37444725, 37454745, 37464725, 37474745, 37484725, 37494745, 37504725, 37514745, 37524725, 37534745, 37544725, 37554745, 37564725, 37574745, 37584725, 37594745, 37604725, 37614745, 37624725, 37634745, 37644725, 37654745, 37664725, 37674745, 37684725, 37694745, 37704725, 37714745, 37724725, 37734745, 37744725, 37754745, 37764725, 37774745, 37784725, 37794745, 37804725, 37814745, 37824725, 37834745, 37844725, 37854745, 37864725, 37874745, 37884725, 37894745, 37904725, 37914745, 37924725, 37934745, 37944725, 37954745, 37964725, 37974745, 37984725, 37994745, 38004725, 38014745, 38024725, 38034745, 38044725, 38054745, 38064725, 38074745, 38084725, 38094745, 38104725, 38114745, 38124725, 38134745, 38144725, 38154745, 38164725, 38174745, 38184725, 38194745]</msg>
<status status="PASS" starttime="20201110 08:39:39.700" endtime="20201110 08:39:39.702"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:39.692" endtime="20201110 08:39:39.702"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:39.710" endtime="20201110 08:39:40.002"></status>
</kw>
<msg timestamp="20201110 08:39:40.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018741722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028774819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:39.709" endtime="20201110 08:39:40.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:40.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018741722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028774819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:40.006" endtime="20201110 08:39:40.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:40.014" endtime="20201110 08:39:40.016"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:39.706" endtime="20201110 08:39:40.017"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:39.703" endtime="20201110 08:39:40.017"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:40.042" level="INFO">${RESULT} = {'diff': [0, 0.010033097000000001, 0.010001472999999997, 0.00998168, 0.010020181000000003, 0.009981680000000007, 0.01002015299999999, 0.009981721999999998, 0.010020111000000012, 0.009981708999999991, ...</msg>
<status status="PASS" starttime="20201110 08:39:40.018" endtime="20201110 08:39:40.043"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:40.047" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201110 08:39:40.046" endtime="20201110 08:39:40.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:40.049" level="INFO">VALUE: 0.018741722</msg>
<status status="PASS" starttime="20201110 08:39:40.048" endtime="20201110 08:39:40.049"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:40.043" endtime="20201110 08:39:40.050"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:40.055" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:40.054" endtime="20201110 08:39:40.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:40.057" level="INFO">VALUE: [0.028774819, 0.038776292, 0.048757972, 0.058778153, 0.068759833, 0.078779986, 0.088761708, 0.098781819, 0.108763528, 0.118783681, 0.128765347, 0.138785528, 0.148767208, 0.158787403, 0.168769056, 0.178789236, 0.188770944, 0.198791056, 0.208772736, 0.218792903, 0.228774597, 0.238794736, 0.248776431, 0.258796583, 0.268778278, 0.278798431, 0.288780125, 0.298800278, 0.308781958, 0.318802125, 0.328783806, 0.338803986, 0.348785653, 0.358805833, 0.3687875, 0.378807667, 0.388789361, 0.398809528, 0.408791222, 0.418811361, 0.428793056, 0.438813222, 0.448794917, 0.458815083, 0.468796764, 0.478816986, 0.488798597, 0.498818764, 0.508800472, 0.518820611, 0.528802292, 0.538822458, 0.548804139, 0.558824306, 0.568806014, 0.578826167, 0.588807889, 0.598828014, 0.608809694, 0.618829861, 0.628811569, 0.638831708, 0.648813403, 0.658833569, 0.66881525, 0.678835403, 0.688817097, 0.69883725, 0.708818931, 0.718839097, 0.728820778, 0.738840944, 0.748822625, 0.758842792, 0.768824472, 0.778844639, 0.788826319, 0.798846486, 0.808828167, 0.818848347, 0.828830028, 0.838850181, 0.848831875, 0.858852042, 0.868833708, 0.878853875, 0.888835556, 0.898855722, 0.908837417, 0.918857583, 0.928839264, 0.938859417, 0.948841111, 0.958861278, 0.968842958, 0.978863139, 0.988844792, 0.998864972, 1.008846653, 1.018866806] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:40.056" endtime="20201110 08:39:40.058"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:40.051" endtime="20201110 08:39:40.058"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:40.061" endtime="20201110 08:39:40.062"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:40.064" endtime="20201110 08:39:40.084"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:40.063" endtime="20201110 08:39:40.084"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:40.059" endtime="20201110 08:39:40.085"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:37.515" endtime="20201110 08:39:40.085"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:32.376" endtime="20201110 08:39:40.086"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:32.375" endtime="20201110 08:39:40.086"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:39:40.089" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:40.099" endtime="20201110 08:39:42.191"></status>
</kw>
<msg timestamp="20201110 08:39:42.192" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 39770121, 'start-iter': 1, 'wakeups': [39780161, 39790162, 39800156, 3...</msg>
<status status="PASS" starttime="20201110 08:39:40.097" endtime="20201110 08:39:42.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:42.198" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 39770121, 'start-iter': 1, 'wakeups': [39780161, 39790162, 39800156, 3...</msg>
<status status="PASS" starttime="20201110 08:39:42.195" endtime="20201110 08:39:42.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:42.201" endtime="20201110 08:39:42.205"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:40.094" endtime="20201110 08:39:42.206"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:40.091" endtime="20201110 08:39:42.207"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:42.213" level="INFO">${RESULT} = {'start-iter': 1, 'timer-count': 6, 'start-time': 39770121, 'wakeups': [39780161, 39790162, 39800156, 39810156, 39820156, 39830156, 39840156, 39850156, 39860156, 39870156, 39880156, 39890156, 39900156...</msg>
<status status="PASS" starttime="20201110 08:39:42.208" endtime="20201110 08:39:42.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:42.222" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:42.220" endtime="20201110 08:39:42.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:42.227" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:42.225" endtime="20201110 08:39:42.227"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:42.215" endtime="20201110 08:39:42.229"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:42.237" level="INFO">NAME: 6-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:42.235" endtime="20201110 08:39:42.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:42.242" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:42.240" endtime="20201110 08:39:42.243"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:42.230" endtime="20201110 08:39:42.244"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:42.253" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201110 08:39:42.251" endtime="20201110 08:39:42.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:42.257" level="INFO">VALUE: 39770121</msg>
<status status="PASS" starttime="20201110 08:39:42.255" endtime="20201110 08:39:42.258"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:42.245" endtime="20201110 08:39:42.259"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:42.266" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:42.264" endtime="20201110 08:39:42.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:42.268" level="INFO">VALUE: [39780161, 39790162, 39800156, 39810156, 39820156, 39830156, 39840156, 39850156, 39860156, 39870156, 39880156, 39890156, 39900156, 39910156, 39920156, 39930156, 39940156, 39950156, 39960156, 39970156, 39980156, 39990156, 40000156, 40010156, 40020156, 40030156, 40040156, 40050156, 40060156, 40070156, 40080156, 40090156, 40100156, 40110156, 40120156, 40130156, 40140156, 40150156, 40160156, 40170156, 40180156, 40190156, 40200156, 40210156, 40220156, 40230156, 40240156, 40250156, 40260156, 40270156, 40280156, 40290156, 40300156, 40310156, 40320156, 40330156, 40340156, 40350156, 40360156, 40370156, 40380156, 40390156, 40400156, 40410156, 40420156, 40430156, 40440156, 40450156, 40460156, 40470156, 40480156, 40490156, 40500156, 40510156, 40520156, 40530156, 40540156, 40550156, 40560156, 40570156, 40580156, 40590156, 40600156, 40610156, 40620156, 40630156, 40640156, 40650156, 40660156, 40670156, 40680156, 40690156, 40700156, 40710156, 40720156, 40730156, 40740156, 40750156, 40760156, 40770156]</msg>
<status status="PASS" starttime="20201110 08:39:42.267" endtime="20201110 08:39:42.269"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:42.260" endtime="20201110 08:39:42.269"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:42.276" endtime="20201110 08:39:42.569"></status>
</kw>
<msg timestamp="20201110 08:39:42.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023603361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033644986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:42.275" endtime="20201110 08:39:42.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:42.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023603361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033644986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:42.573" endtime="20201110 08:39:42.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:42.581" endtime="20201110 08:39:42.582"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:42.272" endtime="20201110 08:39:42.583"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:42.270" endtime="20201110 08:39:42.583"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:42.609" level="INFO">${RESULT} = {'diff': [0, 0.010041625000000002, 0.010001375, 0.009995180999999999, 0.010000915999999999, 0.010000944999999997, 0.010000915999999999, 0.010000959000000004, 0.010000875000000006, 0.010000943999999998...</msg>
<status status="PASS" starttime="20201110 08:39:42.584" endtime="20201110 08:39:42.609"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:42.614" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201110 08:39:42.613" endtime="20201110 08:39:42.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:42.616" level="INFO">VALUE: 0.023603361</msg>
<status status="PASS" starttime="20201110 08:39:42.615" endtime="20201110 08:39:42.616"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:42.610" endtime="20201110 08:39:42.617"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:42.622" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:42.620" endtime="20201110 08:39:42.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:42.624" level="INFO">VALUE: [0.033644986, 0.043646361, 0.053641542, 0.063642458, 0.073643403, 0.083644319, 0.093645278, 0.103646153, 0.113647097, 0.123648014, 0.133648958, 0.143649847, 0.153650778, 0.163651681, 0.173652639, 0.183653528, 0.193654472, 0.203655389, 0.213656306, 0.223657222, 0.233658153, 0.243659069, 0.25366, 0.263660917, 0.273661861, 0.283662764, 0.293663708, 0.303664611, 0.313665542, 0.323666458, 0.333667444, 0.343668333, 0.353669306, 0.363670167, 0.373671097, 0.383672, 0.393672986, 0.403673847, 0.413674778, 0.423675694, 0.433676681, 0.443677542, 0.453678472, 0.463679403, 0.473680333, 0.483681236, 0.493682181, 0.503683083, 0.513684028, 0.523685, 0.533685875, 0.543686778, 0.553687722, 0.563688625, 0.573689583, 0.583690486, 0.593691431, 0.603692333, 0.613693264, 0.623694181, 0.633695181, 0.643696028, 0.653696958, 0.663697875, 0.673698806, 0.683699722, 0.693700653, 0.703701569, 0.7137025, 0.723703444, 0.733704361, 0.743705264, 0.753706222, 0.763707111, 0.773708056, 0.783708958, 0.793709903, 0.803710819, 0.81371175, 0.823712681, 0.833713667, 0.843714528, 0.853715458, 0.863716389, 0.873717292, 0.883718208, 0.893719139, 0.903720056, 0.913721, 0.923721903, 0.933722847, 0.943723764, 0.953724694, 0.963725611, 0.973726583, 0.983727444, 0.993728389, 1.003729306, 1.013730236, 1.023731167] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:42.623" endtime="20201110 08:39:42.624"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:42.617" endtime="20201110 08:39:42.625"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:42.627" endtime="20201110 08:39:42.628"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:42.631" endtime="20201110 08:39:42.650"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:42.629" endtime="20201110 08:39:42.651"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:42.625" endtime="20201110 08:39:42.651"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:40.089" endtime="20201110 08:39:42.652"></status>
</kw>
<msg timestamp="20201110 08:39:42.652" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:42.660" endtime="20201110 08:39:44.753"></status>
</kw>
<msg timestamp="20201110 08:39:44.754" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 42331873, 'start-iter': 1, 'wakeups': [42341913, 42351914, 42361908, 4...</msg>
<status status="PASS" starttime="20201110 08:39:42.659" endtime="20201110 08:39:44.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:44.760" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 42331873, 'start-iter': 1, 'wakeups': [42341913, 42351914, 42361908, 4...</msg>
<status status="PASS" starttime="20201110 08:39:44.756" endtime="20201110 08:39:44.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:44.763" endtime="20201110 08:39:44.766"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:42.656" endtime="20201110 08:39:44.767"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:42.654" endtime="20201110 08:39:44.768"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:44.778" level="INFO">${RESULT} = {'start-iter': 1, 'timer-count': 6, 'start-time': 42331873, 'wakeups': [42341913, 42351914, 42361908, 42371908, 42381908, 42391908, 42401908, 42411908, 42421908, 42431908, 42441908, 42451908, 42461908...</msg>
<status status="PASS" starttime="20201110 08:39:44.770" endtime="20201110 08:39:44.778"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:44.789" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:44.786" endtime="20201110 08:39:44.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:44.795" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:44.792" endtime="20201110 08:39:44.796"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:44.780" endtime="20201110 08:39:44.798"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:44.808" level="INFO">NAME: 6-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:44.805" endtime="20201110 08:39:44.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:44.814" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:44.811" endtime="20201110 08:39:44.815"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:44.799" endtime="20201110 08:39:44.817"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:44.828" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201110 08:39:44.825" endtime="20201110 08:39:44.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:44.833" level="INFO">VALUE: 42331873</msg>
<status status="PASS" starttime="20201110 08:39:44.831" endtime="20201110 08:39:44.834"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:44.818" endtime="20201110 08:39:44.835"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:44.843" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:44.841" endtime="20201110 08:39:44.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:44.847" level="INFO">VALUE: [42341913, 42351914, 42361908, 42371908, 42381908, 42391908, 42401908, 42411908, 42421908, 42431908, 42441908, 42451908, 42461908, 42471908, 42481908, 42491908, 42501908, 42511908, 42521908, 42531908, 42541908, 42551908, 42561908, 42571908, 42581908, 42591908, 42601908, 42611908, 42621908, 42631908, 42641908, 42651908, 42661908, 42671908, 42681908, 42691908, 42701908, 42711908, 42721908, 42731908, 42741908, 42751908, 42761908, 42771908, 42781908, 42791908, 42801908, 42811908, 42821908, 42831908, 42841908, 42851908, 42861908, 42871908, 42881908, 42891908, 42901908, 42911908, 42921908, 42931908, 42941908, 42951908, 42961908, 42971908, 42981908, 42991908, 43001908, 43011908, 43021908, 43031908, 43041908, 43051908, 43061908, 43071908, 43081908, 43091908, 43101908, 43111908, 43121908, 43131908, 43141908, 43151908, 43161908, 43171908, 43181908, 43191908, 43201908, 43211908, 43221908, 43231908, 43241908, 43251908, 43261908, 43271908, 43281908, 43291908, 43301908, 43311908, 43321908, 43331908]</msg>
<status status="PASS" starttime="20201110 08:39:44.845" endtime="20201110 08:39:44.848"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:44.836" endtime="20201110 08:39:44.849"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:44.863" endtime="20201110 08:39:45.156"></status>
</kw>
<msg timestamp="20201110 08:39:45.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019080333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029121833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:44.860" endtime="20201110 08:39:45.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:45.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019080333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029121833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:45.160" endtime="20201110 08:39:45.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:45.168" endtime="20201110 08:39:45.169"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:44.855" endtime="20201110 08:39:45.170"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:44.850" endtime="20201110 08:39:45.170"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:45.195" level="INFO">${RESULT} = {'diff': [0, 0.010041499999999998, 0.010001389, 0.009995167, 0.010000917000000005, 0.010000957999999997, 0.010000874999999992, 0.010000930000000005, 0.010000987000000003, 0.010000861, 0.01000093000000...</msg>
<status status="PASS" starttime="20201110 08:39:45.171" endtime="20201110 08:39:45.196"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:45.200" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201110 08:39:45.199" endtime="20201110 08:39:45.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:45.202" level="INFO">VALUE: 0.019080333</msg>
<status status="PASS" starttime="20201110 08:39:45.201" endtime="20201110 08:39:45.202"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:45.196" endtime="20201110 08:39:45.203"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:45.208" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:45.207" endtime="20201110 08:39:45.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:45.210" level="INFO">VALUE: [0.029121833, 0.039123222, 0.049118389, 0.059119306, 0.069120264, 0.079121139, 0.089122069, 0.099123056, 0.109123917, 0.119124847, 0.129125764, 0.139126681, 0.149127625, 0.159128528, 0.169129472, 0.179130361, 0.189131306, 0.199132222, 0.209133153, 0.219134056, 0.229135, 0.239135903, 0.249136847, 0.25913775, 0.269138694, 0.279139611, 0.289140542, 0.299141458, 0.309142389, 0.319143292, 0.329144292, 0.339145153, 0.349146097, 0.359146986, 0.369147931, 0.379148833, 0.389149792, 0.399150694, 0.409151625, 0.419152528, 0.429153472, 0.439154375, 0.449155319, 0.459156278, 0.469157181, 0.479158097, 0.489159028, 0.499159986, 0.509160861, 0.519161778, 0.529162708, 0.539163625, 0.549164556, 0.559165472, 0.569166403, 0.579167319, 0.589168264, 0.599169167, 0.609170111, 0.619171028, 0.629171958, 0.639172875, 0.649173819, 0.659174722, 0.669175667, 0.679176569, 0.689177514, 0.699178417, 0.709179361, 0.719180264, 0.729181194, 0.739182139, 0.749183056, 0.759183972, 0.769184903, 0.779185806, 0.789186736, 0.799187681, 0.809188583, 0.819189514, 0.8291905, 0.839191431, 0.849192375, 0.859193194, 0.869194153, 0.879195042, 0.889195986, 0.899196958, 0.909197833, 0.91919875, 0.929199681, 0.939200597, 0.949201597, 0.959202444, 0.969203389, 0.979204292, 0.989205236, 0.999206139, 1.009207097, 1.019208042] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:45.209" endtime="20201110 08:39:45.211"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:45.203" endtime="20201110 08:39:45.211"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:45.214" endtime="20201110 08:39:45.215"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:45.217" endtime="20201110 08:39:45.237"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:45.216" endtime="20201110 08:39:45.237"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:45.212" endtime="20201110 08:39:45.238"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:42.653" endtime="20201110 08:39:45.238"></status>
</kw>
<msg timestamp="20201110 08:39:45.238" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:45.246" endtime="20201110 08:39:47.338"></status>
</kw>
<msg timestamp="20201110 08:39:47.339" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 44917838, 'start-iter': 1, 'wakeups': [44927879, 44937879, 44947873, 4...</msg>
<status status="PASS" starttime="20201110 08:39:45.245" endtime="20201110 08:39:47.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:47.345" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 44917838, 'start-iter': 1, 'wakeups': [44927879, 44937879, 44947873, 4...</msg>
<status status="PASS" starttime="20201110 08:39:47.342" endtime="20201110 08:39:47.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:47.348" endtime="20201110 08:39:47.351"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:45.242" endtime="20201110 08:39:47.352"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:45.240" endtime="20201110 08:39:47.353"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:47.359" level="INFO">${RESULT} = {'start-iter': 1, 'timer-count': 6, 'start-time': 44917838, 'wakeups': [44927879, 44937879, 44947873, 44957873, 44967873, 44977873, 44987873, 44997873, 45007873, 45017873, 45027873, 45037873, 45047873...</msg>
<status status="PASS" starttime="20201110 08:39:47.355" endtime="20201110 08:39:47.359"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:47.367" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:47.365" endtime="20201110 08:39:47.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:47.371" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:47.369" endtime="20201110 08:39:47.372"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:47.360" endtime="20201110 08:39:47.373"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:47.384" level="INFO">NAME: 6-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:47.379" endtime="20201110 08:39:47.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:47.388" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:47.386" endtime="20201110 08:39:47.388"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:47.374" endtime="20201110 08:39:47.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:47.395" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201110 08:39:47.394" endtime="20201110 08:39:47.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:47.397" level="INFO">VALUE: 44917838</msg>
<status status="PASS" starttime="20201110 08:39:47.396" endtime="20201110 08:39:47.398"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:47.391" endtime="20201110 08:39:47.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:47.402" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:47.401" endtime="20201110 08:39:47.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:47.404" level="INFO">VALUE: [44927879, 44937879, 44947873, 44957873, 44967873, 44977873, 44987873, 44997873, 45007873, 45017873, 45027873, 45037873, 45047873, 45057873, 45067873, 45077873, 45087873, 45097873, 45107873, 45117873, 45127873, 45137873, 45147873, 45157873, 45167873, 45177873, 45187873, 45197873, 45207873, 45217873, 45227873, 45237873, 45247873, 45257873, 45267873, 45277873, 45287873, 45297873, 45307873, 45317873, 45327873, 45337873, 45347873, 45357873, 45367873, 45377873, 45387873, 45397873, 45407873, 45417873, 45427873, 45437873, 45447873, 45457873, 45467873, 45477873, 45487873, 45497873, 45507873, 45517873, 45527873, 45537873, 45547873, 45557873, 45567873, 45577873, 45587873, 45597873, 45607873, 45617873, 45627873, 45637873, 45647873, 45657873, 45667873, 45677873, 45687873, 45697873, 45707873, 45717873, 45727873, 45737873, 45747873, 45757873, 45767873, 45777873, 45787873, 45797873, 45807873, 45817873, 45827873, 45837873, 45847873, 45857873, 45867873, 45877873, 45887873, 45897873, 45907873, 45917873]</msg>
<status status="PASS" starttime="20201110 08:39:47.403" endtime="20201110 08:39:47.405"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:47.399" endtime="20201110 08:39:47.405"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:47.412" endtime="20201110 08:39:47.703"></status>
</kw>
<msg timestamp="20201110 08:39:47.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018201222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028243486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:47.410" endtime="20201110 08:39:47.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:47.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018201222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028243486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:47.707" endtime="20201110 08:39:47.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:47.715" endtime="20201110 08:39:47.716"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:47.408" endtime="20201110 08:39:47.717"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:47.406" endtime="20201110 08:39:47.717"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:47.742" level="INFO">${RESULT} = {'diff': [0, 0.010042264000000002, 0.010000653000000002, 0.009995207999999998, 0.010000902999999998, 0.010000944000000005, 0.010000902999999992, 0.010000931000000005, 0.010000915999999999, 0.010000931...</msg>
<status status="PASS" starttime="20201110 08:39:47.718" endtime="20201110 08:39:47.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:47.746" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201110 08:39:47.745" endtime="20201110 08:39:47.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:47.748" level="INFO">VALUE: 0.018201222</msg>
<status status="PASS" starttime="20201110 08:39:47.747" endtime="20201110 08:39:47.748"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:47.743" endtime="20201110 08:39:47.749"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:47.753" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:47.752" endtime="20201110 08:39:47.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:47.755" level="INFO">VALUE: [0.028243486, 0.038244139, 0.048239347, 0.05824025, 0.068241194, 0.078242097, 0.088243028, 0.098243944, 0.108244875, 0.118245806, 0.128246722, 0.138247639, 0.148248569, 0.158249528, 0.168250417, 0.178251333, 0.18825225, 0.198253208, 0.208254125, 0.218255014, 0.228255944, 0.238256875, 0.248257833, 0.258258708, 0.268259653, 0.278260556, 0.2882615, 0.298262458, 0.308263333, 0.31826425, 0.328265181, 0.338266097, 0.348267028, 0.358267958, 0.368268944, 0.378269806, 0.388270722, 0.398271653, 0.408272583, 0.4182735, 0.428274431, 0.438275333, 0.448276264, 0.458277181, 0.468278125, 0.478279083, 0.488279958, 0.498280944, 0.508281806, 0.518282722, 0.528283653, 0.538284569, 0.5482855, 0.558286431, 0.568287347, 0.578288264, 0.588289236, 0.598290125, 0.608291042, 0.618291972, 0.628292889, 0.638293819, 0.648294764, 0.658295667, 0.668296597, 0.6782975, 0.688298472, 0.698299347, 0.708300292, 0.718301208, 0.728302139, 0.738303042, 0.748303986, 0.758304889, 0.768305847, 0.778306736, 0.788307694, 0.798308597, 0.808309569, 0.818310444, 0.828311375, 0.838312292, 0.848313236, 0.858314139, 0.868315069, 0.878315986, 0.888316917, 0.898317833, 0.908318764, 0.918319694, 0.928320611, 0.938321542, 0.948322472, 0.958323389, 0.968324361, 0.978325236, 0.988326167, 0.998327069, 1.008328028, 1.018328986] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:47.754" endtime="20201110 08:39:47.756"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:47.749" endtime="20201110 08:39:47.756"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:47.758" endtime="20201110 08:39:47.760"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:47.762" endtime="20201110 08:39:47.781"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:47.760" endtime="20201110 08:39:47.782"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:47.757" endtime="20201110 08:39:47.782"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:45.239" endtime="20201110 08:39:47.782"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:40.087" endtime="20201110 08:39:47.783"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:40.086" endtime="20201110 08:39:47.783"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:39:47.785" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:47.793" endtime="20201110 08:39:49.885"></status>
</kw>
<msg timestamp="20201110 08:39:49.886" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 47464746, 'start-iter': 1, 'wakeups': [47474796, 47484796, 47494797, 4...</msg>
<status status="PASS" starttime="20201110 08:39:47.792" endtime="20201110 08:39:49.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:49.892" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 47464746, 'start-iter': 1, 'wakeups': [47474796, 47484796, 47494797, 4...</msg>
<status status="PASS" starttime="20201110 08:39:49.888" endtime="20201110 08:39:49.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:49.894" endtime="20201110 08:39:49.897"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:47.789" endtime="20201110 08:39:49.898"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:47.787" endtime="20201110 08:39:49.905"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:49.910" level="INFO">${RESULT} = {'start-iter': 1, 'timer-count': 7, 'start-time': 47464746, 'wakeups': [47474796, 47484796, 47494797, 47504797, 47514797, 47524797, 47534797, 47544797, 47554797, 47564797, 47574797, 47584797, 47594797...</msg>
<status status="PASS" starttime="20201110 08:39:49.906" endtime="20201110 08:39:49.911"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:49.919" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:49.917" endtime="20201110 08:39:49.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:49.923" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:49.921" endtime="20201110 08:39:49.924"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:49.912" endtime="20201110 08:39:49.925"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:49.933" level="INFO">NAME: 7-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:49.931" endtime="20201110 08:39:49.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:49.937" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:49.935" endtime="20201110 08:39:49.938"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:49.926" endtime="20201110 08:39:49.939"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:49.949" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201110 08:39:49.945" endtime="20201110 08:39:49.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:49.954" level="INFO">VALUE: 47464746</msg>
<status status="PASS" starttime="20201110 08:39:49.952" endtime="20201110 08:39:49.955"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:49.940" endtime="20201110 08:39:49.956"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:49.964" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:49.962" endtime="20201110 08:39:49.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:49.968" level="INFO">VALUE: [47474796, 47484796, 47494797, 47504797, 47514797, 47524797, 47534797, 47544797, 47554797, 47564797, 47574797, 47584797, 47594797, 47604797, 47614797, 47624797, 47634797, 47644797, 47654797, 47664797, 47674797, 47684797, 47694797, 47704797, 47714797, 47724797, 47734797, 47744797, 47754797, 47764797, 47774797, 47784797, 47794797, 47804797, 47814797, 47824797, 47834797, 47844797, 47854797, 47864797, 47874797, 47884797, 47894797, 47904797, 47914797, 47924797, 47934797, 47944797, 47954797, 47964797, 47974797, 47984797, 47994797, 48004797, 48014797, 48024797, 48034797, 48044797, 48054797, 48064797, 48074797, 48084797, 48094797, 48104797, 48114797, 48124797, 48134797, 48144797, 48154797, 48164797, 48174797, 48184797, 48194797, 48204797, 48214797, 48224797, 48234797, 48244797, 48254797, 48264797, 48274797, 48284797, 48294797, 48304797, 48314797, 48324797, 48334797, 48344797, 48354797, 48364797, 48374797, 48384797, 48394797, 48404797, 48414797, 48424797, 48434797, 48444797, 48454797, 48464797]</msg>
<status status="PASS" starttime="20201110 08:39:49.966" endtime="20201110 08:39:49.969"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:49.957" endtime="20201110 08:39:49.970"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:49.977" endtime="20201110 08:39:50.269"></status>
</kw>
<msg timestamp="20201110 08:39:50.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020715903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030766931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:49.976" endtime="20201110 08:39:50.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:50.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020715903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030766931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:50.273" endtime="20201110 08:39:50.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:50.281" endtime="20201110 08:39:50.282"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:49.973" endtime="20201110 08:39:50.283"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:49.972" endtime="20201110 08:39:50.283"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:50.308" level="INFO">${RESULT} = {'diff': [0, 0.010051028, 0.010001263, 0.010001916999999999, 0.010000930999999998, 0.010000902000000006, 0.010000944999999997, 0.010000916999999998, 0.010000915999999999, 0.010000916999999998, 0.01000...</msg>
<status status="PASS" starttime="20201110 08:39:50.284" endtime="20201110 08:39:50.309"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:50.313" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201110 08:39:50.312" endtime="20201110 08:39:50.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:50.315" level="INFO">VALUE: 0.020715903</msg>
<status status="PASS" starttime="20201110 08:39:50.314" endtime="20201110 08:39:50.315"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:50.309" endtime="20201110 08:39:50.316"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:50.320" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:50.319" endtime="20201110 08:39:50.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:50.323" level="INFO">VALUE: [0.030766931, 0.040768194, 0.050770111, 0.060771042, 0.070771944, 0.080772889, 0.090773806, 0.100774722, 0.110775639, 0.120776569, 0.130777486, 0.140778403, 0.150779333, 0.16078025, 0.170781181, 0.180782097, 0.190783097, 0.200783944, 0.210784875, 0.220785792, 0.230786736, 0.240787653, 0.250788556, 0.260789486, 0.270790403, 0.280791333, 0.290792264, 0.300793194, 0.310794125, 0.320795028, 0.330795944, 0.340796875, 0.350797847, 0.360798722, 0.370799653, 0.380800625, 0.390801514, 0.400802431, 0.410803347, 0.420804264, 0.430805194, 0.440806139, 0.450807056, 0.460807958, 0.470808889, 0.480809806, 0.490810736, 0.500811667, 0.510812597, 0.520813514, 0.530814431, 0.540815361, 0.550816292, 0.560817222, 0.570818125, 0.580819069, 0.590820028, 0.600820917, 0.610821833, 0.62082275, 0.630823667, 0.640824625, 0.650825528, 0.660826444, 0.670827375, 0.680828306, 0.690829222, 0.700830139, 0.710831069, 0.720831986, 0.730832917, 0.740833847, 0.750834778, 0.760835708, 0.770836611, 0.780837542, 0.790838472, 0.800839389, 0.810840306, 0.820841264, 0.830842167, 0.840843083, 0.850844028, 0.860844931, 0.870845875, 0.880846778, 0.890847708, 0.900848625, 0.910849556, 0.920850486, 0.930851403, 0.940852333, 0.95085325, 0.960854194, 0.970855097, 0.980856042, 0.990856944, 1.000857875, 1.010858792, 1.020859736] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:50.322" endtime="20201110 08:39:50.323"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:50.316" endtime="20201110 08:39:50.324"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:50.326" endtime="20201110 08:39:50.327"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:50.330" endtime="20201110 08:39:50.349"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:50.328" endtime="20201110 08:39:50.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:50.325" endtime="20201110 08:39:50.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:47.786" endtime="20201110 08:39:50.351"></status>
</kw>
<msg timestamp="20201110 08:39:50.351" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:50.359" endtime="20201110 08:39:52.450"></status>
</kw>
<msg timestamp="20201110 08:39:52.451" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 50030172, 'start-iter': 1, 'wakeups': [50040222, 50050222, 50060223, 5...</msg>
<status status="PASS" starttime="20201110 08:39:50.357" endtime="20201110 08:39:52.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:52.457" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 50030172, 'start-iter': 1, 'wakeups': [50040222, 50050222, 50060223, 5...</msg>
<status status="PASS" starttime="20201110 08:39:52.453" endtime="20201110 08:39:52.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:52.459" endtime="20201110 08:39:52.463"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:50.355" endtime="20201110 08:39:52.464"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:50.353" endtime="20201110 08:39:52.465"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:52.470" level="INFO">${RESULT} = {'start-iter': 1, 'timer-count': 7, 'start-time': 50030172, 'wakeups': [50040222, 50050222, 50060223, 50070223, 50080223, 50090223, 50100223, 50110223, 50120223, 50130223, 50140223, 50150223, 50160223...</msg>
<status status="PASS" starttime="20201110 08:39:52.466" endtime="20201110 08:39:52.471"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:52.478" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:52.476" endtime="20201110 08:39:52.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:52.483" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:52.481" endtime="20201110 08:39:52.483"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:52.472" endtime="20201110 08:39:52.485"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:52.493" level="INFO">NAME: 7-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:52.491" endtime="20201110 08:39:52.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:52.498" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:52.496" endtime="20201110 08:39:52.498"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:52.486" endtime="20201110 08:39:52.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:52.508" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201110 08:39:52.506" endtime="20201110 08:39:52.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:52.512" level="INFO">VALUE: 50030172</msg>
<status status="PASS" starttime="20201110 08:39:52.510" endtime="20201110 08:39:52.513"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:52.501" endtime="20201110 08:39:52.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:52.517" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:52.516" endtime="20201110 08:39:52.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:52.519" level="INFO">VALUE: [50040222, 50050222, 50060223, 50070223, 50080223, 50090223, 50100223, 50110223, 50120223, 50130223, 50140223, 50150223, 50160223, 50170223, 50180223, 50190223, 50200223, 50210223, 50220223, 50230223, 50240223, 50250223, 50260223, 50270223, 50280223, 50290223, 50300223, 50310223, 50320223, 50330223, 50340223, 50350223, 50360223, 50370223, 50380223, 50390223, 50400223, 50410223, 50420223, 50430223, 50440223, 50450223, 50460223, 50470223, 50480223, 50490223, 50500223, 50510223, 50520223, 50530223, 50540223, 50550223, 50560223, 50570223, 50580223, 50590223, 50600223, 50610223, 50620223, 50630223, 50640223, 50650223, 50660223, 50670223, 50680223, 50690223, 50700223, 50710223, 50720223, 50730223, 50740223, 50750223, 50760223, 50770223, 50780223, 50790223, 50800223, 50810223, 50820223, 50830223, 50840223, 50850223, 50860223, 50870223, 50880223, 50890223, 50900223, 50910223, 50920223, 50930223, 50940223, 50950223, 50960223, 50970223, 50980223, 50990223, 51000223, 51010223, 51020223, 51030223]</msg>
<status status="PASS" starttime="20201110 08:39:52.518" endtime="20201110 08:39:52.520"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:52.514" endtime="20201110 08:39:52.520"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:52.528" endtime="20201110 08:39:52.820"></status>
</kw>
<msg timestamp="20201110 08:39:52.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018157708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0282085, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:39:52.526" endtime="20201110 08:39:52.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:52.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018157708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0282085, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:39:52.824" endtime="20201110 08:39:52.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:52.832" endtime="20201110 08:39:52.834"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:52.523" endtime="20201110 08:39:52.834"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:52.521" endtime="20201110 08:39:52.835"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:52.859" level="INFO">${RESULT} = {'diff': [0, 0.010050792, 0.010001568999999998, 0.010001848, 0.010000929999999998, 0.010000916999999998, 0.010000930000000005, 0.010000944999999997, 0.010000903000000005, 0.010000915999999999, 0.01000...</msg>
<status status="PASS" starttime="20201110 08:39:52.835" endtime="20201110 08:39:52.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:52.863" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201110 08:39:52.862" endtime="20201110 08:39:52.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:52.865" level="INFO">VALUE: 0.018157708</msg>
<status status="PASS" starttime="20201110 08:39:52.864" endtime="20201110 08:39:52.865"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:52.860" endtime="20201110 08:39:52.866"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:52.871" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:52.869" endtime="20201110 08:39:52.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:52.873" level="INFO">VALUE: [0.0282085, 0.038210069, 0.048211917, 0.058212847, 0.068213764, 0.078214694, 0.088215639, 0.098216542, 0.108217458, 0.118218444, 0.128219319, 0.138220222, 0.148221153, 0.158222069, 0.168223, 0.178223944, 0.188224833, 0.198225764, 0.208226681, 0.218227611, 0.228228556, 0.238229472, 0.248230375, 0.258231306, 0.268232222, 0.278233153, 0.288234083, 0.298235014, 0.308235917, 0.318236861, 0.328237778, 0.338238694, 0.348239639, 0.358240542, 0.368241458, 0.378242389, 0.388243306, 0.39824425, 0.408245167, 0.418246083, 0.428247014, 0.438247931, 0.448248847, 0.458249792, 0.468250722, 0.478251639, 0.488252569, 0.498253472, 0.508254403, 0.518255319, 0.52825625, 0.538257167, 0.548258097, 0.558259014, 0.568259944, 0.578260875, 0.588261792, 0.598262736, 0.608263653, 0.618264569, 0.6282655, 0.638266431, 0.648267333, 0.658268278, 0.668269181, 0.678270111, 0.688271028, 0.698271958, 0.708272889, 0.718273806, 0.728274736, 0.738275653, 0.748276583, 0.7582775, 0.768278431, 0.778279347, 0.788280306, 0.798281208, 0.808282125, 0.818283056, 0.828283986, 0.838284903, 0.848285889, 0.858286764, 0.868287667, 0.878288597, 0.888289528, 0.898290458, 0.908291375, 0.918292306, 0.928293222, 0.938294139, 0.948295069, 0.958295986, 0.968296917, 0.978297903, 0.988298778, 0.998299694, 1.008300625, 1.018301542] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:52.872" endtime="20201110 08:39:52.874"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:52.866" endtime="20201110 08:39:52.874"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:52.877" endtime="20201110 08:39:52.878"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:52.880" endtime="20201110 08:39:52.899"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:52.878" endtime="20201110 08:39:52.900"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:52.875" endtime="20201110 08:39:52.900"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:50.352" endtime="20201110 08:39:52.900"></status>
</kw>
<msg timestamp="20201110 08:39:52.901" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:52.909" endtime="20201110 08:39:55.002"></status>
</kw>
<msg timestamp="20201110 08:39:55.003" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 52580991, 'start-iter': 1, 'wakeups': [52591041, 52601041, 52611042, 5...</msg>
<status status="PASS" starttime="20201110 08:39:52.908" endtime="20201110 08:39:55.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:55.009" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 52580991, 'start-iter': 1, 'wakeups': [52591041, 52601041, 52611042, 5...</msg>
<status status="PASS" starttime="20201110 08:39:55.005" endtime="20201110 08:39:55.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:55.011" endtime="20201110 08:39:55.014"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:52.905" endtime="20201110 08:39:55.016"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:52.903" endtime="20201110 08:39:55.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:55.022" level="INFO">${RESULT} = {'start-iter': 1, 'timer-count': 7, 'start-time': 52580991, 'wakeups': [52591041, 52601041, 52611042, 52621042, 52631042, 52641042, 52651042, 52661042, 52671042, 52681042, 52691042, 52701042, 52711042...</msg>
<status status="PASS" starttime="20201110 08:39:55.018" endtime="20201110 08:39:55.023"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:55.030" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:55.028" endtime="20201110 08:39:55.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:55.035" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:55.033" endtime="20201110 08:39:55.035"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:55.024" endtime="20201110 08:39:55.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:55.045" level="INFO">NAME: 7-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:55.043" endtime="20201110 08:39:55.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:55.049" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:55.047" endtime="20201110 08:39:55.050"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:55.038" endtime="20201110 08:39:55.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:55.064" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201110 08:39:55.057" endtime="20201110 08:39:55.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:55.069" level="INFO">VALUE: 52580991</msg>
<status status="PASS" starttime="20201110 08:39:55.067" endtime="20201110 08:39:55.069"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:55.052" endtime="20201110 08:39:55.070"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:55.076" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:55.075" endtime="20201110 08:39:55.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:55.078" level="INFO">VALUE: [52591041, 52601041, 52611042, 52621042, 52631042, 52641042, 52651042, 52661042, 52671042, 52681042, 52691042, 52701042, 52711042, 52721042, 52731042, 52741042, 52751042, 52761042, 52771042, 52781042, 52791042, 52801042, 52811042, 52821042, 52831042, 52841042, 52851042, 52861042, 52871042, 52881042, 52891042, 52901042, 52911042, 52921042, 52931042, 52941042, 52951042, 52961042, 52971042, 52981042, 52991042, 53001042, 53011042, 53021042, 53031042, 53041042, 53051042, 53061042, 53071042, 53081042, 53091042, 53101042, 53111042, 53121042, 53131042, 53141042, 53151042, 53161042, 53171042, 53181042, 53191042, 53201042, 53211042, 53221042, 53231042, 53241042, 53251042, 53261042, 53271042, 53281042, 53291042, 53301042, 53311042, 53321042, 53331042, 53341042, 53351042, 53361042, 53371042, 53381042, 53391042, 53401042, 53411042, 53421042, 53431042, 53441042, 53451042, 53461042, 53471042, 53481042, 53491042, 53501042, 53511042, 53521042, 53531042, 53541042, 53551042, 53561042, 53571042, 53581042]</msg>
<status status="PASS" starttime="20201110 08:39:55.077" endtime="20201110 08:39:55.078"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:55.072" endtime="20201110 08:39:55.079"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:55.085" endtime="20201110 08:39:55.377"></status>
</kw>
<msg timestamp="20201110 08:39:55.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019059125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029110458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:55.084" endtime="20201110 08:39:55.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:55.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019059125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029110458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:55.381" endtime="20201110 08:39:55.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:55.389" endtime="20201110 08:39:55.390"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:55.081" endtime="20201110 08:39:55.391"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:55.079" endtime="20201110 08:39:55.391"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:55.416" level="INFO">${RESULT} = {'diff': [0, 0.010051332999999999, 0.010001236000000004, 0.010001916999999999, 0.010000902999999998, 0.010000944000000005, 0.010000902999999992, 0.010000931000000005, 0.010000930000000005, 0.010000916...</msg>
<status status="PASS" starttime="20201110 08:39:55.392" endtime="20201110 08:39:55.416"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:55.420" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201110 08:39:55.419" endtime="20201110 08:39:55.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:55.422" level="INFO">VALUE: 0.019059125</msg>
<status status="PASS" starttime="20201110 08:39:55.421" endtime="20201110 08:39:55.423"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:55.417" endtime="20201110 08:39:55.423"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:55.428" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:55.427" endtime="20201110 08:39:55.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:55.430" level="INFO">VALUE: [0.029110458, 0.039111694, 0.049113611, 0.059114514, 0.069115458, 0.079116361, 0.089117292, 0.099118222, 0.109119139, 0.119120056, 0.129120972, 0.139121903, 0.149122819, 0.159123764, 0.169124667, 0.179125597, 0.189126514, 0.199127458, 0.209128375, 0.219129278, 0.229130222, 0.239131125, 0.249132069, 0.259133042, 0.269133903, 0.279134875, 0.289135819, 0.299136667, 0.309137583, 0.319138514, 0.329139458, 0.339140361, 0.349141333, 0.359142222, 0.369143153, 0.379144097, 0.389145042, 0.399145917, 0.409146889, 0.41914775, 0.429148694, 0.439149597, 0.449150528, 0.459151458, 0.469152389, 0.479153292, 0.489154222, 0.499155153, 0.509156069, 0.519157, 0.529157958, 0.539158847, 0.549159764, 0.559160694, 0.569161625, 0.579162542, 0.589163458, 0.599164444, 0.609165306, 0.619166278, 0.629167153, 0.639168083, 0.649169028, 0.659169944, 0.669170875, 0.679171778, 0.689172708, 0.699173625, 0.709174556, 0.719175472, 0.729176458, 0.739177319, 0.74917825, 0.759179181, 0.769180097, 0.779181028, 0.789181958, 0.799182875, 0.809183819, 0.819184792, 0.829185653, 0.839186597, 0.849187486, 0.859188417, 0.869189347, 0.879190264, 0.88919125, 0.899192111, 0.909193056, 0.919193958, 0.929194903, 0.939195806, 0.949196736, 0.959197681, 0.969198583, 0.979199528, 0.989200431, 0.999201375, 1.009202278, 1.019203236] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:55.429" endtime="20201110 08:39:55.430"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:55.424" endtime="20201110 08:39:55.431"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:55.433" endtime="20201110 08:39:55.435"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:55.437" endtime="20201110 08:39:55.456"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:55.435" endtime="20201110 08:39:55.457"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:55.432" endtime="20201110 08:39:55.457"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:52.901" endtime="20201110 08:39:55.457"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:47.784" endtime="20201110 08:39:55.458"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:47.783" endtime="20201110 08:39:55.458"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:39:55.461" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:55.469" endtime="20201110 08:39:57.563"></status>
</kw>
<msg timestamp="20201110 08:39:57.564" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 55141856, 'start-iter': 1, 'wakeups': [55151916, 55161918, 55171918, 5...</msg>
<status status="PASS" starttime="20201110 08:39:55.468" endtime="20201110 08:39:57.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:57.570" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 55141856, 'start-iter': 1, 'wakeups': [55151916, 55161918, 55171918, 5...</msg>
<status status="PASS" starttime="20201110 08:39:57.566" endtime="20201110 08:39:57.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:57.572" endtime="20201110 08:39:57.575"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:55.465" endtime="20201110 08:39:57.577"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:55.463" endtime="20201110 08:39:57.577"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:57.583" level="INFO">${RESULT} = {'start-iter': 1, 'timer-count': 8, 'start-time': 55141856, 'wakeups': [55151916, 55161918, 55171918, 55181918, 55191918, 55201918, 55211918, 55221918, 55231918, 55241918, 55251918, 55261918, 55271918...</msg>
<status status="PASS" starttime="20201110 08:39:57.579" endtime="20201110 08:39:57.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:57.591" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:57.589" endtime="20201110 08:39:57.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:57.596" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:57.594" endtime="20201110 08:39:57.596"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:57.585" endtime="20201110 08:39:57.597"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:57.606" level="INFO">NAME: 8-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:57.604" endtime="20201110 08:39:57.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:57.610" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:57.608" endtime="20201110 08:39:57.611"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:57.599" endtime="20201110 08:39:57.612"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:57.616" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201110 08:39:57.615" endtime="20201110 08:39:57.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:57.618" level="INFO">VALUE: 55141856</msg>
<status status="PASS" starttime="20201110 08:39:57.618" endtime="20201110 08:39:57.619"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:57.613" endtime="20201110 08:39:57.619"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:57.623" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:57.622" endtime="20201110 08:39:57.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:57.626" level="INFO">VALUE: [55151916, 55161918, 55171918, 55181918, 55191918, 55201918, 55211918, 55221918, 55231918, 55241918, 55251918, 55261918, 55271918, 55281918, 55291918, 55301918, 55311918, 55321918, 55331918, 55341918, 55351918, 55361918, 55371918, 55381918, 55391918, 55401918, 55411918, 55421918, 55431918, 55441918, 55451918, 55461918, 55471918, 55481918, 55491918, 55501918, 55511918, 55521918, 55531918, 55541918, 55551918, 55561918, 55571918, 55581918, 55591918, 55601918, 55611918, 55621918, 55631918, 55641918, 55651918, 55661918, 55671918, 55681918, 55691918, 55701918, 55711918, 55721918, 55731918, 55741918, 55751918, 55761918, 55771918, 55781918, 55791918, 55801918, 55811918, 55821918, 55831918, 55841918, 55851918, 55861918, 55871918, 55881918, 55891918, 55901918, 55911918, 55921918, 55931918, 55941918, 55951918, 55961918, 55971918, 55981918, 55991918, 56001918, 56011918, 56021918, 56031918, 56041918, 56051918, 56061918, 56071918, 56081918, 56091918, 56101918, 56111918, 56121918, 56131918, 56141918]</msg>
<status status="PASS" starttime="20201110 08:39:57.624" endtime="20201110 08:39:57.626"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:57.620" endtime="20201110 08:39:57.627"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:57.633" endtime="20201110 08:39:57.923"></status>
</kw>
<msg timestamp="20201110 08:39:57.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023109778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033171167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:57.632" endtime="20201110 08:39:57.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:57.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023109778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033171167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:57.927" endtime="20201110 08:39:57.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:57.934" endtime="20201110 08:39:57.936"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:57.629" endtime="20201110 08:39:57.936"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:57.627" endtime="20201110 08:39:57.937"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:57.962" level="INFO">${RESULT} = {'diff': [0, 0.010061389, 0.01000293, 0.010000916999999998, 0.010000929999999998, 0.010000916999999998, 0.010000945000000011, 0.010000915999999999, 0.01000095899999999, 0.010000875000000006, 0.0100009...</msg>
<status status="PASS" starttime="20201110 08:39:57.938" endtime="20201110 08:39:57.962"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:57.966" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201110 08:39:57.965" endtime="20201110 08:39:57.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:57.968" level="INFO">VALUE: 0.023109778</msg>
<status status="PASS" starttime="20201110 08:39:57.967" endtime="20201110 08:39:57.968"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:57.962" endtime="20201110 08:39:57.969"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:57.973" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:57.972" endtime="20201110 08:39:57.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:57.975" level="INFO">VALUE: [0.033171167, 0.043174097, 0.053175014, 0.063175944, 0.073176861, 0.083177806, 0.093178722, 0.103179681, 0.113180556, 0.123181542, 0.133182431, 0.143183319, 0.15318425, 0.163185167, 0.173186111, 0.183187014, 0.193187944, 0.203188861, 0.213189792, 0.223190708, 0.233191639, 0.243192556, 0.253193486, 0.263194417, 0.273195333, 0.283196292, 0.293197181, 0.303198097, 0.313199028, 0.323199944, 0.333200875, 0.343201792, 0.353202722, 0.363203639, 0.373204625, 0.3832055, 0.393206458, 0.403207347, 0.413208264, 0.423209194, 0.433210125, 0.443211042, 0.453211958, 0.463212889, 0.473213806, 0.48321475, 0.493215653, 0.503216583, 0.5132175, 0.523218444, 0.533219347, 0.543220278, 0.553221208, 0.563222139, 0.573223056, 0.583223972, 0.593224903, 0.603225875, 0.61322675, 0.623227764, 0.633228597, 0.643229569, 0.653230444, 0.663231389, 0.673232319, 0.683233264, 0.693234139, 0.703235069, 0.713235986, 0.723236931, 0.733237861, 0.743238764, 0.753239708, 0.763240611, 0.773241542, 0.783242458, 0.793243417, 0.803244319, 0.813245236, 0.823246181, 0.833247097, 0.843248014, 0.853248931, 0.863249861, 0.873250792, 0.883251764, 0.893252653, 0.903253556, 0.913254486, 0.923255417, 0.933256333, 0.94325725, 0.953258194, 0.963259125, 0.973260042, 0.983260958, 0.993261889, 1.003262819, 1.013263722, 1.023264667] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:57.974" endtime="20201110 08:39:57.976"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:57.969" endtime="20201110 08:39:57.976"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:57.979" endtime="20201110 08:39:57.980"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:57.982" endtime="20201110 08:39:58.001"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:57.980" endtime="20201110 08:39:58.002"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:57.977" endtime="20201110 08:39:58.003"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:55.461" endtime="20201110 08:39:58.003"></status>
</kw>
<msg timestamp="20201110 08:39:58.003" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:58.011" endtime="20201110 08:40:00.103"></status>
</kw>
<msg timestamp="20201110 08:40:00.105" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 57682568, 'start-iter': 1, 'wakeups': [57692627, 57702629, 57712629, 5...</msg>
<status status="PASS" starttime="20201110 08:39:58.010" endtime="20201110 08:40:00.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:00.110" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 57682568, 'start-iter': 1, 'wakeups': [57692627, 57702629, 57712629, 5...</msg>
<status status="PASS" starttime="20201110 08:40:00.107" endtime="20201110 08:40:00.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:00.113" endtime="20201110 08:40:00.116"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:58.007" endtime="20201110 08:40:00.117"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:58.005" endtime="20201110 08:40:00.118"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:00.123" level="INFO">${RESULT} = {'start-iter': 1, 'timer-count': 8, 'start-time': 57682568, 'wakeups': [57692627, 57702629, 57712629, 57722629, 57732629, 57742629, 57752629, 57762629, 57772629, 57782629, 57792629, 57802629, 57812629...</msg>
<status status="PASS" starttime="20201110 08:40:00.119" endtime="20201110 08:40:00.124"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:00.134" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:40:00.130" endtime="20201110 08:40:00.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:00.138" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:40:00.136" endtime="20201110 08:40:00.139"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:00.125" endtime="20201110 08:40:00.140"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:00.148" level="INFO">NAME: 8-start-iter</msg>
<status status="PASS" starttime="20201110 08:40:00.146" endtime="20201110 08:40:00.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:00.153" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:40:00.150" endtime="20201110 08:40:00.154"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:00.141" endtime="20201110 08:40:00.155"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:00.163" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201110 08:40:00.161" endtime="20201110 08:40:00.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:00.168" level="INFO">VALUE: 57682568</msg>
<status status="PASS" starttime="20201110 08:40:00.166" endtime="20201110 08:40:00.169"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:00.156" endtime="20201110 08:40:00.170"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:00.178" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:00.176" endtime="20201110 08:40:00.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:00.183" level="INFO">VALUE: [57692627, 57702629, 57712629, 57722629, 57732629, 57742629, 57752629, 57762629, 57772629, 57782629, 57792629, 57802629, 57812629, 57822629, 57832629, 57842629, 57852629, 57862629, 57872629, 57882629, 57892629, 57902629, 57912629, 57922629, 57932629, 57942629, 57952629, 57962629, 57972629, 57982629, 57992629, 58002629, 58012629, 58022629, 58032629, 58042629, 58052629, 58062629, 58072629, 58082629, 58092629, 58102629, 58112629, 58122629, 58132629, 58142629, 58152629, 58162629, 58172629, 58182629, 58192629, 58202629, 58212629, 58222629, 58232629, 58242629, 58252629, 58262629, 58272629, 58282629, 58292629, 58302629, 58312629, 58322629, 58332629, 58342629, 58352629, 58362629, 58372629, 58382629, 58392629, 58402629, 58412629, 58422629, 58432629, 58442629, 58452629, 58462629, 58472629, 58482629, 58492629, 58502629, 58512629, 58522629, 58532629, 58542629, 58552629, 58562629, 58572629, 58582629, 58592629, 58602629, 58612629, 58622629, 58632629, 58642629, 58652629, 58662629, 58672629, 58682629]</msg>
<status status="PASS" starttime="20201110 08:40:00.180" endtime="20201110 08:40:00.184"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:00.171" endtime="20201110 08:40:00.185"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:00.196" endtime="20201110 08:40:00.486"></status>
</kw>
<msg timestamp="20201110 08:40:00.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018573597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028634028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:00.194" endtime="20201110 08:40:00.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:00.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018573597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028634028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:00.490" endtime="20201110 08:40:00.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:00.498" endtime="20201110 08:40:00.499"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:00.190" endtime="20201110 08:40:00.500"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:00.186" endtime="20201110 08:40:00.500"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:00.525" level="INFO">${RESULT} = {'diff': [0, 0.010060430999999998, 0.010002528000000004, 0.010000915999999999, 0.010000916999999998, 0.010000930000000005, 0.010000944999999997, 0.010000943999999998, 0.010000875000000006, 0.010000916...</msg>
<status status="PASS" starttime="20201110 08:40:00.501" endtime="20201110 08:40:00.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:00.530" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201110 08:40:00.529" endtime="20201110 08:40:00.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:00.532" level="INFO">VALUE: 0.018573597</msg>
<status status="PASS" starttime="20201110 08:40:00.531" endtime="20201110 08:40:00.532"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:00.526" endtime="20201110 08:40:00.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:00.537" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:00.536" endtime="20201110 08:40:00.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:00.539" level="INFO">VALUE: [0.028634028, 0.038636556, 0.048637472, 0.058638389, 0.068639319, 0.078640264, 0.088641208, 0.098642083, 0.108643, 0.118643931, 0.128644847, 0.138645778, 0.148646694, 0.158647611, 0.168648556, 0.178649472, 0.188650389, 0.198651319, 0.20865225, 0.218653153, 0.228654083, 0.238655014, 0.248655944, 0.258656847, 0.268657778, 0.27865875, 0.288659625, 0.298660556, 0.308661472, 0.318662389, 0.328663319, 0.338664264, 0.348665181, 0.358666083, 0.368667014, 0.378667931, 0.388668861, 0.398669778, 0.408670708, 0.418671625, 0.428672556, 0.438673486, 0.448674417, 0.458675347, 0.46867625, 0.478677181, 0.488678097, 0.498679028, 0.508679944, 0.518680875, 0.528681819, 0.538682722, 0.548683653, 0.558684569, 0.568685528, 0.578686431, 0.588687347, 0.598688264, 0.608689194, 0.618690125, 0.628691042, 0.638691986, 0.648692903, 0.658693819, 0.66869475, 0.678695667, 0.688696597, 0.698697528, 0.708698458, 0.718699361, 0.728700292, 0.738701236, 0.748702153, 0.758703056, 0.768703986, 0.778704917, 0.788705833, 0.798706778, 0.808707681, 0.818708625, 0.828709528, 0.838710458, 0.848711375, 0.858712306, 0.868713222, 0.878714153, 0.888715083, 0.898716, 0.908716931, 0.918717847, 0.928718778, 0.938719694, 0.948720625, 0.958721556, 0.968722472, 0.978723417, 0.988724319, 0.99872525, 1.008726181, 1.018727111] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:40:00.538" endtime="20201110 08:40:00.540"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:00.533" endtime="20201110 08:40:00.540"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:00.543" endtime="20201110 08:40:00.544"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:00.546" endtime="20201110 08:40:00.565"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:00.544" endtime="20201110 08:40:00.566"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:00.541" endtime="20201110 08:40:00.566"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:58.004" endtime="20201110 08:40:00.566"></status>
</kw>
<msg timestamp="20201110 08:40:00.567" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:00.575" endtime="20201110 08:40:02.666"></status>
</kw>
<msg timestamp="20201110 08:40:02.668" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 60246169, 'start-iter': 1, 'wakeups': [60256228, 60266230, 60276230, 6...</msg>
<status status="PASS" starttime="20201110 08:40:00.573" endtime="20201110 08:40:02.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:02.674" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 60246169, 'start-iter': 1, 'wakeups': [60256228, 60266230, 60276230, 6...</msg>
<status status="PASS" starttime="20201110 08:40:02.670" endtime="20201110 08:40:02.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:02.677" endtime="20201110 08:40:02.680"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:00.570" endtime="20201110 08:40:02.681"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:00.569" endtime="20201110 08:40:02.682"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:02.687" level="INFO">${RESULT} = {'start-iter': 1, 'timer-count': 8, 'start-time': 60246169, 'wakeups': [60256228, 60266230, 60276230, 60286230, 60296230, 60306230, 60316230, 60326230, 60336230, 60346230, 60356230, 60366230, 60376230...</msg>
<status status="PASS" starttime="20201110 08:40:02.683" endtime="20201110 08:40:02.688"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:02.696" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:40:02.694" endtime="20201110 08:40:02.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:02.700" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:40:02.698" endtime="20201110 08:40:02.701"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:02.689" endtime="20201110 08:40:02.702"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:02.710" level="INFO">NAME: 8-start-iter</msg>
<status status="PASS" starttime="20201110 08:40:02.708" endtime="20201110 08:40:02.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:02.714" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:40:02.712" endtime="20201110 08:40:02.715"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:02.703" endtime="20201110 08:40:02.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:02.727" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201110 08:40:02.724" endtime="20201110 08:40:02.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:02.731" level="INFO">VALUE: 60246169</msg>
<status status="PASS" starttime="20201110 08:40:02.729" endtime="20201110 08:40:02.732"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:02.717" endtime="20201110 08:40:02.733"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:02.741" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:02.739" endtime="20201110 08:40:02.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:02.744" level="INFO">VALUE: [60256228, 60266230, 60276230, 60286230, 60296230, 60306230, 60316230, 60326230, 60336230, 60346230, 60356230, 60366230, 60376230, 60386230, 60396230, 60406230, 60416230, 60426230, 60436230, 60446230, 60456230, 60466230, 60476230, 60486230, 60496230, 60506230, 60516230, 60526230, 60536230, 60546230, 60556230, 60566230, 60576230, 60586230, 60596230, 60606230, 60616230, 60626230, 60636230, 60646230, 60656230, 60666230, 60676230, 60686230, 60696230, 60706230, 60716230, 60726230, 60736230, 60746230, 60756230, 60766230, 60776230, 60786230, 60796230, 60806230, 60816230, 60826230, 60836230, 60846230, 60856230, 60866230, 60876230, 60886230, 60896230, 60906230, 60916230, 60926230, 60936230, 60946230, 60956230, 60966230, 60976230, 60986230, 60996230, 61006230, 61016230, 61026230, 61036230, 61046230, 61056230, 61066230, 61076230, 61086230, 61096230, 61106230, 61116230, 61126230, 61136230, 61146230, 61156230, 61166230, 61176230, 61186230, 61196230, 61206230, 61216230, 61226230, 61236230, 61246230]</msg>
<status status="PASS" starttime="20201110 08:40:02.743" endtime="20201110 08:40:02.745"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:02.734" endtime="20201110 08:40:02.745"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:02.751" endtime="20201110 08:40:03.044"></status>
</kw>
<msg timestamp="20201110 08:40:03.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01818875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028248722, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:40:02.750" endtime="20201110 08:40:03.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:03.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01818875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028248722, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:40:03.048" endtime="20201110 08:40:03.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:03.055" endtime="20201110 08:40:03.057"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:02.747" endtime="20201110 08:40:03.058"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:02.746" endtime="20201110 08:40:03.058"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:03.082" level="INFO">${RESULT} = {'diff': [0, 0.010059972, 0.010002542, 0.010000929999999998, 0.010000917000000005, 0.010000930999999998, 0.010000915999999999, 0.010000916999999998, 0.010000916999999998, 0.010000930000000005, 0.01000...</msg>
<status status="PASS" starttime="20201110 08:40:03.059" endtime="20201110 08:40:03.083"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:03.087" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201110 08:40:03.086" endtime="20201110 08:40:03.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:03.089" level="INFO">VALUE: 0.01818875</msg>
<status status="PASS" starttime="20201110 08:40:03.088" endtime="20201110 08:40:03.090"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:03.083" endtime="20201110 08:40:03.090"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:03.096" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:03.094" endtime="20201110 08:40:03.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:03.098" level="INFO">VALUE: [0.028248722, 0.038251264, 0.048252194, 0.058253111, 0.068254042, 0.078254958, 0.088255875, 0.098256792, 0.108257722, 0.118258653, 0.128259625, 0.138260486, 0.148261403, 0.158262347, 0.168263292, 0.178264181, 0.188265181, 0.198266028, 0.208266944, 0.218267889, 0.228268792, 0.238269708, 0.248270653, 0.258271583, 0.268272486, 0.278273417, 0.288274333, 0.29827525, 0.308276167, 0.318277111, 0.328278056, 0.338278958, 0.348279861, 0.358280792, 0.36828175, 0.378282639, 0.388283556, 0.3982845, 0.408285417, 0.418286347, 0.428287264, 0.438288194, 0.448289111, 0.458290028, 0.468290944, 0.478291875, 0.488292792, 0.498293722, 0.508294653, 0.518295583, 0.5282965, 0.538297444, 0.548298347, 0.558299264, 0.568300194, 0.578301125, 0.588302042, 0.598302972, 0.608303903, 0.618304819, 0.628305736, 0.638306667, 0.648307597, 0.6583085, 0.668309444, 0.678310361, 0.688311278, 0.698312194, 0.708313125, 0.718314083, 0.728314972, 0.738315917, 0.748316833, 0.758317736, 0.768318667, 0.778319639, 0.788320569, 0.798321444, 0.808322375, 0.818323278, 0.828324222, 0.838325139, 0.848326056, 0.858327, 0.868327903, 0.878328833, 0.88832975, 0.898330722, 0.908331597, 0.918332542, 0.928333444, 0.938334403, 0.948335361, 0.958336236, 0.968337139, 0.978338069, 0.988338986, 0.998339917, 1.008340833, 1.018341778] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:40:03.097" endtime="20201110 08:40:03.098"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:03.091" endtime="20201110 08:40:03.099"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:03.101" endtime="20201110 08:40:03.102"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:03.104" endtime="20201110 08:40:03.123"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:03.103" endtime="20201110 08:40:03.124"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:03.099" endtime="20201110 08:40:03.124"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:00.567" endtime="20201110 08:40:03.125"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:55.459" endtime="20201110 08:40:03.125"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:55.458" endtime="20201110 08:40:03.125"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:40:03.128" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:03.136" endtime="20201110 08:40:05.227"></status>
</kw>
<msg timestamp="20201110 08:40:05.228" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 62807111, 'start-iter': 1, 'wakeups': [62817184, 62827184, 62837177, 6...</msg>
<status status="PASS" starttime="20201110 08:40:03.134" endtime="20201110 08:40:05.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:05.234" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 62807111, 'start-iter': 1, 'wakeups': [62817184, 62827184, 62837177, 6...</msg>
<status status="PASS" starttime="20201110 08:40:05.230" endtime="20201110 08:40:05.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:05.236" endtime="20201110 08:40:05.240"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:03.132" endtime="20201110 08:40:05.241"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:03.130" endtime="20201110 08:40:05.243"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:05.248" level="INFO">${RESULT} = {'start-iter': 1, 'timer-count': 9, 'start-time': 62807111, 'wakeups': [62817184, 62827184, 62837177, 62847177, 62857177, 62867177, 62877177, 62887177, 62897177, 62907177, 62917177, 62927177, 62937177...</msg>
<status status="PASS" starttime="20201110 08:40:05.244" endtime="20201110 08:40:05.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:05.257" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:40:05.255" endtime="20201110 08:40:05.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:05.261" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:40:05.259" endtime="20201110 08:40:05.262"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:05.250" endtime="20201110 08:40:05.263"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:05.271" level="INFO">NAME: 9-start-iter</msg>
<status status="PASS" starttime="20201110 08:40:05.269" endtime="20201110 08:40:05.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:05.276" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:40:05.274" endtime="20201110 08:40:05.276"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:05.264" endtime="20201110 08:40:05.277"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:05.286" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201110 08:40:05.283" endtime="20201110 08:40:05.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:05.290" level="INFO">VALUE: 62807111</msg>
<status status="PASS" starttime="20201110 08:40:05.288" endtime="20201110 08:40:05.290"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:05.278" endtime="20201110 08:40:05.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:05.300" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:05.298" endtime="20201110 08:40:05.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:05.304" level="INFO">VALUE: [62817184, 62827184, 62837177, 62847177, 62857177, 62867177, 62877177, 62887177, 62897177, 62907177, 62917177, 62927177, 62937177, 62947177, 62957177, 62967177, 62977177, 62987177, 62997177, 63007177, 63017177, 63027177, 63037177, 63047177, 63057177, 63067177, 63077177, 63087177, 63097177, 63107177, 63117177, 63127177, 63137177, 63147177, 63157177, 63167177, 63177177, 63187177, 63197177, 63207177, 63217177, 63227177, 63237177, 63247177, 63257177, 63267177, 63277177, 63287177, 63297177, 63307177, 63317177, 63327177, 63337177, 63347177, 63357177, 63367177, 63377177, 63387177, 63397177, 63407177, 63417177, 63427177, 63437177, 63447177, 63457177, 63467177, 63477177, 63487177, 63497177, 63507177, 63517177, 63527177, 63537177, 63547177, 63557177, 63567177, 63577177, 63587177, 63597177, 63607177, 63617177, 63627177, 63637177, 63647177, 63657177, 63667177, 63677177, 63687177, 63697177, 63707177, 63717177, 63727177, 63737177, 63747177, 63757177, 63767177, 63777177, 63787177, 63797177, 63807177]</msg>
<status status="PASS" starttime="20201110 08:40:05.302" endtime="20201110 08:40:05.305"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:05.293" endtime="20201110 08:40:05.306"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:05.322" endtime="20201110 08:40:05.613"></status>
</kw>
<msg timestamp="20201110 08:40:05.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020882125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030955847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:05.318" endtime="20201110 08:40:05.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:05.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020882125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030955847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:05.617" endtime="20201110 08:40:05.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:05.625" endtime="20201110 08:40:05.626"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:05.311" endtime="20201110 08:40:05.627"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:05.307" endtime="20201110 08:40:05.627"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:05.651" level="INFO">${RESULT} = {'diff': [0, 0.010073722, 0.010000347, 0.009994028000000002, 0.010000902999999998, 0.010000957999999997, 0.010000888999999999, 0.010000931000000005, 0.010000915999999999, 0.010000916999999998, 0.01000...</msg>
<status status="PASS" starttime="20201110 08:40:05.628" endtime="20201110 08:40:05.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:05.656" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201110 08:40:05.655" endtime="20201110 08:40:05.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:05.658" level="INFO">VALUE: 0.020882125</msg>
<status status="PASS" starttime="20201110 08:40:05.657" endtime="20201110 08:40:05.658"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:05.652" endtime="20201110 08:40:05.659"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:05.663" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:05.662" endtime="20201110 08:40:05.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:05.665" level="INFO">VALUE: [0.030955847, 0.040956194, 0.050950222, 0.060951125, 0.070952083, 0.080952972, 0.090953903, 0.100954819, 0.110955736, 0.120956681, 0.130957583, 0.1409585, 0.150959431, 0.160960361, 0.170961278, 0.180962222, 0.190963208, 0.200964056, 0.210964972, 0.220965889, 0.230966833, 0.240967736, 0.250968708, 0.260969583, 0.270970542, 0.280971431, 0.290972347, 0.300973292, 0.310974194, 0.320975125, 0.330976042, 0.340976986, 0.350977889, 0.360978833, 0.37097975, 0.380980667, 0.390981583, 0.400982569, 0.410983431, 0.420984361, 0.430985292, 0.440986208, 0.450987153, 0.460988069, 0.470988986, 0.480989917, 0.490990833, 0.50099175, 0.510992708, 0.520993597, 0.530994528, 0.540995472, 0.550996389, 0.560997306, 0.570998236, 0.580999153, 0.591000069, 0.601001, 0.611001917, 0.621002847, 0.631003778, 0.641004708, 0.651005611, 0.661006542, 0.671007472, 0.681008389, 0.691009333, 0.70101025, 0.711011167, 0.721012083, 0.731013069, 0.741013931, 0.751014931, 0.761015778, 0.771016722, 0.781017653, 0.791018556, 0.8010195, 0.811020417, 0.821021403, 0.831022264, 0.841023194, 0.851024097, 0.861025028, 0.871025958, 0.881026889, 0.891027806, 0.90102875, 0.911029653, 0.921030569, 0.931031542, 0.941032431, 0.951033361, 0.961034278, 0.971035194, 0.981036125, 0.991037069, 1.001037972, 1.011038903, 1.021039833] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:40:05.664" endtime="20201110 08:40:05.666"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:05.659" endtime="20201110 08:40:05.666"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:05.668" endtime="20201110 08:40:05.669"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:05.672" endtime="20201110 08:40:05.691"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:05.670" endtime="20201110 08:40:05.691"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:05.667" endtime="20201110 08:40:05.692"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:03.128" endtime="20201110 08:40:05.692"></status>
</kw>
<msg timestamp="20201110 08:40:05.692" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:05.702" endtime="20201110 08:40:07.794"></status>
</kw>
<msg timestamp="20201110 08:40:07.795" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 65373483, 'start-iter': 1, 'wakeups': [65383555, 65393556, 65403549, 6...</msg>
<status status="PASS" starttime="20201110 08:40:05.700" endtime="20201110 08:40:07.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:07.801" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 65373483, 'start-iter': 1, 'wakeups': [65383555, 65393556, 65403549, 6...</msg>
<status status="PASS" starttime="20201110 08:40:07.797" endtime="20201110 08:40:07.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:07.803" endtime="20201110 08:40:07.807"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:05.698" endtime="20201110 08:40:07.808"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:05.694" endtime="20201110 08:40:07.809"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:07.814" level="INFO">${RESULT} = {'start-iter': 1, 'timer-count': 9, 'start-time': 65373483, 'wakeups': [65383555, 65393556, 65403549, 65413549, 65423549, 65433549, 65443549, 65453549, 65463549, 65473549, 65483549, 65493549, 65503549...</msg>
<status status="PASS" starttime="20201110 08:40:07.810" endtime="20201110 08:40:07.815"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:07.823" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:40:07.820" endtime="20201110 08:40:07.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:07.827" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:40:07.825" endtime="20201110 08:40:07.827"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:07.816" endtime="20201110 08:40:07.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:07.837" level="INFO">NAME: 9-start-iter</msg>
<status status="PASS" starttime="20201110 08:40:07.835" endtime="20201110 08:40:07.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:07.842" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:40:07.840" endtime="20201110 08:40:07.842"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:07.830" endtime="20201110 08:40:07.843"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:07.852" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201110 08:40:07.850" endtime="20201110 08:40:07.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:07.856" level="INFO">VALUE: 65373483</msg>
<status status="PASS" starttime="20201110 08:40:07.854" endtime="20201110 08:40:07.857"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:07.845" endtime="20201110 08:40:07.858"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:07.864" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:07.863" endtime="20201110 08:40:07.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:07.867" level="INFO">VALUE: [65383555, 65393556, 65403549, 65413549, 65423549, 65433549, 65443549, 65453549, 65463549, 65473549, 65483549, 65493549, 65503549, 65513549, 65523549, 65533549, 65543549, 65553549, 65563549, 65573549, 65583549, 65593549, 65603549, 65613549, 65623549, 65633549, 65643549, 65653549, 65663549, 65673549, 65683549, 65693549, 65703549, 65713549, 65723549, 65733549, 65743549, 65753549, 65763549, 65773549, 65783549, 65793549, 65803549, 65813549, 65823549, 65833549, 65843549, 65853549, 65863549, 65873549, 65883549, 65893549, 65903549, 65913549, 65923549, 65933549, 65943549, 65953549, 65963549, 65973549, 65983549, 65993549, 66003549, 66013549, 66023549, 66033549, 66043549, 66053549, 66063549, 66073549, 66083549, 66093549, 66103549, 66113549, 66123549, 66133549, 66143549, 66153549, 66163549, 66173549, 66183549, 66193549, 66203549, 66213549, 66223549, 66233549, 66243549, 66253549, 66263549, 66273549, 66283549, 66293549, 66303549, 66313549, 66323549, 66333549, 66343549, 66353549, 66363549, 66373549]</msg>
<status status="PASS" starttime="20201110 08:40:07.865" endtime="20201110 08:40:07.867"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:07.859" endtime="20201110 08:40:07.867"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:07.874" endtime="20201110 08:40:08.166"></status>
</kw>
<msg timestamp="20201110 08:40:08.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019848958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029922486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:07.872" endtime="20201110 08:40:08.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:08.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019848958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029922486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:08.169" endtime="20201110 08:40:08.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:08.177" endtime="20201110 08:40:08.179"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:07.870" endtime="20201110 08:40:08.179"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:07.868" endtime="20201110 08:40:08.180"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:08.205" level="INFO">${RESULT} = {'diff': [0, 0.010073528000000002, 0.010001346999999997, 0.009994042000000002, 0.010000916999999998, 0.010000930000000005, 0.010000916999999998, 0.010000930000000005, 0.010000916999999998, 0.010000916...</msg>
<status status="PASS" starttime="20201110 08:40:08.180" endtime="20201110 08:40:08.205"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:08.209" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201110 08:40:08.208" endtime="20201110 08:40:08.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:08.211" level="INFO">VALUE: 0.019848958</msg>
<status status="PASS" starttime="20201110 08:40:08.210" endtime="20201110 08:40:08.211"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:08.205" endtime="20201110 08:40:08.212"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:08.217" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:08.215" endtime="20201110 08:40:08.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:08.219" level="INFO">VALUE: [0.029922486, 0.039923833, 0.049917875, 0.059918792, 0.069919722, 0.079920639, 0.089921569, 0.099922486, 0.109923403, 0.119924333, 0.129925264, 0.139926181, 0.149927139, 0.159928042, 0.169928986, 0.179929875, 0.189930792, 0.199931736, 0.209932653, 0.219933583, 0.229934542, 0.239935417, 0.249936389, 0.259937264, 0.269938181, 0.279939111, 0.289940028, 0.299940972, 0.309941889, 0.319942875, 0.329943736, 0.339944653, 0.349945583, 0.3599465, 0.369947431, 0.379948347, 0.389949278, 0.399950194, 0.409951139, 0.419952042, 0.429952958, 0.439953903, 0.449954806, 0.459955736, 0.469956653, 0.479957569, 0.4899585, 0.499959417, 0.509960347, 0.519961278, 0.529962194, 0.539963111, 0.549964042, 0.559964958, 0.569965903, 0.579966819, 0.589967736, 0.599968681, 0.609969569, 0.619970514, 0.629971431, 0.639972333, 0.649973278, 0.659974181, 0.669975111, 0.679976042, 0.689976958, 0.699977875, 0.709978819, 0.719979722, 0.729980653, 0.739981569, 0.749982514, 0.759983417, 0.769984347, 0.779985264, 0.789986208, 0.799987194, 0.809988042, 0.819988986, 0.829989903, 0.839990806, 0.849991736, 0.859992722, 0.869993583, 0.8799945, 0.889995444, 0.899996347, 0.909997278, 0.919998208, 0.929999139, 0.940000042, 0.950000972, 0.960001986, 0.970002819, 0.980003736, 0.990004667, 1.000005653, 1.010006514, 1.020007444] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:40:08.218" endtime="20201110 08:40:08.219"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:08.212" endtime="20201110 08:40:08.220"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:08.222" endtime="20201110 08:40:08.223"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:08.225" endtime="20201110 08:40:08.245"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:08.224" endtime="20201110 08:40:08.245"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:08.220" endtime="20201110 08:40:08.246"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:05.693" endtime="20201110 08:40:08.246"></status>
</kw>
<msg timestamp="20201110 08:40:08.246" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:08.254" endtime="20201110 08:40:10.346"></status>
</kw>
<msg timestamp="20201110 08:40:10.347" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 67925511, 'start-iter': 1, 'wakeups': [67935581, 67945584, 67955577, 6...</msg>
<status status="PASS" starttime="20201110 08:40:08.253" endtime="20201110 08:40:10.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:10.353" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 67925511, 'start-iter': 1, 'wakeups': [67935581, 67945584, 67955577, 6...</msg>
<status status="PASS" starttime="20201110 08:40:10.349" endtime="20201110 08:40:10.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:10.355" endtime="20201110 08:40:10.358"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:08.250" endtime="20201110 08:40:10.359"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:08.248" endtime="20201110 08:40:10.360"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:10.366" level="INFO">${RESULT} = {'start-iter': 1, 'timer-count': 9, 'start-time': 67925511, 'wakeups': [67935581, 67945584, 67955577, 67965577, 67975577, 67985577, 67995577, 68005577, 68015577, 68025577, 68035577, 68045577, 68055577...</msg>
<status status="PASS" starttime="20201110 08:40:10.362" endtime="20201110 08:40:10.366"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:10.376" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:40:10.372" endtime="20201110 08:40:10.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:10.381" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:40:10.379" endtime="20201110 08:40:10.381"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:10.367" endtime="20201110 08:40:10.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:10.391" level="INFO">NAME: 9-start-iter</msg>
<status status="PASS" starttime="20201110 08:40:10.388" endtime="20201110 08:40:10.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:10.395" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:40:10.393" endtime="20201110 08:40:10.396"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:10.384" endtime="20201110 08:40:10.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:10.412" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201110 08:40:10.403" endtime="20201110 08:40:10.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:10.416" level="INFO">VALUE: 67925511</msg>
<status status="PASS" starttime="20201110 08:40:10.414" endtime="20201110 08:40:10.417"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:10.398" endtime="20201110 08:40:10.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:10.426" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:10.424" endtime="20201110 08:40:10.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:10.431" level="INFO">VALUE: [67935581, 67945584, 67955577, 67965577, 67975577, 67985577, 67995577, 68005577, 68015577, 68025577, 68035577, 68045577, 68055577, 68065577, 68075577, 68085577, 68095577, 68105577, 68115577, 68125577, 68135577, 68145577, 68155577, 68165577, 68175577, 68185577, 68195577, 68205577, 68215577, 68225577, 68235577, 68245577, 68255577, 68265577, 68275577, 68285577, 68295577, 68305577, 68315577, 68325577, 68335577, 68345577, 68355577, 68365577, 68375577, 68385577, 68395577, 68405577, 68415577, 68425577, 68435577, 68445577, 68455577, 68465577, 68475577, 68485577, 68495577, 68505577, 68515577, 68525577, 68535577, 68545577, 68555577, 68565577, 68575577, 68585577, 68595577, 68605577, 68615577, 68625577, 68635577, 68645577, 68655577, 68665577, 68675577, 68685577, 68695577, 68705577, 68715577, 68725577, 68735577, 68745577, 68755577, 68765577, 68775577, 68785577, 68795577, 68805577, 68815577, 68825577, 68835577, 68845577, 68855577, 68865577, 68875577, 68885577, 68895577, 68905577, 68915577, 68925577]</msg>
<status status="PASS" starttime="20201110 08:40:10.428" endtime="20201110 08:40:10.431"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:10.419" endtime="20201110 08:40:10.432"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:10.438" endtime="20201110 08:40:10.730"></status>
</kw>
<msg timestamp="20201110 08:40:10.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018114375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028185444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:10.437" endtime="20201110 08:40:10.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:10.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018114375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028185444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:10.734" endtime="20201110 08:40:10.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:10.742" endtime="20201110 08:40:10.743"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:10.434" endtime="20201110 08:40:10.744"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:10.433" endtime="20201110 08:40:10.744"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:10.769" level="INFO">${RESULT} = {'diff': [0, 0.010071069000000002, 0.010003278, 0.009994084, 0.010000875, 0.010000943999999998, 0.010000903000000005, 0.010000915999999999, 0.01000093099999999, 0.010000917000000012, 0.010000929999999...</msg>
<status status="PASS" starttime="20201110 08:40:10.745" endtime="20201110 08:40:10.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:10.773" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201110 08:40:10.772" endtime="20201110 08:40:10.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:10.775" level="INFO">VALUE: 0.018114375</msg>
<status status="PASS" starttime="20201110 08:40:10.774" endtime="20201110 08:40:10.776"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:10.770" endtime="20201110 08:40:10.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:10.781" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:10.780" endtime="20201110 08:40:10.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:10.783" level="INFO">VALUE: [0.028185444, 0.038188722, 0.048182806, 0.058183681, 0.068184625, 0.078185528, 0.088186444, 0.098187375, 0.108188292, 0.118189222, 0.128190139, 0.138191083, 0.148191986, 0.158192917, 0.168193833, 0.178194778, 0.188195681, 0.198196597, 0.208197528, 0.218198444, 0.228199375, 0.238200292, 0.248201264, 0.258202153, 0.268203069, 0.278204028, 0.288204958, 0.298205833, 0.308206764, 0.318207681, 0.328208597, 0.338209556, 0.348210444, 0.358211389, 0.368212306, 0.378213222, 0.388214153, 0.398215083, 0.408216, 0.418216931, 0.428217833, 0.438218778, 0.448219694, 0.458220625, 0.468221542, 0.478222486, 0.488223403, 0.498224306, 0.508225264, 0.518226153, 0.528227083, 0.538228, 0.548228931, 0.558229875, 0.568230792, 0.578231694, 0.588232625, 0.598233556, 0.608234472, 0.618235417, 0.628236333, 0.638237264, 0.648238167, 0.658239111, 0.668240028, 0.678241, 0.688241875, 0.698242792, 0.708243708, 0.718244639, 0.728245556, 0.7382465, 0.748247417, 0.758248347, 0.768249264, 0.77825025, 0.788251111, 0.798252028, 0.808252972, 0.818253875, 0.828254819, 0.838255736, 0.848256653, 0.858257583, 0.868258514, 0.878259431, 0.888260347, 0.898261278, 0.908262194, 0.918263139, 0.928264042, 0.938264972, 0.948265889, 0.958266833, 0.96826775, 0.978268681, 0.988269597, 0.998270514, 1.008271444, 1.018272389] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:40:10.782" endtime="20201110 08:40:10.783"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:10.777" endtime="20201110 08:40:10.784"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:10.786" endtime="20201110 08:40:10.787"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:10.790" endtime="20201110 08:40:10.809"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:10.788" endtime="20201110 08:40:10.809"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:10.785" endtime="20201110 08:40:10.810"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:08.247" endtime="20201110 08:40:10.810"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:03.126" endtime="20201110 08:40:10.810"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:03.125" endtime="20201110 08:40:10.811"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:40:10.813" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:10.821" endtime="20201110 08:40:12.913"></status>
</kw>
<msg timestamp="20201110 08:40:12.914" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 70492481, 'start-iter': 1, 'wakeups': [70502564, 70512541, 70522556,...</msg>
<status status="PASS" starttime="20201110 08:40:10.819" endtime="20201110 08:40:12.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:12.919" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 70492481, 'start-iter': 1, 'wakeups': [70502564, 70512541, 70522556,...</msg>
<status status="PASS" starttime="20201110 08:40:12.916" endtime="20201110 08:40:12.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:12.922" endtime="20201110 08:40:12.925"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:10.817" endtime="20201110 08:40:12.926"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:10.815" endtime="20201110 08:40:12.927"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:12.933" level="INFO">${RESULT} = {'start-iter': 1, 'timer-count': 10, 'start-time': 70492481, 'wakeups': [70502564, 70512541, 70522556, 70532564, 70542563, 70552563, 70562563, 70572563, 70582563, 70592563, 70602563, 70612563, 7062256...</msg>
<status status="PASS" starttime="20201110 08:40:12.929" endtime="20201110 08:40:12.933"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:12.941" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:40:12.939" endtime="20201110 08:40:12.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:12.945" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:40:12.943" endtime="20201110 08:40:12.946"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:12.934" endtime="20201110 08:40:12.947"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:12.955" level="INFO">NAME: 10-start-iter</msg>
<status status="PASS" starttime="20201110 08:40:12.953" endtime="20201110 08:40:12.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:12.963" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:40:12.958" endtime="20201110 08:40:12.963"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:12.948" endtime="20201110 08:40:12.964"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:12.973" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201110 08:40:12.971" endtime="20201110 08:40:12.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:12.975" level="INFO">VALUE: 70492481</msg>
<status status="PASS" starttime="20201110 08:40:12.974" endtime="20201110 08:40:12.975"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:12.966" endtime="20201110 08:40:12.976"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:12.980" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:12.979" endtime="20201110 08:40:12.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:12.982" level="INFO">VALUE: [70502564, 70512541, 70522556, 70532564, 70542563, 70552563, 70562563, 70572563, 70582563, 70592563, 70602563, 70612563, 70622563, 70632563, 70642563, 70652563, 70662563, 70672563, 70682563, 70692563, 70702563, 70712563, 70722563, 70732563, 70742563, 70752563, 70762563, 70772563, 70782563, 70792563, 70802563, 70812563, 70822563, 70832563, 70842563, 70852563, 70862563, 70872563, 70882563, 70892563, 70902563, 70912563, 70922563, 70932563, 70942563, 70952563, 70962563, 70972563, 70982563, 70992563, 71002563, 71012563, 71022563, 71032563, 71042563, 71052563, 71062563, 71072563, 71082563, 71092563, 71102563, 71112563, 71122563, 71132563, 71142563, 71152563, 71162563, 71172563, 71182563, 71192563, 71202563, 71212563, 71222563, 71232563, 71242563, 71252563, 71262563, 71272563, 71282563, 71292563, 71302563, 71312563, 71322563, 71332563, 71342563, 71352563, 71362563, 71372563, 71382563, 71392563, 71402563, 71412563, 71422563, 71432563, 71442563, 71452563, 71462563, 71472563, 71482563, 71492563]</msg>
<status status="PASS" starttime="20201110 08:40:12.981" endtime="20201110 08:40:12.983"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:12.976" endtime="20201110 08:40:12.983"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:12.989" endtime="20201110 08:40:13.281"></status>
</kw>
<msg timestamp="20201110 08:40:13.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020884292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030968181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:12.988" endtime="20201110 08:40:13.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:13.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020884292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030968181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:13.284" endtime="20201110 08:40:13.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:13.292" endtime="20201110 08:40:13.294"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:12.985" endtime="20201110 08:40:13.294"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:12.984" endtime="20201110 08:40:13.295"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:13.319" level="INFO">${RESULT} = {'diff': [0, 0.010083889000000002, 0.009978526999999997, 0.010015542000000002, 0.010009513999999997, 0.009999916999999997, 0.010000915999999999, 0.010000931000000005, 0.010000915999999999, 0.010000931...</msg>
<status status="PASS" starttime="20201110 08:40:13.295" endtime="20201110 08:40:13.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:13.324" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201110 08:40:13.323" endtime="20201110 08:40:13.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:13.326" level="INFO">VALUE: 0.020884292</msg>
<status status="PASS" starttime="20201110 08:40:13.325" endtime="20201110 08:40:13.326"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:13.320" endtime="20201110 08:40:13.327"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:13.331" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:13.330" endtime="20201110 08:40:13.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:13.333" level="INFO">VALUE: [0.030968181, 0.040946708, 0.05096225, 0.060971764, 0.070971681, 0.080972597, 0.090973528, 0.100974444, 0.110975375, 0.120976292, 0.130977222, 0.140978139, 0.150979069, 0.160979986, 0.170980903, 0.180981833, 0.190982764, 0.200983681, 0.210984597, 0.220985528, 0.230986472, 0.240987375, 0.250988306, 0.260989222, 0.270990139, 0.280991069, 0.290992, 0.300992917, 0.310993833, 0.320994764, 0.330995681, 0.340996611, 0.350997542, 0.360998458, 0.370999389, 0.381000306, 0.391001236, 0.401002153, 0.411003083, 0.421004, 0.431004931, 0.441005861, 0.451006778, 0.461007722, 0.471008625, 0.481009556, 0.491010472, 0.501011403, 0.511012333, 0.52101325, 0.531014167, 0.541015097, 0.551016028, 0.561016944, 0.571017889, 0.581018792, 0.59101975, 0.601020639, 0.611021569, 0.621022486, 0.631023417, 0.641024333, 0.651025264, 0.661026194, 0.671027111, 0.681028042, 0.691028958, 0.701029889, 0.711030819, 0.721031736, 0.731032653, 0.741033583, 0.751034528, 0.761035431, 0.771036375, 0.781037278, 0.791038208, 0.801039125, 0.811040097, 0.821041, 0.831041917, 0.841042847, 0.85104375, 0.861044681, 0.871045597, 0.881046583, 0.891047444, 0.901048375, 0.911049306, 0.921050222, 0.931051153, 0.941052083, 0.951053014, 0.961053931, 0.971054903, 0.981055792, 0.991056708, 1.001057639, 1.011058542, 1.0210595] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:40:13.332" endtime="20201110 08:40:13.334"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:13.327" endtime="20201110 08:40:13.334"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:13.336" endtime="20201110 08:40:13.337"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:13.340" endtime="20201110 08:40:13.359"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:13.338" endtime="20201110 08:40:13.359"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:13.335" endtime="20201110 08:40:13.360"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:10.814" endtime="20201110 08:40:13.360"></status>
</kw>
<msg timestamp="20201110 08:40:13.361" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:13.369" endtime="20201110 08:40:15.461"></status>
</kw>
<msg timestamp="20201110 08:40:15.462" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 73040136, 'start-iter': 1, 'wakeups': [73050218, 73060218, 73070218,...</msg>
<status status="PASS" starttime="20201110 08:40:13.367" endtime="20201110 08:40:15.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:15.468" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 73040136, 'start-iter': 1, 'wakeups': [73050218, 73060218, 73070218,...</msg>
<status status="PASS" starttime="20201110 08:40:15.464" endtime="20201110 08:40:15.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:15.470" endtime="20201110 08:40:15.473"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:13.365" endtime="20201110 08:40:15.474"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:13.363" endtime="20201110 08:40:15.475"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:15.481" level="INFO">${RESULT} = {'start-iter': 1, 'timer-count': 10, 'start-time': 73040136, 'wakeups': [73050218, 73060218, 73070218, 73080218, 73090218, 73100218, 73110218, 73120218, 73130218, 73140218, 73150218, 73160218, 7317021...</msg>
<status status="PASS" starttime="20201110 08:40:15.477" endtime="20201110 08:40:15.481"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:15.489" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:40:15.487" endtime="20201110 08:40:15.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:15.493" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:40:15.491" endtime="20201110 08:40:15.494"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:15.482" endtime="20201110 08:40:15.495"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:15.503" level="INFO">NAME: 10-start-iter</msg>
<status status="PASS" starttime="20201110 08:40:15.501" endtime="20201110 08:40:15.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:15.507" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:40:15.506" endtime="20201110 08:40:15.508"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:15.496" endtime="20201110 08:40:15.509"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:15.517" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201110 08:40:15.515" endtime="20201110 08:40:15.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:15.522" level="INFO">VALUE: 73040136</msg>
<status status="PASS" starttime="20201110 08:40:15.520" endtime="20201110 08:40:15.522"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:15.510" endtime="20201110 08:40:15.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:15.534" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:15.531" endtime="20201110 08:40:15.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:15.538" level="INFO">VALUE: [73050218, 73060218, 73070218, 73080218, 73090218, 73100218, 73110218, 73120218, 73130218, 73140218, 73150218, 73160218, 73170218, 73180218, 73190218, 73200218, 73210218, 73220218, 73230218, 73240218, 73250218, 73260218, 73270218, 73280218, 73290218, 73300218, 73310218, 73320218, 73330218, 73340218, 73350218, 73360218, 73370218, 73380218, 73390218, 73400218, 73410218, 73420218, 73430218, 73440218, 73450218, 73460218, 73470218, 73480218, 73490218, 73500218, 73510218, 73520218, 73530218, 73540218, 73550218, 73560218, 73570218, 73580218, 73590218, 73600218, 73610218, 73620218, 73630218, 73640218, 73650218, 73660218, 73670218, 73680218, 73690218, 73700218, 73710218, 73720218, 73730218, 73740218, 73750218, 73760218, 73770218, 73780218, 73790218, 73800218, 73810218, 73820218, 73830218, 73840218, 73850218, 73860218, 73870218, 73880218, 73890218, 73900218, 73910218, 73920218, 73930218, 73940218, 73950218, 73960218, 73970218, 73980218, 73990218, 74000218, 74010218, 74020218, 74030218, 74040218]</msg>
<status status="PASS" starttime="20201110 08:40:15.536" endtime="20201110 08:40:15.539"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:15.525" endtime="20201110 08:40:15.540"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:15.548" endtime="20201110 08:40:15.839"></status>
</kw>
<msg timestamp="20201110 08:40:15.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018591403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028674417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:15.546" endtime="20201110 08:40:15.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:15.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018591403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028674417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:15.843" endtime="20201110 08:40:15.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:15.850" endtime="20201110 08:40:15.852"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:15.543" endtime="20201110 08:40:15.852"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:15.541" endtime="20201110 08:40:15.853"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:15.877" level="INFO">${RESULT} = {'diff': [0, 0.010083014000000001, 0.010001305000000002, 0.010000930999999998, 0.010000929999999998, 0.010000917000000005, 0.010000916999999998, 0.010000915999999999, 0.010000916999999998, 0.010000931...</msg>
<status status="PASS" starttime="20201110 08:40:15.853" endtime="20201110 08:40:15.877"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:15.881" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201110 08:40:15.880" endtime="20201110 08:40:15.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:15.883" level="INFO">VALUE: 0.018591403</msg>
<status status="PASS" starttime="20201110 08:40:15.882" endtime="20201110 08:40:15.884"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:15.878" endtime="20201110 08:40:15.884"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:15.888" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:15.887" endtime="20201110 08:40:15.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:15.891" level="INFO">VALUE: [0.028674417, 0.038675722, 0.048676653, 0.058677583, 0.0686785, 0.078679417, 0.088680333, 0.09868125, 0.108682181, 0.118683111, 0.128684028, 0.138684944, 0.148685861, 0.158686792, 0.168687708, 0.178688653, 0.188689611, 0.198690486, 0.208691417, 0.218692333, 0.22869325, 0.238694181, 0.248695097, 0.258696028, 0.268696958, 0.278697958, 0.288698806, 0.298699736, 0.308700653, 0.318701569, 0.3287025, 0.338703431, 0.348704375, 0.358705278, 0.368706236, 0.378707125, 0.388708083, 0.398708958, 0.408709889, 0.418710806, 0.42871175, 0.438712653, 0.448713569, 0.458714556, 0.468715431, 0.478716347, 0.488717264, 0.498718236, 0.508719125, 0.518720042, 0.528721014, 0.538721889, 0.548722819, 0.558723736, 0.568724667, 0.578725597, 0.588726528, 0.598727431, 0.608728361, 0.618729278, 0.628730222, 0.638731125, 0.648732056, 0.658732986, 0.668733903, 0.678734847, 0.68873575, 0.698736722, 0.708737639, 0.718738556, 0.728739444, 0.738740375, 0.748741306, 0.758742222, 0.768743139, 0.778744069, 0.788745, 0.798745917, 0.808746917, 0.818747764, 0.828748694, 0.838749611, 0.848750556, 0.858751472, 0.868752389, 0.878753306, 0.888754236, 0.898755167, 0.908756083, 0.918757014, 0.928757931, 0.938758861, 0.948759792, 0.958760708, 0.968761625, 0.978762556, 0.988763486, 0.998764403, 1.008765333, 1.018766278] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:40:15.890" endtime="20201110 08:40:15.891"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:15.885" endtime="20201110 08:40:15.891"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:15.894" endtime="20201110 08:40:15.895"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:15.898" endtime="20201110 08:40:15.917"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:15.895" endtime="20201110 08:40:15.918"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:15.892" endtime="20201110 08:40:15.918"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:13.361" endtime="20201110 08:40:15.919"></status>
</kw>
<msg timestamp="20201110 08:40:15.919" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:15.931" endtime="20201110 08:40:18.024"></status>
</kw>
<msg timestamp="20201110 08:40:18.025" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 75603172, 'start-iter': 1, 'wakeups': [75613254, 75623254, 75633254,...</msg>
<status status="PASS" starttime="20201110 08:40:15.929" endtime="20201110 08:40:18.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:18.032" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 75603172, 'start-iter': 1, 'wakeups': [75613254, 75623254, 75633254,...</msg>
<status status="PASS" starttime="20201110 08:40:18.028" endtime="20201110 08:40:18.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:18.034" endtime="20201110 08:40:18.038"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:15.925" endtime="20201110 08:40:18.039"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:15.922" endtime="20201110 08:40:18.040"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:18.045" level="INFO">${RESULT} = {'start-iter': 1, 'timer-count': 10, 'start-time': 75603172, 'wakeups': [75613254, 75623254, 75633254, 75643254, 75653254, 75663254, 75673254, 75683254, 75693254, 75703254, 75713254, 75723254, 7573325...</msg>
<status status="PASS" starttime="20201110 08:40:18.041" endtime="20201110 08:40:18.046"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:18.054" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:40:18.051" endtime="20201110 08:40:18.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:18.058" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:40:18.056" endtime="20201110 08:40:18.058"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:18.047" endtime="20201110 08:40:18.059"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:18.068" level="INFO">NAME: 10-start-iter</msg>
<status status="PASS" starttime="20201110 08:40:18.066" endtime="20201110 08:40:18.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:18.072" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:40:18.070" endtime="20201110 08:40:18.073"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:18.061" endtime="20201110 08:40:18.074"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:18.082" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201110 08:40:18.080" endtime="20201110 08:40:18.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:18.084" level="INFO">VALUE: 75603172</msg>
<status status="PASS" starttime="20201110 08:40:18.083" endtime="20201110 08:40:18.085"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:18.075" endtime="20201110 08:40:18.085"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:18.089" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:18.088" endtime="20201110 08:40:18.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:18.091" level="INFO">VALUE: [75613254, 75623254, 75633254, 75643254, 75653254, 75663254, 75673254, 75683254, 75693254, 75703254, 75713254, 75723254, 75733254, 75743254, 75753254, 75763254, 75773254, 75783254, 75793254, 75803254, 75813254, 75823254, 75833254, 75843254, 75853254, 75863254, 75873254, 75883254, 75893254, 75903254, 75913254, 75923254, 75933254, 75943254, 75953254, 75963254, 75973254, 75983254, 75993254, 76003254, 76013254, 76023254, 76033254, 76043254, 76053254, 76063254, 76073254, 76083254, 76093254, 76103254, 76113254, 76123254, 76133254, 76143254, 76153254, 76163254, 76173254, 76183254, 76193254, 76203254, 76213254, 76223254, 76233254, 76243254, 76253254, 76263254, 76273254, 76283254, 76293254, 76303254, 76313254, 76323254, 76333254, 76343254, 76353254, 76363254, 76373254, 76383254, 76393254, 76403254, 76413254, 76423254, 76433254, 76443254, 76453254, 76463254, 76473254, 76483254, 76493254, 76503254, 76513254, 76523254, 76533254, 76543254, 76553254, 76563254, 76573254, 76583254, 76593254, 76603254]</msg>
<status status="PASS" starttime="20201110 08:40:18.090" endtime="20201110 08:40:18.092"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:18.086" endtime="20201110 08:40:18.092"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:18.100" endtime="20201110 08:40:18.391"></status>
</kw>
<msg timestamp="20201110 08:40:18.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023378861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033461875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:18.097" endtime="20201110 08:40:18.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:18.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023378861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033461875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:18.395" endtime="20201110 08:40:18.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:18.403" endtime="20201110 08:40:18.405"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:18.095" endtime="20201110 08:40:18.405"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:18.093" endtime="20201110 08:40:18.406"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:18.430" level="INFO">${RESULT} = {'diff': [0, 0.010083014000000001, 0.010001305999999995, 0.010000930000000005, 0.010000930999999998, 0.010000930000000005, 0.01000093099999999, 0.010000915999999999, 0.01000097300000001, 0.010000861, ...</msg>
<status status="PASS" starttime="20201110 08:40:18.407" endtime="20201110 08:40:18.430"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:18.434" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201110 08:40:18.433" endtime="20201110 08:40:18.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:18.436" level="INFO">VALUE: 0.023378861</msg>
<status status="PASS" starttime="20201110 08:40:18.435" endtime="20201110 08:40:18.436"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:18.431" endtime="20201110 08:40:18.437"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:18.441" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:18.440" endtime="20201110 08:40:18.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:18.444" level="INFO">VALUE: [0.033461875, 0.043463181, 0.053464111, 0.063465042, 0.073465972, 0.083466903, 0.093467819, 0.103468792, 0.113469653, 0.123470583, 0.133471528, 0.143472431, 0.153473361, 0.163474292, 0.173475208, 0.183476139, 0.193477056, 0.203477986, 0.213478903, 0.223479833, 0.233480792, 0.243481681, 0.253482611, 0.263483542, 0.273484458, 0.283485375, 0.293486319, 0.303487236, 0.313488153, 0.323489097, 0.33349, 0.343490931, 0.353491875, 0.363492778, 0.373493764, 0.383494611, 0.393495597, 0.403496472, 0.413497375, 0.423498319, 0.433499222, 0.443500208, 0.453501069, 0.463502, 0.473502917, 0.483503861, 0.493504764, 0.503505694, 0.513506625, 0.523507528, 0.533508458, 0.543509389, 0.553510319, 0.563511236, 0.573512167, 0.583513083, 0.593514, 0.603514917, 0.613515847, 0.623516764, 0.633517694, 0.643518611, 0.653519542, 0.663520472, 0.673521389, 0.683522306, 0.693523236, 0.703524181, 0.713525153, 0.723526042, 0.733526958, 0.743527861, 0.753528792, 0.763529708, 0.773530639, 0.783531569, 0.793532486, 0.803533417, 0.813534375, 0.823535264, 0.833536181, 0.843537125, 0.853538028, 0.863538944, 0.873539875, 0.883540847, 0.893541722, 0.903542653, 0.913543569, 0.923544514, 0.933545417, 0.943546347, 0.953547264, 0.963548194, 0.973549111, 0.983550042, 0.993550958, 1.003551889, 1.013552806, 1.023553736] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:40:18.443" endtime="20201110 08:40:18.444"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:18.438" endtime="20201110 08:40:18.444"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:18.447" endtime="20201110 08:40:18.448"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:18.450" endtime="20201110 08:40:18.469"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:18.448" endtime="20201110 08:40:18.470"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:18.445" endtime="20201110 08:40:18.470"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:15.920" endtime="20201110 08:40:18.470"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:10.812" endtime="20201110 08:40:18.471"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:10.811" endtime="20201110 08:40:18.471"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.569" endtime="20201110 08:40:18.471"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201110 08:39:01.499" endtime="20201110 08:40:18.472" critical="yes"></status>
</test>
<status status="PASS" starttime="20201110 08:38:59.221" endtime="20201110 08:40:18.474"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">esp32-wroom-32</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201110 08:37:11.851" endtime="20201110 08:40:18.490"></status>
</suite>
<statistics>
<total>
<stat pass="12" fail="0">Critical Tests</stat>
<stat pass="12" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="12" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="12" fail="0">BOARD_esp32-wroom-32</stat>
<stat pass="2" fail="0">dev</stat>
</tag>
<suite>
<stat pass="12" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="8" fail="0" id="s1-s2" name="Timer Overhead">tests_ztimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_ztimer_benchmarks.Sleep Accuracy</stat>
<stat pass="1" fail="0" id="s1-s4" name="Sleep Jitter">tests_ztimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
