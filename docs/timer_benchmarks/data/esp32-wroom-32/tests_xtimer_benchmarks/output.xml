<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201110 08:33:40.705" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.285" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201110 08:33:41.293" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201110 08:33:42.345" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201110 08:33:41.284" endtime="20201110 08:33:42.346"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.352" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20201110 08:33:42.349" endtime="20201110 08:33:43.353"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.282" endtime="20201110 08:33:43.354"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:43.359" endtime="20201110 08:33:43.617"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.356" endtime="20201110 08:33:43.617"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:43.630" endtime="20201110 08:33:43.651"></status>
</kw>
<msg timestamp="20201110 08:33:43.652" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:43.629" endtime="20201110 08:33:43.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.654" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:43.653" endtime="20201110 08:33:43.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.658" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:33:43.656" endtime="20201110 08:33:43.658"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:43.626" endtime="20201110 08:33:43.659"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:43.624" endtime="20201110 08:33:43.659"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.623" endtime="20201110 08:33:43.659"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:33:43.663" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:33:43.663" endtime="20201110 08:33:43.664"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.660" endtime="20201110 08:33:43.665"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.622" endtime="20201110 08:33:43.665"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.621" endtime="20201110 08:33:43.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:43.666" endtime="20201110 08:33:43.667"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.620" endtime="20201110 08:33:43.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:43.668" endtime="20201110 08:33:43.670"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.618" endtime="20201110 08:33:43.670"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.280" endtime="20201110 08:33:43.671"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:43.677" endtime="20201110 08:33:43.696"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.675" endtime="20201110 08:33:43.697"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:43.710" endtime="20201110 08:33:43.727"></status>
</kw>
<msg timestamp="20201110 08:33:43.728" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:43.709" endtime="20201110 08:33:43.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.730" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:43.729" endtime="20201110 08:33:43.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.733" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:33:43.732" endtime="20201110 08:33:43.734"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:43.706" endtime="20201110 08:33:43.734"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:43.704" endtime="20201110 08:33:43.735"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.702" endtime="20201110 08:33:43.735"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:33:43.739" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:33:43.738" endtime="20201110 08:33:43.739"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.736" endtime="20201110 08:33:43.739"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.701" endtime="20201110 08:33:43.740"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.700" endtime="20201110 08:33:43.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:43.741" endtime="20201110 08:33:43.742"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.699" endtime="20201110 08:33:43.743"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.697" endtime="20201110 08:33:43.743"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.674" endtime="20201110 08:33:43.743"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:43.751" endtime="20201110 08:33:43.764"></status>
</kw>
<msg timestamp="20201110 08:33:43.764" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:43.748" endtime="20201110 08:33:43.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.767" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:43.765" endtime="20201110 08:33:43.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:43.768" endtime="20201110 08:33:43.769"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.746" endtime="20201110 08:33:43.770"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.744" endtime="20201110 08:33:43.770"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.774" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201110 08:33:43.773" endtime="20201110 08:33:43.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.776" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201110 08:33:43.775" endtime="20201110 08:33:43.776"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.771" endtime="20201110 08:33:43.777"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201110 08:33:43.671" endtime="20201110 08:33:43.778" critical="yes"></status>
</test>
<status status="PASS" starttime="20201110 08:33:40.817" endtime="20201110 08:33:43.780"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.832" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201110 08:33:43.840" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201110 08:33:44.913" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201110 08:33:43.831" endtime="20201110 08:33:44.914"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201110 08:33:45.917" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20201110 08:33:44.915" endtime="20201110 08:33:45.918"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.829" endtime="20201110 08:33:45.919"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:45.924" endtime="20201110 08:33:46.192"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.921" endtime="20201110 08:33:46.192"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.213" endtime="20201110 08:33:46.236"></status>
</kw>
<msg timestamp="20201110 08:33:46.237" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:46.210" endtime="20201110 08:33:46.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:46.239" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:46.238" endtime="20201110 08:33:46.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:33:46.242" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:33:46.240" endtime="20201110 08:33:46.243"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:46.205" endtime="20201110 08:33:46.243"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:46.202" endtime="20201110 08:33:46.244"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.200" endtime="20201110 08:33:46.244"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:33:46.248" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:33:46.247" endtime="20201110 08:33:46.248"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.245" endtime="20201110 08:33:46.249"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.197" endtime="20201110 08:33:46.249"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.196" endtime="20201110 08:33:46.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.250" endtime="20201110 08:33:46.251"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.194" endtime="20201110 08:33:46.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.252" endtime="20201110 08:33:46.254"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.193" endtime="20201110 08:33:46.255"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.828" endtime="20201110 08:33:46.255"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:46.261" endtime="20201110 08:33:46.281"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.259" endtime="20201110 08:33:46.281"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.294" endtime="20201110 08:33:46.310"></status>
</kw>
<msg timestamp="20201110 08:33:46.310" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:46.293" endtime="20201110 08:33:46.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:46.313" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:46.312" endtime="20201110 08:33:46.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:33:46.316" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:33:46.314" endtime="20201110 08:33:46.316"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:46.290" endtime="20201110 08:33:46.317"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:46.288" endtime="20201110 08:33:46.318"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.286" endtime="20201110 08:33:46.318"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:33:46.322" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:33:46.321" endtime="20201110 08:33:46.322"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.319" endtime="20201110 08:33:46.322"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.286" endtime="20201110 08:33:46.323"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.285" endtime="20201110 08:33:46.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.323" endtime="20201110 08:33:46.325"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.284" endtime="20201110 08:33:46.325"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.282" endtime="20201110 08:33:46.326"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.257" endtime="20201110 08:33:46.326"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201110 08:33:46.328" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.336" endtime="20201110 08:33:46.351"></status>
</kw>
<msg timestamp="20201110 08:33:46.351" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:46.334" endtime="20201110 08:33:46.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:46.354" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:46.352" endtime="20201110 08:33:46.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.355" endtime="20201110 08:33:46.356"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.331" endtime="20201110 08:33:46.357"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.330" endtime="20201110 08:33:46.357"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.364" endtime="20201110 08:33:46.637"></status>
</kw>
<msg timestamp="20201110 08:33:46.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064402444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064407875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:46.362" endtime="20201110 08:33:46.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:46.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064402444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064407875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:46.640" endtime="20201110 08:33:46.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.645" endtime="20201110 08:33:46.647"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.359" endtime="20201110 08:33:46.648"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.358" endtime="20201110 08:33:46.648"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:46.652" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:46.651" endtime="20201110 08:33:46.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:46.656" level="INFO">VALUE: [{'time': 0.064402444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064407875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.431000000000186e-06, 'source_diff': 5.431000000000186e-06}, {'time': 0.064411833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.957999999998352e-06, 'source_diff': 3.957999999998352e-06}, {'time': 0.064415875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.041999999995771e-06, 'source_diff': 4.041999999995771e-06}, {'time': 0.064419403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.52800000000264e-06, 'source_diff': 3.52800000000264e-06}, {'time': 0.064422625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2219999999971716e-06, 'source_diff': 3.2219999999971716e-06}, {'time': 0.064428542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.917000000008055e-06, 'source_diff': 5.917000000008055e-06}, {'time': 0.064433778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.235999999991803e-06, 'source_diff': 5.235999999991803e-06}, {'time': 0.064436181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4029999999980456e-06, 'source_diff': 2.4029999999980456e-06}, {'time': 0.064442417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.236000000006681e-06, 'source_diff': 6.236000000006681e-06}, {'time': 0.064447153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.735999999991303e-06, 'source_diff': 4.735999999991303e-06}, {'time': 0.064452167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.014000000011509e-06, 'source_diff': 5.014000000011509e-06}, {'time': 0.064458097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.930000000001212e-06, 'source_diff': 5.930000000001212e-06}, {'time': 0.06446125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1529999999918568e-06, 'source_diff': 3.1529999999918568e-06}, {'time': 0.064465097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.847000000001266e-06, 'source_diff': 3.847000000001266e-06}, {'time': 0.064471139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.041999999997771e-06, 'source_diff': 6.041999999997771e-06}, {'time': 0.064476806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.667000000000866e-06, 'source_diff': 5.667000000000866e-06}, {'time': 0.064479444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.637999999999252e-06, 'source_diff': 2.637999999999252e-06}, {'time': 0.064482708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.26400000000282e-06, 'source_diff': 3.26400000000282e-06}, {'time': 0.064488667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9589999999998255e-06, 'source_diff': 5.9589999999998255e-06}, {'time': 0.064492833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.165999999999892e-06, 'source_diff': 4.165999999999892e-06}, {'time': 0.064497681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.84800000000174e-06, 'source_diff': 4.84800000000174e-06}, {'time': 0.064500028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.346999999999766e-06, 'source_diff': 2.346999999999766e-06}, {'time': 0.064505069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.040999999997298e-06, 'source_diff': 5.040999999997298e-06}, {'time': 0.064509792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.722999999998145e-06, 'source_diff': 4.722999999998145e-06}, {'time': 0.064512597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.805000000008495e-06, 'source_diff': 2.805000000008495e-06}, {'time': 0.064515014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4169999999906766e-06, 'source_diff': 2.4169999999906766e-06}, {'time': 0.064519042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.02800000000314e-06, 'source_diff': 4.02800000000314e-06}, {'time': 0.06452325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.208000000005541e-06, 'source_diff': 4.208000000005541e-06}, {'time': 0.064529542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2919999999910825e-06, 'source_diff': 6.2919999999910825e-06}, {'time': 0.064534764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.221999999999172e-06, 'source_diff': 5.221999999999172e-06}, {'time': 0.064537625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.861000000006775e-06, 'source_diff': 2.861000000006775e-06}, {'time': 0.064543472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.847000000003266e-06, 'source_diff': 5.847000000003266e-06}, {'time': 0.064545944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4719999999894826e-06, 'source_diff': 2.4719999999894826e-06}, {'time': 0.064551792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.84800000000274e-06, 'source_diff': 5.84800000000274e-06}, {'time': 0.064557153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.361000000009275e-06, 'source_diff': 5.361000000009275e-06}, {'time': 0.064563181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0279999999912626e-06, 'source_diff': 6.0279999999912626e-06}, {'time': 0.064566736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5550000000023063e-06, 'source_diff': 3.5550000000023063e-06}, {'time': 0.064572528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.79200000000446e-06, 'source_diff': 5.79200000000446e-06}, {'time': 0.064575542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0139999999956313e-06, 'source_diff': 3.0139999999956313e-06}, {'time': 0.064580903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.360999999995397e-06, 'source_diff': 5.360999999995397e-06}, {'time': 0.064584806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.902999999999546e-06, 'source_diff': 3.902999999999546e-06}, {'time': 0.064588292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4860000000108693e-06, 'source_diff': 3.4860000000108693e-06}, {'time': 0.064593194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.902000000001072e-06, 'source_diff': 4.902000000001072e-06}, {'time': 0.064599306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.111999999988682e-06, 'source_diff': 6.111999999988682e-06}, {'time': 0.064605028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.721999999999672e-06, 'source_diff': 5.721999999999672e-06}, {'time': 0.064609764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7360000000051805e-06, 'source_diff': 4.7360000000051805e-06}, {'time': 0.064613597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.832999999994757e-06, 'source_diff': 3.832999999994757e-06}, {'time': 0.064617639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.042000000009649e-06, 'source_diff': 4.042000000009649e-06}, {'time': 0.064621986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.347000000001766e-06, 'source_diff': 4.347000000001766e-06}]</msg>
<status status="PASS" starttime="20201110 08:33:46.653" endtime="20201110 08:33:46.657"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.649" endtime="20201110 08:33:46.657"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:46.671" level="INFO">${debug-compressed} = {'source_diff': [0, 5.431000000000186e-06, 3.957999999998352e-06, 4.041999999995771e-06, 3.52800000000264e-06, 3.2219999999971716e-06, 5.917000000008055e-06, 5.235999999991803e-06, 2.4029999999980456e...</msg>
<status status="PASS" starttime="20201110 08:33:46.658" endtime="20201110 08:33:46.671"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:46.675" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:46.674" endtime="20201110 08:33:46.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:46.678" level="INFO">VALUE: {'source_diff': [0, 5.431000000000186e-06, 3.957999999998352e-06, 4.041999999995771e-06, 3.52800000000264e-06, 3.2219999999971716e-06, 5.917000000008055e-06, 5.235999999991803e-06, 2.4029999999980456e-06, 6.236000000006681e-06, 4.735999999991303e-06, 5.014000000011509e-06, 5.930000000001212e-06, 3.1529999999918568e-06, 3.847000000001266e-06, 6.041999999997771e-06, 5.667000000000866e-06, 2.637999999999252e-06, 3.26400000000282e-06, 5.9589999999998255e-06, 4.165999999999892e-06, 4.84800000000174e-06, 2.346999999999766e-06, 5.040999999997298e-06, 4.722999999998145e-06, 2.805000000008495e-06, 2.4169999999906766e-06, 4.02800000000314e-06, 4.208000000005541e-06, 6.2919999999910825e-06, 5.221999999999172e-06, 2.861000000006775e-06, 5.847000000003266e-06, 2.4719999999894826e-06, 5.84800000000274e-06, 5.361000000009275e-06, 6.0279999999912626e-06, 3.5550000000023063e-06, 5.79200000000446e-06, 3.0139999999956313e-06, 5.360999999995397e-06, 3.902999999999546e-06, 3.4860000000108693e-06, 4.902000000001072e-06, 6.111999999988682e-06, 5.721999999999672e-06, 4.7360000000051805e-06, 3.832999999994757e-06, 4.042000000009649e-06, 4.347000000001766e-06], 'eventdiff': [0, 5.431000000000186e-06, 3.957999999998352e-06, 4.041999999995771e-06, 3.52800000000264e-06, 3.2219999999971716e-06, 5.917000000008055e-06, 5.235999999991803e-06, 2.4029999999980456e-06, 6.236000000006681e-06, 4.735999999991303e-06, 5.014000000011509e-06, 5.930000000001212e-06, 3.1529999999918568e-06, 3.847000000001266e-06, 6.041999999997771e-06, 5.667000000000866e-06, 2.637999999999252e-06, 3.26400000000282e-06, 5.9589999999998255e-06, 4.165999999999892e-06, 4.84800000000174e-06, 2.346999999999766e-06, 5.040999999997298e-06, 4.722999999998145e-06, 2.805000000008495e-06, 2.4169999999906766e-06, 4.02800000000314e-06, 4.208000000005541e-06, 6.2919999999910825e-06, 5.221999999999172e-06, 2.861000000006775e-06, 5.847000000003266e-06, 2.4719999999894826e-06, 5.84800000000274e-06, 5.361000000009275e-06, 6.0279999999912626e-06, 3.5550000000023063e-06, 5.79200000000446e-06, 3.0139999999956313e-06, 5.360999999995397e-06, 3.902999999999546e-06, 3.4860000000108693e-06, 4.902000000001072e-06, 6.111999999988682e-06, 5.721999999999672e-06, 4.7360000000051805e-06, 3.832999999994757e-06, 4.042000000009649e-06, 4.347000000001766e-06], 'time': [0.064402444, 0.064407875, 0.064411833, 0.064415875, 0.064419403, 0.064422625, 0.064428542, 0.064433778, 0.064436181, 0.064442417, 0.064447153, 0.064452167, 0.064458097, 0.06446125, 0.064465097, 0.064471139, 0.064476806, 0.064479444, 0.064482708, 0.064488667, 0.064492833, 0.064497681, 0.064500028, 0.064505069, 0.064509792, 0.064512597, 0.064515014, 0.064519042, 0.06452325, 0.064529542, 0.064534764, 0.064537625, 0.064543472, 0.064545944, 0.064551792, 0.064557153, 0.064563181, 0.064566736, 0.064572528, 0.064575542, 0.064580903, 0.064584806, 0.064588292, 0.064593194, 0.064599306, 0.064605028, 0.064609764, 0.064613597, 0.064617639, 0.064621986], 'source}</msg>
<status status="PASS" starttime="20201110 08:33:46.676" endtime="20201110 08:33:46.678"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.672" endtime="20201110 08:33:46.679"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:46.682" level="INFO">${RESULT} = [{'time': 0.064407875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.431000000000186e-06, 'source_diff': 5.431000000000186e-06}, {'time': 0.064415875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:46.680" endtime="20201110 08:33:46.683"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:46.691" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [5.431000000000186e-06, 4.041999999995771e-06, 3.2219999999971716e-06, 5.235999999991803e-06, 6.236000000006681e-06, 5.014000000011509e-06, 3.1529999999918568e-06, 6.041999999997771e-0...</msg>
<status status="PASS" starttime="20201110 08:33:46.683" endtime="20201110 08:33:46.691"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:46.695" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:46.694" endtime="20201110 08:33:46.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:46.697" level="INFO">VALUE: [5.431000000000186e-06, 4.041999999995771e-06, 3.2219999999971716e-06, 5.235999999991803e-06, 6.236000000006681e-06, 5.014000000011509e-06, 3.1529999999918568e-06, 6.041999999997771e-06, 2.637999999999252e-06, 5.9589999999998255e-06, 4.84800000000174e-06, 5.040999999997298e-06, 2.805000000008495e-06, 4.02800000000314e-06, 6.2919999999910825e-06, 2.861000000006775e-06, 2.4719999999894826e-06, 5.361000000009275e-06, 3.5550000000023063e-06, 3.0139999999956313e-06, 3.902999999999546e-06, 4.902000000001072e-06, 5.721999999999672e-06, 3.832999999994757e-06, 4.347000000001766e-06]</msg>
<status status="PASS" starttime="20201110 08:33:46.696" endtime="20201110 08:33:46.697"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.692" endtime="20201110 08:33:46.698"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.700" endtime="20201110 08:33:46.701"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:46.704" endtime="20201110 08:33:46.723"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.702" endtime="20201110 08:33:46.723"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.698" endtime="20201110 08:33:46.724"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.328" endtime="20201110 08:33:46.724"></status>
</kw>
<msg timestamp="20201110 08:33:46.724" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.733" endtime="20201110 08:33:46.747"></status>
</kw>
<msg timestamp="20201110 08:33:46.748" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:46.731" endtime="20201110 08:33:46.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:46.750" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:46.749" endtime="20201110 08:33:46.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.751" endtime="20201110 08:33:46.753"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.728" endtime="20201110 08:33:46.753"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.726" endtime="20201110 08:33:46.754"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.760" endtime="20201110 08:33:47.034"></status>
</kw>
<msg timestamp="20201110 08:33:47.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018108958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018114181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:46.758" endtime="20201110 08:33:47.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018108958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018114181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:47.037" endtime="20201110 08:33:47.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.042" endtime="20201110 08:33:47.044"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.756" endtime="20201110 08:33:47.045"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.754" endtime="20201110 08:33:47.045"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.049" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:47.048" endtime="20201110 08:33:47.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.053" level="INFO">VALUE: [{'time': 0.018108958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018114181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.222999999998645e-06, 'source_diff': 5.222999999998645e-06}, {'time': 0.018119972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.791000000001517e-06, 'source_diff': 5.791000000001517e-06}, {'time': 0.018122444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.471999999999891e-06, 'source_diff': 2.471999999999891e-06}, {'time': 0.018127917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.472999999998895e-06, 'source_diff': 5.472999999998895e-06}, {'time': 0.018131097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.179999999998462e-06, 'source_diff': 3.179999999998462e-06}, {'time': 0.018133528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.431000000000655e-06, 'source_diff': 2.431000000000655e-06}, {'time': 0.018137542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.014000000000101e-06, 'source_diff': 4.014000000000101e-06}, {'time': 0.018140222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6800000000014312e-06, 'source_diff': 2.6800000000014312e-06}, {'time': 0.018143875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6529999999992957e-06, 'source_diff': 3.6529999999992957e-06}, {'time': 0.018150042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.167000000001366e-06, 'source_diff': 6.167000000001366e-06}, {'time': 0.018153069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.026999999999197e-06, 'source_diff': 3.026999999999197e-06}, {'time': 0.018157667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.59799999999802e-06, 'source_diff': 4.59799999999802e-06}, {'time': 0.018162944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.277000000001447e-06, 'source_diff': 5.277000000001447e-06}, {'time': 0.018168806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.86199999999884e-06, 'source_diff': 5.86199999999884e-06}, {'time': 0.018174292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.486000000002461e-06, 'source_diff': 5.486000000002461e-06}, {'time': 0.018177375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0829999999974766e-06, 'source_diff': 3.0829999999974766e-06}, {'time': 0.018182597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.222000000002641e-06, 'source_diff': 5.222000000002641e-06}, {'time': 0.018186403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.8059999999985605e-06, 'source_diff': 3.8059999999985605e-06}, {'time': 0.018189597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1939999999980317e-06, 'source_diff': 3.1939999999980317e-06}, {'time': 0.018194153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.55600000000278e-06, 'source_diff': 4.55600000000278e-06}, {'time': 0.018199569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.415999999997673e-06, 'source_diff': 5.415999999997673e-06}, {'time': 0.018202236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.667000000001335e-06, 'source_diff': 2.667000000001335e-06}, {'time': 0.018208028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.792000000000991e-06, 'source_diff': 5.792000000000991e-06}, {'time': 0.018210431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4029999999980456e-06, 'source_diff': 2.4029999999980456e-06}, {'time': 0.018216722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.291000000002017e-06, 'source_diff': 6.291000000002017e-06}, {'time': 0.018222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.277999999997451e-06, 'source_diff': 5.277999999997451e-06}, {'time': 0.018224486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4860000000029303e-06, 'source_diff': 2.4860000000029303e-06}, {'time': 0.018227208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.722000000000141e-06, 'source_diff': 2.722000000000141e-06}, {'time': 0.018233431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2229999999996455e-06, 'source_diff': 6.2229999999996455e-06}, {'time': 0.018236028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.597000000000016e-06, 'source_diff': 2.597000000000016e-06}, {'time': 0.018239569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.540999999999267e-06, 'source_diff': 3.540999999999267e-06}, {'time': 0.01824525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.681000000000436e-06, 'source_diff': 5.681000000000436e-06}, {'time': 0.018249764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.514000000000601e-06, 'source_diff': 4.514000000000601e-06}, {'time': 0.018252125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.360999999999336e-06, 'source_diff': 2.360999999999336e-06}, {'time': 0.018257597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.018260444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.847000000000266e-06, 'source_diff': 2.847000000000266e-06}, {'time': 0.018265542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.09799999999852e-06, 'source_diff': 5.09799999999852e-06}, {'time': 0.018271792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.018277847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.055000000001337e-06, 'source_diff': 6.055000000001337e-06}, {'time': 0.018282764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.917000000000116e-06, 'source_diff': 4.917000000000116e-06}, {'time': 0.018286639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.875000000000406e-06, 'source_diff': 3.875000000000406e-06}, {'time': 0.018289347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.708000000000571e-06, 'source_diff': 2.708000000000571e-06}, {'time': 0.018294333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.985999999998492e-06, 'source_diff': 4.985999999998492e-06}, {'time': 0.018299208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.875000000001406e-06, 'source_diff': 4.875000000001406e-06}, {'time': 0.018304472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.2639999999978815e-06, 'source_diff': 5.2639999999978815e-06}, {'time': 0.018307194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.722000000000141e-06, 'source_diff': 2.722000000000141e-06}, {'time': 0.018313236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.042000000001241e-06, 'source_diff': 6.042000000001241e-06}, {'time': 0.018316069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.833000000000696e-06, 'source_diff': 2.833000000000696e-06}, {'time': 0.018322, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.931000000000686e-06, 'source_diff': 5.931000000000686e-06}]</msg>
<status status="PASS" starttime="20201110 08:33:47.050" endtime="20201110 08:33:47.054"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.046" endtime="20201110 08:33:47.054"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:47.068" level="INFO">${debug-compressed} = {'source_diff': [0, 5.222999999998645e-06, 5.791000000001517e-06, 2.471999999999891e-06, 5.472999999998895e-06, 3.179999999998462e-06, 2.431000000000655e-06, 4.014000000000101e-06, 2.6800000000014312e...</msg>
<status status="PASS" starttime="20201110 08:33:47.055" endtime="20201110 08:33:47.068"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.072" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:47.071" endtime="20201110 08:33:47.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.075" level="INFO">VALUE: {'source_diff': [0, 5.222999999998645e-06, 5.791000000001517e-06, 2.471999999999891e-06, 5.472999999998895e-06, 3.179999999998462e-06, 2.431000000000655e-06, 4.014000000000101e-06, 2.6800000000014312e-06, 3.6529999999992957e-06, 6.167000000001366e-06, 3.026999999999197e-06, 4.59799999999802e-06, 5.277000000001447e-06, 5.86199999999884e-06, 5.486000000002461e-06, 3.0829999999974766e-06, 5.222000000002641e-06, 3.8059999999985605e-06, 3.1939999999980317e-06, 4.55600000000278e-06, 5.415999999997673e-06, 2.667000000001335e-06, 5.792000000000991e-06, 2.4029999999980456e-06, 6.291000000002017e-06, 5.277999999997451e-06, 2.4860000000029303e-06, 2.722000000000141e-06, 6.2229999999996455e-06, 2.597000000000016e-06, 3.540999999999267e-06, 5.681000000000436e-06, 4.514000000000601e-06, 2.360999999999336e-06, 5.471999999999422e-06, 2.847000000000266e-06, 5.09799999999852e-06, 6.249999999999312e-06, 6.055000000001337e-06, 4.917000000000116e-06, 3.875000000000406e-06, 2.708000000000571e-06, 4.985999999998492e-06, 4.875000000001406e-06, 5.2639999999978815e-06, 2.722000000000141e-06, 6.042000000001241e-06, 2.833000000000696e-06, 5.931000000000686e-06], 'eventdiff': [0, 5.222999999998645e-06, 5.791000000001517e-06, 2.471999999999891e-06, 5.472999999998895e-06, 3.179999999998462e-06, 2.431000000000655e-06, 4.014000000000101e-06, 2.6800000000014312e-06, 3.6529999999992957e-06, 6.167000000001366e-06, 3.026999999999197e-06, 4.59799999999802e-06, 5.277000000001447e-06, 5.86199999999884e-06, 5.486000000002461e-06, 3.0829999999974766e-06, 5.222000000002641e-06, 3.8059999999985605e-06, 3.1939999999980317e-06, 4.55600000000278e-06, 5.415999999997673e-06, 2.667000000001335e-06, 5.792000000000991e-06, 2.4029999999980456e-06, 6.291000000002017e-06, 5.277999999997451e-06, 2.4860000000029303e-06, 2.722000000000141e-06, 6.2229999999996455e-06, 2.597000000000016e-06, 3.540999999999267e-06, 5.681000000000436e-06, 4.514000000000601e-06, 2.360999999999336e-06, 5.471999999999422e-06, 2.847000000000266e-06, 5.09799999999852e-06, 6.249999999999312e-06, 6.055000000001337e-06, 4.917000000000116e-06, 3.875000000000406e-06, 2.708000000000571e-06, 4.985999999998492e-06, 4.875000000001406e-06, 5.2639999999978815e-06, 2.722000000000141e-06, 6.042000000001241e-06, 2.833000000000696e-06, 5.931000000000686e-06], 'time': [0.018108958, 0.018114181, 0.018119972, 0.018122444, 0.018127917, 0.018131097, 0.018133528, 0.018137542, 0.018140222, 0.018143875, 0.018150042, 0.018153069, 0.018157667, 0.018162944, 0.018168806, 0.018174292, 0.018177375, 0.018182597, 0.018186403, 0.018189597, 0.018194153, 0.018199569, 0.018202236, 0.018208028, 0.018210431, 0.018216722, 0.018222, 0.018224486, 0.018227208, 0.018233431, 0.018236028, 0.018239569, 0.01824525, 0.018249764, 0.018252125, 0.018257597, 0.018260444, 0.018265542, 0.018271792, 0.018277847, 0.018282764, 0.018286639, 0.018289347, 0.018294333, 0.018299208, 0.018304472, 0.018307194, 0.018313236, 0.018316069, 0.018322], 'source}</msg>
<status status="PASS" starttime="20201110 08:33:47.073" endtime="20201110 08:33:47.076"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.069" endtime="20201110 08:33:47.076"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:47.080" level="INFO">${RESULT} = [{'time': 0.018114181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.222999999998645e-06, 'source_diff': 5.222999999998645e-06}, {'time': 0.018122444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:47.077" endtime="20201110 08:33:47.080"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:47.088" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [5.222999999998645e-06, 2.471999999999891e-06, 3.179999999998462e-06, 4.014000000000101e-06, 3.6529999999992957e-06, 3.026999999999197e-06, 5.277000000001447e-06, 5.486000000002461e-06...</msg>
<status status="PASS" starttime="20201110 08:33:47.081" endtime="20201110 08:33:47.089"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.093" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:47.092" endtime="20201110 08:33:47.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.095" level="INFO">VALUE: [5.222999999998645e-06, 2.471999999999891e-06, 3.179999999998462e-06, 4.014000000000101e-06, 3.6529999999992957e-06, 3.026999999999197e-06, 5.277000000001447e-06, 5.486000000002461e-06, 5.222000000002641e-06, 3.1939999999980317e-06, 5.415999999997673e-06, 5.792000000000991e-06, 6.291000000002017e-06, 2.4860000000029303e-06, 6.2229999999996455e-06, 3.540999999999267e-06, 4.514000000000601e-06, 5.471999999999422e-06, 5.09799999999852e-06, 6.055000000001337e-06, 3.875000000000406e-06, 4.985999999998492e-06, 5.2639999999978815e-06, 6.042000000001241e-06, 5.931000000000686e-06]</msg>
<status status="PASS" starttime="20201110 08:33:47.094" endtime="20201110 08:33:47.095"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.089" endtime="20201110 08:33:47.096"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.098" endtime="20201110 08:33:47.099"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:47.102" endtime="20201110 08:33:47.122"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.100" endtime="20201110 08:33:47.122"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.096" endtime="20201110 08:33:47.123"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.725" endtime="20201110 08:33:47.123"></status>
</kw>
<msg timestamp="20201110 08:33:47.123" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.131" endtime="20201110 08:33:47.148"></status>
</kw>
<msg timestamp="20201110 08:33:47.150" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:47.129" endtime="20201110 08:33:47.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.155" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:47.154" endtime="20201110 08:33:47.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.157" endtime="20201110 08:33:47.159"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.127" endtime="20201110 08:33:47.159"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.125" endtime="20201110 08:33:47.160"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.176" endtime="20201110 08:33:47.446"></status>
</kw>
<msg timestamp="20201110 08:33:47.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017881028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017886056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:47.170" endtime="20201110 08:33:47.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017881028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017886056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:47.449" endtime="20201110 08:33:47.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.454" endtime="20201110 08:33:47.456"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.167" endtime="20201110 08:33:47.456"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.161" endtime="20201110 08:33:47.457"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.460" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:47.459" endtime="20201110 08:33:47.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.464" level="INFO">VALUE: [{'time': 0.017881028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017886056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.028000000000671e-06, 'source_diff': 5.028000000000671e-06}, {'time': 0.017890097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.040999999999767e-06, 'source_diff': 4.040999999999767e-06}, {'time': 0.017894444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.346999999998297e-06, 'source_diff': 4.346999999998297e-06}, {'time': 0.017899111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.666999999999866e-06, 'source_diff': 4.666999999999866e-06}, {'time': 0.017904611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.500000000002031e-06, 'source_diff': 5.500000000002031e-06}, {'time': 0.017908069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4579999999978517e-06, 'source_diff': 3.4579999999978517e-06}, {'time': 0.017913472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.403000000001046e-06, 'source_diff': 5.403000000001046e-06}, {'time': 0.017915847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3749999999989058e-06, 'source_diff': 2.3749999999989058e-06}, {'time': 0.017922056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2090000000000756e-06, 'source_diff': 6.2090000000000756e-06}, {'time': 0.017925167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.111000000000086e-06, 'source_diff': 3.111000000000086e-06}, {'time': 0.017929194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.027000000000197e-06, 'source_diff': 4.027000000000197e-06}, {'time': 0.017934972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.778000000001421e-06, 'source_diff': 5.778000000001421e-06}, {'time': 0.017939139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.017942431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.2919999999984906e-06, 'source_diff': 3.2919999999984906e-06}, {'time': 0.017947778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.347000000002766e-06, 'source_diff': 5.347000000002766e-06}, {'time': 0.017950958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.179999999998462e-06, 'source_diff': 3.179999999998462e-06}, {'time': 0.017956, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.017958764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7639999999988507e-06, 'source_diff': 2.7639999999988507e-06}, {'time': 0.017963875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.111000000002086e-06, 'source_diff': 5.111000000002086e-06}, {'time': 0.017969111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.235999999998742e-06, 'source_diff': 5.235999999998742e-06}, {'time': 0.017974028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.917000000000116e-06, 'source_diff': 4.917000000000116e-06}, {'time': 0.017978361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.333000000002196e-06, 'source_diff': 4.333000000002196e-06}, {'time': 0.017983597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.235999999998742e-06, 'source_diff': 5.235999999998742e-06}, {'time': 0.01798925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.6529999999978264e-06, 'source_diff': 5.6529999999978264e-06}, {'time': 0.017995292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.042000000001241e-06, 'source_diff': 6.042000000001241e-06}, {'time': 0.017999778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.486000000001461e-06, 'source_diff': 4.486000000001461e-06}, {'time': 0.018005736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.958000000000352e-06, 'source_diff': 5.958000000000352e-06}, {'time': 0.018009542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.8059999999985605e-06, 'source_diff': 3.8059999999985605e-06}, {'time': 0.018014306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.764000000000851e-06, 'source_diff': 4.764000000000851e-06}, {'time': 0.018017972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.665999999999392e-06, 'source_diff': 3.665999999999392e-06}, {'time': 0.018023917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.945000000000256e-06, 'source_diff': 5.945000000000256e-06}, {'time': 0.018028486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.568999999999407e-06, 'source_diff': 4.568999999999407e-06}, {'time': 0.018031042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.55600000000078e-06, 'source_diff': 2.55600000000078e-06}, {'time': 0.018033444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.401999999998572e-06, 'source_diff': 2.401999999998572e-06}, {'time': 0.018036931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4869999999999346e-06, 'source_diff': 3.4869999999999346e-06}, {'time': 0.018041625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.693999999999532e-06, 'source_diff': 4.693999999999532e-06}, {'time': 0.018047806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.181000000000936e-06, 'source_diff': 6.181000000000936e-06}, {'time': 0.018053167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.360999999998867e-06, 'source_diff': 5.360999999998867e-06}, {'time': 0.01805725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.083000000001946e-06, 'source_diff': 4.083000000001946e-06}, {'time': 0.018061917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.666999999999866e-06, 'source_diff': 4.666999999999866e-06}, {'time': 0.018066708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.791000000000517e-06, 'source_diff': 4.791000000000517e-06}, {'time': 0.018070875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.01807675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.874999999998937e-06, 'source_diff': 5.874999999998937e-06}, {'time': 0.018081, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.250000000000781e-06, 'source_diff': 4.250000000000781e-06}, {'time': 0.018084167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.167000000001835e-06, 'source_diff': 3.167000000001835e-06}, {'time': 0.018087653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4859999999969915e-06, 'source_diff': 3.4859999999969915e-06}, {'time': 0.018090306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.653000000001765e-06, 'source_diff': 2.653000000001765e-06}, {'time': 0.018096472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.165999999998423e-06, 'source_diff': 6.165999999998423e-06}, {'time': 0.018100514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.04200000000271e-06, 'source_diff': 4.04200000000271e-06}]</msg>
<status status="PASS" starttime="20201110 08:33:47.461" endtime="20201110 08:33:47.465"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.457" endtime="20201110 08:33:47.466"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:47.481" level="INFO">${debug-compressed} = {'source_diff': [0, 5.028000000000671e-06, 4.040999999999767e-06, 4.346999999998297e-06, 4.666999999999866e-06, 5.500000000002031e-06, 3.4579999999978517e-06, 5.403000000001046e-06, 2.3749999999989058...</msg>
<status status="PASS" starttime="20201110 08:33:47.466" endtime="20201110 08:33:47.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.496" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:47.489" endtime="20201110 08:33:47.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.501" level="INFO">VALUE: {'source_diff': [0, 5.028000000000671e-06, 4.040999999999767e-06, 4.346999999998297e-06, 4.666999999999866e-06, 5.500000000002031e-06, 3.4579999999978517e-06, 5.403000000001046e-06, 2.3749999999989058e-06, 6.2090000000000756e-06, 3.111000000000086e-06, 4.027000000000197e-06, 5.778000000001421e-06, 4.166999999999366e-06, 3.2919999999984906e-06, 5.347000000002766e-06, 3.179999999998462e-06, 5.042000000000241e-06, 2.7639999999988507e-06, 5.111000000002086e-06, 5.235999999998742e-06, 4.917000000000116e-06, 4.333000000002196e-06, 5.235999999998742e-06, 5.6529999999978264e-06, 6.042000000001241e-06, 4.486000000001461e-06, 5.958000000000352e-06, 3.8059999999985605e-06, 4.764000000000851e-06, 3.665999999999392e-06, 5.945000000000256e-06, 4.568999999999407e-06, 2.55600000000078e-06, 2.401999999998572e-06, 3.4869999999999346e-06, 4.693999999999532e-06, 6.181000000000936e-06, 5.360999999998867e-06, 4.083000000001946e-06, 4.666999999999866e-06, 4.791000000000517e-06, 4.166999999999366e-06, 5.874999999998937e-06, 4.250000000000781e-06, 3.167000000001835e-06, 3.4859999999969915e-06, 2.653000000001765e-06, 6.165999999998423e-06, 4.04200000000271e-06], 'eventdiff': [0, 5.028000000000671e-06, 4.040999999999767e-06, 4.346999999998297e-06, 4.666999999999866e-06, 5.500000000002031e-06, 3.4579999999978517e-06, 5.403000000001046e-06, 2.3749999999989058e-06, 6.2090000000000756e-06, 3.111000000000086e-06, 4.027000000000197e-06, 5.778000000001421e-06, 4.166999999999366e-06, 3.2919999999984906e-06, 5.347000000002766e-06, 3.179999999998462e-06, 5.042000000000241e-06, 2.7639999999988507e-06, 5.111000000002086e-06, 5.235999999998742e-06, 4.917000000000116e-06, 4.333000000002196e-06, 5.235999999998742e-06, 5.6529999999978264e-06, 6.042000000001241e-06, 4.486000000001461e-06, 5.958000000000352e-06, 3.8059999999985605e-06, 4.764000000000851e-06, 3.665999999999392e-06, 5.945000000000256e-06, 4.568999999999407e-06, 2.55600000000078e-06, 2.401999999998572e-06, 3.4869999999999346e-06, 4.693999999999532e-06, 6.181000000000936e-06, 5.360999999998867e-06, 4.083000000001946e-06, 4.666999999999866e-06, 4.791000000000517e-06, 4.166999999999366e-06, 5.874999999998937e-06, 4.250000000000781e-06, 3.167000000001835e-06, 3.4859999999969915e-06, 2.653000000001765e-06, 6.165999999998423e-06, 4.04200000000271e-06], 'time': [0.017881028, 0.017886056, 0.017890097, 0.017894444, 0.017899111, 0.017904611, 0.017908069, 0.017913472, 0.017915847, 0.017922056, 0.017925167, 0.017929194, 0.017934972, 0.017939139, 0.017942431, 0.017947778, 0.017950958, 0.017956, 0.017958764, 0.017963875, 0.017969111, 0.017974028, 0.017978361, 0.017983597, 0.01798925, 0.017995292, 0.017999778, 0.018005736, 0.018009542, 0.018014306, 0.018017972, 0.018023917, 0.018028486, 0.018031042, 0.018033444, 0.018036931, 0.018041625, 0.018047806, 0.018053167, 0.01805725, 0.018061917, 0.018066708, 0.018070875, 0.01807675, 0.018081, 0.018084167, 0.018087653, 0.018090306, 0.018096472, 0.018100514], 'source}</msg>
<status status="PASS" starttime="20201110 08:33:47.497" endtime="20201110 08:33:47.502"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.484" endtime="20201110 08:33:47.503"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:47.510" level="INFO">${RESULT} = [{'time': 0.017886056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.028000000000671e-06, 'source_diff': 5.028000000000671e-06}, {'time': 0.017894444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:47.505" endtime="20201110 08:33:47.511"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:47.527" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [5.028000000000671e-06, 4.346999999998297e-06, 5.500000000002031e-06, 5.403000000001046e-06, 6.2090000000000756e-06, 4.027000000000197e-06, 4.166999999999366e-06, 5.347000000002766e-06...</msg>
<status status="PASS" starttime="20201110 08:33:47.513" endtime="20201110 08:33:47.528"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.536" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:47.534" endtime="20201110 08:33:47.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.541" level="INFO">VALUE: [5.028000000000671e-06, 4.346999999998297e-06, 5.500000000002031e-06, 5.403000000001046e-06, 6.2090000000000756e-06, 4.027000000000197e-06, 4.166999999999366e-06, 5.347000000002766e-06, 5.042000000000241e-06, 5.111000000002086e-06, 4.917000000000116e-06, 5.235999999998742e-06, 6.042000000001241e-06, 5.958000000000352e-06, 4.764000000000851e-06, 5.945000000000256e-06, 2.55600000000078e-06, 3.4869999999999346e-06, 6.181000000000936e-06, 4.083000000001946e-06, 4.791000000000517e-06, 5.874999999998937e-06, 3.167000000001835e-06, 2.653000000001765e-06, 4.04200000000271e-06]</msg>
<status status="PASS" starttime="20201110 08:33:47.539" endtime="20201110 08:33:47.543"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.529" endtime="20201110 08:33:47.544"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.548" endtime="20201110 08:33:47.552"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:47.556" endtime="20201110 08:33:47.577"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.553" endtime="20201110 08:33:47.579"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.545" endtime="20201110 08:33:47.580"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.124" endtime="20201110 08:33:47.581"></status>
</kw>
<msg timestamp="20201110 08:33:47.582" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.601" endtime="20201110 08:33:47.620"></status>
</kw>
<msg timestamp="20201110 08:33:47.621" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:47.597" endtime="20201110 08:33:47.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.627" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:47.624" endtime="20201110 08:33:47.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.630" endtime="20201110 08:33:47.634"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.591" endtime="20201110 08:33:47.636"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.587" endtime="20201110 08:33:47.637"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.652" endtime="20201110 08:33:47.920"></status>
</kw>
<msg timestamp="20201110 08:33:47.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034686125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034690458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:47.649" endtime="20201110 08:33:47.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034686125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034690458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:47.923" endtime="20201110 08:33:47.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.929" endtime="20201110 08:33:47.930"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.643" endtime="20201110 08:33:47.931"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.638" endtime="20201110 08:33:47.931"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.935" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:47.934" endtime="20201110 08:33:47.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.939" level="INFO">VALUE: [{'time': 0.034686125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034690458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.333000000002196e-06, 'source_diff': 4.333000000002196e-06}, {'time': 0.034693694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.2359999999967415e-06, 'source_diff': 3.2359999999967415e-06}, {'time': 0.034699861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.167000000001366e-06, 'source_diff': 6.167000000001366e-06}, {'time': 0.034703319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4580000000047906e-06, 'source_diff': 3.4580000000047906e-06}, {'time': 0.034708875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.555999999996841e-06, 'source_diff': 5.555999999996841e-06}, {'time': 0.034714833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.958000000000352e-06, 'source_diff': 5.958000000000352e-06}, {'time': 0.034719125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.29200000000296e-06, 'source_diff': 4.29200000000296e-06}, {'time': 0.034725375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.034728569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1939999999980317e-06, 'source_diff': 3.1939999999980317e-06}, {'time': 0.034732986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416999999999616e-06, 'source_diff': 4.416999999999616e-06}, {'time': 0.034735778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.79200000000146e-06, 'source_diff': 2.79200000000146e-06}, {'time': 0.034742083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.304999999998118e-06, 'source_diff': 6.304999999998118e-06}, {'time': 0.034746792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7089999999985754e-06, 'source_diff': 4.7089999999985754e-06}, {'time': 0.034749653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.860999999999836e-06, 'source_diff': 2.860999999999836e-06}, {'time': 0.034754681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.02800000000414e-06, 'source_diff': 5.02800000000414e-06}, {'time': 0.034757597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.915999999998642e-06, 'source_diff': 2.915999999998642e-06}, {'time': 0.034762944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.346999999995827e-06, 'source_diff': 5.346999999995827e-06}, {'time': 0.034769208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2640000000058205e-06, 'source_diff': 6.2640000000058205e-06}, {'time': 0.034774014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.805999999996091e-06, 'source_diff': 4.805999999996091e-06}, {'time': 0.034777069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0550000000018063e-06, 'source_diff': 3.0550000000018063e-06}, {'time': 0.034783028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9589999999998255e-06, 'source_diff': 5.9589999999998255e-06}, {'time': 0.034788, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.971999999998922e-06, 'source_diff': 4.971999999998922e-06}, {'time': 0.034793931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.931000000000686e-06, 'source_diff': 5.931000000000686e-06}, {'time': 0.034799264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.333000000003196e-06, 'source_diff': 5.333000000003196e-06}, {'time': 0.034803431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.034806153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7219999999966715e-06, 'source_diff': 2.7219999999966715e-06}, {'time': 0.034808639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4860000000029303e-06, 'source_diff': 2.4860000000029303e-06}, {'time': 0.034812625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.9859999999974915e-06, 'source_diff': 3.9859999999974915e-06}, {'time': 0.034816278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6529999999992957e-06, 'source_diff': 3.6529999999992957e-06}, {'time': 0.034819806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.52800000000264e-06, 'source_diff': 3.52800000000264e-06}, {'time': 0.034825917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.110999999996147e-06, 'source_diff': 6.110999999996147e-06}, {'time': 0.034830819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.902000000001072e-06, 'source_diff': 4.902000000001072e-06}, {'time': 0.034833236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4169999999976155e-06, 'source_diff': 2.4169999999976155e-06}, {'time': 0.034836278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.04200000000171e-06, 'source_diff': 3.04200000000171e-06}, {'time': 0.034839389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.111000000000086e-06, 'source_diff': 3.111000000000086e-06}, {'time': 0.034845042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.034850958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.916000000001642e-06, 'source_diff': 5.916000000001642e-06}, {'time': 0.03485525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.291999999996021e-06, 'source_diff': 4.291999999996021e-06}, {'time': 0.034858083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.833000000000696e-06, 'source_diff': 2.833000000000696e-06}, {'time': 0.034863236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.153000000000796e-06, 'source_diff': 5.153000000000796e-06}, {'time': 0.034867861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.625000000001156e-06, 'source_diff': 4.625000000001156e-06}, {'time': 0.034873389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.527999999997701e-06, 'source_diff': 5.527999999997701e-06}, {'time': 0.034876361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9720000000038604e-06, 'source_diff': 2.9720000000038604e-06}, {'time': 0.034880458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.034886069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.610999999995647e-06, 'source_diff': 5.610999999995647e-06}, {'time': 0.034888986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9169999999981155e-06, 'source_diff': 2.9169999999981155e-06}, {'time': 0.034894472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.486000000005931e-06, 'source_diff': 5.486000000005931e-06}, {'time': 0.034899056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.583999999994981e-06, 'source_diff': 4.583999999994981e-06}, {'time': 0.034901597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5410000000017363e-06, 'source_diff': 2.5410000000017363e-06}]</msg>
<status status="PASS" starttime="20201110 08:33:47.936" endtime="20201110 08:33:47.940"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.932" endtime="20201110 08:33:47.940"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:47.955" level="INFO">${debug-compressed} = {'source_diff': [0, 4.333000000002196e-06, 3.2359999999967415e-06, 6.167000000001366e-06, 3.4580000000047906e-06, 5.555999999996841e-06, 5.958000000000352e-06, 4.29200000000296e-06, 6.249999999999312e...</msg>
<status status="PASS" starttime="20201110 08:33:47.941" endtime="20201110 08:33:47.955"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.958" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:47.957" endtime="20201110 08:33:47.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.962" level="INFO">VALUE: {'source_diff': [0, 4.333000000002196e-06, 3.2359999999967415e-06, 6.167000000001366e-06, 3.4580000000047906e-06, 5.555999999996841e-06, 5.958000000000352e-06, 4.29200000000296e-06, 6.249999999999312e-06, 3.1939999999980317e-06, 4.416999999999616e-06, 2.79200000000146e-06, 6.304999999998118e-06, 4.7089999999985754e-06, 2.860999999999836e-06, 5.02800000000414e-06, 2.915999999998642e-06, 5.346999999995827e-06, 6.2640000000058205e-06, 4.805999999996091e-06, 3.0550000000018063e-06, 5.9589999999998255e-06, 4.971999999998922e-06, 5.931000000000686e-06, 5.333000000003196e-06, 4.166999999999366e-06, 2.7219999999966715e-06, 2.4860000000029303e-06, 3.9859999999974915e-06, 3.6529999999992957e-06, 3.52800000000264e-06, 6.110999999996147e-06, 4.902000000001072e-06, 2.4169999999976155e-06, 3.04200000000171e-06, 3.111000000000086e-06, 5.653000000001296e-06, 5.916000000001642e-06, 4.291999999996021e-06, 2.833000000000696e-06, 5.153000000000796e-06, 4.625000000001156e-06, 5.527999999997701e-06, 2.9720000000038604e-06, 4.097000000001516e-06, 5.610999999995647e-06, 2.9169999999981155e-06, 5.486000000005931e-06, 4.583999999994981e-06, 2.5410000000017363e-06], 'eventdiff': [0, 4.333000000002196e-06, 3.2359999999967415e-06, 6.167000000001366e-06, 3.4580000000047906e-06, 5.555999999996841e-06, 5.958000000000352e-06, 4.29200000000296e-06, 6.249999999999312e-06, 3.1939999999980317e-06, 4.416999999999616e-06, 2.79200000000146e-06, 6.304999999998118e-06, 4.7089999999985754e-06, 2.860999999999836e-06, 5.02800000000414e-06, 2.915999999998642e-06, 5.346999999995827e-06, 6.2640000000058205e-06, 4.805999999996091e-06, 3.0550000000018063e-06, 5.9589999999998255e-06, 4.971999999998922e-06, 5.931000000000686e-06, 5.333000000003196e-06, 4.166999999999366e-06, 2.7219999999966715e-06, 2.4860000000029303e-06, 3.9859999999974915e-06, 3.6529999999992957e-06, 3.52800000000264e-06, 6.110999999996147e-06, 4.902000000001072e-06, 2.4169999999976155e-06, 3.04200000000171e-06, 3.111000000000086e-06, 5.653000000001296e-06, 5.916000000001642e-06, 4.291999999996021e-06, 2.833000000000696e-06, 5.153000000000796e-06, 4.625000000001156e-06, 5.527999999997701e-06, 2.9720000000038604e-06, 4.097000000001516e-06, 5.610999999995647e-06, 2.9169999999981155e-06, 5.486000000005931e-06, 4.583999999994981e-06, 2.5410000000017363e-06], 'time': [0.034686125, 0.034690458, 0.034693694, 0.034699861, 0.034703319, 0.034708875, 0.034714833, 0.034719125, 0.034725375, 0.034728569, 0.034732986, 0.034735778, 0.034742083, 0.034746792, 0.034749653, 0.034754681, 0.034757597, 0.034762944, 0.034769208, 0.034774014, 0.034777069, 0.034783028, 0.034788, 0.034793931, 0.034799264, 0.034803431, 0.034806153, 0.034808639, 0.034812625, 0.034816278, 0.034819806, 0.034825917, 0.034830819, 0.034833236, 0.034836278, 0.034839389, 0.034845042, 0.034850958, 0.03485525, 0.034858083, 0.034863236, 0.034867861, 0.034873389, 0.034876361, 0.034880458, 0.034886069, 0.034888986, 0.034894472, 0.034899056, 0.034901597], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC']}</msg>
<status status="PASS" starttime="20201110 08:33:47.959" endtime="20201110 08:33:47.962"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.955" endtime="20201110 08:33:47.963"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:47.966" level="INFO">${RESULT} = [{'time': 0.034690458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.333000000002196e-06, 'source_diff': 4.333000000002196e-06}, {'time': 0.034699861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:47.963" endtime="20201110 08:33:47.966"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:47.974" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.333000000002196e-06, 6.167000000001366e-06, 5.555999999996841e-06, 4.29200000000296e-06, 3.1939999999980317e-06, 2.79200000000146e-06, 4.7089999999985754e-06, 5.02800000000414e-06, ...</msg>
<status status="PASS" starttime="20201110 08:33:47.967" endtime="20201110 08:33:47.974"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.978" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:47.977" endtime="20201110 08:33:47.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.981" level="INFO">VALUE: [4.333000000002196e-06, 6.167000000001366e-06, 5.555999999996841e-06, 4.29200000000296e-06, 3.1939999999980317e-06, 2.79200000000146e-06, 4.7089999999985754e-06, 5.02800000000414e-06, 5.346999999995827e-06, 4.805999999996091e-06, 5.9589999999998255e-06, 5.931000000000686e-06, 4.166999999999366e-06, 2.4860000000029303e-06, 3.6529999999992957e-06, 6.110999999996147e-06, 2.4169999999976155e-06, 3.111000000000086e-06, 5.916000000001642e-06, 2.833000000000696e-06, 4.625000000001156e-06, 2.9720000000038604e-06, 5.610999999995647e-06, 5.486000000005931e-06, 2.5410000000017363e-06]</msg>
<status status="PASS" starttime="20201110 08:33:47.979" endtime="20201110 08:33:47.982"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.975" endtime="20201110 08:33:47.983"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.985" endtime="20201110 08:33:47.987"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:47.989" endtime="20201110 08:33:48.009"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.987" endtime="20201110 08:33:48.009"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.983" endtime="20201110 08:33:48.010"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.583" endtime="20201110 08:33:48.010"></status>
</kw>
<msg timestamp="20201110 08:33:48.010" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.018" endtime="20201110 08:33:48.032"></status>
</kw>
<msg timestamp="20201110 08:33:48.032" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:48.016" endtime="20201110 08:33:48.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:48.035" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:48.033" endtime="20201110 08:33:48.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.036" endtime="20201110 08:33:48.037"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.014" endtime="20201110 08:33:48.038"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.012" endtime="20201110 08:33:48.038"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.045" endtime="20201110 08:33:48.314"></status>
</kw>
<msg timestamp="20201110 08:33:48.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017777319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017780653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:48.043" endtime="20201110 08:33:48.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:48.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017777319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017780653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:48.316" endtime="20201110 08:33:48.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.322" endtime="20201110 08:33:48.324"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.040" endtime="20201110 08:33:48.325"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.039" endtime="20201110 08:33:48.325"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:48.329" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:48.328" endtime="20201110 08:33:48.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:48.333" level="INFO">VALUE: [{'time': 0.017777319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017780653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3340000000006698e-06, 'source_diff': 3.3340000000006698e-06}, {'time': 0.017784681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.027999999999671e-06, 'source_diff': 4.027999999999671e-06}, {'time': 0.017789667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.985999999998492e-06, 'source_diff': 4.985999999998492e-06}, {'time': 0.017793764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.017799736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.017804597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.860999999998367e-06, 'source_diff': 4.860999999998367e-06}, {'time': 0.017807639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.04200000000171e-06, 'source_diff': 3.04200000000171e-06}, {'time': 0.017810042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.403000000001515e-06, 'source_diff': 2.403000000001515e-06}, {'time': 0.017815556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5139999999981315e-06, 'source_diff': 5.5139999999981315e-06}, {'time': 0.017818236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6800000000014312e-06, 'source_diff': 2.6800000000014312e-06}, {'time': 0.017823708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.017828708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.9999999999980616e-06, 'source_diff': 4.9999999999980616e-06}, {'time': 0.017834042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.33400000000267e-06, 'source_diff': 5.33400000000267e-06}, {'time': 0.017837819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.776999999999947e-06, 'source_diff': 3.776999999999947e-06}, {'time': 0.017841583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.763999999999851e-06, 'source_diff': 3.763999999999851e-06}, {'time': 0.017845083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.500000000000031e-06, 'source_diff': 3.500000000000031e-06}, {'time': 0.017849819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.735999999998242e-06, 'source_diff': 4.735999999998242e-06}, {'time': 0.017854306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.487000000000935e-06, 'source_diff': 4.487000000000935e-06}, {'time': 0.017859958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.651999999998353e-06, 'source_diff': 5.651999999998353e-06}, {'time': 0.017862986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.02800000000214e-06, 'source_diff': 3.02800000000214e-06}, {'time': 0.017868083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.096999999999047e-06, 'source_diff': 5.096999999999047e-06}, {'time': 0.017871319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.236000000000211e-06, 'source_diff': 3.236000000000211e-06}, {'time': 0.017875042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7230000000006147e-06, 'source_diff': 3.7230000000006147e-06}, {'time': 0.017878472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.429999999998712e-06, 'source_diff': 3.429999999998712e-06}, {'time': 0.017881125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.653000000001765e-06, 'source_diff': 2.653000000001765e-06}, {'time': 0.017886597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.017890875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.277999999999921e-06, 'source_diff': 4.277999999999921e-06}, {'time': 0.017895042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.017900514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.01790375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.236000000000211e-06, 'source_diff': 3.236000000000211e-06}, {'time': 0.017909472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.721999999999672e-06, 'source_diff': 5.721999999999672e-06}, {'time': 0.017913875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.01791725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.374999999999906e-06, 'source_diff': 3.374999999999906e-06}, {'time': 0.017922014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.764000000000851e-06, 'source_diff': 4.764000000000851e-06}, {'time': 0.017927764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.749999999998812e-06, 'source_diff': 5.749999999998812e-06}, {'time': 0.017933972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.208000000000602e-06, 'source_diff': 6.208000000000602e-06}, {'time': 0.017937514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.54200000000221e-06, 'source_diff': 3.54200000000221e-06}, {'time': 0.017942292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.777999999996951e-06, 'source_diff': 4.777999999996951e-06}, {'time': 0.017944958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6660000000018613e-06, 'source_diff': 2.6660000000018613e-06}, {'time': 0.017947944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.985999999999961e-06, 'source_diff': 2.985999999999961e-06}, {'time': 0.017951028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0840000000004197e-06, 'source_diff': 3.0840000000004197e-06}, {'time': 0.017955069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.040999999999767e-06, 'source_diff': 4.040999999999767e-06}, {'time': 0.017960792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7229999999991454e-06, 'source_diff': 5.7229999999991454e-06}, {'time': 0.017964458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.665999999999392e-06, 'source_diff': 3.665999999999392e-06}, {'time': 0.017970264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.806000000000561e-06, 'source_diff': 5.806000000000561e-06}, {'time': 0.017975167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.903000000000546e-06, 'source_diff': 4.903000000000546e-06}, {'time': 0.017977819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.651999999998822e-06, 'source_diff': 2.651999999998822e-06}, {'time': 0.017982236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416999999999616e-06, 'source_diff': 4.416999999999616e-06}, {'time': 0.017986903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.666999999999866e-06, 'source_diff': 4.666999999999866e-06}]</msg>
<status status="PASS" starttime="20201110 08:33:48.330" endtime="20201110 08:33:48.334"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.326" endtime="20201110 08:33:48.334"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:48.349" level="INFO">${debug-compressed} = {'source_diff': [0, 3.3340000000006698e-06, 4.027999999999671e-06, 4.985999999998492e-06, 4.097000000001516e-06, 5.971999999999922e-06, 4.860999999998367e-06, 3.04200000000171e-06, 2.403000000001515e-...</msg>
<status status="PASS" starttime="20201110 08:33:48.335" endtime="20201110 08:33:48.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:48.353" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:48.352" endtime="20201110 08:33:48.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:48.356" level="INFO">VALUE: {'source_diff': [0, 3.3340000000006698e-06, 4.027999999999671e-06, 4.985999999998492e-06, 4.097000000001516e-06, 5.971999999999922e-06, 4.860999999998367e-06, 3.04200000000171e-06, 2.403000000001515e-06, 5.5139999999981315e-06, 2.6800000000014312e-06, 5.471999999999422e-06, 4.9999999999980616e-06, 5.33400000000267e-06, 3.776999999999947e-06, 3.763999999999851e-06, 3.500000000000031e-06, 4.735999999998242e-06, 4.487000000000935e-06, 5.651999999998353e-06, 3.02800000000214e-06, 5.096999999999047e-06, 3.236000000000211e-06, 3.7230000000006147e-06, 3.429999999998712e-06, 2.653000000001765e-06, 5.471999999999422e-06, 4.277999999999921e-06, 4.166999999999366e-06, 5.471999999999422e-06, 3.236000000000211e-06, 5.721999999999672e-06, 4.403000000000046e-06, 3.374999999999906e-06, 4.764000000000851e-06, 5.749999999998812e-06, 6.208000000000602e-06, 3.54200000000221e-06, 4.777999999996951e-06, 2.6660000000018613e-06, 2.985999999999961e-06, 3.0840000000004197e-06, 4.040999999999767e-06, 5.7229999999991454e-06, 3.665999999999392e-06, 5.806000000000561e-06, 4.903000000000546e-06, 2.651999999998822e-06, 4.416999999999616e-06, 4.666999999999866e-06], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'diff': [0, 3.3340000000006698e-06, 4.027999999999671e-06, 4.985999999998492e-06, 4.097000000001516e-06, 5.971999999999922e-06, 4.860999999998367e-06, 3.04200000000171e-06, 2.403000000001515e-06, 5.5139999999981315e-06, 2.6800000000014312e-06, 5.471999999999422e-06, 4.9999999999980616e-06, 5.33400000000267e-06, 3.776999999999947e-06, 3.763999999999851e-06, 3.500000000000031e-06, 4.735999999998242e-06, 4.487000000000935e-06, 5.651999999998353e-06, 3.02800000000214e-06, 5.096999999999047e-06, 3.236000000000211e-06, 3.7230000000006147e-06, 3.429999999998712e-06, 2.653000000001765e-06, 5.471999999999422e-06, 4.277999999999921e-06, 4.166999999999366e-06, 5.471999999999422e-06, 3.236000000000211e-06, 5.721999999999672e-06, 4.403000000000046e-06, 3.374999999999906e-06, 4.764000000000851e-06, 5.749999999998812e-06, 6.208000000000602e-06, 3.54200000000221e-06, 4.777999999996951e-06, 2.6660000000018613e-06, 2.985999999999961e-06, 3.0840000000004197e-06, 4.040999999999767e-06, 5.7229999999991454e-06, 3.665999999999392e-06, 5.806000000000561e-06, 4.903000000000546e-06, 2.651999999998822e-06, 4.416999999999616e-06, 4.666999999999866e-06], 'time': [0.017777319, 0.017780653, 0.017784681, 0.017789667, 0.017793764, 0.017799736, 0.017804597, 0.017807639, 0.017810042, 0.017815556, 0.017818236, 0.017823708, 0.017828708, 0.017834042, 0.017837819, 0.017841583, 0.017845083, 0.017849819, 0.017854306, 0.017859958, 0.017862986, 0.017868083, 0.017871319, 0.017875042, 0.017878472, 0.017881125, 0.017886597, 0.017890875, 0.017895042, 0.017900514, 0.01790375, 0.017909472, 0.017913875, 0.01791725, 0.017922014, 0.017927764, 0.017933972, 0.017937514, 0.017942292, 0.017944958, 0.017947944, 0.017951028, 0.017955069, 0.017960792, 0.017964458, 0.017970264, 0.017975167, 0.017977819, 0.017982236, 0.017986903], 'source}</msg>
<status status="PASS" starttime="20201110 08:33:48.354" endtime="20201110 08:33:48.356"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.350" endtime="20201110 08:33:48.357"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:48.362" level="INFO">${RESULT} = [{'time': 0.017780653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3340000000006698e-06, 'source_diff': 3.3340000000006698e-06}, {'time': 0.017789667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:48.358" endtime="20201110 08:33:48.363"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:48.374" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [3.3340000000006698e-06, 4.985999999998492e-06, 5.971999999999922e-06, 3.04200000000171e-06, 5.5139999999981315e-06, 5.471999999999422e-06, 5.33400000000267e-06, 3.763999999999851e-06,...</msg>
<status status="PASS" starttime="20201110 08:33:48.364" endtime="20201110 08:33:48.375"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:48.382" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:48.381" endtime="20201110 08:33:48.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:48.385" level="INFO">VALUE: [3.3340000000006698e-06, 4.985999999998492e-06, 5.971999999999922e-06, 3.04200000000171e-06, 5.5139999999981315e-06, 5.471999999999422e-06, 5.33400000000267e-06, 3.763999999999851e-06, 4.735999999998242e-06, 5.651999999998353e-06, 5.096999999999047e-06, 3.7230000000006147e-06, 2.653000000001765e-06, 4.277999999999921e-06, 5.471999999999422e-06, 5.721999999999672e-06, 3.374999999999906e-06, 5.749999999998812e-06, 3.54200000000221e-06, 2.6660000000018613e-06, 3.0840000000004197e-06, 5.7229999999991454e-06, 5.806000000000561e-06, 2.651999999998822e-06, 4.666999999999866e-06]</msg>
<status status="PASS" starttime="20201110 08:33:48.383" endtime="20201110 08:33:48.386"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.377" endtime="20201110 08:33:48.388"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.392" endtime="20201110 08:33:48.393"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:48.395" endtime="20201110 08:33:48.415"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.394" endtime="20201110 08:33:48.415"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.388" endtime="20201110 08:33:48.416"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.011" endtime="20201110 08:33:48.416"></status>
</kw>
<msg timestamp="20201110 08:33:48.416" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.424" endtime="20201110 08:33:48.438"></status>
</kw>
<msg timestamp="20201110 08:33:48.439" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:48.422" endtime="20201110 08:33:48.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:48.441" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:48.440" endtime="20201110 08:33:48.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.442" endtime="20201110 08:33:48.444"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.420" endtime="20201110 08:33:48.444"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.418" endtime="20201110 08:33:48.445"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.452" endtime="20201110 08:33:48.720"></status>
</kw>
<msg timestamp="20201110 08:33:48.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017591667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017594514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:48.451" endtime="20201110 08:33:48.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:48.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017591667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017594514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:48.723" endtime="20201110 08:33:48.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.728" endtime="20201110 08:33:48.730"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.447" endtime="20201110 08:33:48.730"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.445" endtime="20201110 08:33:48.731"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:48.735" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:48.734" endtime="20201110 08:33:48.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:48.738" level="INFO">VALUE: [{'time': 0.017591667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017594514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.847000000000266e-06, 'source_diff': 2.847000000000266e-06}, {'time': 0.017597986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.472000000000891e-06, 'source_diff': 3.472000000000891e-06}, {'time': 0.017602653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.666999999999866e-06, 'source_diff': 4.666999999999866e-06}, {'time': 0.017605458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8050000000015562e-06, 'source_diff': 2.8050000000015562e-06}, {'time': 0.017610264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.805999999999561e-06, 'source_diff': 4.805999999999561e-06}, {'time': 0.017613208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.944000000001251e-06, 'source_diff': 2.944000000001251e-06}, {'time': 0.017615736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5279999999981706e-06, 'source_diff': 2.5279999999981706e-06}, {'time': 0.017618722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.985999999999961e-06, 'source_diff': 2.985999999999961e-06}, {'time': 0.017622944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.222000000001641e-06, 'source_diff': 4.222000000001641e-06}, {'time': 0.017627861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.917000000000116e-06, 'source_diff': 4.917000000000116e-06}, {'time': 0.0176305, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6389999999987257e-06, 'source_diff': 2.6389999999987257e-06}, {'time': 0.017634611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.111000000001086e-06, 'source_diff': 4.111000000001086e-06}, {'time': 0.017639736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.1249999999981866e-06, 'source_diff': 5.1249999999981866e-06}, {'time': 0.017644819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.082999999999477e-06, 'source_diff': 5.082999999999477e-06}, {'time': 0.017649486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.666999999999866e-06, 'source_diff': 4.666999999999866e-06}, {'time': 0.017653472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.986000000000961e-06, 'source_diff': 3.986000000000961e-06}, {'time': 0.017658875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.403000000001046e-06, 'source_diff': 5.403000000001046e-06}, {'time': 0.017664722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.017668194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.472000000000891e-06, 'source_diff': 3.472000000000891e-06}, {'time': 0.017671667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4729999999968952e-06, 'source_diff': 3.4729999999968952e-06}, {'time': 0.017677403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.736000000002711e-06, 'source_diff': 5.736000000002711e-06}, {'time': 0.017683375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.017689361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.017695569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.208000000000602e-06, 'source_diff': 6.208000000000602e-06}, {'time': 0.017699611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.041999999999241e-06, 'source_diff': 4.041999999999241e-06}, {'time': 0.017702458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.847000000000266e-06, 'source_diff': 2.847000000000266e-06}, {'time': 0.017706681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.222999999997645e-06, 'source_diff': 4.222999999997645e-06}, {'time': 0.017712042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.361000000002336e-06, 'source_diff': 5.361000000002336e-06}, {'time': 0.017714514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.471999999999891e-06, 'source_diff': 2.471999999999891e-06}, {'time': 0.017719806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.292000000000491e-06, 'source_diff': 5.292000000000491e-06}, {'time': 0.017723986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.179999999999462e-06, 'source_diff': 4.179999999999462e-06}, {'time': 0.017729222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.235999999998742e-06, 'source_diff': 5.235999999998742e-06}, {'time': 0.017735292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.070000000000381e-06, 'source_diff': 6.070000000000381e-06}, {'time': 0.017738653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.361000000000336e-06, 'source_diff': 3.361000000000336e-06}, {'time': 0.017741875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.222000000000641e-06, 'source_diff': 3.222000000000641e-06}, {'time': 0.017745778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.902999999999546e-06, 'source_diff': 3.902999999999546e-06}, {'time': 0.017751778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.017756292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.514000000000601e-06, 'source_diff': 4.514000000000601e-06}, {'time': 0.017759778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.486000000000461e-06, 'source_diff': 3.486000000000461e-06}, {'time': 0.017765611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.833000000000227e-06, 'source_diff': 5.833000000000227e-06}, {'time': 0.017768097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.485999999999461e-06, 'source_diff': 2.485999999999461e-06}, {'time': 0.017771708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.611000000000586e-06, 'source_diff': 3.611000000000586e-06}, {'time': 0.017775986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.277999999999921e-06, 'source_diff': 4.277999999999921e-06}, {'time': 0.017778528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5419999999977405e-06, 'source_diff': 2.5419999999977405e-06}, {'time': 0.017781306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.77800000000189e-06, 'source_diff': 2.77800000000189e-06}, {'time': 0.017785778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.471999999998422e-06, 'source_diff': 4.471999999998422e-06}, {'time': 0.0177905, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.722000000002141e-06, 'source_diff': 4.722000000002141e-06}, {'time': 0.017793236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.735999999999711e-06, 'source_diff': 2.735999999999711e-06}, {'time': 0.017796514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2779999999989207e-06, 'source_diff': 3.2779999999989207e-06}]</msg>
<status status="PASS" starttime="20201110 08:33:48.736" endtime="20201110 08:33:48.739"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.731" endtime="20201110 08:33:48.740"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:48.754" level="INFO">${debug-compressed} = {'source_diff': [0, 2.847000000000266e-06, 3.472000000000891e-06, 4.666999999999866e-06, 2.8050000000015562e-06, 4.805999999999561e-06, 2.944000000001251e-06, 2.5279999999981706e-06, 2.985999999999961...</msg>
<status status="PASS" starttime="20201110 08:33:48.741" endtime="20201110 08:33:48.754"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:48.758" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:48.757" endtime="20201110 08:33:48.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:48.763" level="INFO">VALUE: {'source_diff': [0, 2.847000000000266e-06, 3.472000000000891e-06, 4.666999999999866e-06, 2.8050000000015562e-06, 4.805999999999561e-06, 2.944000000001251e-06, 2.5279999999981706e-06, 2.985999999999961e-06, 4.222000000001641e-06, 4.917000000000116e-06, 2.6389999999987257e-06, 4.111000000001086e-06, 5.1249999999981866e-06, 5.082999999999477e-06, 4.666999999999866e-06, 3.986000000000961e-06, 5.403000000001046e-06, 5.846999999999797e-06, 3.472000000000891e-06, 3.4729999999968952e-06, 5.736000000002711e-06, 5.971999999999922e-06, 5.985999999999492e-06, 6.208000000000602e-06, 4.041999999999241e-06, 2.847000000000266e-06, 4.222999999997645e-06, 5.361000000002336e-06, 2.471999999999891e-06, 5.292000000000491e-06, 4.179999999999462e-06, 5.235999999998742e-06, 6.070000000000381e-06, 3.361000000000336e-06, 3.222000000000641e-06, 3.902999999999546e-06, 5.999999999999062e-06, 4.514000000000601e-06, 3.486000000000461e-06, 5.833000000000227e-06, 2.485999999999461e-06, 3.611000000000586e-06, 4.277999999999921e-06, 2.5419999999977405e-06, 2.77800000000189e-06, 4.471999999998422e-06, 4.722000000002141e-06, 2.735999999999711e-06, 3.2779999999989207e-06], 'eventdiff': [0, 2.847000000000266e-06, 3.472000000000891e-06, 4.666999999999866e-06, 2.8050000000015562e-06, 4.805999999999561e-06, 2.944000000001251e-06, 2.5279999999981706e-06, 2.985999999999961e-06, 4.222000000001641e-06, 4.917000000000116e-06, 2.6389999999987257e-06, 4.111000000001086e-06, 5.1249999999981866e-06, 5.082999999999477e-06, 4.666999999999866e-06, 3.986000000000961e-06, 5.403000000001046e-06, 5.846999999999797e-06, 3.472000000000891e-06, 3.4729999999968952e-06, 5.736000000002711e-06, 5.971999999999922e-06, 5.985999999999492e-06, 6.208000000000602e-06, 4.041999999999241e-06, 2.847000000000266e-06, 4.222999999997645e-06, 5.361000000002336e-06, 2.471999999999891e-06, 5.292000000000491e-06, 4.179999999999462e-06, 5.235999999998742e-06, 6.070000000000381e-06, 3.361000000000336e-06, 3.222000000000641e-06, 3.902999999999546e-06, 5.999999999999062e-06, 4.514000000000601e-06, 3.486000000000461e-06, 5.833000000000227e-06, 2.485999999999461e-06, 3.611000000000586e-06, 4.277999999999921e-06, 2.5419999999977405e-06, 2.77800000000189e-06, 4.471999999998422e-06, 4.722000000002141e-06, 2.735999999999711e-06, 3.2779999999989207e-06], 'time': [0.017591667, 0.017594514, 0.017597986, 0.017602653, 0.017605458, 0.017610264, 0.017613208, 0.017615736, 0.017618722, 0.017622944, 0.017627861, 0.0176305, 0.017634611, 0.017639736, 0.017644819, 0.017649486, 0.017653472, 0.017658875, 0.017664722, 0.017668194, 0.017671667, 0.017677403, 0.017683375, 0.017689361, 0.017695569, 0.017699611, 0.017702458, 0.017706681, 0.017712042, 0.017714514, 0.017719806, 0.017723986, 0.017729222, 0.017735292, 0.017738653, 0.017741875, 0.017745778, 0.017751778, 0.017756292, 0.017759778, 0.017765611, 0.017768097, 0.017771708, 0.017775986, 0.017778528, 0.017781306, 0.017785778, 0.0177905, 0.017793236, 0.017796514], 'source}</msg>
<status status="PASS" starttime="20201110 08:33:48.760" endtime="20201110 08:33:48.764"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.755" endtime="20201110 08:33:48.765"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:48.768" level="INFO">${RESULT} = [{'time': 0.017594514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.847000000000266e-06, 'source_diff': 2.847000000000266e-06}, {'time': 0.017602653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:48.765" endtime="20201110 08:33:48.768"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:48.776" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [2.847000000000266e-06, 4.666999999999866e-06, 4.805999999999561e-06, 2.5279999999981706e-06, 4.222000000001641e-06, 2.6389999999987257e-06, 5.1249999999981866e-06, 4.666999999999866e-...</msg>
<status status="PASS" starttime="20201110 08:33:48.769" endtime="20201110 08:33:48.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:48.780" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:48.779" endtime="20201110 08:33:48.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:48.783" level="INFO">VALUE: [2.847000000000266e-06, 4.666999999999866e-06, 4.805999999999561e-06, 2.5279999999981706e-06, 4.222000000001641e-06, 2.6389999999987257e-06, 5.1249999999981866e-06, 4.666999999999866e-06, 5.403000000001046e-06, 3.472000000000891e-06, 5.736000000002711e-06, 5.985999999999492e-06, 4.041999999999241e-06, 4.222999999997645e-06, 2.471999999999891e-06, 4.179999999999462e-06, 6.070000000000381e-06, 3.222000000000641e-06, 5.999999999999062e-06, 3.486000000000461e-06, 2.485999999999461e-06, 4.277999999999921e-06, 2.77800000000189e-06, 4.722000000002141e-06, 3.2779999999989207e-06]</msg>
<status status="PASS" starttime="20201110 08:33:48.782" endtime="20201110 08:33:48.783"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.777" endtime="20201110 08:33:48.784"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.786" endtime="20201110 08:33:48.788"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:48.790" endtime="20201110 08:33:48.809"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.788" endtime="20201110 08:33:48.810"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.785" endtime="20201110 08:33:48.810"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.417" endtime="20201110 08:33:48.810"></status>
</kw>
<msg timestamp="20201110 08:33:48.811" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.818" endtime="20201110 08:33:48.833"></status>
</kw>
<msg timestamp="20201110 08:33:48.834" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:48.817" endtime="20201110 08:33:48.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:48.836" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:48.835" endtime="20201110 08:33:48.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.837" endtime="20201110 08:33:48.839"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.814" endtime="20201110 08:33:48.840"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.813" endtime="20201110 08:33:48.840"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.846" endtime="20201110 08:33:49.113"></status>
</kw>
<msg timestamp="20201110 08:33:49.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018312514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018318778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:48.845" endtime="20201110 08:33:49.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018312514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018318778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:49.115" endtime="20201110 08:33:49.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.121" endtime="20201110 08:33:49.122"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.842" endtime="20201110 08:33:49.123"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.841" endtime="20201110 08:33:49.123"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.127" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:49.126" endtime="20201110 08:33:49.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.131" level="INFO">VALUE: [{'time': 0.018312514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018318778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.264000000002351e-06, 'source_diff': 6.264000000002351e-06}, {'time': 0.018322819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.040999999999767e-06, 'source_diff': 4.040999999999767e-06}, {'time': 0.018326431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6120000000000596e-06, 'source_diff': 3.6120000000000596e-06}, {'time': 0.018331528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.096999999999047e-06, 'source_diff': 5.096999999999047e-06}, {'time': 0.018334, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.471999999999891e-06, 'source_diff': 2.471999999999891e-06}, {'time': 0.018339222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.221999999999172e-06, 'source_diff': 5.221999999999172e-06}, {'time': 0.018343764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.541999999999741e-06, 'source_diff': 4.541999999999741e-06}, {'time': 0.018348861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.097000000002516e-06, 'source_diff': 5.097000000002516e-06}, {'time': 0.018353458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.596999999998547e-06, 'source_diff': 4.596999999998547e-06}, {'time': 0.018357014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.55600000000178e-06, 'source_diff': 3.55600000000178e-06}, {'time': 0.018359486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.471999999999891e-06, 'source_diff': 2.471999999999891e-06}, {'time': 0.018362653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.1669999999983656e-06, 'source_diff': 3.1669999999983656e-06}, {'time': 0.018366417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.763999999999851e-06, 'source_diff': 3.763999999999851e-06}, {'time': 0.018370722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.304999999999587e-06, 'source_diff': 4.304999999999587e-06}, {'time': 0.018375319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.597000000002016e-06, 'source_diff': 4.597000000002016e-06}, {'time': 0.018378042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7229999999996146e-06, 'source_diff': 2.7229999999996146e-06}, {'time': 0.018383319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.276999999997978e-06, 'source_diff': 5.276999999997978e-06}, {'time': 0.018388681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.36200000000181e-06, 'source_diff': 5.36200000000181e-06}, {'time': 0.018391958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.276999999999447e-06, 'source_diff': 3.276999999999447e-06}, {'time': 0.018398194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.235999999999742e-06, 'source_diff': 6.235999999999742e-06}, {'time': 0.018404097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.903000000001546e-06, 'source_diff': 5.903000000001546e-06}, {'time': 0.018408847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7499999999978115e-06, 'source_diff': 4.7499999999978115e-06}, {'time': 0.018414486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.639000000001726e-06, 'source_diff': 5.639000000001726e-06}, {'time': 0.018419097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.610999999998117e-06, 'source_diff': 4.610999999998117e-06}, {'time': 0.018424014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.917000000000116e-06, 'source_diff': 4.917000000000116e-06}, {'time': 0.018429986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.018434222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.236000000001211e-06, 'source_diff': 4.236000000001211e-06}, {'time': 0.018438764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.541999999999741e-06, 'source_diff': 4.541999999999741e-06}, {'time': 0.018441667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9029999999985456e-06, 'source_diff': 2.9029999999985456e-06}, {'time': 0.018445875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.208000000002071e-06, 'source_diff': 4.208000000002071e-06}, {'time': 0.018450292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.416999999999616e-06, 'source_diff': 4.416999999999616e-06}, {'time': 0.018455681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.389000000001476e-06, 'source_diff': 5.389000000001476e-06}, {'time': 0.018458125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4439999999972817e-06, 'source_diff': 2.4439999999972817e-06}, {'time': 0.018460472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.346999999999766e-06, 'source_diff': 2.346999999999766e-06}, {'time': 0.018465014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.541999999999741e-06, 'source_diff': 4.541999999999741e-06}, {'time': 0.018468806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.79200000000246e-06, 'source_diff': 3.79200000000246e-06}, {'time': 0.018472708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.902000000000072e-06, 'source_diff': 3.902000000000072e-06}, {'time': 0.018476694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.9859999999974915e-06, 'source_diff': 3.9859999999974915e-06}, {'time': 0.018481847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.153000000000796e-06, 'source_diff': 5.153000000000796e-06}, {'time': 0.018486139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.291999999999491e-06, 'source_diff': 4.291999999999491e-06}, {'time': 0.018491264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.125000000001656e-06, 'source_diff': 5.125000000001656e-06}, {'time': 0.018495528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.264000000000351e-06, 'source_diff': 4.264000000000351e-06}, {'time': 0.018499875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.346999999998297e-06, 'source_diff': 4.346999999998297e-06}, {'time': 0.018504472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.597000000002016e-06, 'source_diff': 4.597000000002016e-06}, {'time': 0.018507, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5279999999981706e-06, 'source_diff': 2.5279999999981706e-06}, {'time': 0.018511306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.30600000000253e-06, 'source_diff': 4.30600000000253e-06}, {'time': 0.018517403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.097000000000047e-06, 'source_diff': 6.097000000000047e-06}, {'time': 0.018521889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.485999999997992e-06, 'source_diff': 4.485999999997992e-06}, {'time': 0.018527306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.417000000000616e-06, 'source_diff': 5.417000000000616e-06}]</msg>
<status status="PASS" starttime="20201110 08:33:49.128" endtime="20201110 08:33:49.139"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.124" endtime="20201110 08:33:49.139"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:49.153" level="INFO">${debug-compressed} = {'source_diff': [0, 6.264000000002351e-06, 4.040999999999767e-06, 3.6120000000000596e-06, 5.096999999999047e-06, 2.471999999999891e-06, 5.221999999999172e-06, 4.541999999999741e-06, 5.097000000002516e...</msg>
<status status="PASS" starttime="20201110 08:33:49.140" endtime="20201110 08:33:49.154"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.157" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:49.156" endtime="20201110 08:33:49.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.160" level="INFO">VALUE: {'source_diff': [0, 6.264000000002351e-06, 4.040999999999767e-06, 3.6120000000000596e-06, 5.096999999999047e-06, 2.471999999999891e-06, 5.221999999999172e-06, 4.541999999999741e-06, 5.097000000002516e-06, 4.596999999998547e-06, 3.55600000000178e-06, 2.471999999999891e-06, 3.1669999999983656e-06, 3.763999999999851e-06, 4.304999999999587e-06, 4.597000000002016e-06, 2.7229999999996146e-06, 5.276999999997978e-06, 5.36200000000181e-06, 3.276999999999447e-06, 6.235999999999742e-06, 5.903000000001546e-06, 4.7499999999978115e-06, 5.639000000001726e-06, 4.610999999998117e-06, 4.917000000000116e-06, 5.971999999999922e-06, 4.236000000001211e-06, 4.541999999999741e-06, 2.9029999999985456e-06, 4.208000000002071e-06, 4.416999999999616e-06, 5.389000000001476e-06, 2.4439999999972817e-06, 2.346999999999766e-06, 4.541999999999741e-06, 3.79200000000246e-06, 3.902000000000072e-06, 3.9859999999974915e-06, 5.153000000000796e-06, 4.291999999999491e-06, 5.125000000001656e-06, 4.264000000000351e-06, 4.346999999998297e-06, 4.597000000002016e-06, 2.5279999999981706e-06, 4.30600000000253e-06, 6.097000000000047e-06, 4.485999999997992e-06, 5.417000000000616e-06], 'eventdiff': [0, 6.264000000002351e-06, 4.040999999999767e-06, 3.6120000000000596e-06, 5.096999999999047e-06, 2.471999999999891e-06, 5.221999999999172e-06, 4.541999999999741e-06, 5.097000000002516e-06, 4.596999999998547e-06, 3.55600000000178e-06, 2.471999999999891e-06, 3.1669999999983656e-06, 3.763999999999851e-06, 4.304999999999587e-06, 4.597000000002016e-06, 2.7229999999996146e-06, 5.276999999997978e-06, 5.36200000000181e-06, 3.276999999999447e-06, 6.235999999999742e-06, 5.903000000001546e-06, 4.7499999999978115e-06, 5.639000000001726e-06, 4.610999999998117e-06, 4.917000000000116e-06, 5.971999999999922e-06, 4.236000000001211e-06, 4.541999999999741e-06, 2.9029999999985456e-06, 4.208000000002071e-06, 4.416999999999616e-06, 5.389000000001476e-06, 2.4439999999972817e-06, 2.346999999999766e-06, 4.541999999999741e-06, 3.79200000000246e-06, 3.902000000000072e-06, 3.9859999999974915e-06, 5.153000000000796e-06, 4.291999999999491e-06, 5.125000000001656e-06, 4.264000000000351e-06, 4.346999999998297e-06, 4.597000000002016e-06, 2.5279999999981706e-06, 4.30600000000253e-06, 6.097000000000047e-06, 4.485999999997992e-06, 5.417000000000616e-06], 'time': [0.018312514, 0.018318778, 0.018322819, 0.018326431, 0.018331528, 0.018334, 0.018339222, 0.018343764, 0.018348861, 0.018353458, 0.018357014, 0.018359486, 0.018362653, 0.018366417, 0.018370722, 0.018375319, 0.018378042, 0.018383319, 0.018388681, 0.018391958, 0.018398194, 0.018404097, 0.018408847, 0.018414486, 0.018419097, 0.018424014, 0.018429986, 0.018434222, 0.018438764, 0.018441667, 0.018445875, 0.018450292, 0.018455681, 0.018458125, 0.018460472, 0.018465014, 0.018468806, 0.018472708, 0.018476694, 0.018481847, 0.018486139, 0.018491264, 0.018495528, 0.018499875, 0.018504472, 0.018507, 0.018511306, 0.018517403, 0.018521889, 0.018527306], 'source}</msg>
<status status="PASS" starttime="20201110 08:33:49.158" endtime="20201110 08:33:49.161"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.154" endtime="20201110 08:33:49.161"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:49.165" level="INFO">${RESULT} = [{'time': 0.018318778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.264000000002351e-06, 'source_diff': 6.264000000002351e-06}, {'time': 0.018326431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:49.162" endtime="20201110 08:33:49.165"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:49.173" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [6.264000000002351e-06, 3.6120000000000596e-06, 2.471999999999891e-06, 4.541999999999741e-06, 4.596999999998547e-06, 2.471999999999891e-06, 3.763999999999851e-06, 4.597000000002016e-06...</msg>
<status status="PASS" starttime="20201110 08:33:49.166" endtime="20201110 08:33:49.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.177" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:49.176" endtime="20201110 08:33:49.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.179" level="INFO">VALUE: [6.264000000002351e-06, 3.6120000000000596e-06, 2.471999999999891e-06, 4.541999999999741e-06, 4.596999999998547e-06, 2.471999999999891e-06, 3.763999999999851e-06, 4.597000000002016e-06, 5.276999999997978e-06, 3.276999999999447e-06, 5.903000000001546e-06, 5.639000000001726e-06, 4.917000000000116e-06, 4.236000000001211e-06, 2.9029999999985456e-06, 4.416999999999616e-06, 2.4439999999972817e-06, 4.541999999999741e-06, 3.902000000000072e-06, 5.153000000000796e-06, 5.125000000001656e-06, 4.346999999998297e-06, 2.5279999999981706e-06, 6.097000000000047e-06, 5.417000000000616e-06]</msg>
<status status="PASS" starttime="20201110 08:33:49.178" endtime="20201110 08:33:49.180"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.174" endtime="20201110 08:33:49.181"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.183" endtime="20201110 08:33:49.184"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:49.186" endtime="20201110 08:33:49.206"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.185" endtime="20201110 08:33:49.206"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.181" endtime="20201110 08:33:49.207"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.811" endtime="20201110 08:33:49.207"></status>
</kw>
<msg timestamp="20201110 08:33:49.207" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.216" endtime="20201110 08:33:49.230"></status>
</kw>
<msg timestamp="20201110 08:33:49.230" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:49.214" endtime="20201110 08:33:49.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.233" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:49.231" endtime="20201110 08:33:49.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.234" endtime="20201110 08:33:49.236"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.211" endtime="20201110 08:33:49.236"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.209" endtime="20201110 08:33:49.237"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.243" endtime="20201110 08:33:49.508"></status>
</kw>
<msg timestamp="20201110 08:33:49.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018361944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018365806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:49.242" endtime="20201110 08:33:49.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018361944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018365806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:49.510" endtime="20201110 08:33:49.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.516" endtime="20201110 08:33:49.518"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.239" endtime="20201110 08:33:49.518"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.237" endtime="20201110 08:33:49.518"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.522" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:49.521" endtime="20201110 08:33:49.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.526" level="INFO">VALUE: [{'time': 0.018361944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018365806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.86199999999684e-06, 'source_diff': 3.86199999999684e-06}, {'time': 0.018370028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.222000000001641e-06, 'source_diff': 4.222000000001641e-06}, {'time': 0.018376319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.290999999998548e-06, 'source_diff': 6.290999999998548e-06}, {'time': 0.018380111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.79200000000246e-06, 'source_diff': 3.79200000000246e-06}, {'time': 0.018383958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.846999999997797e-06, 'source_diff': 3.846999999997797e-06}, {'time': 0.018386486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.52800000000164e-06, 'source_diff': 2.52800000000164e-06}, {'time': 0.018391278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.791999999999991e-06, 'source_diff': 4.791999999999991e-06}, {'time': 0.018397431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.1529999999983265e-06, 'source_diff': 6.1529999999983265e-06}, {'time': 0.018402556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.125000000001656e-06, 'source_diff': 5.125000000001656e-06}, {'time': 0.018406764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.207999999998602e-06, 'source_diff': 4.207999999998602e-06}, {'time': 0.018411986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.222000000002641e-06, 'source_diff': 5.222000000002641e-06}, {'time': 0.018415583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5969999999975466e-06, 'source_diff': 3.5969999999975466e-06}, {'time': 0.018421833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.018424931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0979999999999897e-06, 'source_diff': 3.0979999999999897e-06}, {'time': 0.018427708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7770000000024164e-06, 'source_diff': 2.7770000000024164e-06}, {'time': 0.018430486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7779999999984206e-06, 'source_diff': 2.7779999999984206e-06}, {'time': 0.018433542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.05600000000128e-06, 'source_diff': 3.05600000000128e-06}, {'time': 0.018436819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.276999999999447e-06, 'source_diff': 3.276999999999447e-06}, {'time': 0.018440347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5279999999991707e-06, 'source_diff': 3.5279999999991707e-06}, {'time': 0.018444389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.041999999999241e-06, 'source_diff': 4.041999999999241e-06}, {'time': 0.018450375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.986000000002961e-06, 'source_diff': 5.986000000002961e-06}, {'time': 0.018452903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5279999999981706e-06, 'source_diff': 2.5279999999981706e-06}, {'time': 0.018456889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.986000000000961e-06, 'source_diff': 3.986000000000961e-06}, {'time': 0.018462736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.018467833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.096999999999047e-06, 'source_diff': 5.096999999999047e-06}, {'time': 0.018473181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.34800000000224e-06, 'source_diff': 5.34800000000224e-06}, {'time': 0.018476778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5969999999975466e-06, 'source_diff': 3.5969999999975466e-06}, {'time': 0.018479319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5410000000017363e-06, 'source_diff': 2.5410000000017363e-06}, {'time': 0.018485417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0979999999995205e-06, 'source_diff': 6.0979999999995205e-06}, {'time': 0.018491389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.018496083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.693999999999532e-06, 'source_diff': 4.693999999999532e-06}, {'time': 0.018499472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.3889999999994758e-06, 'source_diff': 3.3889999999994758e-06}, {'time': 0.018502472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.999999999999531e-06, 'source_diff': 2.999999999999531e-06}, {'time': 0.018505389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.917000000001585e-06, 'source_diff': 2.917000000001585e-06}, {'time': 0.018510028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.018515875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.018518722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.847000000000266e-06, 'source_diff': 2.847000000000266e-06}, {'time': 0.018524139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.416999999997146e-06, 'source_diff': 5.416999999997146e-06}, {'time': 0.018530167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.028000000001671e-06, 'source_diff': 6.028000000001671e-06}, {'time': 0.018535708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.541000000001267e-06, 'source_diff': 5.541000000001267e-06}, {'time': 0.018540389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.680999999999436e-06, 'source_diff': 4.680999999999436e-06}, {'time': 0.018545542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.153000000000796e-06, 'source_diff': 5.153000000000796e-06}, {'time': 0.018548778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2359999999967415e-06, 'source_diff': 3.2359999999967415e-06}, {'time': 0.018553111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.333000000002196e-06, 'source_diff': 4.333000000002196e-06}, {'time': 0.018559222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.110999999999617e-06, 'source_diff': 6.110999999999617e-06}, {'time': 0.018563125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.902999999999546e-06, 'source_diff': 3.902999999999546e-06}, {'time': 0.018568042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.917000000000116e-06, 'source_diff': 4.917000000000116e-06}, {'time': 0.018570639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.597000000000016e-06, 'source_diff': 2.597000000000016e-06}, {'time': 0.018576694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.055000000001337e-06, 'source_diff': 6.055000000001337e-06}]</msg>
<status status="PASS" starttime="20201110 08:33:49.523" endtime="20201110 08:33:49.527"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.519" endtime="20201110 08:33:49.528"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:49.542" level="INFO">${debug-compressed} = {'source_diff': [0, 3.86199999999684e-06, 4.222000000001641e-06, 6.290999999998548e-06, 3.79200000000246e-06, 3.846999999997797e-06, 2.52800000000164e-06, 4.791999999999991e-06, 6.1529999999983265e-06...</msg>
<status status="PASS" starttime="20201110 08:33:49.528" endtime="20201110 08:33:49.542"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.546" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:49.545" endtime="20201110 08:33:49.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.549" level="INFO">VALUE: {'source_diff': [0, 3.86199999999684e-06, 4.222000000001641e-06, 6.290999999998548e-06, 3.79200000000246e-06, 3.846999999997797e-06, 2.52800000000164e-06, 4.791999999999991e-06, 6.1529999999983265e-06, 5.125000000001656e-06, 4.207999999998602e-06, 5.222000000002641e-06, 3.5969999999975466e-06, 6.249999999999312e-06, 3.0979999999999897e-06, 2.7770000000024164e-06, 2.7779999999984206e-06, 3.05600000000128e-06, 3.276999999999447e-06, 3.5279999999991707e-06, 4.041999999999241e-06, 5.986000000002961e-06, 2.5279999999981706e-06, 3.986000000000961e-06, 5.846999999999797e-06, 5.096999999999047e-06, 5.34800000000224e-06, 3.5969999999975466e-06, 2.5410000000017363e-06, 6.0979999999995205e-06, 5.971999999999922e-06, 4.693999999999532e-06, 3.3889999999994758e-06, 2.999999999999531e-06, 2.917000000001585e-06, 4.639000000000726e-06, 5.846999999999797e-06, 2.847000000000266e-06, 5.416999999997146e-06, 6.028000000001671e-06, 5.541000000001267e-06, 4.680999999999436e-06, 5.153000000000796e-06, 3.2359999999967415e-06, 4.333000000002196e-06, 6.110999999999617e-06, 3.902999999999546e-06, 4.917000000000116e-06, 2.597000000000016e-06, 6.055000000001337e-06], 'eventdiff': [0, 3.86199999999684e-06, 4.222000000001641e-06, 6.290999999998548e-06, 3.79200000000246e-06, 3.846999999997797e-06, 2.52800000000164e-06, 4.791999999999991e-06, 6.1529999999983265e-06, 5.125000000001656e-06, 4.207999999998602e-06, 5.222000000002641e-06, 3.5969999999975466e-06, 6.249999999999312e-06, 3.0979999999999897e-06, 2.7770000000024164e-06, 2.7779999999984206e-06, 3.05600000000128e-06, 3.276999999999447e-06, 3.5279999999991707e-06, 4.041999999999241e-06, 5.986000000002961e-06, 2.5279999999981706e-06, 3.986000000000961e-06, 5.846999999999797e-06, 5.096999999999047e-06, 5.34800000000224e-06, 3.5969999999975466e-06, 2.5410000000017363e-06, 6.0979999999995205e-06, 5.971999999999922e-06, 4.693999999999532e-06, 3.3889999999994758e-06, 2.999999999999531e-06, 2.917000000001585e-06, 4.639000000000726e-06, 5.846999999999797e-06, 2.847000000000266e-06, 5.416999999997146e-06, 6.028000000001671e-06, 5.541000000001267e-06, 4.680999999999436e-06, 5.153000000000796e-06, 3.2359999999967415e-06, 4.333000000002196e-06, 6.110999999999617e-06, 3.902999999999546e-06, 4.917000000000116e-06, 2.597000000000016e-06, 6.055000000001337e-06], 'time': [0.018361944, 0.018365806, 0.018370028, 0.018376319, 0.018380111, 0.018383958, 0.018386486, 0.018391278, 0.018397431, 0.018402556, 0.018406764, 0.018411986, 0.018415583, 0.018421833, 0.018424931, 0.018427708, 0.018430486, 0.018433542, 0.018436819, 0.018440347, 0.018444389, 0.018450375, 0.018452903, 0.018456889, 0.018462736, 0.018467833, 0.018473181, 0.018476778, 0.018479319, 0.018485417, 0.018491389, 0.018496083, 0.018499472, 0.018502472, 0.018505389, 0.018510028, 0.018515875, 0.018518722, 0.018524139, 0.018530167, 0.018535708, 0.018540389, 0.018545542, 0.018548778, 0.018553111, 0.018559222, 0.018563125, 0.018568042, 0.018570639, 0.018576694], 'source}</msg>
<status status="PASS" starttime="20201110 08:33:49.547" endtime="20201110 08:33:49.550"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.543" endtime="20201110 08:33:49.550"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:49.554" level="INFO">${RESULT} = [{'time': 0.018365806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.86199999999684e-06, 'source_diff': 3.86199999999684e-06}, {'time': 0.018376319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:33:49.551" endtime="20201110 08:33:49.554"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:49.562" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [3.86199999999684e-06, 6.290999999998548e-06, 3.846999999997797e-06, 4.791999999999991e-06, 5.125000000001656e-06, 5.222000000002641e-06, 6.249999999999312e-06, 2.7770000000024164e-06,...</msg>
<status status="PASS" starttime="20201110 08:33:49.555" endtime="20201110 08:33:49.562"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.566" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:49.565" endtime="20201110 08:33:49.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.568" level="INFO">VALUE: [3.86199999999684e-06, 6.290999999998548e-06, 3.846999999997797e-06, 4.791999999999991e-06, 5.125000000001656e-06, 5.222000000002641e-06, 6.249999999999312e-06, 2.7770000000024164e-06, 3.05600000000128e-06, 3.5279999999991707e-06, 5.986000000002961e-06, 3.986000000000961e-06, 5.096999999999047e-06, 3.5969999999975466e-06, 6.0979999999995205e-06, 4.693999999999532e-06, 2.999999999999531e-06, 4.639000000000726e-06, 2.847000000000266e-06, 6.028000000001671e-06, 4.680999999999436e-06, 3.2359999999967415e-06, 6.110999999999617e-06, 4.917000000000116e-06, 6.055000000001337e-06]</msg>
<status status="PASS" starttime="20201110 08:33:49.567" endtime="20201110 08:33:49.569"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.563" endtime="20201110 08:33:49.569"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.572" endtime="20201110 08:33:49.573"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:49.575" endtime="20201110 08:33:49.595"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.574" endtime="20201110 08:33:49.596"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.570" endtime="20201110 08:33:49.598"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.208" endtime="20201110 08:33:49.598"></status>
</kw>
<msg timestamp="20201110 08:33:49.599" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.613" endtime="20201110 08:33:49.628"></status>
</kw>
<msg timestamp="20201110 08:33:49.628" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:49.610" endtime="20201110 08:33:49.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.631" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:49.629" endtime="20201110 08:33:49.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.632" endtime="20201110 08:33:49.633"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.606" endtime="20201110 08:33:49.634"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.602" endtime="20201110 08:33:49.634"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.641" endtime="20201110 08:33:49.907"></status>
</kw>
<msg timestamp="20201110 08:33:49.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027157153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027159514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:49.639" endtime="20201110 08:33:49.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027157153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027159514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:49.910" endtime="20201110 08:33:49.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.916" endtime="20201110 08:33:49.917"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.637" endtime="20201110 08:33:49.918"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.635" endtime="20201110 08:33:49.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.922" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:49.921" endtime="20201110 08:33:49.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.926" level="INFO">VALUE: [{'time': 0.027157153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027159514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.360999999999336e-06, 'source_diff': 2.360999999999336e-06}, {'time': 0.027165792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.278000000001921e-06, 'source_diff': 6.278000000001921e-06}, {'time': 0.027169139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3469999999972966e-06, 'source_diff': 3.3469999999972966e-06}, {'time': 0.027174361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.222000000002641e-06, 'source_diff': 5.222000000002641e-06}, {'time': 0.027178903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.541999999999741e-06, 'source_diff': 4.541999999999741e-06}, {'time': 0.027182944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.040999999999767e-06, 'source_diff': 4.040999999999767e-06}, {'time': 0.027188667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7229999999991454e-06, 'source_diff': 5.7229999999991454e-06}, {'time': 0.027194722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.055000000001337e-06, 'source_diff': 6.055000000001337e-06}, {'time': 0.027200431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7089999999995755e-06, 'source_diff': 5.7089999999995755e-06}, {'time': 0.027203278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.847000000000266e-06, 'source_diff': 2.847000000000266e-06}, {'time': 0.027206375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.097000000000516e-06, 'source_diff': 3.097000000000516e-06}, {'time': 0.027210736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.360999999997867e-06, 'source_diff': 4.360999999997867e-06}, {'time': 0.027213722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.985999999999961e-06, 'source_diff': 2.985999999999961e-06}, {'time': 0.027218986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.264000000001351e-06, 'source_diff': 5.264000000001351e-06}, {'time': 0.027222542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5559999999983105e-06, 'source_diff': 3.5559999999983105e-06}, {'time': 0.027227875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.332999999999727e-06, 'source_diff': 5.332999999999727e-06}, {'time': 0.027233236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.361000000002336e-06, 'source_diff': 5.361000000002336e-06}, {'time': 0.027235681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4450000000002248e-06, 'source_diff': 2.4450000000002248e-06}, {'time': 0.027240556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.8749999999979365e-06, 'source_diff': 4.8749999999979365e-06}, {'time': 0.027245667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.111000000002086e-06, 'source_diff': 5.111000000002086e-06}, {'time': 0.027248569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.901999999999072e-06, 'source_diff': 2.901999999999072e-06}, {'time': 0.027251417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8479999999997396e-06, 'source_diff': 2.8479999999997396e-06}, {'time': 0.027254333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.915999999998642e-06, 'source_diff': 2.915999999998642e-06}, {'time': 0.027258125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.79200000000246e-06, 'source_diff': 3.79200000000246e-06}, {'time': 0.027262028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.902999999999546e-06, 'source_diff': 3.902999999999546e-06}, {'time': 0.027265389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.361000000000336e-06, 'source_diff': 3.361000000000336e-06}, {'time': 0.027267778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3889999999984757e-06, 'source_diff': 2.3889999999984757e-06}, {'time': 0.027273278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.500000000002031e-06, 'source_diff': 5.500000000002031e-06}, {'time': 0.027276, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.722000000000141e-06, 'source_diff': 2.722000000000141e-06}, {'time': 0.027281986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.027287569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.582999999999977e-06, 'source_diff': 5.582999999999977e-06}, {'time': 0.027293861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.291999999998021e-06, 'source_diff': 6.291999999998021e-06}, {'time': 0.027299542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.681000000000436e-06, 'source_diff': 5.681000000000436e-06}, {'time': 0.027305625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.083000000000477e-06, 'source_diff': 6.083000000000477e-06}, {'time': 0.027308472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.847000000000266e-06, 'source_diff': 2.847000000000266e-06}, {'time': 0.027311194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.722000000000141e-06, 'source_diff': 2.722000000000141e-06}, {'time': 0.027315861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.666999999999866e-06, 'source_diff': 4.666999999999866e-06}, {'time': 0.027318583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.722000000000141e-06, 'source_diff': 2.722000000000141e-06}, {'time': 0.02732125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6669999999978655e-06, 'source_diff': 2.6669999999978655e-06}, {'time': 0.027324417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.167000000001835e-06, 'source_diff': 3.167000000001835e-06}, {'time': 0.027328722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.304999999999587e-06, 'source_diff': 4.304999999999587e-06}, {'time': 0.027334486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.764000000001851e-06, 'source_diff': 5.764000000001851e-06}, {'time': 0.027338347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8609999999973665e-06, 'source_diff': 3.8609999999973665e-06}, {'time': 0.027341194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.847000000000266e-06, 'source_diff': 2.847000000000266e-06}, {'time': 0.027345444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.250000000000781e-06, 'source_diff': 4.250000000000781e-06}, {'time': 0.027348958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5139999999996008e-06, 'source_diff': 3.5139999999996008e-06}, {'time': 0.027353861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.903000000000546e-06, 'source_diff': 4.903000000000546e-06}, {'time': 0.027358278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416999999999616e-06, 'source_diff': 4.416999999999616e-06}, {'time': 0.027361819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.540999999999267e-06, 'source_diff': 3.540999999999267e-06}]</msg>
<status status="PASS" starttime="20201110 08:33:49.923" endtime="20201110 08:33:49.927"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.919" endtime="20201110 08:33:49.928"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:49.941" level="INFO">${debug-compressed} = {'source_diff': [0, 2.360999999999336e-06, 6.278000000001921e-06, 3.3469999999972966e-06, 5.222000000002641e-06, 4.541999999999741e-06, 4.040999999999767e-06, 5.7229999999991454e-06, 6.055000000001337...</msg>
<status status="PASS" starttime="20201110 08:33:49.928" endtime="20201110 08:33:49.942"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.945" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:49.944" endtime="20201110 08:33:49.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.948" level="INFO">VALUE: {'source_diff': [0, 2.360999999999336e-06, 6.278000000001921e-06, 3.3469999999972966e-06, 5.222000000002641e-06, 4.541999999999741e-06, 4.040999999999767e-06, 5.7229999999991454e-06, 6.055000000001337e-06, 5.7089999999995755e-06, 2.847000000000266e-06, 3.097000000000516e-06, 4.360999999997867e-06, 2.985999999999961e-06, 5.264000000001351e-06, 3.5559999999983105e-06, 5.332999999999727e-06, 5.361000000002336e-06, 2.4450000000002248e-06, 4.8749999999979365e-06, 5.111000000002086e-06, 2.901999999999072e-06, 2.8479999999997396e-06, 2.915999999998642e-06, 3.79200000000246e-06, 3.902999999999546e-06, 3.361000000000336e-06, 2.3889999999984757e-06, 5.500000000002031e-06, 2.722000000000141e-06, 5.985999999999492e-06, 5.582999999999977e-06, 6.291999999998021e-06, 5.681000000000436e-06, 6.083000000000477e-06, 2.847000000000266e-06, 2.722000000000141e-06, 4.666999999999866e-06, 2.722000000000141e-06, 2.6669999999978655e-06, 3.167000000001835e-06, 4.304999999999587e-06, 5.764000000001851e-06, 3.8609999999973665e-06, 2.847000000000266e-06, 4.250000000000781e-06, 3.5139999999996008e-06, 4.903000000000546e-06, 4.416999999999616e-06, 3.540999999999267e-06], 'eventdiff': [0, 2.360999999999336e-06, 6.278000000001921e-06, 3.3469999999972966e-06, 5.222000000002641e-06, 4.541999999999741e-06, 4.040999999999767e-06, 5.7229999999991454e-06, 6.055000000001337e-06, 5.7089999999995755e-06, 2.847000000000266e-06, 3.097000000000516e-06, 4.360999999997867e-06, 2.985999999999961e-06, 5.264000000001351e-06, 3.5559999999983105e-06, 5.332999999999727e-06, 5.361000000002336e-06, 2.4450000000002248e-06, 4.8749999999979365e-06, 5.111000000002086e-06, 2.901999999999072e-06, 2.8479999999997396e-06, 2.915999999998642e-06, 3.79200000000246e-06, 3.902999999999546e-06, 3.361000000000336e-06, 2.3889999999984757e-06, 5.500000000002031e-06, 2.722000000000141e-06, 5.985999999999492e-06, 5.582999999999977e-06, 6.291999999998021e-06, 5.681000000000436e-06, 6.083000000000477e-06, 2.847000000000266e-06, 2.722000000000141e-06, 4.666999999999866e-06, 2.722000000000141e-06, 2.6669999999978655e-06, 3.167000000001835e-06, 4.304999999999587e-06, 5.764000000001851e-06, 3.8609999999973665e-06, 2.847000000000266e-06, 4.250000000000781e-06, 3.5139999999996008e-06, 4.903000000000546e-06, 4.416999999999616e-06, 3.540999999999267e-06], 'time': [0.027157153, 0.027159514, 0.027165792, 0.027169139, 0.027174361, 0.027178903, 0.027182944, 0.027188667, 0.027194722, 0.027200431, 0.027203278, 0.027206375, 0.027210736, 0.027213722, 0.027218986, 0.027222542, 0.027227875, 0.027233236, 0.027235681, 0.027240556, 0.027245667, 0.027248569, 0.027251417, 0.027254333, 0.027258125, 0.027262028, 0.027265389, 0.027267778, 0.027273278, 0.027276, 0.027281986, 0.027287569, 0.027293861, 0.027299542, 0.027305625, 0.027308472, 0.027311194, 0.027315861, 0.027318583, 0.02732125, 0.027324417, 0.027328722, 0.027334486, 0.027338347, 0.027341194, 0.027345444, 0.027348958, 0.027353861, 0.027358278, 0.027361819], 'source}</msg>
<status status="PASS" starttime="20201110 08:33:49.946" endtime="20201110 08:33:49.949"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.942" endtime="20201110 08:33:49.949"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:49.953" level="INFO">${RESULT} = [{'time': 0.027159514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.360999999999336e-06, 'source_diff': 2.360999999999336e-06}, {'time': 0.027169139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:49.950" endtime="20201110 08:33:49.953"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:49.961" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [2.360999999999336e-06, 3.3469999999972966e-06, 4.541999999999741e-06, 5.7229999999991454e-06, 5.7089999999995755e-06, 3.097000000000516e-06, 2.985999999999961e-06, 3.5559999999983105e...</msg>
<status status="PASS" starttime="20201110 08:33:49.954" endtime="20201110 08:33:49.962"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.966" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:49.965" endtime="20201110 08:33:49.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.968" level="INFO">VALUE: [2.360999999999336e-06, 3.3469999999972966e-06, 4.541999999999741e-06, 5.7229999999991454e-06, 5.7089999999995755e-06, 3.097000000000516e-06, 2.985999999999961e-06, 3.5559999999983105e-06, 5.361000000002336e-06, 4.8749999999979365e-06, 2.901999999999072e-06, 2.915999999998642e-06, 3.902999999999546e-06, 2.3889999999984757e-06, 2.722000000000141e-06, 5.582999999999977e-06, 5.681000000000436e-06, 2.847000000000266e-06, 4.666999999999866e-06, 2.6669999999978655e-06, 4.304999999999587e-06, 3.8609999999973665e-06, 4.250000000000781e-06, 4.903000000000546e-06, 3.540999999999267e-06]</msg>
<status status="PASS" starttime="20201110 08:33:49.967" endtime="20201110 08:33:49.968"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.962" endtime="20201110 08:33:49.969"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.971" endtime="20201110 08:33:49.973"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:49.975" endtime="20201110 08:33:49.994"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.973" endtime="20201110 08:33:49.995"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.970" endtime="20201110 08:33:49.995"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.600" endtime="20201110 08:33:49.995"></status>
</kw>
<msg timestamp="20201110 08:33:49.996" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.003" endtime="20201110 08:33:50.018"></status>
</kw>
<msg timestamp="20201110 08:33:50.019" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:50.002" endtime="20201110 08:33:50.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:50.021" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:50.020" endtime="20201110 08:33:50.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.022" endtime="20201110 08:33:50.024"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.999" endtime="20201110 08:33:50.025"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.997" endtime="20201110 08:33:50.025"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.032" endtime="20201110 08:33:50.300"></status>
</kw>
<msg timestamp="20201110 08:33:50.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017602139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017605083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:50.030" endtime="20201110 08:33:50.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:50.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017602139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017605083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:50.303" endtime="20201110 08:33:50.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.308" endtime="20201110 08:33:50.310"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.028" endtime="20201110 08:33:50.311"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.026" endtime="20201110 08:33:50.311"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:50.315" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:50.314" endtime="20201110 08:33:50.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:50.318" level="INFO">VALUE: [{'time': 0.017602139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017605083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.944000000001251e-06, 'source_diff': 2.944000000001251e-06}, {'time': 0.017609028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.9449999999982555e-06, 'source_diff': 3.9449999999982555e-06}, {'time': 0.01761275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.722000000001141e-06, 'source_diff': 3.722000000001141e-06}, {'time': 0.017616903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.152999999999796e-06, 'source_diff': 4.152999999999796e-06}, {'time': 0.017619653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.749999999999281e-06, 'source_diff': 2.749999999999281e-06}, {'time': 0.017624736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.082999999999477e-06, 'source_diff': 5.082999999999477e-06}, {'time': 0.017628278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.54200000000221e-06, 'source_diff': 3.54200000000221e-06}, {'time': 0.017632708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.429999999999712e-06, 'source_diff': 4.429999999999712e-06}, {'time': 0.01763725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.541999999999741e-06, 'source_diff': 4.541999999999741e-06}, {'time': 0.017643514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2639999999988816e-06, 'source_diff': 6.2639999999988816e-06}, {'time': 0.017646236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.722000000000141e-06, 'source_diff': 2.722000000000141e-06}, {'time': 0.017650861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.625000000001156e-06, 'source_diff': 4.625000000001156e-06}, {'time': 0.017653625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7639999999988507e-06, 'source_diff': 2.7639999999988507e-06}, {'time': 0.017658042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416999999999616e-06, 'source_diff': 4.416999999999616e-06}, {'time': 0.017660389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.346999999999766e-06, 'source_diff': 2.346999999999766e-06}, {'time': 0.017663931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.54200000000221e-06, 'source_diff': 3.54200000000221e-06}, {'time': 0.017667167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.236000000000211e-06, 'source_diff': 3.236000000000211e-06}, {'time': 0.017671097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.929999999999212e-06, 'source_diff': 3.929999999999212e-06}, {'time': 0.017675361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.264000000000351e-06, 'source_diff': 4.264000000000351e-06}, {'time': 0.017680639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.278000000000921e-06, 'source_diff': 5.278000000000921e-06}, {'time': 0.017686514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.874999999998937e-06, 'source_diff': 5.874999999998937e-06}, {'time': 0.017689111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.597000000000016e-06, 'source_diff': 2.597000000000016e-06}, {'time': 0.017694694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.582999999999977e-06, 'source_diff': 5.582999999999977e-06}, {'time': 0.017699486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.791999999999991e-06, 'source_diff': 4.791999999999991e-06}, {'time': 0.017704958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.017707889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.931000000001155e-06, 'source_diff': 2.931000000001155e-06}, {'time': 0.017711194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.304999999998587e-06, 'source_diff': 3.304999999998587e-06}, {'time': 0.017714278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0840000000004197e-06, 'source_diff': 3.0840000000004197e-06}, {'time': 0.017716806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.52800000000164e-06, 'source_diff': 2.52800000000164e-06}, {'time': 0.017720792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.9859999999974915e-06, 'source_diff': 3.9859999999974915e-06}, {'time': 0.017726833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.041000000001767e-06, 'source_diff': 6.041000000001767e-06}, {'time': 0.017730264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4309999999981855e-06, 'source_diff': 3.4309999999981855e-06}, {'time': 0.017733389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.124999999999656e-06, 'source_diff': 3.124999999999656e-06}, {'time': 0.017738486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.097000000002516e-06, 'source_diff': 5.097000000002516e-06}, {'time': 0.017743917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.431000000000186e-06, 'source_diff': 5.431000000000186e-06}, {'time': 0.017747417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.500000000000031e-06, 'source_diff': 3.500000000000031e-06}, {'time': 0.017751097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.679999999998962e-06, 'source_diff': 3.679999999998962e-06}, {'time': 0.017754639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5419999999987406e-06, 'source_diff': 3.5419999999987406e-06}, {'time': 0.017760806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.167000000001366e-06, 'source_diff': 6.167000000001366e-06}, {'time': 0.017766444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.637999999998783e-06, 'source_diff': 5.637999999998783e-06}, {'time': 0.017771389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.9449999999992555e-06, 'source_diff': 4.9449999999992555e-06}, {'time': 0.017773764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.375000000002375e-06, 'source_diff': 2.375000000002375e-06}, {'time': 0.017776097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.333000000000196e-06, 'source_diff': 2.333000000000196e-06}, {'time': 0.017781125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.027999999997201e-06, 'source_diff': 5.027999999997201e-06}, {'time': 0.017786917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.792000000000991e-06, 'source_diff': 5.792000000000991e-06}, {'time': 0.017792583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.666000000001392e-06, 'source_diff': 5.666000000001392e-06}, {'time': 0.017797431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.84799999999827e-06, 'source_diff': 4.84799999999827e-06}, {'time': 0.017800597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.1660000000023614e-06, 'source_diff': 3.1660000000023614e-06}, {'time': 0.017805125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.528000000000171e-06, 'source_diff': 4.528000000000171e-06}]</msg>
<status status="PASS" starttime="20201110 08:33:50.316" endtime="20201110 08:33:50.319"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.312" endtime="20201110 08:33:50.320"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:50.334" level="INFO">${debug-compressed} = {'source_diff': [0, 2.944000000001251e-06, 3.9449999999982555e-06, 3.722000000001141e-06, 4.152999999999796e-06, 2.749999999999281e-06, 5.082999999999477e-06, 3.54200000000221e-06, 4.429999999999712e-...</msg>
<status status="PASS" starttime="20201110 08:33:50.321" endtime="20201110 08:33:50.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:50.338" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:50.337" endtime="20201110 08:33:50.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:50.342" level="INFO">VALUE: {'source_diff': [0, 2.944000000001251e-06, 3.9449999999982555e-06, 3.722000000001141e-06, 4.152999999999796e-06, 2.749999999999281e-06, 5.082999999999477e-06, 3.54200000000221e-06, 4.429999999999712e-06, 4.541999999999741e-06, 6.2639999999988816e-06, 2.722000000000141e-06, 4.625000000001156e-06, 2.7639999999988507e-06, 4.416999999999616e-06, 2.346999999999766e-06, 3.54200000000221e-06, 3.236000000000211e-06, 3.929999999999212e-06, 4.264000000000351e-06, 5.278000000000921e-06, 5.874999999998937e-06, 2.597000000000016e-06, 5.582999999999977e-06, 4.791999999999991e-06, 5.471999999999422e-06, 2.931000000001155e-06, 3.304999999998587e-06, 3.0840000000004197e-06, 2.52800000000164e-06, 3.9859999999974915e-06, 6.041000000001767e-06, 3.4309999999981855e-06, 3.124999999999656e-06, 5.097000000002516e-06, 5.431000000000186e-06, 3.500000000000031e-06, 3.679999999998962e-06, 3.5419999999987406e-06, 6.167000000001366e-06, 5.637999999998783e-06, 4.9449999999992555e-06, 2.375000000002375e-06, 2.333000000000196e-06, 5.027999999997201e-06, 5.792000000000991e-06, 5.666000000001392e-06, 4.84799999999827e-06, 3.1660000000023614e-06, 4.528000000000171e-06], 'eventdiff': [0, 2.944000000001251e-06, 3.9449999999982555e-06, 3.722000000001141e-06, 4.152999999999796e-06, 2.749999999999281e-06, 5.082999999999477e-06, 3.54200000000221e-06, 4.429999999999712e-06, 4.541999999999741e-06, 6.2639999999988816e-06, 2.722000000000141e-06, 4.625000000001156e-06, 2.7639999999988507e-06, 4.416999999999616e-06, 2.346999999999766e-06, 3.54200000000221e-06, 3.236000000000211e-06, 3.929999999999212e-06, 4.264000000000351e-06, 5.278000000000921e-06, 5.874999999998937e-06, 2.597000000000016e-06, 5.582999999999977e-06, 4.791999999999991e-06, 5.471999999999422e-06, 2.931000000001155e-06, 3.304999999998587e-06, 3.0840000000004197e-06, 2.52800000000164e-06, 3.9859999999974915e-06, 6.041000000001767e-06, 3.4309999999981855e-06, 3.124999999999656e-06, 5.097000000002516e-06, 5.431000000000186e-06, 3.500000000000031e-06, 3.679999999998962e-06, 3.5419999999987406e-06, 6.167000000001366e-06, 5.637999999998783e-06, 4.9449999999992555e-06, 2.375000000002375e-06, 2.333000000000196e-06, 5.027999999997201e-06, 5.792000000000991e-06, 5.666000000001392e-06, 4.84799999999827e-06, 3.1660000000023614e-06, 4.528000000000171e-06], 'time': [0.017602139, 0.017605083, 0.017609028, 0.01761275, 0.017616903, 0.017619653, 0.017624736, 0.017628278, 0.017632708, 0.01763725, 0.017643514, 0.017646236, 0.017650861, 0.017653625, 0.017658042, 0.017660389, 0.017663931, 0.017667167, 0.017671097, 0.017675361, 0.017680639, 0.017686514, 0.017689111, 0.017694694, 0.017699486, 0.017704958, 0.017707889, 0.017711194, 0.017714278, 0.017716806, 0.017720792, 0.017726833, 0.017730264, 0.017733389, 0.017738486, 0.017743917, 0.017747417, 0.017751097, 0.017754639, 0.017760806, 0.017766444, 0.017771389, 0.017773764, 0.017776097, 0.017781125, 0.017786917, 0.017792583, 0.017797431, 0.017800597, 0.017805125], 'source}</msg>
<status status="PASS" starttime="20201110 08:33:50.339" endtime="20201110 08:33:50.342"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.335" endtime="20201110 08:33:50.343"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:50.346" level="INFO">${RESULT} = [{'time': 0.017605083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.944000000001251e-06, 'source_diff': 2.944000000001251e-06}, {'time': 0.01761275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:33:50.343" endtime="20201110 08:33:50.346"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:50.354" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [2.944000000001251e-06, 3.722000000001141e-06, 2.749999999999281e-06, 3.54200000000221e-06, 4.541999999999741e-06, 2.722000000000141e-06, 2.7639999999988507e-06, 2.346999999999766e-06,...</msg>
<status status="PASS" starttime="20201110 08:33:50.347" endtime="20201110 08:33:50.354"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:50.358" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:50.357" endtime="20201110 08:33:50.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:50.361" level="INFO">VALUE: [2.944000000001251e-06, 3.722000000001141e-06, 2.749999999999281e-06, 3.54200000000221e-06, 4.541999999999741e-06, 2.722000000000141e-06, 2.7639999999988507e-06, 2.346999999999766e-06, 3.236000000000211e-06, 4.264000000000351e-06, 5.874999999998937e-06, 5.582999999999977e-06, 5.471999999999422e-06, 3.304999999998587e-06, 2.52800000000164e-06, 6.041000000001767e-06, 3.124999999999656e-06, 5.431000000000186e-06, 3.679999999998962e-06, 6.167000000001366e-06, 4.9449999999992555e-06, 2.333000000000196e-06, 5.792000000000991e-06, 4.84799999999827e-06, 4.528000000000171e-06]</msg>
<status status="PASS" starttime="20201110 08:33:50.359" endtime="20201110 08:33:50.361"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.355" endtime="20201110 08:33:50.362"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.365" endtime="20201110 08:33:50.367"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:50.371" endtime="20201110 08:33:50.391"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.368" endtime="20201110 08:33:50.393"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.362" endtime="20201110 08:33:50.393"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.996" endtime="20201110 08:33:50.394"></status>
</kw>
<msg timestamp="20201110 08:33:50.394" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.404" endtime="20201110 08:33:50.418"></status>
</kw>
<msg timestamp="20201110 08:33:50.419" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:50.402" endtime="20201110 08:33:50.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:50.421" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:50.420" endtime="20201110 08:33:50.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.422" endtime="20201110 08:33:50.424"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.399" endtime="20201110 08:33:50.424"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.397" endtime="20201110 08:33:50.425"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.431" endtime="20201110 08:33:50.701"></status>
</kw>
<msg timestamp="20201110 08:33:50.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021428986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021434736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:50.430" endtime="20201110 08:33:50.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:50.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021428986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021434736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:50.704" endtime="20201110 08:33:50.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.709" endtime="20201110 08:33:50.711"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.427" endtime="20201110 08:33:50.711"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.425" endtime="20201110 08:33:50.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:50.716" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:50.715" endtime="20201110 08:33:50.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:50.719" level="INFO">VALUE: [{'time': 0.021428986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021434736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.749999999998812e-06, 'source_diff': 5.749999999998812e-06}, {'time': 0.021439583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.847000000002266e-06, 'source_diff': 4.847000000002266e-06}, {'time': 0.021442667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0839999999969503e-06, 'source_diff': 3.0839999999969503e-06}, {'time': 0.021445639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.972000000000391e-06, 'source_diff': 2.972000000000391e-06}, {'time': 0.021449431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.79200000000246e-06, 'source_diff': 3.79200000000246e-06}, {'time': 0.021453139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7079999999981017e-06, 'source_diff': 3.7079999999981017e-06}, {'time': 0.021458875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.735999999999242e-06, 'source_diff': 5.735999999999242e-06}, {'time': 0.021464736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.861000000002836e-06, 'source_diff': 5.861000000002836e-06}, {'time': 0.021467583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8469999999967965e-06, 'source_diff': 2.8469999999967965e-06}, {'time': 0.021471194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.611000000000586e-06, 'source_diff': 3.611000000000586e-06}, {'time': 0.021475722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.528000000000171e-06, 'source_diff': 4.528000000000171e-06}, {'time': 0.021479833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.111000000001086e-06, 'source_diff': 4.111000000001086e-06}, {'time': 0.021483417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5840000000009198e-06, 'source_diff': 3.5840000000009198e-06}, {'time': 0.021485958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.540999999998267e-06, 'source_diff': 2.540999999998267e-06}, {'time': 0.021488833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.874999999999406e-06, 'source_diff': 2.874999999999406e-06}, {'time': 0.021492361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.52800000000264e-06, 'source_diff': 3.52800000000264e-06}, {'time': 0.021497639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.277999999997451e-06, 'source_diff': 5.277999999997451e-06}, {'time': 0.021503167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.528000000001171e-06, 'source_diff': 5.528000000001171e-06}, {'time': 0.021508722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.555000000000837e-06, 'source_diff': 5.555000000000837e-06}, {'time': 0.021511819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.097000000000516e-06, 'source_diff': 3.097000000000516e-06}, {'time': 0.021515347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5279999999991707e-06, 'source_diff': 3.5279999999991707e-06}, {'time': 0.021518389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0419999999982406e-06, 'source_diff': 3.0419999999982406e-06}, {'time': 0.021521986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.597000000001016e-06, 'source_diff': 3.597000000001016e-06}, {'time': 0.021526792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.805999999999561e-06, 'source_diff': 4.805999999999561e-06}, {'time': 0.021530625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.833000000001696e-06, 'source_diff': 3.833000000001696e-06}, {'time': 0.021536417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.791999999997521e-06, 'source_diff': 5.791999999997521e-06}, {'time': 0.021539194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7770000000024164e-06, 'source_diff': 2.7770000000024164e-06}, {'time': 0.021545486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.291999999998021e-06, 'source_diff': 6.291999999998021e-06}, {'time': 0.021551278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.792000000000991e-06, 'source_diff': 5.792000000000991e-06}, {'time': 0.021555069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.790999999999517e-06, 'source_diff': 3.790999999999517e-06}, {'time': 0.021558917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.84800000000074e-06, 'source_diff': 3.84800000000074e-06}, {'time': 0.021564389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.021566806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.417000000001085e-06, 'source_diff': 2.417000000001085e-06}, {'time': 0.021570403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5969999999975466e-06, 'source_diff': 3.5969999999975466e-06}, {'time': 0.02157425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.847000000001266e-06, 'source_diff': 3.847000000001266e-06}, {'time': 0.021576611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.360999999999336e-06, 'source_diff': 2.360999999999336e-06}, {'time': 0.021582083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.021587181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.09800000000199e-06, 'source_diff': 5.09800000000199e-06}, {'time': 0.021590028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.847000000000266e-06, 'source_diff': 2.847000000000266e-06}, {'time': 0.021595389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.360999999998867e-06, 'source_diff': 5.360999999998867e-06}, {'time': 0.021600986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.596999999999547e-06, 'source_diff': 5.596999999999547e-06}, {'time': 0.021605847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.861000000001836e-06, 'source_diff': 4.861000000001836e-06}, {'time': 0.021608375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5279999999981706e-06, 'source_diff': 2.5279999999981706e-06}, {'time': 0.021613222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.847000000002266e-06, 'source_diff': 4.847000000002266e-06}, {'time': 0.021618194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.971999999998922e-06, 'source_diff': 4.971999999998922e-06}, {'time': 0.021624292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0979999999995205e-06, 'source_diff': 6.0979999999995205e-06}, {'time': 0.021628403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.111000000001086e-06, 'source_diff': 4.111000000001086e-06}, {'time': 0.021632194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.790999999999517e-06, 'source_diff': 3.790999999999517e-06}, {'time': 0.021636361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}]</msg>
<status status="PASS" starttime="20201110 08:33:50.717" endtime="20201110 08:33:50.720"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.712" endtime="20201110 08:33:50.721"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:50.735" level="INFO">${debug-compressed} = {'source_diff': [0, 5.749999999998812e-06, 4.847000000002266e-06, 3.0839999999969503e-06, 2.972000000000391e-06, 3.79200000000246e-06, 3.7079999999981017e-06, 5.735999999999242e-06, 5.861000000002836e...</msg>
<status status="PASS" starttime="20201110 08:33:50.722" endtime="20201110 08:33:50.736"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:50.739" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:50.738" endtime="20201110 08:33:50.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:50.743" level="INFO">VALUE: {'source_diff': [0, 5.749999999998812e-06, 4.847000000002266e-06, 3.0839999999969503e-06, 2.972000000000391e-06, 3.79200000000246e-06, 3.7079999999981017e-06, 5.735999999999242e-06, 5.861000000002836e-06, 2.8469999999967965e-06, 3.611000000000586e-06, 4.528000000000171e-06, 4.111000000001086e-06, 3.5840000000009198e-06, 2.540999999998267e-06, 2.874999999999406e-06, 3.52800000000264e-06, 5.277999999997451e-06, 5.528000000001171e-06, 5.555000000000837e-06, 3.097000000000516e-06, 3.5279999999991707e-06, 3.0419999999982406e-06, 3.597000000001016e-06, 4.805999999999561e-06, 3.833000000001696e-06, 5.791999999997521e-06, 2.7770000000024164e-06, 6.291999999998021e-06, 5.792000000000991e-06, 3.790999999999517e-06, 3.84800000000074e-06, 5.471999999999422e-06, 2.417000000001085e-06, 3.5969999999975466e-06, 3.847000000001266e-06, 2.360999999999336e-06, 5.471999999999422e-06, 5.09800000000199e-06, 2.847000000000266e-06, 5.360999999998867e-06, 5.596999999999547e-06, 4.861000000001836e-06, 2.5279999999981706e-06, 4.847000000002266e-06, 4.971999999998922e-06, 6.0979999999995205e-06, 4.111000000001086e-06, 3.790999999999517e-06, 4.166999999999366e-06], 'eventdiff': [0, 5.749999999998812e-06, 4.847000000002266e-06, 3.0839999999969503e-06, 2.972000000000391e-06, 3.79200000000246e-06, 3.7079999999981017e-06, 5.735999999999242e-06, 5.861000000002836e-06, 2.8469999999967965e-06, 3.611000000000586e-06, 4.528000000000171e-06, 4.111000000001086e-06, 3.5840000000009198e-06, 2.540999999998267e-06, 2.874999999999406e-06, 3.52800000000264e-06, 5.277999999997451e-06, 5.528000000001171e-06, 5.555000000000837e-06, 3.097000000000516e-06, 3.5279999999991707e-06, 3.0419999999982406e-06, 3.597000000001016e-06, 4.805999999999561e-06, 3.833000000001696e-06, 5.791999999997521e-06, 2.7770000000024164e-06, 6.291999999998021e-06, 5.792000000000991e-06, 3.790999999999517e-06, 3.84800000000074e-06, 5.471999999999422e-06, 2.417000000001085e-06, 3.5969999999975466e-06, 3.847000000001266e-06, 2.360999999999336e-06, 5.471999999999422e-06, 5.09800000000199e-06, 2.847000000000266e-06, 5.360999999998867e-06, 5.596999999999547e-06, 4.861000000001836e-06, 2.5279999999981706e-06, 4.847000000002266e-06, 4.971999999998922e-06, 6.0979999999995205e-06, 4.111000000001086e-06, 3.790999999999517e-06, 4.166999999999366e-06], 'time': [0.021428986, 0.021434736, 0.021439583, 0.021442667, 0.021445639, 0.021449431, 0.021453139, 0.021458875, 0.021464736, 0.021467583, 0.021471194, 0.021475722, 0.021479833, 0.021483417, 0.021485958, 0.021488833, 0.021492361, 0.021497639, 0.021503167, 0.021508722, 0.021511819, 0.021515347, 0.021518389, 0.021521986, 0.021526792, 0.021530625, 0.021536417, 0.021539194, 0.021545486, 0.021551278, 0.021555069, 0.021558917, 0.021564389, 0.021566806, 0.021570403, 0.02157425, 0.021576611, 0.021582083, 0.021587181, 0.021590028, 0.021595389, 0.021600986, 0.021605847, 0.021608375, 0.021613222, 0.021618194, 0.021624292, 0.021628403, 0.021632194, 0.021636361], 'source}</msg>
<status status="PASS" starttime="20201110 08:33:50.741" endtime="20201110 08:33:50.743"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.737" endtime="20201110 08:33:50.744"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:50.747" level="INFO">${RESULT} = [{'time': 0.021434736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.749999999998812e-06, 'source_diff': 5.749999999998812e-06}, {'time': 0.021442667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:50.745" endtime="20201110 08:33:50.747"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:50.755" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [5.749999999998812e-06, 3.0839999999969503e-06, 3.79200000000246e-06, 5.735999999999242e-06, 2.8469999999967965e-06, 4.528000000000171e-06, 3.5840000000009198e-06, 2.874999999999406e-0...</msg>
<status status="PASS" starttime="20201110 08:33:50.748" endtime="20201110 08:33:50.755"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:50.759" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:50.758" endtime="20201110 08:33:50.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:50.762" level="INFO">VALUE: [5.749999999998812e-06, 3.0839999999969503e-06, 3.79200000000246e-06, 5.735999999999242e-06, 2.8469999999967965e-06, 4.528000000000171e-06, 3.5840000000009198e-06, 2.874999999999406e-06, 5.277999999997451e-06, 5.555000000000837e-06, 3.5279999999991707e-06, 3.597000000001016e-06, 3.833000000001696e-06, 2.7770000000024164e-06, 5.792000000000991e-06, 3.84800000000074e-06, 2.417000000001085e-06, 3.847000000001266e-06, 5.471999999999422e-06, 2.847000000000266e-06, 5.596999999999547e-06, 2.5279999999981706e-06, 4.971999999998922e-06, 4.111000000001086e-06, 4.166999999999366e-06]</msg>
<status status="PASS" starttime="20201110 08:33:50.760" endtime="20201110 08:33:50.762"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.756" endtime="20201110 08:33:50.763"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.765" endtime="20201110 08:33:50.766"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:50.769" endtime="20201110 08:33:50.788"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.767" endtime="20201110 08:33:50.788"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.764" endtime="20201110 08:33:50.789"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.395" endtime="20201110 08:33:50.789"></status>
</kw>
<msg timestamp="20201110 08:33:50.789" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.797" endtime="20201110 08:33:50.812"></status>
</kw>
<msg timestamp="20201110 08:33:50.813" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:50.796" endtime="20201110 08:33:50.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:50.815" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:50.814" endtime="20201110 08:33:50.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.816" endtime="20201110 08:33:50.818"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.793" endtime="20201110 08:33:50.818"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.791" endtime="20201110 08:33:50.819"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.826" endtime="20201110 08:33:51.095"></status>
</kw>
<msg timestamp="20201110 08:33:51.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017721, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017726014, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:33:50.825" endtime="20201110 08:33:51.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017721, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017726014, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:33:51.098" endtime="20201110 08:33:51.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.103" endtime="20201110 08:33:51.105"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.821" endtime="20201110 08:33:51.105"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.819" endtime="20201110 08:33:51.106"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.110" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:51.109" endtime="20201110 08:33:51.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.113" level="INFO">VALUE: [{'time': 0.017721, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017726014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.0139999999976315e-06, 'source_diff': 5.0139999999976315e-06}, {'time': 0.017731, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.986000000001961e-06, 'source_diff': 4.986000000001961e-06}, {'time': 0.017736292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.292000000000491e-06, 'source_diff': 5.292000000000491e-06}, {'time': 0.017741458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.166000000000892e-06, 'source_diff': 5.166000000000892e-06}, {'time': 0.017744986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5279999999991707e-06, 'source_diff': 3.5279999999991707e-06}, {'time': 0.017751292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.305999999997591e-06, 'source_diff': 6.305999999997591e-06}, {'time': 0.0177555, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.208000000002071e-06, 'source_diff': 4.208000000002071e-06}, {'time': 0.017758986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.486000000000461e-06, 'source_diff': 3.486000000000461e-06}, {'time': 0.017764333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.017768667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.3339999999982e-06, 'source_diff': 4.3339999999982e-06}, {'time': 0.017773153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.486000000001461e-06, 'source_diff': 4.486000000001461e-06}, {'time': 0.017776583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.429999999998712e-06, 'source_diff': 3.429999999998712e-06}, {'time': 0.017782778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.195000000000506e-06, 'source_diff': 6.195000000000506e-06}, {'time': 0.017788806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.028000000001671e-06, 'source_diff': 6.028000000001671e-06}, {'time': 0.017794375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.569000000000407e-06, 'source_diff': 5.569000000000407e-06}, {'time': 0.017797903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5279999999991707e-06, 'source_diff': 3.5279999999991707e-06}, {'time': 0.017802014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.111000000001086e-06, 'source_diff': 4.111000000001086e-06}, {'time': 0.017804736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.722000000000141e-06, 'source_diff': 2.722000000000141e-06}, {'time': 0.017807542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8059999999975604e-06, 'source_diff': 2.8059999999975604e-06}, {'time': 0.017811431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.017817486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.055000000001337e-06, 'source_diff': 6.055000000001337e-06}, {'time': 0.017820458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.972000000000391e-06, 'source_diff': 2.972000000000391e-06}, {'time': 0.017825361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.903000000000546e-06, 'source_diff': 4.903000000000546e-06}, {'time': 0.017828903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5419999999987406e-06, 'source_diff': 3.5419999999987406e-06}, {'time': 0.017832319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.415999999999142e-06, 'source_diff': 3.415999999999142e-06}, {'time': 0.017836972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.017841889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.917000000000116e-06, 'source_diff': 4.917000000000116e-06}, {'time': 0.017845111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.222000000000641e-06, 'source_diff': 3.222000000000641e-06}, {'time': 0.017849278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.017853514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.236000000001211e-06, 'source_diff': 4.236000000001211e-06}, {'time': 0.017857347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.832999999998227e-06, 'source_diff': 3.832999999998227e-06}, {'time': 0.017860764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.417000000002085e-06, 'source_diff': 3.417000000002085e-06}, {'time': 0.017863611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.847000000000266e-06, 'source_diff': 2.847000000000266e-06}, {'time': 0.017867097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4859999999969915e-06, 'source_diff': 3.4859999999969915e-06}, {'time': 0.017872194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.097000000002516e-06, 'source_diff': 5.097000000002516e-06}, {'time': 0.017877222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.028000000000671e-06, 'source_diff': 5.028000000000671e-06}, {'time': 0.017881708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.485999999997992e-06, 'source_diff': 4.485999999997992e-06}, {'time': 0.017885431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7230000000006147e-06, 'source_diff': 3.7230000000006147e-06}, {'time': 0.017891347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.915999999998173e-06, 'source_diff': 5.915999999998173e-06}, {'time': 0.017895569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.222000000001641e-06, 'source_diff': 4.222000000001641e-06}, {'time': 0.017899417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.84800000000074e-06, 'source_diff': 3.84800000000074e-06}, {'time': 0.017903708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.291000000000017e-06, 'source_diff': 4.291000000000017e-06}, {'time': 0.017907125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4169999999986156e-06, 'source_diff': 3.4169999999986156e-06}, {'time': 0.017913347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.017919514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.167000000001366e-06, 'source_diff': 6.167000000001366e-06}, {'time': 0.017923208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.693999999998532e-06, 'source_diff': 3.693999999998532e-06}, {'time': 0.017928208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.000000000001531e-06, 'source_diff': 5.000000000001531e-06}, {'time': 0.017930694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.485999999999461e-06, 'source_diff': 2.485999999999461e-06}, {'time': 0.017933528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8340000000001697e-06, 'source_diff': 2.8340000000001697e-06}]</msg>
<status status="PASS" starttime="20201110 08:33:51.111" endtime="20201110 08:33:51.114"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.106" endtime="20201110 08:33:51.115"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:51.129" level="INFO">${debug-compressed} = {'source_diff': [0, 5.0139999999976315e-06, 4.986000000001961e-06, 5.292000000000491e-06, 5.166000000000892e-06, 3.5279999999991707e-06, 6.305999999997591e-06, 4.208000000002071e-06, 3.486000000000461...</msg>
<status status="PASS" starttime="20201110 08:33:51.116" endtime="20201110 08:33:51.129"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.132" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:51.131" endtime="20201110 08:33:51.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.136" level="INFO">VALUE: {'source_diff': [0, 5.0139999999976315e-06, 4.986000000001961e-06, 5.292000000000491e-06, 5.166000000000892e-06, 3.5279999999991707e-06, 6.305999999997591e-06, 4.208000000002071e-06, 3.486000000000461e-06, 5.346999999999297e-06, 4.3339999999982e-06, 4.486000000001461e-06, 3.429999999998712e-06, 6.195000000000506e-06, 6.028000000001671e-06, 5.569000000000407e-06, 3.5279999999991707e-06, 4.111000000001086e-06, 2.722000000000141e-06, 2.8059999999975604e-06, 3.888999999999976e-06, 6.055000000001337e-06, 2.972000000000391e-06, 4.903000000000546e-06, 3.5419999999987406e-06, 3.415999999999142e-06, 4.653000000000296e-06, 4.917000000000116e-06, 3.222000000000641e-06, 4.166999999999366e-06, 4.236000000001211e-06, 3.832999999998227e-06, 3.417000000002085e-06, 2.847000000000266e-06, 3.4859999999969915e-06, 5.097000000002516e-06, 5.028000000000671e-06, 4.485999999997992e-06, 3.7230000000006147e-06, 5.915999999998173e-06, 4.222000000001641e-06, 3.84800000000074e-06, 4.291000000000017e-06, 3.4169999999986156e-06, 6.222000000000172e-06, 6.167000000001366e-06, 3.693999999998532e-06, 5.000000000001531e-06, 2.485999999999461e-06, 2.8340000000001697e-06], 'eventdiff': [0, 5.0139999999976315e-06, 4.986000000001961e-06, 5.292000000000491e-06, 5.166000000000892e-06, 3.5279999999991707e-06, 6.305999999997591e-06, 4.208000000002071e-06, 3.486000000000461e-06, 5.346999999999297e-06, 4.3339999999982e-06, 4.486000000001461e-06, 3.429999999998712e-06, 6.195000000000506e-06, 6.028000000001671e-06, 5.569000000000407e-06, 3.5279999999991707e-06, 4.111000000001086e-06, 2.722000000000141e-06, 2.8059999999975604e-06, 3.888999999999976e-06, 6.055000000001337e-06, 2.972000000000391e-06, 4.903000000000546e-06, 3.5419999999987406e-06, 3.415999999999142e-06, 4.653000000000296e-06, 4.917000000000116e-06, 3.222000000000641e-06, 4.166999999999366e-06, 4.236000000001211e-06, 3.832999999998227e-06, 3.417000000002085e-06, 2.847000000000266e-06, 3.4859999999969915e-06, 5.097000000002516e-06, 5.028000000000671e-06, 4.485999999997992e-06, 3.7230000000006147e-06, 5.915999999998173e-06, 4.222000000001641e-06, 3.84800000000074e-06, 4.291000000000017e-06, 3.4169999999986156e-06, 6.222000000000172e-06, 6.167000000001366e-06, 3.693999999998532e-06, 5.000000000001531e-06, 2.485999999999461e-06, 2.8340000000001697e-06], 'time': [0.017721, 0.017726014, 0.017731, 0.017736292, 0.017741458, 0.017744986, 0.017751292, 0.0177555, 0.017758986, 0.017764333, 0.017768667, 0.017773153, 0.017776583, 0.017782778, 0.017788806, 0.017794375, 0.017797903, 0.017802014, 0.017804736, 0.017807542, 0.017811431, 0.017817486, 0.017820458, 0.017825361, 0.017828903, 0.017832319, 0.017836972, 0.017841889, 0.017845111, 0.017849278, 0.017853514, 0.017857347, 0.017860764, 0.017863611, 0.017867097, 0.017872194, 0.017877222, 0.017881708, 0.017885431, 0.017891347, 0.017895569, 0.017899417, 0.017903708, 0.017907125, 0.017913347, 0.017919514, 0.017923208, 0.017928208, 0.017930694, 0.017933528], 'source}</msg>
<status status="PASS" starttime="20201110 08:33:51.133" endtime="20201110 08:33:51.136"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.129" endtime="20201110 08:33:51.137"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:51.140" level="INFO">${RESULT} = [{'time': 0.017726014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.0139999999976315e-06, 'source_diff': 5.0139999999976315e-06}, {'time': 0.017736292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:51.137" endtime="20201110 08:33:51.140"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:51.148" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [5.0139999999976315e-06, 5.292000000000491e-06, 3.5279999999991707e-06, 4.208000000002071e-06, 5.346999999999297e-06, 4.486000000001461e-06, 6.195000000000506e-06, 5.569000000000407e-0...</msg>
<status status="PASS" starttime="20201110 08:33:51.141" endtime="20201110 08:33:51.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.152" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:51.151" endtime="20201110 08:33:51.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.155" level="INFO">VALUE: [5.0139999999976315e-06, 5.292000000000491e-06, 3.5279999999991707e-06, 4.208000000002071e-06, 5.346999999999297e-06, 4.486000000001461e-06, 6.195000000000506e-06, 5.569000000000407e-06, 4.111000000001086e-06, 2.8059999999975604e-06, 6.055000000001337e-06, 4.903000000000546e-06, 3.415999999999142e-06, 4.917000000000116e-06, 4.166999999999366e-06, 3.832999999998227e-06, 2.847000000000266e-06, 5.097000000002516e-06, 4.485999999997992e-06, 5.915999999998173e-06, 3.84800000000074e-06, 3.4169999999986156e-06, 6.167000000001366e-06, 5.000000000001531e-06, 2.8340000000001697e-06]</msg>
<status status="PASS" starttime="20201110 08:33:51.153" endtime="20201110 08:33:51.155"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.149" endtime="20201110 08:33:51.156"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.158" endtime="20201110 08:33:51.159"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:51.162" endtime="20201110 08:33:51.181"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.160" endtime="20201110 08:33:51.182"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.156" endtime="20201110 08:33:51.182"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.790" endtime="20201110 08:33:51.182"></status>
</kw>
<msg timestamp="20201110 08:33:51.182" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.190" endtime="20201110 08:33:51.205"></status>
</kw>
<msg timestamp="20201110 08:33:51.205" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:51.189" endtime="20201110 08:33:51.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.208" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:51.206" endtime="20201110 08:33:51.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.209" endtime="20201110 08:33:51.210"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.186" endtime="20201110 08:33:51.211"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.184" endtime="20201110 08:33:51.211"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.218" endtime="20201110 08:33:51.484"></status>
</kw>
<msg timestamp="20201110 08:33:51.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018360722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0183635, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:33:51.216" endtime="20201110 08:33:51.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018360722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0183635, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:33:51.487" endtime="20201110 08:33:51.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.492" endtime="20201110 08:33:51.494"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.214" endtime="20201110 08:33:51.494"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.212" endtime="20201110 08:33:51.495"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.499" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:51.498" endtime="20201110 08:33:51.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.502" level="INFO">VALUE: [{'time': 0.018360722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0183635, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.77800000000189e-06, 'source_diff': 2.77800000000189e-06}, {'time': 0.018367917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416999999999616e-06, 'source_diff': 4.416999999999616e-06}, {'time': 0.018370833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.915999999998642e-06, 'source_diff': 2.915999999998642e-06}, {'time': 0.018375236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.018381292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.056000000000811e-06, 'source_diff': 6.056000000000811e-06}, {'time': 0.018385, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7079999999981017e-06, 'source_diff': 3.7079999999981017e-06}, {'time': 0.01838775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7500000000027502e-06, 'source_diff': 2.7500000000027502e-06}, {'time': 0.018390639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8889999999989757e-06, 'source_diff': 2.8889999999989757e-06}, {'time': 0.018394556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.916999999999116e-06, 'source_diff': 3.916999999999116e-06}, {'time': 0.018399208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.652000000000822e-06, 'source_diff': 4.652000000000822e-06}, {'time': 0.018405403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.195000000000506e-06, 'source_diff': 6.195000000000506e-06}, {'time': 0.018409875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.471999999998422e-06, 'source_diff': 4.471999999998422e-06}, {'time': 0.018412597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.722000000000141e-06, 'source_diff': 2.722000000000141e-06}, {'time': 0.018417556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.959000000002295e-06, 'source_diff': 4.959000000002295e-06}, {'time': 0.018422917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.360999999998867e-06, 'source_diff': 5.360999999998867e-06}, {'time': 0.018427139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.221999999998172e-06, 'source_diff': 4.221999999998172e-06}, {'time': 0.018433111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.018438208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.097000000002516e-06, 'source_diff': 5.097000000002516e-06}, {'time': 0.018442944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.735999999998242e-06, 'source_diff': 4.735999999998242e-06}, {'time': 0.018446417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4730000000003647e-06, 'source_diff': 3.4730000000003647e-06}, {'time': 0.018450694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.277000000000447e-06, 'source_diff': 4.277000000000447e-06}, {'time': 0.018454389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.695000000001475e-06, 'source_diff': 3.695000000001475e-06}, {'time': 0.018459028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.6389999999972564e-06, 'source_diff': 4.6389999999972564e-06}, {'time': 0.018463125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.018465597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.471999999999891e-06, 'source_diff': 2.471999999999891e-06}, {'time': 0.018470208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.610999999998117e-06, 'source_diff': 4.610999999998117e-06}, {'time': 0.018473181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.973000000003334e-06, 'source_diff': 2.973000000003334e-06}, {'time': 0.018476208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.026999999999197e-06, 'source_diff': 3.026999999999197e-06}, {'time': 0.018480319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1109999999976166e-06, 'source_diff': 4.1109999999976166e-06}, {'time': 0.018483361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.04200000000171e-06, 'source_diff': 3.04200000000171e-06}, {'time': 0.018488278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.917000000000116e-06, 'source_diff': 4.917000000000116e-06}, {'time': 0.018492319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.040999999999767e-06, 'source_diff': 4.040999999999767e-06}, {'time': 0.018495653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3340000000006698e-06, 'source_diff': 3.3340000000006698e-06}, {'time': 0.018501708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.054999999997868e-06, 'source_diff': 6.054999999997868e-06}, {'time': 0.018507167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.459000000002795e-06, 'source_diff': 5.459000000002795e-06}, {'time': 0.018511333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.165999999999892e-06, 'source_diff': 4.165999999999892e-06}, {'time': 0.018517319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.018521792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.472999999997895e-06, 'source_diff': 4.472999999997895e-06}, {'time': 0.018527069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.277000000001447e-06, 'source_diff': 5.277000000001447e-06}, {'time': 0.018533042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.9729999999993955e-06, 'source_diff': 5.9729999999993955e-06}, {'time': 0.018536833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.790999999999517e-06, 'source_diff': 3.790999999999517e-06}, {'time': 0.01854275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.917000000001116e-06, 'source_diff': 5.917000000001116e-06}, {'time': 0.018545653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9029999999985456e-06, 'source_diff': 2.9029999999985456e-06}, {'time': 0.018550764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.111000000002086e-06, 'source_diff': 5.111000000002086e-06}, {'time': 0.018556167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.402999999997576e-06, 'source_diff': 5.402999999997576e-06}, {'time': 0.018559028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8610000000033053e-06, 'source_diff': 2.8610000000033053e-06}, {'time': 0.018564181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.152999999997326e-06, 'source_diff': 5.152999999997326e-06}, {'time': 0.018570097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.916000000001642e-06, 'source_diff': 5.916000000001642e-06}, {'time': 0.018573944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.846999999997797e-06, 'source_diff': 3.846999999997797e-06}]</msg>
<status status="PASS" starttime="20201110 08:33:51.500" endtime="20201110 08:33:51.503"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.495" endtime="20201110 08:33:51.504"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:51.518" level="INFO">${debug-compressed} = {'source_diff': [0, 2.77800000000189e-06, 4.416999999999616e-06, 2.915999999998642e-06, 4.403000000000046e-06, 6.056000000000811e-06, 3.7079999999981017e-06, 2.7500000000027502e-06, 2.8889999999989757...</msg>
<status status="PASS" starttime="20201110 08:33:51.505" endtime="20201110 08:33:51.518"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.522" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:51.521" endtime="20201110 08:33:51.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.525" level="INFO">VALUE: {'source_diff': [0, 2.77800000000189e-06, 4.416999999999616e-06, 2.915999999998642e-06, 4.403000000000046e-06, 6.056000000000811e-06, 3.7079999999981017e-06, 2.7500000000027502e-06, 2.8889999999989757e-06, 3.916999999999116e-06, 4.652000000000822e-06, 6.195000000000506e-06, 4.471999999998422e-06, 2.722000000000141e-06, 4.959000000002295e-06, 5.360999999998867e-06, 4.221999999998172e-06, 5.971999999999922e-06, 5.097000000002516e-06, 4.735999999998242e-06, 3.4730000000003647e-06, 4.277000000000447e-06, 3.695000000001475e-06, 4.6389999999972564e-06, 4.097000000001516e-06, 2.471999999999891e-06, 4.610999999998117e-06, 2.973000000003334e-06, 3.026999999999197e-06, 4.1109999999976166e-06, 3.04200000000171e-06, 4.917000000000116e-06, 4.040999999999767e-06, 3.3340000000006698e-06, 6.054999999997868e-06, 5.459000000002795e-06, 4.165999999999892e-06, 5.985999999999492e-06, 4.472999999997895e-06, 5.277000000001447e-06, 5.9729999999993955e-06, 3.790999999999517e-06, 5.917000000001116e-06, 2.9029999999985456e-06, 5.111000000002086e-06, 5.402999999997576e-06, 2.8610000000033053e-06, 5.152999999997326e-06, 5.916000000001642e-06, 3.846999999997797e-06], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'diff': [0, 2.77800000000189e-06, 4.416999999999616e-06, 2.915999999998642e-06, 4.403000000000046e-06, 6.056000000000811e-06, 3.7079999999981017e-06, 2.7500000000027502e-06, 2.8889999999989757e-06, 3.916999999999116e-06, 4.652000000000822e-06, 6.195000000000506e-06, 4.471999999998422e-06, 2.722000000000141e-06, 4.959000000002295e-06, 5.360999999998867e-06, 4.221999999998172e-06, 5.971999999999922e-06, 5.097000000002516e-06, 4.735999999998242e-06, 3.4730000000003647e-06, 4.277000000000447e-06, 3.695000000001475e-06, 4.6389999999972564e-06, 4.097000000001516e-06, 2.471999999999891e-06, 4.610999999998117e-06, 2.973000000003334e-06, 3.026999999999197e-06, 4.1109999999976166e-06, 3.04200000000171e-06, 4.917000000000116e-06, 4.040999999999767e-06, 3.3340000000006698e-06, 6.054999999997868e-06, 5.459000000002795e-06, 4.165999999999892e-06, 5.985999999999492e-06, 4.472999999997895e-06, 5.277000000001447e-06, 5.9729999999993955e-06, 3.790999999999517e-06, 5.917000000001116e-06, 2.9029999999985456e-06, 5.111000000002086e-06, 5.402999999997576e-06, 2.8610000000033053e-06, 5.152999999997326e-06, 5.916000000001642e-06, 3.846999999997797e-06], 'time': [0.018360722, 0.0183635, 0.018367917, 0.018370833, 0.018375236, 0.018381292, 0.018385, 0.01838775, 0.018390639, 0.018394556, 0.018399208, 0.018405403, 0.018409875, 0.018412597, 0.018417556, 0.018422917, 0.018427139, 0.018433111, 0.018438208, 0.018442944, 0.018446417, 0.018450694, 0.018454389, 0.018459028, 0.018463125, 0.018465597, 0.018470208, 0.018473181, 0.018476208, 0.018480319, 0.018483361, 0.018488278, 0.018492319, 0.018495653, 0.018501708, 0.018507167, 0.018511333, 0.018517319, 0.018521792, 0.018527069, 0.018533042, 0.018536833, 0.01854275, 0.018545653, 0.018550764, 0.018556167, 0.018559028, 0.018564181, 0.018570097, 0.018573944], 'source}</msg>
<status status="PASS" starttime="20201110 08:33:51.523" endtime="20201110 08:33:51.525"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.519" endtime="20201110 08:33:51.526"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:51.529" level="INFO">${RESULT} = [{'time': 0.0183635, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.77800000000189e-06, 'source_diff': 2.77800000000189e-06}, {'time': 0.018370833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2...</msg>
<status status="PASS" starttime="20201110 08:33:51.527" endtime="20201110 08:33:51.530"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:51.537" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [2.77800000000189e-06, 2.915999999998642e-06, 6.056000000000811e-06, 2.7500000000027502e-06, 3.916999999999116e-06, 6.195000000000506e-06, 2.722000000000141e-06, 5.360999999998867e-06,...</msg>
<status status="PASS" starttime="20201110 08:33:51.530" endtime="20201110 08:33:51.538"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.542" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:51.541" endtime="20201110 08:33:51.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.544" level="INFO">VALUE: [2.77800000000189e-06, 2.915999999998642e-06, 6.056000000000811e-06, 2.7500000000027502e-06, 3.916999999999116e-06, 6.195000000000506e-06, 2.722000000000141e-06, 5.360999999998867e-06, 5.971999999999922e-06, 4.735999999998242e-06, 4.277000000000447e-06, 4.6389999999972564e-06, 2.471999999999891e-06, 2.973000000003334e-06, 4.1109999999976166e-06, 4.917000000000116e-06, 3.3340000000006698e-06, 5.459000000002795e-06, 5.985999999999492e-06, 5.277000000001447e-06, 3.790999999999517e-06, 2.9029999999985456e-06, 5.402999999997576e-06, 5.152999999997326e-06, 3.846999999997797e-06]</msg>
<status status="PASS" starttime="20201110 08:33:51.543" endtime="20201110 08:33:51.545"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.538" endtime="20201110 08:33:51.545"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.547" endtime="20201110 08:33:51.549"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:51.551" endtime="20201110 08:33:51.570"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.549" endtime="20201110 08:33:51.571"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.546" endtime="20201110 08:33:51.571"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.183" endtime="20201110 08:33:51.572"></status>
</kw>
<msg timestamp="20201110 08:33:51.572" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.580" endtime="20201110 08:33:51.595"></status>
</kw>
<msg timestamp="20201110 08:33:51.596" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:51.579" endtime="20201110 08:33:51.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.598" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:51.597" endtime="20201110 08:33:51.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.599" endtime="20201110 08:33:51.601"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.575" endtime="20201110 08:33:51.601"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.574" endtime="20201110 08:33:51.602"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.608" endtime="20201110 08:33:51.874"></status>
</kw>
<msg timestamp="20201110 08:33:51.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01840625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018411597, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:33:51.607" endtime="20201110 08:33:51.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01840625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018411597, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:33:51.877" endtime="20201110 08:33:51.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.882" endtime="20201110 08:33:51.884"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.604" endtime="20201110 08:33:51.884"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.602" endtime="20201110 08:33:51.885"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.889" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:51.888" endtime="20201110 08:33:51.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.892" level="INFO">VALUE: [{'time': 0.01840625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018411597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.018415514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.917000000002585e-06, 'source_diff': 3.917000000002585e-06}, {'time': 0.018420167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.018423583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.415999999999142e-06, 'source_diff': 3.415999999999142e-06}, {'time': 0.018429694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.110999999999617e-06, 'source_diff': 6.110999999999617e-06}, {'time': 0.018434667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.972999999998395e-06, 'source_diff': 4.972999999998395e-06}, {'time': 0.018439889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.222000000002641e-06, 'source_diff': 5.222000000002641e-06}, {'time': 0.018442861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.972000000000391e-06, 'source_diff': 2.972000000000391e-06}, {'time': 0.018446319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4579999999978517e-06, 'source_diff': 3.4579999999978517e-06}, {'time': 0.018451694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.375000000001906e-06, 'source_diff': 5.375000000001906e-06}, {'time': 0.018455097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4029999999990457e-06, 'source_diff': 3.4029999999990457e-06}, {'time': 0.018457597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4999999999990308e-06, 'source_diff': 2.4999999999990308e-06}, {'time': 0.018463611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.014000000002101e-06, 'source_diff': 6.014000000002101e-06}, {'time': 0.018466847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.236000000000211e-06, 'source_diff': 3.236000000000211e-06}, {'time': 0.018473125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2779999999984515e-06, 'source_diff': 6.2779999999984515e-06}, {'time': 0.018479417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.292000000001491e-06, 'source_diff': 6.292000000001491e-06}, {'time': 0.018484528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.110999999998617e-06, 'source_diff': 5.110999999998617e-06}, {'time': 0.018488611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.082999999998477e-06, 'source_diff': 4.082999999998477e-06}, {'time': 0.018494847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.235999999999742e-06, 'source_diff': 6.235999999999742e-06}, {'time': 0.018500625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.778000000001421e-06, 'source_diff': 5.778000000001421e-06}, {'time': 0.018504417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7919999999989906e-06, 'source_diff': 3.7919999999989906e-06}, {'time': 0.018507389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.972000000000391e-06, 'source_diff': 2.972000000000391e-06}, {'time': 0.018510806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.417000000002085e-06, 'source_diff': 3.417000000002085e-06}, {'time': 0.018513153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.346999999999766e-06, 'source_diff': 2.346999999999766e-06}, {'time': 0.018517, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.846999999997797e-06, 'source_diff': 3.846999999997797e-06}, {'time': 0.018519431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.431000000000655e-06, 'source_diff': 2.431000000000655e-06}, {'time': 0.018524264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.832999999999227e-06, 'source_diff': 4.832999999999227e-06}, {'time': 0.018528931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.666999999999866e-06, 'source_diff': 4.666999999999866e-06}, {'time': 0.018533917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.986000000001961e-06, 'source_diff': 4.986000000001961e-06}, {'time': 0.018539819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.901999999998603e-06, 'source_diff': 5.901999999998603e-06}, {'time': 0.018544167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.34800000000124e-06, 'source_diff': 4.34800000000124e-06}, {'time': 0.018547708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.540999999999267e-06, 'source_diff': 3.540999999999267e-06}, {'time': 0.018552431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.723000000001615e-06, 'source_diff': 4.723000000001615e-06}, {'time': 0.018558333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.901999999998603e-06, 'source_diff': 5.901999999998603e-06}, {'time': 0.018562028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.695000000001475e-06, 'source_diff': 3.695000000001475e-06}, {'time': 0.018567236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.207999999999602e-06, 'source_diff': 5.207999999999602e-06}, {'time': 0.018572, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.764000000000851e-06, 'source_diff': 4.764000000000851e-06}, {'time': 0.018577431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.430999999996716e-06, 'source_diff': 5.430999999996716e-06}, {'time': 0.018581417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.986000000000961e-06, 'source_diff': 3.986000000000961e-06}, {'time': 0.018586264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.847000000002266e-06, 'source_diff': 4.847000000002266e-06}, {'time': 0.018591861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.596999999999547e-06, 'source_diff': 5.596999999999547e-06}, {'time': 0.018598083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.018602, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.916999999999116e-06, 'source_diff': 3.916999999999116e-06}, {'time': 0.018605861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.861000000000836e-06, 'source_diff': 3.861000000000836e-06}, {'time': 0.018612083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.018617653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.569999999999881e-06, 'source_diff': 5.569999999999881e-06}, {'time': 0.018620972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3189999999981568e-06, 'source_diff': 3.3189999999981568e-06}, {'time': 0.018625125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.152999999999796e-06, 'source_diff': 4.152999999999796e-06}, {'time': 0.018630931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.806000000000561e-06, 'source_diff': 5.806000000000561e-06}]</msg>
<status status="PASS" starttime="20201110 08:33:51.890" endtime="20201110 08:33:51.893"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.885" endtime="20201110 08:33:51.894"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:51.909" level="INFO">${debug-compressed} = {'source_diff': [0, 5.346999999999297e-06, 3.917000000002585e-06, 4.653000000000296e-06, 3.415999999999142e-06, 6.110999999999617e-06, 4.972999999998395e-06, 5.222000000002641e-06, 2.972000000000391e-...</msg>
<status status="PASS" starttime="20201110 08:33:51.895" endtime="20201110 08:33:51.909"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.913" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:51.912" endtime="20201110 08:33:51.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.916" level="INFO">VALUE: {'source_diff': [0, 5.346999999999297e-06, 3.917000000002585e-06, 4.653000000000296e-06, 3.415999999999142e-06, 6.110999999999617e-06, 4.972999999998395e-06, 5.222000000002641e-06, 2.972000000000391e-06, 3.4579999999978517e-06, 5.375000000001906e-06, 3.4029999999990457e-06, 2.4999999999990308e-06, 6.014000000002101e-06, 3.236000000000211e-06, 6.2779999999984515e-06, 6.292000000001491e-06, 5.110999999998617e-06, 4.082999999998477e-06, 6.235999999999742e-06, 5.778000000001421e-06, 3.7919999999989906e-06, 2.972000000000391e-06, 3.417000000002085e-06, 2.346999999999766e-06, 3.846999999997797e-06, 2.431000000000655e-06, 4.832999999999227e-06, 4.666999999999866e-06, 4.986000000001961e-06, 5.901999999998603e-06, 4.34800000000124e-06, 3.540999999999267e-06, 4.723000000001615e-06, 5.901999999998603e-06, 3.695000000001475e-06, 5.207999999999602e-06, 4.764000000000851e-06, 5.430999999996716e-06, 3.986000000000961e-06, 4.847000000002266e-06, 5.596999999999547e-06, 6.222000000000172e-06, 3.916999999999116e-06, 3.861000000000836e-06, 6.222000000000172e-06, 5.569999999999881e-06, 3.3189999999981568e-06, 4.152999999999796e-06, 5.806000000000561e-06], 'eventdiff': [0, 5.346999999999297e-06, 3.917000000002585e-06, 4.653000000000296e-06, 3.415999999999142e-06, 6.110999999999617e-06, 4.972999999998395e-06, 5.222000000002641e-06, 2.972000000000391e-06, 3.4579999999978517e-06, 5.375000000001906e-06, 3.4029999999990457e-06, 2.4999999999990308e-06, 6.014000000002101e-06, 3.236000000000211e-06, 6.2779999999984515e-06, 6.292000000001491e-06, 5.110999999998617e-06, 4.082999999998477e-06, 6.235999999999742e-06, 5.778000000001421e-06, 3.7919999999989906e-06, 2.972000000000391e-06, 3.417000000002085e-06, 2.346999999999766e-06, 3.846999999997797e-06, 2.431000000000655e-06, 4.832999999999227e-06, 4.666999999999866e-06, 4.986000000001961e-06, 5.901999999998603e-06, 4.34800000000124e-06, 3.540999999999267e-06, 4.723000000001615e-06, 5.901999999998603e-06, 3.695000000001475e-06, 5.207999999999602e-06, 4.764000000000851e-06, 5.430999999996716e-06, 3.986000000000961e-06, 4.847000000002266e-06, 5.596999999999547e-06, 6.222000000000172e-06, 3.916999999999116e-06, 3.861000000000836e-06, 6.222000000000172e-06, 5.569999999999881e-06, 3.3189999999981568e-06, 4.152999999999796e-06, 5.806000000000561e-06], 'time': [0.01840625, 0.018411597, 0.018415514, 0.018420167, 0.018423583, 0.018429694, 0.018434667, 0.018439889, 0.018442861, 0.018446319, 0.018451694, 0.018455097, 0.018457597, 0.018463611, 0.018466847, 0.018473125, 0.018479417, 0.018484528, 0.018488611, 0.018494847, 0.018500625, 0.018504417, 0.018507389, 0.018510806, 0.018513153, 0.018517, 0.018519431, 0.018524264, 0.018528931, 0.018533917, 0.018539819, 0.018544167, 0.018547708, 0.018552431, 0.018558333, 0.018562028, 0.018567236, 0.018572, 0.018577431, 0.018581417, 0.018586264, 0.018591861, 0.018598083, 0.018602, 0.018605861, 0.018612083, 0.018617653, 0.018620972, 0.018625125, 0.018630931], 'source}</msg>
<status status="PASS" starttime="20201110 08:33:51.914" endtime="20201110 08:33:51.916"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.910" endtime="20201110 08:33:51.917"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:51.920" level="INFO">${RESULT} = [{'time': 0.018411597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.018420167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:51.917" endtime="20201110 08:33:51.920"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:51.928" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [5.346999999999297e-06, 4.653000000000296e-06, 6.110999999999617e-06, 5.222000000002641e-06, 3.4579999999978517e-06, 3.4029999999990457e-06, 6.014000000002101e-06, 6.2779999999984515e-...</msg>
<status status="PASS" starttime="20201110 08:33:51.921" endtime="20201110 08:33:51.928"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.932" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:51.931" endtime="20201110 08:33:51.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.935" level="INFO">VALUE: [5.346999999999297e-06, 4.653000000000296e-06, 6.110999999999617e-06, 5.222000000002641e-06, 3.4579999999978517e-06, 3.4029999999990457e-06, 6.014000000002101e-06, 6.2779999999984515e-06, 5.110999999998617e-06, 6.235999999999742e-06, 3.7919999999989906e-06, 3.417000000002085e-06, 3.846999999997797e-06, 4.832999999999227e-06, 4.986000000001961e-06, 4.34800000000124e-06, 4.723000000001615e-06, 3.695000000001475e-06, 4.764000000000851e-06, 3.986000000000961e-06, 5.596999999999547e-06, 3.916999999999116e-06, 6.222000000000172e-06, 3.3189999999981568e-06, 5.806000000000561e-06]</msg>
<status status="PASS" starttime="20201110 08:33:51.933" endtime="20201110 08:33:51.935"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.929" endtime="20201110 08:33:51.936"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.938" endtime="20201110 08:33:51.939"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:51.942" endtime="20201110 08:33:51.962"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.940" endtime="20201110 08:33:51.962"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.936" endtime="20201110 08:33:51.963"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.572" endtime="20201110 08:33:51.963"></status>
</kw>
<msg timestamp="20201110 08:33:51.963" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.971" endtime="20201110 08:33:51.985"></status>
</kw>
<msg timestamp="20201110 08:33:51.986" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:51.969" endtime="20201110 08:33:51.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.988" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:51.987" endtime="20201110 08:33:51.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.989" endtime="20201110 08:33:51.991"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.967" endtime="20201110 08:33:51.992"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.965" endtime="20201110 08:33:51.992"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.998" endtime="20201110 08:33:52.265"></status>
</kw>
<msg timestamp="20201110 08:33:52.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017550542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017553958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:51.997" endtime="20201110 08:33:52.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:52.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017550542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017553958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:52.268" endtime="20201110 08:33:52.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.274" endtime="20201110 08:33:52.275"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.994" endtime="20201110 08:33:52.276"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.993" endtime="20201110 08:33:52.276"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:52.280" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:52.279" endtime="20201110 08:33:52.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:52.284" level="INFO">VALUE: [{'time': 0.017550542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017553958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4160000000026114e-06, 'source_diff': 3.4160000000026114e-06}, {'time': 0.017558736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.777999999996951e-06, 'source_diff': 4.777999999996951e-06}, {'time': 0.017562653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.917000000002585e-06, 'source_diff': 3.917000000002585e-06}, {'time': 0.017565444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.790999999998517e-06, 'source_diff': 2.790999999998517e-06}, {'time': 0.017568417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9729999999998646e-06, 'source_diff': 2.9729999999998646e-06}, {'time': 0.017572139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.722000000001141e-06, 'source_diff': 3.722000000001141e-06}, {'time': 0.017576556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.416999999999616e-06, 'source_diff': 4.416999999999616e-06}, {'time': 0.017582792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.235999999999742e-06, 'source_diff': 6.235999999999742e-06}, {'time': 0.017585958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.165999999998892e-06, 'source_diff': 3.165999999998892e-06}, {'time': 0.017592056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0979999999995205e-06, 'source_diff': 6.0979999999995205e-06}, {'time': 0.017596778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.722000000002141e-06, 'source_diff': 4.722000000002141e-06}, {'time': 0.017601472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.693999999999532e-06, 'source_diff': 4.693999999999532e-06}, {'time': 0.017605917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4449999999987555e-06, 'source_diff': 4.4449999999987555e-06}, {'time': 0.017610639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.722000000002141e-06, 'source_diff': 4.722000000002141e-06}, {'time': 0.017614667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.027999999999671e-06, 'source_diff': 4.027999999999671e-06}, {'time': 0.017619083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416000000000142e-06, 'source_diff': 4.416000000000142e-06}, {'time': 0.017624875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.792000000000991e-06, 'source_diff': 5.792000000000991e-06}, {'time': 0.017630028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.152999999997326e-06, 'source_diff': 5.152999999997326e-06}, {'time': 0.017634792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.764000000000851e-06, 'source_diff': 4.764000000000851e-06}, {'time': 0.01764075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.958000000000352e-06, 'source_diff': 5.958000000000352e-06}, {'time': 0.017644708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.957999999998352e-06, 'source_diff': 3.957999999998352e-06}, {'time': 0.017647444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7360000000031803e-06, 'source_diff': 2.7360000000031803e-06}, {'time': 0.017653722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2779999999984515e-06, 'source_diff': 6.2779999999984515e-06}, {'time': 0.017656444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.722000000000141e-06, 'source_diff': 2.722000000000141e-06}, {'time': 0.017662236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.792000000000991e-06, 'source_diff': 5.792000000000991e-06}, {'time': 0.017666556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.3199999999986305e-06, 'source_diff': 4.3199999999986305e-06}, {'time': 0.017669264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.708000000000571e-06, 'source_diff': 2.708000000000571e-06}, {'time': 0.017672042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7779999999984206e-06, 'source_diff': 2.7779999999984206e-06}, {'time': 0.017677639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.596999999999547e-06, 'source_diff': 5.596999999999547e-06}, {'time': 0.017681306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.667000000002335e-06, 'source_diff': 3.667000000002335e-06}, {'time': 0.017686333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.026999999997728e-06, 'source_diff': 5.026999999997728e-06}, {'time': 0.017692194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.861000000002836e-06, 'source_diff': 5.861000000002836e-06}, {'time': 0.017698319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.124999999999187e-06, 'source_diff': 6.124999999999187e-06}, {'time': 0.017704139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.820000000000131e-06, 'source_diff': 5.820000000000131e-06}, {'time': 0.017706583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.444000000000751e-06, 'source_diff': 2.444000000000751e-06}, {'time': 0.017710222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.6389999999997258e-06, 'source_diff': 3.6389999999997258e-06}, {'time': 0.017715, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.778000000000421e-06, 'source_diff': 4.778000000000421e-06}, {'time': 0.017718819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.818999999998657e-06, 'source_diff': 3.818999999998657e-06}, {'time': 0.017723431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.61200000000106e-06, 'source_diff': 4.61200000000106e-06}, {'time': 0.017728931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.499999999998562e-06, 'source_diff': 5.499999999998562e-06}, {'time': 0.017734847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.916000000001642e-06, 'source_diff': 5.916000000001642e-06}, {'time': 0.017740944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.097000000000047e-06, 'source_diff': 6.097000000000047e-06}, {'time': 0.017744236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2919999999984906e-06, 'source_diff': 3.2919999999984906e-06}, {'time': 0.017747458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.222000000000641e-06, 'source_diff': 3.222000000000641e-06}, {'time': 0.017752181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.722999999998145e-06, 'source_diff': 4.722999999998145e-06}, {'time': 0.017757028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.847000000002266e-06, 'source_diff': 4.847000000002266e-06}, {'time': 0.017759514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.485999999999461e-06, 'source_diff': 2.485999999999461e-06}, {'time': 0.017763861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.346999999998297e-06, 'source_diff': 4.346999999998297e-06}, {'time': 0.017769292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.431000000000186e-06, 'source_diff': 5.431000000000186e-06}]</msg>
<status status="PASS" starttime="20201110 08:33:52.281" endtime="20201110 08:33:52.285"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.277" endtime="20201110 08:33:52.286"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:52.299" level="INFO">${debug-compressed} = {'source_diff': [0, 3.4160000000026114e-06, 4.777999999996951e-06, 3.917000000002585e-06, 2.790999999998517e-06, 2.9729999999998646e-06, 3.722000000001141e-06, 4.416999999999616e-06, 6.235999999999742...</msg>
<status status="PASS" starttime="20201110 08:33:52.286" endtime="20201110 08:33:52.300"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:52.303" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:52.302" endtime="20201110 08:33:52.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:52.306" level="INFO">VALUE: {'source_diff': [0, 3.4160000000026114e-06, 4.777999999996951e-06, 3.917000000002585e-06, 2.790999999998517e-06, 2.9729999999998646e-06, 3.722000000001141e-06, 4.416999999999616e-06, 6.235999999999742e-06, 3.165999999998892e-06, 6.0979999999995205e-06, 4.722000000002141e-06, 4.693999999999532e-06, 4.4449999999987555e-06, 4.722000000002141e-06, 4.027999999999671e-06, 4.416000000000142e-06, 5.792000000000991e-06, 5.152999999997326e-06, 4.764000000000851e-06, 5.958000000000352e-06, 3.957999999998352e-06, 2.7360000000031803e-06, 6.2779999999984515e-06, 2.722000000000141e-06, 5.792000000000991e-06, 4.3199999999986305e-06, 2.708000000000571e-06, 2.7779999999984206e-06, 5.596999999999547e-06, 3.667000000002335e-06, 5.026999999997728e-06, 5.861000000002836e-06, 6.124999999999187e-06, 5.820000000000131e-06, 2.444000000000751e-06, 3.6389999999997258e-06, 4.778000000000421e-06, 3.818999999998657e-06, 4.61200000000106e-06, 5.499999999998562e-06, 5.916000000001642e-06, 6.097000000000047e-06, 3.2919999999984906e-06, 3.222000000000641e-06, 4.722999999998145e-06, 4.847000000002266e-06, 2.485999999999461e-06, 4.346999999998297e-06, 5.431000000000186e-06], 'eventdiff': [0, 3.4160000000026114e-06, 4.777999999996951e-06, 3.917000000002585e-06, 2.790999999998517e-06, 2.9729999999998646e-06, 3.722000000001141e-06, 4.416999999999616e-06, 6.235999999999742e-06, 3.165999999998892e-06, 6.0979999999995205e-06, 4.722000000002141e-06, 4.693999999999532e-06, 4.4449999999987555e-06, 4.722000000002141e-06, 4.027999999999671e-06, 4.416000000000142e-06, 5.792000000000991e-06, 5.152999999997326e-06, 4.764000000000851e-06, 5.958000000000352e-06, 3.957999999998352e-06, 2.7360000000031803e-06, 6.2779999999984515e-06, 2.722000000000141e-06, 5.792000000000991e-06, 4.3199999999986305e-06, 2.708000000000571e-06, 2.7779999999984206e-06, 5.596999999999547e-06, 3.667000000002335e-06, 5.026999999997728e-06, 5.861000000002836e-06, 6.124999999999187e-06, 5.820000000000131e-06, 2.444000000000751e-06, 3.6389999999997258e-06, 4.778000000000421e-06, 3.818999999998657e-06, 4.61200000000106e-06, 5.499999999998562e-06, 5.916000000001642e-06, 6.097000000000047e-06, 3.2919999999984906e-06, 3.222000000000641e-06, 4.722999999998145e-06, 4.847000000002266e-06, 2.485999999999461e-06, 4.346999999998297e-06, 5.431000000000186e-06], 'time': [0.017550542, 0.017553958, 0.017558736, 0.017562653, 0.017565444, 0.017568417, 0.017572139, 0.017576556, 0.017582792, 0.017585958, 0.017592056, 0.017596778, 0.017601472, 0.017605917, 0.017610639, 0.017614667, 0.017619083, 0.017624875, 0.017630028, 0.017634792, 0.01764075, 0.017644708, 0.017647444, 0.017653722, 0.017656444, 0.017662236, 0.017666556, 0.017669264, 0.017672042, 0.017677639, 0.017681306, 0.017686333, 0.017692194, 0.017698319, 0.017704139, 0.017706583, 0.017710222, 0.017715, 0.017718819, 0.017723431, 0.017728931, 0.017734847, 0.017740944, 0.017744236, 0.017747458, 0.017752181, 0.017757028, 0.017759514, 0.017763861, 0.017769292], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC']}</msg>
<status status="PASS" starttime="20201110 08:33:52.304" endtime="20201110 08:33:52.307"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.300" endtime="20201110 08:33:52.308"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:52.311" level="INFO">${RESULT} = [{'time': 0.017553958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4160000000026114e-06, 'source_diff': 3.4160000000026114e-06}, {'time': 0.017562653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:52.308" endtime="20201110 08:33:52.311"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:52.319" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [3.4160000000026114e-06, 3.917000000002585e-06, 2.9729999999998646e-06, 4.416999999999616e-06, 3.165999999998892e-06, 4.722000000002141e-06, 4.4449999999987555e-06, 4.027999999999671e-...</msg>
<status status="PASS" starttime="20201110 08:33:52.312" endtime="20201110 08:33:52.320"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:52.324" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:52.323" endtime="20201110 08:33:52.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:52.326" level="INFO">VALUE: [3.4160000000026114e-06, 3.917000000002585e-06, 2.9729999999998646e-06, 4.416999999999616e-06, 3.165999999998892e-06, 4.722000000002141e-06, 4.4449999999987555e-06, 4.027999999999671e-06, 5.792000000000991e-06, 4.764000000000851e-06, 3.957999999998352e-06, 6.2779999999984515e-06, 5.792000000000991e-06, 2.708000000000571e-06, 5.596999999999547e-06, 5.026999999997728e-06, 6.124999999999187e-06, 2.444000000000751e-06, 4.778000000000421e-06, 4.61200000000106e-06, 5.916000000001642e-06, 3.2919999999984906e-06, 4.722999999998145e-06, 2.485999999999461e-06, 5.431000000000186e-06]</msg>
<status status="PASS" starttime="20201110 08:33:52.325" endtime="20201110 08:33:52.327"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.320" endtime="20201110 08:33:52.327"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.329" endtime="20201110 08:33:52.331"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:52.333" endtime="20201110 08:33:52.352"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.331" endtime="20201110 08:33:52.353"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.328" endtime="20201110 08:33:52.353"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.964" endtime="20201110 08:33:52.353"></status>
</kw>
<msg timestamp="20201110 08:33:52.354" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.361" endtime="20201110 08:33:52.376"></status>
</kw>
<msg timestamp="20201110 08:33:52.376" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:52.360" endtime="20201110 08:33:52.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:52.379" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:52.377" endtime="20201110 08:33:52.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.380" endtime="20201110 08:33:52.381"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.357" endtime="20201110 08:33:52.382"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.355" endtime="20201110 08:33:52.382"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.389" endtime="20201110 08:33:52.656"></status>
</kw>
<msg timestamp="20201110 08:33:52.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017528417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017530931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:52.387" endtime="20201110 08:33:52.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:52.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017528417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017530931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:52.659" endtime="20201110 08:33:52.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.665" endtime="20201110 08:33:52.666"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.384" endtime="20201110 08:33:52.667"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.383" endtime="20201110 08:33:52.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:52.671" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:52.670" endtime="20201110 08:33:52.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:52.675" level="INFO">VALUE: [{'time': 0.017528417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017530931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5139999999986007e-06, 'source_diff': 2.5139999999986007e-06}, {'time': 0.017535361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.429999999999712e-06, 'source_diff': 4.429999999999712e-06}, {'time': 0.017541014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.017546361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.017550403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.041999999999241e-06, 'source_diff': 4.041999999999241e-06}, {'time': 0.017555375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.972000000002391e-06, 'source_diff': 4.972000000002391e-06}, {'time': 0.017559778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.017564639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.860999999998367e-06, 'source_diff': 4.860999999998367e-06}, {'time': 0.01757075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.110999999999617e-06, 'source_diff': 6.110999999999617e-06}, {'time': 0.017574083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.333000000001196e-06, 'source_diff': 3.333000000001196e-06}, {'time': 0.017578556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.472999999997895e-06, 'source_diff': 4.472999999997895e-06}, {'time': 0.017581403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.847000000000266e-06, 'source_diff': 2.847000000000266e-06}, {'time': 0.017584764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.361000000000336e-06, 'source_diff': 3.361000000000336e-06}, {'time': 0.017589, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.236000000001211e-06, 'source_diff': 4.236000000001211e-06}, {'time': 0.017591903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9029999999985456e-06, 'source_diff': 2.9029999999985456e-06}, {'time': 0.017594306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.403000000001515e-06, 'source_diff': 2.403000000001515e-06}, {'time': 0.017597667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.361000000000336e-06, 'source_diff': 3.361000000000336e-06}, {'time': 0.017601292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.625000000000156e-06, 'source_diff': 3.625000000000156e-06}, {'time': 0.017604986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.693999999998532e-06, 'source_diff': 3.693999999998532e-06}, {'time': 0.017608847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.861000000000836e-06, 'source_diff': 3.861000000000836e-06}, {'time': 0.017612944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.096999999998047e-06, 'source_diff': 4.096999999998047e-06}, {'time': 0.017616347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.403000000002515e-06, 'source_diff': 3.403000000002515e-06}, {'time': 0.017622569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.017624944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3749999999989058e-06, 'source_diff': 2.3749999999989058e-06}, {'time': 0.017629458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.514000000000601e-06, 'source_diff': 4.514000000000601e-06}, {'time': 0.017635444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.017640306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86200000000131e-06, 'source_diff': 4.86200000000131e-06}, {'time': 0.017645764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.457999999999852e-06, 'source_diff': 5.457999999999852e-06}, {'time': 0.01764975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9859999999974915e-06, 'source_diff': 3.9859999999974915e-06}, {'time': 0.017653278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.52800000000264e-06, 'source_diff': 3.52800000000264e-06}, {'time': 0.017656014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.735999999999711e-06, 'source_diff': 2.735999999999711e-06}, {'time': 0.017661986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.017665458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4719999999974216e-06, 'source_diff': 3.4719999999974216e-06}, {'time': 0.017670319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.861000000001836e-06, 'source_diff': 4.861000000001836e-06}, {'time': 0.017674847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.528000000000171e-06, 'source_diff': 4.528000000000171e-06}, {'time': 0.017679139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.291999999999491e-06, 'source_diff': 4.291999999999491e-06}, {'time': 0.017683111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.972000000001391e-06, 'source_diff': 3.972000000001391e-06}, {'time': 0.017688264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.152999999997326e-06, 'source_diff': 5.152999999997326e-06}, {'time': 0.017693361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.097000000002516e-06, 'source_diff': 5.097000000002516e-06}, {'time': 0.017697111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.750000000000281e-06, 'source_diff': 3.750000000000281e-06}, {'time': 0.017700819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7079999999981017e-06, 'source_diff': 3.7079999999981017e-06}, {'time': 0.017704889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.07000000000185e-06, 'source_diff': 4.07000000000185e-06}, {'time': 0.017707958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0689999999979067e-06, 'source_diff': 3.0689999999979067e-06}, {'time': 0.017714014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.056000000000811e-06, 'source_diff': 6.056000000000811e-06}, {'time': 0.017718972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.957999999999352e-06, 'source_diff': 4.957999999999352e-06}, {'time': 0.017724764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.792000000000991e-06, 'source_diff': 5.792000000000991e-06}, {'time': 0.017728736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.971999999997922e-06, 'source_diff': 3.971999999997922e-06}, {'time': 0.017732417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.681000000001905e-06, 'source_diff': 3.681000000001905e-06}, {'time': 0.017737528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.110999999998617e-06, 'source_diff': 5.110999999998617e-06}]</msg>
<status status="PASS" starttime="20201110 08:33:52.672" endtime="20201110 08:33:52.676"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.668" endtime="20201110 08:33:52.676"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:52.691" level="INFO">${debug-compressed} = {'source_diff': [0, 2.5139999999986007e-06, 4.429999999999712e-06, 5.653000000001296e-06, 5.346999999999297e-06, 4.041999999999241e-06, 4.972000000002391e-06, 4.403000000000046e-06, 4.860999999998367e...</msg>
<status status="PASS" starttime="20201110 08:33:52.677" endtime="20201110 08:33:52.691"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:52.695" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:52.694" endtime="20201110 08:33:52.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:52.698" level="INFO">VALUE: {'source_diff': [0, 2.5139999999986007e-06, 4.429999999999712e-06, 5.653000000001296e-06, 5.346999999999297e-06, 4.041999999999241e-06, 4.972000000002391e-06, 4.403000000000046e-06, 4.860999999998367e-06, 6.110999999999617e-06, 3.333000000001196e-06, 4.472999999997895e-06, 2.847000000000266e-06, 3.361000000000336e-06, 4.236000000001211e-06, 2.9029999999985456e-06, 2.403000000001515e-06, 3.361000000000336e-06, 3.625000000000156e-06, 3.693999999998532e-06, 3.861000000000836e-06, 4.096999999998047e-06, 3.403000000002515e-06, 6.222000000000172e-06, 2.3749999999989058e-06, 4.514000000000601e-06, 5.985999999999492e-06, 4.86200000000131e-06, 5.457999999999852e-06, 3.9859999999974915e-06, 3.52800000000264e-06, 2.735999999999711e-06, 5.971999999999922e-06, 3.4719999999974216e-06, 4.861000000001836e-06, 4.528000000000171e-06, 4.291999999999491e-06, 3.972000000001391e-06, 5.152999999997326e-06, 5.097000000002516e-06, 3.750000000000281e-06, 3.7079999999981017e-06, 4.07000000000185e-06, 3.0689999999979067e-06, 6.056000000000811e-06, 4.957999999999352e-06, 5.792000000000991e-06, 3.971999999997922e-06, 3.681000000001905e-06, 5.110999999998617e-06], 'eventdiff': [0, 2.5139999999986007e-06, 4.429999999999712e-06, 5.653000000001296e-06, 5.346999999999297e-06, 4.041999999999241e-06, 4.972000000002391e-06, 4.403000000000046e-06, 4.860999999998367e-06, 6.110999999999617e-06, 3.333000000001196e-06, 4.472999999997895e-06, 2.847000000000266e-06, 3.361000000000336e-06, 4.236000000001211e-06, 2.9029999999985456e-06, 2.403000000001515e-06, 3.361000000000336e-06, 3.625000000000156e-06, 3.693999999998532e-06, 3.861000000000836e-06, 4.096999999998047e-06, 3.403000000002515e-06, 6.222000000000172e-06, 2.3749999999989058e-06, 4.514000000000601e-06, 5.985999999999492e-06, 4.86200000000131e-06, 5.457999999999852e-06, 3.9859999999974915e-06, 3.52800000000264e-06, 2.735999999999711e-06, 5.971999999999922e-06, 3.4719999999974216e-06, 4.861000000001836e-06, 4.528000000000171e-06, 4.291999999999491e-06, 3.972000000001391e-06, 5.152999999997326e-06, 5.097000000002516e-06, 3.750000000000281e-06, 3.7079999999981017e-06, 4.07000000000185e-06, 3.0689999999979067e-06, 6.056000000000811e-06, 4.957999999999352e-06, 5.792000000000991e-06, 3.971999999997922e-06, 3.681000000001905e-06, 5.110999999998617e-06], 'time': [0.017528417, 0.017530931, 0.017535361, 0.017541014, 0.017546361, 0.017550403, 0.017555375, 0.017559778, 0.017564639, 0.01757075, 0.017574083, 0.017578556, 0.017581403, 0.017584764, 0.017589, 0.017591903, 0.017594306, 0.017597667, 0.017601292, 0.017604986, 0.017608847, 0.017612944, 0.017616347, 0.017622569, 0.017624944, 0.017629458, 0.017635444, 0.017640306, 0.017645764, 0.01764975, 0.017653278, 0.017656014, 0.017661986, 0.017665458, 0.017670319, 0.017674847, 0.017679139, 0.017683111, 0.017688264, 0.017693361, 0.017697111, 0.017700819, 0.017704889, 0.017707958, 0.017714014, 0.017718972, 0.017724764, 0.017728736, 0.017732417, 0.017737528], 'source}</msg>
<status status="PASS" starttime="20201110 08:33:52.696" endtime="20201110 08:33:52.698"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.692" endtime="20201110 08:33:52.699"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:52.702" level="INFO">${RESULT} = [{'time': 0.017530931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5139999999986007e-06, 'source_diff': 2.5139999999986007e-06}, {'time': 0.017541014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:52.700" endtime="20201110 08:33:52.703"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:52.710" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [2.5139999999986007e-06, 5.653000000001296e-06, 4.041999999999241e-06, 4.403000000000046e-06, 6.110999999999617e-06, 4.472999999997895e-06, 3.361000000000336e-06, 2.9029999999985456e-0...</msg>
<status status="PASS" starttime="20201110 08:33:52.703" endtime="20201110 08:33:52.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:52.715" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:52.714" endtime="20201110 08:33:52.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:52.717" level="INFO">VALUE: [2.5139999999986007e-06, 5.653000000001296e-06, 4.041999999999241e-06, 4.403000000000046e-06, 6.110999999999617e-06, 4.472999999997895e-06, 3.361000000000336e-06, 2.9029999999985456e-06, 3.361000000000336e-06, 3.693999999998532e-06, 4.096999999998047e-06, 6.222000000000172e-06, 4.514000000000601e-06, 4.86200000000131e-06, 3.9859999999974915e-06, 2.735999999999711e-06, 3.4719999999974216e-06, 4.528000000000171e-06, 3.972000000001391e-06, 5.097000000002516e-06, 3.7079999999981017e-06, 3.0689999999979067e-06, 4.957999999999352e-06, 3.971999999997922e-06, 5.110999999998617e-06]</msg>
<status status="PASS" starttime="20201110 08:33:52.716" endtime="20201110 08:33:52.717"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.711" endtime="20201110 08:33:52.718"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.720" endtime="20201110 08:33:52.722"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:52.724" endtime="20201110 08:33:52.743"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.722" endtime="20201110 08:33:52.744"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.719" endtime="20201110 08:33:52.744"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.354" endtime="20201110 08:33:52.744"></status>
</kw>
<msg timestamp="20201110 08:33:52.745" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.752" endtime="20201110 08:33:52.767"></status>
</kw>
<msg timestamp="20201110 08:33:52.768" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:52.751" endtime="20201110 08:33:52.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:52.770" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:52.769" endtime="20201110 08:33:52.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.771" endtime="20201110 08:33:52.773"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.748" endtime="20201110 08:33:52.773"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.746" endtime="20201110 08:33:52.774"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.780" endtime="20201110 08:33:53.048"></status>
</kw>
<msg timestamp="20201110 08:33:53.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017563153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017567236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:52.779" endtime="20201110 08:33:53.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017563153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017567236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:53.051" endtime="20201110 08:33:53.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.057" endtime="20201110 08:33:53.059"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.776" endtime="20201110 08:33:53.060"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.774" endtime="20201110 08:33:53.060"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.064" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:53.063" endtime="20201110 08:33:53.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.068" level="INFO">VALUE: [{'time': 0.017563153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017567236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.082999999998477e-06, 'source_diff': 4.082999999998477e-06}, {'time': 0.017573417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.181000000000936e-06, 'source_diff': 6.181000000000936e-06}, {'time': 0.017577694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.277000000000447e-06, 'source_diff': 4.277000000000447e-06}, {'time': 0.017581847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.152999999999796e-06, 'source_diff': 4.152999999999796e-06}, {'time': 0.017587278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.431000000000186e-06, 'source_diff': 5.431000000000186e-06}, {'time': 0.017590306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0279999999986706e-06, 'source_diff': 3.0279999999986706e-06}, {'time': 0.017595278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.971999999998922e-06, 'source_diff': 4.971999999998922e-06}, {'time': 0.017599, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.722000000001141e-06, 'source_diff': 3.722000000001141e-06}, {'time': 0.017601736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.735999999999711e-06, 'source_diff': 2.735999999999711e-06}, {'time': 0.017605708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.972000000001391e-06, 'source_diff': 3.972000000001391e-06}, {'time': 0.017611375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.666999999997396e-06, 'source_diff': 5.666999999997396e-06}, {'time': 0.01761625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.875000000001406e-06, 'source_diff': 4.875000000001406e-06}, {'time': 0.017620194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.943999999998782e-06, 'source_diff': 3.943999999998782e-06}, {'time': 0.017624042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.84800000000074e-06, 'source_diff': 3.84800000000074e-06}, {'time': 0.017627972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.929999999999212e-06, 'source_diff': 3.929999999999212e-06}, {'time': 0.017633931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.9589999999998255e-06, 'source_diff': 5.9589999999998255e-06}, {'time': 0.017638028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.017644208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.180000000001462e-06, 'source_diff': 6.180000000001462e-06}, {'time': 0.017648736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.528000000000171e-06, 'source_diff': 4.528000000000171e-06}, {'time': 0.017653708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.971999999998922e-06, 'source_diff': 4.971999999998922e-06}, {'time': 0.017659514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.806000000000561e-06, 'source_diff': 5.806000000000561e-06}, {'time': 0.017662417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9029999999985456e-06, 'source_diff': 2.9029999999985456e-06}, {'time': 0.017666069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.651999999999822e-06, 'source_diff': 3.651999999999822e-06}, {'time': 0.017672, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.931000000000686e-06, 'source_diff': 5.931000000000686e-06}, {'time': 0.017675403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4029999999990457e-06, 'source_diff': 3.4029999999990457e-06}, {'time': 0.017677875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.471999999999891e-06, 'source_diff': 2.471999999999891e-06}, {'time': 0.017682792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.917000000000116e-06, 'source_diff': 4.917000000000116e-06}, {'time': 0.017687708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.916000000000642e-06, 'source_diff': 4.916000000000642e-06}, {'time': 0.017691986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.277999999999921e-06, 'source_diff': 4.277999999999921e-06}, {'time': 0.017696708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.721999999998672e-06, 'source_diff': 4.721999999998672e-06}, {'time': 0.017700319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.611000000000586e-06, 'source_diff': 3.611000000000586e-06}, {'time': 0.017705583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.264000000001351e-06, 'source_diff': 5.264000000001351e-06}, {'time': 0.017709083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.500000000000031e-06, 'source_diff': 3.500000000000031e-06}, {'time': 0.017711611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5279999999981706e-06, 'source_diff': 2.5279999999981706e-06}, {'time': 0.017716597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.986000000001961e-06, 'source_diff': 4.986000000001961e-06}, {'time': 0.017721819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.221999999999172e-06, 'source_diff': 5.221999999999172e-06}, {'time': 0.017726792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.973000000001865e-06, 'source_diff': 4.973000000001865e-06}, {'time': 0.017731403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.610999999998117e-06, 'source_diff': 4.610999999998117e-06}, {'time': 0.017735306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.902999999999546e-06, 'source_diff': 3.902999999999546e-06}, {'time': 0.017738347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0410000000022364e-06, 'source_diff': 3.0410000000022364e-06}, {'time': 0.017740903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5559999999973104e-06, 'source_diff': 2.5559999999973104e-06}, {'time': 0.017746306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.403000000001046e-06, 'source_diff': 5.403000000001046e-06}, {'time': 0.017750958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.652000000000822e-06, 'source_diff': 4.652000000000822e-06}, {'time': 0.017754306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.3480000000002397e-06, 'source_diff': 3.3480000000002397e-06}, {'time': 0.017757917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.611000000000586e-06, 'source_diff': 3.611000000000586e-06}, {'time': 0.017760833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.915999999998642e-06, 'source_diff': 2.915999999998642e-06}, {'time': 0.017766917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0839999999999506e-06, 'source_diff': 6.0839999999999506e-06}, {'time': 0.017772083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.166000000000892e-06, 'source_diff': 5.166000000000892e-06}, {'time': 0.017775056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9729999999998646e-06, 'source_diff': 2.9729999999998646e-06}]</msg>
<status status="PASS" starttime="20201110 08:33:53.066" endtime="20201110 08:33:53.069"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.061" endtime="20201110 08:33:53.070"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:53.084" level="INFO">${debug-compressed} = {'source_diff': [0, 4.082999999998477e-06, 6.181000000000936e-06, 4.277000000000447e-06, 4.152999999999796e-06, 5.431000000000186e-06, 3.0279999999986706e-06, 4.971999999998922e-06, 3.722000000001141e...</msg>
<status status="PASS" starttime="20201110 08:33:53.071" endtime="20201110 08:33:53.084"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.087" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:53.086" endtime="20201110 08:33:53.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.091" level="INFO">VALUE: {'source_diff': [0, 4.082999999998477e-06, 6.181000000000936e-06, 4.277000000000447e-06, 4.152999999999796e-06, 5.431000000000186e-06, 3.0279999999986706e-06, 4.971999999998922e-06, 3.722000000001141e-06, 2.735999999999711e-06, 3.972000000001391e-06, 5.666999999997396e-06, 4.875000000001406e-06, 3.943999999998782e-06, 3.84800000000074e-06, 3.929999999999212e-06, 5.9589999999998255e-06, 4.097000000001516e-06, 6.180000000001462e-06, 4.528000000000171e-06, 4.971999999998922e-06, 5.806000000000561e-06, 2.9029999999985456e-06, 3.651999999999822e-06, 5.931000000000686e-06, 3.4029999999990457e-06, 2.471999999999891e-06, 4.917000000000116e-06, 4.916000000000642e-06, 4.277999999999921e-06, 4.721999999998672e-06, 3.611000000000586e-06, 5.264000000001351e-06, 3.500000000000031e-06, 2.5279999999981706e-06, 4.986000000001961e-06, 5.221999999999172e-06, 4.973000000001865e-06, 4.610999999998117e-06, 3.902999999999546e-06, 3.0410000000022364e-06, 2.5559999999973104e-06, 5.403000000001046e-06, 4.652000000000822e-06, 3.3480000000002397e-06, 3.611000000000586e-06, 2.915999999998642e-06, 6.0839999999999506e-06, 5.166000000000892e-06, 2.9729999999998646e-06], 'eventdiff': [0, 4.082999999998477e-06, 6.181000000000936e-06, 4.277000000000447e-06, 4.152999999999796e-06, 5.431000000000186e-06, 3.0279999999986706e-06, 4.971999999998922e-06, 3.722000000001141e-06, 2.735999999999711e-06, 3.972000000001391e-06, 5.666999999997396e-06, 4.875000000001406e-06, 3.943999999998782e-06, 3.84800000000074e-06, 3.929999999999212e-06, 5.9589999999998255e-06, 4.097000000001516e-06, 6.180000000001462e-06, 4.528000000000171e-06, 4.971999999998922e-06, 5.806000000000561e-06, 2.9029999999985456e-06, 3.651999999999822e-06, 5.931000000000686e-06, 3.4029999999990457e-06, 2.471999999999891e-06, 4.917000000000116e-06, 4.916000000000642e-06, 4.277999999999921e-06, 4.721999999998672e-06, 3.611000000000586e-06, 5.264000000001351e-06, 3.500000000000031e-06, 2.5279999999981706e-06, 4.986000000001961e-06, 5.221999999999172e-06, 4.973000000001865e-06, 4.610999999998117e-06, 3.902999999999546e-06, 3.0410000000022364e-06, 2.5559999999973104e-06, 5.403000000001046e-06, 4.652000000000822e-06, 3.3480000000002397e-06, 3.611000000000586e-06, 2.915999999998642e-06, 6.0839999999999506e-06, 5.166000000000892e-06, 2.9729999999998646e-06], 'time': [0.017563153, 0.017567236, 0.017573417, 0.017577694, 0.017581847, 0.017587278, 0.017590306, 0.017595278, 0.017599, 0.017601736, 0.017605708, 0.017611375, 0.01761625, 0.017620194, 0.017624042, 0.017627972, 0.017633931, 0.017638028, 0.017644208, 0.017648736, 0.017653708, 0.017659514, 0.017662417, 0.017666069, 0.017672, 0.017675403, 0.017677875, 0.017682792, 0.017687708, 0.017691986, 0.017696708, 0.017700319, 0.017705583, 0.017709083, 0.017711611, 0.017716597, 0.017721819, 0.017726792, 0.017731403, 0.017735306, 0.017738347, 0.017740903, 0.017746306, 0.017750958, 0.017754306, 0.017757917, 0.017760833, 0.017766917, 0.017772083, 0.017775056], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC']}</msg>
<status status="PASS" starttime="20201110 08:33:53.088" endtime="20201110 08:33:53.091"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.084" endtime="20201110 08:33:53.092"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:53.095" level="INFO">${RESULT} = [{'time': 0.017567236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.082999999998477e-06, 'source_diff': 4.082999999998477e-06}, {'time': 0.017577694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:53.092" endtime="20201110 08:33:53.095"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:53.103" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.082999999998477e-06, 4.277000000000447e-06, 5.431000000000186e-06, 4.971999999998922e-06, 2.735999999999711e-06, 5.666999999997396e-06, 3.943999999998782e-06, 3.929999999999212e-06,...</msg>
<status status="PASS" starttime="20201110 08:33:53.096" endtime="20201110 08:33:53.103"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.107" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:53.106" endtime="20201110 08:33:53.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.110" level="INFO">VALUE: [4.082999999998477e-06, 4.277000000000447e-06, 5.431000000000186e-06, 4.971999999998922e-06, 2.735999999999711e-06, 5.666999999997396e-06, 3.943999999998782e-06, 3.929999999999212e-06, 4.097000000001516e-06, 4.528000000000171e-06, 5.806000000000561e-06, 3.651999999999822e-06, 3.4029999999990457e-06, 4.917000000000116e-06, 4.277999999999921e-06, 3.611000000000586e-06, 3.500000000000031e-06, 4.986000000001961e-06, 4.973000000001865e-06, 3.902999999999546e-06, 2.5559999999973104e-06, 4.652000000000822e-06, 3.611000000000586e-06, 6.0839999999999506e-06, 2.9729999999998646e-06]</msg>
<status status="PASS" starttime="20201110 08:33:53.108" endtime="20201110 08:33:53.110"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.104" endtime="20201110 08:33:53.111"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.113" endtime="20201110 08:33:53.114"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:53.117" endtime="20201110 08:33:53.136"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.115" endtime="20201110 08:33:53.136"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.112" endtime="20201110 08:33:53.137"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.745" endtime="20201110 08:33:53.137"></status>
</kw>
<msg timestamp="20201110 08:33:53.137" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.145" endtime="20201110 08:33:53.160"></status>
</kw>
<msg timestamp="20201110 08:33:53.160" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:53.144" endtime="20201110 08:33:53.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.163" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:53.161" endtime="20201110 08:33:53.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.164" endtime="20201110 08:33:53.165"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.141" endtime="20201110 08:33:53.166"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.139" endtime="20201110 08:33:53.166"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.174" endtime="20201110 08:33:53.441"></status>
</kw>
<msg timestamp="20201110 08:33:53.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017592028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017595806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:53.172" endtime="20201110 08:33:53.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017592028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017595806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:53.444" endtime="20201110 08:33:53.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.450" endtime="20201110 08:33:53.451"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.169" endtime="20201110 08:33:53.452"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.167" endtime="20201110 08:33:53.452"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.456" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:53.455" endtime="20201110 08:33:53.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.460" level="INFO">VALUE: [{'time': 0.017592028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017595806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7779999999994207e-06, 'source_diff': 3.7779999999994207e-06}, {'time': 0.017600278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.472000000001891e-06, 'source_diff': 4.472000000001891e-06}, {'time': 0.017605944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.665999999997923e-06, 'source_diff': 5.665999999997923e-06}, {'time': 0.017610056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.11200000000056e-06, 'source_diff': 4.11200000000056e-06}, {'time': 0.017616014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.958000000000352e-06, 'source_diff': 5.958000000000352e-06}, {'time': 0.017620306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.291999999999491e-06, 'source_diff': 4.291999999999491e-06}, {'time': 0.017624653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.347000000001766e-06, 'source_diff': 4.347000000001766e-06}, {'time': 0.017627694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.040999999998767e-06, 'source_diff': 3.040999999998767e-06}, {'time': 0.017631792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.09800000000099e-06, 'source_diff': 4.09800000000099e-06}, {'time': 0.017636653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.860999999998367e-06, 'source_diff': 4.860999999998367e-06}, {'time': 0.017639875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.222000000000641e-06, 'source_diff': 3.222000000000641e-06}, {'time': 0.017644181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.305999999999061e-06, 'source_diff': 4.305999999999061e-06}, {'time': 0.017648583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.402000000000572e-06, 'source_diff': 4.402000000000572e-06}, {'time': 0.017651861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.27800000000239e-06, 'source_diff': 3.27800000000239e-06}, {'time': 0.017656583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.721999999998672e-06, 'source_diff': 4.721999999998672e-06}, {'time': 0.017659181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5979999999994896e-06, 'source_diff': 2.5979999999994896e-06}, {'time': 0.017663417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.236000000001211e-06, 'source_diff': 4.236000000001211e-06}, {'time': 0.017669042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.624999999998687e-06, 'source_diff': 5.624999999998687e-06}, {'time': 0.017674431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.389000000001476e-06, 'source_diff': 5.389000000001476e-06}, {'time': 0.017679569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.137999999998283e-06, 'source_diff': 5.137999999998283e-06}, {'time': 0.017683833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.264000000000351e-06, 'source_diff': 4.264000000000351e-06}, {'time': 0.017689542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7089999999995755e-06, 'source_diff': 5.7089999999995755e-06}, {'time': 0.017693764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.222000000001641e-06, 'source_diff': 4.222000000001641e-06}, {'time': 0.017697111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.347000000000766e-06, 'source_diff': 3.347000000000766e-06}, {'time': 0.017700847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7359999999972415e-06, 'source_diff': 3.7359999999972415e-06}, {'time': 0.017704083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.236000000000211e-06, 'source_diff': 3.236000000000211e-06}, {'time': 0.017709222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.139000000001226e-06, 'source_diff': 5.139000000001226e-06}, {'time': 0.017713097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.875000000000406e-06, 'source_diff': 3.875000000000406e-06}, {'time': 0.017716111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0139999999991007e-06, 'source_diff': 3.0139999999991007e-06}, {'time': 0.017718542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.431000000000655e-06, 'source_diff': 2.431000000000655e-06}, {'time': 0.01772375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.207999999999602e-06, 'source_diff': 5.207999999999602e-06}, {'time': 0.017728111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.361000000001336e-06, 'source_diff': 4.361000000001336e-06}, {'time': 0.017733722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.610999999999117e-06, 'source_diff': 5.610999999999117e-06}, {'time': 0.017738931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2089999999990755e-06, 'source_diff': 5.2089999999990755e-06}, {'time': 0.017743222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.291000000000017e-06, 'source_diff': 4.291000000000017e-06}, {'time': 0.017745764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.54200000000121e-06, 'source_diff': 2.54200000000121e-06}, {'time': 0.01774975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.986000000000961e-06, 'source_diff': 3.986000000000961e-06}, {'time': 0.017756014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2639999999988816e-06, 'source_diff': 6.2639999999988816e-06}, {'time': 0.017759375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.361000000000336e-06, 'source_diff': 3.361000000000336e-06}, {'time': 0.017761903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5279999999981706e-06, 'source_diff': 2.5279999999981706e-06}, {'time': 0.017764264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.360999999999336e-06, 'source_diff': 2.360999999999336e-06}, {'time': 0.017768264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.000000000000531e-06, 'source_diff': 4.000000000000531e-06}, {'time': 0.017773458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.194000000000032e-06, 'source_diff': 5.194000000000032e-06}, {'time': 0.017777944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.486000000001461e-06, 'source_diff': 4.486000000001461e-06}, {'time': 0.017780347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4029999999980456e-06, 'source_diff': 2.4029999999980456e-06}, {'time': 0.017782889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.54200000000121e-06, 'source_diff': 2.54200000000121e-06}, {'time': 0.0177885, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.610999999999117e-06, 'source_diff': 5.610999999999117e-06}, {'time': 0.017791403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.903000000002015e-06, 'source_diff': 2.903000000002015e-06}, {'time': 0.017796819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.415999999997673e-06, 'source_diff': 5.415999999997673e-06}]</msg>
<status status="PASS" starttime="20201110 08:33:53.457" endtime="20201110 08:33:53.461"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.453" endtime="20201110 08:33:53.462"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:53.475" level="INFO">${debug-compressed} = {'source_diff': [0, 3.7779999999994207e-06, 4.472000000001891e-06, 5.665999999997923e-06, 4.11200000000056e-06, 5.958000000000352e-06, 4.291999999999491e-06, 4.347000000001766e-06, 3.040999999998767e-...</msg>
<status status="PASS" starttime="20201110 08:33:53.462" endtime="20201110 08:33:53.476"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.479" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:53.478" endtime="20201110 08:33:53.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.482" level="INFO">VALUE: {'source_diff': [0, 3.7779999999994207e-06, 4.472000000001891e-06, 5.665999999997923e-06, 4.11200000000056e-06, 5.958000000000352e-06, 4.291999999999491e-06, 4.347000000001766e-06, 3.040999999998767e-06, 4.09800000000099e-06, 4.860999999998367e-06, 3.222000000000641e-06, 4.305999999999061e-06, 4.402000000000572e-06, 3.27800000000239e-06, 4.721999999998672e-06, 2.5979999999994896e-06, 4.236000000001211e-06, 5.624999999998687e-06, 5.389000000001476e-06, 5.137999999998283e-06, 4.264000000000351e-06, 5.7089999999995755e-06, 4.222000000001641e-06, 3.347000000000766e-06, 3.7359999999972415e-06, 3.236000000000211e-06, 5.139000000001226e-06, 3.875000000000406e-06, 3.0139999999991007e-06, 2.431000000000655e-06, 5.207999999999602e-06, 4.361000000001336e-06, 5.610999999999117e-06, 5.2089999999990755e-06, 4.291000000000017e-06, 2.54200000000121e-06, 3.986000000000961e-06, 6.2639999999988816e-06, 3.361000000000336e-06, 2.5279999999981706e-06, 2.360999999999336e-06, 4.000000000000531e-06, 5.194000000000032e-06, 4.486000000001461e-06, 2.4029999999980456e-06, 2.54200000000121e-06, 5.610999999999117e-06, 2.903000000002015e-06, 5.415999999997673e-06], 'eventdiff': [0, 3.7779999999994207e-06, 4.472000000001891e-06, 5.665999999997923e-06, 4.11200000000056e-06, 5.958000000000352e-06, 4.291999999999491e-06, 4.347000000001766e-06, 3.040999999998767e-06, 4.09800000000099e-06, 4.860999999998367e-06, 3.222000000000641e-06, 4.305999999999061e-06, 4.402000000000572e-06, 3.27800000000239e-06, 4.721999999998672e-06, 2.5979999999994896e-06, 4.236000000001211e-06, 5.624999999998687e-06, 5.389000000001476e-06, 5.137999999998283e-06, 4.264000000000351e-06, 5.7089999999995755e-06, 4.222000000001641e-06, 3.347000000000766e-06, 3.7359999999972415e-06, 3.236000000000211e-06, 5.139000000001226e-06, 3.875000000000406e-06, 3.0139999999991007e-06, 2.431000000000655e-06, 5.207999999999602e-06, 4.361000000001336e-06, 5.610999999999117e-06, 5.2089999999990755e-06, 4.291000000000017e-06, 2.54200000000121e-06, 3.986000000000961e-06, 6.2639999999988816e-06, 3.361000000000336e-06, 2.5279999999981706e-06, 2.360999999999336e-06, 4.000000000000531e-06, 5.194000000000032e-06, 4.486000000001461e-06, 2.4029999999980456e-06, 2.54200000000121e-06, 5.610999999999117e-06, 2.903000000002015e-06, 5.415999999997673e-06], 'time': [0.017592028, 0.017595806, 0.017600278, 0.017605944, 0.017610056, 0.017616014, 0.017620306, 0.017624653, 0.017627694, 0.017631792, 0.017636653, 0.017639875, 0.017644181, 0.017648583, 0.017651861, 0.017656583, 0.017659181, 0.017663417, 0.017669042, 0.017674431, 0.017679569, 0.017683833, 0.017689542, 0.017693764, 0.017697111, 0.017700847, 0.017704083, 0.017709222, 0.017713097, 0.017716111, 0.017718542, 0.01772375, 0.017728111, 0.017733722, 0.017738931, 0.017743222, 0.017745764, 0.01774975, 0.017756014, 0.017759375, 0.017761903, 0.017764264, 0.017768264, 0.017773458, 0.017777944, 0.017780347, 0.017782889, 0.0177885, 0.017791403, 0.017796819], 'source}</msg>
<status status="PASS" starttime="20201110 08:33:53.480" endtime="20201110 08:33:53.483"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.476" endtime="20201110 08:33:53.483"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:53.487" level="INFO">${RESULT} = [{'time': 0.017595806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7779999999994207e-06, 'source_diff': 3.7779999999994207e-06}, {'time': 0.017605944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:53.484" endtime="20201110 08:33:53.487"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:53.495" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [3.7779999999994207e-06, 5.665999999997923e-06, 5.958000000000352e-06, 4.347000000001766e-06, 4.09800000000099e-06, 3.222000000000641e-06, 4.402000000000572e-06, 4.721999999998672e-06,...</msg>
<status status="PASS" starttime="20201110 08:33:53.488" endtime="20201110 08:33:53.495"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.499" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:53.498" endtime="20201110 08:33:53.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.502" level="INFO">VALUE: [3.7779999999994207e-06, 5.665999999997923e-06, 5.958000000000352e-06, 4.347000000001766e-06, 4.09800000000099e-06, 3.222000000000641e-06, 4.402000000000572e-06, 4.721999999998672e-06, 4.236000000001211e-06, 5.389000000001476e-06, 4.264000000000351e-06, 4.222000000001641e-06, 3.7359999999972415e-06, 5.139000000001226e-06, 3.0139999999991007e-06, 5.207999999999602e-06, 5.610999999999117e-06, 4.291000000000017e-06, 3.986000000000961e-06, 3.361000000000336e-06, 2.360999999999336e-06, 5.194000000000032e-06, 2.4029999999980456e-06, 5.610999999999117e-06, 5.415999999997673e-06]</msg>
<status status="PASS" starttime="20201110 08:33:53.500" endtime="20201110 08:33:53.502"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.496" endtime="20201110 08:33:53.503"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.505" endtime="20201110 08:33:53.506"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:53.508" endtime="20201110 08:33:53.528"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.507" endtime="20201110 08:33:53.528"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.503" endtime="20201110 08:33:53.529"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.138" endtime="20201110 08:33:53.529"></status>
</kw>
<msg timestamp="20201110 08:33:53.529" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.537" endtime="20201110 08:33:53.553"></status>
</kw>
<msg timestamp="20201110 08:33:53.553" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:53.535" endtime="20201110 08:33:53.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.556" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:53.554" endtime="20201110 08:33:53.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.557" endtime="20201110 08:33:53.558"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.533" endtime="20201110 08:33:53.559"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.531" endtime="20201110 08:33:53.559"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.566" endtime="20201110 08:33:53.831"></status>
</kw>
<msg timestamp="20201110 08:33:53.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018329708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018335875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:53.564" endtime="20201110 08:33:53.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018329708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018335875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:53.834" endtime="20201110 08:33:53.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.839" endtime="20201110 08:33:53.841"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.562" endtime="20201110 08:33:53.841"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.560" endtime="20201110 08:33:53.842"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.846" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:53.845" endtime="20201110 08:33:53.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.849" level="INFO">VALUE: [{'time': 0.018329708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018335875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.167000000001366e-06, 'source_diff': 6.167000000001366e-06}, {'time': 0.018340986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.110999999998617e-06, 'source_diff': 5.110999999998617e-06}, {'time': 0.018347278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.292000000001491e-06, 'source_diff': 6.292000000001491e-06}, {'time': 0.01835175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.471999999998422e-06, 'source_diff': 4.471999999998422e-06}, {'time': 0.018355958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.207999999998602e-06, 'source_diff': 4.207999999998602e-06}, {'time': 0.018362181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.223000000003115e-06, 'source_diff': 6.223000000003115e-06}, {'time': 0.018366722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.540999999996798e-06, 'source_diff': 4.540999999996798e-06}, {'time': 0.018370014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.29200000000196e-06, 'source_diff': 3.29200000000196e-06}, {'time': 0.018372486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.471999999999891e-06, 'source_diff': 2.471999999999891e-06}, {'time': 0.018376708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.221999999998172e-06, 'source_diff': 4.221999999998172e-06}, {'time': 0.018381069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.361000000001336e-06, 'source_diff': 4.361000000001336e-06}, {'time': 0.018384097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0279999999986706e-06, 'source_diff': 3.0279999999986706e-06}, {'time': 0.018389014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.917000000000116e-06, 'source_diff': 4.917000000000116e-06}, {'time': 0.018394611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.597000000003016e-06, 'source_diff': 5.597000000003016e-06}, {'time': 0.018397333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7219999999966715e-06, 'source_diff': 2.7219999999966715e-06}, {'time': 0.018402264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.931000000003155e-06, 'source_diff': 4.931000000003155e-06}, {'time': 0.018406167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.902999999999546e-06, 'source_diff': 3.902999999999546e-06}, {'time': 0.018412056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8889999999985065e-06, 'source_diff': 5.8889999999985065e-06}, {'time': 0.018418236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.180000000001462e-06, 'source_diff': 6.180000000001462e-06}, {'time': 0.018424528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.291999999998021e-06, 'source_diff': 6.291999999998021e-06}, {'time': 0.018430764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.235999999999742e-06, 'source_diff': 6.235999999999742e-06}, {'time': 0.018436347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.582999999999977e-06, 'source_diff': 5.582999999999977e-06}, {'time': 0.018440458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.111000000001086e-06, 'source_diff': 4.111000000001086e-06}, {'time': 0.018444569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.111000000001086e-06, 'source_diff': 4.111000000001086e-06}, {'time': 0.018450278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7089999999995755e-06, 'source_diff': 5.7089999999995755e-06}, {'time': 0.018455694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.416000000001142e-06, 'source_diff': 5.416000000001142e-06}, {'time': 0.018460806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.11199999999809e-06, 'source_diff': 5.11199999999809e-06}, {'time': 0.018466528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.721999999999672e-06, 'source_diff': 5.721999999999672e-06}, {'time': 0.018470931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.018474653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.722000000001141e-06, 'source_diff': 3.722000000001141e-06}, {'time': 0.018478194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.540999999999267e-06, 'source_diff': 3.540999999999267e-06}, {'time': 0.018483236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.018487514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.277999999999921e-06, 'source_diff': 4.277999999999921e-06}, {'time': 0.018491931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416999999999616e-06, 'source_diff': 4.416999999999616e-06}, {'time': 0.018494292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.360999999999336e-06, 'source_diff': 2.360999999999336e-06}, {'time': 0.018496764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.471999999999891e-06, 'source_diff': 2.471999999999891e-06}, {'time': 0.018499361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.597000000000016e-06, 'source_diff': 2.597000000000016e-06}, {'time': 0.018502417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.05600000000128e-06, 'source_diff': 3.05600000000128e-06}, {'time': 0.018508375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.958000000000352e-06, 'source_diff': 5.958000000000352e-06}, {'time': 0.018512097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.722000000001141e-06, 'source_diff': 3.722000000001141e-06}, {'time': 0.018514528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4309999999971854e-06, 'source_diff': 2.4309999999971854e-06}, {'time': 0.018520236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.708000000000102e-06, 'source_diff': 5.708000000000102e-06}, {'time': 0.018524833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.597000000002016e-06, 'source_diff': 4.597000000002016e-06}, {'time': 0.018527264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.431000000000655e-06, 'source_diff': 2.431000000000655e-06}, {'time': 0.018529597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3329999999967266e-06, 'source_diff': 2.3329999999967266e-06}, {'time': 0.018535514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.917000000001116e-06, 'source_diff': 5.917000000001116e-06}, {'time': 0.018541194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.680000000000962e-06, 'source_diff': 5.680000000000962e-06}, {'time': 0.018545458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.264000000000351e-06, 'source_diff': 4.264000000000351e-06}, {'time': 0.018549333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.875000000000406e-06, 'source_diff': 3.875000000000406e-06}]</msg>
<status status="PASS" starttime="20201110 08:33:53.847" endtime="20201110 08:33:53.850"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.842" endtime="20201110 08:33:53.851"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:53.865" level="INFO">${debug-compressed} = {'source_diff': [0, 6.167000000001366e-06, 5.110999999998617e-06, 6.292000000001491e-06, 4.471999999998422e-06, 4.207999999998602e-06, 6.223000000003115e-06, 4.540999999996798e-06, 3.29200000000196e-0...</msg>
<status status="PASS" starttime="20201110 08:33:53.852" endtime="20201110 08:33:53.865"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.869" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:53.868" endtime="20201110 08:33:53.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.872" level="INFO">VALUE: {'source_diff': [0, 6.167000000001366e-06, 5.110999999998617e-06, 6.292000000001491e-06, 4.471999999998422e-06, 4.207999999998602e-06, 6.223000000003115e-06, 4.540999999996798e-06, 3.29200000000196e-06, 2.471999999999891e-06, 4.221999999998172e-06, 4.361000000001336e-06, 3.0279999999986706e-06, 4.917000000000116e-06, 5.597000000003016e-06, 2.7219999999966715e-06, 4.931000000003155e-06, 3.902999999999546e-06, 5.8889999999985065e-06, 6.180000000001462e-06, 6.291999999998021e-06, 6.235999999999742e-06, 5.582999999999977e-06, 4.111000000001086e-06, 4.111000000001086e-06, 5.7089999999995755e-06, 5.416000000001142e-06, 5.11199999999809e-06, 5.721999999999672e-06, 4.403000000000046e-06, 3.722000000001141e-06, 3.540999999999267e-06, 5.042000000000241e-06, 4.277999999999921e-06, 4.416999999999616e-06, 2.360999999999336e-06, 2.471999999999891e-06, 2.597000000000016e-06, 3.05600000000128e-06, 5.958000000000352e-06, 3.722000000001141e-06, 2.4309999999971854e-06, 5.708000000000102e-06, 4.597000000002016e-06, 2.431000000000655e-06, 2.3329999999967266e-06, 5.917000000001116e-06, 5.680000000000962e-06, 4.264000000000351e-06, 3.875000000000406e-06], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'diff': [0, 6.167000000001366e-06, 5.110999999998617e-06, 6.292000000001491e-06, 4.471999999998422e-06, 4.207999999998602e-06, 6.223000000003115e-06, 4.540999999996798e-06, 3.29200000000196e-06, 2.471999999999891e-06, 4.221999999998172e-06, 4.361000000001336e-06, 3.0279999999986706e-06, 4.917000000000116e-06, 5.597000000003016e-06, 2.7219999999966715e-06, 4.931000000003155e-06, 3.902999999999546e-06, 5.8889999999985065e-06, 6.180000000001462e-06, 6.291999999998021e-06, 6.235999999999742e-06, 5.582999999999977e-06, 4.111000000001086e-06, 4.111000000001086e-06, 5.7089999999995755e-06, 5.416000000001142e-06, 5.11199999999809e-06, 5.721999999999672e-06, 4.403000000000046e-06, 3.722000000001141e-06, 3.540999999999267e-06, 5.042000000000241e-06, 4.277999999999921e-06, 4.416999999999616e-06, 2.360999999999336e-06, 2.471999999999891e-06, 2.597000000000016e-06, 3.05600000000128e-06, 5.958000000000352e-06, 3.722000000001141e-06, 2.4309999999971854e-06, 5.708000000000102e-06, 4.597000000002016e-06, 2.431000000000655e-06, 2.3329999999967266e-06, 5.917000000001116e-06, 5.680000000000962e-06, 4.264000000000351e-06, 3.875000000000406e-06], 'time': [0.018329708, 0.018335875, 0.018340986, 0.018347278, 0.01835175, 0.018355958, 0.018362181, 0.018366722, 0.018370014, 0.018372486, 0.018376708, 0.018381069, 0.018384097, 0.018389014, 0.018394611, 0.018397333, 0.018402264, 0.018406167, 0.018412056, 0.018418236, 0.018424528, 0.018430764, 0.018436347, 0.018440458, 0.018444569, 0.018450278, 0.018455694, 0.018460806, 0.018466528, 0.018470931, 0.018474653, 0.018478194, 0.018483236, 0.018487514, 0.018491931, 0.018494292, 0.018496764, 0.018499361, 0.018502417, 0.018508375, 0.018512097, 0.018514528, 0.018520236, 0.018524833, 0.018527264, 0.018529597, 0.018535514, 0.018541194, 0.018545458, 0.018549333], 'source}</msg>
<status status="PASS" starttime="20201110 08:33:53.870" endtime="20201110 08:33:53.872"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.866" endtime="20201110 08:33:53.873"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:53.876" level="INFO">${RESULT} = [{'time': 0.018335875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.167000000001366e-06, 'source_diff': 6.167000000001366e-06}, {'time': 0.018347278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:53.874" endtime="20201110 08:33:53.877"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:53.884" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [6.167000000001366e-06, 6.292000000001491e-06, 4.207999999998602e-06, 4.540999999996798e-06, 2.471999999999891e-06, 4.361000000001336e-06, 4.917000000000116e-06, 2.7219999999966715e-06...</msg>
<status status="PASS" starttime="20201110 08:33:53.877" endtime="20201110 08:33:53.885"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.889" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:53.888" endtime="20201110 08:33:53.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.891" level="INFO">VALUE: [6.167000000001366e-06, 6.292000000001491e-06, 4.207999999998602e-06, 4.540999999996798e-06, 2.471999999999891e-06, 4.361000000001336e-06, 4.917000000000116e-06, 2.7219999999966715e-06, 3.902999999999546e-06, 6.180000000001462e-06, 6.235999999999742e-06, 4.111000000001086e-06, 5.7089999999995755e-06, 5.11199999999809e-06, 4.403000000000046e-06, 3.540999999999267e-06, 4.277999999999921e-06, 2.360999999999336e-06, 2.597000000000016e-06, 5.958000000000352e-06, 2.4309999999971854e-06, 4.597000000002016e-06, 2.3329999999967266e-06, 5.680000000000962e-06, 3.875000000000406e-06]</msg>
<status status="PASS" starttime="20201110 08:33:53.890" endtime="20201110 08:33:53.892"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.885" endtime="20201110 08:33:53.892"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.894" endtime="20201110 08:33:53.896"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:53.898" endtime="20201110 08:33:53.917"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.896" endtime="20201110 08:33:53.918"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.893" endtime="20201110 08:33:53.918"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.530" endtime="20201110 08:33:53.919"></status>
</kw>
<msg timestamp="20201110 08:33:53.919" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.928" endtime="20201110 08:33:53.943"></status>
</kw>
<msg timestamp="20201110 08:33:53.943" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:53.927" endtime="20201110 08:33:53.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.946" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:53.944" endtime="20201110 08:33:53.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.947" endtime="20201110 08:33:53.949"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.923" endtime="20201110 08:33:53.949"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.921" endtime="20201110 08:33:53.950"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.956" endtime="20201110 08:33:54.223"></status>
</kw>
<msg timestamp="20201110 08:33:54.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019345597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019350444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:53.954" endtime="20201110 08:33:54.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019345597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019350444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:54.226" endtime="20201110 08:33:54.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.231" endtime="20201110 08:33:54.233"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.952" endtime="20201110 08:33:54.233"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.950" endtime="20201110 08:33:54.234"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.238" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:54.237" endtime="20201110 08:33:54.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.241" level="INFO">VALUE: [{'time': 0.019345597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019350444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.847000000002266e-06, 'source_diff': 4.847000000002266e-06}, {'time': 0.019356306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.86199999999884e-06, 'source_diff': 5.86199999999884e-06}, {'time': 0.019361389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.082999999999477e-06, 'source_diff': 5.082999999999477e-06}, {'time': 0.019365681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.291999999999491e-06, 'source_diff': 4.291999999999491e-06}, {'time': 0.019369042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.361000000000336e-06, 'source_diff': 3.361000000000336e-06}, {'time': 0.019375097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.055000000001337e-06, 'source_diff': 6.055000000001337e-06}, {'time': 0.019381167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.070000000000381e-06, 'source_diff': 6.070000000000381e-06}, {'time': 0.019384333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.165999999998892e-06, 'source_diff': 3.165999999998892e-06}, {'time': 0.019386833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4999999999990308e-06, 'source_diff': 2.4999999999990308e-06}, {'time': 0.019389875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.04200000000171e-06, 'source_diff': 3.04200000000171e-06}, {'time': 0.019395819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.944000000000782e-06, 'source_diff': 5.944000000000782e-06}, {'time': 0.019399292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4729999999968952e-06, 'source_diff': 3.4729999999968952e-06}, {'time': 0.019404847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.555000000000837e-06, 'source_diff': 5.555000000000837e-06}, {'time': 0.019408875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.027999999999671e-06, 'source_diff': 4.027999999999671e-06}, {'time': 0.019412167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.29200000000196e-06, 'source_diff': 3.29200000000196e-06}, {'time': 0.019415194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.026999999999197e-06, 'source_diff': 3.026999999999197e-06}, {'time': 0.019417611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.417000000001085e-06, 'source_diff': 2.417000000001085e-06}, {'time': 0.019421528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.916999999999116e-06, 'source_diff': 3.916999999999116e-06}, {'time': 0.01942575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.221999999998172e-06, 'source_diff': 4.221999999998172e-06}, {'time': 0.019429361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.611000000000586e-06, 'source_diff': 3.611000000000586e-06}, {'time': 0.019435583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.019437931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3479999999992396e-06, 'source_diff': 2.3479999999992396e-06}, {'time': 0.019442792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.861000000001836e-06, 'source_diff': 4.861000000001836e-06}, {'time': 0.019445208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.415999999998142e-06, 'source_diff': 2.415999999998142e-06}, {'time': 0.019451042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.83400000000317e-06, 'source_diff': 5.83400000000317e-06}, {'time': 0.019453708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.665999999998392e-06, 'source_diff': 2.665999999998392e-06}, {'time': 0.019458931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.222999999998645e-06, 'source_diff': 5.222999999998645e-06}, {'time': 0.019462208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.2770000000029165e-06, 'source_diff': 3.2770000000029165e-06}, {'time': 0.019464694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.485999999999461e-06, 'source_diff': 2.485999999999461e-06}, {'time': 0.019470667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.9729999999993955e-06, 'source_diff': 5.9729999999993955e-06}, {'time': 0.019473333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.665999999998392e-06, 'source_diff': 2.665999999998392e-06}, {'time': 0.019477556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.223000000001115e-06, 'source_diff': 4.223000000001115e-06}, {'time': 0.019482486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.930000000000212e-06, 'source_diff': 4.930000000000212e-06}, {'time': 0.019485153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.667000000001335e-06, 'source_diff': 2.667000000001335e-06}, {'time': 0.019487806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6529999999982956e-06, 'source_diff': 2.6529999999982956e-06}, {'time': 0.019493389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.582999999999977e-06, 'source_diff': 5.582999999999977e-06}, {'time': 0.019496, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.610999999999586e-06, 'source_diff': 2.610999999999586e-06}, {'time': 0.019500736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.736000000001711e-06, 'source_diff': 4.736000000001711e-06}, {'time': 0.019506653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.916999999997646e-06, 'source_diff': 5.916999999997646e-06}, {'time': 0.019510042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.3889999999994758e-06, 'source_diff': 3.3889999999994758e-06}, {'time': 0.019514528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.486000000001461e-06, 'source_diff': 4.486000000001461e-06}, {'time': 0.019518681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.152999999999796e-06, 'source_diff': 4.152999999999796e-06}, {'time': 0.019522361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.679999999998962e-06, 'source_diff': 3.679999999998962e-06}, {'time': 0.019526083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.722000000001141e-06, 'source_diff': 3.722000000001141e-06}, {'time': 0.019530236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.152999999999796e-06, 'source_diff': 4.152999999999796e-06}, {'time': 0.019534083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.847000000001266e-06, 'source_diff': 3.847000000001266e-06}, {'time': 0.019539528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.444999999999756e-06, 'source_diff': 5.444999999999756e-06}, {'time': 0.019543347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.818999999998657e-06, 'source_diff': 3.818999999998657e-06}, {'time': 0.019546764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.417000000002085e-06, 'source_diff': 3.417000000002085e-06}]</msg>
<status status="PASS" starttime="20201110 08:33:54.239" endtime="20201110 08:33:54.248"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.234" endtime="20201110 08:33:54.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:54.262" level="INFO">${debug-compressed} = {'source_diff': [0, 4.847000000002266e-06, 5.86199999999884e-06, 5.082999999999477e-06, 4.291999999999491e-06, 3.361000000000336e-06, 6.055000000001337e-06, 6.070000000000381e-06, 3.165999999998892e-0...</msg>
<status status="PASS" starttime="20201110 08:33:54.249" endtime="20201110 08:33:54.263"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.266" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:54.265" endtime="20201110 08:33:54.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.269" level="INFO">VALUE: {'source_diff': [0, 4.847000000002266e-06, 5.86199999999884e-06, 5.082999999999477e-06, 4.291999999999491e-06, 3.361000000000336e-06, 6.055000000001337e-06, 6.070000000000381e-06, 3.165999999998892e-06, 2.4999999999990308e-06, 3.04200000000171e-06, 5.944000000000782e-06, 3.4729999999968952e-06, 5.555000000000837e-06, 4.027999999999671e-06, 3.29200000000196e-06, 3.026999999999197e-06, 2.417000000001085e-06, 3.916999999999116e-06, 4.221999999998172e-06, 3.611000000000586e-06, 6.222000000000172e-06, 2.3479999999992396e-06, 4.861000000001836e-06, 2.415999999998142e-06, 5.83400000000317e-06, 2.665999999998392e-06, 5.222999999998645e-06, 3.2770000000029165e-06, 2.485999999999461e-06, 5.9729999999993955e-06, 2.665999999998392e-06, 4.223000000001115e-06, 4.930000000000212e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 5.582999999999977e-06, 2.610999999999586e-06, 4.736000000001711e-06, 5.916999999997646e-06, 3.3889999999994758e-06, 4.486000000001461e-06, 4.152999999999796e-06, 3.679999999998962e-06, 3.722000000001141e-06, 4.152999999999796e-06, 3.847000000001266e-06, 5.444999999999756e-06, 3.818999999998657e-06, 3.417000000002085e-06], 'eventdiff': [0, 4.847000000002266e-06, 5.86199999999884e-06, 5.082999999999477e-06, 4.291999999999491e-06, 3.361000000000336e-06, 6.055000000001337e-06, 6.070000000000381e-06, 3.165999999998892e-06, 2.4999999999990308e-06, 3.04200000000171e-06, 5.944000000000782e-06, 3.4729999999968952e-06, 5.555000000000837e-06, 4.027999999999671e-06, 3.29200000000196e-06, 3.026999999999197e-06, 2.417000000001085e-06, 3.916999999999116e-06, 4.221999999998172e-06, 3.611000000000586e-06, 6.222000000000172e-06, 2.3479999999992396e-06, 4.861000000001836e-06, 2.415999999998142e-06, 5.83400000000317e-06, 2.665999999998392e-06, 5.222999999998645e-06, 3.2770000000029165e-06, 2.485999999999461e-06, 5.9729999999993955e-06, 2.665999999998392e-06, 4.223000000001115e-06, 4.930000000000212e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 5.582999999999977e-06, 2.610999999999586e-06, 4.736000000001711e-06, 5.916999999997646e-06, 3.3889999999994758e-06, 4.486000000001461e-06, 4.152999999999796e-06, 3.679999999998962e-06, 3.722000000001141e-06, 4.152999999999796e-06, 3.847000000001266e-06, 5.444999999999756e-06, 3.818999999998657e-06, 3.417000000002085e-06], 'time': [0.019345597, 0.019350444, 0.019356306, 0.019361389, 0.019365681, 0.019369042, 0.019375097, 0.019381167, 0.019384333, 0.019386833, 0.019389875, 0.019395819, 0.019399292, 0.019404847, 0.019408875, 0.019412167, 0.019415194, 0.019417611, 0.019421528, 0.01942575, 0.019429361, 0.019435583, 0.019437931, 0.019442792, 0.019445208, 0.019451042, 0.019453708, 0.019458931, 0.019462208, 0.019464694, 0.019470667, 0.019473333, 0.019477556, 0.019482486, 0.019485153, 0.019487806, 0.019493389, 0.019496, 0.019500736, 0.019506653, 0.019510042, 0.019514528, 0.019518681, 0.019522361, 0.019526083, 0.019530236, 0.019534083, 0.019539528, 0.019543347, 0.019546764], 'source}</msg>
<status status="PASS" starttime="20201110 08:33:54.267" endtime="20201110 08:33:54.270"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.263" endtime="20201110 08:33:54.270"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:54.274" level="INFO">${RESULT} = [{'time': 0.019350444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.847000000002266e-06, 'source_diff': 4.847000000002266e-06}, {'time': 0.019361389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:54.271" endtime="20201110 08:33:54.274"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:54.282" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.847000000002266e-06, 5.082999999999477e-06, 3.361000000000336e-06, 6.070000000000381e-06, 2.4999999999990308e-06, 5.944000000000782e-06, 5.555000000000837e-06, 3.29200000000196e-06,...</msg>
<status status="PASS" starttime="20201110 08:33:54.275" endtime="20201110 08:33:54.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.286" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:54.285" endtime="20201110 08:33:54.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.288" level="INFO">VALUE: [4.847000000002266e-06, 5.082999999999477e-06, 3.361000000000336e-06, 6.070000000000381e-06, 2.4999999999990308e-06, 5.944000000000782e-06, 5.555000000000837e-06, 3.29200000000196e-06, 2.417000000001085e-06, 4.221999999998172e-06, 6.222000000000172e-06, 4.861000000001836e-06, 5.83400000000317e-06, 5.222999999998645e-06, 2.485999999999461e-06, 2.665999999998392e-06, 4.930000000000212e-06, 2.6529999999982956e-06, 2.610999999999586e-06, 5.916999999997646e-06, 4.486000000001461e-06, 3.679999999998962e-06, 4.152999999999796e-06, 5.444999999999756e-06, 3.417000000002085e-06]</msg>
<status status="PASS" starttime="20201110 08:33:54.287" endtime="20201110 08:33:54.289"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.283" endtime="20201110 08:33:54.290"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.292" endtime="20201110 08:33:54.293"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:54.295" endtime="20201110 08:33:54.315"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.294" endtime="20201110 08:33:54.315"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.290" endtime="20201110 08:33:54.316"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.919" endtime="20201110 08:33:54.316"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.327" endtime="20201110 08:33:54.316"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:54.320" endtime="20201110 08:33:54.339"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.319" endtime="20201110 08:33:54.340"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.317" endtime="20201110 08:33:54.340"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201110 08:33:46.255" endtime="20201110 08:33:54.341" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:54.348" endtime="20201110 08:33:54.367"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.346" endtime="20201110 08:33:54.368"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.381" endtime="20201110 08:33:54.400"></status>
</kw>
<msg timestamp="20201110 08:33:54.400" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:54.379" endtime="20201110 08:33:54.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.403" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:54.401" endtime="20201110 08:33:54.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.406" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:33:54.404" endtime="20201110 08:33:54.406"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:54.377" endtime="20201110 08:33:54.407"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:54.375" endtime="20201110 08:33:54.407"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.373" endtime="20201110 08:33:54.407"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:33:54.411" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:33:54.410" endtime="20201110 08:33:54.412"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.408" endtime="20201110 08:33:54.412"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.373" endtime="20201110 08:33:54.412"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.372" endtime="20201110 08:33:54.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.413" endtime="20201110 08:33:54.414"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.370" endtime="20201110 08:33:54.415"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.369" endtime="20201110 08:33:54.415"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.344" endtime="20201110 08:33:54.416"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201110 08:33:54.417" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.426" endtime="20201110 08:33:54.442"></status>
</kw>
<msg timestamp="20201110 08:33:54.443" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:54.423" endtime="20201110 08:33:54.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.445" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:54.444" endtime="20201110 08:33:54.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.446" endtime="20201110 08:33:54.448"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.421" endtime="20201110 08:33:54.449"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.419" endtime="20201110 08:33:54.449"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.455" endtime="20201110 08:33:54.745"></status>
</kw>
<msg timestamp="20201110 08:33:54.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0678865, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067892722, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:33:54.454" endtime="20201110 08:33:54.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0678865, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067892722, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:33:54.749" endtime="20201110 08:33:54.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.757" endtime="20201110 08:33:54.759"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.451" endtime="20201110 08:33:54.759"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.450" endtime="20201110 08:33:54.760"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:54.764" level="INFO">${RESULT} = [{'time': 0.067892722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.067896917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:54.761" endtime="20201110 08:33:54.764"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:54.780" level="INFO">${OVERHEAD} = {'source_diff': [6.222000000000172e-06, 1.8610000000057747e-06, 1.8749999999984057e-06, 1.8479999999987395e-06, 1.8749999999984057e-06, 1.860999999991897e-06, 1.8610000000057747e-06, 1.846999999999266...</msg>
<status status="PASS" starttime="20201110 08:33:54.765" endtime="20201110 08:33:54.780"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.784" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:54.783" endtime="20201110 08:33:54.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.786" level="INFO">VALUE: [6.222000000000172e-06, 1.8610000000057747e-06, 1.8749999999984057e-06, 1.8479999999987395e-06, 1.8749999999984057e-06, 1.860999999991897e-06, 1.8610000000057747e-06, 1.846999999999266e-06, 1.8479999999987395e-06, 1.8199999999995997e-06, 1.846999999999266e-06, 1.8610000000057747e-06, 1.8749999999984057e-06, 1.860999999991897e-06, 1.901999999998072e-06, 1.8610000000057747e-06, 1.819000000000126e-06, 1.8479999999987395e-06, 1.860999999991897e-06, 1.860999999991897e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.860999999991897e-06, 1.8610000000057747e-06, 1.860999999991897e-06, 1.8610000000057747e-06, 1.860999999991897e-06, 1.8620000000052483e-06, 1.8610000000057747e-06, 1.805000000007495e-06, 1.8749999999984057e-06, 1.8890000000049145e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.8480000000126173e-06, 1.8619999999913706e-06, 1.8749999999984057e-06, 1.860999999991897e-06, 1.8479999999987395e-06, 1.860999999991897e-06, 1.846999999999266e-06, 1.860999999991897e-06, 1.860999999991897e-06, 1.8620000000052483e-06, 1.9030000000114233e-06, 1.8619999999913706e-06, 1.8890000000049145e-06, 1.860999999991897e-06, 1.8610000000057747e-06, 1.860999999991897e-06]</msg>
<status status="PASS" starttime="20201110 08:33:54.785" endtime="20201110 08:33:54.787"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.781" endtime="20201110 08:33:54.787"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.790" endtime="20201110 08:33:54.791"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:54.793" endtime="20201110 08:33:54.813"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.792" endtime="20201110 08:33:54.813"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.788" endtime="20201110 08:33:54.814"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.418" endtime="20201110 08:33:54.814"></status>
</kw>
<msg timestamp="20201110 08:33:54.814" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.822" endtime="20201110 08:33:54.838"></status>
</kw>
<msg timestamp="20201110 08:33:54.838" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:54.821" endtime="20201110 08:33:54.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.841" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:54.839" endtime="20201110 08:33:54.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.842" endtime="20201110 08:33:54.844"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.818" endtime="20201110 08:33:54.844"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.816" endtime="20201110 08:33:54.845"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.852" endtime="20201110 08:33:55.142"></status>
</kw>
<msg timestamp="20201110 08:33:55.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018545264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018547111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:54.850" endtime="20201110 08:33:55.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018545264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018547111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:55.147" endtime="20201110 08:33:55.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.155" endtime="20201110 08:33:55.157"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.847" endtime="20201110 08:33:55.157"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.845" endtime="20201110 08:33:55.158"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:55.162" level="INFO">${RESULT} = [{'time': 0.018547111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8470000000027353e-06, 'source_diff': 1.8470000000027353e-06}, {'time': 0.018554056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:55.158" endtime="20201110 08:33:55.162"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:55.175" level="INFO">${OVERHEAD} = {'source_diff': [1.8470000000027353e-06, 1.8479999999987395e-06, 1.8609999999988358e-06, 1.8889999999979756e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.862000000001779e-06, 1.86099999999883...</msg>
<status status="PASS" starttime="20201110 08:33:55.163" endtime="20201110 08:33:55.176"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.180" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:55.179" endtime="20201110 08:33:55.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.182" level="INFO">VALUE: [1.8470000000027353e-06, 1.8479999999987395e-06, 1.8609999999988358e-06, 1.8889999999979756e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.862000000001779e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.862000000001779e-06, 1.8749999999984057e-06, 1.8750000000018752e-06, 1.8479999999987395e-06, 1.8619999999983095e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8610000000023053e-06, 1.8060000000000298e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8750000000018752e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.889000000001445e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8470000000027353e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.819000000000126e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.8750000000018752e-06, 1.8609999999988358e-06]</msg>
<status status="PASS" starttime="20201110 08:33:55.181" endtime="20201110 08:33:55.183"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.176" endtime="20201110 08:33:55.183"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.185" endtime="20201110 08:33:55.187"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:55.189" endtime="20201110 08:33:55.208"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.188" endtime="20201110 08:33:55.209"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.184" endtime="20201110 08:33:55.210"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.815" endtime="20201110 08:33:55.210"></status>
</kw>
<msg timestamp="20201110 08:33:55.210" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.218" endtime="20201110 08:33:55.233"></status>
</kw>
<msg timestamp="20201110 08:33:55.233" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:55.216" endtime="20201110 08:33:55.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.236" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:55.234" endtime="20201110 08:33:55.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.237" endtime="20201110 08:33:55.238"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.214" endtime="20201110 08:33:55.239"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.212" endtime="20201110 08:33:55.239"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.247" endtime="20201110 08:33:55.534"></status>
</kw>
<msg timestamp="20201110 08:33:55.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017993264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017995139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:55.244" endtime="20201110 08:33:55.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017993264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017995139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:55.538" endtime="20201110 08:33:55.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.546" endtime="20201110 08:33:55.548"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.242" endtime="20201110 08:33:55.549"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.240" endtime="20201110 08:33:55.549"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:55.553" level="INFO">${RESULT} = [{'time': 0.017995139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}, {'time': 0.018002875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:55.550" endtime="20201110 08:33:55.553"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:55.568" level="INFO">${OVERHEAD} = {'source_diff': [1.8750000000018752e-06, 1.8750000000018752e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8619999999983095e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988...</msg>
<status status="PASS" starttime="20201110 08:33:55.554" endtime="20201110 08:33:55.568"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.572" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:55.571" endtime="20201110 08:33:55.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.574" level="INFO">VALUE: [1.8750000000018752e-06, 1.8750000000018752e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8619999999983095e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.862000000001779e-06, 1.8619999999983095e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8479999999987395e-06, 1.903000000001015e-06, 1.8749999999984057e-06, 1.903000000001015e-06, 1.8199999999995997e-06, 1.917000000000585e-06, 1.917000000000585e-06, 1.917000000000585e-06, 1.8339999999991696e-06, 1.8619999999983095e-06, 1.8619999999983095e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8749999999984057e-06, 1.8619999999983095e-06, 1.848000000002209e-06, 1.9160000000011113e-06, 1.8750000000018752e-06, 1.8610000000023053e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.819000000000126e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.957999999999821e-06]</msg>
<status status="PASS" starttime="20201110 08:33:55.573" endtime="20201110 08:33:55.575"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.569" endtime="20201110 08:33:55.576"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.578" endtime="20201110 08:33:55.579"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:55.581" endtime="20201110 08:33:55.601"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.580" endtime="20201110 08:33:55.602"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.576" endtime="20201110 08:33:55.602"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.211" endtime="20201110 08:33:55.603"></status>
</kw>
<msg timestamp="20201110 08:33:55.603" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.616" endtime="20201110 08:33:55.632"></status>
</kw>
<msg timestamp="20201110 08:33:55.632" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:55.613" endtime="20201110 08:33:55.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.635" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:55.634" endtime="20201110 08:33:55.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.636" endtime="20201110 08:33:55.638"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.610" endtime="20201110 08:33:55.638"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.606" endtime="20201110 08:33:55.639"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.645" endtime="20201110 08:33:55.942"></status>
</kw>
<msg timestamp="20201110 08:33:55.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024900528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024902375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:55.644" endtime="20201110 08:33:55.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024900528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024902375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:55.948" endtime="20201110 08:33:55.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.960" endtime="20201110 08:33:55.962"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.641" endtime="20201110 08:33:55.963"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.639" endtime="20201110 08:33:55.963"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:55.968" level="INFO">${RESULT} = [{'time': 0.024902375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.024906375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:55.964" endtime="20201110 08:33:55.968"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:55.982" level="INFO">${OVERHEAD} = {'source_diff': [1.846999999999266e-06, 1.8470000000027353e-06, 1.8750000000018752e-06, 1.8610000000023053e-06, 1.832999999999696e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.888999999997975...</msg>
<status status="PASS" starttime="20201110 08:33:55.969" endtime="20201110 08:33:55.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.986" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:55.985" endtime="20201110 08:33:55.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.988" level="INFO">VALUE: [1.846999999999266e-06, 1.8470000000027353e-06, 1.8750000000018752e-06, 1.8610000000023053e-06, 1.832999999999696e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.8889999999979756e-06, 1.8749999999984057e-06, 1.8750000000018752e-06, 1.9169999999971155e-06, 1.8749999999984057e-06, 1.9160000000011113e-06, 1.8470000000027353e-06, 1.8749999999984057e-06, 1.8750000000018752e-06, 1.832999999999696e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.8750000000018752e-06, 1.8610000000023053e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8050000000005562e-06, 1.8470000000027353e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.819000000000126e-06, 1.889000000001445e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8050000000005562e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.9029999999975455e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8470000000027353e-06, 1.8750000000018752e-06, 1.8470000000027353e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8470000000027353e-06, 1.8609999999988358e-06, 1.8609999999988358e-06]</msg>
<status status="PASS" starttime="20201110 08:33:55.987" endtime="20201110 08:33:55.989"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.982" endtime="20201110 08:33:55.989"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.992" endtime="20201110 08:33:55.993"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:55.995" endtime="20201110 08:33:56.015"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.994" endtime="20201110 08:33:56.015"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.990" endtime="20201110 08:33:56.016"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.604" endtime="20201110 08:33:56.016"></status>
</kw>
<msg timestamp="20201110 08:33:56.016" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.024" endtime="20201110 08:33:56.040"></status>
</kw>
<msg timestamp="20201110 08:33:56.040" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:56.022" endtime="20201110 08:33:56.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:56.043" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:56.041" endtime="20201110 08:33:56.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.044" endtime="20201110 08:33:56.045"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.020" endtime="20201110 08:33:56.046"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.018" endtime="20201110 08:33:56.046"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.053" endtime="20201110 08:33:56.380"></status>
</kw>
<msg timestamp="20201110 08:33:56.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018201528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018203403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:56.051" endtime="20201110 08:33:56.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:56.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018201528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018203403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:56.384" endtime="20201110 08:33:56.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.393" endtime="20201110 08:33:56.394"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.049" endtime="20201110 08:33:56.395"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.047" endtime="20201110 08:33:56.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:56.400" level="INFO">${RESULT} = [{'time': 0.018203403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.018208681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:56.396" endtime="20201110 08:33:56.400"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:56.413" level="INFO">${OVERHEAD} = {'source_diff': [1.8749999999984057e-06, 1.862000000001779e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.86099999999883...</msg>
<status status="PASS" starttime="20201110 08:33:56.400" endtime="20201110 08:33:56.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:56.417" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:56.416" endtime="20201110 08:33:56.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:56.420" level="INFO">VALUE: [1.8749999999984057e-06, 1.862000000001779e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.832999999999696e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.930000000000681e-06, 1.8609999999988358e-06, 1.8470000000027353e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8470000000027353e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.8199999999995997e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8330000000031654e-06, 1.8610000000023053e-06, 1.7920000000004599e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.819000000000126e-06, 1.8610000000023053e-06, 1.8750000000018752e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8749999999984057e-06]</msg>
<status status="PASS" starttime="20201110 08:33:56.418" endtime="20201110 08:33:56.421"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.414" endtime="20201110 08:33:56.421"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.423" endtime="20201110 08:33:56.425"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:56.427" endtime="20201110 08:33:56.446"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.425" endtime="20201110 08:33:56.447"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.422" endtime="20201110 08:33:56.447"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.017" endtime="20201110 08:33:56.448"></status>
</kw>
<msg timestamp="20201110 08:33:56.448" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.455" endtime="20201110 08:33:56.471"></status>
</kw>
<msg timestamp="20201110 08:33:56.472" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:56.454" endtime="20201110 08:33:56.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:56.474" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:56.473" endtime="20201110 08:33:56.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.475" endtime="20201110 08:33:56.477"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.451" endtime="20201110 08:33:56.477"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.450" endtime="20201110 08:33:56.478"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.484" endtime="20201110 08:33:56.769"></status>
</kw>
<msg timestamp="20201110 08:33:56.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018053361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018055208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:56.483" endtime="20201110 08:33:56.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:56.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018053361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018055208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:56.773" endtime="20201110 08:33:56.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.782" endtime="20201110 08:33:56.783"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.480" endtime="20201110 08:33:56.784"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.478" endtime="20201110 08:33:56.784"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:56.789" level="INFO">${RESULT} = [{'time': 0.018055208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.018062347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:56.785" endtime="20201110 08:33:56.789"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:56.807" level="INFO">${OVERHEAD} = {'source_diff': [1.846999999999266e-06, 1.8749999999984057e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.860999999998835...</msg>
<status status="PASS" starttime="20201110 08:33:56.790" endtime="20201110 08:33:56.807"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:56.813" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:56.811" endtime="20201110 08:33:56.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:56.816" level="INFO">VALUE: [1.846999999999266e-06, 1.8749999999984057e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.819000000000126e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.903000000001015e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8199999999995997e-06, 1.8479999999987395e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8479999999987395e-06, 1.8750000000018752e-06, 1.9160000000011113e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.8619999999983095e-06, 1.8050000000005562e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.819000000000126e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8750000000018752e-06, 1.8749999999984057e-06, 1.848000000002209e-06, 1.8479999999987395e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.8470000000027353e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8339999999991696e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.846999999999266e-06]</msg>
<status status="PASS" starttime="20201110 08:33:56.814" endtime="20201110 08:33:56.818"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.808" endtime="20201110 08:33:56.818"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.822" endtime="20201110 08:33:56.823"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:56.825" endtime="20201110 08:33:56.845"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.824" endtime="20201110 08:33:56.845"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.819" endtime="20201110 08:33:56.846"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.448" endtime="20201110 08:33:56.846"></status>
</kw>
<msg timestamp="20201110 08:33:56.846" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.854" endtime="20201110 08:33:56.869"></status>
</kw>
<msg timestamp="20201110 08:33:56.869" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:56.852" endtime="20201110 08:33:56.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:56.872" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:56.870" endtime="20201110 08:33:56.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.873" endtime="20201110 08:33:56.874"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.850" endtime="20201110 08:33:56.875"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.848" endtime="20201110 08:33:56.875"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.882" endtime="20201110 08:33:57.166"></status>
</kw>
<msg timestamp="20201110 08:33:57.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018080083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018081972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:56.880" endtime="20201110 08:33:57.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:57.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018080083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018081972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:57.171" endtime="20201110 08:33:57.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:57.179" endtime="20201110 08:33:57.181"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.878" endtime="20201110 08:33:57.181"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.876" endtime="20201110 08:33:57.182"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:57.186" level="INFO">${RESULT} = [{'time': 0.018081972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.889000000001445e-06, 'source_diff': 1.889000000001445e-06}, {'time': 0.018086, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201110 08:33:57.182" endtime="20201110 08:33:57.186"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:57.201" level="INFO">${OVERHEAD} = {'source_diff': [1.889000000001445e-06, 1.8610000000023053e-06, 1.862000000001779e-06, 1.8619999999983095e-06, 1.903000000001015e-06, 1.8610000000023053e-06, 1.8479999999987395e-06, 1.848000000002209e...</msg>
<status status="PASS" starttime="20201110 08:33:57.187" endtime="20201110 08:33:57.201"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:57.205" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:57.204" endtime="20201110 08:33:57.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:57.207" level="INFO">VALUE: [1.889000000001445e-06, 1.8610000000023053e-06, 1.862000000001779e-06, 1.8619999999983095e-06, 1.903000000001015e-06, 1.8610000000023053e-06, 1.8479999999987395e-06, 1.848000000002209e-06, 1.862000000001779e-06, 1.8610000000023053e-06, 1.8750000000018752e-06, 1.8619999999983095e-06, 1.846999999999266e-06, 1.8619999999983095e-06, 1.8479999999987395e-06, 1.8889999999979756e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8479999999987395e-06, 1.862000000001779e-06, 1.8609999999988358e-06, 1.862000000001779e-06, 1.931000000000155e-06, 1.8749999999984057e-06, 1.8050000000005562e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8470000000027353e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8889999999979756e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.903000000001015e-06, 1.8609999999988358e-06, 1.889000000001445e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06]</msg>
<status status="PASS" starttime="20201110 08:33:57.206" endtime="20201110 08:33:57.208"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.202" endtime="20201110 08:33:57.209"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:57.211" endtime="20201110 08:33:57.212"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:57.215" endtime="20201110 08:33:57.234"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.213" endtime="20201110 08:33:57.234"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.209" endtime="20201110 08:33:57.235"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.847" endtime="20201110 08:33:57.235"></status>
</kw>
<msg timestamp="20201110 08:33:57.235" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:57.243" endtime="20201110 08:33:57.258"></status>
</kw>
<msg timestamp="20201110 08:33:57.258" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:57.241" endtime="20201110 08:33:57.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:57.261" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:57.260" endtime="20201110 08:33:57.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:57.262" endtime="20201110 08:33:57.264"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.239" endtime="20201110 08:33:57.264"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.237" endtime="20201110 08:33:57.265"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:57.271" endtime="20201110 08:33:57.559"></status>
</kw>
<msg timestamp="20201110 08:33:57.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017987389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017989236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:57.269" endtime="20201110 08:33:57.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:57.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017987389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017989236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:57.563" endtime="20201110 08:33:57.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:57.571" endtime="20201110 08:33:57.573"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.267" endtime="20201110 08:33:57.574"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.265" endtime="20201110 08:33:57.574"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:57.578" level="INFO">${RESULT} = [{'time': 0.017989236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.0179935, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:33:57.575" endtime="20201110 08:33:57.578"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:57.592" level="INFO">${OVERHEAD} = {'source_diff': [1.846999999999266e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8619999999983095e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8619999999983095e-06, 1.862000000001779...</msg>
<status status="PASS" starttime="20201110 08:33:57.579" endtime="20201110 08:33:57.592"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:57.596" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:57.595" endtime="20201110 08:33:57.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:57.598" level="INFO">VALUE: [1.846999999999266e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8619999999983095e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8619999999983095e-06, 1.862000000001779e-06, 1.832999999999696e-06, 1.8479999999987395e-06, 1.8619999999983095e-06, 1.8610000000023053e-06, 1.848000000002209e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8619999999983095e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8619999999983095e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.903000000001015e-06, 1.8750000000018752e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8060000000000298e-06, 1.846999999999266e-06, 1.8749999999984057e-06, 1.8199999999995997e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.917000000000585e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.7920000000004599e-06, 1.8049999999970867e-06, 1.917000000000585e-06, 1.9169999999971155e-06]</msg>
<status status="PASS" starttime="20201110 08:33:57.597" endtime="20201110 08:33:57.599"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.593" endtime="20201110 08:33:57.600"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:57.602" endtime="20201110 08:33:57.603"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:57.606" endtime="20201110 08:33:57.625"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.604" endtime="20201110 08:33:57.625"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.600" endtime="20201110 08:33:57.626"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.236" endtime="20201110 08:33:57.626"></status>
</kw>
<msg timestamp="20201110 08:33:57.626" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:57.634" endtime="20201110 08:33:57.649"></status>
</kw>
<msg timestamp="20201110 08:33:57.650" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:57.633" endtime="20201110 08:33:57.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:57.652" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:57.651" endtime="20201110 08:33:57.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:57.653" endtime="20201110 08:33:57.655"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.630" endtime="20201110 08:33:57.656"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.628" endtime="20201110 08:33:57.656"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:57.662" endtime="20201110 08:33:57.949"></status>
</kw>
<msg timestamp="20201110 08:33:57.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018035514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018037375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:57.661" endtime="20201110 08:33:57.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:57.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018035514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018037375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:57.953" endtime="20201110 08:33:57.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:57.962" endtime="20201110 08:33:57.964"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.658" endtime="20201110 08:33:57.964"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.657" endtime="20201110 08:33:57.965"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:57.969" level="INFO">${RESULT} = [{'time': 0.018037375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8610000000023053e-06, 'source_diff': 1.8610000000023053e-06}, {'time': 0.018042444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:57.965" endtime="20201110 08:33:57.969"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:57.982" level="INFO">${OVERHEAD} = {'source_diff': [1.8610000000023053e-06, 1.8750000000018752e-06, 1.8610000000023053e-06, 1.848000000002209e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.86199999999830...</msg>
<status status="PASS" starttime="20201110 08:33:57.970" endtime="20201110 08:33:57.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:57.986" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:57.985" endtime="20201110 08:33:57.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:57.989" level="INFO">VALUE: [1.8610000000023053e-06, 1.8750000000018752e-06, 1.8610000000023053e-06, 1.848000000002209e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8619999999983095e-06, 1.8609999999988358e-06, 1.862000000001779e-06, 1.8619999999983095e-06, 1.8610000000023053e-06, 1.8889999999979756e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.9160000000011113e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8750000000018752e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.917000000000585e-06, 1.8610000000023053e-06, 1.889000000001445e-06, 1.8470000000027353e-06, 1.8199999999995997e-06, 1.8339999999991696e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8750000000018752e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8470000000027353e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8749999999984057e-06]</msg>
<status status="PASS" starttime="20201110 08:33:57.987" endtime="20201110 08:33:57.990"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.983" endtime="20201110 08:33:57.990"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:57.993" endtime="20201110 08:33:57.994"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:57.996" endtime="20201110 08:33:58.016"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.994" endtime="20201110 08:33:58.017"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.991" endtime="20201110 08:33:58.018"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.627" endtime="20201110 08:33:58.018"></status>
</kw>
<msg timestamp="20201110 08:33:58.018" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.032" endtime="20201110 08:33:58.051"></status>
</kw>
<msg timestamp="20201110 08:33:58.051" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:58.029" endtime="20201110 08:33:58.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:58.054" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:58.052" endtime="20201110 08:33:58.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.055" endtime="20201110 08:33:58.056"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.023" endtime="20201110 08:33:58.057"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.021" endtime="20201110 08:33:58.057"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.064" endtime="20201110 08:33:58.354"></status>
</kw>
<msg timestamp="20201110 08:33:58.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028807986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028809847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:58.062" endtime="20201110 08:33:58.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:58.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028807986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028809847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:58.358" endtime="20201110 08:33:58.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.367" endtime="20201110 08:33:58.368"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.060" endtime="20201110 08:33:58.369"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.058" endtime="20201110 08:33:58.369"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:58.373" level="INFO">${RESULT} = [{'time': 0.028809847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.028814333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:58.370" endtime="20201110 08:33:58.374"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:58.387" level="INFO">${OVERHEAD} = {'source_diff': [1.8609999999988358e-06, 1.889000000001445e-06, 1.8199999999995997e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.9160000000011113e-06, 1.86199999999830...</msg>
<status status="PASS" starttime="20201110 08:33:58.374" endtime="20201110 08:33:58.387"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:58.391" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:58.390" endtime="20201110 08:33:58.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:58.394" level="INFO">VALUE: [1.8609999999988358e-06, 1.889000000001445e-06, 1.8199999999995997e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.9160000000011113e-06, 1.8619999999983095e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.8330000000031654e-06, 1.8609999999988358e-06, 1.8619999999983095e-06, 1.8610000000023053e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.8470000000027353e-06, 1.8609999999988358e-06, 1.8619999999983095e-06, 1.903000000001015e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8619999999983095e-06, 1.903000000001015e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8619999999983095e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8479999999987395e-06, 1.862000000001779e-06, 1.8619999999983095e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.846999999999266e-06, 1.8619999999983095e-06, 1.848000000002209e-06, 1.8609999999988358e-06, 1.819000000000126e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.846999999999266e-06]</msg>
<status status="PASS" starttime="20201110 08:33:58.392" endtime="20201110 08:33:58.394"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.388" endtime="20201110 08:33:58.395"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.397" endtime="20201110 08:33:58.399"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:58.401" endtime="20201110 08:33:58.420"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.399" endtime="20201110 08:33:58.421"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.396" endtime="20201110 08:33:58.421"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.019" endtime="20201110 08:33:58.421"></status>
</kw>
<msg timestamp="20201110 08:33:58.422" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.429" endtime="20201110 08:33:58.445"></status>
</kw>
<msg timestamp="20201110 08:33:58.445" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:58.428" endtime="20201110 08:33:58.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:58.448" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:58.446" endtime="20201110 08:33:58.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.449" endtime="20201110 08:33:58.450"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.425" endtime="20201110 08:33:58.451"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.423" endtime="20201110 08:33:58.451"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.458" endtime="20201110 08:33:58.745"></status>
</kw>
<msg timestamp="20201110 08:33:58.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017970069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017971917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:58.456" endtime="20201110 08:33:58.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:58.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017970069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017971917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:58.749" endtime="20201110 08:33:58.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.758" endtime="20201110 08:33:58.759"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.454" endtime="20201110 08:33:58.760"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.452" endtime="20201110 08:33:58.760"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:58.765" level="INFO">${RESULT} = [{'time': 0.017971917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8479999999987395e-06, 'source_diff': 1.8479999999987395e-06}, {'time': 0.017977319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:58.761" endtime="20201110 08:33:58.765"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:58.779" level="INFO">${OVERHEAD} = {'source_diff': [1.8479999999987395e-06, 1.915999999997642e-06, 1.903000000001015e-06, 1.8749999999984057e-06, 1.8619999999983095e-06, 1.8479999999987395e-06, 1.832999999999696e-06, 1.848000000002209e...</msg>
<status status="PASS" starttime="20201110 08:33:58.765" endtime="20201110 08:33:58.780"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:58.784" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:58.783" endtime="20201110 08:33:58.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:58.790" level="INFO">VALUE: [1.8479999999987395e-06, 1.915999999997642e-06, 1.903000000001015e-06, 1.8749999999984057e-06, 1.8619999999983095e-06, 1.8479999999987395e-06, 1.832999999999696e-06, 1.848000000002209e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.834000000002639e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.832999999999696e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.8619999999983095e-06, 1.8749999999984057e-06, 1.8750000000018752e-06, 1.8200000000030692e-06, 1.8749999999984057e-06, 1.9029999999975455e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8050000000005562e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.832999999999696e-06, 1.8470000000027353e-06, 1.8199999999995997e-06, 1.8609999999988358e-06, 1.917000000000585e-06, 1.8609999999988358e-06, 1.832999999999696e-06, 1.8749999999984057e-06, 1.8609999999988358e-06]</msg>
<status status="PASS" starttime="20201110 08:33:58.785" endtime="20201110 08:33:58.791"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.780" endtime="20201110 08:33:58.791"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.794" endtime="20201110 08:33:58.798"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:58.800" endtime="20201110 08:33:58.820"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.798" endtime="20201110 08:33:58.821"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.792" endtime="20201110 08:33:58.823"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.422" endtime="20201110 08:33:58.824"></status>
</kw>
<msg timestamp="20201110 08:33:58.825" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.833" endtime="20201110 08:33:58.849"></status>
</kw>
<msg timestamp="20201110 08:33:58.849" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:58.832" endtime="20201110 08:33:58.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:58.852" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:58.850" endtime="20201110 08:33:58.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.853" endtime="20201110 08:33:58.854"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.829" endtime="20201110 08:33:58.855"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.827" endtime="20201110 08:33:58.855"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.862" endtime="20201110 08:33:59.145"></status>
</kw>
<msg timestamp="20201110 08:33:59.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021947972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021949833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:58.860" endtime="20201110 08:33:59.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:59.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021947972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021949833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:59.149" endtime="20201110 08:33:59.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.168" endtime="20201110 08:33:59.170"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.858" endtime="20201110 08:33:59.171"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.856" endtime="20201110 08:33:59.171"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:59.175" level="INFO">${RESULT} = [{'time': 0.021949833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.021956639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:59.172" endtime="20201110 08:33:59.176"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:59.190" level="INFO">${OVERHEAD} = {'source_diff': [1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.903000000001015e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.846999999999266...</msg>
<status status="PASS" starttime="20201110 08:33:59.176" endtime="20201110 08:33:59.191"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:59.195" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:59.194" endtime="20201110 08:33:59.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:59.197" level="INFO">VALUE: [1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.903000000001015e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.8199999999995997e-06, 1.8199999999995997e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8749999999984057e-06, 1.8750000000018752e-06, 1.846999999999266e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.8750000000018752e-06, 1.8750000000018752e-06, 1.917000000000585e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.9160000000011113e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.917000000000585e-06]</msg>
<status status="PASS" starttime="20201110 08:33:59.196" endtime="20201110 08:33:59.198"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.191" endtime="20201110 08:33:59.199"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.201" endtime="20201110 08:33:59.203"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:59.205" endtime="20201110 08:33:59.224"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.203" endtime="20201110 08:33:59.225"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.199" endtime="20201110 08:33:59.225"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.826" endtime="20201110 08:33:59.225"></status>
</kw>
<msg timestamp="20201110 08:33:59.226" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.234" endtime="20201110 08:33:59.249"></status>
</kw>
<msg timestamp="20201110 08:33:59.250" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:59.232" endtime="20201110 08:33:59.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:59.252" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:59.251" endtime="20201110 08:33:59.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.253" endtime="20201110 08:33:59.255"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.229" endtime="20201110 08:33:59.255"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.228" endtime="20201110 08:33:59.256"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.263" endtime="20201110 08:33:59.566"></status>
</kw>
<msg timestamp="20201110 08:33:59.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018379861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018381722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:59.261" endtime="20201110 08:33:59.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:59.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018379861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018381722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:59.576" endtime="20201110 08:33:59.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.595" endtime="20201110 08:33:59.596"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.258" endtime="20201110 08:33:59.597"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.256" endtime="20201110 08:33:59.597"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:59.602" level="INFO">${RESULT} = [{'time': 0.018381722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.018386292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:59.598" endtime="20201110 08:33:59.602"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:59.616" level="INFO">${OVERHEAD} = {'source_diff': [1.8609999999988358e-06, 1.8199999999995997e-06, 1.7910000000009862e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.9160000000011113e-06, 1.8339999999991...</msg>
<status status="PASS" starttime="20201110 08:33:59.603" endtime="20201110 08:33:59.616"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:59.620" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:59.619" endtime="20201110 08:33:59.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:59.623" level="INFO">VALUE: [1.8609999999988358e-06, 1.8199999999995997e-06, 1.7910000000009862e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.9160000000011113e-06, 1.8339999999991696e-06, 1.8749999999984057e-06, 1.9160000000011113e-06, 1.8060000000000298e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.8750000000018752e-06, 1.917000000000585e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8470000000027353e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.819000000000126e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8470000000027353e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.9160000000011113e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.862000000001779e-06, 1.917000000000585e-06, 1.8750000000018752e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.8750000000018752e-06]</msg>
<status status="PASS" starttime="20201110 08:33:59.621" endtime="20201110 08:33:59.630"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.617" endtime="20201110 08:33:59.630"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.633" endtime="20201110 08:33:59.634"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:59.636" endtime="20201110 08:33:59.656"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.635" endtime="20201110 08:33:59.656"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.631" endtime="20201110 08:33:59.657"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.226" endtime="20201110 08:33:59.657"></status>
</kw>
<msg timestamp="20201110 08:33:59.657" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.666" endtime="20201110 08:33:59.681"></status>
</kw>
<msg timestamp="20201110 08:33:59.681" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:59.664" endtime="20201110 08:33:59.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:59.684" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:59.682" endtime="20201110 08:33:59.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.685" endtime="20201110 08:33:59.686"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.661" endtime="20201110 08:33:59.687"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.659" endtime="20201110 08:33:59.687"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.694" endtime="20201110 08:33:59.985"></status>
</kw>
<msg timestamp="20201110 08:33:59.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018560903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018562764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:59.693" endtime="20201110 08:33:59.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:59.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018560903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018562764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:59.989" endtime="20201110 08:33:59.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.998" endtime="20201110 08:34:00.000"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.690" endtime="20201110 08:34:00.001"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.688" endtime="20201110 08:34:00.001"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:00.005" level="INFO">${RESULT} = [{'time': 0.018562764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.018566764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:00.002" endtime="20201110 08:34:00.005"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:34:00.019" level="INFO">${OVERHEAD} = {'source_diff': [1.8609999999988358e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.84699999999926...</msg>
<status status="PASS" starttime="20201110 08:34:00.006" endtime="20201110 08:34:00.020"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:00.024" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:34:00.023" endtime="20201110 08:34:00.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:00.026" level="INFO">VALUE: [1.8609999999988358e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.9160000000011113e-06, 1.8609999999988358e-06, 1.832999999999696e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.846999999999266e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8050000000005562e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.915999999997642e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.832999999999696e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.7919999999969904e-06, 1.8609999999988358e-06]</msg>
<status status="PASS" starttime="20201110 08:34:00.025" endtime="20201110 08:34:00.027"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.020" endtime="20201110 08:34:00.028"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.030" endtime="20201110 08:34:00.031"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:00.034" endtime="20201110 08:34:00.053"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.032" endtime="20201110 08:34:00.054"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.028" endtime="20201110 08:34:00.054"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.658" endtime="20201110 08:34:00.054"></status>
</kw>
<msg timestamp="20201110 08:34:00.055" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.063" endtime="20201110 08:34:00.078"></status>
</kw>
<msg timestamp="20201110 08:34:00.079" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:00.061" endtime="20201110 08:34:00.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:00.081" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:00.080" endtime="20201110 08:34:00.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.083" endtime="20201110 08:34:00.084"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.058" endtime="20201110 08:34:00.085"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.056" endtime="20201110 08:34:00.085"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.092" endtime="20201110 08:34:00.377"></status>
</kw>
<msg timestamp="20201110 08:34:00.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018368167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018370042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:00.090" endtime="20201110 08:34:00.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:00.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018368167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018370042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:00.383" endtime="20201110 08:34:00.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.392" endtime="20201110 08:34:00.393"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.088" endtime="20201110 08:34:00.394"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.086" endtime="20201110 08:34:00.394"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:00.398" level="INFO">${RESULT} = [{'time': 0.018370042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.018376958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:00.395" endtime="20201110 08:34:00.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:34:00.414" level="INFO">${OVERHEAD} = {'source_diff': [1.8749999999984057e-06, 1.8889999999979756e-06, 1.848000000002209e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.903000000001015e-06, 1.8199999999995997e-06, 1.848000000002209...</msg>
<status status="PASS" starttime="20201110 08:34:00.399" endtime="20201110 08:34:00.414"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:00.418" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:34:00.417" endtime="20201110 08:34:00.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:00.421" level="INFO">VALUE: [1.8749999999984057e-06, 1.8889999999979756e-06, 1.848000000002209e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.903000000001015e-06, 1.8199999999995997e-06, 1.848000000002209e-06, 1.848000000002209e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.901999999998072e-06, 1.8750000000018752e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.848000000002209e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8479999999987395e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.846999999999266e-06, 1.8749999999984057e-06, 1.848000000002209e-06, 1.8749999999984057e-06, 1.8479999999987395e-06, 1.8609999999988358e-06, 1.9449999999997247e-06, 1.8749999999984057e-06, 1.8479999999987395e-06, 1.8479999999987395e-06, 1.8609999999988358e-06, 1.862000000001779e-06, 1.848000000002209e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.8619999999983095e-06, 1.8479999999987395e-06, 1.8610000000023053e-06, 1.862000000001779e-06, 1.846999999999266e-06, 1.8619999999983095e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.862000000001779e-06, 1.8610000000023053e-06]</msg>
<status status="PASS" starttime="20201110 08:34:00.419" endtime="20201110 08:34:00.422"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.415" endtime="20201110 08:34:00.422"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.424" endtime="20201110 08:34:00.426"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:00.428" endtime="20201110 08:34:00.447"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.426" endtime="20201110 08:34:00.448"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.423" endtime="20201110 08:34:00.448"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.055" endtime="20201110 08:34:00.449"></status>
</kw>
<msg timestamp="20201110 08:34:00.449" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.457" endtime="20201110 08:34:00.472"></status>
</kw>
<msg timestamp="20201110 08:34:00.473" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:00.455" endtime="20201110 08:34:00.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:00.475" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:00.474" endtime="20201110 08:34:00.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.476" endtime="20201110 08:34:00.478"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.453" endtime="20201110 08:34:00.479"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.451" endtime="20201110 08:34:00.479"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.486" endtime="20201110 08:34:00.777"></status>
</kw>
<msg timestamp="20201110 08:34:00.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018599014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018600806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:00.484" endtime="20201110 08:34:00.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:00.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018599014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018600806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:00.784" endtime="20201110 08:34:00.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.793" endtime="20201110 08:34:00.795"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.482" endtime="20201110 08:34:00.795"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.480" endtime="20201110 08:34:00.796"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:00.800" level="INFO">${RESULT} = [{'time': 0.018600806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.018606417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:00.796" endtime="20201110 08:34:00.800"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:34:00.814" level="INFO">${OVERHEAD} = {'source_diff': [1.7920000000004599e-06, 1.903000000001015e-06, 1.8750000000018752e-06, 1.8050000000005562e-06, 1.889000000001445e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.847000000002735...</msg>
<status status="PASS" starttime="20201110 08:34:00.801" endtime="20201110 08:34:00.814"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:00.818" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:34:00.817" endtime="20201110 08:34:00.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:00.821" level="INFO">VALUE: [1.7920000000004599e-06, 1.903000000001015e-06, 1.8750000000018752e-06, 1.8050000000005562e-06, 1.889000000001445e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8470000000027353e-06, 1.8470000000027353e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.8060000000000298e-06, 1.8610000000023053e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.832999999999696e-06, 1.8749999999984057e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.917000000000585e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8750000000018752e-06, 1.9169999999971155e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.8750000000018752e-06, 1.8470000000027353e-06]</msg>
<status status="PASS" starttime="20201110 08:34:00.819" endtime="20201110 08:34:00.822"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.815" endtime="20201110 08:34:00.822"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.825" endtime="20201110 08:34:00.826"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:00.830" endtime="20201110 08:34:00.851"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.828" endtime="20201110 08:34:00.851"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.823" endtime="20201110 08:34:00.852"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.449" endtime="20201110 08:34:00.853"></status>
</kw>
<msg timestamp="20201110 08:34:00.853" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.864" endtime="20201110 08:34:00.881"></status>
</kw>
<msg timestamp="20201110 08:34:00.882" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:00.861" endtime="20201110 08:34:00.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:00.884" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:00.883" endtime="20201110 08:34:00.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.886" endtime="20201110 08:34:00.887"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.857" endtime="20201110 08:34:00.888"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.855" endtime="20201110 08:34:00.888"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.895" endtime="20201110 08:34:01.186"></status>
</kw>
<msg timestamp="20201110 08:34:01.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023111958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023113833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:00.893" endtime="20201110 08:34:01.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:01.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023111958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023113833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:01.190" endtime="20201110 08:34:01.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:01.199" endtime="20201110 08:34:01.201"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.891" endtime="20201110 08:34:01.202"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.889" endtime="20201110 08:34:01.202"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:01.206" level="INFO">${RESULT} = [{'time': 0.023113833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}, {'time': 0.023118375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:01.203" endtime="20201110 08:34:01.207"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:34:01.220" level="INFO">${OVERHEAD} = {'source_diff': [1.8750000000018752e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8750000000018752e-06, 1.846999999999266e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.84699999999926...</msg>
<status status="PASS" starttime="20201110 08:34:01.207" endtime="20201110 08:34:01.220"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:01.225" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:34:01.224" endtime="20201110 08:34:01.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:01.227" level="INFO">VALUE: [1.8750000000018752e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8750000000018752e-06, 1.846999999999266e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8750000000018752e-06, 1.917000000000585e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.8749999999984057e-06, 1.8060000000000298e-06, 1.846999999999266e-06, 1.8750000000018752e-06, 1.8610000000023053e-06, 1.903000000001015e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8889999999979756e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.9160000000011113e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.8750000000018752e-06, 1.917000000000585e-06, 1.8060000000000298e-06, 1.8609999999988358e-06]</msg>
<status status="PASS" starttime="20201110 08:34:01.226" endtime="20201110 08:34:01.228"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.221" endtime="20201110 08:34:01.229"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:01.231" endtime="20201110 08:34:01.232"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:01.235" endtime="20201110 08:34:01.254"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.233" endtime="20201110 08:34:01.255"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.229" endtime="20201110 08:34:01.255"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.854" endtime="20201110 08:34:01.255"></status>
</kw>
<msg timestamp="20201110 08:34:01.256" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:01.264" endtime="20201110 08:34:01.279"></status>
</kw>
<msg timestamp="20201110 08:34:01.280" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:01.262" endtime="20201110 08:34:01.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:01.282" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:01.281" endtime="20201110 08:34:01.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:01.283" endtime="20201110 08:34:01.285"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.259" endtime="20201110 08:34:01.286"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.257" endtime="20201110 08:34:01.286"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:01.293" endtime="20201110 08:34:01.578"></status>
</kw>
<msg timestamp="20201110 08:34:01.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018383875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01838575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:01.291" endtime="20201110 08:34:01.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:01.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018383875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01838575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:01.583" endtime="20201110 08:34:01.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:01.592" endtime="20201110 08:34:01.593"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.288" endtime="20201110 08:34:01.594"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.287" endtime="20201110 08:34:01.594"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:01.599" level="INFO">${RESULT} = [{'time': 0.01838575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.018391319, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201110 08:34:01.595" endtime="20201110 08:34:01.599"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:34:01.613" level="INFO">${OVERHEAD} = {'source_diff': [1.8749999999984057e-06, 1.9160000000011113e-06, 1.8610000000023053e-06, 1.8060000000000298e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8750000000018...</msg>
<status status="PASS" starttime="20201110 08:34:01.600" endtime="20201110 08:34:01.613"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:01.617" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:34:01.616" endtime="20201110 08:34:01.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:01.620" level="INFO">VALUE: [1.8749999999984057e-06, 1.9160000000011113e-06, 1.8610000000023053e-06, 1.8060000000000298e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.930000000000681e-06, 1.8619999999983095e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.903000000001015e-06, 1.819000000000126e-06, 1.862000000001779e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.848000000002209e-06, 1.8610000000023053e-06, 1.8479999999987395e-06, 1.8609999999988358e-06, 1.8060000000000298e-06, 1.8060000000000298e-06, 1.8479999999987395e-06, 1.8610000000023053e-06, 1.9169999999971155e-06, 1.8750000000018752e-06, 1.8199999999995997e-06, 1.846999999999266e-06, 1.862000000001779e-06, 1.8339999999991696e-06, 1.8750000000018752e-06, 1.889000000001445e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.832999999999696e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.8609999999988358e-06]</msg>
<status status="PASS" starttime="20201110 08:34:01.618" endtime="20201110 08:34:01.620"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.614" endtime="20201110 08:34:01.621"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:01.623" endtime="20201110 08:34:01.625"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:01.627" endtime="20201110 08:34:01.646"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.625" endtime="20201110 08:34:01.647"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.622" endtime="20201110 08:34:01.648"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.256" endtime="20201110 08:34:01.648"></status>
</kw>
<msg timestamp="20201110 08:34:01.649" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:01.660" endtime="20201110 08:34:01.677"></status>
</kw>
<msg timestamp="20201110 08:34:01.678" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:01.658" endtime="20201110 08:34:01.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:01.682" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:01.680" endtime="20201110 08:34:01.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:01.684" endtime="20201110 08:34:01.686"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.654" endtime="20201110 08:34:01.687"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.652" endtime="20201110 08:34:01.688"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:01.698" endtime="20201110 08:34:01.980"></status>
</kw>
<msg timestamp="20201110 08:34:01.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022816458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022818306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:01.695" endtime="20201110 08:34:01.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:01.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022816458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022818306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:01.984" endtime="20201110 08:34:01.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:01.993" endtime="20201110 08:34:01.994"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.692" endtime="20201110 08:34:01.995"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.689" endtime="20201110 08:34:01.995"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:01.999" level="INFO">${RESULT} = [{'time': 0.022818306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8479999999987395e-06, 'source_diff': 1.8479999999987395e-06}, {'time': 0.022824056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:01.996" endtime="20201110 08:34:02.000"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:34:02.014" level="INFO">${OVERHEAD} = {'source_diff': [1.8479999999987395e-06, 1.8479999999987395e-06, 1.889000000001445e-06, 1.8619999999983095e-06, 1.8189999999966566e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.833999999999169...</msg>
<status status="PASS" starttime="20201110 08:34:02.000" endtime="20201110 08:34:02.015"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.019" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:34:02.018" endtime="20201110 08:34:02.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.021" level="INFO">VALUE: [1.8479999999987395e-06, 1.8479999999987395e-06, 1.889000000001445e-06, 1.8619999999983095e-06, 1.8189999999966566e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8339999999991696e-06, 1.848000000002209e-06, 1.8479999999987395e-06, 1.8609999999988358e-06, 1.8199999999995997e-06, 1.8749999999984057e-06, 1.819000000000126e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.8749999999984057e-06, 1.917000000000585e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8750000000018752e-06, 1.819000000000126e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.889000000001445e-06, 1.8749999999984057e-06, 1.8610000000023053e-06, 1.8610000000023053e-06]</msg>
<status status="PASS" starttime="20201110 08:34:02.020" endtime="20201110 08:34:02.022"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.015" endtime="20201110 08:34:02.023"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.025" endtime="20201110 08:34:02.026"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:02.028" endtime="20201110 08:34:02.048"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.027" endtime="20201110 08:34:02.048"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.023" endtime="20201110 08:34:02.049"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.650" endtime="20201110 08:34:02.049"></status>
</kw>
<msg timestamp="20201110 08:34:02.049" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.057" endtime="20201110 08:34:02.072"></status>
</kw>
<msg timestamp="20201110 08:34:02.073" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:02.055" endtime="20201110 08:34:02.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.075" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:02.074" endtime="20201110 08:34:02.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.076" endtime="20201110 08:34:02.078"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.053" endtime="20201110 08:34:02.078"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.051" endtime="20201110 08:34:02.079"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.085" endtime="20201110 08:34:02.377"></status>
</kw>
<msg timestamp="20201110 08:34:02.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017972056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017973917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:02.084" endtime="20201110 08:34:02.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017972056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017973917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:02.381" endtime="20201110 08:34:02.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.389" endtime="20201110 08:34:02.391"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.081" endtime="20201110 08:34:02.392"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.079" endtime="20201110 08:34:02.392"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:02.396" level="INFO">${RESULT} = [{'time': 0.017973917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.017980167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:02.393" endtime="20201110 08:34:02.396"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:34:02.410" level="INFO">${OVERHEAD} = {'source_diff': [1.8609999999988358e-06, 1.8479999999987395e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.8750000000018752e-06, 1.8609999999988...</msg>
<status status="PASS" starttime="20201110 08:34:02.397" endtime="20201110 08:34:02.410"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.414" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:34:02.413" endtime="20201110 08:34:02.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.416" level="INFO">VALUE: [1.8609999999988358e-06, 1.8479999999987395e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.915999999997642e-06, 1.8749999999984057e-06, 1.8050000000005562e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.8060000000000298e-06, 1.889000000001445e-06, 1.862000000001779e-06, 1.862000000001779e-06, 1.8609999999988358e-06, 1.8619999999983095e-06, 1.7919999999969904e-06, 1.862000000001779e-06, 1.8479999999987395e-06, 1.917000000000585e-06, 1.862000000001779e-06, 1.8750000000018752e-06, 1.917000000000585e-06, 1.8750000000018752e-06, 1.8619999999983095e-06, 1.8749999999984057e-06, 1.8750000000018752e-06, 1.862000000001779e-06, 1.8609999999988358e-06, 1.8619999999983095e-06, 1.862000000001779e-06, 1.8610000000023053e-06, 1.862000000001779e-06, 1.862000000001779e-06, 1.8619999999983095e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.903000000001015e-06, 1.8610000000023053e-06, 1.917000000000585e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8610000000023053e-06]</msg>
<status status="PASS" starttime="20201110 08:34:02.415" endtime="20201110 08:34:02.417"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.411" endtime="20201110 08:34:02.418"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.420" endtime="20201110 08:34:02.421"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:02.424" endtime="20201110 08:34:02.443"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.422" endtime="20201110 08:34:02.443"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.418" endtime="20201110 08:34:02.444"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.050" endtime="20201110 08:34:02.444"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.417" endtime="20201110 08:34:02.444"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:02.448" endtime="20201110 08:34:02.468"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.447" endtime="20201110 08:34:02.468"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.446" endtime="20201110 08:34:02.468"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201110 08:33:54.342" endtime="20201110 08:34:02.469" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:02.475" endtime="20201110 08:34:02.495"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.474" endtime="20201110 08:34:02.495"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.508" endtime="20201110 08:34:02.528"></status>
</kw>
<msg timestamp="20201110 08:34:02.528" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:02.507" endtime="20201110 08:34:02.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.531" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:02.529" endtime="20201110 08:34:02.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.534" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:34:02.532" endtime="20201110 08:34:02.534"></status>
</kw>
<status status="FAIL" starttime="20201110 08:34:02.504" endtime="20201110 08:34:02.535"></status>
</kw>
<status status="FAIL" starttime="20201110 08:34:02.502" endtime="20201110 08:34:02.535"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.500" endtime="20201110 08:34:02.536"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:34:02.539" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:34:02.539" endtime="20201110 08:34:02.540"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.537" endtime="20201110 08:34:02.540"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.500" endtime="20201110 08:34:02.540"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.499" endtime="20201110 08:34:02.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.541" endtime="20201110 08:34:02.543"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.498" endtime="20201110 08:34:02.543"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.496" endtime="20201110 08:34:02.544"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.473" endtime="20201110 08:34:02.544"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.552" endtime="20201110 08:34:02.575"></status>
</kw>
<msg timestamp="20201110 08:34:02.575" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:02.551" endtime="20201110 08:34:02.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.577" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:02.576" endtime="20201110 08:34:02.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.579" endtime="20201110 08:34:02.580"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.548" endtime="20201110 08:34:02.581"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.546" endtime="20201110 08:34:02.581"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.583" endtime="20201110 08:34:02.585"></status>
</kw>
<msg timestamp="20201110 08:34:02.585" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201110 08:34:02.582" endtime="20201110 08:34:02.586"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.590" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:34:02.588" endtime="20201110 08:34:02.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.592" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:34:02.591" endtime="20201110 08:34:02.592"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.586" endtime="20201110 08:34:02.592"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.596" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:34:02.595" endtime="20201110 08:34:02.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.598" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:34:02.597" endtime="20201110 08:34:02.599"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.593" endtime="20201110 08:34:02.599"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.606" endtime="20201110 08:34:02.893"></status>
</kw>
<msg timestamp="20201110 08:34:02.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067801708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067844514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:02.604" endtime="20201110 08:34:02.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067801708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067844514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:02.897" endtime="20201110 08:34:02.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.905" endtime="20201110 08:34:02.907"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.602" endtime="20201110 08:34:02.907"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.600" endtime="20201110 08:34:02.908"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:02.912" level="INFO">${RESULT} = [{'time': 0.067844514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.280599999999246e-05, 'source_diff': 4.280599999999246e-05}, {'time': 0.067858042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:02.908" endtime="20201110 08:34:02.912"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:34:02.925" level="INFO">${OVERHEAD} = {'source_diff': [4.280599999999246e-05, 8.055999999992403e-06, 8.068999999999438e-06, 8.055999999992403e-06, 8.041999999999772e-06, 7.999999999994123e-06, 8.068999999999438e-06, 8.054999999992929e-06,...</msg>
<status status="PASS" starttime="20201110 08:34:02.913" endtime="20201110 08:34:02.926"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.930" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201110 08:34:02.929" endtime="20201110 08:34:02.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.933" level="INFO">VALUE: [4.280599999999246e-05, 8.055999999992403e-06, 8.068999999999438e-06, 8.055999999992403e-06, 8.041999999999772e-06, 7.999999999994123e-06, 8.068999999999438e-06, 8.054999999992929e-06, 8.041999999999772e-06, 8.041999999999772e-06, 8.027000000007667e-06, 8.055999999992403e-06, 8.055000000006807e-06, 7.986000000001492e-06, 8.139000000004226e-06, 8.055999999992403e-06, 8.027999999993263e-06, 8.041999999999772e-06, 8.055000000006807e-06, 8.04200000001365e-06, 8.054999999992929e-06, 8.041999999999772e-06, 8.041000000000298e-06, 8.027000000007667e-06, 8.055999999992403e-06, 8.026999999993789e-06, 8.041999999999772e-06, 8.027999999993263e-06, 8.055000000006807e-06, 8.05600000000628e-06, 8.054999999992929e-06, 8.068999999999438e-06, 8.068999999999438e-06, 8.041999999999772e-06, 8.02800000000714e-06, 8.027999999993263e-06, 8.069999999998911e-06, 8.041999999999772e-06, 8.069999999998911e-06, 8.04099999998642e-06, 8.014000000000632e-06, 8.068999999999438e-06, 8.027999999993263e-06, 8.054999999992929e-06, 8.055999999992403e-06, 8.05600000000628e-06, 8.041999999999772e-06, 8.041000000000298e-06, 8.05600000000628e-06, 8.02800000000714e-06]</msg>
<status status="PASS" starttime="20201110 08:34:02.932" endtime="20201110 08:34:02.934"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.926" endtime="20201110 08:34:02.934"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.936" endtime="20201110 08:34:02.938"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:02.940" endtime="20201110 08:34:02.959"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.938" endtime="20201110 08:34:02.960"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.935" endtime="20201110 08:34:02.960"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.544" endtime="20201110 08:34:02.960"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201110 08:34:02.470" endtime="20201110 08:34:02.961" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:02.968" endtime="20201110 08:34:02.987"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.966" endtime="20201110 08:34:02.988"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.002" endtime="20201110 08:34:03.018"></status>
</kw>
<msg timestamp="20201110 08:34:03.018" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:03.000" endtime="20201110 08:34:03.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:03.021" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:03.019" endtime="20201110 08:34:03.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:34:03.024" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:34:03.022" endtime="20201110 08:34:03.024"></status>
</kw>
<status status="FAIL" starttime="20201110 08:34:02.996" endtime="20201110 08:34:03.025"></status>
</kw>
<status status="FAIL" starttime="20201110 08:34:02.994" endtime="20201110 08:34:03.025"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.993" endtime="20201110 08:34:03.026"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:34:03.029" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:34:03.029" endtime="20201110 08:34:03.030"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.027" endtime="20201110 08:34:03.030"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.992" endtime="20201110 08:34:03.030"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.991" endtime="20201110 08:34:03.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.031" endtime="20201110 08:34:03.033"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.990" endtime="20201110 08:34:03.033"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.988" endtime="20201110 08:34:03.034"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.965" endtime="20201110 08:34:03.034"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.043" endtime="20201110 08:34:03.110"></status>
</kw>
<msg timestamp="20201110 08:34:03.111" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:03.041" endtime="20201110 08:34:03.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:03.113" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:03.112" endtime="20201110 08:34:03.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.115" endtime="20201110 08:34:03.116"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.039" endtime="20201110 08:34:03.117"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.036" endtime="20201110 08:34:03.117"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.119" endtime="20201110 08:34:03.121"></status>
</kw>
<msg timestamp="20201110 08:34:03.121" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201110 08:34:03.118" endtime="20201110 08:34:03.122"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:03.125" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:34:03.124" endtime="20201110 08:34:03.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:03.127" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:34:03.127" endtime="20201110 08:34:03.128"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.122" endtime="20201110 08:34:03.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:03.132" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:34:03.131" endtime="20201110 08:34:03.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:03.134" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:34:03.133" endtime="20201110 08:34:03.135"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.129" endtime="20201110 08:34:03.135"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.143" endtime="20201110 08:34:03.433"></status>
</kw>
<msg timestamp="20201110 08:34:03.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066360375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066394458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:03.140" endtime="20201110 08:34:03.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:03.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066360375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066394458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:03.437" endtime="20201110 08:34:03.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.445" endtime="20201110 08:34:03.446"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.138" endtime="20201110 08:34:03.447"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.136" endtime="20201110 08:34:03.447"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:03.451" level="INFO">${RESULT} = [{'time': 0.066394458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.408300000000419e-05, 'source_diff': 3.408300000000419e-05}, {'time': 0.067367806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:03.448" endtime="20201110 08:34:03.452"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:34:03.467" level="INFO">${OVERHEAD} = {'source_diff': [3.408300000000419e-05, 3.416700000000161e-05, 3.417999999999477e-05, 3.419500000000075e-05, 3.422200000000042e-05, 3.413900000000247e-05, 3.4152999999995104e-05, 3.420799999999391e-05...</msg>
<status status="PASS" starttime="20201110 08:34:03.452" endtime="20201110 08:34:03.467"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:03.472" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201110 08:34:03.471" endtime="20201110 08:34:03.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:03.475" level="INFO">VALUE: [3.408300000000419e-05, 3.416700000000161e-05, 3.417999999999477e-05, 3.419500000000075e-05, 3.422200000000042e-05, 3.413900000000247e-05, 3.4152999999995104e-05, 3.420799999999391e-05, 3.418000000000865e-05, 3.4098000000010176e-05, 3.416700000000161e-05, 3.4180999999994244e-05, 3.411200000000281e-05, 3.416700000000161e-05, 3.419500000000075e-05, 3.424999999999956e-05, 3.4180999999994244e-05, 3.422299999999989e-05, 3.416700000000161e-05, 3.418100000000812e-05, 3.4166999999987735e-05, 3.417999999999477e-05, 3.4194999999986875e-05, 3.4236999999992523e-05, 3.419400000000128e-05, 3.418100000000812e-05, 3.418100000000812e-05, 3.419500000000075e-05, 3.4152999999995104e-05, 3.416700000000161e-05, 3.419400000000128e-05, 3.416700000000161e-05, 3.413900000000247e-05, 3.416599999998826e-05, 3.4180999999994244e-05, 3.417999999999477e-05, 3.420800000000779e-05, 3.420799999999391e-05, 3.4180999999994244e-05, 3.416700000000161e-05, 3.4152999999995104e-05, 3.419400000000128e-05, 3.4096999999996824e-05, 3.4180999999994244e-05, 3.415199999999563e-05, 3.4180999999994244e-05, 3.418000000000865e-05, 3.424999999999956e-05, 3.419400000000128e-05, 3.418100000000812e-05]</msg>
<status status="PASS" starttime="20201110 08:34:03.473" endtime="20201110 08:34:03.475"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.468" endtime="20201110 08:34:03.476"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.478" endtime="20201110 08:34:03.479"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:03.481" endtime="20201110 08:34:03.501"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.480" endtime="20201110 08:34:03.501"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.476" endtime="20201110 08:34:03.502"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.035" endtime="20201110 08:34:03.502"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201110 08:34:02.962" endtime="20201110 08:34:03.502" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:03.509" endtime="20201110 08:34:03.528"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.508" endtime="20201110 08:34:03.529"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.543" endtime="20201110 08:34:03.561"></status>
</kw>
<msg timestamp="20201110 08:34:03.561" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:03.540" endtime="20201110 08:34:03.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:03.564" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:03.562" endtime="20201110 08:34:03.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:34:03.567" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:34:03.565" endtime="20201110 08:34:03.567"></status>
</kw>
<status status="FAIL" starttime="20201110 08:34:03.538" endtime="20201110 08:34:03.568"></status>
</kw>
<status status="FAIL" starttime="20201110 08:34:03.535" endtime="20201110 08:34:03.568"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.534" endtime="20201110 08:34:03.569"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:34:03.573" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:34:03.572" endtime="20201110 08:34:03.573"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.570" endtime="20201110 08:34:03.573"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.533" endtime="20201110 08:34:03.573"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.533" endtime="20201110 08:34:03.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.574" endtime="20201110 08:34:03.576"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.531" endtime="20201110 08:34:03.576"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.530" endtime="20201110 08:34:03.577"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.506" endtime="20201110 08:34:03.577"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.586" endtime="20201110 08:34:03.784"></status>
</kw>
<msg timestamp="20201110 08:34:03.784" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:03.584" endtime="20201110 08:34:03.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:03.789" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:03.786" endtime="20201110 08:34:03.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.790" endtime="20201110 08:34:03.792"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.582" endtime="20201110 08:34:03.793"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.580" endtime="20201110 08:34:03.793"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.795" endtime="20201110 08:34:03.797"></status>
</kw>
<msg timestamp="20201110 08:34:03.797" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201110 08:34:03.794" endtime="20201110 08:34:03.798"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:03.802" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:34:03.800" endtime="20201110 08:34:03.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:03.804" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:34:03.803" endtime="20201110 08:34:03.804"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.798" endtime="20201110 08:34:03.804"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:03.808" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:34:03.807" endtime="20201110 08:34:03.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:03.810" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:34:03.809" endtime="20201110 08:34:03.811"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.805" endtime="20201110 08:34:03.811"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.818" endtime="20201110 08:34:04.124"></status>
</kw>
<msg timestamp="20201110 08:34:04.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070332903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070397597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:03.816" endtime="20201110 08:34:04.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070332903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070397597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:04.128" endtime="20201110 08:34:04.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.136" endtime="20201110 08:34:04.138"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.814" endtime="20201110 08:34:04.138"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.812" endtime="20201110 08:34:04.139"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:04.143" level="INFO">${RESULT} = [{'time': 0.070397597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.469400000000403e-05, 'source_diff': 6.469400000000403e-05}, {'time': 0.073950778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:04.140" endtime="20201110 08:34:04.143"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:34:04.157" level="INFO">${OVERHEAD} = {'source_diff': [6.469400000000403e-05, 6.436099999999889e-05, 6.434800000000573e-05, 6.436099999999889e-05, 6.436099999999889e-05, 6.436199999999836e-05, 6.434699999999238e-05, 6.436099999999889e-05,...</msg>
<status status="PASS" starttime="20201110 08:34:04.144" endtime="20201110 08:34:04.157"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.162" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201110 08:34:04.161" endtime="20201110 08:34:04.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.164" level="INFO">VALUE: [6.469400000000403e-05, 6.436099999999889e-05, 6.434800000000573e-05, 6.436099999999889e-05, 6.436099999999889e-05, 6.436199999999836e-05, 6.434699999999238e-05, 6.436099999999889e-05, 6.438899999999803e-05, 6.436199999999836e-05, 6.436099999999889e-05, 6.43750000000054e-05, 6.434700000000626e-05, 6.433299999999975e-05, 6.436099999999889e-05, 6.436100000001277e-05, 6.436100000001277e-05, 6.436199999998449e-05, 6.434699999999238e-05, 6.434799999999186e-05, 6.436100000001277e-05, 6.436099999998501e-05, 6.436099999998501e-05, 6.434799999999186e-05, 6.434699999999238e-05, 6.436099999998501e-05, 6.433399999999923e-05, 6.440199999999119e-05, 6.436199999998449e-05, 6.437499999997764e-05, 6.426300000000884e-05, 6.436100000001277e-05, 6.434699999999238e-05, 6.436100000001277e-05, 6.434699999999238e-05, 6.43750000000054e-05, 6.434700000002014e-05, 6.434800000001961e-05, 6.433299999999975e-05, 6.440299999999066e-05, 6.433399999999923e-05, 6.434699999999238e-05, 6.436099999998501e-05, 6.436100000001277e-05, 6.436099999998501e-05, 6.436099999998501e-05, 6.433299999999975e-05, 6.433299999999975e-05, 6.43750000000054e-05, 6.434700000002014e-05]</msg>
<status status="PASS" starttime="20201110 08:34:04.163" endtime="20201110 08:34:04.165"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.158" endtime="20201110 08:34:04.165"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.167" endtime="20201110 08:34:04.169"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:04.171" endtime="20201110 08:34:04.190"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.169" endtime="20201110 08:34:04.191"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.166" endtime="20201110 08:34:04.191"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.578" endtime="20201110 08:34:04.192"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201110 08:34:03.504" endtime="20201110 08:34:04.192" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:04.199" endtime="20201110 08:34:04.218"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.197" endtime="20201110 08:34:04.219"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.233" endtime="20201110 08:34:04.250"></status>
</kw>
<msg timestamp="20201110 08:34:04.250" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:04.231" endtime="20201110 08:34:04.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.253" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:04.251" endtime="20201110 08:34:04.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.256" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:34:04.254" endtime="20201110 08:34:04.256"></status>
</kw>
<status status="FAIL" starttime="20201110 08:34:04.228" endtime="20201110 08:34:04.257"></status>
</kw>
<status status="FAIL" starttime="20201110 08:34:04.226" endtime="20201110 08:34:04.257"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.224" endtime="20201110 08:34:04.258"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:34:04.261" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:34:04.261" endtime="20201110 08:34:04.262"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.259" endtime="20201110 08:34:04.262"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.224" endtime="20201110 08:34:04.263"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.223" endtime="20201110 08:34:04.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.264" endtime="20201110 08:34:04.265"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.221" endtime="20201110 08:34:04.266"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.219" endtime="20201110 08:34:04.266"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.196" endtime="20201110 08:34:04.266"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.275" endtime="20201110 08:34:04.297"></status>
</kw>
<msg timestamp="20201110 08:34:04.298" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:04.273" endtime="20201110 08:34:04.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.300" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:04.299" endtime="20201110 08:34:04.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.302" endtime="20201110 08:34:04.303"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.270" endtime="20201110 08:34:04.304"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.268" endtime="20201110 08:34:04.304"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.306" endtime="20201110 08:34:04.308"></status>
</kw>
<msg timestamp="20201110 08:34:04.308" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201110 08:34:04.305" endtime="20201110 08:34:04.308"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.312" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:34:04.311" endtime="20201110 08:34:04.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.314" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:34:04.313" endtime="20201110 08:34:04.315"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.309" endtime="20201110 08:34:04.315"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.319" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:34:04.318" endtime="20201110 08:34:04.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.321" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:34:04.320" endtime="20201110 08:34:04.322"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.316" endtime="20201110 08:34:04.322"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.328" endtime="20201110 08:34:04.617"></status>
</kw>
<msg timestamp="20201110 08:34:04.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066283931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066285444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:04.327" endtime="20201110 08:34:04.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066283931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066285444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:04.624" endtime="20201110 08:34:04.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.638" endtime="20201110 08:34:04.641"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.324" endtime="20201110 08:34:04.643"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.323" endtime="20201110 08:34:04.644"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:04.659" level="INFO">${RESULT} = [{'time': 0.066285444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5129999999946575e-06, 'source_diff': 1.5129999999946575e-06}, {'time': 0.066297889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:04.653" endtime="20201110 08:34:04.660"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:34:04.682" level="INFO">${OVERHEAD} = {'source_diff': [1.5129999999946575e-06, 1.4579999999958515e-06, 1.5270000000011663e-06, 1.514000000008009e-06, 1.5420000000071488e-06, 1.52800000000064e-06, 1.514000000008009e-06, 1.5410000000076751e...</msg>
<status status="PASS" starttime="20201110 08:34:04.661" endtime="20201110 08:34:04.682"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.687" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201110 08:34:04.685" endtime="20201110 08:34:04.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.689" level="INFO">VALUE: [1.5129999999946575e-06, 1.4579999999958515e-06, 1.5270000000011663e-06, 1.514000000008009e-06, 1.5420000000071488e-06, 1.52800000000064e-06, 1.514000000008009e-06, 1.5410000000076751e-06, 1.5420000000071488e-06, 1.5550000000003061e-06, 1.541999999993271e-06, 1.5139999999941312e-06, 1.514000000008009e-06, 1.4589999999953251e-06, 1.5139999999941312e-06, 1.5420000000071488e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.541999999993271e-06, 1.52800000000064e-06, 1.5139999999941312e-06, 1.5000000000015001e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.541999999993271e-06, 1.514000000008009e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.4720000000023603e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.5000000000015001e-06, 1.5559999999997798e-06, 1.52800000000064e-06, 1.5139999999941312e-06, 1.52800000000064e-06, 1.486999999994465e-06, 1.52800000000064e-06, 1.5000000000015001e-06, 1.5550000000003061e-06, 1.5139999999941312e-06, 1.514000000008009e-06, 1.5420000000071488e-06, 1.52800000000064e-06, 1.4440000000032205e-06]</msg>
<status status="PASS" starttime="20201110 08:34:04.688" endtime="20201110 08:34:04.690"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.683" endtime="20201110 08:34:04.690"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.693" endtime="20201110 08:34:04.694"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:04.697" endtime="20201110 08:34:04.716"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.695" endtime="20201110 08:34:04.717"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.691" endtime="20201110 08:34:04.718"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.267" endtime="20201110 08:34:04.719"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201110 08:34:04.194" endtime="20201110 08:34:04.719" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:04.729" endtime="20201110 08:34:04.749"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.726" endtime="20201110 08:34:04.750"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.764" endtime="20201110 08:34:04.782"></status>
</kw>
<msg timestamp="20201110 08:34:04.782" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:04.761" endtime="20201110 08:34:04.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.785" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:04.783" endtime="20201110 08:34:04.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.788" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:34:04.786" endtime="20201110 08:34:04.788"></status>
</kw>
<status status="FAIL" starttime="20201110 08:34:04.759" endtime="20201110 08:34:04.788"></status>
</kw>
<status status="FAIL" starttime="20201110 08:34:04.756" endtime="20201110 08:34:04.789"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.755" endtime="20201110 08:34:04.789"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:34:04.794" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:34:04.793" endtime="20201110 08:34:04.794"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.791" endtime="20201110 08:34:04.794"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.754" endtime="20201110 08:34:04.794"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.754" endtime="20201110 08:34:04.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.795" endtime="20201110 08:34:04.797"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.752" endtime="20201110 08:34:04.797"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.751" endtime="20201110 08:34:04.798"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.724" endtime="20201110 08:34:04.798"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.807" endtime="20201110 08:34:04.876"></status>
</kw>
<msg timestamp="20201110 08:34:04.876" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:04.805" endtime="20201110 08:34:04.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.879" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:04.877" endtime="20201110 08:34:04.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.880" endtime="20201110 08:34:04.882"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.803" endtime="20201110 08:34:04.882"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.800" endtime="20201110 08:34:04.883"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.885" endtime="20201110 08:34:04.887"></status>
</kw>
<msg timestamp="20201110 08:34:04.887" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201110 08:34:04.884" endtime="20201110 08:34:04.887"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.891" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:34:04.890" endtime="20201110 08:34:04.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.893" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:34:04.892" endtime="20201110 08:34:04.894"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.888" endtime="20201110 08:34:04.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.898" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:34:04.897" endtime="20201110 08:34:04.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.900" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:34:04.899" endtime="20201110 08:34:04.900"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.895" endtime="20201110 08:34:04.901"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.908" endtime="20201110 08:34:05.200"></status>
</kw>
<msg timestamp="20201110 08:34:05.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.06857025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068579139, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:04.906" endtime="20201110 08:34:05.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:05.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.06857025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068579139, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:05.204" endtime="20201110 08:34:05.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:05.213" endtime="20201110 08:34:05.215"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.903" endtime="20201110 08:34:05.215"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.901" endtime="20201110 08:34:05.216"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:05.220" level="INFO">${RESULT} = [{'time': 0.068579139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.888999999998037e-06, 'source_diff': 8.888999999998037e-06}, {'time': 0.069558764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:05.216" endtime="20201110 08:34:05.220"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:34:05.236" level="INFO">${OVERHEAD} = {'source_diff': [8.888999999998037e-06, 8.874999999991529e-06, 8.915999999997704e-06, 8.805000000000618e-06, 8.875000000005406e-06, 8.860999999998898e-06, 8.888999999998037e-06, 8.916999999997177e-06,...</msg>
<status status="PASS" starttime="20201110 08:34:05.221" endtime="20201110 08:34:05.236"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:05.241" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201110 08:34:05.240" endtime="20201110 08:34:05.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:05.244" level="INFO">VALUE: [8.888999999998037e-06, 8.874999999991529e-06, 8.915999999997704e-06, 8.805000000000618e-06, 8.875000000005406e-06, 8.860999999998898e-06, 8.888999999998037e-06, 8.916999999997177e-06, 8.875000000005406e-06, 8.875000000005406e-06, 8.888999999998037e-06, 8.819999999992723e-06, 8.874999999991529e-06, 8.806000000000092e-06, 8.875000000005406e-06, 8.901999999991195e-06, 8.846999999992389e-06, 8.875000000005406e-06, 8.888999999998037e-06, 8.887999999998564e-06, 8.875000000005406e-06, 8.874999999991529e-06, 8.875000000005406e-06, 8.819000000007127e-06, 8.875000000005406e-06, 8.874999999991529e-06, 8.874999999991529e-06, 8.860999999998898e-06, 8.875000000005406e-06, 8.875000000005406e-06, 8.875000000005406e-06, 8.874999999991529e-06, 8.874999999991529e-06, 8.875000000005406e-06, 8.805000000000618e-06, 8.861999999998371e-06, 8.860999999998898e-06, 8.875000000005406e-06, 8.860999999998898e-06, 8.860999999998898e-06, 8.874999999991529e-06, 8.874999999991529e-06, 8.860999999998898e-06, 8.875000000005406e-06, 8.916999999997177e-06, 8.888999999998037e-06, 8.860999999998898e-06, 8.874999999991529e-06, 8.958000000003352e-06, 8.888999999998037e-06]</msg>
<status status="PASS" starttime="20201110 08:34:05.242" endtime="20201110 08:34:05.244"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.237" endtime="20201110 08:34:05.245"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:05.247" endtime="20201110 08:34:05.249"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:05.251" endtime="20201110 08:34:05.270"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.249" endtime="20201110 08:34:05.271"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.245" endtime="20201110 08:34:05.272"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.799" endtime="20201110 08:34:05.272"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201110 08:34:04.721" endtime="20201110 08:34:05.272" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:05.279" endtime="20201110 08:34:05.298"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.278" endtime="20201110 08:34:05.299"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:05.313" endtime="20201110 08:34:05.332"></status>
</kw>
<msg timestamp="20201110 08:34:05.332" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:05.310" endtime="20201110 08:34:05.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:05.335" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:05.333" endtime="20201110 08:34:05.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:34:05.340" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:34:05.337" endtime="20201110 08:34:05.340"></status>
</kw>
<status status="FAIL" starttime="20201110 08:34:05.308" endtime="20201110 08:34:05.341"></status>
</kw>
<status status="FAIL" starttime="20201110 08:34:05.305" endtime="20201110 08:34:05.342"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.304" endtime="20201110 08:34:05.342"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:34:05.346" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:34:05.345" endtime="20201110 08:34:05.346"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.343" endtime="20201110 08:34:05.346"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.303" endtime="20201110 08:34:05.347"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.303" endtime="20201110 08:34:05.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:05.348" endtime="20201110 08:34:05.351"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.301" endtime="20201110 08:34:05.352"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.300" endtime="20201110 08:34:05.352"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.276" endtime="20201110 08:34:05.353"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:05.364" endtime="20201110 08:34:05.563"></status>
</kw>
<msg timestamp="20201110 08:34:05.564" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:05.361" endtime="20201110 08:34:05.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:05.566" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:05.565" endtime="20201110 08:34:05.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:05.567" endtime="20201110 08:34:05.569"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.357" endtime="20201110 08:34:05.569"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.355" endtime="20201110 08:34:05.570"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:05.572" endtime="20201110 08:34:05.574"></status>
</kw>
<msg timestamp="20201110 08:34:05.574" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201110 08:34:05.571" endtime="20201110 08:34:05.574"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:05.578" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:34:05.577" endtime="20201110 08:34:05.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:05.580" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:34:05.579" endtime="20201110 08:34:05.580"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.575" endtime="20201110 08:34:05.581"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:05.585" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:34:05.584" endtime="20201110 08:34:05.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:05.587" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:34:05.586" endtime="20201110 08:34:05.587"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.582" endtime="20201110 08:34:05.588"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:05.594" endtime="20201110 08:34:05.888"></status>
</kw>
<msg timestamp="20201110 08:34:05.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.079219208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.079235597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:05.593" endtime="20201110 08:34:05.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:05.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.079219208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.079235597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:05.892" endtime="20201110 08:34:05.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:05.901" endtime="20201110 08:34:05.902"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.590" endtime="20201110 08:34:05.903"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.588" endtime="20201110 08:34:05.903"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:05.907" level="INFO">${RESULT} = [{'time': 0.079235597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6389000000005538e-05, 'source_diff': 1.6389000000005538e-05}, {'time': 0.082805736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:05.904" endtime="20201110 08:34:05.908"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:34:05.921" level="INFO">${OVERHEAD} = {'source_diff': [1.6389000000005538e-05, 1.637499999999903e-05, 1.6361000000006398e-05, 1.638899999999166e-05, 1.636099999999252e-05, 1.6387999999992187e-05, 1.6361000000006398e-05, 1.640299999999817e...</msg>
<status status="PASS" starttime="20201110 08:34:05.908" endtime="20201110 08:34:05.921"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:05.926" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201110 08:34:05.925" endtime="20201110 08:34:05.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:05.929" level="INFO">VALUE: [1.6389000000005538e-05, 1.637499999999903e-05, 1.6361000000006398e-05, 1.638899999999166e-05, 1.636099999999252e-05, 1.6387999999992187e-05, 1.6361000000006398e-05, 1.640299999999817e-05, 1.637499999999903e-05, 1.637499999999903e-05, 1.638899999999166e-05, 1.637499999999903e-05, 1.6389000000005538e-05, 1.637499999998515e-05, 1.637499999998515e-05, 1.6389000000005538e-05, 1.637499999998515e-05, 1.636099999999252e-05, 1.637499999998515e-05, 1.6375000000012907e-05, 1.6375000000012907e-05, 1.6375000000012907e-05, 1.636099999999252e-05, 1.636099999999252e-05, 1.633300000000726e-05, 1.636099999999252e-05, 1.6388000000006064e-05, 1.6375000000012907e-05, 1.6389000000005538e-05, 1.6375000000012907e-05, 1.6375000000012907e-05, 1.6375000000012907e-05, 1.6401999999998695e-05, 1.6361000000020276e-05, 1.634699999999989e-05, 1.6375000000012907e-05, 1.636099999999252e-05, 1.6333999999978976e-05, 1.6375000000012907e-05, 1.636099999999252e-05, 1.6375000000012907e-05, 1.636200000001975e-05, 1.6375000000012907e-05, 1.6361000000020276e-05, 1.6429999999983957e-05, 1.640299999999817e-05, 1.6361000000020276e-05, 1.6361000000020276e-05, 1.6375000000012907e-05, 1.6375000000012907e-05]</msg>
<status status="PASS" starttime="20201110 08:34:05.927" endtime="20201110 08:34:05.929"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.922" endtime="20201110 08:34:05.930"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:05.932" endtime="20201110 08:34:05.933"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:05.935" endtime="20201110 08:34:05.955"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.934" endtime="20201110 08:34:05.955"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.930" endtime="20201110 08:34:05.956"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.353" endtime="20201110 08:34:05.956"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201110 08:34:05.274" endtime="20201110 08:34:05.957" critical="yes"></status>
</test>
<status status="PASS" starttime="20201110 08:33:43.785" endtime="20201110 08:34:05.964"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.041" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201110 08:34:06.049" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201110 08:34:07.108" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201110 08:34:06.040" endtime="20201110 08:34:07.108"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.111" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20201110 08:34:07.109" endtime="20201110 08:34:08.113"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.039" endtime="20201110 08:34:08.114"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:08.118" endtime="20201110 08:34:08.372"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.115" endtime="20201110 08:34:08.373"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.386" endtime="20201110 08:34:08.407"></status>
</kw>
<msg timestamp="20201110 08:34:08.408" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:08.385" endtime="20201110 08:34:08.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.410" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:08.409" endtime="20201110 08:34:08.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.414" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:34:08.412" endtime="20201110 08:34:08.414"></status>
</kw>
<status status="FAIL" starttime="20201110 08:34:08.382" endtime="20201110 08:34:08.415"></status>
</kw>
<status status="FAIL" starttime="20201110 08:34:08.380" endtime="20201110 08:34:08.415"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.378" endtime="20201110 08:34:08.416"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:34:08.421" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:34:08.419" endtime="20201110 08:34:08.421"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.417" endtime="20201110 08:34:08.421"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.378" endtime="20201110 08:34:08.421"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.377" endtime="20201110 08:34:08.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.422" endtime="20201110 08:34:08.424"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.376" endtime="20201110 08:34:08.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.425" endtime="20201110 08:34:08.427"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.374" endtime="20201110 08:34:08.427"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.038" endtime="20201110 08:34:08.427"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:08.433" endtime="20201110 08:34:08.453"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.432" endtime="20201110 08:34:08.453"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.466" endtime="20201110 08:34:08.486"></status>
</kw>
<msg timestamp="20201110 08:34:08.489" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:08.464" endtime="20201110 08:34:08.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.497" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:08.492" endtime="20201110 08:34:08.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.507" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:34:08.500" endtime="20201110 08:34:08.508"></status>
</kw>
<status status="FAIL" starttime="20201110 08:34:08.462" endtime="20201110 08:34:08.510"></status>
</kw>
<status status="FAIL" starttime="20201110 08:34:08.459" endtime="20201110 08:34:08.513"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.458" endtime="20201110 08:34:08.516"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:34:08.529" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:34:08.526" endtime="20201110 08:34:08.531"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.518" endtime="20201110 08:34:08.532"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.457" endtime="20201110 08:34:08.532"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.457" endtime="20201110 08:34:08.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.535" endtime="20201110 08:34:08.539"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.456" endtime="20201110 08:34:08.540"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.454" endtime="20201110 08:34:08.542"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.430" endtime="20201110 08:34:08.543"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.565" endtime="20201110 08:34:08.583"></status>
</kw>
<msg timestamp="20201110 08:34:08.583" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:08.563" endtime="20201110 08:34:08.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.586" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:08.584" endtime="20201110 08:34:08.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.587" endtime="20201110 08:34:08.589"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.555" endtime="20201110 08:34:08.590"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.550" endtime="20201110 08:34:08.590"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.596" endtime="20201110 08:34:08.899"></status>
</kw>
<msg timestamp="20201110 08:34:08.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.122334833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.122377333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:08.595" endtime="20201110 08:34:08.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.122334833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.122377333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:08.903" endtime="20201110 08:34:08.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.911" endtime="20201110 08:34:08.913"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.592" endtime="20201110 08:34:08.914"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.591" endtime="20201110 08:34:08.914"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:08.918" level="INFO">${RESULT} = [{'time': 0.122377333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.250000000000087e-05, 'source_diff': 4.250000000000087e-05}, {'time': 0.122385903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:08.915" endtime="20201110 08:34:08.918"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:08.932" level="INFO">${ACCURACY} = {'source_diff': [4.250000000000087e-05, 3.2220000000110494e-06, 3.1939999999980317e-06, 3.1389999999992257e-06, 3.2229999999966452e-06, 2.737000000002654e-06, 3.165999999998892e-06, 2.7080000000040405...</msg>
<status status="PASS" starttime="20201110 08:34:08.919" endtime="20201110 08:34:08.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.937" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201110 08:34:08.935" endtime="20201110 08:34:08.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.939" level="INFO">VALUE: [4.250000000000087e-05, 3.2220000000110494e-06, 3.1939999999980317e-06, 3.1389999999992257e-06, 3.2229999999966452e-06, 2.737000000002654e-06, 3.165999999998892e-06, 2.7080000000040405e-06, 2.6940000000114095e-06, 2.7089999999896364e-06, 3.2219999999971716e-06, 3.2079999999906628e-06, 3.2220000000110494e-06, 2.7080000000040405e-06, 3.2219999999971716e-06, 2.7219999999966715e-06, 3.2079999999906628e-06, 2.7080000000040405e-06, 2.7220000000105493e-06, 3.2089999999901364e-06, 2.6940000000114095e-06, 3.209000000004014e-06, 2.709000000003514e-06, 2.7079999999901627e-06, 3.195000000011383e-06, 3.2229999999966452e-06, 2.722999999996145e-06, 3.2089999999901364e-06, 2.7219999999966715e-06, 2.7219999999966715e-06, 2.7079999999901627e-06, 3.1949999999975054e-06, 3.2219999999971716e-06, 3.2629999999894688e-06, 3.2080000000045406e-06, 2.7219999999966715e-06, 3.2220000000110494e-06, 3.2220000000110494e-06, 3.2219999999971716e-06, 3.1939999999980317e-06, 2.7080000000040405e-06, 2.6389999999987257e-06, 2.6529999999913567e-06, 3.209000000004014e-06, 2.7079999999901627e-06, 3.1810000000048744e-06, 3.6949999999980054e-06, 3.1939999999980317e-06, 2.7219999999966715e-06, 2.7219999999966715e-06]</msg>
<status status="PASS" starttime="20201110 08:34:08.938" endtime="20201110 08:34:08.940"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.933" endtime="20201110 08:34:08.940"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.943" endtime="20201110 08:34:08.944"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:08.946" endtime="20201110 08:34:08.965"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.944" endtime="20201110 08:34:08.966"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.941" endtime="20201110 08:34:08.966"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.547" endtime="20201110 08:34:08.967"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.545" endtime="20201110 08:34:08.967"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.975" endtime="20201110 08:34:08.997"></status>
</kw>
<msg timestamp="20201110 08:34:08.997" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:08.974" endtime="20201110 08:34:08.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.999" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:08.998" endtime="20201110 08:34:09.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.001" endtime="20201110 08:34:09.003"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.971" endtime="20201110 08:34:09.004"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.969" endtime="20201110 08:34:09.005"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.014" endtime="20201110 08:34:09.306"></status>
</kw>
<msg timestamp="20201110 08:34:09.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020335583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020339778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:09.012" endtime="20201110 08:34:09.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020335583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020339778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:09.311" endtime="20201110 08:34:09.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.321" endtime="20201110 08:34:09.323"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.009" endtime="20201110 08:34:09.324"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.007" endtime="20201110 08:34:09.324"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:09.328" level="INFO">${RESULT} = [{'time': 0.020339778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1949999999985055e-06, 'source_diff': 4.1949999999985055e-06}, {'time': 0.020349208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:09.325" endtime="20201110 08:34:09.328"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:09.343" level="INFO">${ACCURACY} = {'source_diff': [4.1949999999985055e-06, 4.208000000002071e-06, 4.222000000001641e-06, 4.193999999999032e-06, 3.6389999999997258e-06, 3.6809999999984355e-06, 3.7089999999975753e-06, 3.709000000001045e...</msg>
<status status="PASS" starttime="20201110 08:34:09.329" endtime="20201110 08:34:09.343"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.347" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201110 08:34:09.346" endtime="20201110 08:34:09.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.350" level="INFO">VALUE: [4.1949999999985055e-06, 4.208000000002071e-06, 4.222000000001641e-06, 4.193999999999032e-06, 3.6389999999997258e-06, 3.6809999999984355e-06, 3.7089999999975753e-06, 3.709000000001045e-06, 3.722000000001141e-06, 4.208000000002071e-06, 3.722000000001141e-06, 4.236000000001211e-06, 4.221999999998172e-06, 3.708000000001571e-06, 4.221999999998172e-06, 3.736000000000711e-06, 3.7089999999975753e-06, 3.7079999999981017e-06, 4.222000000001641e-06, 4.195000000001975e-06, 4.193999999999032e-06, 3.708000000001571e-06, 4.222000000001641e-06, 4.207999999998602e-06, 3.722000000001141e-06, 3.695000000001475e-06, 3.6949999999980054e-06, 4.707999999999102e-06, 4.207999999998602e-06, 3.665999999999392e-06, 4.208000000002071e-06, 3.736000000000711e-06, 4.222000000001641e-06, 4.707999999999102e-06, 4.736000000001711e-06, 4.208999999998075e-06, 4.208000000002071e-06, 3.7370000000001846e-06, 4.208000000002071e-06, 3.6940000000020012e-06, 4.2359999999977416e-06, 4.223000000001115e-06, 4.209000000001545e-06, 3.709000000001045e-06, 4.236000000001211e-06, 3.693999999998532e-06, 4.707999999999102e-06, 3.7219999999976716e-06, 4.193999999999032e-06, 4.208000000002071e-06]</msg>
<status status="PASS" starttime="20201110 08:34:09.348" endtime="20201110 08:34:09.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.343" endtime="20201110 08:34:09.351"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.353" endtime="20201110 08:34:09.354"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:09.357" endtime="20201110 08:34:09.376"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.355" endtime="20201110 08:34:09.377"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.352" endtime="20201110 08:34:09.377"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.968" endtime="20201110 08:34:09.377"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.967" endtime="20201110 08:34:09.377"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.386" endtime="20201110 08:34:09.404"></status>
</kw>
<msg timestamp="20201110 08:34:09.405" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:09.385" endtime="20201110 08:34:09.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.407" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:09.406" endtime="20201110 08:34:09.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.408" endtime="20201110 08:34:09.411"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.382" endtime="20201110 08:34:09.411"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.380" endtime="20201110 08:34:09.412"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.418" endtime="20201110 08:34:09.705"></status>
</kw>
<msg timestamp="20201110 08:34:09.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019745125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019750833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:09.417" endtime="20201110 08:34:09.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019745125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019750833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:09.709" endtime="20201110 08:34:09.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.718" endtime="20201110 08:34:09.719"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.414" endtime="20201110 08:34:09.720"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.412" endtime="20201110 08:34:09.720"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:09.724" level="INFO">${RESULT} = [{'time': 0.019750833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.708000000000102e-06, 'source_diff': 5.708000000000102e-06}, {'time': 0.019760569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:09.721" endtime="20201110 08:34:09.725"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:09.738" level="INFO">${ACCURACY} = {'source_diff': [5.708000000000102e-06, 4.693999999999532e-06, 5.1949999999995056e-06, 4.722999999998145e-06, 5.194000000000032e-06, 5.2089999999990755e-06, 4.721999999998672e-06, 4.735999999998242e-0...</msg>
<status status="PASS" starttime="20201110 08:34:09.725" endtime="20201110 08:34:09.738"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.743" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201110 08:34:09.742" endtime="20201110 08:34:09.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.745" level="INFO">VALUE: [5.708000000000102e-06, 4.693999999999532e-06, 5.1949999999995056e-06, 4.722999999998145e-06, 5.194000000000032e-06, 5.2089999999990755e-06, 4.721999999998672e-06, 4.735999999998242e-06, 4.707999999999102e-06, 4.709000000002045e-06, 4.708000000002571e-06, 5.221999999999172e-06, 5.207999999999602e-06, 4.6949999999990055e-06, 4.707999999999102e-06, 4.707999999999102e-06, 4.7499999999978115e-06, 5.207999999999602e-06, 5.221999999999172e-06, 4.693999999999532e-06, 4.764000000000851e-06, 5.209000000002545e-06, 4.721999999998672e-06, 4.7499999999978115e-06, 5.750000000002281e-06, 4.666999999999866e-06, 4.7089999999985754e-06, 4.693999999999532e-06, 5.221999999999172e-06, 5.721999999999672e-06, 5.222999999998645e-06, 5.237000000001685e-06, 5.194000000000032e-06, 5.207999999999602e-06, 4.693999999999532e-06, 4.707999999999102e-06, 5.221999999999172e-06, 4.735999999998242e-06, 4.736000000001711e-06, 5.207999999999602e-06, 5.236000000002211e-06, 5.194000000000032e-06, 4.693999999999532e-06, 5.221999999999172e-06, 4.722000000002141e-06, 4.707999999999102e-06, 4.722999999998145e-06, 5.223000000002115e-06, 5.222999999998645e-06, 4.695000000002475e-06]</msg>
<status status="PASS" starttime="20201110 08:34:09.744" endtime="20201110 08:34:09.752"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.739" endtime="20201110 08:34:09.753"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.755" endtime="20201110 08:34:09.756"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:09.758" endtime="20201110 08:34:09.778"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.757" endtime="20201110 08:34:09.778"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.753" endtime="20201110 08:34:09.779"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.378" endtime="20201110 08:34:09.779"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.378" endtime="20201110 08:34:09.779"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.788" endtime="20201110 08:34:09.806"></status>
</kw>
<msg timestamp="20201110 08:34:09.806" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:09.786" endtime="20201110 08:34:09.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:09.807" endtime="20201110 08:34:09.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.810" endtime="20201110 08:34:09.813"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.784" endtime="20201110 08:34:09.813"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.782" endtime="20201110 08:34:09.814"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.820" endtime="20201110 08:34:10.107"></status>
</kw>
<msg timestamp="20201110 08:34:10.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019669583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019675292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:09.818" endtime="20201110 08:34:10.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019669583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019675292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:10.111" endtime="20201110 08:34:10.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.120" endtime="20201110 08:34:10.121"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.816" endtime="20201110 08:34:10.122"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.814" endtime="20201110 08:34:10.122"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:10.126" level="INFO">${RESULT} = [{'time': 0.019675292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7089999999995755e-06, 'source_diff': 5.7089999999995755e-06}, {'time': 0.019686347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:10.123" endtime="20201110 08:34:10.127"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:10.140" level="INFO">${ACCURACY} = {'source_diff': [5.7089999999995755e-06, 6.694000000001532e-06, 5.7089999999995755e-06, 5.736000000002711e-06, 5.7089999999995755e-06, 6.2090000000000756e-06, 6.222000000000172e-06, 5.708000000000102e...</msg>
<status status="PASS" starttime="20201110 08:34:10.127" endtime="20201110 08:34:10.140"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.145" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201110 08:34:10.144" endtime="20201110 08:34:10.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.147" level="INFO">VALUE: [5.7089999999995755e-06, 6.694000000001532e-06, 5.7089999999995755e-06, 5.736000000002711e-06, 5.7089999999995755e-06, 6.2090000000000756e-06, 6.222000000000172e-06, 5.708000000000102e-06, 5.708000000000102e-06, 5.708000000000102e-06, 5.764000000001851e-06, 6.2090000000000756e-06, 5.764000000001851e-06, 6.2079999999971325e-06, 6.222000000000172e-06, 6.208000000000602e-06, 5.708000000000102e-06, 5.723000000002615e-06, 5.708000000000102e-06, 6.235999999999742e-06, 6.222000000000172e-06, 5.7089999999995755e-06, 6.1389999999987566e-06, 6.235999999999742e-06, 5.708000000000102e-06, 5.708000000000102e-06, 6.195000000000506e-06, 5.708000000000102e-06, 6.2229999999996455e-06, 6.236000000003211e-06, 6.1389999999987566e-06, 6.235999999999742e-06, 6.195000000000506e-06, 6.208999999996606e-06, 6.2090000000000756e-06, 5.736000000002711e-06, 6.208000000000602e-06, 6.153000000001796e-06, 5.736000000002711e-06, 6.1939999999975626e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.208000000000602e-06, 6.223000000003115e-06, 5.708000000000102e-06, 5.7089999999995755e-06, 6.208000000000602e-06, 6.235999999999742e-06, 5.708000000000102e-06, 6.2079999999971325e-06]</msg>
<status status="PASS" starttime="20201110 08:34:10.146" endtime="20201110 08:34:10.148"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.141" endtime="20201110 08:34:10.149"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.151" endtime="20201110 08:34:10.152"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:10.154" endtime="20201110 08:34:10.174"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.153" endtime="20201110 08:34:10.174"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.149" endtime="20201110 08:34:10.175"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.780" endtime="20201110 08:34:10.175"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.780" endtime="20201110 08:34:10.175"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.184" endtime="20201110 08:34:10.201"></status>
</kw>
<msg timestamp="20201110 08:34:10.201" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:10.182" endtime="20201110 08:34:10.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.204" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:10.202" endtime="20201110 08:34:10.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.205" endtime="20201110 08:34:10.207"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.180" endtime="20201110 08:34:10.208"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.177" endtime="20201110 08:34:10.208"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.215" endtime="20201110 08:34:10.501"></status>
</kw>
<msg timestamp="20201110 08:34:10.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019698556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019705764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:10.213" endtime="20201110 08:34:10.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019698556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019705764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:10.507" endtime="20201110 08:34:10.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.516" endtime="20201110 08:34:10.517"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.211" endtime="20201110 08:34:10.519"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.209" endtime="20201110 08:34:10.519"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:10.526" level="INFO">${RESULT} = [{'time': 0.019705764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.208000000001602e-06, 'source_diff': 7.208000000001602e-06}, {'time': 0.019716847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:10.520" endtime="20201110 08:34:10.526"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:10.542" level="INFO">${ACCURACY} = {'source_diff': [7.208000000001602e-06, 7.735999999997772e-06, 6.722000000000672e-06, 7.194000000002032e-06, 6.695000000001006e-06, 7.222000000001172e-06, 7.208000000001602e-06, 6.708000000001102e-06,...</msg>
<status status="PASS" starttime="20201110 08:34:10.527" endtime="20201110 08:34:10.542"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.546" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201110 08:34:10.545" endtime="20201110 08:34:10.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.549" level="INFO">VALUE: [7.208000000001602e-06, 7.735999999997772e-06, 6.722000000000672e-06, 7.194000000002032e-06, 6.695000000001006e-06, 7.222000000001172e-06, 7.208000000001602e-06, 6.708000000001102e-06, 6.6669999999983964e-06, 6.695000000001006e-06, 7.2219999999977025e-06, 7.708000000002102e-06, 6.708000000001102e-06, 6.708000000001102e-06, 7.222000000001172e-06, 7.2230000000006456e-06, 6.695000000001006e-06, 7.179999999998993e-06, 7.693999999999063e-06, 7.208000000001602e-06, 6.736000000000242e-06, 7.209000000001076e-06, 6.639000000002726e-06, 7.222000000001172e-06, 6.722000000000672e-06, 7.208000000001602e-06, 6.709000000000576e-06, 6.749999999999812e-06, 6.7079999999976325e-06, 6.749999999999812e-06, 6.722000000000672e-06, 7.209000000001076e-06, 6.778000000002421e-06, 6.708000000001102e-06, 7.193999999998563e-06, 7.208000000001602e-06, 6.749999999999812e-06, 7.722999999997676e-06, 7.222000000001172e-06, 7.208000000001602e-06, 6.7219999999972024e-06, 7.2779999999994516e-06, 6.7079999999976325e-06, 7.708999999998106e-06, 7.208000000001602e-06, 7.236000000000742e-06, 7.2219999999977025e-06, 7.236000000000742e-06, 6.708000000001102e-06, 7.208000000001602e-06]</msg>
<status status="PASS" starttime="20201110 08:34:10.547" endtime="20201110 08:34:10.549"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.543" endtime="20201110 08:34:10.550"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.552" endtime="20201110 08:34:10.554"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:10.556" endtime="20201110 08:34:10.575"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.554" endtime="20201110 08:34:10.576"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.551" endtime="20201110 08:34:10.576"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.176" endtime="20201110 08:34:10.576"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.175" endtime="20201110 08:34:10.577"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.585" endtime="20201110 08:34:10.602"></status>
</kw>
<msg timestamp="20201110 08:34:10.603" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:10.584" endtime="20201110 08:34:10.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.605" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:10.604" endtime="20201110 08:34:10.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.606" endtime="20201110 08:34:10.609"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.581" endtime="20201110 08:34:10.609"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.579" endtime="20201110 08:34:10.610"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.616" endtime="20201110 08:34:10.904"></status>
</kw>
<msg timestamp="20201110 08:34:10.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019455222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019462931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:10.615" endtime="20201110 08:34:10.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019455222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019462931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:10.908" endtime="20201110 08:34:10.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.916" endtime="20201110 08:34:10.918"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.612" endtime="20201110 08:34:10.918"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.610" endtime="20201110 08:34:10.919"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:10.923" level="INFO">${RESULT} = [{'time': 0.019462931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.708999999998106e-06, 'source_diff': 7.708999999998106e-06}, {'time': 0.019473986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:10.919" endtime="20201110 08:34:10.923"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:10.937" level="INFO">${ACCURACY} = {'source_diff': [7.708999999998106e-06, 8.207999999999133e-06, 8.223000000001646e-06, 7.709000000001576e-06, 8.222000000002172e-06, 8.208000000002602e-06, 7.708999999998106e-06, 7.694999999998536e-06,...</msg>
<status status="PASS" starttime="20201110 08:34:10.924" endtime="20201110 08:34:10.938"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.942" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201110 08:34:10.941" endtime="20201110 08:34:10.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.945" level="INFO">VALUE: [7.708999999998106e-06, 8.207999999999133e-06, 8.223000000001646e-06, 7.709000000001576e-06, 8.222000000002172e-06, 8.208000000002602e-06, 7.708999999998106e-06, 7.694999999998536e-06, 8.209000000002076e-06, 7.694999999998536e-06, 8.221999999998703e-06, 8.250000000001312e-06, 7.722999999997676e-06, 8.208000000002602e-06, 7.763000000000908e-06, 8.208000000002602e-06, 8.250000000001312e-06, 7.709000000001576e-06, 8.235999999998272e-06, 8.139000000000757e-06, 7.721999999998203e-06, 8.236000000001742e-06, 8.208999999998606e-06, 7.707999999998633e-06, 7.709000000001576e-06, 8.222999999998176e-06, 8.207999999999133e-06, 7.750000000000812e-06, 7.722000000001672e-06, 8.680000000000493e-06, 7.707999999998633e-06, 7.707999999998633e-06, 7.708000000002102e-06, 7.709000000001576e-06, 7.666999999999397e-06, 8.222999999998176e-06, 7.709000000001576e-06, 8.193999999999563e-06, 8.235999999998272e-06, 7.708000000002102e-06, 8.235999999998272e-06, 7.721999999998203e-06, 8.138999999997287e-06, 7.707999999998633e-06, 8.764000000001382e-06, 8.207999999999133e-06, 8.194999999999036e-06, 8.208000000002602e-06, 8.707999999999633e-06, 8.764000000001382e-06]</msg>
<status status="PASS" starttime="20201110 08:34:10.943" endtime="20201110 08:34:10.945"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.938" endtime="20201110 08:34:10.946"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.948" endtime="20201110 08:34:10.949"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:10.951" endtime="20201110 08:34:10.971"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.950" endtime="20201110 08:34:10.971"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.946" endtime="20201110 08:34:10.972"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.577" endtime="20201110 08:34:10.972"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.577" endtime="20201110 08:34:10.972"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.981" endtime="20201110 08:34:10.998"></status>
</kw>
<msg timestamp="20201110 08:34:10.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:10.979" endtime="20201110 08:34:10.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.001" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:10.999" endtime="20201110 08:34:11.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.002" endtime="20201110 08:34:11.004"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.977" endtime="20201110 08:34:11.005"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.975" endtime="20201110 08:34:11.005"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.012" endtime="20201110 08:34:11.299"></status>
</kw>
<msg timestamp="20201110 08:34:11.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019465486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019474208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:11.010" endtime="20201110 08:34:11.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019465486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019474208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:11.303" endtime="20201110 08:34:11.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.312" endtime="20201110 08:34:11.313"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.007" endtime="20201110 08:34:11.314"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.006" endtime="20201110 08:34:11.314"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:11.318" level="INFO">${RESULT} = [{'time': 0.019474208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.721999999999203e-06, 'source_diff': 8.721999999999203e-06}, {'time': 0.019489236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:11.315" endtime="20201110 08:34:11.318"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:11.332" level="INFO">${ACCURACY} = {'source_diff': [8.721999999999203e-06, 8.721999999999203e-06, 9.221999999999703e-06, 9.222999999999176e-06, 8.680999999999967e-06, 8.721999999999203e-06, 8.722000000002672e-06, 8.694000000000063e-06,...</msg>
<status status="PASS" starttime="20201110 08:34:11.319" endtime="20201110 08:34:11.332"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.337" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201110 08:34:11.336" endtime="20201110 08:34:11.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.340" level="INFO">VALUE: [8.721999999999203e-06, 8.721999999999203e-06, 9.221999999999703e-06, 9.222999999999176e-06, 8.680999999999967e-06, 8.721999999999203e-06, 8.722000000002672e-06, 8.694000000000063e-06, 8.736999999998246e-06, 9.708000000000633e-06, 9.222000000003172e-06, 8.708000000003102e-06, 8.749999999998342e-06, 9.208000000000133e-06, 8.694000000000063e-06, 9.639000000002257e-06, 9.194000000000563e-06, 8.695000000003006e-06, 9.694000000001063e-06, 9.735999999999773e-06, 8.749999999998342e-06, 9.195000000000036e-06, 9.221999999999703e-06, 9.195000000000036e-06, 9.221999999999703e-06, 9.166000000001423e-06, 9.222999999999176e-06, 8.708000000003102e-06, 9.195000000000036e-06, 9.208000000000133e-06, 8.722000000002672e-06, 8.736000000002242e-06, 8.707999999999633e-06, 8.624999999998217e-06, 9.735999999999773e-06, 9.208000000000133e-06, 9.208000000000133e-06, 9.208000000000133e-06, 9.208000000000133e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.709000000002576e-06, 8.667000000000397e-06, 8.707999999999633e-06, 9.708000000000633e-06, 9.235999999999273e-06, 8.707999999999633e-06, 9.222999999999176e-06, 9.208000000000133e-06, 8.708000000003102e-06]</msg>
<status status="PASS" starttime="20201110 08:34:11.338" endtime="20201110 08:34:11.340"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.333" endtime="20201110 08:34:11.341"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.343" endtime="20201110 08:34:11.345"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:11.347" endtime="20201110 08:34:11.366"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.345" endtime="20201110 08:34:11.367"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.342" endtime="20201110 08:34:11.367"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.973" endtime="20201110 08:34:11.367"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.973" endtime="20201110 08:34:11.367"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.376" endtime="20201110 08:34:11.393"></status>
</kw>
<msg timestamp="20201110 08:34:11.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:11.375" endtime="20201110 08:34:11.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.396" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:11.394" endtime="20201110 08:34:11.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.397" endtime="20201110 08:34:11.399"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.372" endtime="20201110 08:34:11.400"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.370" endtime="20201110 08:34:11.400"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.407" endtime="20201110 08:34:11.693"></status>
</kw>
<msg timestamp="20201110 08:34:11.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019526569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019536278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:11.405" endtime="20201110 08:34:11.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019526569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019536278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:11.697" endtime="20201110 08:34:11.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.705" endtime="20201110 08:34:11.707"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.403" endtime="20201110 08:34:11.708"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.401" endtime="20201110 08:34:11.709"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:11.715" level="INFO">${RESULT} = [{'time': 0.019536278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.709000000000106e-06, 'source_diff': 9.709000000000106e-06}, {'time': 0.019550347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:11.710" endtime="20201110 08:34:11.716"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:11.733" level="INFO">${ACCURACY} = {'source_diff': [9.709000000000106e-06, 1.0222000000000703e-05, 9.708000000000633e-06, 9.722000000000203e-06, 1.0180000000001993e-05, 1.0209000000000606e-05, 1.0708999999997637e-05, 1.0153000000002327...</msg>
<status status="PASS" starttime="20201110 08:34:11.717" endtime="20201110 08:34:11.734"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.740" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201110 08:34:11.739" endtime="20201110 08:34:11.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.744" level="INFO">VALUE: [9.709000000000106e-06, 1.0222000000000703e-05, 9.708000000000633e-06, 9.722000000000203e-06, 1.0180000000001993e-05, 1.0209000000000606e-05, 1.0708999999997637e-05, 1.0153000000002327e-05, 9.722000000000203e-06, 9.735999999999773e-06, 9.722000000000203e-06, 1.0209000000000606e-05, 1.0194000000001563e-05, 9.735999999999773e-06, 1.0208999999997137e-05, 1.0193999999998093e-05, 1.0223000000000176e-05, 9.709000000000106e-06, 9.709000000000106e-06, 9.722000000000203e-06, 9.735999999999773e-06, 1.0209000000000606e-05, 1.0195000000001037e-05, 1.0151999999999384e-05, 1.0223000000000176e-05, 9.679999999998024e-06, 9.722000000000203e-06, 1.0736000000000773e-05, 1.0223000000000176e-05, 1.0208000000001133e-05, 9.708000000000633e-06, 1.0152999999998857e-05, 9.707999999997163e-06, 1.0166999999998427e-05, 1.0222000000000703e-05, 1.0222000000000703e-05, 1.0236000000000273e-05, 1.0208000000001133e-05, 1.0208000000001133e-05, 1.0194999999997567e-05, 1.0707999999998163e-05, 1.0222000000000703e-05, 9.764000000002382e-06, 9.708000000000633e-06, 9.722999999999676e-06, 1.0208000000001133e-05, 9.735999999999773e-06, 1.0208000000001133e-05, 1.0221999999997233e-05, 1.0208000000001133e-05]</msg>
<status status="PASS" starttime="20201110 08:34:11.742" endtime="20201110 08:34:11.745"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.735" endtime="20201110 08:34:11.745"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.748" endtime="20201110 08:34:11.749"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:11.751" endtime="20201110 08:34:11.770"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.750" endtime="20201110 08:34:11.771"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.746" endtime="20201110 08:34:11.772"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.368" endtime="20201110 08:34:11.772"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.368" endtime="20201110 08:34:11.772"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.780" endtime="20201110 08:34:11.798"></status>
</kw>
<msg timestamp="20201110 08:34:11.799" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:11.779" endtime="20201110 08:34:11.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.801" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:11.800" endtime="20201110 08:34:11.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.802" endtime="20201110 08:34:11.805"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.776" endtime="20201110 08:34:11.805"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.774" endtime="20201110 08:34:11.806"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.812" endtime="20201110 08:34:12.096"></status>
</kw>
<msg timestamp="20201110 08:34:12.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019634486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019645694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:11.810" endtime="20201110 08:34:12.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019634486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019645694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:12.101" endtime="20201110 08:34:12.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.109" endtime="20201110 08:34:12.111"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.808" endtime="20201110 08:34:12.111"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.806" endtime="20201110 08:34:12.112"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:12.116" level="INFO">${RESULT} = [{'time': 0.019645694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1207999999998663e-05, 'source_diff': 1.1207999999998663e-05}, {'time': 0.01965875, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201110 08:34:12.112" endtime="20201110 08:34:12.116"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:12.129" level="INFO">${ACCURACY} = {'source_diff': [1.1207999999998663e-05, 1.0721999999997733e-05, 1.0707999999998163e-05, 1.0723000000000676e-05, 1.0707999999998163e-05, 1.1708000000002633e-05, 1.0707999999998163e-05, 1.1236000000001...</msg>
<status status="PASS" starttime="20201110 08:34:12.117" endtime="20201110 08:34:12.130"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.134" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201110 08:34:12.133" endtime="20201110 08:34:12.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.136" level="INFO">VALUE: [1.1207999999998663e-05, 1.0721999999997733e-05, 1.0707999999998163e-05, 1.0723000000000676e-05, 1.0707999999998163e-05, 1.1708000000002633e-05, 1.0707999999998163e-05, 1.1236000000001273e-05, 1.1222000000001703e-05, 1.1208999999998137e-05, 1.1194000000002563e-05, 1.0736000000000773e-05, 1.0693999999998594e-05, 1.1236000000001273e-05, 1.0708000000001633e-05, 1.1221999999998233e-05, 1.0737000000000246e-05, 1.0651999999999884e-05, 1.0708999999997637e-05, 1.1208999999998137e-05, 1.0721999999997733e-05, 1.1221999999998233e-05, 1.1264000000000413e-05, 1.0750000000000343e-05, 1.1693999999999594e-05, 1.0736000000000773e-05, 1.0723000000000676e-05, 1.0736000000000773e-05, 1.1707999999999164e-05, 1.1193999999999094e-05, 1.0695000000001537e-05, 1.0707999999998163e-05, 1.0721999999997733e-05, 1.1207999999998663e-05, 1.1208000000002133e-05, 1.0693999999998594e-05, 1.1722000000002203e-05, 1.1208000000002133e-05, 1.1235999999997803e-05, 1.1207999999998663e-05, 1.1193999999999094e-05, 1.1764000000000913e-05, 1.1221999999998233e-05, 1.0709000000001107e-05, 1.1208000000002133e-05, 1.1277000000000509e-05, 1.1194000000002563e-05, 1.1208000000002133e-05, 1.1707999999999164e-05, 1.1194000000002563e-05]</msg>
<status status="PASS" starttime="20201110 08:34:12.135" endtime="20201110 08:34:12.137"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.130" endtime="20201110 08:34:12.138"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.140" endtime="20201110 08:34:12.141"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:12.144" endtime="20201110 08:34:12.163"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.142" endtime="20201110 08:34:12.163"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.138" endtime="20201110 08:34:12.164"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.773" endtime="20201110 08:34:12.164"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.772" endtime="20201110 08:34:12.164"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.173" endtime="20201110 08:34:12.190"></status>
</kw>
<msg timestamp="20201110 08:34:12.190" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:12.171" endtime="20201110 08:34:12.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.193" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:12.191" endtime="20201110 08:34:12.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.194" endtime="20201110 08:34:12.196"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.169" endtime="20201110 08:34:12.197"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.167" endtime="20201110 08:34:12.197"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.204" endtime="20201110 08:34:12.489"></status>
</kw>
<msg timestamp="20201110 08:34:12.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019528667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019540889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:12.202" endtime="20201110 08:34:12.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019528667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019540889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:12.496" endtime="20201110 08:34:12.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.506" endtime="20201110 08:34:12.508"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.200" endtime="20201110 08:34:12.509"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.198" endtime="20201110 08:34:12.509"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:12.516" level="INFO">${RESULT} = [{'time': 0.019540889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2221999999999233e-05, 'source_diff': 1.2221999999999233e-05}, {'time': 0.019555986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:12.511" endtime="20201110 08:34:12.516"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:12.533" level="INFO">${ACCURACY} = {'source_diff': [1.2221999999999233e-05, 1.2207999999999664e-05, 1.1723000000001677e-05, 1.2236000000002273e-05, 1.2194999999999567e-05, 1.2207999999999664e-05, 1.1708999999998637e-05, 1.1723000000001...</msg>
<status status="PASS" starttime="20201110 08:34:12.517" endtime="20201110 08:34:12.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.537" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201110 08:34:12.536" endtime="20201110 08:34:12.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.540" level="INFO">VALUE: [1.2221999999999233e-05, 1.2207999999999664e-05, 1.1723000000001677e-05, 1.2236000000002273e-05, 1.2194999999999567e-05, 1.2207999999999664e-05, 1.1708999999998637e-05, 1.1723000000001677e-05, 1.2222999999998707e-05, 1.1708999999998637e-05, 1.177699999999754e-05, 1.2221999999999233e-05, 1.2722000000003203e-05, 1.2207999999999664e-05, 1.2221999999999233e-05, 1.1708000000002633e-05, 1.1694999999999067e-05, 1.1708999999998637e-05, 1.2250000000001843e-05, 1.1723000000001677e-05, 1.1694999999999067e-05, 1.2221999999999233e-05, 1.2221999999999233e-05, 1.2208999999999137e-05, 1.2209000000002607e-05, 1.1721999999998733e-05, 1.2221999999999233e-05, 1.1707999999999164e-05, 1.1666999999999927e-05, 1.1693999999999594e-05, 1.1708999999998637e-05, 1.2209000000002607e-05, 1.1707999999999164e-05, 1.1722000000002203e-05, 1.1708999999998637e-05, 1.1722999999998207e-05, 1.1693999999999594e-05, 1.2222999999998707e-05, 1.2708999999999637e-05, 1.1707999999999164e-05, 1.2222000000002703e-05, 1.2221999999999233e-05, 1.1680999999999497e-05, 1.1722000000002203e-05, 1.1708000000002633e-05, 1.2221999999999233e-05, 1.2708999999999637e-05, 1.1708000000002633e-05, 1.2235999999998803e-05, 1.2194000000000094e-05]</msg>
<status status="PASS" starttime="20201110 08:34:12.539" endtime="20201110 08:34:12.541"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.534" endtime="20201110 08:34:12.542"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.544" endtime="20201110 08:34:12.545"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:12.547" endtime="20201110 08:34:12.567"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.546" endtime="20201110 08:34:12.567"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.542" endtime="20201110 08:34:12.568"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.165" endtime="20201110 08:34:12.568"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.165" endtime="20201110 08:34:12.568"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.577" endtime="20201110 08:34:12.594"></status>
</kw>
<msg timestamp="20201110 08:34:12.594" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:12.575" endtime="20201110 08:34:12.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.597" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:12.595" endtime="20201110 08:34:12.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.598" endtime="20201110 08:34:12.600"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.573" endtime="20201110 08:34:12.601"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.571" endtime="20201110 08:34:12.601"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.607" endtime="20201110 08:34:12.893"></status>
</kw>
<msg timestamp="20201110 08:34:12.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019603361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019616569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:12.606" endtime="20201110 08:34:12.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019603361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019616569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:12.898" endtime="20201110 08:34:12.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.906" endtime="20201110 08:34:12.908"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.603" endtime="20201110 08:34:12.908"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.602" endtime="20201110 08:34:12.909"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:12.913" level="INFO">${RESULT} = [{'time': 0.019616569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3208000000000664e-05, 'source_diff': 1.3208000000000664e-05}, {'time': 0.0196355, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:12.909" endtime="20201110 08:34:12.913"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:12.926" level="INFO">${ACCURACY} = {'source_diff': [1.3208000000000664e-05, 1.3222000000000234e-05, 1.3181000000000997e-05, 1.2735999999999303e-05, 1.3208000000000664e-05, 1.3222000000000234e-05, 1.3222000000000234e-05, 1.3208000000000...</msg>
<status status="PASS" starttime="20201110 08:34:12.914" endtime="20201110 08:34:12.927"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.931" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201110 08:34:12.930" endtime="20201110 08:34:12.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.933" level="INFO">VALUE: [1.3208000000000664e-05, 1.3222000000000234e-05, 1.3181000000000997e-05, 1.2735999999999303e-05, 1.3208000000000664e-05, 1.3222000000000234e-05, 1.3222000000000234e-05, 1.3208000000000664e-05, 1.3236999999999277e-05, 1.3208000000000664e-05, 1.3694999999997598e-05, 1.3194000000001094e-05, 1.2708999999999637e-05, 1.2736000000002773e-05, 1.3194000000001094e-05, 1.3209000000000137e-05, 1.2708000000000164e-05, 1.2694000000000594e-05, 1.3235999999999803e-05, 1.2735999999999303e-05, 1.2695000000000067e-05, 1.2708000000000164e-05, 1.2721999999999734e-05, 1.2695000000000067e-05, 1.3209000000000137e-05, 1.3235999999999803e-05, 1.3222000000000234e-05, 1.3222000000000234e-05, 1.2694000000000594e-05, 1.3209000000000137e-05, 1.3263999999998943e-05, 1.3208000000000664e-05, 1.3222000000000234e-05, 1.2735999999999303e-05, 1.3222000000000234e-05, 1.3208000000000664e-05, 1.2708999999999637e-05, 1.2694000000000594e-05, 1.2721999999999734e-05, 1.3249999999999373e-05, 1.2693999999997124e-05, 1.3694999999997598e-05, 1.2694000000000594e-05, 1.2735999999999303e-05, 1.3209000000000137e-05, 1.3207999999997194e-05, 1.2722000000003203e-05, 1.2735999999999303e-05, 1.3222999999999707e-05, 1.3209000000000137e-05]</msg>
<status status="PASS" starttime="20201110 08:34:12.932" endtime="20201110 08:34:12.934"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.927" endtime="20201110 08:34:12.935"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.937" endtime="20201110 08:34:12.938"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:12.940" endtime="20201110 08:34:12.960"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.939" endtime="20201110 08:34:12.960"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.935" endtime="20201110 08:34:12.961"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.569" endtime="20201110 08:34:12.961"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.569" endtime="20201110 08:34:12.961"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.970" endtime="20201110 08:34:12.985"></status>
</kw>
<msg timestamp="20201110 08:34:12.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:12.968" endtime="20201110 08:34:12.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:12.987" endtime="20201110 08:34:12.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.989" endtime="20201110 08:34:12.992"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.966" endtime="20201110 08:34:12.993"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.964" endtime="20201110 08:34:12.993"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.999" endtime="20201110 08:34:13.285"></status>
</kw>
<msg timestamp="20201110 08:34:13.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019652583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019666792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:12.998" endtime="20201110 08:34:13.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019652583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019666792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:13.289" endtime="20201110 08:34:13.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.298" endtime="20201110 08:34:13.299"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.995" endtime="20201110 08:34:13.300"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.994" endtime="20201110 08:34:13.300"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:13.305" level="INFO">${RESULT} = [{'time': 0.019666792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4208999999997668e-05, 'source_diff': 1.4208999999997668e-05}, {'time': 0.019686, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:34:13.301" endtime="20201110 08:34:13.305"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:13.318" level="INFO">${ACCURACY} = {'source_diff': [1.4208999999997668e-05, 1.4249999999996904e-05, 1.3707999999997694e-05, 1.3709000000000637e-05, 1.4194999999998098e-05, 1.4223000000000707e-05, 1.3735999999996834e-05, 1.3694000000001...</msg>
<status status="PASS" starttime="20201110 08:34:13.305" endtime="20201110 08:34:13.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.323" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201110 08:34:13.321" endtime="20201110 08:34:13.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.325" level="INFO">VALUE: [1.4208999999997668e-05, 1.4249999999996904e-05, 1.3707999999997694e-05, 1.3709000000000637e-05, 1.4194999999998098e-05, 1.4223000000000707e-05, 1.3735999999996834e-05, 1.3694000000001594e-05, 1.3722000000000734e-05, 1.3709000000000637e-05, 1.3695000000001067e-05, 1.4223000000000707e-05, 1.3722000000000734e-05, 1.3666999999998458e-05, 1.4138999999999818e-05, 1.4221999999997764e-05, 1.3722000000000734e-05, 1.3735999999996834e-05, 1.4222000000001234e-05, 1.4152999999999388e-05, 1.4208000000001664e-05, 1.4208000000001664e-05, 1.3777999999999013e-05, 1.4223000000000707e-05, 1.3708000000001164e-05, 1.4236000000000804e-05, 1.3666999999998458e-05, 1.3708000000001164e-05, 1.4209000000001137e-05, 1.3723000000000207e-05, 1.3708000000001164e-05, 1.4207999999998194e-05, 1.3736000000000304e-05, 1.4209000000001137e-05, 1.4208000000001664e-05, 1.429099999999961e-05, 1.3681000000001498e-05, 1.3722000000000734e-05, 1.4208000000001664e-05, 1.4222000000001234e-05, 1.3749999999999873e-05, 1.4207999999998194e-05, 1.3722000000000734e-05, 1.3722000000000734e-05, 1.3708000000001164e-05, 1.3722000000000734e-05, 1.4222000000001234e-05, 1.4221999999997764e-05, 1.3707999999997694e-05, 1.3708999999997168e-05]</msg>
<status status="PASS" starttime="20201110 08:34:13.324" endtime="20201110 08:34:13.326"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.319" endtime="20201110 08:34:13.326"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.328" endtime="20201110 08:34:13.330"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:13.332" endtime="20201110 08:34:13.351"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.330" endtime="20201110 08:34:13.352"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.327" endtime="20201110 08:34:13.352"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.962" endtime="20201110 08:34:13.353"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.961" endtime="20201110 08:34:13.353"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.362" endtime="20201110 08:34:13.379"></status>
</kw>
<msg timestamp="20201110 08:34:13.380" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:13.360" endtime="20201110 08:34:13.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.382" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:13.381" endtime="20201110 08:34:13.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.383" endtime="20201110 08:34:13.386"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.358" endtime="20201110 08:34:13.387"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.355" endtime="20201110 08:34:13.387"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.394" endtime="20201110 08:34:13.680"></status>
</kw>
<msg timestamp="20201110 08:34:13.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020633278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020647986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:13.392" endtime="20201110 08:34:13.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020633278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020647986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:13.684" endtime="20201110 08:34:13.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.693" endtime="20201110 08:34:13.694"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.389" endtime="20201110 08:34:13.695"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.388" endtime="20201110 08:34:13.695"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:13.699" level="INFO">${RESULT} = [{'time': 0.020647986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4707999999998694e-05, 'source_diff': 1.4707999999998694e-05}, {'time': 0.020665972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:13.696" endtime="20201110 08:34:13.700"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:13.713" level="INFO">${ACCURACY} = {'source_diff': [1.4707999999998694e-05, 1.5222000000002234e-05, 1.5166000000000485e-05, 1.5194000000003094e-05, 1.4708999999998168e-05, 1.5194999999999098e-05, 1.5208000000002664e-05, 1.5222999999998...</msg>
<status status="PASS" starttime="20201110 08:34:13.700" endtime="20201110 08:34:13.713"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.718" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201110 08:34:13.717" endtime="20201110 08:34:13.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.720" level="INFO">VALUE: [1.4707999999998694e-05, 1.5222000000002234e-05, 1.5166000000000485e-05, 1.5194000000003094e-05, 1.4708999999998168e-05, 1.5194999999999098e-05, 1.5208000000002664e-05, 1.5222999999998238e-05, 1.5195000000002568e-05, 1.4694999999998598e-05, 1.4721999999998264e-05, 1.4722000000001734e-05, 1.5736999999998308e-05, 1.5221999999998764e-05, 1.4707999999998694e-05, 1.4722000000001734e-05, 1.4708000000002164e-05, 1.5208999999998668e-05, 1.5207999999999194e-05, 1.5221999999998764e-05, 1.5207999999999194e-05, 1.4722000000001734e-05, 1.5749999999998404e-05, 1.5236000000001804e-05, 1.4679999999999555e-05, 1.4722000000001734e-05, 1.5207999999999194e-05, 1.5208000000002664e-05, 1.5221999999998764e-05, 1.4764000000000443e-05, 1.4723000000001207e-05, 1.5208000000002664e-05, 1.5222000000002234e-05, 1.4708000000002164e-05, 1.4723000000001207e-05, 1.4791999999999583e-05, 1.4722000000001734e-05, 1.5221999999998764e-05, 1.5193999999999624e-05, 1.4722000000001734e-05, 1.5221999999998764e-05, 1.5208000000002664e-05, 1.5250000000001374e-05, 1.5221999999998764e-05, 1.4708000000002164e-05, 1.4721999999998264e-05, 1.5250000000001374e-05, 1.4723000000001207e-05, 1.5208999999998668e-05, 1.5207999999999194e-05]</msg>
<status status="PASS" starttime="20201110 08:34:13.719" endtime="20201110 08:34:13.721"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.714" endtime="20201110 08:34:13.721"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.724" endtime="20201110 08:34:13.725"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:13.727" endtime="20201110 08:34:13.746"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.726" endtime="20201110 08:34:13.747"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.722" endtime="20201110 08:34:13.747"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.354" endtime="20201110 08:34:13.748"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.353" endtime="20201110 08:34:13.748"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.756" endtime="20201110 08:34:13.773"></status>
</kw>
<msg timestamp="20201110 08:34:13.773" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:13.755" endtime="20201110 08:34:13.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:13.774" endtime="20201110 08:34:13.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.776" endtime="20201110 08:34:13.779"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.752" endtime="20201110 08:34:13.780"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.750" endtime="20201110 08:34:13.780"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.786" endtime="20201110 08:34:14.073"></status>
</kw>
<msg timestamp="20201110 08:34:14.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019551028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01956675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:13.785" endtime="20201110 08:34:14.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:14.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019551028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01956675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:14.077" endtime="20201110 08:34:14.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.085" endtime="20201110 08:34:14.087"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.782" endtime="20201110 08:34:14.087"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.781" endtime="20201110 08:34:14.088"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:14.092" level="INFO">${RESULT} = [{'time': 0.01956675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5721999999999264e-05, 'source_diff': 1.5721999999999264e-05}, {'time': 0.019587792, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201110 08:34:14.088" endtime="20201110 08:34:14.092"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:14.107" level="INFO">${ACCURACY} = {'source_diff': [1.5721999999999264e-05, 1.5694999999999598e-05, 1.6208999999999668e-05, 1.6208999999999668e-05, 1.5707999999999694e-05, 1.5694000000000125e-05, 1.6221999999999764e-05, 1.5735999999998...</msg>
<status status="PASS" starttime="20201110 08:34:14.093" endtime="20201110 08:34:14.107"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:14.111" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201110 08:34:14.110" endtime="20201110 08:34:14.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:14.114" level="INFO">VALUE: [1.5721999999999264e-05, 1.5694999999999598e-05, 1.6208999999999668e-05, 1.6208999999999668e-05, 1.5707999999999694e-05, 1.5694000000000125e-05, 1.6221999999999764e-05, 1.5735999999998834e-05, 1.6194000000000625e-05, 1.6208000000000194e-05, 1.5707999999999694e-05, 1.5721999999999264e-05, 1.6194000000000625e-05, 1.6208000000000194e-05, 1.5708999999999168e-05, 1.5721999999999264e-05, 1.5707999999999694e-05, 1.6152000000001915e-05, 1.5694000000000125e-05, 1.563900000000132e-05, 1.6249999999998904e-05, 1.6221999999999764e-05, 1.6249999999998904e-05, 1.5694999999999598e-05, 1.6707999999997225e-05, 1.5722999999998738e-05, 1.5777999999997544e-05, 1.6208000000000194e-05, 1.6208000000000194e-05, 1.6250000000002374e-05, 1.6221999999999764e-05, 1.5694999999999598e-05, 1.6208999999999668e-05, 1.6235999999999334e-05, 1.6221999999999764e-05, 1.6208999999999668e-05, 1.6194000000000625e-05, 1.6222999999999238e-05, 1.6249999999998904e-05, 1.6208000000000194e-05, 1.6208000000000194e-05, 1.6208000000000194e-05, 1.5722999999998738e-05, 1.6222999999999238e-05, 1.6152000000001915e-05, 1.5721999999999264e-05, 1.565299999999742e-05, 1.5708999999999168e-05, 1.5723000000002207e-05, 1.6236999999998808e-05]</msg>
<status status="PASS" starttime="20201110 08:34:14.112" endtime="20201110 08:34:14.114"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.107" endtime="20201110 08:34:14.115"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.117" endtime="20201110 08:34:14.118"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:14.120" endtime="20201110 08:34:14.140"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.119" endtime="20201110 08:34:14.140"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.115" endtime="20201110 08:34:14.141"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.749" endtime="20201110 08:34:14.141"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.748" endtime="20201110 08:34:14.141"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.150" endtime="20201110 08:34:14.166"></status>
</kw>
<msg timestamp="20201110 08:34:14.166" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:14.149" endtime="20201110 08:34:14.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:14.168" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:14.167" endtime="20201110 08:34:14.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.169" endtime="20201110 08:34:14.172"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.146" endtime="20201110 08:34:14.173"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.144" endtime="20201110 08:34:14.173"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.179" endtime="20201110 08:34:14.466"></status>
</kw>
<msg timestamp="20201110 08:34:14.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019763931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019781139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:14.178" endtime="20201110 08:34:14.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:14.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019763931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019781139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:14.470" endtime="20201110 08:34:14.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.478" endtime="20201110 08:34:14.480"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.175" endtime="20201110 08:34:14.480"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.174" endtime="20201110 08:34:14.481"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:14.485" level="INFO">${RESULT} = [{'time': 0.019781139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7208000000001195e-05, 'source_diff': 1.7208000000001195e-05}, {'time': 0.01980125, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201110 08:34:14.482" endtime="20201110 08:34:14.485"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:14.499" level="INFO">${ACCURACY} = {'source_diff': [1.7208000000001195e-05, 1.6708000000000695e-05, 1.7222000000000764e-05, 1.6708000000000695e-05, 1.7236000000000334e-05, 1.7222000000000764e-05, 1.7236000000000334e-05, 1.6709000000000...</msg>
<status status="PASS" starttime="20201110 08:34:14.486" endtime="20201110 08:34:14.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:14.503" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201110 08:34:14.502" endtime="20201110 08:34:14.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:14.506" level="INFO">VALUE: [1.7208000000001195e-05, 1.6708000000000695e-05, 1.7222000000000764e-05, 1.6708000000000695e-05, 1.7236000000000334e-05, 1.7222000000000764e-05, 1.7236000000000334e-05, 1.6709000000000168e-05, 1.6735999999999834e-05, 1.7278000000002514e-05, 1.6709000000000168e-05, 1.7236000000000334e-05, 1.7179999999998585e-05, 1.6722000000000264e-05, 1.7249999999999904e-05, 1.719499999999763e-05, 1.7195000000001098e-05, 1.7235999999996865e-05, 1.718100000000153e-05, 1.7208000000001195e-05, 1.7222000000000764e-05, 1.6709000000000168e-05, 1.7277999999999044e-05, 1.6708000000000695e-05, 1.7222000000000764e-05, 1.7722000000001265e-05, 1.7721999999997795e-05, 1.7223000000000238e-05, 1.7209000000000668e-05, 1.7208000000001195e-05, 1.7222000000000764e-05, 1.7263999999999474e-05, 1.716699999999849e-05, 1.6722999999999738e-05, 1.7236000000000334e-05, 1.6735999999999834e-05, 1.7235999999996865e-05, 1.7195000000001098e-05, 1.7223000000000238e-05, 1.7708000000001695e-05, 1.7222000000000764e-05, 1.715299999999892e-05, 1.6708000000000695e-05, 1.6722000000000264e-05, 1.6709000000000168e-05, 1.6680000000001555e-05, 1.7223000000000238e-05, 1.7208000000001195e-05, 1.6722000000000264e-05, 1.6709000000000168e-05]</msg>
<status status="PASS" starttime="20201110 08:34:14.504" endtime="20201110 08:34:14.506"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.499" endtime="20201110 08:34:14.507"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.509" endtime="20201110 08:34:14.510"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:14.513" endtime="20201110 08:34:14.532"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.511" endtime="20201110 08:34:14.533"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.507" endtime="20201110 08:34:14.534"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.142" endtime="20201110 08:34:14.535"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.142" endtime="20201110 08:34:14.535"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.547" endtime="20201110 08:34:14.567"></status>
</kw>
<msg timestamp="20201110 08:34:14.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:14.545" endtime="20201110 08:34:14.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:14.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:14.569" endtime="20201110 08:34:14.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.571" endtime="20201110 08:34:14.574"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.542" endtime="20201110 08:34:14.574"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.538" endtime="20201110 08:34:14.575"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.581" endtime="20201110 08:34:14.884"></status>
</kw>
<msg timestamp="20201110 08:34:14.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027087278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0271055, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:34:14.580" endtime="20201110 08:34:14.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:14.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027087278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0271055, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:34:14.888" endtime="20201110 08:34:14.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.896" endtime="20201110 08:34:14.898"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.577" endtime="20201110 08:34:14.899"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.575" endtime="20201110 08:34:14.899"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:14.903" level="INFO">${RESULT} = [{'time': 0.0271055, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8222000000001765e-05, 'source_diff': 1.8222000000001765e-05}, {'time': 0.027126292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:14.900" endtime="20201110 08:34:14.903"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:14.917" level="INFO">${ACCURACY} = {'source_diff': [1.8222000000001765e-05, 1.819499999999863e-05, 1.7723000000000738e-05, 1.8778000000000544e-05, 1.8235999999997865e-05, 1.8208000000002195e-05, 1.813899999999688e-05, 1.822200000000176...</msg>
<status status="PASS" starttime="20201110 08:34:14.904" endtime="20201110 08:34:14.917"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:14.921" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201110 08:34:14.920" endtime="20201110 08:34:14.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:14.924" level="INFO">VALUE: [1.8222000000001765e-05, 1.819499999999863e-05, 1.7723000000000738e-05, 1.8778000000000544e-05, 1.8235999999997865e-05, 1.8208000000002195e-05, 1.813899999999688e-05, 1.8222000000001765e-05, 1.8237000000000808e-05, 1.8222000000001765e-05, 1.8707999999999225e-05, 1.8208000000002195e-05, 1.8235999999997865e-05, 1.7709000000001168e-05, 1.7708000000001695e-05, 1.8207999999998725e-05, 1.7750000000000404e-05, 1.876299999999803e-05, 1.8222000000001765e-05, 1.8221999999998295e-05, 1.8223000000001238e-05, 1.763899999999985e-05, 1.7722000000001265e-05, 1.7693999999998655e-05, 1.7707999999998225e-05, 1.7709000000001168e-05, 1.7707999999998225e-05, 1.82089999999982e-05, 1.7707999999998225e-05, 1.8250000000000904e-05, 1.8221999999998295e-05, 1.8209000000001668e-05, 1.8207999999998725e-05, 1.8721999999998795e-05, 1.7736000000000834e-05, 1.7722000000001265e-05, 1.77089999999977e-05, 1.8221999999998295e-05, 1.7722000000001265e-05, 1.7708000000001695e-05, 1.8721999999998795e-05, 1.8193999999999155e-05, 1.7707999999998225e-05, 1.8223000000001238e-05, 1.7723000000000738e-05, 1.8207999999998725e-05, 1.8221999999998295e-05, 1.7707999999998225e-05, 1.7735999999997365e-05, 1.768099999999856e-05]</msg>
<status status="PASS" starttime="20201110 08:34:14.923" endtime="20201110 08:34:14.933"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.918" endtime="20201110 08:34:14.934"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.936" endtime="20201110 08:34:14.937"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:14.939" endtime="20201110 08:34:14.959"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.938" endtime="20201110 08:34:14.959"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.934" endtime="20201110 08:34:14.960"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.536" endtime="20201110 08:34:14.960"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.535" endtime="20201110 08:34:14.960"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.969" endtime="20201110 08:34:14.985"></status>
</kw>
<msg timestamp="20201110 08:34:14.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:14.967" endtime="20201110 08:34:14.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:14.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:14.987" endtime="20201110 08:34:14.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.989" endtime="20201110 08:34:14.992"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.965" endtime="20201110 08:34:14.992"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.963" endtime="20201110 08:34:14.993"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.999" endtime="20201110 08:34:15.285"></status>
</kw>
<msg timestamp="20201110 08:34:15.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019802736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019821903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:14.998" endtime="20201110 08:34:15.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:15.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019802736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019821903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:15.289" endtime="20201110 08:34:15.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.297" endtime="20201110 08:34:15.299"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.995" endtime="20201110 08:34:15.300"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.993" endtime="20201110 08:34:15.300"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:15.304" level="INFO">${RESULT} = [{'time': 0.019821903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.916699999999702e-05, 'source_diff': 1.916699999999702e-05}, {'time': 0.019844736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:15.301" endtime="20201110 08:34:15.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:15.318" level="INFO">${ACCURACY} = {'source_diff': [1.916699999999702e-05, 1.8764000000000974e-05, 1.87089999999987e-05, 1.87089999999987e-05, 1.9264000000001474e-05, 1.9708000000000225e-05, 1.8721999999998795e-05, 1.9221999999999295e-...</msg>
<status status="PASS" starttime="20201110 08:34:15.305" endtime="20201110 08:34:15.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:15.322" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201110 08:34:15.321" endtime="20201110 08:34:15.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:15.325" level="INFO">VALUE: [1.916699999999702e-05, 1.8764000000000974e-05, 1.87089999999987e-05, 1.87089999999987e-05, 1.9264000000001474e-05, 1.9708000000000225e-05, 1.8721999999998795e-05, 1.9221999999999295e-05, 1.9207999999999725e-05, 1.92089999999992e-05, 1.9207999999999725e-05, 1.9207999999999725e-05, 1.9221999999999295e-05, 1.8721999999998795e-05, 1.916700000000049e-05, 1.9194000000000155e-05, 1.92089999999992e-05, 1.8707999999999225e-05, 1.8666000000000516e-05, 1.8721999999998795e-05, 1.9222000000002765e-05, 1.9221999999999295e-05, 1.8707999999999225e-05, 1.9680000000001086e-05, 1.8707999999999225e-05, 1.8721999999998795e-05, 1.8722000000002265e-05, 1.9222000000002765e-05, 1.8707999999999225e-05, 1.8707999999999225e-05, 1.963899999999838e-05, 1.9235999999998865e-05, 1.8736000000001835e-05, 1.9708000000000225e-05, 1.9264000000001474e-05, 1.9235999999998865e-05, 1.8750000000001404e-05, 1.9221999999999295e-05, 1.9222000000002765e-05, 1.92089999999992e-05, 1.8723000000001738e-05, 1.8721999999998795e-05, 1.9708000000000225e-05, 1.9207999999999725e-05, 1.8680000000000085e-05, 1.9207999999999725e-05, 1.9207999999999725e-05, 1.869499999999913e-05, 1.9207999999999725e-05, 1.8722000000002265e-05]</msg>
<status status="PASS" starttime="20201110 08:34:15.323" endtime="20201110 08:34:15.326"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.319" endtime="20201110 08:34:15.326"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.328" endtime="20201110 08:34:15.330"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:15.332" endtime="20201110 08:34:15.351"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.330" endtime="20201110 08:34:15.352"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.327" endtime="20201110 08:34:15.352"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.961" endtime="20201110 08:34:15.353"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.961" endtime="20201110 08:34:15.353"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.362" endtime="20201110 08:34:15.378"></status>
</kw>
<msg timestamp="20201110 08:34:15.378" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:15.360" endtime="20201110 08:34:15.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:15.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:15.380" endtime="20201110 08:34:15.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.382" endtime="20201110 08:34:15.385"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.357" endtime="20201110 08:34:15.386"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.355" endtime="20201110 08:34:15.386"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.393" endtime="20201110 08:34:15.679"></status>
</kw>
<msg timestamp="20201110 08:34:15.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019856264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019876486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:15.391" endtime="20201110 08:34:15.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:15.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019856264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019876486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:15.683" endtime="20201110 08:34:15.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.691" endtime="20201110 08:34:15.693"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.388" endtime="20201110 08:34:15.694"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.387" endtime="20201110 08:34:15.694"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:15.698" level="INFO">${RESULT} = [{'time': 0.019876486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0222000000000295e-05, 'source_diff': 2.0222000000000295e-05}, {'time': 0.019900486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:15.695" endtime="20201110 08:34:15.698"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:15.713" level="INFO">${ACCURACY} = {'source_diff': [2.0222000000000295e-05, 2.0221999999996826e-05, 1.9721999999999795e-05, 2.013899999999888e-05, 1.9721999999999795e-05, 2.0222000000000295e-05, 1.9735999999999365e-05, 1.97229999999992...</msg>
<status status="PASS" starttime="20201110 08:34:15.699" endtime="20201110 08:34:15.713"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:15.717" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201110 08:34:15.716" endtime="20201110 08:34:15.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:15.720" level="INFO">VALUE: [2.0222000000000295e-05, 2.0221999999996826e-05, 1.9721999999999795e-05, 2.013899999999888e-05, 1.9721999999999795e-05, 2.0222000000000295e-05, 1.9735999999999365e-05, 1.972299999999927e-05, 2.0221999999996826e-05, 1.9721999999999795e-05, 2.0208000000000725e-05, 1.969500000000013e-05, 1.97089999999997e-05, 1.97089999999997e-05, 1.97089999999997e-05, 2.0221999999996826e-05, 2.016699999999802e-05, 1.9721999999999795e-05, 1.9721999999999795e-05, 1.9708000000000225e-05, 1.97089999999997e-05, 1.969500000000013e-05, 2.0222000000000295e-05, 1.9721999999999795e-05, 1.969500000000013e-05, 2.0166000000002016e-05, 2.020899999999673e-05, 1.969500000000013e-05, 2.0222000000000295e-05, 1.9749999999998935e-05, 1.9764000000001974e-05, 1.9721999999999795e-05, 1.972299999999927e-05, 2.0708000000001225e-05, 1.9735999999999365e-05, 1.9721999999999795e-05, 2.0208000000000725e-05, 2.0249999999999435e-05, 1.97089999999997e-05, 1.9665999999998046e-05, 2.0222000000000295e-05, 1.9708000000000225e-05, 2.02090000000002e-05, 1.966700000000099e-05, 1.97089999999997e-05, 2.0222000000000295e-05, 1.9708000000000225e-05, 2.0208000000000725e-05, 2.022299999999977e-05, 1.972299999999927e-05]</msg>
<status status="PASS" starttime="20201110 08:34:15.719" endtime="20201110 08:34:15.721"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.714" endtime="20201110 08:34:15.721"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.724" endtime="20201110 08:34:15.725"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:15.727" endtime="20201110 08:34:15.746"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.725" endtime="20201110 08:34:15.747"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.722" endtime="20201110 08:34:15.747"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.354" endtime="20201110 08:34:15.748"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.353" endtime="20201110 08:34:15.748"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.756" endtime="20201110 08:34:15.774"></status>
</kw>
<msg timestamp="20201110 08:34:15.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:15.755" endtime="20201110 08:34:15.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:15.777" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:15.776" endtime="20201110 08:34:15.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.778" endtime="20201110 08:34:15.781"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.752" endtime="20201110 08:34:15.782"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.750" endtime="20201110 08:34:15.782"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.788" endtime="20201110 08:34:16.076"></status>
</kw>
<msg timestamp="20201110 08:34:16.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019666486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019687694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:15.787" endtime="20201110 08:34:16.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:16.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019666486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019687694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:16.080" endtime="20201110 08:34:16.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.088" endtime="20201110 08:34:16.090"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.784" endtime="20201110 08:34:16.090"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.783" endtime="20201110 08:34:16.091"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:16.095" level="INFO">${RESULT} = [{'time': 0.019687694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1207999999998256e-05, 'source_diff': 2.1207999999998256e-05}, {'time': 0.019714569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:16.092" endtime="20201110 08:34:16.095"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:16.109" level="INFO">${ACCURACY} = {'source_diff': [2.1207999999998256e-05, 2.0722000000000795e-05, 2.0708000000001225e-05, 2.063899999999938e-05, 2.0777999999999075e-05, 2.0708000000001225e-05, 2.0749999999999935e-05, 2.07220000000007...</msg>
<status status="PASS" starttime="20201110 08:34:16.096" endtime="20201110 08:34:16.109"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:16.113" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201110 08:34:16.112" endtime="20201110 08:34:16.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:16.116" level="INFO">VALUE: [2.1207999999998256e-05, 2.0722000000000795e-05, 2.0708000000001225e-05, 2.063899999999938e-05, 2.0777999999999075e-05, 2.0708000000001225e-05, 2.0749999999999935e-05, 2.0722000000000795e-05, 2.0707999999997756e-05, 2.172300000000127e-05, 2.0722000000000795e-05, 2.1721999999998326e-05, 2.0721999999997326e-05, 2.1194000000002156e-05, 2.120899999999773e-05, 2.1222000000001295e-05, 2.1222000000001295e-05, 2.1222000000001295e-05, 2.116699999999902e-05, 2.0722000000000795e-05, 2.07090000000007e-05, 2.0722000000000795e-05, 2.1750000000000935e-05, 2.0708000000001225e-05, 2.069500000000113e-05, 2.1721999999998326e-05, 2.12090000000012e-05, 2.1208000000001725e-05, 2.12229999999973e-05, 2.0749999999999935e-05, 2.1235999999997396e-05, 2.1208000000001725e-05, 2.118099999999859e-05, 2.07090000000007e-05, 2.072300000000027e-05, 2.1707999999998756e-05, 2.1222000000001295e-05, 2.1707999999998756e-05, 2.069499999999766e-05, 2.1236000000000865e-05, 2.123700000000034e-05, 2.070899999999723e-05, 2.1193999999998686e-05, 2.1236000000000865e-05, 2.065299999999895e-05, 2.072300000000027e-05, 2.12090000000012e-05, 2.122300000000077e-05, 2.0722000000000795e-05, 2.1193999999998686e-05]</msg>
<status status="PASS" starttime="20201110 08:34:16.114" endtime="20201110 08:34:16.117"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.110" endtime="20201110 08:34:16.117"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.119" endtime="20201110 08:34:16.121"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:16.123" endtime="20201110 08:34:16.142"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.121" endtime="20201110 08:34:16.143"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.118" endtime="20201110 08:34:16.143"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.749" endtime="20201110 08:34:16.144"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.748" endtime="20201110 08:34:16.144"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.152" endtime="20201110 08:34:16.169"></status>
</kw>
<msg timestamp="20201110 08:34:16.169" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:16.151" endtime="20201110 08:34:16.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:16.172" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:16.170" endtime="20201110 08:34:16.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.173" endtime="20201110 08:34:16.175"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.148" endtime="20201110 08:34:16.176"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.146" endtime="20201110 08:34:16.176"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.183" endtime="20201110 08:34:16.469"></status>
</kw>
<msg timestamp="20201110 08:34:16.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019829375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019851597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:16.181" endtime="20201110 08:34:16.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:16.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019829375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019851597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:16.474" endtime="20201110 08:34:16.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.482" endtime="20201110 08:34:16.484"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.179" endtime="20201110 08:34:16.484"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.177" endtime="20201110 08:34:16.485"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:16.489" level="INFO">${RESULT} = [{'time': 0.019851597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2221999999998826e-05, 'source_diff': 2.2221999999998826e-05}, {'time': 0.019878639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:16.485" endtime="20201110 08:34:16.489"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:16.503" level="INFO">${ACCURACY} = {'source_diff': [2.2221999999998826e-05, 2.2207999999999256e-05, 2.2207999999999256e-05, 2.1707999999998756e-05, 2.1693999999999186e-05, 2.17090000000017e-05, 2.2207999999999256e-05, 2.170799999999875...</msg>
<status status="PASS" starttime="20201110 08:34:16.490" endtime="20201110 08:34:16.503"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:16.507" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201110 08:34:16.506" endtime="20201110 08:34:16.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:16.509" level="INFO">VALUE: [2.2221999999998826e-05, 2.2207999999999256e-05, 2.2207999999999256e-05, 2.1707999999998756e-05, 2.1693999999999186e-05, 2.17090000000017e-05, 2.2207999999999256e-05, 2.1707999999998756e-05, 2.1708000000002226e-05, 2.1707999999998756e-05, 2.1736000000001365e-05, 2.220899999999873e-05, 2.2694000000000186e-05, 2.2221999999998826e-05, 2.2235999999998396e-05, 2.2750000000001935e-05, 2.169500000000213e-05, 2.169499999999866e-05, 2.2235999999998396e-05, 2.1694000000002656e-05, 2.2207999999999256e-05, 2.1693999999999186e-05, 2.1694000000002656e-05, 2.2249999999997966e-05, 2.173699999999737e-05, 2.2222000000002295e-05, 2.2221999999998826e-05, 2.1707999999998756e-05, 2.170899999999823e-05, 2.170899999999823e-05, 2.2250000000001435e-05, 2.2235999999998396e-05, 2.1707999999998756e-05, 2.2235999999998396e-05, 2.2193999999999686e-05, 2.2207999999999256e-05, 2.163900000000038e-05, 2.2222000000002295e-05, 2.22229999999983e-05, 2.2221999999998826e-05, 2.1694000000002656e-05, 2.270899999999923e-05, 2.166699999999952e-05, 2.220899999999873e-05, 2.2278000000000575e-05, 2.1722000000001795e-05, 2.2208000000002726e-05, 2.1736000000001365e-05, 2.222300000000177e-05, 2.170899999999823e-05]</msg>
<status status="PASS" starttime="20201110 08:34:16.508" endtime="20201110 08:34:16.510"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.503" endtime="20201110 08:34:16.511"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.513" endtime="20201110 08:34:16.514"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:16.517" endtime="20201110 08:34:16.536"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.515" endtime="20201110 08:34:16.536"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.511" endtime="20201110 08:34:16.537"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.145" endtime="20201110 08:34:16.537"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.144" endtime="20201110 08:34:16.537"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.546" endtime="20201110 08:34:16.564"></status>
</kw>
<msg timestamp="20201110 08:34:16.564" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:16.545" endtime="20201110 08:34:16.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:16.567" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:16.565" endtime="20201110 08:34:16.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.568" endtime="20201110 08:34:16.570"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.542" endtime="20201110 08:34:16.571"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.540" endtime="20201110 08:34:16.572"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.578" endtime="20201110 08:34:16.863"></status>
</kw>
<msg timestamp="20201110 08:34:16.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019776014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019799236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:16.576" endtime="20201110 08:34:16.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:16.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019776014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019799236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:16.868" endtime="20201110 08:34:16.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.876" endtime="20201110 08:34:16.878"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.574" endtime="20201110 08:34:16.878"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.572" endtime="20201110 08:34:16.879"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:16.883" level="INFO">${RESULT} = [{'time': 0.019799236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3221999999999826e-05, 'source_diff': 2.3221999999999826e-05}, {'time': 0.019825028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:16.879" endtime="20201110 08:34:16.883"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:16.896" level="INFO">${ACCURACY} = {'source_diff': [2.3221999999999826e-05, 2.319500000000016e-05, 2.3208000000000256e-05, 2.3208000000000256e-05, 2.3221999999999826e-05, 2.3208000000000256e-05, 2.27090000000027e-05, 2.315299999999798e...</msg>
<status status="PASS" starttime="20201110 08:34:16.884" endtime="20201110 08:34:16.897"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:16.901" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201110 08:34:16.900" endtime="20201110 08:34:16.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:16.904" level="INFO">VALUE: [2.3221999999999826e-05, 2.319500000000016e-05, 2.3208000000000256e-05, 2.3208000000000256e-05, 2.3221999999999826e-05, 2.3208000000000256e-05, 2.27090000000027e-05, 2.315299999999798e-05, 2.2721999999999326e-05, 2.2721999999999326e-05, 2.3208000000000256e-05, 2.3208000000000256e-05, 2.2735999999998896e-05, 2.3707999999997287e-05, 2.3235999999999396e-05, 2.270899999999923e-05, 2.3194000000000686e-05, 2.2707999999999756e-05, 2.2721999999999326e-05, 2.2694000000000186e-05, 2.2707999999999756e-05, 2.2721999999999326e-05, 2.2721999999999326e-05, 2.2722000000002796e-05, 2.3708000000000756e-05, 2.3193999999997217e-05, 2.3180000000001116e-05, 2.2722000000002796e-05, 2.2694000000000186e-05, 2.263900000000138e-05, 2.3235999999999396e-05, 2.32229999999993e-05, 2.32229999999993e-05, 2.319500000000016e-05, 2.2735999999998896e-05, 2.270899999999923e-05, 2.2721999999999326e-05, 2.3208000000000256e-05, 2.269499999999966e-05, 2.2707999999999756e-05, 2.2707999999999756e-05, 2.2707999999999756e-05, 2.266700000000052e-05, 2.2721999999999326e-05, 2.262499999999834e-05, 2.2707999999999756e-05, 2.3235999999999396e-05, 2.2707999999999756e-05, 2.369500000000066e-05, 2.270899999999923e-05]</msg>
<status status="PASS" starttime="20201110 08:34:16.902" endtime="20201110 08:34:16.904"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.897" endtime="20201110 08:34:16.905"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.907" endtime="20201110 08:34:16.908"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:16.911" endtime="20201110 08:34:16.930"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.909" endtime="20201110 08:34:16.930"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.905" endtime="20201110 08:34:16.931"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.538" endtime="20201110 08:34:16.931"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.538" endtime="20201110 08:34:16.931"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.940" endtime="20201110 08:34:16.958"></status>
</kw>
<msg timestamp="20201110 08:34:16.958" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:16.938" endtime="20201110 08:34:16.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:16.961" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:16.959" endtime="20201110 08:34:16.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.962" endtime="20201110 08:34:16.965"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.936" endtime="20201110 08:34:16.965"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.934" endtime="20201110 08:34:16.966"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.972" endtime="20201110 08:34:17.258"></status>
</kw>
<msg timestamp="20201110 08:34:17.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019623278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019647486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:16.970" endtime="20201110 08:34:17.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019623278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019647486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:17.262" endtime="20201110 08:34:17.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.271" endtime="20201110 08:34:17.272"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.968" endtime="20201110 08:34:17.273"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.966" endtime="20201110 08:34:17.273"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:17.277" level="INFO">${RESULT} = [{'time': 0.019647486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4207999999997787e-05, 'source_diff': 2.4207999999997787e-05}, {'time': 0.019676542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:17.274" endtime="20201110 08:34:17.278"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:17.292" level="INFO">${ACCURACY} = {'source_diff': [2.4207999999997787e-05, 2.372300000000327e-05, 2.4708000000001756e-05, 2.4221999999997357e-05, 2.3708000000000756e-05, 2.420900000000073e-05, 2.3708000000000756e-05, 2.369499999999719...</msg>
<status status="PASS" starttime="20201110 08:34:17.278" endtime="20201110 08:34:17.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.297" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201110 08:34:17.296" endtime="20201110 08:34:17.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.299" level="INFO">VALUE: [2.4207999999997787e-05, 2.372300000000327e-05, 2.4708000000001756e-05, 2.4221999999997357e-05, 2.3708000000000756e-05, 2.420900000000073e-05, 2.3708000000000756e-05, 2.369499999999719e-05, 2.4722000000001326e-05, 2.4207999999997787e-05, 2.3708000000000756e-05, 2.4263999999999536e-05, 2.42230000000003e-05, 2.420899999999726e-05, 2.4263999999999536e-05, 2.3722000000000326e-05, 2.469499999999819e-05, 2.4208000000001256e-05, 2.4722000000001326e-05, 2.369500000000066e-05, 2.4707999999998287e-05, 2.3722000000000326e-05, 2.419500000000116e-05, 2.419500000000116e-05, 2.4222000000000826e-05, 2.4707999999998287e-05, 2.3735999999999896e-05, 2.4263999999999536e-05, 2.4165999999999077e-05, 2.4221999999997357e-05, 2.420900000000073e-05, 2.4193999999998217e-05, 2.4249999999999966e-05, 2.4222000000000826e-05, 2.3722000000000326e-05, 2.3735999999999896e-05, 2.4165999999999077e-05, 2.419500000000116e-05, 2.4194000000001686e-05, 2.4194000000001686e-05, 2.415300000000245e-05, 2.3750000000002935e-05, 2.416700000000202e-05, 2.419500000000116e-05, 2.4222000000000826e-05, 2.4193999999998217e-05, 2.3708000000000756e-05, 2.419500000000116e-05, 2.4151999999999507e-05, 2.3722000000000326e-05]</msg>
<status status="PASS" starttime="20201110 08:34:17.298" endtime="20201110 08:34:17.300"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.293" endtime="20201110 08:34:17.301"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.303" endtime="20201110 08:34:17.304"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:17.306" endtime="20201110 08:34:17.326"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.305" endtime="20201110 08:34:17.326"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.301" endtime="20201110 08:34:17.327"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.932" endtime="20201110 08:34:17.327"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.932" endtime="20201110 08:34:17.327"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.336" endtime="20201110 08:34:17.352"></status>
</kw>
<msg timestamp="20201110 08:34:17.353" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:17.334" endtime="20201110 08:34:17.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.355" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:17.354" endtime="20201110 08:34:17.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.356" endtime="20201110 08:34:17.359"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.332" endtime="20201110 08:34:17.359"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.329" endtime="20201110 08:34:17.360"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.366" endtime="20201110 08:34:17.657"></status>
</kw>
<msg timestamp="20201110 08:34:17.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019708847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019733556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:17.365" endtime="20201110 08:34:17.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019708847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019733556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:17.662" endtime="20201110 08:34:17.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.673" endtime="20201110 08:34:17.675"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.362" endtime="20201110 08:34:17.676"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.360" endtime="20201110 08:34:17.677"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:17.683" level="INFO">${RESULT} = [{'time': 0.019733556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.470899999999776e-05, 'source_diff': 2.470899999999776e-05}, {'time': 0.019764931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:17.678" endtime="20201110 08:34:17.683"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:17.698" level="INFO">${ACCURACY} = {'source_diff': [2.470899999999776e-05, 2.522299999999783e-05, 2.4708000000001756e-05, 2.5222000000001826e-05, 2.5208000000002256e-05, 2.5207999999998787e-05, 2.4736000000000896e-05, 2.520899999999826...</msg>
<status status="PASS" starttime="20201110 08:34:17.684" endtime="20201110 08:34:17.699"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.703" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201110 08:34:17.702" endtime="20201110 08:34:17.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.705" level="INFO">VALUE: [2.470899999999776e-05, 2.522299999999783e-05, 2.4708000000001756e-05, 2.5222000000001826e-05, 2.5208000000002256e-05, 2.5207999999998787e-05, 2.4736000000000896e-05, 2.520899999999826e-05, 2.4722000000001326e-05, 2.5235999999997927e-05, 2.4707999999998287e-05, 2.5249999999997497e-05, 2.5221999999998357e-05, 2.5221999999998357e-05, 2.473700000000037e-05, 2.520899999999826e-05, 2.519499999999869e-05, 2.5693999999999717e-05, 2.4721999999997857e-05, 2.4736000000000896e-05, 2.4707999999998287e-05, 2.519499999999869e-05, 2.4722000000001326e-05, 2.4638000000000437e-05, 2.4708000000001756e-05, 2.4707999999998287e-05, 2.4707999999998287e-05, 2.5721999999998857e-05, 2.5236000000001396e-05, 2.520900000000173e-05, 2.4735999999997427e-05, 2.5193999999999217e-05, 2.5707999999999287e-05, 2.4777999999999606e-05, 2.469499999999819e-05, 2.5208000000002256e-05, 2.5193999999999217e-05, 2.470900000000123e-05, 2.5250000000000966e-05, 2.4750000000000466e-05, 2.463899999999991e-05, 2.5250000000000966e-05, 2.4736000000000896e-05, 2.4708000000001756e-05, 2.469500000000166e-05, 2.47230000000008e-05, 2.4722000000001326e-05, 2.5207999999998787e-05, 2.5222000000001826e-05, 2.4708000000001756e-05]</msg>
<status status="PASS" starttime="20201110 08:34:17.704" endtime="20201110 08:34:17.706"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.699" endtime="20201110 08:34:17.707"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.709" endtime="20201110 08:34:17.710"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:17.713" endtime="20201110 08:34:17.732"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.711" endtime="20201110 08:34:17.732"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.707" endtime="20201110 08:34:17.733"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.328" endtime="20201110 08:34:17.733"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.327" endtime="20201110 08:34:17.733"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.742" endtime="20201110 08:34:17.760"></status>
</kw>
<msg timestamp="20201110 08:34:17.760" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:17.740" endtime="20201110 08:34:17.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.763" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:17.761" endtime="20201110 08:34:17.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.764" endtime="20201110 08:34:17.767"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.738" endtime="20201110 08:34:17.767"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.736" endtime="20201110 08:34:17.768"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.774" endtime="20201110 08:34:18.059"></status>
</kw>
<msg timestamp="20201110 08:34:18.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019704931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019731167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:17.772" endtime="20201110 08:34:18.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:18.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019704931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019731167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:18.064" endtime="20201110 08:34:18.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.072" endtime="20201110 08:34:18.074"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.770" endtime="20201110 08:34:18.074"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.768" endtime="20201110 08:34:18.075"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:18.079" level="INFO">${RESULT} = [{'time': 0.019731167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6236000000002396e-05, 'source_diff': 2.6236000000002396e-05}, {'time': 0.019759264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:18.075" endtime="20201110 08:34:18.079"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:18.093" level="INFO">${ACCURACY} = {'source_diff': [2.6236000000002396e-05, 2.5721999999998857e-05, 2.6194000000000217e-05, 2.6207999999999787e-05, 2.620900000000273e-05, 2.5693999999999717e-05, 2.6221999999999357e-05, 2.62219999999993...</msg>
<status status="PASS" starttime="20201110 08:34:18.080" endtime="20201110 08:34:18.093"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:18.097" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201110 08:34:18.096" endtime="20201110 08:34:18.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:18.100" level="INFO">VALUE: [2.6236000000002396e-05, 2.5721999999998857e-05, 2.6194000000000217e-05, 2.6207999999999787e-05, 2.620900000000273e-05, 2.5693999999999717e-05, 2.6221999999999357e-05, 2.6221999999999357e-05, 2.6194000000000217e-05, 2.6249999999998497e-05, 2.5736000000001896e-05, 2.57230000000018e-05, 2.618100000000012e-05, 2.6235999999998927e-05, 2.6221999999999357e-05, 2.5750000000001466e-05, 2.5707999999999287e-05, 2.620899999999926e-05, 2.5749999999997997e-05, 2.5693999999999717e-05, 2.5721999999998857e-05, 2.5721999999998857e-05, 2.6194000000000217e-05, 2.5693999999999717e-05, 2.5721999999998857e-05, 2.6221999999999357e-05, 2.6207999999999787e-05, 2.6277000000001632e-05, 2.6250000000001966e-05, 2.620899999999926e-05, 2.570900000000223e-05, 2.620900000000273e-05, 2.5736000000001896e-05, 2.6235999999998927e-05, 2.6207999999999787e-05, 2.5736000000001896e-05, 2.5680000000000147e-05, 2.5722000000002326e-05, 2.5721999999998857e-05, 2.620899999999926e-05, 2.6694000000000717e-05, 2.5707999999999287e-05, 2.6235999999998927e-05, 2.619499999999969e-05, 2.620900000000273e-05, 2.6221999999999357e-05, 2.6194000000000217e-05, 2.5708000000002756e-05, 2.569499999999919e-05, 2.6277999999997637e-05]</msg>
<status status="PASS" starttime="20201110 08:34:18.098" endtime="20201110 08:34:18.100"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.094" endtime="20201110 08:34:18.101"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.103" endtime="20201110 08:34:18.105"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:18.107" endtime="20201110 08:34:18.126"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.105" endtime="20201110 08:34:18.127"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.102" endtime="20201110 08:34:18.127"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.734" endtime="20201110 08:34:18.127"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.734" endtime="20201110 08:34:18.128"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.136" endtime="20201110 08:34:18.152"></status>
</kw>
<msg timestamp="20201110 08:34:18.152" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:18.135" endtime="20201110 08:34:18.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:18.155" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:18.153" endtime="20201110 08:34:18.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.156" endtime="20201110 08:34:18.158"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.132" endtime="20201110 08:34:18.159"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.130" endtime="20201110 08:34:18.159"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.166" endtime="20201110 08:34:18.451"></status>
</kw>
<msg timestamp="20201110 08:34:18.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019683375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019710139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:18.164" endtime="20201110 08:34:18.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:18.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019683375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019710139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:18.455" endtime="20201110 08:34:18.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.464" endtime="20201110 08:34:18.465"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.162" endtime="20201110 08:34:18.466"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.160" endtime="20201110 08:34:18.466"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:18.471" level="INFO">${RESULT} = [{'time': 0.019710139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6764000000002036e-05, 'source_diff': 2.6764000000002036e-05}, {'time': 0.019741014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:18.467" endtime="20201110 08:34:18.471"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:18.484" level="INFO">${ACCURACY} = {'source_diff': [2.6764000000002036e-05, 2.7208000000000787e-05, 2.7207999999997318e-05, 2.7222000000000357e-05, 2.720900000000026e-05, 2.670899999999976e-05, 2.718100000000112e-05, 2.670899999999976e...</msg>
<status status="PASS" starttime="20201110 08:34:18.472" endtime="20201110 08:34:18.485"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:18.489" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201110 08:34:18.488" endtime="20201110 08:34:18.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:18.492" level="INFO">VALUE: [2.6764000000002036e-05, 2.7208000000000787e-05, 2.7207999999997318e-05, 2.7222000000000357e-05, 2.720900000000026e-05, 2.670899999999976e-05, 2.718100000000112e-05, 2.670899999999976e-05, 2.7222000000000357e-05, 2.6708000000000287e-05, 2.6735999999999427e-05, 2.6778000000001606e-05, 2.716699999999808e-05, 2.6679999999997678e-05, 2.7235999999999927e-05, 2.7222000000000357e-05, 2.6721999999999857e-05, 2.669500000000019e-05, 2.6721999999999857e-05, 2.67369999999989e-05, 2.6721999999999857e-05, 2.7221999999996888e-05, 2.669500000000019e-05, 2.7207999999997318e-05, 2.6792000000001176e-05, 2.7180000000001647e-05, 2.6708000000000287e-05, 2.668099999999715e-05, 2.7235999999999927e-05, 2.7222000000000357e-05, 2.7194000000001217e-05, 2.7263999999999067e-05, 2.7222000000000357e-05, 2.719500000000069e-05, 2.6708000000000287e-05, 2.7208000000000787e-05, 2.7235999999999927e-05, 2.7235999999999927e-05, 2.672299999999933e-05, 2.7208000000000787e-05, 2.7222000000000357e-05, 2.6735999999999427e-05, 2.669499999999672e-05, 2.7722000000000857e-05, 2.672299999999933e-05, 2.669500000000019e-05, 2.7221999999996888e-05, 2.7208000000000787e-05, 2.7221999999996888e-05, 2.7235999999999927e-05]</msg>
<status status="PASS" starttime="20201110 08:34:18.490" endtime="20201110 08:34:18.492"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.485" endtime="20201110 08:34:18.493"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.495" endtime="20201110 08:34:18.496"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:18.499" endtime="20201110 08:34:18.518"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.497" endtime="20201110 08:34:18.518"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.493" endtime="20201110 08:34:18.519"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.128" endtime="20201110 08:34:18.519"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.128" endtime="20201110 08:34:18.519"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.528" endtime="20201110 08:34:18.546"></status>
</kw>
<msg timestamp="20201110 08:34:18.546" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:18.527" endtime="20201110 08:34:18.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:18.549" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:18.547" endtime="20201110 08:34:18.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.550" endtime="20201110 08:34:18.552"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.524" endtime="20201110 08:34:18.553"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.522" endtime="20201110 08:34:18.553"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.560" endtime="20201110 08:34:18.845"></status>
</kw>
<msg timestamp="20201110 08:34:18.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019721403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019749625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:18.558" endtime="20201110 08:34:18.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:18.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019721403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019749625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:18.849" endtime="20201110 08:34:18.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.857" endtime="20201110 08:34:18.859"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.556" endtime="20201110 08:34:18.860"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.554" endtime="20201110 08:34:18.860"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:18.864" level="INFO">${RESULT} = [{'time': 0.019749625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8222000000001357e-05, 'source_diff': 2.8222000000001357e-05}, {'time': 0.019783361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:18.861" endtime="20201110 08:34:18.864"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:18.879" level="INFO">${ACCURACY} = {'source_diff': [2.8222000000001357e-05, 2.816699999999908e-05, 2.8236000000000927e-05, 2.7708000000001287e-05, 2.819499999999822e-05, 2.8208000000001787e-05, 2.8221999999997888e-05, 2.770799999999781...</msg>
<status status="PASS" starttime="20201110 08:34:18.865" endtime="20201110 08:34:18.879"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:18.884" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201110 08:34:18.883" endtime="20201110 08:34:18.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:18.886" level="INFO">VALUE: [2.8222000000001357e-05, 2.816699999999908e-05, 2.8236000000000927e-05, 2.7708000000001287e-05, 2.819499999999822e-05, 2.8208000000001787e-05, 2.8221999999997888e-05, 2.7707999999997818e-05, 2.77369999999999e-05, 2.8750000000000997e-05, 2.8222000000001357e-05, 2.7736000000000427e-05, 2.8236000000000927e-05, 2.8207999999998318e-05, 2.7749999999999997e-05, 2.820899999999779e-05, 2.7722000000000857e-05, 2.8236000000000927e-05, 2.8707999999998818e-05, 2.7721999999997388e-05, 2.8208000000001787e-05, 2.7693999999998248e-05, 2.8222000000001357e-05, 2.8207999999998318e-05, 2.8207999999998318e-05, 2.8221999999997888e-05, 2.7749999999999997e-05, 2.770900000000076e-05, 2.7749999999999997e-05, 2.7790999999999233e-05, 2.8306000000002246e-05, 2.8707999999998818e-05, 2.8208000000001787e-05, 2.8208000000001787e-05, 2.820899999999779e-05, 2.822300000000083e-05, 2.8722000000001857e-05, 2.8222000000001357e-05, 2.7708000000001287e-05, 2.770900000000076e-05, 2.8236000000000927e-05, 2.7707999999997818e-05, 2.8221999999997888e-05, 2.7722000000000857e-05, 2.8207999999998318e-05, 2.7708000000001287e-05, 2.8208000000001787e-05, 2.770899999999729e-05, 2.8707999999998818e-05, 2.770899999999729e-05]</msg>
<status status="PASS" starttime="20201110 08:34:18.885" endtime="20201110 08:34:18.887"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.880" endtime="20201110 08:34:18.887"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.890" endtime="20201110 08:34:18.891"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:18.893" endtime="20201110 08:34:18.913"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.892" endtime="20201110 08:34:18.913"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.888" endtime="20201110 08:34:18.914"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.520" endtime="20201110 08:34:18.914"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.520" endtime="20201110 08:34:18.914"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.923" endtime="20201110 08:34:18.940"></status>
</kw>
<msg timestamp="20201110 08:34:18.940" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:18.921" endtime="20201110 08:34:18.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:18.943" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:18.941" endtime="20201110 08:34:18.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.944" endtime="20201110 08:34:18.946"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.919" endtime="20201110 08:34:18.947"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.916" endtime="20201110 08:34:18.947"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.954" endtime="20201110 08:34:19.239"></status>
</kw>
<msg timestamp="20201110 08:34:19.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019764903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019793611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:18.952" endtime="20201110 08:34:19.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019764903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019793611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:19.243" endtime="20201110 08:34:19.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.252" endtime="20201110 08:34:19.253"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.950" endtime="20201110 08:34:19.254"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.948" endtime="20201110 08:34:19.254"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:19.258" level="INFO">${RESULT} = [{'time': 0.019793611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8707999999998818e-05, 'source_diff': 2.8707999999998818e-05}, {'time': 0.019824792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:19.255" endtime="20201110 08:34:19.259"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:19.272" level="INFO">${ACCURACY} = {'source_diff': [2.8707999999998818e-05, 2.870900000000176e-05, 2.8721999999998388e-05, 2.9207999999999318e-05, 2.9207999999999318e-05, 2.9207999999999318e-05, 2.965199999999807e-05, 2.872300000000133...</msg>
<status status="PASS" starttime="20201110 08:34:19.259" endtime="20201110 08:34:19.272"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.277" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201110 08:34:19.276" endtime="20201110 08:34:19.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.279" level="INFO">VALUE: [2.8707999999998818e-05, 2.870900000000176e-05, 2.8721999999998388e-05, 2.9207999999999318e-05, 2.9207999999999318e-05, 2.9207999999999318e-05, 2.965199999999807e-05, 2.872300000000133e-05, 2.922300000000183e-05, 2.8721999999998388e-05, 2.9193999999999748e-05, 2.9207999999999318e-05, 2.9735999999998958e-05, 2.9193999999999748e-05, 2.8804999999999803e-05, 2.9694000000000248e-05, 2.9278000000000637e-05, 2.9207999999999318e-05, 2.9264000000001067e-05, 2.920899999999879e-05, 2.9208000000002787e-05, 2.920899999999879e-05, 2.920899999999879e-05, 2.868099999999915e-05, 2.8762999999997624e-05, 2.9235999999998458e-05, 2.920899999999879e-05, 2.918099999999965e-05, 2.8707999999998818e-05, 2.868099999999915e-05, 2.9681000000000152e-05, 2.9221999999998888e-05, 2.9207999999999318e-05, 2.872300000000133e-05, 2.920900000000226e-05, 2.8708000000002287e-05, 2.9250000000001497e-05, 2.9207999999999318e-05, 2.9207999999999318e-05, 2.8722000000001857e-05, 2.872300000000133e-05, 2.972299999999886e-05, 2.9207999999999318e-05, 2.8750000000000997e-05, 2.9263000000001593e-05, 2.918099999999965e-05, 2.920899999999879e-05, 2.970899999999929e-05, 2.872300000000133e-05, 2.9222000000002357e-05]</msg>
<status status="PASS" starttime="20201110 08:34:19.278" endtime="20201110 08:34:19.280"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.273" endtime="20201110 08:34:19.280"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.283" endtime="20201110 08:34:19.284"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:19.286" endtime="20201110 08:34:19.306"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.285" endtime="20201110 08:34:19.306"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.281" endtime="20201110 08:34:19.307"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.915" endtime="20201110 08:34:19.307"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.914" endtime="20201110 08:34:19.307"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.316" endtime="20201110 08:34:19.334"></status>
</kw>
<msg timestamp="20201110 08:34:19.334" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:19.314" endtime="20201110 08:34:19.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:19.335" endtime="20201110 08:34:19.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.338" endtime="20201110 08:34:19.340"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.312" endtime="20201110 08:34:19.341"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.309" endtime="20201110 08:34:19.341"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.348" endtime="20201110 08:34:19.634"></status>
</kw>
<msg timestamp="20201110 08:34:19.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019638667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019668417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:19.346" endtime="20201110 08:34:19.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019638667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019668417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:19.639" endtime="20201110 08:34:19.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.647" endtime="20201110 08:34:19.649"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.344" endtime="20201110 08:34:19.650"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.342" endtime="20201110 08:34:19.650"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:19.654" level="INFO">${RESULT} = [{'time': 0.019668417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9750000000001997e-05, 'source_diff': 2.9750000000001997e-05}, {'time': 0.01970125, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201110 08:34:19.651" endtime="20201110 08:34:19.655"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:19.669" level="INFO">${ACCURACY} = {'source_diff': [2.9750000000001997e-05, 3.0208000000000318e-05, 2.9721999999999388e-05, 2.972299999999886e-05, 2.9721999999999388e-05, 3.0221999999999888e-05, 2.9667000000000582e-05, 2.97079999999998...</msg>
<status status="PASS" starttime="20201110 08:34:19.655" endtime="20201110 08:34:19.669"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.673" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201110 08:34:19.672" endtime="20201110 08:34:19.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.676" level="INFO">VALUE: [2.9750000000001997e-05, 3.0208000000000318e-05, 2.9721999999999388e-05, 2.972299999999886e-05, 2.9721999999999388e-05, 3.0221999999999888e-05, 2.9667000000000582e-05, 2.9707999999999818e-05, 2.972299999999886e-05, 3.0221999999999888e-05, 3.066700000000158e-05, 3.0221999999999888e-05, 3.0194000000000748e-05, 2.9721999999999388e-05, 3.0221999999999888e-05, 3.0235999999999458e-05, 2.9694000000000248e-05, 2.9735999999998958e-05, 3.072200000000039e-05, 2.9694000000000248e-05, 3.0249999999999028e-05, 3.0235999999999458e-05, 2.972299999999886e-05, 3.022300000000283e-05, 2.970899999999929e-05, 3.0208000000000318e-05, 2.9721999999999388e-05, 3.0221999999999888e-05, 2.9707999999999818e-05, 3.0222000000003357e-05, 3.0208000000000318e-05, 2.9707999999999818e-05, 2.9707999999999818e-05, 3.070799999999735e-05, 2.9735999999998958e-05, 3.0208000000000318e-05, 3.0236000000002927e-05, 3.066700000000158e-05, 2.972299999999886e-05, 3.065200000000254e-05, 3.0235999999999458e-05, 2.9721999999999388e-05, 2.972300000000233e-05, 3.022299999999936e-05, 2.969499999999972e-05, 3.0208000000000318e-05, 3.0208000000000318e-05, 2.9707999999999818e-05, 3.0221999999999888e-05, 2.9681000000000152e-05]</msg>
<status status="PASS" starttime="20201110 08:34:19.674" endtime="20201110 08:34:19.677"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.669" endtime="20201110 08:34:19.677"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.680" endtime="20201110 08:34:19.681"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:19.685" endtime="20201110 08:34:19.708"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.682" endtime="20201110 08:34:19.710"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.678" endtime="20201110 08:34:19.711"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.308" endtime="20201110 08:34:19.711"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.307" endtime="20201110 08:34:19.712"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.731" endtime="20201110 08:34:19.755"></status>
</kw>
<msg timestamp="20201110 08:34:19.756" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:19.728" endtime="20201110 08:34:19.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.761" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:19.758" endtime="20201110 08:34:19.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.763" endtime="20201110 08:34:19.769"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.722" endtime="20201110 08:34:19.770"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.717" endtime="20201110 08:34:19.771"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.784" endtime="20201110 08:34:20.070"></status>
</kw>
<msg timestamp="20201110 08:34:20.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035587222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035618444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:19.782" endtime="20201110 08:34:20.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:20.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035587222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035618444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:20.075" endtime="20201110 08:34:20.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.083" endtime="20201110 08:34:20.085"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.776" endtime="20201110 08:34:20.085"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.773" endtime="20201110 08:34:20.085"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:20.090" level="INFO">${RESULT} = [{'time': 0.035618444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.122199999999742e-05, 'source_diff': 3.122199999999742e-05}, {'time': 0.035652625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:20.086" endtime="20201110 08:34:20.090"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:20.103" level="INFO">${ACCURACY} = {'source_diff': [3.122199999999742e-05, 3.070799999999735e-05, 3.113899999999947e-05, 3.122199999999742e-05, 3.122199999999742e-05, 3.118100000000512e-05, 3.072200000000386e-05, 3.170899999999782e-05,...</msg>
<status status="PASS" starttime="20201110 08:34:20.091" endtime="20201110 08:34:20.104"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:20.108" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201110 08:34:20.107" endtime="20201110 08:34:20.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:20.110" level="INFO">VALUE: [3.122199999999742e-05, 3.070799999999735e-05, 3.113899999999947e-05, 3.122199999999742e-05, 3.122199999999742e-05, 3.118100000000512e-05, 3.072200000000386e-05, 3.170899999999782e-05, 3.119399999999828e-05, 3.122299999999689e-05, 3.119499999999775e-05, 3.119399999999828e-05, 3.122199999999742e-05, 3.123599999999699e-05, 3.123599999999699e-05, 3.122200000000436e-05, 3.072299999999639e-05, 3.072299999999639e-05, 3.170799999999835e-05, 3.070799999999735e-05, 3.122200000000436e-05, 3.070799999999735e-05, 3.072200000000386e-05, 3.073699999999596e-05, 3.120799999999785e-05, 3.122199999999742e-05, 3.119400000000522e-05, 3.070899999999682e-05, 3.072300000000333e-05, 3.113899999999947e-05, 3.122299999999689e-05, 3.120899999999732e-05, 3.122200000000436e-05, 3.073600000000343e-05, 3.122200000000436e-05, 3.122300000000383e-05, 3.069400000000472e-05, 3.070899999999682e-05, 3.072199999999692e-05, 3.120799999999785e-05, 3.120800000000479e-05, 3.065299999999854e-05, 3.176400000000357e-05, 3.12370000000034e-05, 3.120899999999732e-05, 3.070799999999735e-05, 3.072200000000386e-05, 3.172199999999792e-05, 3.122300000000383e-05, 3.073599999999649e-05]</msg>
<status status="PASS" starttime="20201110 08:34:20.109" endtime="20201110 08:34:20.118"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.104" endtime="20201110 08:34:20.118"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.121" endtime="20201110 08:34:20.122"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:20.124" endtime="20201110 08:34:20.143"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.123" endtime="20201110 08:34:20.144"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.119" endtime="20201110 08:34:20.144"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.714" endtime="20201110 08:34:20.145"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.713" endtime="20201110 08:34:20.145"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.153" endtime="20201110 08:34:20.172"></status>
</kw>
<msg timestamp="20201110 08:34:20.172" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:20.152" endtime="20201110 08:34:20.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:20.175" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:20.173" endtime="20201110 08:34:20.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.176" endtime="20201110 08:34:20.178"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.149" endtime="20201110 08:34:20.179"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.147" endtime="20201110 08:34:20.179"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.185" endtime="20201110 08:34:20.471"></status>
</kw>
<msg timestamp="20201110 08:34:20.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019722389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019779681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:20.184" endtime="20201110 08:34:20.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:20.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019722389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019779681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:20.475" endtime="20201110 08:34:20.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.484" endtime="20201110 08:34:20.485"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.181" endtime="20201110 08:34:20.486"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.180" endtime="20201110 08:34:20.486"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:20.494" level="INFO">${RESULT} = [{'time': 0.019779681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7292000000000454e-05, 'source_diff': 5.7292000000000454e-05}, {'time': 0.019839861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:20.487" endtime="20201110 08:34:20.495"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:20.527" level="INFO">${ACCURACY} = {'source_diff': [5.7292000000000454e-05, 3.4875000000000184e-05, 3.4902999999999323e-05, 3.5389000000000254e-05, 3.5653000000000074e-05, 3.49450000000015e-05, 3.5346999999998074e-05, 3.552799999999995...</msg>
<status status="PASS" starttime="20201110 08:34:20.496" endtime="20201110 08:34:20.527"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:20.536" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201110 08:34:20.534" endtime="20201110 08:34:20.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:20.541" level="INFO">VALUE: [5.7292000000000454e-05, 3.4875000000000184e-05, 3.4902999999999323e-05, 3.5389000000000254e-05, 3.5653000000000074e-05, 3.49450000000015e-05, 3.5346999999998074e-05, 3.552799999999995e-05, 3.4902999999999323e-05, 3.49450000000015e-05, 3.4902999999999323e-05, 3.477800000000267e-05, 3.531999999999841e-05, 3.5402999999999823e-05, 3.49589999999976e-05, 3.502800000000292e-05, 3.470900000000082e-05, 3.5402999999999823e-05, 3.473600000000049e-05, 3.542999999999949e-05, 3.551400000000038e-05, 3.5611000000001364e-05, 3.490199999999985e-05, 3.52779999999997e-05, 3.544399999999906e-05, 3.502800000000292e-05, 3.5569000000002654e-05, 3.520800000000185e-05, 3.47779999999992e-05, 3.4554999999998615e-05, 3.551400000000038e-05, 3.470800000000135e-05, 3.515300000000304e-05, 3.5152999999999573e-05, 3.480599999999834e-05, 3.470900000000082e-05, 3.526400000000013e-05, 3.526400000000013e-05, 3.5152999999999573e-05, 3.522300000000089e-05, 3.5416999999999393e-05, 3.482000000000138e-05, 3.54719999999982e-05, 3.547200000000167e-05, 3.481999999999791e-05, 3.548599999999777e-05, 3.540200000000035e-05, 3.5013000000000405e-05, 3.522200000000142e-05, 3.472200000000092e-05]</msg>
<status status="PASS" starttime="20201110 08:34:20.538" endtime="20201110 08:34:20.543"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.529" endtime="20201110 08:34:20.544"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.549" endtime="20201110 08:34:20.551"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:20.556" endtime="20201110 08:34:20.577"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.553" endtime="20201110 08:34:20.579"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.545" endtime="20201110 08:34:20.580"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.146" endtime="20201110 08:34:20.580"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.145" endtime="20201110 08:34:20.581"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.594" endtime="20201110 08:34:20.612"></status>
</kw>
<msg timestamp="20201110 08:34:20.612" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:20.592" endtime="20201110 08:34:20.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:20.615" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:20.613" endtime="20201110 08:34:20.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.616" endtime="20201110 08:34:20.618"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.589" endtime="20201110 08:34:20.619"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.585" endtime="20201110 08:34:20.619"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.626" endtime="20201110 08:34:20.912"></status>
</kw>
<msg timestamp="20201110 08:34:20.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027374653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027410681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:20.624" endtime="20201110 08:34:20.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:20.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027374653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027410681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:20.916" endtime="20201110 08:34:20.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.924" endtime="20201110 08:34:20.926"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.622" endtime="20201110 08:34:20.926"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.620" endtime="20201110 08:34:20.927"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:20.931" level="INFO">${RESULT} = [{'time': 0.027410681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.602800000000045e-05, 'source_diff': 3.602800000000045e-05}, {'time': 0.027459611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:20.928" endtime="20201110 08:34:20.931"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:20.944" level="INFO">${ACCURACY} = {'source_diff': [3.602800000000045e-05, 3.595799999999913e-05, 3.579199999999977e-05, 3.595799999999913e-05, 3.629200000000027e-05, 3.620799999999938e-05, 3.652800000000095e-05, 3.573599999999802e-05,...</msg>
<status status="PASS" starttime="20201110 08:34:20.932" endtime="20201110 08:34:20.945"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:20.949" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201110 08:34:20.948" endtime="20201110 08:34:20.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:20.951" level="INFO">VALUE: [3.602800000000045e-05, 3.595799999999913e-05, 3.579199999999977e-05, 3.595799999999913e-05, 3.629200000000027e-05, 3.620799999999938e-05, 3.652800000000095e-05, 3.573599999999802e-05, 3.651400000000138e-05, 3.6167000000000143e-05, 3.5875000000001184e-05, 3.633399999999898e-05, 3.6445000000003e-05, 3.6680999999996744e-05, 3.631999999999941e-05, 3.568100000000268e-05, 3.5903000000000324e-05, 3.633399999999898e-05, 3.6153000000000574e-05, 3.640199999999788e-05, 3.582000000000238e-05, 3.647200000000267e-05, 3.601400000000088e-05, 3.5889000000000754e-05, 3.645799999999963e-05, 3.5777000000000725e-05, 3.6417000000000394e-05, 3.6332999999999505e-05, 3.6611000000002364e-05, 3.5889000000000754e-05, 3.651399999999791e-05, 3.652800000000095e-05, 3.644400000000006e-05, 3.6152999999997104e-05, 3.591600000000042e-05, 3.576400000000063e-05, 3.6666999999997174e-05, 3.5847000000002044e-05, 3.575000000000106e-05, 3.6417000000000394e-05, 3.622299999999842e-05, 3.5889000000000754e-05, 3.602800000000045e-05, 3.6639000000001504e-05, 3.60979999999983e-05, 3.593099999999946e-05, 3.5846999999998574e-05, 3.6360999999998644e-05, 3.6638999999998034e-05, 3.6347000000002544e-05]</msg>
<status status="PASS" starttime="20201110 08:34:20.950" endtime="20201110 08:34:20.952"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.945" endtime="20201110 08:34:20.953"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.955" endtime="20201110 08:34:20.956"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:20.959" endtime="20201110 08:34:20.978"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.957" endtime="20201110 08:34:20.978"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.953" endtime="20201110 08:34:20.979"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.582" endtime="20201110 08:34:20.979"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.581" endtime="20201110 08:34:20.979"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.988" endtime="20201110 08:34:21.006"></status>
</kw>
<msg timestamp="20201110 08:34:21.006" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:20.986" endtime="20201110 08:34:21.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.009" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:21.008" endtime="20201110 08:34:21.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.010" endtime="20201110 08:34:21.013"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.984" endtime="20201110 08:34:21.013"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.982" endtime="20201110 08:34:21.014"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.020" endtime="20201110 08:34:21.305"></status>
</kw>
<msg timestamp="20201110 08:34:21.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019519458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019556722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:21.018" endtime="20201110 08:34:21.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019519458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019556722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:21.309" endtime="20201110 08:34:21.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.318" endtime="20201110 08:34:21.319"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.016" endtime="20201110 08:34:21.320"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.014" endtime="20201110 08:34:21.320"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:21.324" level="INFO">${RESULT} = [{'time': 0.019556722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.726399999999866e-05, 'source_diff': 3.726399999999866e-05}, {'time': 0.019608722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:21.321" endtime="20201110 08:34:21.325"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:21.338" level="INFO">${ACCURACY} = {'source_diff': [3.726399999999866e-05, 3.74720000000002e-05, 3.666600000000117e-05, 3.7666999999998174e-05, 3.722199999999995e-05, 3.672199999999945e-05, 3.6833000000000005e-05, 3.752799999999848e-05...</msg>
<status status="PASS" starttime="20201110 08:34:21.325" endtime="20201110 08:34:21.338"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.343" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201110 08:34:21.342" endtime="20201110 08:34:21.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.345" level="INFO">VALUE: [3.726399999999866e-05, 3.74720000000002e-05, 3.666600000000117e-05, 3.7666999999998174e-05, 3.722199999999995e-05, 3.672199999999945e-05, 3.6833000000000005e-05, 3.752799999999848e-05, 3.720799999999691e-05, 3.745800000000063e-05, 3.6902999999997854e-05, 3.752800000000195e-05, 3.7181000000000713e-05, 3.683399999999948e-05, 3.683399999999948e-05, 3.7360999999999644e-05, 3.720900000000332e-05, 3.72780000000017e-05, 3.74590000000001e-05, 3.690200000000185e-05, 3.740199999999888e-05, 3.655600000000009e-05, 3.7388999999998784e-05, 3.719400000000081e-05, 3.751399999999891e-05, 3.722199999999995e-05, 3.6846999999999575e-05, 3.76659999999987e-05, 3.7389000000002254e-05, 3.708399999999973e-05, 3.7597000000000325e-05, 3.72780000000017e-05, 3.6819000000000435e-05, 3.701400000000188e-05, 3.701399999999841e-05, 3.754199999999805e-05, 3.74720000000002e-05, 3.7305000000001365e-05, 3.683399999999948e-05, 3.672199999999945e-05, 3.67780000000012e-05, 3.676399999999816e-05, 3.707000000000016e-05, 3.729200000000127e-05, 3.672200000000292e-05, 3.6833000000000005e-05, 3.758400000000023e-05, 3.6777000000001725e-05, 3.7262999999999186e-05, 3.719400000000081e-05]</msg>
<status status="PASS" starttime="20201110 08:34:21.344" endtime="20201110 08:34:21.346"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.339" endtime="20201110 08:34:21.346"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.348" endtime="20201110 08:34:21.350"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:21.352" endtime="20201110 08:34:21.371"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.350" endtime="20201110 08:34:21.372"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.347" endtime="20201110 08:34:21.372"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.980" endtime="20201110 08:34:21.373"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.980" endtime="20201110 08:34:21.373"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.381" endtime="20201110 08:34:21.401"></status>
</kw>
<msg timestamp="20201110 08:34:21.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:21.380" endtime="20201110 08:34:21.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:21.403" endtime="20201110 08:34:21.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.405" endtime="20201110 08:34:21.408"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.377" endtime="20201110 08:34:21.408"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.375" endtime="20201110 08:34:21.409"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.415" endtime="20201110 08:34:21.701"></status>
</kw>
<msg timestamp="20201110 08:34:21.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019561306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019599028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:21.414" endtime="20201110 08:34:21.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019561306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019599028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:21.705" endtime="20201110 08:34:21.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.713" endtime="20201110 08:34:21.715"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.411" endtime="20201110 08:34:21.716"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.409" endtime="20201110 08:34:21.716"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:21.720" level="INFO">${RESULT} = [{'time': 0.019599028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.772200000000045e-05, 'source_diff': 3.772200000000045e-05}, {'time': 0.019649111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:21.717" endtime="20201110 08:34:21.720"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:21.734" level="INFO">${ACCURACY} = {'source_diff': [3.772200000000045e-05, 3.776399999999916e-05, 3.772200000000045e-05, 3.8209000000000853e-05, 3.7888999999999284e-05, 3.822200000000095e-05, 3.8012999999999936e-05, 3.8040999999999076e...</msg>
<status status="PASS" starttime="20201110 08:34:21.721" endtime="20201110 08:34:21.734"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.738" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201110 08:34:21.737" endtime="20201110 08:34:21.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.741" level="INFO">VALUE: [3.772200000000045e-05, 3.776399999999916e-05, 3.772200000000045e-05, 3.8209000000000853e-05, 3.7888999999999284e-05, 3.822200000000095e-05, 3.8012999999999936e-05, 3.8040999999999076e-05, 3.869399999999884e-05, 3.7874999999999714e-05, 3.7902999999998854e-05, 3.776399999999916e-05, 3.7902999999998854e-05, 3.8403000000002824e-05, 3.820800000000138e-05, 3.8152999999999104e-05, 3.804199999999855e-05, 3.7945000000001033e-05, 3.797199999999723e-05, 3.8181000000001714e-05, 3.8666999999999174e-05, 3.822200000000095e-05, 3.8652999999999604e-05, 3.8167000000002144e-05, 3.7916999999998424e-05, 3.772299999999992e-05, 3.852799999999948e-05, 3.822200000000095e-05, 3.8444999999998064e-05, 3.852800000000295e-05, 3.8040999999999076e-05, 3.8430999999998494e-05, 3.851399999999991e-05, 3.86659999999997e-05, 3.776400000000263e-05, 3.777799999999873e-05, 3.7888999999999284e-05, 3.8639000000000034e-05, 3.822200000000095e-05, 3.8582999999998285e-05, 3.799999999999984e-05, 3.8333000000001505e-05, 3.7888999999999284e-05, 3.776399999999916e-05, 3.827799999999923e-05, 3.799999999999984e-05, 3.8582999999998285e-05, 3.808400000000073e-05, 3.834800000000055e-05, 3.8639000000000034e-05]</msg>
<status status="PASS" starttime="20201110 08:34:21.739" endtime="20201110 08:34:21.741"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.735" endtime="20201110 08:34:21.742"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.744" endtime="20201110 08:34:21.745"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:21.748" endtime="20201110 08:34:21.767"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.746" endtime="20201110 08:34:21.767"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.743" endtime="20201110 08:34:21.768"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.374" endtime="20201110 08:34:21.768"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.373" endtime="20201110 08:34:21.768"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.777" endtime="20201110 08:34:21.794"></status>
</kw>
<msg timestamp="20201110 08:34:21.794" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:21.775" endtime="20201110 08:34:21.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.797" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:21.795" endtime="20201110 08:34:21.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.798" endtime="20201110 08:34:21.800"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.773" endtime="20201110 08:34:21.801"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.771" endtime="20201110 08:34:21.801"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.808" endtime="20201110 08:34:22.093"></status>
</kw>
<msg timestamp="20201110 08:34:22.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019521, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019559861, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:34:21.806" endtime="20201110 08:34:22.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:22.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019521, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019559861, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:34:22.097" endtime="20201110 08:34:22.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.106" endtime="20201110 08:34:22.107"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.804" endtime="20201110 08:34:22.108"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.802" endtime="20201110 08:34:22.108"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:22.113" level="INFO">${RESULT} = [{'time': 0.019559861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8861000000001145e-05, 'source_diff': 3.8861000000001145e-05}, {'time': 0.019610931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:22.109" endtime="20201110 08:34:22.113"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:22.127" level="INFO">${ACCURACY} = {'source_diff': [3.8861000000001145e-05, 3.934800000000155e-05, 3.9389000000000784e-05, 3.898600000000127e-05, 3.8694999999998314e-05, 3.949999999999787e-05, 3.954200000000005e-05, 3.9153000000000104e...</msg>
<status status="PASS" starttime="20201110 08:34:22.114" endtime="20201110 08:34:22.127"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:22.132" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201110 08:34:22.131" endtime="20201110 08:34:22.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:22.134" level="INFO">VALUE: [3.8861000000001145e-05, 3.934800000000155e-05, 3.9389000000000784e-05, 3.898600000000127e-05, 3.8694999999998314e-05, 3.949999999999787e-05, 3.954200000000005e-05, 3.9153000000000104e-05, 3.87919999999993e-05, 3.855599999999862e-05, 3.872300000000092e-05, 3.96119999999979e-05, 3.9153000000000104e-05, 3.922199999999848e-05, 3.909799999999783e-05, 3.8763000000000686e-05, 3.9318999999999465e-05, 3.91660000000002e-05, 3.895799999999866e-05, 3.94720000000022e-05, 3.926400000000066e-05, 3.952800000000048e-05, 3.94720000000022e-05, 3.945799999999916e-05, 3.872200000000145e-05, 3.951400000000091e-05, 3.870799999999841e-05, 3.8833000000002005e-05, 3.87919999999993e-05, 3.950000000000134e-05, 3.9582999999999285e-05, 3.9360999999998175e-05, 3.904199999999955e-05, 3.926400000000066e-05, 3.90980000000013e-05, 3.8874999999997245e-05, 3.8846999999998105e-05, 3.8874999999997245e-05, 3.874999999999712e-05, 3.922199999999848e-05, 3.9388999999997315e-05, 3.869400000000231e-05, 3.950000000000134e-05, 3.9097000000001825e-05, 3.9096999999998355e-05, 3.869400000000231e-05, 3.9097000000001825e-05, 3.9403000000000354e-05, 3.901400000000041e-05, 3.908399999999826e-05]</msg>
<status status="PASS" starttime="20201110 08:34:22.133" endtime="20201110 08:34:22.135"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.128" endtime="20201110 08:34:22.135"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.138" endtime="20201110 08:34:22.139"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:22.141" endtime="20201110 08:34:22.160"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.140" endtime="20201110 08:34:22.161"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.136" endtime="20201110 08:34:22.162"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.769" endtime="20201110 08:34:22.162"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.769" endtime="20201110 08:34:22.162"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.170" endtime="20201110 08:34:22.188"></status>
</kw>
<msg timestamp="20201110 08:34:22.188" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:22.169" endtime="20201110 08:34:22.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:22.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:22.189" endtime="20201110 08:34:22.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.192" endtime="20201110 08:34:22.194"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.166" endtime="20201110 08:34:22.195"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.164" endtime="20201110 08:34:22.195"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.202" endtime="20201110 08:34:22.486"></status>
</kw>
<msg timestamp="20201110 08:34:22.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019497556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019537611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:22.200" endtime="20201110 08:34:22.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:22.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019497556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019537611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:22.491" endtime="20201110 08:34:22.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.500" endtime="20201110 08:34:22.501"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.198" endtime="20201110 08:34:22.502"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.196" endtime="20201110 08:34:22.502"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:22.506" level="INFO">${RESULT} = [{'time': 0.019537611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0055000000000646e-05, 'source_diff': 4.0055000000000646e-05}, {'time': 0.019592639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:22.503" endtime="20201110 08:34:22.507"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:22.520" level="INFO">${ACCURACY} = {'source_diff': [4.0055000000000646e-05, 4.031999999999994e-05, 4.0388999999998315e-05, 4.0194999999999814e-05, 4.0026999999998036e-05, 4.0223000000002423e-05, 4.0403000000001354e-05, 3.96110000000018...</msg>
<status status="PASS" starttime="20201110 08:34:22.507" endtime="20201110 08:34:22.520"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:22.525" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201110 08:34:22.524" endtime="20201110 08:34:22.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:22.527" level="INFO">VALUE: [4.0055000000000646e-05, 4.031999999999994e-05, 4.0388999999998315e-05, 4.0194999999999814e-05, 4.0026999999998036e-05, 4.0223000000002423e-05, 4.0403000000001354e-05, 3.9611000000001895e-05, 4.0445000000000064e-05, 4.0082999999999785e-05, 4.0458999999999634e-05, 4.0459000000003104e-05, 4.022199999999948e-05, 4.026400000000166e-05, 4.024999999999862e-05, 4.0041000000001076e-05, 3.988799999999834e-05, 4.051399999999844e-05, 4.0152999999997635e-05, 4.045800000000016e-05, 4.027800000000123e-05, 4.0305000000000896e-05, 4.0153000000001104e-05, 3.972199999999898e-05, 3.970799999999941e-05, 4.052800000000148e-05, 4.0333000000000035e-05, 3.9917000000000424e-05, 4.051400000000191e-05, 4.023599999999905e-05, 4.004200000000055e-05, 3.983399999999901e-05, 4.0388999999998315e-05, 3.983399999999901e-05, 4.0222999999998954e-05, 3.983400000000248e-05, 4.033400000000298e-05, 4.0041000000001076e-05, 4.0346999999999605e-05, 3.9846999999999105e-05, 4.022199999999948e-05, 4.0290999999997856e-05, 4.0153000000001104e-05, 3.998600000000227e-05, 3.993000000000052e-05, 4.004200000000055e-05, 3.997199999999923e-05, 4.0638999999998565e-05, 4.0082999999999785e-05, 4.0138999999998065e-05]</msg>
<status status="PASS" starttime="20201110 08:34:22.526" endtime="20201110 08:34:22.528"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.521" endtime="20201110 08:34:22.528"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.531" endtime="20201110 08:34:22.532"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:22.534" endtime="20201110 08:34:22.553"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.533" endtime="20201110 08:34:22.554"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.529" endtime="20201110 08:34:22.554"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.163" endtime="20201110 08:34:22.555"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.162" endtime="20201110 08:34:22.555"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.564" endtime="20201110 08:34:22.582"></status>
</kw>
<msg timestamp="20201110 08:34:22.582" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:22.562" endtime="20201110 08:34:22.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:22.585" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:22.583" endtime="20201110 08:34:22.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.586" endtime="20201110 08:34:22.588"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.559" endtime="20201110 08:34:22.589"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.557" endtime="20201110 08:34:22.589"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.596" endtime="20201110 08:34:22.882"></status>
</kw>
<msg timestamp="20201110 08:34:22.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019797736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019838847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:22.594" endtime="20201110 08:34:22.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:22.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019797736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019838847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:22.886" endtime="20201110 08:34:22.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.894" endtime="20201110 08:34:22.896"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.592" endtime="20201110 08:34:22.897"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.590" endtime="20201110 08:34:22.897"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:22.901" level="INFO">${RESULT} = [{'time': 0.019838847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1110999999999925e-05, 'source_diff': 4.1110999999999925e-05}, {'time': 0.019892861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:22.898" endtime="20201110 08:34:22.901"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:22.915" level="INFO">${ACCURACY} = {'source_diff': [4.1110999999999925e-05, 4.072199999999998e-05, 4.0874999999999245e-05, 4.097200000000023e-05, 4.1152999999998635e-05, 4.154199999999858e-05, 4.077799999999826e-05, 4.095799999999719e-...</msg>
<status status="PASS" starttime="20201110 08:34:22.902" endtime="20201110 08:34:22.915"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:22.919" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201110 08:34:22.918" endtime="20201110 08:34:22.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:22.922" level="INFO">VALUE: [4.1110999999999925e-05, 4.072199999999998e-05, 4.0874999999999245e-05, 4.097200000000023e-05, 4.1152999999998635e-05, 4.154199999999858e-05, 4.077799999999826e-05, 4.095799999999719e-05, 4.129199999999833e-05, 4.1097000000000355e-05, 4.1417000000001924e-05, 4.145800000000116e-05, 4.127799999999876e-05, 4.1374999999999745e-05, 4.0888999999998815e-05, 4.0917000000001424e-05, 4.1388999999999315e-05, 4.152799999999901e-05, 4.1040999999998606e-05, 4.109799999999983e-05, 4.1110999999999925e-05, 4.1041000000002076e-05, 4.1347000000000605e-05, 4.1361000000000175e-05, 4.1153000000002105e-05, 4.154200000000205e-05, 4.0805000000001396e-05, 4.077800000000173e-05, 4.124999999999962e-05, 4.07920000000013e-05, 4.076400000000216e-05, 4.119400000000134e-05, 4.154199999999858e-05, 4.1083000000000786e-05, 4.149999999999987e-05, 4.076399999999869e-05, 4.0945000000000564e-05, 4.147200000000073e-05, 4.1361000000000175e-05, 4.157000000000119e-05, 4.1083000000000786e-05, 4.073599999999955e-05, 4.0973000000003174e-05, 4.1445000000001064e-05, 4.158400000000076e-05, 4.165199999999966e-05, 4.0804999999997926e-05, 4.163800000000009e-05, 4.1540999999999106e-05, 4.1097000000000355e-05]</msg>
<status status="PASS" starttime="20201110 08:34:22.920" endtime="20201110 08:34:22.923"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.916" endtime="20201110 08:34:22.923"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.925" endtime="20201110 08:34:22.927"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:22.929" endtime="20201110 08:34:22.948"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.927" endtime="20201110 08:34:22.949"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.924" endtime="20201110 08:34:22.949"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.556" endtime="20201110 08:34:22.949"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.555" endtime="20201110 08:34:22.949"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.958" endtime="20201110 08:34:22.976"></status>
</kw>
<msg timestamp="20201110 08:34:22.976" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:22.957" endtime="20201110 08:34:22.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:22.979" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:22.977" endtime="20201110 08:34:22.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.980" endtime="20201110 08:34:22.982"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.954" endtime="20201110 08:34:22.983"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.952" endtime="20201110 08:34:22.983"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.990" endtime="20201110 08:34:23.276"></status>
</kw>
<msg timestamp="20201110 08:34:23.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019518972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019560917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:22.988" endtime="20201110 08:34:23.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019518972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019560917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:23.281" endtime="20201110 08:34:23.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.289" endtime="20201110 08:34:23.291"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.986" endtime="20201110 08:34:23.291"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.984" endtime="20201110 08:34:23.292"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:23.296" level="INFO">${RESULT} = [{'time': 0.019560917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1945000000001564e-05, 'source_diff': 4.1945000000001564e-05}, {'time': 0.019614958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:23.293" endtime="20201110 08:34:23.296"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:23.310" level="INFO">${ACCURACY} = {'source_diff': [4.1945000000001564e-05, 4.174999999999665e-05, 4.251400000000044e-05, 4.1888999999999815e-05, 4.232000000000194e-05, 4.2166999999999205e-05, 4.1776999999999787e-05, 4.216599999999973e...</msg>
<status status="PASS" starttime="20201110 08:34:23.297" endtime="20201110 08:34:23.310"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.314" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201110 08:34:23.313" endtime="20201110 08:34:23.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.317" level="INFO">VALUE: [4.1945000000001564e-05, 4.174999999999665e-05, 4.251400000000044e-05, 4.1888999999999815e-05, 4.232000000000194e-05, 4.2166999999999205e-05, 4.1776999999999787e-05, 4.216599999999973e-05, 4.266600000000023e-05, 4.2639000000000565e-05, 4.2290999999999856e-05, 4.219399999999887e-05, 4.1818999999998496e-05, 4.2596999999998386e-05, 4.225000000000062e-05, 4.220800000000191e-05, 4.170800000000141e-05, 4.2375000000000745e-05, 4.2416999999999455e-05, 4.1888999999999815e-05, 4.1944999999998095e-05, 4.227799999999976e-05, 4.2667000000003175e-05, 4.202799999999951e-05, 4.192999999999905e-05, 4.2152999999999635e-05, 4.2430999999999025e-05, 4.242999999999955e-05, 4.2444999999998595e-05, 4.2110999999997456e-05, 4.1832999999998066e-05, 4.2082999999998316e-05, 4.238800000000084e-05, 4.188800000000034e-05, 4.176300000000022e-05, 4.2111000000000925e-05, 4.1611000000000425e-05, 4.226400000000019e-05, 4.2625000000000995e-05, 4.2680999999999275e-05, 4.251399999999697e-05, 4.244400000000259e-05, 4.2597000000001856e-05, 4.176400000000316e-05, 4.2582999999998816e-05, 4.1903000000002855e-05, 4.250000000000087e-05, 4.226400000000019e-05, 4.174999999999665e-05, 4.2416999999999455e-05]</msg>
<status status="PASS" starttime="20201110 08:34:23.315" endtime="20201110 08:34:23.317"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.310" endtime="20201110 08:34:23.318"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.320" endtime="20201110 08:34:23.322"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:23.324" endtime="20201110 08:34:23.343"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.322" endtime="20201110 08:34:23.344"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.319" endtime="20201110 08:34:23.344"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.950" endtime="20201110 08:34:23.344"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.950" endtime="20201110 08:34:23.344"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.353" endtime="20201110 08:34:23.371"></status>
</kw>
<msg timestamp="20201110 08:34:23.372" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:23.352" endtime="20201110 08:34:23.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.374" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:23.373" endtime="20201110 08:34:23.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.375" endtime="20201110 08:34:23.378"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.349" endtime="20201110 08:34:23.378"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.347" endtime="20201110 08:34:23.379"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.385" endtime="20201110 08:34:23.689"></status>
</kw>
<msg timestamp="20201110 08:34:23.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019712069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019755403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:23.384" endtime="20201110 08:34:23.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019712069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019755403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:23.693" endtime="20201110 08:34:23.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.702" endtime="20201110 08:34:23.704"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.381" endtime="20201110 08:34:23.704"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.379" endtime="20201110 08:34:23.705"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:23.709" level="INFO">${RESULT} = [{'time': 0.019755403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.333400000000251e-05, 'source_diff': 4.333400000000251e-05}, {'time': 0.019811417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:23.705" endtime="20201110 08:34:23.709"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:23.724" level="INFO">${ACCURACY} = {'source_diff': [4.333400000000251e-05, 4.279199999999983e-05, 4.283399999999854e-05, 4.2930999999999525e-05, 4.315199999999769e-05, 4.366600000000123e-05, 4.281999999999897e-05, 4.3096999999998886e-0...</msg>
<status status="PASS" starttime="20201110 08:34:23.710" endtime="20201110 08:34:23.724"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.729" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201110 08:34:23.728" endtime="20201110 08:34:23.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.731" level="INFO">VALUE: [4.333400000000251e-05, 4.279199999999983e-05, 4.283399999999854e-05, 4.2930999999999525e-05, 4.315199999999769e-05, 4.366600000000123e-05, 4.281999999999897e-05, 4.3096999999998886e-05, 4.269400000000284e-05, 4.326400000000119e-05, 4.279199999999983e-05, 4.324999999999815e-05, 4.2903000000000385e-05, 4.3569000000000246e-05, 4.2903000000000385e-05, 4.326400000000119e-05, 4.3403000000000885e-05, 4.3667000000000705e-05, 4.2832999999999066e-05, 4.320799999999944e-05, 4.301399999999747e-05, 4.3167000000000205e-05, 4.295799999999919e-05, 4.3167000000000205e-05, 4.2708999999998415e-05, 4.348599999999883e-05, 4.351400000000144e-05, 4.3139000000001065e-05, 4.331999999999947e-05, 4.3139000000001065e-05, 4.273600000000155e-05, 4.2832999999999066e-05, 4.3624999999998526e-05, 4.3346999999999136e-05, 4.3332999999999566e-05, 4.3082999999999316e-05, 4.320799999999944e-05, 4.3055000000000176e-05, 4.3582999999999816e-05, 4.351399999999797e-05, 4.322199999999901e-05, 4.297199999999876e-05, 4.3125000000001495e-05, 4.2639000000000565e-05, 4.3167000000000205e-05, 4.308399999999879e-05, 4.3110999999998456e-05, 4.3374999999998276e-05, 4.326399999999772e-05, 4.331999999999947e-05]</msg>
<status status="PASS" starttime="20201110 08:34:23.730" endtime="20201110 08:34:23.732"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.725" endtime="20201110 08:34:23.733"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.735" endtime="20201110 08:34:23.736"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:23.739" endtime="20201110 08:34:23.758"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.737" endtime="20201110 08:34:23.759"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.733" endtime="20201110 08:34:23.759"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.345" endtime="20201110 08:34:23.759"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.345" endtime="20201110 08:34:23.760"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.769" endtime="20201110 08:34:23.787"></status>
</kw>
<msg timestamp="20201110 08:34:23.787" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:23.767" endtime="20201110 08:34:23.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.790" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:23.788" endtime="20201110 08:34:23.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.791" endtime="20201110 08:34:23.794"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.765" endtime="20201110 08:34:23.794"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.762" endtime="20201110 08:34:23.795"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.801" endtime="20201110 08:34:24.089"></status>
</kw>
<msg timestamp="20201110 08:34:24.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020367111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020411694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:23.800" endtime="20201110 08:34:24.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:24.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020367111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020411694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:24.093" endtime="20201110 08:34:24.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.102" endtime="20201110 08:34:24.104"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.797" endtime="20201110 08:34:24.104"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.795" endtime="20201110 08:34:24.105"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:24.109" level="INFO">${RESULT} = [{'time': 0.020411694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4583000000000816e-05, 'source_diff': 4.4583000000000816e-05}, {'time': 0.020469708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:24.105" endtime="20201110 08:34:24.109"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:24.123" level="INFO">${ACCURACY} = {'source_diff': [4.4583000000000816e-05, 4.454099999999864e-05, 4.373599999999908e-05, 4.458299999999735e-05, 4.369400000000037e-05, 4.383399999999954e-05, 4.4402999999998416e-05, 4.4652999999998666e-...</msg>
<status status="PASS" starttime="20201110 08:34:24.110" endtime="20201110 08:34:24.123"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:24.128" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201110 08:34:24.127" endtime="20201110 08:34:24.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:24.130" level="INFO">VALUE: [4.4583000000000816e-05, 4.454099999999864e-05, 4.373599999999908e-05, 4.458299999999735e-05, 4.369400000000037e-05, 4.383399999999954e-05, 4.4402999999998416e-05, 4.4652999999998666e-05, 4.402799999999804e-05, 4.404200000000108e-05, 4.43329999999971e-05, 4.454200000000158e-05, 4.4374999999999276e-05, 4.458400000000029e-05, 4.44999999999994e-05, 4.4152999999998166e-05, 4.4181000000000775e-05, 4.3958999999999665e-05, 4.4402999999998416e-05, 4.397199999999976e-05, 4.463800000000309e-05, 4.3833000000000066e-05, 4.4624999999999526e-05, 4.3860999999999206e-05, 4.454100000000211e-05, 4.422200000000001e-05, 4.452799999999854e-05, 4.4402999999998416e-05, 4.4181000000000775e-05, 4.394400000000062e-05, 4.370799999999994e-05, 4.394399999999715e-05, 4.419400000000087e-05, 4.4138999999998596e-05, 4.406899999999728e-05, 4.4083000000000316e-05, 4.4222999999999485e-05, 4.4652999999998666e-05, 4.432000000000047e-05, 4.3722999999998985e-05, 4.3902999999997916e-05, 4.404100000000161e-05, 4.469400000000137e-05, 4.395800000000019e-05, 4.454099999999864e-05, 4.4096999999999886e-05, 4.4333000000000566e-05, 4.420800000000044e-05, 4.4069000000000746e-05, 4.423600000000305e-05]</msg>
<status status="PASS" starttime="20201110 08:34:24.129" endtime="20201110 08:34:24.131"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.124" endtime="20201110 08:34:24.132"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.134" endtime="20201110 08:34:24.135"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:24.138" endtime="20201110 08:34:24.157"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.136" endtime="20201110 08:34:24.157"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.132" endtime="20201110 08:34:24.158"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.761" endtime="20201110 08:34:24.158"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.760" endtime="20201110 08:34:24.158"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.167" endtime="20201110 08:34:24.186"></status>
</kw>
<msg timestamp="20201110 08:34:24.186" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:24.166" endtime="20201110 08:34:24.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:24.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:24.187" endtime="20201110 08:34:24.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.190" endtime="20201110 08:34:24.192"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.163" endtime="20201110 08:34:24.193"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.161" endtime="20201110 08:34:24.193"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.200" endtime="20201110 08:34:24.488"></status>
</kw>
<msg timestamp="20201110 08:34:24.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020166458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020211972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:24.199" endtime="20201110 08:34:24.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:24.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020166458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020211972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:24.493" endtime="20201110 08:34:24.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.502" endtime="20201110 08:34:24.504"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.196" endtime="20201110 08:34:24.504"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.194" endtime="20201110 08:34:24.505"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:24.509" level="INFO">${RESULT} = [{'time': 0.020211972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.551399999999997e-05, 'source_diff': 4.551399999999997e-05}, {'time': 0.020270958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:24.506" endtime="20201110 08:34:24.509"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:24.523" level="INFO">${ACCURACY} = {'source_diff': [4.551399999999997e-05, 4.494399999999815e-05, 4.527699999999982e-05, 4.53329999999981e-05, 4.527799999999929e-05, 4.5319000000001997e-05, 4.479200000000183e-05, 4.5611000000000956e-05...</msg>
<status status="PASS" starttime="20201110 08:34:24.510" endtime="20201110 08:34:24.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:24.529" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201110 08:34:24.528" endtime="20201110 08:34:24.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:24.532" level="INFO">VALUE: [4.551399999999997e-05, 4.494399999999815e-05, 4.527699999999982e-05, 4.53329999999981e-05, 4.527799999999929e-05, 4.5319000000001997e-05, 4.479200000000183e-05, 4.5611000000000956e-05, 4.470799999999747e-05, 4.4902999999998916e-05, 4.51939999999984e-05, 4.4916999999998486e-05, 4.5402999999999416e-05, 4.48060000000014e-05, 4.5388999999999846e-05, 4.477800000000226e-05, 4.522200000000101e-05, 4.554199999999911e-05, 4.526399999999972e-05, 4.566600000000323e-05, 4.55000000000004e-05, 4.536099999999724e-05, 4.48329999999976e-05, 4.558299999999835e-05, 4.522199999999754e-05, 4.559699999999792e-05, 4.552799999999954e-05, 4.477799999999879e-05, 4.467999999999833e-05, 4.5195000000001345e-05, 4.4833000000001066e-05, 4.5083000000001316e-05, 4.552799999999954e-05, 4.531899999999853e-05, 4.558299999999835e-05, 4.555600000000215e-05, 4.547199999999779e-05, 4.508299999999785e-05, 4.483400000000054e-05, 4.527799999999929e-05, 4.4889000000002816e-05, 4.5375000000000276e-05, 4.457000000000072e-05, 4.541599999999951e-05, 4.5347000000001136e-05, 4.48329999999976e-05, 4.505499999999871e-05, 4.5167000000002205e-05, 4.533400000000104e-05, 4.5111000000000456e-05]</msg>
<status status="PASS" starttime="20201110 08:34:24.531" endtime="20201110 08:34:24.533"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.524" endtime="20201110 08:34:24.534"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.536" endtime="20201110 08:34:24.538"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:24.542" endtime="20201110 08:34:24.561"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.538" endtime="20201110 08:34:24.562"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.535" endtime="20201110 08:34:24.563"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.159" endtime="20201110 08:34:24.563"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.159" endtime="20201110 08:34:24.563"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.572" endtime="20201110 08:34:24.591"></status>
</kw>
<msg timestamp="20201110 08:34:24.591" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:24.571" endtime="20201110 08:34:24.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:24.594" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:24.592" endtime="20201110 08:34:24.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.595" endtime="20201110 08:34:24.598"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.568" endtime="20201110 08:34:24.598"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.566" endtime="20201110 08:34:24.599"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.605" endtime="20201110 08:34:24.893"></status>
</kw>
<msg timestamp="20201110 08:34:24.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020676028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020722417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:24.604" endtime="20201110 08:34:24.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:24.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020676028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020722417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:24.897" endtime="20201110 08:34:24.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.906" endtime="20201110 08:34:24.908"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.601" endtime="20201110 08:34:24.908"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.599" endtime="20201110 08:34:24.909"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:24.913" level="INFO">${RESULT} = [{'time': 0.020722417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.6389000000000846e-05, 'source_diff': 4.6389000000000846e-05}, {'time': 0.020783431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:24.909" endtime="20201110 08:34:24.913"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:24.927" level="INFO">${ACCURACY} = {'source_diff': [4.6389000000000846e-05, 4.5889000000000346e-05, 4.638899999999738e-05, 4.595800000000219e-05, 4.645799999999922e-05, 4.659699999999892e-05, 4.624999999999768e-05, 4.581899999999903e-0...</msg>
<status status="PASS" starttime="20201110 08:34:24.914" endtime="20201110 08:34:24.928"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:24.932" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201110 08:34:24.931" endtime="20201110 08:34:24.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:24.935" level="INFO">VALUE: [4.6389000000000846e-05, 4.5889000000000346e-05, 4.638899999999738e-05, 4.595800000000219e-05, 4.645799999999922e-05, 4.659699999999892e-05, 4.624999999999768e-05, 4.581899999999903e-05, 4.6597000000002387e-05, 4.6430999999999556e-05, 4.6097000000001886e-05, 4.6653000000000666e-05, 4.631899999999953e-05, 4.661099999999849e-05, 4.576400000000022e-05, 4.606999999999875e-05, 4.6639000000001096e-05, 4.5694999999998376e-05, 4.6444999999999126e-05, 4.629199999999986e-05, 4.601400000000047e-05, 4.5722999999997516e-05, 4.622199999999854e-05, 4.6459000000002165e-05, 4.605499999999971e-05, 4.6445000000002595e-05, 4.5973000000001235e-05, 4.5875000000000776e-05, 4.645799999999922e-05, 4.604100000000014e-05, 4.6389000000000846e-05, 4.6153000000000166e-05, 4.5889000000000346e-05, 4.598600000000133e-05, 4.659699999999892e-05, 4.626400000000072e-05, 4.595800000000219e-05, 4.576400000000022e-05, 4.659699999999892e-05, 4.6139000000000596e-05, 4.6583000000002817e-05, 4.6611000000001956e-05, 4.609799999999789e-05, 4.599999999999743e-05, 4.602800000000004e-05, 4.5958999999998196e-05, 4.599999999999743e-05, 4.597199999999829e-05, 4.652799999999707e-05, 4.595799999999872e-05]</msg>
<status status="PASS" starttime="20201110 08:34:24.933" endtime="20201110 08:34:24.935"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.928" endtime="20201110 08:34:24.936"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.938" endtime="20201110 08:34:24.940"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:24.942" endtime="20201110 08:34:24.961"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.940" endtime="20201110 08:34:24.962"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.937" endtime="20201110 08:34:24.963"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.564" endtime="20201110 08:34:24.963"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.563" endtime="20201110 08:34:24.963"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.972" endtime="20201110 08:34:24.991"></status>
</kw>
<msg timestamp="20201110 08:34:24.992" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:24.970" endtime="20201110 08:34:24.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:24.994" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:24.993" endtime="20201110 08:34:24.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.995" endtime="20201110 08:34:24.998"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.968" endtime="20201110 08:34:24.998"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.965" endtime="20201110 08:34:24.999"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.006" endtime="20201110 08:34:25.293"></status>
</kw>
<msg timestamp="20201110 08:34:25.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020379, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020425944, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:34:25.004" endtime="20201110 08:34:25.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:25.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020379, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020425944, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:34:25.297" endtime="20201110 08:34:25.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.306" endtime="20201110 08:34:25.308"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.001" endtime="20201110 08:34:25.308"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.000" endtime="20201110 08:34:25.309"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:25.313" level="INFO">${RESULT} = [{'time': 0.020425944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.694400000000015e-05, 'source_diff': 4.694400000000015e-05}, {'time': 0.020488, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201110 08:34:25.310" endtime="20201110 08:34:25.313"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:25.328" level="INFO">${ACCURACY} = {'source_diff': [4.694400000000015e-05, 4.706900000000028e-05, 4.720799999999997e-05, 4.716600000000126e-05, 4.734699999999967e-05, 4.702799999999757e-05, 4.677799999999732e-05, 4.7125000000002026e-05...</msg>
<status status="PASS" starttime="20201110 08:34:25.314" endtime="20201110 08:34:25.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:25.333" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201110 08:34:25.332" endtime="20201110 08:34:25.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:25.336" level="INFO">VALUE: [4.694400000000015e-05, 4.706900000000028e-05, 4.720799999999997e-05, 4.716600000000126e-05, 4.734699999999967e-05, 4.702799999999757e-05, 4.677799999999732e-05, 4.7125000000002026e-05, 4.747199999999979e-05, 4.7403000000001416e-05, 4.6694999999999376e-05, 4.674999999999818e-05, 4.677800000000079e-05, 4.727800000000129e-05, 4.6959000000002665e-05, 4.749999999999893e-05, 4.673599999999861e-05, 4.683399999999907e-05, 4.7222999999999016e-05, 4.7361000000002706e-05, 4.726299999999878e-05, 4.708299999999985e-05, 4.748600000000283e-05, 4.716600000000126e-05, 4.711099999999899e-05, 4.734699999999967e-05, 4.695799999999972e-05, 4.754200000000111e-05, 4.698599999999886e-05, 4.727800000000129e-05, 4.679200000000036e-05, 4.75139999999985e-05, 4.745800000000022e-05, 4.757000000000025e-05, 4.679200000000036e-05, 4.701400000000147e-05, 4.7194999999999876e-05, 4.677800000000079e-05, 4.75000000000024e-05, 4.7209000000002915e-05, 4.676400000000122e-05, 4.674999999999818e-05, 4.702800000000104e-05, 4.754099999999817e-05, 4.740199999999847e-05, 4.706900000000028e-05, 4.720799999999997e-05, 4.7389000000001846e-05, 4.7625000000002526e-05, 4.726400000000172e-05]</msg>
<status status="PASS" starttime="20201110 08:34:25.334" endtime="20201110 08:34:25.342"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.329" endtime="20201110 08:34:25.343"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.345" endtime="20201110 08:34:25.347"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:25.349" endtime="20201110 08:34:25.368"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.347" endtime="20201110 08:34:25.369"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.343" endtime="20201110 08:34:25.369"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.964" endtime="20201110 08:34:25.370"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.963" endtime="20201110 08:34:25.370"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.379" endtime="20201110 08:34:25.398"></status>
</kw>
<msg timestamp="20201110 08:34:25.398" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:25.377" endtime="20201110 08:34:25.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:25.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:25.399" endtime="20201110 08:34:25.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.402" endtime="20201110 08:34:25.404"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.374" endtime="20201110 08:34:25.405"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.372" endtime="20201110 08:34:25.405"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.412" endtime="20201110 08:34:25.698"></status>
</kw>
<msg timestamp="20201110 08:34:25.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020224056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020272486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:25.411" endtime="20201110 08:34:25.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:25.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020224056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020272486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:25.703" endtime="20201110 08:34:25.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.711" endtime="20201110 08:34:25.713"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.408" endtime="20201110 08:34:25.713"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.406" endtime="20201110 08:34:25.714"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:25.718" level="INFO">${RESULT} = [{'time': 0.020272486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.842999999999861e-05, 'source_diff': 4.842999999999861e-05}, {'time': 0.020332486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:25.715" endtime="20201110 08:34:25.718"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:25.732" level="INFO">${ACCURACY} = {'source_diff': [4.842999999999861e-05, 4.797200000000029e-05, 4.833299999999763e-05, 4.845800000000122e-05, 4.805600000000118e-05, 4.86529999999992e-05, 4.802799999999857e-05, 4.85139999999995e-05, 4...</msg>
<status status="PASS" starttime="20201110 08:34:25.719" endtime="20201110 08:34:25.733"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:25.737" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201110 08:34:25.736" endtime="20201110 08:34:25.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:25.740" level="INFO">VALUE: [4.842999999999861e-05, 4.797200000000029e-05, 4.833299999999763e-05, 4.845800000000122e-05, 4.805600000000118e-05, 4.86529999999992e-05, 4.802799999999857e-05, 4.85139999999995e-05, 4.7889000000002346e-05, 4.788899999999888e-05, 4.8459000000000696e-05, 4.7973000000003235e-05, 4.816699999999827e-05, 4.773599999999961e-05, 4.809800000000336e-05, 4.788899999999888e-05, 4.826399999999925e-05, 4.852799999999907e-05, 4.786099999999974e-05, 4.8013999999999e-05, 4.777700000000232e-05, 4.804200000000161e-05, 4.83469999999972e-05, 4.774999999999918e-05, 4.863899999999963e-05, 4.7917000000001486e-05, 4.777800000000179e-05, 4.852799999999907e-05, 4.78330000000006e-05, 4.85269999999996e-05, 4.859700000000092e-05, 4.83330000000011e-05, 4.7972999999999766e-05, 4.852799999999907e-05, 4.783400000000007e-05, 4.7959000000000196e-05, 4.81529999999987e-05, 4.7667000000001236e-05, 4.802700000000257e-05, 4.83330000000011e-05, 4.845800000000122e-05, 4.813799999999965e-05, 4.772200000000004e-05, 4.797199999999682e-05, 4.8417000000001986e-05, 4.826399999999925e-05, 4.812499999999956e-05, 4.83330000000011e-05, 4.81529999999987e-05, 4.852799999999907e-05]</msg>
<status status="PASS" starttime="20201110 08:34:25.738" endtime="20201110 08:34:25.740"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.733" endtime="20201110 08:34:25.741"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.743" endtime="20201110 08:34:25.745"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:25.747" endtime="20201110 08:34:25.766"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.745" endtime="20201110 08:34:25.767"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.742" endtime="20201110 08:34:25.767"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.371" endtime="20201110 08:34:25.768"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.370" endtime="20201110 08:34:25.768"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.777" endtime="20201110 08:34:25.795"></status>
</kw>
<msg timestamp="20201110 08:34:25.796" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:25.775" endtime="20201110 08:34:25.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:25.798" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:25.797" endtime="20201110 08:34:25.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.799" endtime="20201110 08:34:25.802"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.773" endtime="20201110 08:34:25.803"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.770" endtime="20201110 08:34:25.803"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.810" endtime="20201110 08:34:26.098"></status>
</kw>
<msg timestamp="20201110 08:34:26.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020298292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020347806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:25.808" endtime="20201110 08:34:26.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:26.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020298292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020347806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:26.103" endtime="20201110 08:34:26.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.111" endtime="20201110 08:34:26.113"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.806" endtime="20201110 08:34:26.114"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.804" endtime="20201110 08:34:26.114"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:26.118" level="INFO">${RESULT} = [{'time': 0.020347806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.95140000000005e-05, 'source_diff': 4.95140000000005e-05}, {'time': 0.020409861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:34:26.115" endtime="20201110 08:34:26.119"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:26.133" level="INFO">${ACCURACY} = {'source_diff': [4.95140000000005e-05, 4.931900000000253e-05, 4.9388000000000903e-05, 4.877699999999985e-05, 4.895800000000172e-05, 4.954100000000017e-05, 4.933299999999863e-05, 4.934700000000167e-05,...</msg>
<status status="PASS" starttime="20201110 08:34:26.119" endtime="20201110 08:34:26.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:26.137" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201110 08:34:26.136" endtime="20201110 08:34:26.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:26.140" level="INFO">VALUE: [4.95140000000005e-05, 4.931900000000253e-05, 4.9388000000000903e-05, 4.877699999999985e-05, 4.895800000000172e-05, 4.954100000000017e-05, 4.933299999999863e-05, 4.934700000000167e-05, 4.877799999999932e-05, 4.963900000000063e-05, 4.938900000000038e-05, 4.96530000000002e-05, 4.926400000000025e-05, 4.8709000000000946e-05, 4.9458999999998227e-05, 4.930599999999896e-05, 4.966699999999977e-05, 4.877799999999932e-05, 4.919499999999841e-05, 4.861099999999702e-05, 4.963900000000063e-05, 4.886100000000074e-05, 4.8708999999997477e-05, 4.93330000000021e-05, 4.869399999999843e-05, 4.96530000000002e-05, 4.9014e-05, 4.948600000000136e-05, 4.956900000000278e-05, 4.950000000000093e-05, 4.93469999999982e-05, 4.95140000000005e-05, 4.969499999999891e-05, 4.934700000000167e-05, 4.906999999999828e-05, 4.8722999999997046e-05, 4.96530000000002e-05, 4.955599999999921e-05, 4.934799999999767e-05, 4.9237000000000586e-05, 4.954199999999964e-05, 4.940299999999995e-05, 4.908299999999838e-05, 4.909700000000142e-05, 4.879099999999942e-05, 4.849999999999993e-05, 4.947199999999832e-05, 4.908299999999838e-05, 4.886100000000074e-05, 4.959699999999845e-05]</msg>
<status status="PASS" starttime="20201110 08:34:26.138" endtime="20201110 08:34:26.141"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.133" endtime="20201110 08:34:26.141"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.144" endtime="20201110 08:34:26.145"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:26.147" endtime="20201110 08:34:26.166"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.146" endtime="20201110 08:34:26.167"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.142" endtime="20201110 08:34:26.168"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.769" endtime="20201110 08:34:26.168"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.768" endtime="20201110 08:34:26.168"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.177" endtime="20201110 08:34:26.196"></status>
</kw>
<msg timestamp="20201110 08:34:26.196" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:26.175" endtime="20201110 08:34:26.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:26.199" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:26.197" endtime="20201110 08:34:26.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.200" endtime="20201110 08:34:26.203"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.173" endtime="20201110 08:34:26.203"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.170" endtime="20201110 08:34:26.204"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.210" endtime="20201110 08:34:26.497"></status>
</kw>
<msg timestamp="20201110 08:34:26.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020166194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020216653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:26.209" endtime="20201110 08:34:26.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:26.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020166194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020216653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:26.501" endtime="20201110 08:34:26.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.511" endtime="20201110 08:34:26.512"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.206" endtime="20201110 08:34:26.513"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.204" endtime="20201110 08:34:26.513"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:26.518" level="INFO">${RESULT} = [{'time': 0.020216653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.0459000000002696e-05, 'source_diff': 5.0459000000002696e-05}, {'time': 0.020279681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:26.514" endtime="20201110 08:34:26.518"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:26.532" level="INFO">${ACCURACY} = {'source_diff': [5.0459000000002696e-05, 5.063900000000163e-05, 5.048600000000236e-05, 4.981999999999903e-05, 5.0665999999997824e-05, 5.016600000000079e-05, 5.058299999999988e-05, 4.979100000000042e-0...</msg>
<status status="PASS" starttime="20201110 08:34:26.519" endtime="20201110 08:34:26.532"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:26.536" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201110 08:34:26.535" endtime="20201110 08:34:26.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:26.539" level="INFO">VALUE: [5.0459000000002696e-05, 5.063900000000163e-05, 5.048600000000236e-05, 4.981999999999903e-05, 5.0665999999997824e-05, 5.016600000000079e-05, 5.058299999999988e-05, 4.979100000000042e-05, 4.976400000000075e-05, 5.040300000000095e-05, 5.06530000000012e-05, 5.040300000000095e-05, 5.044400000000018e-05, 5.037500000000181e-05, 5.041700000000052e-05, 4.963900000000063e-05, 4.997199999999882e-05, 5.045799999999975e-05, 5.009699999999895e-05, 5.050000000000193e-05, 5.036199999999824e-05, 5.006999999999928e-05, 4.969499999999891e-05, 5.041600000000104e-05, 4.975000000000118e-05, 5.0401999999998004e-05, 5.044400000000018e-05, 5.066700000000077e-05, 4.986099999999827e-05, 5.034700000000267e-05, 5.026399999999778e-05, 5.01530000000007e-05, 4.995799999999925e-05, 4.988899999999741e-05, 5.044400000000018e-05, 4.976400000000075e-05, 5.022200000000254e-05, 4.995799999999925e-05, 5.036100000000224e-05, 4.95140000000005e-05, 5.012499999999809e-05, 4.976399999999728e-05, 5.0237000000001586e-05, 4.988899999999741e-05, 5.0209000000002446e-05, 5.02079999999995e-05, 5.033299999999963e-05, 5.061199999999849e-05, 5.061099999999902e-05, 5.044400000000018e-05]</msg>
<status status="PASS" starttime="20201110 08:34:26.537" endtime="20201110 08:34:26.540"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.533" endtime="20201110 08:34:26.540"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.543" endtime="20201110 08:34:26.544"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:26.546" endtime="20201110 08:34:26.566"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.545" endtime="20201110 08:34:26.566"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.541" endtime="20201110 08:34:26.567"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.169" endtime="20201110 08:34:26.567"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.168" endtime="20201110 08:34:26.567"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.576" endtime="20201110 08:34:26.595"></status>
</kw>
<msg timestamp="20201110 08:34:26.595" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:26.575" endtime="20201110 08:34:26.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:26.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:26.596" endtime="20201110 08:34:26.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.599" endtime="20201110 08:34:26.601"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.572" endtime="20201110 08:34:26.602"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.570" endtime="20201110 08:34:26.602"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.609" endtime="20201110 08:34:26.896"></status>
</kw>
<msg timestamp="20201110 08:34:26.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020350056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020401611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:26.608" endtime="20201110 08:34:26.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:26.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020350056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020401611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:26.900" endtime="20201110 08:34:26.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.909" endtime="20201110 08:34:26.911"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.605" endtime="20201110 08:34:26.911"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.603" endtime="20201110 08:34:26.912"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:26.916" level="INFO">${RESULT} = [{'time': 0.020401611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.155500000000174e-05, 'source_diff': 5.155500000000174e-05}, {'time': 0.020465625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:26.912" endtime="20201110 08:34:26.916"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:26.931" level="INFO">${ACCURACY} = {'source_diff': [5.155500000000174e-05, 5.109699999999995e-05, 5.131900000000106e-05, 5.155599999999774e-05, 5.151399999999903e-05, 5.077800000000132e-05, 5.094500000000016e-05, 5.072199999999957e-05,...</msg>
<status status="PASS" starttime="20201110 08:34:26.917" endtime="20201110 08:34:26.931"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:26.936" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201110 08:34:26.935" endtime="20201110 08:34:26.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:26.938" level="INFO">VALUE: [5.155500000000174e-05, 5.109699999999995e-05, 5.131900000000106e-05, 5.155599999999774e-05, 5.151399999999903e-05, 5.077800000000132e-05, 5.094500000000016e-05, 5.072199999999957e-05, 5.141700000000152e-05, 5.073599999999914e-05, 5.124999999999921e-05, 5.147200000000032e-05, 5.098599999999939e-05, 5.086200000000221e-05, 5.15140000000025e-05, 5.125000000000268e-05, 5.08469999999997e-05, 5.111099999999952e-05, 5.077800000000132e-05, 5.101399999999853e-05, 5.076399999999828e-05, 5.144400000000118e-05, 5.091700000000102e-05, 5.15279999999986e-05, 5.08469999999997e-05, 5.073600000000261e-05, 5.145800000000075e-05, 5.152800000000207e-05, 5.122200000000007e-05, 5.116700000000127e-05, 5.156900000000131e-05, 5.16669999999983e-05, 5.09729999999993e-05, 5.068000000000086e-05, 5.074999999999871e-05, 5.086099999999927e-05, 5.097199999999982e-05, 5.072199999999957e-05, 5.165299999999873e-05, 5.108300000000038e-05, 5.158300000000088e-05, 5.162499999999959e-05, 5.091699999999755e-05, 5.1014000000002e-05, 5.093100000000059e-05, 5.154199999999817e-05, 5.127799999999835e-05, 5.1487000000002836e-05, 5.12080000000005e-05, 5.082000000000003e-05]</msg>
<status status="PASS" starttime="20201110 08:34:26.937" endtime="20201110 08:34:26.939"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.932" endtime="20201110 08:34:26.940"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.942" endtime="20201110 08:34:26.944"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:26.946" endtime="20201110 08:34:26.965"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.944" endtime="20201110 08:34:26.966"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.940" endtime="20201110 08:34:26.966"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.568" endtime="20201110 08:34:26.967"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.568" endtime="20201110 08:34:26.967"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.976" endtime="20201110 08:34:26.995"></status>
</kw>
<msg timestamp="20201110 08:34:26.995" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:26.974" endtime="20201110 08:34:26.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:26.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:26.996" endtime="20201110 08:34:26.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.999" endtime="20201110 08:34:27.002"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.971" endtime="20201110 08:34:27.002"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.969" endtime="20201110 08:34:27.003"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.010" endtime="20201110 08:34:27.296"></status>
</kw>
<msg timestamp="20201110 08:34:27.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020198792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020250569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:27.008" endtime="20201110 08:34:27.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:27.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020198792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020250569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:27.300" endtime="20201110 08:34:27.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.309" endtime="20201110 08:34:27.311"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.005" endtime="20201110 08:34:27.311"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.003" endtime="20201110 08:34:27.312"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:27.316" level="INFO">${RESULT} = [{'time': 0.020250569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.177699999999938e-05, 'source_diff': 5.177699999999938e-05}, {'time': 0.020316639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:27.313" endtime="20201110 08:34:27.316"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:27.330" level="INFO">${ACCURACY} = {'source_diff': [5.177699999999938e-05, 5.240299999999948e-05, 5.230500000000249e-05, 5.229099999999945e-05, 5.230499999999902e-05, 5.206899999999834e-05, 5.197200000000082e-05, 5.254199999999917e-05,...</msg>
<status status="PASS" starttime="20201110 08:34:27.317" endtime="20201110 08:34:27.330"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:27.335" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201110 08:34:27.334" endtime="20201110 08:34:27.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:27.338" level="INFO">VALUE: [5.177699999999938e-05, 5.240299999999948e-05, 5.230500000000249e-05, 5.229099999999945e-05, 5.230499999999902e-05, 5.206899999999834e-05, 5.197200000000082e-05, 5.254199999999917e-05, 5.1708000000001e-05, 5.177799999999885e-05, 5.207000000000128e-05, 5.259700000000145e-05, 5.199999999999996e-05, 5.23340000000011e-05, 5.213900000000313e-05, 5.223699999999665e-05, 5.188899999999941e-05, 5.209799999999695e-05, 5.208400000000085e-05, 5.197200000000082e-05, 5.234699999999773e-05, 5.2651999999996785e-05, 5.223600000000064e-05, 5.2193999999998464e-05, 5.222200000000107e-05, 5.206899999999834e-05, 5.2207999999998034e-05, 5.250000000000046e-05, 5.202800000000257e-05, 5.225000000000021e-05, 5.209699999999748e-05, 5.25279999999996e-05, 5.25279999999996e-05, 5.195800000000125e-05, 5.179200000000189e-05, 5.236100000000077e-05, 5.259800000000092e-05, 5.1943999999998214e-05, 5.227799999999935e-05, 5.258299999999841e-05, 5.1708000000001e-05, 5.231899999999859e-05, 5.229099999999945e-05, 5.1915999999999074e-05, 5.25279999999996e-05, 5.231999999999806e-05, 5.2471999999997854e-05, 5.213899999999966e-05, 5.2457999999998284e-05, 5.238899999999991e-05]</msg>
<status status="PASS" starttime="20201110 08:34:27.336" endtime="20201110 08:34:27.339"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.331" endtime="20201110 08:34:27.340"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.342" endtime="20201110 08:34:27.343"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:27.346" endtime="20201110 08:34:27.365"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.344" endtime="20201110 08:34:27.366"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.340" endtime="20201110 08:34:27.366"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.968" endtime="20201110 08:34:27.366"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.967" endtime="20201110 08:34:27.366"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.375" endtime="20201110 08:34:27.394"></status>
</kw>
<msg timestamp="20201110 08:34:27.394" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:27.373" endtime="20201110 08:34:27.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:27.397" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:27.395" endtime="20201110 08:34:27.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.398" endtime="20201110 08:34:27.400"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.371" endtime="20201110 08:34:27.401"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.369" endtime="20201110 08:34:27.401"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.408" endtime="20201110 08:34:27.693"></status>
</kw>
<msg timestamp="20201110 08:34:27.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019656792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019709667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:27.406" endtime="20201110 08:34:27.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:27.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019656792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019709667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:27.697" endtime="20201110 08:34:27.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.706" endtime="20201110 08:34:27.708"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.404" endtime="20201110 08:34:27.708"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.402" endtime="20201110 08:34:27.709"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:27.713" level="INFO">${RESULT} = [{'time': 0.019709667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.287500000000084e-05, 'source_diff': 5.287500000000084e-05}, {'time': 0.019777681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:27.709" endtime="20201110 08:34:27.713"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:27.727" level="INFO">${ACCURACY} = {'source_diff': [5.287500000000084e-05, 5.313899999999719e-05, 5.312500000000109e-05, 5.327800000000035e-05, 5.3152000000000754e-05, 5.3166000000000324e-05, 5.347200000000232e-05, 5.2707999999998534e-...</msg>
<status status="PASS" starttime="20201110 08:34:27.714" endtime="20201110 08:34:27.727"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:27.732" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201110 08:34:27.730" endtime="20201110 08:34:27.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:27.734" level="INFO">VALUE: [5.287500000000084e-05, 5.313899999999719e-05, 5.312500000000109e-05, 5.327800000000035e-05, 5.3152000000000754e-05, 5.3166000000000324e-05, 5.347200000000232e-05, 5.2707999999998534e-05, 5.3499999999997994e-05, 5.325000000000121e-05, 5.338900000000091e-05, 5.2943999999999214e-05, 5.322200000000207e-05, 5.284699999999823e-05, 5.309700000000195e-05, 5.338900000000091e-05, 5.345899999999876e-05, 5.356999999999931e-05, 5.351400000000103e-05, 5.291699999999955e-05, 5.329199999999992e-05, 5.361099999999855e-05, 5.2971999999998354e-05, 5.301300000000106e-05, 5.288900000000041e-05, 5.279099999999995e-05, 5.2693999999998964e-05, 5.280499999999952e-05, 5.261100000000102e-05, 5.311100000000152e-05, 5.333299999999916e-05, 5.3471999999998854e-05, 5.309700000000195e-05, 5.331899999999959e-05, 5.327800000000035e-05, 5.327800000000035e-05, 5.337500000000134e-05, 5.3013999999997063e-05, 5.322200000000207e-05, 5.309700000000195e-05, 5.28340000000016e-05, 5.284800000000117e-05, 5.334800000000167e-05, 5.281900000000256e-05, 5.290299999999998e-05, 5.359700000000245e-05, 5.33340000000021e-05, 5.2693999999998964e-05, 5.333299999999916e-05, 5.306899999999934e-05]</msg>
<status status="PASS" starttime="20201110 08:34:27.733" endtime="20201110 08:34:27.735"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.728" endtime="20201110 08:34:27.736"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.739" endtime="20201110 08:34:27.740"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:27.742" endtime="20201110 08:34:27.764"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.741" endtime="20201110 08:34:27.765"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.736" endtime="20201110 08:34:27.766"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.367" endtime="20201110 08:34:27.767"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.367" endtime="20201110 08:34:27.767"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.786" endtime="20201110 08:34:27.811"></status>
</kw>
<msg timestamp="20201110 08:34:27.812" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:27.783" endtime="20201110 08:34:27.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:27.817" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:27.814" endtime="20201110 08:34:27.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.820" endtime="20201110 08:34:27.825"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.777" endtime="20201110 08:34:27.826"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.772" endtime="20201110 08:34:27.828"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.845" endtime="20201110 08:34:28.133"></status>
</kw>
<msg timestamp="20201110 08:34:28.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035762861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035817042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:27.841" endtime="20201110 08:34:28.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035762861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035817042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:28.138" endtime="20201110 08:34:28.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.146" endtime="20201110 08:34:28.148"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.835" endtime="20201110 08:34:28.149"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.829" endtime="20201110 08:34:28.149"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:28.153" level="INFO">${RESULT} = [{'time': 0.035817042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.418100000000037e-05, 'source_diff': 5.418100000000037e-05}, {'time': 0.035885069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:28.150" endtime="20201110 08:34:28.154"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:28.168" level="INFO">${ACCURACY} = {'source_diff': [5.418100000000037e-05, 5.377699999999791e-05, 5.4166000000001324e-05, 5.444500000000019e-05, 5.3763999999997814e-05, 5.434699999999626e-05, 5.4014000000005e-05, 5.4444000000000714e-05...</msg>
<status status="PASS" starttime="20201110 08:34:28.154" endtime="20201110 08:34:28.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.172" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201110 08:34:28.171" endtime="20201110 08:34:28.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.175" level="INFO">VALUE: [5.418100000000037e-05, 5.377699999999791e-05, 5.4166000000001324e-05, 5.444500000000019e-05, 5.3763999999997814e-05, 5.434699999999626e-05, 5.4014000000005e-05, 5.4444000000000714e-05, 5.456899999999737e-05, 5.409699999999601e-05, 5.3944000000000214e-05, 5.441700000000105e-05, 5.4458000000000284e-05, 5.443100000000062e-05, 5.381900000000356e-05, 5.431900000000406e-05, 5.391700000000055e-05, 5.456999999999684e-05, 5.418100000000037e-05, 5.3973000000005766e-05, 5.4444000000000714e-05, 5.4416000000001574e-05, 5.3749999999998244e-05, 5.387500000000184e-05, 5.3652000000001254e-05, 5.4457999999993345e-05, 5.3735999999998674e-05, 5.4027999999997633e-05, 5.41670000000008e-05, 5.3957999999999784e-05, 5.463900000000216e-05, 5.441700000000105e-05, 5.4249999999998744e-05, 5.4208000000000034e-05, 5.383300000000313e-05, 5.436100000000277e-05, 5.441700000000105e-05, 5.3749999999998244e-05, 5.4277999999997883e-05, 5.379200000000389e-05, 5.444500000000019e-05, 5.434800000000267e-05, 5.415300000000123e-05, 5.3735999999998674e-05, 5.411100000000252e-05, 5.4665999999994885e-05, 5.383299999999619e-05, 5.3902000000001504e-05, 5.45549999999978e-05, 5.363900000000116e-05]</msg>
<status status="PASS" starttime="20201110 08:34:28.174" endtime="20201110 08:34:28.176"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.168" endtime="20201110 08:34:28.176"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.179" endtime="20201110 08:34:28.180"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:28.182" endtime="20201110 08:34:28.202"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.181" endtime="20201110 08:34:28.202"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.177" endtime="20201110 08:34:28.203"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.769" endtime="20201110 08:34:28.203"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.768" endtime="20201110 08:34:28.203"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.212" endtime="20201110 08:34:28.231"></status>
</kw>
<msg timestamp="20201110 08:34:28.231" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:28.211" endtime="20201110 08:34:28.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:28.232" endtime="20201110 08:34:28.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.235" endtime="20201110 08:34:28.238"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.208" endtime="20201110 08:34:28.238"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.206" endtime="20201110 08:34:28.239"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.245" endtime="20201110 08:34:28.532"></status>
</kw>
<msg timestamp="20201110 08:34:28.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020287639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020342889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:28.244" endtime="20201110 08:34:28.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020287639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020342889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:28.536" endtime="20201110 08:34:28.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.545" endtime="20201110 08:34:28.547"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.241" endtime="20201110 08:34:28.547"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.239" endtime="20201110 08:34:28.548"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:28.552" level="INFO">${RESULT} = [{'time': 0.020342889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5249999999999744e-05, 'source_diff': 5.5249999999999744e-05}, {'time': 0.020412847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:28.549" endtime="20201110 08:34:28.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:28.567" level="INFO">${ACCURACY} = {'source_diff': [5.5249999999999744e-05, 5.4722000000000104e-05, 5.509700000000048e-05, 5.4693999999997495e-05, 5.555600000000174e-05, 5.563899999999969e-05, 5.4957999999997315e-05, 5.4735999999999674...</msg>
<status status="PASS" starttime="20201110 08:34:28.553" endtime="20201110 08:34:28.568"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.572" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201110 08:34:28.571" endtime="20201110 08:34:28.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.575" level="INFO">VALUE: [5.5249999999999744e-05, 5.4722000000000104e-05, 5.509700000000048e-05, 5.4693999999997495e-05, 5.555600000000174e-05, 5.563899999999969e-05, 5.4957999999997315e-05, 5.4735999999999674e-05, 5.5249999999999744e-05, 5.4985999999999924e-05, 5.543100000000162e-05, 5.56670000000023e-05, 5.472299999999958e-05, 5.490300000000198e-05, 5.51670000000018e-05, 5.532000000000106e-05, 5.48609999999998e-05, 5.494500000000069e-05, 5.509799999999995e-05, 5.508300000000091e-05, 5.506900000000134e-05, 5.527699999999941e-05, 5.483300000000066e-05, 5.538899999999944e-05, 5.5472000000000854e-05, 5.538899999999944e-05, 5.533300000000116e-05, 5.561100000000055e-05, 5.4943999999997745e-05, 5.4972000000000354e-05, 5.512499999999962e-05, 5.5541999999998704e-05, 5.544500000000119e-05, 5.490299999999851e-05, 5.50280000000021e-05, 5.513899999999919e-05, 5.508400000000038e-05, 5.5387999999999965e-05, 5.483300000000066e-05, 5.5263999999999314e-05, 5.530499999999855e-05, 5.50410000000022e-05, 5.50549999999983e-05, 5.5193999999997995e-05, 5.5222000000000604e-05, 5.561100000000055e-05, 5.5722000000001104e-05, 5.561100000000055e-05, 5.484700000000023e-05, 5.509700000000048e-05]</msg>
<status status="PASS" starttime="20201110 08:34:28.573" endtime="20201110 08:34:28.576"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.568" endtime="20201110 08:34:28.576"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.579" endtime="20201110 08:34:28.580"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:28.583" endtime="20201110 08:34:28.602"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.581" endtime="20201110 08:34:28.603"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.577" endtime="20201110 08:34:28.603"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.204" endtime="20201110 08:34:28.604"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.204" endtime="20201110 08:34:28.604"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.613" endtime="20201110 08:34:28.632"></status>
</kw>
<msg timestamp="20201110 08:34:28.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:28.611" endtime="20201110 08:34:28.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.635" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:28.634" endtime="20201110 08:34:28.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.636" endtime="20201110 08:34:28.639"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.609" endtime="20201110 08:34:28.639"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.606" endtime="20201110 08:34:28.640"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.647" endtime="20201110 08:34:28.932"></status>
</kw>
<msg timestamp="20201110 08:34:28.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020233708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020289597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:28.645" endtime="20201110 08:34:28.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020233708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020289597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:28.937" endtime="20201110 08:34:28.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.945" endtime="20201110 08:34:28.947"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.642" endtime="20201110 08:34:28.948"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.641" endtime="20201110 08:34:28.948"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:28.952" level="INFO">${RESULT} = [{'time': 0.020289597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.588899999999994e-05, 'source_diff': 5.588899999999994e-05}, {'time': 0.020360583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:28.949" endtime="20201110 08:34:28.953"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:28.966" level="INFO">${ACCURACY} = {'source_diff': [5.588899999999994e-05, 5.558300000000141e-05, 5.5958000000001784e-05, 5.590299999999951e-05, 5.5972000000001354e-05, 5.6000000000000494e-05, 5.5708000000001534e-05, 5.611100000000105e...</msg>
<status status="PASS" starttime="20201110 08:34:28.953" endtime="20201110 08:34:28.967"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.971" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201110 08:34:28.970" endtime="20201110 08:34:28.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.974" level="INFO">VALUE: [5.588899999999994e-05, 5.558300000000141e-05, 5.5958000000001784e-05, 5.590299999999951e-05, 5.5972000000001354e-05, 5.6000000000000494e-05, 5.5708000000001534e-05, 5.611100000000105e-05, 5.611100000000105e-05, 5.616699999999933e-05, 5.61809999999989e-05, 5.5777999999999384e-05, 5.590299999999951e-05, 5.56809999999984e-05, 5.6528000000000134e-05, 5.606899999999887e-05, 5.640300000000001e-05, 5.6458000000002284e-05, 5.659699999999851e-05, 5.612500000000062e-05, 5.60280000000031e-05, 5.6264000000000314e-05, 5.583300000000166e-05, 5.5694000000001964e-05, 5.6221999999998135e-05, 5.633299999999869e-05, 5.658299999999894e-05, 5.556900000000184e-05, 5.663900000000069e-05, 5.588899999999994e-05, 5.608399999999791e-05, 5.6443999999999245e-05, 5.658300000000241e-05, 5.63480000000012e-05, 5.640300000000001e-05, 5.611099999999758e-05, 5.6401999999997066e-05, 5.654100000000023e-05, 5.652700000000066e-05, 5.6514000000000564e-05, 5.6207999999998565e-05, 5.608300000000191e-05, 5.658299999999894e-05, 5.608300000000191e-05, 5.6457999999998815e-05, 5.636099999999783e-05, 5.6471999999998385e-05, 5.6277999999999884e-05, 5.6222000000001604e-05, 5.6458000000002284e-05]</msg>
<status status="PASS" starttime="20201110 08:34:28.972" endtime="20201110 08:34:28.975"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.967" endtime="20201110 08:34:28.975"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.978" endtime="20201110 08:34:28.979"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:28.981" endtime="20201110 08:34:29.001"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.979" endtime="20201110 08:34:29.001"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.976" endtime="20201110 08:34:29.002"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.605" endtime="20201110 08:34:29.002"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.604" endtime="20201110 08:34:29.002"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.011" endtime="20201110 08:34:29.030"></status>
</kw>
<msg timestamp="20201110 08:34:29.030" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:29.009" endtime="20201110 08:34:29.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:29.033" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:29.032" endtime="20201110 08:34:29.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.034" endtime="20201110 08:34:29.037"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.007" endtime="20201110 08:34:29.037"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.005" endtime="20201110 08:34:29.038"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.045" endtime="20201110 08:34:29.331"></status>
</kw>
<msg timestamp="20201110 08:34:29.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020436181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020493083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:29.043" endtime="20201110 08:34:29.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:29.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020436181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020493083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:29.335" endtime="20201110 08:34:29.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.344" endtime="20201110 08:34:29.346"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.040" endtime="20201110 08:34:29.346"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.039" endtime="20201110 08:34:29.347"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:29.351" level="INFO">${RESULT} = [{'time': 0.020493083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6901999999997566e-05, 'source_diff': 5.6901999999997566e-05}, {'time': 0.020566083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:29.348" endtime="20201110 08:34:29.351"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:29.365" level="INFO">${ACCURACY} = {'source_diff': [5.6901999999997566e-05, 5.7471999999999385e-05, 5.752700000000166e-05, 5.6693999999999495e-05, 5.6915999999997136e-05, 5.741700000000058e-05, 5.765299999999779e-05, 5.7221999999999135...</msg>
<status status="PASS" starttime="20201110 08:34:29.352" endtime="20201110 08:34:29.366"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:29.370" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201110 08:34:29.369" endtime="20201110 08:34:29.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:29.373" level="INFO">VALUE: [5.6901999999997566e-05, 5.7471999999999385e-05, 5.752700000000166e-05, 5.6693999999999495e-05, 5.6915999999997136e-05, 5.741700000000058e-05, 5.765299999999779e-05, 5.7221999999999135e-05, 5.681899999999962e-05, 5.741700000000058e-05, 5.7235999999998705e-05, 5.762499999999865e-05, 5.7471999999999385e-05, 5.73749999999984e-05, 5.6999999999998024e-05, 5.709799999999848e-05, 5.709700000000248e-05, 5.741699999999711e-05, 5.690300000000051e-05, 5.7471999999999385e-05, 5.7471999999999385e-05, 5.7401999999998066e-05, 5.709700000000248e-05, 5.6777999999996914e-05, 5.741700000000058e-05, 5.733299999999969e-05, 5.6791999999999954e-05, 5.6805999999999524e-05, 5.7306000000000024e-05, 5.709699999999901e-05, 5.7249999999998274e-05, 5.6708000000002534e-05, 5.7180000000000425e-05, 5.7278000000000884e-05, 5.683299999999919e-05, 5.715300000000076e-05, 5.7416000000001105e-05, 5.7569999999999844e-05, 5.7151999999997816e-05, 5.729100000000098e-05, 5.683300000000266e-05, 5.7166000000000855e-05, 5.688900000000094e-05, 5.7249999999998274e-05, 5.7542000000000704e-05, 5.740300000000101e-05, 5.713900000000119e-05, 5.7514000000001564e-05, 5.7207999999999565e-05, 5.679200000000342e-05]</msg>
<status status="PASS" starttime="20201110 08:34:29.371" endtime="20201110 08:34:29.374"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.366" endtime="20201110 08:34:29.374"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.376" endtime="20201110 08:34:29.378"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:29.380" endtime="20201110 08:34:29.399"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.378" endtime="20201110 08:34:29.400"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.375" endtime="20201110 08:34:29.400"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.003" endtime="20201110 08:34:29.401"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.002" endtime="20201110 08:34:29.401"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.410" endtime="20201110 08:34:29.429"></status>
</kw>
<msg timestamp="20201110 08:34:29.429" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:29.408" endtime="20201110 08:34:29.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:29.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:29.430" endtime="20201110 08:34:29.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.433" endtime="20201110 08:34:29.436"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.406" endtime="20201110 08:34:29.436"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.403" endtime="20201110 08:34:29.437"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.444" endtime="20201110 08:34:29.730"></status>
</kw>
<msg timestamp="20201110 08:34:29.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020124806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020183264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:29.442" endtime="20201110 08:34:29.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:29.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020124806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020183264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:29.735" endtime="20201110 08:34:29.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.743" endtime="20201110 08:34:29.745"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.439" endtime="20201110 08:34:29.746"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.438" endtime="20201110 08:34:29.746"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:29.750" level="INFO">${RESULT} = [{'time': 0.020183264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8458000000000815e-05, 'source_diff': 5.8458000000000815e-05}, {'time': 0.02025325, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201110 08:34:29.747" endtime="20201110 08:34:29.750"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:29.764" level="INFO">${ACCURACY} = {'source_diff': [5.8458000000000815e-05, 5.781900000000062e-05, 5.863899999999922e-05, 5.783300000000019e-05, 5.8041999999997734e-05, 5.8513999999999095e-05, 5.8097999999999483e-05, 5.770899999999954e...</msg>
<status status="PASS" starttime="20201110 08:34:29.751" endtime="20201110 08:34:29.765"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:29.769" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201110 08:34:29.768" endtime="20201110 08:34:29.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:29.772" level="INFO">VALUE: [5.8458000000000815e-05, 5.781900000000062e-05, 5.863899999999922e-05, 5.783300000000019e-05, 5.8041999999997734e-05, 5.8513999999999095e-05, 5.8097999999999483e-05, 5.770899999999954e-05, 5.8263999999998844e-05, 5.815300000000176e-05, 5.7930000000001175e-05, 5.8263999999998844e-05, 5.78749999999989e-05, 5.7958000000000315e-05, 5.784699999999976e-05, 5.834700000000026e-05, 5.7986000000002924e-05, 5.863899999999922e-05, 5.811099999999958e-05, 5.8013999999998594e-05, 5.8542000000001704e-05, 5.833300000000069e-05, 5.81810000000009e-05, 5.8264000000002314e-05, 5.7749999999998775e-05, 5.8264000000002314e-05, 5.795899999999979e-05, 5.791700000000108e-05, 5.7806000000000524e-05, 5.7902000000002035e-05, 5.8263999999998844e-05, 5.805499999999783e-05, 5.7708000000000065e-05, 5.788900000000194e-05, 5.8263999999998844e-05, 5.7971999999999885e-05, 5.859700000000051e-05, 5.8514000000002564e-05, 5.8556000000001274e-05, 5.844500000000072e-05, 5.783300000000019e-05, 5.790299999999804e-05, 5.859699999999704e-05, 5.813899999999872e-05, 5.8028000000001634e-05, 5.815299999999829e-05, 5.7971999999999885e-05, 5.78749999999989e-05, 5.7958000000000315e-05, 5.856900000000137e-05]</msg>
<status status="PASS" starttime="20201110 08:34:29.770" endtime="20201110 08:34:29.773"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.765" endtime="20201110 08:34:29.773"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.776" endtime="20201110 08:34:29.777"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:29.779" endtime="20201110 08:34:29.799"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.778" endtime="20201110 08:34:29.799"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.774" endtime="20201110 08:34:29.800"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.402" endtime="20201110 08:34:29.800"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.401" endtime="20201110 08:34:29.800"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.809" endtime="20201110 08:34:29.828"></status>
</kw>
<msg timestamp="20201110 08:34:29.828" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:29.807" endtime="20201110 08:34:29.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:29.831" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:29.829" endtime="20201110 08:34:29.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.832" endtime="20201110 08:34:29.835"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.805" endtime="20201110 08:34:29.835"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.803" endtime="20201110 08:34:29.836"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.842" endtime="20201110 08:34:30.128"></status>
</kw>
<msg timestamp="20201110 08:34:30.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020099903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02015925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:29.841" endtime="20201110 08:34:30.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:30.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020099903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02015925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:30.133" endtime="20201110 08:34:30.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.141" endtime="20201110 08:34:30.143"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.838" endtime="20201110 08:34:30.143"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.836" endtime="20201110 08:34:30.144"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:30.148" level="INFO">${RESULT} = [{'time': 0.02015925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.934700000000126e-05, 'source_diff': 5.934700000000126e-05}, {'time': 0.02023225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:34:30.144" endtime="20201110 08:34:30.148"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:30.162" level="INFO">${ACCURACY} = {'source_diff': [5.934700000000126e-05, 5.881900000000162e-05, 5.9471999999997915e-05, 5.8805999999998054e-05, 5.9070000000001344e-05, 5.9277999999999414e-05, 5.9569999999998374e-05, 5.965299999999979...</msg>
<status status="PASS" starttime="20201110 08:34:30.149" endtime="20201110 08:34:30.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:30.167" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201110 08:34:30.166" endtime="20201110 08:34:30.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:30.169" level="INFO">VALUE: [5.934700000000126e-05, 5.881900000000162e-05, 5.9471999999997915e-05, 5.8805999999998054e-05, 5.9070000000001344e-05, 5.9277999999999414e-05, 5.9569999999998374e-05, 5.965299999999979e-05, 5.872300000000011e-05, 5.870900000000054e-05, 5.8915999999999136e-05, 5.8887999999999996e-05, 5.96949999999985e-05, 5.9221999999997665e-05, 5.8722000000000635e-05, 5.913899999999972e-05, 5.8777999999998914e-05, 5.9207999999998095e-05, 5.9042000000002204e-05, 5.936099999999736e-05, 5.9013999999999595e-05, 5.9013999999999595e-05, 5.9471999999997915e-05, 5.884700000000076e-05, 5.9541999999999234e-05, 5.913899999999972e-05, 5.9056000000001774e-05, 5.940299999999954e-05, 5.9527999999999665e-05, 5.965299999999979e-05, 5.890299999999904e-05, 5.913899999999972e-05, 5.9443999999998776e-05, 5.880499999999858e-05, 5.909700000000101e-05, 5.9457999999998346e-05, 5.965299999999979e-05, 5.8805999999998054e-05, 5.856900000000137e-05, 5.954099999999976e-05, 5.883300000000119e-05, 5.9000000000000025e-05, 5.944500000000172e-05, 5.8834000000000664e-05, 5.9042000000002204e-05, 5.870900000000054e-05, 5.8986000000000455e-05, 5.8887999999999996e-05, 5.8915999999999136e-05, 5.933300000000169e-05]</msg>
<status status="PASS" starttime="20201110 08:34:30.168" endtime="20201110 08:34:30.170"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.163" endtime="20201110 08:34:30.170"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.173" endtime="20201110 08:34:30.174"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:30.176" endtime="20201110 08:34:30.196"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.175" endtime="20201110 08:34:30.196"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.171" endtime="20201110 08:34:30.197"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.801" endtime="20201110 08:34:30.197"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.800" endtime="20201110 08:34:30.197"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.206" endtime="20201110 08:34:30.224"></status>
</kw>
<msg timestamp="20201110 08:34:30.225" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:30.204" endtime="20201110 08:34:30.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:30.227" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:30.226" endtime="20201110 08:34:30.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.228" endtime="20201110 08:34:30.231"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.202" endtime="20201110 08:34:30.232"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.199" endtime="20201110 08:34:30.232"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.238" endtime="20201110 08:34:30.525"></status>
</kw>
<msg timestamp="20201110 08:34:30.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019487264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019547056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:30.237" endtime="20201110 08:34:30.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:30.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019487264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019547056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:30.529" endtime="20201110 08:34:30.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.537" endtime="20201110 08:34:30.539"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.234" endtime="20201110 08:34:30.540"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.233" endtime="20201110 08:34:30.540"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:30.544" level="INFO">${RESULT} = [{'time': 0.019547056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9791999999999484e-05, 'source_diff': 5.9791999999999484e-05}, {'time': 0.019622042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:30.541" endtime="20201110 08:34:30.545"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:30.558" level="INFO">${ACCURACY} = {'source_diff': [5.9791999999999484e-05, 6.0542000000000235e-05, 5.9833999999998194e-05, 6.040300000000054e-05, 5.970899999999807e-05, 6.054100000000076e-05, 5.991699999999961e-05, 6.013899999999725e-...</msg>
<status status="PASS" starttime="20201110 08:34:30.545" endtime="20201110 08:34:30.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:30.563" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201110 08:34:30.562" endtime="20201110 08:34:30.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:30.565" level="INFO">VALUE: [5.9791999999999484e-05, 6.0542000000000235e-05, 5.9833999999998194e-05, 6.040300000000054e-05, 5.970899999999807e-05, 6.054100000000076e-05, 5.991699999999961e-05, 6.013899999999725e-05, 6.013900000000072e-05, 6.034699999999879e-05, 6.040300000000054e-05, 5.9764000000000345e-05, 6.058299999999947e-05, 6.0306000000003024e-05, 5.9764000000000345e-05, 6.016699999999986e-05, 5.9736000000001205e-05, 5.9819999999998624e-05, 5.9972000000001885e-05, 5.9834000000001664e-05, 6.0527999999997195e-05, 6.011100000000158e-05, 6.0348000000001734e-05, 6.020900000000204e-05, 5.977700000000044e-05, 6.0528000000000665e-05, 5.991699999999961e-05, 6.013900000000072e-05, 5.9707999999998596e-05, 6.038900000000097e-05, 6.063899999999775e-05, 6.066699999999689e-05, 6.0514000000001095e-05, 6.0221999999998665e-05, 6.065299999999732e-05, 5.9958000000002315e-05, 5.9847999999997764e-05, 5.9763999999996875e-05, 5.9861999999997334e-05, 6.0598000000001984e-05, 5.9750000000000775e-05, 6.0584000000002414e-05, 6.008299999999897e-05, 5.976300000000087e-05, 5.9736000000001205e-05, 6.004100000000026e-05, 5.984700000000176e-05, 5.9985999999997985e-05, 6.0278000000000415e-05, 6.0320000000002594e-05]</msg>
<status status="PASS" starttime="20201110 08:34:30.564" endtime="20201110 08:34:30.572"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.559" endtime="20201110 08:34:30.573"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.575" endtime="20201110 08:34:30.577"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:30.579" endtime="20201110 08:34:30.598"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.577" endtime="20201110 08:34:30.599"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.573" endtime="20201110 08:34:30.599"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.198" endtime="20201110 08:34:30.599"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.197" endtime="20201110 08:34:30.600"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.608" endtime="20201110 08:34:30.627"></status>
</kw>
<msg timestamp="20201110 08:34:30.628" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:30.607" endtime="20201110 08:34:30.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:30.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:30.629" endtime="20201110 08:34:30.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.631" endtime="20201110 08:34:30.634"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.604" endtime="20201110 08:34:30.635"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.602" endtime="20201110 08:34:30.635"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.641" endtime="20201110 08:34:30.944"></status>
</kw>
<msg timestamp="20201110 08:34:30.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019543875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019604625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:30.640" endtime="20201110 08:34:30.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:30.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019543875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019604625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:30.948" endtime="20201110 08:34:30.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.956" endtime="20201110 08:34:30.958"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.637" endtime="20201110 08:34:30.959"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.636" endtime="20201110 08:34:30.959"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:30.963" level="INFO">${RESULT} = [{'time': 0.019604625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0750000000001775e-05, 'source_diff': 6.0750000000001775e-05}, {'time': 0.019679681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:30.960" endtime="20201110 08:34:30.963"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:30.977" level="INFO">${ACCURACY} = {'source_diff': [6.0750000000001775e-05, 6.109800000000248e-05, 6.149999999999906e-05, 6.138900000000197e-05, 6.1028000000001165e-05, 6.0806000000000054e-05, 6.122199999999967e-05, 6.140200000000207e-...</msg>
<status status="PASS" starttime="20201110 08:34:30.964" endtime="20201110 08:34:30.977"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:30.981" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201110 08:34:30.980" endtime="20201110 08:34:30.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:30.984" level="INFO">VALUE: [6.0750000000001775e-05, 6.109800000000248e-05, 6.149999999999906e-05, 6.138900000000197e-05, 6.1028000000001165e-05, 6.0806000000000054e-05, 6.122199999999967e-05, 6.140200000000207e-05, 6.12629999999989e-05, 6.130600000000055e-05, 6.083299999999972e-05, 6.154099999999829e-05, 6.113899999999825e-05, 6.084700000000276e-05, 6.127799999999795e-05, 6.133300000000022e-05, 6.154200000000123e-05, 6.083299999999972e-05, 6.154199999999777e-05, 6.106999999999987e-05, 6.091700000000061e-05, 6.104200000000073e-05, 6.154200000000123e-05, 6.0778000000000915e-05, 6.165199999999885e-05, 6.116700000000086e-05, 6.13339999999997e-05, 6.084700000000276e-05, 6.126300000000237e-05, 6.158300000000047e-05, 6.154200000000123e-05, 6.116599999999792e-05, 6.140300000000154e-05, 6.0944000000000276e-05, 6.127800000000141e-05, 6.140300000000154e-05, 6.145800000000035e-05, 6.115300000000129e-05, 6.1027999999997695e-05, 6.122200000000314e-05, 6.140300000000154e-05, 6.095899999999932e-05, 6.129200000000098e-05, 6.109699999999954e-05, 6.122199999999967e-05, 6.104200000000073e-05, 6.122199999999967e-05, 6.145800000000035e-05, 6.158300000000047e-05, 6.0707999999999596e-05]</msg>
<status status="PASS" starttime="20201110 08:34:30.983" endtime="20201110 08:34:30.985"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.978" endtime="20201110 08:34:30.985"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.987" endtime="20201110 08:34:30.989"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:30.991" endtime="20201110 08:34:31.010"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.989" endtime="20201110 08:34:31.011"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.986" endtime="20201110 08:34:31.011"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.600" endtime="20201110 08:34:31.012"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.600" endtime="20201110 08:34:31.012"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.020" endtime="20201110 08:34:31.040"></status>
</kw>
<msg timestamp="20201110 08:34:31.040" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:31.019" endtime="20201110 08:34:31.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:31.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:31.041" endtime="20201110 08:34:31.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.044" endtime="20201110 08:34:31.046"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.016" endtime="20201110 08:34:31.047"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.014" endtime="20201110 08:34:31.047"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.054" endtime="20201110 08:34:31.339"></status>
</kw>
<msg timestamp="20201110 08:34:31.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019742514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019805111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:31.052" endtime="20201110 08:34:31.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:31.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019742514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019805111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:31.343" endtime="20201110 08:34:31.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.352" endtime="20201110 08:34:31.353"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.050" endtime="20201110 08:34:31.354"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.048" endtime="20201110 08:34:31.354"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:31.358" level="INFO">${RESULT} = [{'time': 0.019805111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.259700000000104e-05, 'source_diff': 6.259700000000104e-05}, {'time': 0.019883111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:31.355" endtime="20201110 08:34:31.358"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:31.372" level="INFO">${ACCURACY} = {'source_diff': [6.259700000000104e-05, 6.236099999999689e-05, 6.215299999999882e-05, 6.241699999999864e-05, 6.20699999999974e-05, 6.261100000000061e-05, 6.250000000000006e-05, 6.241699999999864e-05, ...</msg>
<status status="PASS" starttime="20201110 08:34:31.359" endtime="20201110 08:34:31.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:31.376" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201110 08:34:31.375" endtime="20201110 08:34:31.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:31.379" level="INFO">VALUE: [6.259700000000104e-05, 6.236099999999689e-05, 6.215299999999882e-05, 6.241699999999864e-05, 6.20699999999974e-05, 6.261100000000061e-05, 6.250000000000006e-05, 6.241699999999864e-05, 6.240299999999907e-05, 6.190300000000204e-05, 6.241700000000211e-05, 6.177800000000191e-05, 6.244400000000178e-05, 6.230499999999861e-05, 6.195799999999738e-05, 6.17080000000006e-05, 6.197200000000042e-05, 6.190299999999857e-05, 6.22080000000011e-05, 6.197200000000042e-05, 6.245799999999788e-05, 6.17499999999993e-05, 6.183300000000072e-05, 6.187499999999943e-05, 6.215300000000229e-05, 6.258300000000147e-05, 6.16950000000005e-05, 6.207000000000087e-05, 6.220900000000057e-05, 6.22219999999972e-05, 6.247200000000092e-05, 6.190300000000204e-05, 6.251399999999963e-05, 6.245800000000135e-05, 6.197200000000042e-05, 6.241699999999864e-05, 6.176400000000234e-05, 6.234699999999732e-05, 6.229199999999852e-05, 6.168099999999746e-05, 6.257000000000137e-05, 6.190299999999857e-05, 6.223600000000024e-05, 6.234800000000026e-05, 6.220900000000057e-05, 6.169499999999703e-05, 6.20560000000013e-05, 6.213899999999925e-05, 6.251300000000015e-05, 6.172200000000017e-05]</msg>
<status status="PASS" starttime="20201110 08:34:31.377" endtime="20201110 08:34:31.380"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.373" endtime="20201110 08:34:31.380"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.382" endtime="20201110 08:34:31.384"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:31.386" endtime="20201110 08:34:31.405"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.384" endtime="20201110 08:34:31.406"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.381" endtime="20201110 08:34:31.406"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.013" endtime="20201110 08:34:31.406"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.012" endtime="20201110 08:34:31.407"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.415" endtime="20201110 08:34:31.434"></status>
</kw>
<msg timestamp="20201110 08:34:31.434" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:31.414" endtime="20201110 08:34:31.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:31.437" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:31.435" endtime="20201110 08:34:31.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.438" endtime="20201110 08:34:31.440"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.411" endtime="20201110 08:34:31.441"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.409" endtime="20201110 08:34:31.441"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.448" endtime="20201110 08:34:31.734"></status>
</kw>
<msg timestamp="20201110 08:34:31.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019587875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019651167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:31.446" endtime="20201110 08:34:31.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:31.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019587875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019651167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:31.738" endtime="20201110 08:34:31.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.746" endtime="20201110 08:34:31.748"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.444" endtime="20201110 08:34:31.748"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.442" endtime="20201110 08:34:31.749"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:31.753" level="INFO">${RESULT} = [{'time': 0.019651167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.329199999999952e-05, 'source_diff': 6.329199999999952e-05}, {'time': 0.019729208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:31.749" endtime="20201110 08:34:31.753"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:31.767" level="INFO">${ACCURACY} = {'source_diff': [6.329199999999952e-05, 6.326400000000038e-05, 6.293100000000218e-05, 6.309700000000154e-05, 6.347200000000192e-05, 6.295799999999838e-05, 6.365200000000085e-05, 6.329199999999952e-05,...</msg>
<status status="PASS" starttime="20201110 08:34:31.754" endtime="20201110 08:34:31.767"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:31.772" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201110 08:34:31.771" endtime="20201110 08:34:31.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:31.774" level="INFO">VALUE: [6.329199999999952e-05, 6.326400000000038e-05, 6.293100000000218e-05, 6.309700000000154e-05, 6.347200000000192e-05, 6.295799999999838e-05, 6.365200000000085e-05, 6.329199999999952e-05, 6.290299999999957e-05, 6.26950000000015e-05, 6.273599999999727e-05, 6.277699999999997e-05, 6.32080000000021e-05, 6.334700000000179e-05, 6.327799999999995e-05, 6.327799999999995e-05, 6.3195000000002e-05, 6.307000000000187e-05, 6.33340000000017e-05, 6.297199999999795e-05, 6.359700000000204e-05, 6.327700000000047e-05, 6.276399999999988e-05, 6.27219999999977e-05, 6.301400000000013e-05, 6.336099999999789e-05, 6.283299999999825e-05, 6.309700000000154e-05, 6.30279999999997e-05, 6.34439999999993e-05, 6.304200000000273e-05, 6.363900000000075e-05, 6.35280000000002e-05, 6.327799999999995e-05, 6.327799999999995e-05, 6.291700000000261e-05, 6.308300000000197e-05, 6.30279999999997e-05, 6.347199999999845e-05, 6.298600000000099e-05, 6.337499999999746e-05, 6.333299999999875e-05, 6.359699999999857e-05, 6.2889e-05, 6.329200000000298e-05, 6.35280000000002e-05, 6.277799999999945e-05, 6.323599999999777e-05, 6.340300000000007e-05, 6.315299999999982e-05]</msg>
<status status="PASS" starttime="20201110 08:34:31.773" endtime="20201110 08:34:31.775"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.768" endtime="20201110 08:34:31.775"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.778" endtime="20201110 08:34:31.779"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:31.781" endtime="20201110 08:34:31.801"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.780" endtime="20201110 08:34:31.801"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.776" endtime="20201110 08:34:31.802"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.407" endtime="20201110 08:34:31.802"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.407" endtime="20201110 08:34:31.802"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.811" endtime="20201110 08:34:31.830"></status>
</kw>
<msg timestamp="20201110 08:34:31.831" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:31.809" endtime="20201110 08:34:31.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:31.833" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:31.832" endtime="20201110 08:34:31.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.834" endtime="20201110 08:34:31.837"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.807" endtime="20201110 08:34:31.837"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.805" endtime="20201110 08:34:31.838"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.844" endtime="20201110 08:34:32.130"></status>
</kw>
<msg timestamp="20201110 08:34:32.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019539986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019603722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:31.843" endtime="20201110 08:34:32.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:32.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019539986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019603722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:32.134" endtime="20201110 08:34:32.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.143" endtime="20201110 08:34:32.144"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.840" endtime="20201110 08:34:32.145"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.838" endtime="20201110 08:34:32.145"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:32.149" level="INFO">${RESULT} = [{'time': 0.019603722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.373600000000174e-05, 'source_diff': 6.373600000000174e-05}, {'time': 0.019680708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:32.146" endtime="20201110 08:34:32.150"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:32.163" level="INFO">${ACCURACY} = {'source_diff': [6.373600000000174e-05, 6.408300000000297e-05, 6.416700000000039e-05, 6.377800000000045e-05, 6.397199999999895e-05, 6.429199999999705e-05, 6.429200000000052e-05, 6.408300000000297e-05,...</msg>
<status status="PASS" starttime="20201110 08:34:32.150" endtime="20201110 08:34:32.163"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:32.167" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201110 08:34:32.166" endtime="20201110 08:34:32.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:32.170" level="INFO">VALUE: [6.373600000000174e-05, 6.408300000000297e-05, 6.416700000000039e-05, 6.377800000000045e-05, 6.397199999999895e-05, 6.429199999999705e-05, 6.429200000000052e-05, 6.408300000000297e-05, 6.42639999999979e-05, 6.394499999999928e-05, 6.372200000000217e-05, 6.415300000000082e-05, 6.47219999999997e-05, 6.450000000000206e-05, 6.437499999999846e-05, 6.381899999999968e-05, 6.42630000000019e-05, 6.411099999999864e-05, 6.419400000000006e-05, 6.415299999999735e-05, 6.42639999999979e-05, 6.431900000000018e-05, 6.404200000000027e-05, 6.40280000000007e-05, 6.384699999999882e-05, 6.409700000000254e-05, 6.45699999999999e-05, 6.422299999999867e-05, 6.399999999999809e-05, 6.395799999999938e-05, 6.40699999999994e-05, 6.413800000000178e-05, 6.465200000000185e-05, 6.412500000000168e-05, 6.431900000000018e-05, 6.42219999999992e-05, 6.391700000000014e-05, 6.434699999999932e-05, 6.40280000000007e-05, 6.416700000000039e-05, 6.423599999999877e-05, 6.406899999999993e-05, 6.424999999999834e-05, 6.466700000000089e-05, 6.424999999999834e-05, 6.369499999999903e-05, 6.426400000000138e-05, 6.422299999999867e-05, 6.369499999999903e-05, 6.399999999999809e-05]</msg>
<status status="PASS" starttime="20201110 08:34:32.168" endtime="20201110 08:34:32.171"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.164" endtime="20201110 08:34:32.171"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.173" endtime="20201110 08:34:32.175"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:32.177" endtime="20201110 08:34:32.196"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.175" endtime="20201110 08:34:32.197"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.172" endtime="20201110 08:34:32.197"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.803" endtime="20201110 08:34:32.197"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.803" endtime="20201110 08:34:32.198"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.206" endtime="20201110 08:34:32.226"></status>
</kw>
<msg timestamp="20201110 08:34:32.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:32.205" endtime="20201110 08:34:32.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:32.229" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:32.227" endtime="20201110 08:34:32.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.230" endtime="20201110 08:34:32.232"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.202" endtime="20201110 08:34:32.233"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.200" endtime="20201110 08:34:32.233"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.240" endtime="20201110 08:34:32.525"></status>
</kw>
<msg timestamp="20201110 08:34:32.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019588028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019653458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:32.238" endtime="20201110 08:34:32.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:32.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019588028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019653458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:32.529" endtime="20201110 08:34:32.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.537" endtime="20201110 08:34:32.539"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.236" endtime="20201110 08:34:32.540"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.234" endtime="20201110 08:34:32.540"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:32.544" level="INFO">${RESULT} = [{'time': 0.019653458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.542999999999827e-05, 'source_diff': 6.542999999999827e-05}, {'time': 0.019731514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:32.541" endtime="20201110 08:34:32.545"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:32.558" level="INFO">${ACCURACY} = {'source_diff': [6.542999999999827e-05, 6.552799999999873e-05, 6.555500000000186e-05, 6.531899999999771e-05, 6.502799999999823e-05, 6.556900000000143e-05, 6.495899999999985e-05, 6.515300000000182e-05,...</msg>
<status status="PASS" starttime="20201110 08:34:32.545" endtime="20201110 08:34:32.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:32.562" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201110 08:34:32.561" endtime="20201110 08:34:32.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:32.565" level="INFO">VALUE: [6.542999999999827e-05, 6.552799999999873e-05, 6.555500000000186e-05, 6.531899999999771e-05, 6.502799999999823e-05, 6.556900000000143e-05, 6.495899999999985e-05, 6.515300000000182e-05, 6.534700000000032e-05, 6.490300000000157e-05, 6.519500000000053e-05, 6.524999999999934e-05, 6.55419999999983e-05, 6.473700000000221e-05, 6.505600000000084e-05, 6.548600000000002e-05, 6.523599999999977e-05, 6.499999999999909e-05, 6.545800000000088e-05, 6.568100000000146e-05, 6.488899999999853e-05, 6.565300000000232e-05, 6.49029999999981e-05, 6.479200000000102e-05, 6.523599999999977e-05, 6.479200000000102e-05, 6.551399999999916e-05, 6.490300000000157e-05, 6.515300000000182e-05, 6.527799999999848e-05, 6.55280000000022e-05, 6.495899999999985e-05, 6.549999999999959e-05, 6.545800000000088e-05, 6.526400000000238e-05, 6.47219999999997e-05, 6.505500000000136e-05, 6.529100000000204e-05, 6.537500000000293e-05, 6.47219999999997e-05, 6.540300000000207e-05, 6.541699999999817e-05, 6.551400000000263e-05, 6.555499999999839e-05, 6.526299999999943e-05, 6.469500000000003e-05, 6.469500000000003e-05, 6.559800000000005e-05, 6.477800000000145e-05, 6.497199999999995e-05]</msg>
<status status="PASS" starttime="20201110 08:34:32.563" endtime="20201110 08:34:32.566"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.559" endtime="20201110 08:34:32.566"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.568" endtime="20201110 08:34:32.570"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:32.572" endtime="20201110 08:34:32.591"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.570" endtime="20201110 08:34:32.592"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.567" endtime="20201110 08:34:32.592"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.198" endtime="20201110 08:34:32.592"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.198" endtime="20201110 08:34:32.593"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.601" endtime="20201110 08:34:32.621"></status>
</kw>
<msg timestamp="20201110 08:34:32.621" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:32.600" endtime="20201110 08:34:32.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:32.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:32.622" endtime="20201110 08:34:32.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.625" endtime="20201110 08:34:32.627"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.597" endtime="20201110 08:34:32.628"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.595" endtime="20201110 08:34:32.628"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.635" endtime="20201110 08:34:32.921"></status>
</kw>
<msg timestamp="20201110 08:34:32.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019577694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019644069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:32.633" endtime="20201110 08:34:32.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:32.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019577694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019644069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:32.925" endtime="20201110 08:34:32.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.933" endtime="20201110 08:34:32.935"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.631" endtime="20201110 08:34:32.936"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.629" endtime="20201110 08:34:32.936"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:32.940" level="INFO">${RESULT} = [{'time': 0.019644069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.637500000000046e-05, 'source_diff': 6.637500000000046e-05}, {'time': 0.019722014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:32.937" endtime="20201110 08:34:32.940"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:32.954" level="INFO">${ACCURACY} = {'source_diff': [6.637500000000046e-05, 6.588899999999953e-05, 6.659799999999758e-05, 6.625000000000034e-05, 6.569500000000103e-05, 6.595900000000085e-05, 6.670799999999866e-05, 6.57220000000007e-05, ...</msg>
<status status="PASS" starttime="20201110 08:34:32.941" endtime="20201110 08:34:32.954"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:32.958" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201110 08:34:32.957" endtime="20201110 08:34:32.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:32.960" level="INFO">VALUE: [6.637500000000046e-05, 6.588899999999953e-05, 6.659799999999758e-05, 6.625000000000034e-05, 6.569500000000103e-05, 6.595900000000085e-05, 6.670799999999866e-05, 6.57220000000007e-05, 6.637499999999699e-05, 6.645800000000188e-05, 6.622199999999773e-05, 6.605599999999837e-05, 6.662500000000071e-05, 6.581900000000168e-05, 6.634699999999785e-05, 6.655599999999887e-05, 6.577800000000245e-05, 6.638900000000003e-05, 6.651399999999669e-05, 6.602799999999923e-05, 6.577799999999898e-05, 6.666699999999942e-05, 6.645800000000188e-05, 6.598600000000052e-05, 6.647200000000145e-05, 6.648600000000102e-05, 6.652799999999973e-05, 6.573600000000027e-05, 6.601400000000313e-05, 6.638900000000003e-05, 6.634699999999785e-05, 6.602699999999975e-05, 6.663900000000028e-05, 6.601399999999966e-05, 6.623600000000077e-05, 6.62639999999999e-05, 6.60419999999988e-05, 6.573699999999974e-05, 6.592999999999877e-05, 6.615299999999935e-05, 6.638800000000056e-05, 6.569399999999809e-05, 6.602799999999923e-05, 6.62220000000012e-05, 6.576400000000288e-05, 6.65280000000032e-05, 6.620799999999816e-05, 6.62220000000012e-05, 6.62220000000012e-05, 6.655599999999887e-05]</msg>
<status status="PASS" starttime="20201110 08:34:32.959" endtime="20201110 08:34:32.961"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.954" endtime="20201110 08:34:32.962"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.964" endtime="20201110 08:34:32.965"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:32.967" endtime="20201110 08:34:32.987"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.966" endtime="20201110 08:34:32.987"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.962" endtime="20201110 08:34:32.988"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.594" endtime="20201110 08:34:32.988"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.593" endtime="20201110 08:34:32.988"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.997" endtime="20201110 08:34:33.016"></status>
</kw>
<msg timestamp="20201110 08:34:33.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:32.995" endtime="20201110 08:34:33.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:33.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:33.018" endtime="20201110 08:34:33.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:33.020" endtime="20201110 08:34:33.023"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.993" endtime="20201110 08:34:33.023"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.991" endtime="20201110 08:34:33.024"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:33.030" endtime="20201110 08:34:33.316"></status>
</kw>
<msg timestamp="20201110 08:34:33.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019541708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019609125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:33.028" endtime="20201110 08:34:33.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:33.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019541708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019609125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:33.320" endtime="20201110 08:34:33.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:33.329" endtime="20201110 08:34:33.331"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.026" endtime="20201110 08:34:33.331"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.024" endtime="20201110 08:34:33.332"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:33.336" level="INFO">${RESULT} = [{'time': 0.019609125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.741700000000017e-05, 'source_diff': 6.741700000000017e-05}, {'time': 0.019688167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:33.332" endtime="20201110 08:34:33.336"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:33.350" level="INFO">${ACCURACY} = {'source_diff': [6.741700000000017e-05, 6.677799999999998e-05, 6.737500000000146e-05, 6.695799999999891e-05, 6.672199999999823e-05, 6.741700000000017e-05, 6.750000000000159e-05, 6.67640000000004e-05, ...</msg>
<status status="PASS" starttime="20201110 08:34:33.337" endtime="20201110 08:34:33.351"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:33.355" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201110 08:34:33.354" endtime="20201110 08:34:33.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:33.357" level="INFO">VALUE: [6.741700000000017e-05, 6.677799999999998e-05, 6.737500000000146e-05, 6.695799999999891e-05, 6.672199999999823e-05, 6.741700000000017e-05, 6.750000000000159e-05, 6.67640000000004e-05, 6.74030000000006e-05, 6.747299999999845e-05, 6.715300000000035e-05, 6.736200000000137e-05, 6.702800000000023e-05, 6.67359999999978e-05, 6.684699999999835e-05, 6.672199999999823e-05, 6.763900000000128e-05, 6.679199999999955e-05, 6.744399999999984e-05, 6.716699999999992e-05, 6.695799999999891e-05, 6.715300000000035e-05, 6.759700000000257e-05, 6.733299999999928e-05, 6.733399999999876e-05, 6.7583999999999e-05, 6.68480000000013e-05, 6.74030000000006e-05, 6.693099999999924e-05, 6.68480000000013e-05, 6.698599999999805e-05, 6.67640000000004e-05, 6.679100000000007e-05, 6.656899999999896e-05, 6.734700000000232e-05, 6.733299999999928e-05, 6.730599999999962e-05, 6.702800000000023e-05, 6.67220000000017e-05, 6.74030000000006e-05, 6.740299999999713e-05, 6.733299999999928e-05, 6.748599999999855e-05, 6.755599999999987e-05, 6.748600000000202e-05, 6.701400000000066e-05, 6.72229999999982e-05, 6.722199999999873e-05, 6.716600000000045e-05, 6.699999999999762e-05]</msg>
<status status="PASS" starttime="20201110 08:34:33.356" endtime="20201110 08:34:33.358"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.351" endtime="20201110 08:34:33.359"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:33.361" endtime="20201110 08:34:33.362"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:33.364" endtime="20201110 08:34:33.384"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.363" endtime="20201110 08:34:33.384"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.359" endtime="20201110 08:34:33.385"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.989" endtime="20201110 08:34:33.385"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.989" endtime="20201110 08:34:33.385"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:33.394" endtime="20201110 08:34:33.413"></status>
</kw>
<msg timestamp="20201110 08:34:33.413" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:33.392" endtime="20201110 08:34:33.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:33.415" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:33.414" endtime="20201110 08:34:33.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:33.416" endtime="20201110 08:34:33.419"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.389" endtime="20201110 08:34:33.420"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.387" endtime="20201110 08:34:33.420"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:33.426" endtime="20201110 08:34:33.713"></status>
</kw>
<msg timestamp="20201110 08:34:33.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019539319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019607931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:33.425" endtime="20201110 08:34:33.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:33.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019539319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019607931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:33.717" endtime="20201110 08:34:33.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:33.725" endtime="20201110 08:34:33.727"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.422" endtime="20201110 08:34:33.727"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.421" endtime="20201110 08:34:33.728"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:33.732" level="INFO">${RESULT} = [{'time': 0.019607931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.861199999999915e-05, 'source_diff': 6.861199999999915e-05}, {'time': 0.019687944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:33.728" endtime="20201110 08:34:33.732"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:33.746" level="INFO">${ACCURACY} = {'source_diff': [6.861199999999915e-05, 6.797199999999948e-05, 6.845899999999988e-05, 6.854199999999783e-05, 6.787500000000196e-05, 6.84169999999977e-05, 6.769400000000009e-05, 6.833300000000028e-05, ...</msg>
<status status="PASS" starttime="20201110 08:34:33.733" endtime="20201110 08:34:33.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:33.750" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201110 08:34:33.749" endtime="20201110 08:34:33.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:33.753" level="INFO">VALUE: [6.861199999999915e-05, 6.797199999999948e-05, 6.845899999999988e-05, 6.854199999999783e-05, 6.787500000000196e-05, 6.84169999999977e-05, 6.769400000000009e-05, 6.833300000000028e-05, 6.797299999999895e-05, 6.845800000000041e-05, 6.857000000000044e-05, 6.845899999999988e-05, 6.845800000000041e-05, 6.80839999999995e-05, 6.820899999999963e-05, 6.844500000000031e-05, 6.797299999999895e-05, 6.793000000000077e-05, 6.797200000000295e-05, 6.811099999999917e-05, 6.787500000000196e-05, 6.79160000000012e-05, 6.819400000000059e-05, 6.770800000000313e-05, 6.806899999999699e-05, 6.85420000000013e-05, 6.857000000000044e-05, 6.80420000000008e-05, 6.865300000000185e-05, 6.786100000000239e-05, 6.838899999999856e-05, 6.801400000000166e-05, 6.851400000000216e-05, 6.798600000000252e-05, 6.840200000000213e-05, 6.806900000000046e-05, 6.779100000000107e-05, 6.818000000000102e-05, 6.80420000000008e-05, 6.808300000000003e-05, 6.858300000000053e-05, 6.787500000000196e-05, 6.851400000000216e-05, 6.784699999999935e-05, 6.806999999999994e-05, 6.781999999999969e-05, 6.795799999999991e-05, 6.829200000000105e-05, 6.812499999999874e-05, 6.840199999999866e-05]</msg>
<status status="PASS" starttime="20201110 08:34:33.751" endtime="20201110 08:34:33.753"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.746" endtime="20201110 08:34:33.754"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:33.756" endtime="20201110 08:34:33.757"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:33.760" endtime="20201110 08:34:33.779"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.758" endtime="20201110 08:34:33.779"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.755" endtime="20201110 08:34:33.780"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.386" endtime="20201110 08:34:33.780"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.385" endtime="20201110 08:34:33.780"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:33.789" endtime="20201110 08:34:33.808"></status>
</kw>
<msg timestamp="20201110 08:34:33.808" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:33.788" endtime="20201110 08:34:33.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:33.811" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:33.809" endtime="20201110 08:34:33.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:33.812" endtime="20201110 08:34:33.814"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.785" endtime="20201110 08:34:33.815"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.783" endtime="20201110 08:34:33.815"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:33.822" endtime="20201110 08:34:34.107"></status>
</kw>
<msg timestamp="20201110 08:34:34.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019696681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019765236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:33.820" endtime="20201110 08:34:34.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:34.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019696681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019765236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:34.112" endtime="20201110 08:34:34.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:34.120" endtime="20201110 08:34:34.121"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.818" endtime="20201110 08:34:34.122"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.816" endtime="20201110 08:34:34.122"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:34.126" level="INFO">${RESULT} = [{'time': 0.019765236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.855499999999792e-05, 'source_diff': 6.855499999999792e-05}, {'time': 0.019847236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:34.123" endtime="20201110 08:34:34.127"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:34.140" level="INFO">${ACCURACY} = {'source_diff': [6.855499999999792e-05, 6.962500000000024e-05, 6.965299999999938e-05, 6.902799999999876e-05, 6.955600000000187e-05, 6.938899999999956e-05, 6.909800000000008e-05, 6.937499999999999e-05,...</msg>
<status status="PASS" starttime="20201110 08:34:34.127" endtime="20201110 08:34:34.140"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:34.145" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201110 08:34:34.144" endtime="20201110 08:34:34.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:34.147" level="INFO">VALUE: [6.855499999999792e-05, 6.962500000000024e-05, 6.965299999999938e-05, 6.902799999999876e-05, 6.955600000000187e-05, 6.938899999999956e-05, 6.909800000000008e-05, 6.937499999999999e-05, 6.875000000000284e-05, 6.936100000000042e-05, 6.958300000000153e-05, 6.94160000000027e-05, 6.883300000000078e-05, 6.897200000000048e-05, 6.902799999999876e-05, 6.929199999999858e-05, 6.956900000000196e-05, 6.877799999999851e-05, 6.92360000000003e-05, 6.880600000000112e-05, 6.90420000000018e-05, 6.890299999999863e-05, 6.920900000000063e-05, 6.926399999999944e-05, 6.920900000000063e-05, 6.951399999999969e-05, 6.958299999999806e-05, 6.948599999999708e-05, 6.959699999999763e-05, 6.938899999999956e-05, 6.940299999999913e-05, 6.922200000000073e-05, 6.880499999999817e-05, 6.920800000000116e-05, 6.940299999999913e-05, 6.899999999999962e-05, 6.933300000000128e-05, 6.96109999999972e-05, 6.880600000000112e-05, 6.948600000000055e-05, 6.877800000000198e-05, 6.922299999999673e-05, 6.898600000000005e-05, 6.944499999999784e-05, 6.90970000000006e-05, 6.962500000000024e-05, 6.944399999999837e-05, 6.872200000000023e-05, 6.883300000000078e-05, 6.926399999999944e-05]</msg>
<status status="PASS" starttime="20201110 08:34:34.146" endtime="20201110 08:34:34.148"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.141" endtime="20201110 08:34:34.148"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:34.151" endtime="20201110 08:34:34.152"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:34.154" endtime="20201110 08:34:34.173"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.153" endtime="20201110 08:34:34.174"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.149" endtime="20201110 08:34:34.174"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.781" endtime="20201110 08:34:34.175"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.781" endtime="20201110 08:34:34.175"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:34.184" endtime="20201110 08:34:34.203"></status>
</kw>
<msg timestamp="20201110 08:34:34.204" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:34.182" endtime="20201110 08:34:34.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:34.206" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:34.205" endtime="20201110 08:34:34.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:34.207" endtime="20201110 08:34:34.210"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.179" endtime="20201110 08:34:34.210"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.177" endtime="20201110 08:34:34.211"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:34.217" endtime="20201110 08:34:34.504"></status>
</kw>
<msg timestamp="20201110 08:34:34.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019725611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019795417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:34.215" endtime="20201110 08:34:34.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:34.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019725611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019795417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:34.508" endtime="20201110 08:34:34.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:34.516" endtime="20201110 08:34:34.518"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.213" endtime="20201110 08:34:34.518"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.211" endtime="20201110 08:34:34.519"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:34.523" level="INFO">${RESULT} = [{'time': 0.019795417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.980599999999865e-05, 'source_diff': 6.980599999999865e-05}, {'time': 0.019879431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:34.520" endtime="20201110 08:34:34.523"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:34.537" level="INFO">${ACCURACY} = {'source_diff': [6.980599999999865e-05, 7.015299999999988e-05, 6.995900000000138e-05, 6.97909999999996e-05, 7.047199999999851e-05, 7.001400000000019e-05, 6.99299999999993e-05, 6.970800000000166e-05, 7...</msg>
<status status="PASS" starttime="20201110 08:34:34.524" endtime="20201110 08:34:34.537"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:34.541" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201110 08:34:34.540" endtime="20201110 08:34:34.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:34.544" level="INFO">VALUE: [6.980599999999865e-05, 7.015299999999988e-05, 6.995900000000138e-05, 6.97909999999996e-05, 7.047199999999851e-05, 7.001400000000019e-05, 6.99299999999993e-05, 6.970800000000166e-05, 7.006900000000246e-05, 6.981899999999874e-05, 7.04169999999997e-05, 7.062499999999777e-05, 7.008300000000203e-05, 6.970800000000166e-05, 7.04169999999997e-05, 7.058399999999854e-05, 6.980600000000212e-05, 7.049999999999765e-05, 7.002700000000028e-05, 7.002700000000028e-05, 7.008300000000203e-05, 7.062500000000124e-05, 6.983300000000178e-05, 7.017999999999955e-05, 7.008299999999856e-05, 6.976399999999994e-05, 7.047300000000145e-05, 7.004199999999933e-05, 6.984700000000135e-05, 7.05970000000021e-05, 7.027800000000001e-05, 7.054199999999983e-05, 6.983399999999779e-05, 7.055499999999992e-05, 7.062500000000124e-05, 7.00970000000016e-05, 7.031899999999924e-05, 7.020800000000216e-05, 7.026300000000096e-05, 7.036100000000142e-05, 7.022199999999826e-05, 7.054199999999983e-05, 7.025000000000087e-05, 7.001400000000019e-05, 6.972200000000123e-05, 7.030599999999915e-05, 7.001400000000019e-05, 7.019500000000206e-05, 7.045800000000241e-05, 6.988900000000006e-05]</msg>
<status status="PASS" starttime="20201110 08:34:34.542" endtime="20201110 08:34:34.545"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.538" endtime="20201110 08:34:34.545"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:34.547" endtime="20201110 08:34:34.549"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:34.551" endtime="20201110 08:34:34.570"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.549" endtime="20201110 08:34:34.571"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.546" endtime="20201110 08:34:34.571"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.176" endtime="20201110 08:34:34.571"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.175" endtime="20201110 08:34:34.572"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:34.580" endtime="20201110 08:34:34.600"></status>
</kw>
<msg timestamp="20201110 08:34:34.600" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:34.579" endtime="20201110 08:34:34.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:34.603" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:34.601" endtime="20201110 08:34:34.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:34.604" endtime="20201110 08:34:34.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.576" endtime="20201110 08:34:34.607"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.574" endtime="20201110 08:34:34.607"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:34.614" endtime="20201110 08:34:34.900"></status>
</kw>
<msg timestamp="20201110 08:34:34.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01971425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019785, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201110 08:34:34.612" endtime="20201110 08:34:34.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:34.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01971425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019785, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201110 08:34:34.904" endtime="20201110 08:34:34.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:34.913" endtime="20201110 08:34:34.914"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.610" endtime="20201110 08:34:34.915"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.608" endtime="20201110 08:34:34.915"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:34.919" level="INFO">${RESULT} = [{'time': 0.019785, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.075000000000137e-05, 'source_diff': 7.075000000000137e-05}, {'time': 0.019869014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201110 08:34:34.916" endtime="20201110 08:34:34.919"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:34.934" level="INFO">${ACCURACY} = {'source_diff': [7.075000000000137e-05, 7.158300000000006e-05, 7.151400000000169e-05, 7.079200000000008e-05, 7.144500000000331e-05, 7.166700000000095e-05, 7.147300000000245e-05, 7.101300000000171e-05,...</msg>
<status status="PASS" starttime="20201110 08:34:34.920" endtime="20201110 08:34:34.934"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:34.938" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201110 08:34:34.937" endtime="20201110 08:34:34.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:34.941" level="INFO">VALUE: [7.075000000000137e-05, 7.158300000000006e-05, 7.151400000000169e-05, 7.079200000000008e-05, 7.144500000000331e-05, 7.166700000000095e-05, 7.147300000000245e-05, 7.101300000000171e-05, 7.073599999999833e-05, 7.073599999999833e-05, 7.134699999999938e-05, 7.147199999999951e-05, 7.090300000000063e-05, 7.120799999999969e-05, 7.081899999999974e-05, 7.093099999999977e-05, 7.108299999999956e-05, 7.165300000000138e-05, 7.07230000000017e-05, 7.151399999999822e-05, 7.065299999999691e-05, 7.130500000000067e-05, 7.090199999999769e-05, 7.122199999999926e-05, 7.116599999999751e-05, 7.095799999999944e-05, 7.133299999999981e-05, 7.120799999999969e-05, 7.072199999999876e-05, 7.055499999999992e-05, 7.097299999999848e-05, 7.07499999999979e-05, 7.115300000000088e-05, 7.102799999999729e-05, 7.134800000000233e-05, 7.101400000000119e-05, 7.158399999999954e-05, 7.116599999999751e-05, 7.165300000000138e-05, 7.108399999999904e-05, 7.1069e-05, 7.12499999999984e-05, 7.072199999999876e-05, 7.084699999999888e-05, 7.097199999999901e-05, 7.151399999999822e-05, 7.102800000000076e-05, 7.170800000000019e-05, 7.158399999999954e-05, 7.140300000000113e-05]</msg>
<status status="PASS" starttime="20201110 08:34:34.939" endtime="20201110 08:34:34.942"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.935" endtime="20201110 08:34:34.942"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:34.944" endtime="20201110 08:34:34.946"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:34.948" endtime="20201110 08:34:34.967"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.946" endtime="20201110 08:34:34.968"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.943" endtime="20201110 08:34:34.968"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.572" endtime="20201110 08:34:34.968"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.572" endtime="20201110 08:34:34.968"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:34.977" endtime="20201110 08:34:34.996"></status>
</kw>
<msg timestamp="20201110 08:34:34.997" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:34.976" endtime="20201110 08:34:34.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:34.999" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:34.998" endtime="20201110 08:34:34.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:35.000" endtime="20201110 08:34:35.003"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.973" endtime="20201110 08:34:35.003"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.971" endtime="20201110 08:34:35.004"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:35.010" endtime="20201110 08:34:35.296"></status>
</kw>
<msg timestamp="20201110 08:34:35.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019517361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019589833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:35.009" endtime="20201110 08:34:35.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:35.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019517361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019589833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:35.300" endtime="20201110 08:34:35.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:35.308" endtime="20201110 08:34:35.310"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.006" endtime="20201110 08:34:35.310"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.004" endtime="20201110 08:34:35.311"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:35.315" level="INFO">${RESULT} = [{'time': 0.019589833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.247200000000051e-05, 'source_diff': 7.247200000000051e-05}, {'time': 0.019677917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:35.312" endtime="20201110 08:34:35.315"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:35.334" level="INFO">${ACCURACY} = {'source_diff': [7.247200000000051e-05, 7.26110000000002e-05, 7.244400000000137e-05, 7.181900000000074e-05, 7.247200000000051e-05, 7.197200000000001e-05, 7.223599999999983e-05, 7.262499999999977e-05, ...</msg>
<status status="PASS" starttime="20201110 08:34:35.317" endtime="20201110 08:34:35.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:35.341" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201110 08:34:35.340" endtime="20201110 08:34:35.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:35.345" level="INFO">VALUE: [7.247200000000051e-05, 7.26110000000002e-05, 7.244400000000137e-05, 7.181900000000074e-05, 7.247200000000051e-05, 7.197200000000001e-05, 7.223599999999983e-05, 7.262499999999977e-05, 7.195800000000044e-05, 7.226399999999897e-05, 7.229199999999811e-05, 7.230500000000167e-05, 7.229099999999863e-05, 7.21109999999997e-05, 7.195800000000044e-05, 7.265299999999891e-05, 7.233300000000081e-05, 7.22499999999994e-05, 7.25690000000015e-05, 7.212500000000274e-05, 7.266699999999848e-05, 7.172199999999976e-05, 7.230599999999768e-05, 7.258400000000054e-05, 7.195800000000044e-05, 7.182000000000022e-05, 7.17230000000027e-05, 7.207000000000047e-05, 7.227700000000253e-05, 7.231900000000124e-05, 7.252699999999931e-05, 7.191600000000173e-05, 7.197200000000001e-05, 7.176400000000194e-05, 7.266700000000195e-05, 7.184699999999988e-05, 7.26110000000002e-05, 7.194500000000034e-05, 7.208400000000004e-05, 7.201399999999872e-05, 7.263899999999934e-05, 7.236199999999943e-05, 7.229200000000158e-05, 7.190200000000216e-05, 7.249999999999965e-05, 7.25829999999976e-05, 7.194400000000087e-05, 7.240299999999866e-05, 7.237500000000299e-05, 7.231900000000124e-05]</msg>
<status status="PASS" starttime="20201110 08:34:35.342" endtime="20201110 08:34:35.346"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.336" endtime="20201110 08:34:35.348"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:35.350" endtime="20201110 08:34:35.352"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:35.354" endtime="20201110 08:34:35.373"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.352" endtime="20201110 08:34:35.374"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.348" endtime="20201110 08:34:35.374"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.969" endtime="20201110 08:34:35.374"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.969" endtime="20201110 08:34:35.375"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:35.383" endtime="20201110 08:34:35.403"></status>
</kw>
<msg timestamp="20201110 08:34:35.403" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:35.382" endtime="20201110 08:34:35.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:35.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:35.404" endtime="20201110 08:34:35.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:35.407" endtime="20201110 08:34:35.409"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.379" endtime="20201110 08:34:35.410"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.377" endtime="20201110 08:34:35.410"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:35.417" endtime="20201110 08:34:35.702"></status>
</kw>
<msg timestamp="20201110 08:34:35.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019772694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019846306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:35.415" endtime="20201110 08:34:35.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:35.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019772694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019846306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:35.706" endtime="20201110 08:34:35.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:35.714" endtime="20201110 08:34:35.716"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.413" endtime="20201110 08:34:35.716"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.411" endtime="20201110 08:34:35.717"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:35.721" level="INFO">${RESULT} = [{'time': 0.019846306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.361200000000068e-05, 'source_diff': 7.361200000000068e-05}, {'time': 0.019934361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:35.717" endtime="20201110 08:34:35.721"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:35.734" level="INFO">${ACCURACY} = {'source_diff': [7.361200000000068e-05, 7.288899999999959e-05, 7.309700000000113e-05, 7.338900000000009e-05, 7.366700000000295e-05, 7.313900000000331e-05, 7.36110000000012e-05, 7.31110000000007e-05, 7...</msg>
<status status="PASS" starttime="20201110 08:34:35.722" endtime="20201110 08:34:35.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:35.739" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201110 08:34:35.738" endtime="20201110 08:34:35.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:35.742" level="INFO">VALUE: [7.361200000000068e-05, 7.288899999999959e-05, 7.309700000000113e-05, 7.338900000000009e-05, 7.366700000000295e-05, 7.313900000000331e-05, 7.36110000000012e-05, 7.31110000000007e-05, 7.324999999999693e-05, 7.366699999999948e-05, 7.29439999999984e-05, 7.365299999999991e-05, 7.270899999999719e-05, 7.322300000000073e-05, 7.305499999999895e-05, 7.288900000000306e-05, 7.27499999999999e-05, 7.295800000000144e-05, 7.28049999999987e-05, 7.255499999999845e-05, 7.352799999999979e-05, 7.351400000000022e-05, 7.329199999999911e-05, 7.315299999999941e-05, 7.336100000000095e-05, 7.277799999999904e-05, 7.34439999999989e-05, 7.287500000000002e-05, 7.290299999999916e-05, 7.282000000000122e-05, 7.347200000000151e-05, 7.277699999999956e-05, 7.350000000000065e-05, 7.315299999999941e-05, 7.340200000000019e-05, 7.294500000000134e-05, 7.348600000000108e-05, 7.365299999999991e-05, 7.290300000000263e-05, 7.338900000000009e-05, 7.258400000000054e-05, 7.327800000000301e-05, 7.319499999999812e-05, 7.354199999999936e-05, 7.272300000000023e-05, 7.355599999999893e-05, 7.347200000000151e-05, 7.30829999999981e-05, 7.345799999999847e-05, 7.287500000000002e-05]</msg>
<status status="PASS" starttime="20201110 08:34:35.740" endtime="20201110 08:34:35.749"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.735" endtime="20201110 08:34:35.749"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:35.752" endtime="20201110 08:34:35.753"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:35.755" endtime="20201110 08:34:35.774"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.753" endtime="20201110 08:34:35.775"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.750" endtime="20201110 08:34:35.775"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.375" endtime="20201110 08:34:35.776"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.375" endtime="20201110 08:34:35.776"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:35.784" endtime="20201110 08:34:35.804"></status>
</kw>
<msg timestamp="20201110 08:34:35.805" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:35.783" endtime="20201110 08:34:35.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:35.807" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:35.806" endtime="20201110 08:34:35.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:35.808" endtime="20201110 08:34:35.811"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.780" endtime="20201110 08:34:35.811"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.778" endtime="20201110 08:34:35.812"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:35.818" endtime="20201110 08:34:36.104"></status>
</kw>
<msg timestamp="20201110 08:34:36.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019756486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019830181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:35.817" endtime="20201110 08:34:36.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019756486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019830181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:36.108" endtime="20201110 08:34:36.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.117" endtime="20201110 08:34:36.118"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.814" endtime="20201110 08:34:36.119"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.812" endtime="20201110 08:34:36.119"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:36.123" level="INFO">${RESULT} = [{'time': 0.019830181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.369499999999862e-05, 'source_diff': 7.369499999999862e-05}, {'time': 0.019919208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:36.120" endtime="20201110 08:34:36.124"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:36.137" level="INFO">${ACCURACY} = {'source_diff': [7.369499999999862e-05, 7.45829999999996e-05, 7.433300000000281e-05, 7.406899999999952e-05, 7.397199999999854e-05, 7.466700000000048e-05, 7.388900000000059e-05, 7.384800000000136e-05, ...</msg>
<status status="PASS" starttime="20201110 08:34:36.124" endtime="20201110 08:34:36.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.142" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201110 08:34:36.140" endtime="20201110 08:34:36.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.144" level="INFO">VALUE: [7.369499999999862e-05, 7.45829999999996e-05, 7.433300000000281e-05, 7.406899999999952e-05, 7.397199999999854e-05, 7.466700000000048e-05, 7.388900000000059e-05, 7.384800000000136e-05, 7.45699999999995e-05, 7.433299999999934e-05, 7.441700000000023e-05, 7.463899999999787e-05, 7.391699999999973e-05, 7.450000000000165e-05, 7.387500000000102e-05, 7.454100000000088e-05, 7.422200000000226e-05, 7.406899999999952e-05, 7.459699999999916e-05, 7.437500000000152e-05, 7.381899999999927e-05, 7.408300000000256e-05, 7.427800000000054e-05, 7.429199999999664e-05, 7.447199999999904e-05, 7.459699999999916e-05, 7.377800000000004e-05, 7.369499999999862e-05, 7.388900000000059e-05, 7.416699999999998e-05, 7.397300000000148e-05, 7.370899999999819e-05, 7.372200000000176e-05, 7.431899999999977e-05, 7.415300000000041e-05, 7.447299999999851e-05, 7.395799999999897e-05, 7.390300000000016e-05, 7.405599999999943e-05, 7.39439999999994e-05, 7.433299999999934e-05, 7.455599999999993e-05, 7.369499999999862e-05, 7.395900000000191e-05, 7.42639999999975e-05, 7.376400000000047e-05, 7.377800000000004e-05, 7.459699999999916e-05, 7.465199999999797e-05, 7.388800000000112e-05]</msg>
<status status="PASS" starttime="20201110 08:34:36.143" endtime="20201110 08:34:36.145"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.138" endtime="20201110 08:34:36.145"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.147" endtime="20201110 08:34:36.149"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:36.151" endtime="20201110 08:34:36.170"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.149" endtime="20201110 08:34:36.171"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.146" endtime="20201110 08:34:36.171"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.777" endtime="20201110 08:34:36.172"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.776" endtime="20201110 08:34:36.172"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.180" endtime="20201110 08:34:36.200"></status>
</kw>
<msg timestamp="20201110 08:34:36.200" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:36.179" endtime="20201110 08:34:36.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.202" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:36.201" endtime="20201110 08:34:36.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.204" endtime="20201110 08:34:36.206"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.176" endtime="20201110 08:34:36.207"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.174" endtime="20201110 08:34:36.207"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.214" endtime="20201110 08:34:36.499"></status>
</kw>
<msg timestamp="20201110 08:34:36.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019496083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019571486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:36.212" endtime="20201110 08:34:36.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019496083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019571486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:36.503" endtime="20201110 08:34:36.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.512" endtime="20201110 08:34:36.513"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.209" endtime="20201110 08:34:36.514"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.208" endtime="20201110 08:34:36.514"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:36.518" level="INFO">${RESULT} = [{'time': 0.019571486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.54029999999982e-05, 'source_diff': 7.54029999999982e-05}, {'time': 0.019660514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:34:36.515" endtime="20201110 08:34:36.519"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:36.533" level="INFO">${ACCURACY} = {'source_diff': [7.54029999999982e-05, 7.534699999999991e-05, 7.56249999999993e-05, 7.541700000000123e-05, 7.520800000000022e-05, 7.513900000000184e-05, 7.529200000000111e-05, 7.533399999999982e-05, 7...</msg>
<status status="PASS" starttime="20201110 08:34:36.519" endtime="20201110 08:34:36.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.538" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201110 08:34:36.537" endtime="20201110 08:34:36.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.542" level="INFO">VALUE: [7.54029999999982e-05, 7.534699999999991e-05, 7.56249999999993e-05, 7.541700000000123e-05, 7.520800000000022e-05, 7.513900000000184e-05, 7.529200000000111e-05, 7.533399999999982e-05, 7.552700000000231e-05, 7.551299999999928e-05, 7.488800000000212e-05, 7.551400000000222e-05, 7.479200000000061e-05, 7.541599999999829e-05, 7.511099999999923e-05, 7.483299999999984e-05, 7.487499999999855e-05, 7.505600000000043e-05, 7.531900000000077e-05, 7.537499999999905e-05, 7.551400000000222e-05, 7.565299999999844e-05, 7.494499999999987e-05, 7.517999999999761e-05, 7.47500000000019e-05, 7.522199999999979e-05, 7.47500000000019e-05, 7.50830000000001e-05, 7.508299999999662e-05, 7.501400000000172e-05, 7.516699999999751e-05, 7.554200000000136e-05, 7.518100000000055e-05, 7.551399999999875e-05, 7.552799999999832e-05, 7.498599999999911e-05, 7.470899999999919e-05, 7.518100000000055e-05, 7.550000000000265e-05, 7.483399999999932e-05, 7.479100000000113e-05, 7.519400000000065e-05, 7.552799999999832e-05, 7.497199999999954e-05, 7.498600000000258e-05, 7.502800000000129e-05, 7.53890000000021e-05, 7.501400000000172e-05, 7.536099999999948e-05, 7.55839999999966e-05]</msg>
<status status="PASS" starttime="20201110 08:34:36.540" endtime="20201110 08:34:36.543"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.534" endtime="20201110 08:34:36.543"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.545" endtime="20201110 08:34:36.547"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:36.549" endtime="20201110 08:34:36.568"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.547" endtime="20201110 08:34:36.569"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.544" endtime="20201110 08:34:36.569"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.173" endtime="20201110 08:34:36.569"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.172" endtime="20201110 08:34:36.569"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.578" endtime="20201110 08:34:36.597"></status>
</kw>
<msg timestamp="20201110 08:34:36.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:36.577" endtime="20201110 08:34:36.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.600" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:36.599" endtime="20201110 08:34:36.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.601" endtime="20201110 08:34:36.604"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.574" endtime="20201110 08:34:36.604"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.572" endtime="20201110 08:34:36.605"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.611" endtime="20201110 08:34:36.898"></status>
</kw>
<msg timestamp="20201110 08:34:36.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019597958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019673833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:36.610" endtime="20201110 08:34:36.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019597958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019673833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:36.902" endtime="20201110 08:34:36.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.910" endtime="20201110 08:34:36.912"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.607" endtime="20201110 08:34:36.912"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.605" endtime="20201110 08:34:36.913"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:36.917" level="INFO">${RESULT} = [{'time': 0.019673833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.587500000000302e-05, 'source_diff': 7.587500000000302e-05}, {'time': 0.019762847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:36.914" endtime="20201110 08:34:36.917"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:36.930" level="INFO">${ACCURACY} = {'source_diff': [7.587500000000302e-05, 7.59440000000014e-05, 7.597200000000054e-05, 7.636100000000048e-05, 7.599999999999968e-05, 7.622200000000079e-05, 7.574999999999943e-05, 7.623600000000036e-05, ...</msg>
<status status="PASS" starttime="20201110 08:34:36.918" endtime="20201110 08:34:36.931"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.935" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201110 08:34:36.934" endtime="20201110 08:34:36.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.938" level="INFO">VALUE: [7.587500000000302e-05, 7.59440000000014e-05, 7.597200000000054e-05, 7.636100000000048e-05, 7.599999999999968e-05, 7.622200000000079e-05, 7.574999999999943e-05, 7.623600000000036e-05, 7.654199999999889e-05, 7.624999999999993e-05, 7.591699999999826e-05, 7.659700000000116e-05, 7.652799999999932e-05, 7.604099999999892e-05, 7.64440000000019e-05, 7.641599999999929e-05, 7.597200000000054e-05, 7.659700000000116e-05, 7.59449999999974e-05, 7.613899999999937e-05, 7.643099999999833e-05, 7.602799999999882e-05, 7.570800000000072e-05, 7.59310000000013e-05, 7.606999999999753e-05, 7.64029999999992e-05, 7.586199999999946e-05, 7.652799999999932e-05, 7.641599999999929e-05, 7.619499999999765e-05, 7.615199999999947e-05, 7.663899999999987e-05, 7.629100000000263e-05, 7.556899999999755e-05, 7.652800000000279e-05, 7.634699999999744e-05, 7.665299999999944e-05, 7.627799999999907e-05, 7.665299999999944e-05, 7.604199999999839e-05, 7.601399999999925e-05, 7.654200000000236e-05, 7.608400000000057e-05, 7.617999999999861e-05, 7.58890000000026e-05, 7.62769999999996e-05, 7.597200000000054e-05, 7.663899999999987e-05, 7.579100000000213e-05, 7.622199999999732e-05]</msg>
<status status="PASS" starttime="20201110 08:34:36.936" endtime="20201110 08:34:36.938"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.931" endtime="20201110 08:34:36.939"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.941" endtime="20201110 08:34:36.942"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:36.945" endtime="20201110 08:34:36.964"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.943" endtime="20201110 08:34:36.964"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.939" endtime="20201110 08:34:36.965"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.570" endtime="20201110 08:34:36.965"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.570" endtime="20201110 08:34:36.965"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.974" endtime="20201110 08:34:36.994"></status>
</kw>
<msg timestamp="20201110 08:34:36.994" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:36.972" endtime="20201110 08:34:36.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.997" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:36.995" endtime="20201110 08:34:36.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.998" endtime="20201110 08:34:37.000"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.970" endtime="20201110 08:34:37.001"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.968" endtime="20201110 08:34:37.002"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:37.008" endtime="20201110 08:34:37.293"></status>
</kw>
<msg timestamp="20201110 08:34:37.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019529806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019606861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:37.006" endtime="20201110 08:34:37.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:37.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019529806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019606861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:37.298" endtime="20201110 08:34:37.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:37.306" endtime="20201110 08:34:37.308"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.004" endtime="20201110 08:34:37.308"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.002" endtime="20201110 08:34:37.309"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:37.313" level="INFO">${RESULT} = [{'time': 0.019606861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.705499999999949e-05, 'source_diff': 7.705499999999949e-05}, {'time': 0.019698903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:37.309" endtime="20201110 08:34:37.313"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:37.326" level="INFO">${ACCURACY} = {'source_diff': [7.705499999999949e-05, 7.719499999999865e-05, 7.70830000000021e-05, 7.72640000000005e-05, 7.718099999999908e-05, 7.702700000000035e-05, 7.697300000000101e-05, 7.738900000000062e-05, 7...</msg>
<status status="PASS" starttime="20201110 08:34:37.314" endtime="20201110 08:34:37.326"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:37.331" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201110 08:34:37.330" endtime="20201110 08:34:37.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:37.333" level="INFO">VALUE: [7.705499999999949e-05, 7.719499999999865e-05, 7.70830000000021e-05, 7.72640000000005e-05, 7.718099999999908e-05, 7.702700000000035e-05, 7.697300000000101e-05, 7.738900000000062e-05, 7.725000000000093e-05, 7.69029999999997e-05, 7.700000000000068e-05, 7.754199999999989e-05, 7.709700000000166e-05, 7.751400000000075e-05, 7.737500000000105e-05, 7.722199999999832e-05, 7.691699999999926e-05, 7.751400000000075e-05, 7.672200000000129e-05, 7.713900000000037e-05, 7.680599999999871e-05, 7.74030000000002e-05, 7.679199999999914e-05, 7.672200000000129e-05, 7.740200000000072e-05, 7.694500000000187e-05, 7.740200000000072e-05, 7.701400000000025e-05, 7.698600000000111e-05, 7.669399999999868e-05, 7.69579999999985e-05, 7.702799999999982e-05, 7.722200000000179e-05, 7.766700000000001e-05, 7.679200000000261e-05, 7.740299999999672e-05, 7.752800000000032e-05, 7.744399999999943e-05, 7.701400000000025e-05, 7.759799999999817e-05, 7.670799999999825e-05, 7.693099999999883e-05, 7.684699999999794e-05, 7.750000000000118e-05, 7.698599999999764e-05, 7.733299999999887e-05, 7.738900000000062e-05, 7.727800000000007e-05, 7.66250000000003e-05, 7.738900000000062e-05]</msg>
<status status="PASS" starttime="20201110 08:34:37.332" endtime="20201110 08:34:37.334"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.327" endtime="20201110 08:34:37.334"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:37.337" endtime="20201110 08:34:37.338"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:37.340" endtime="20201110 08:34:37.360"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.339" endtime="20201110 08:34:37.360"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.335" endtime="20201110 08:34:37.361"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.966" endtime="20201110 08:34:37.361"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.966" endtime="20201110 08:34:37.361"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:37.370" endtime="20201110 08:34:37.389"></status>
</kw>
<msg timestamp="20201110 08:34:37.390" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:37.368" endtime="20201110 08:34:37.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:37.392" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:37.391" endtime="20201110 08:34:37.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:37.393" endtime="20201110 08:34:37.396"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.366" endtime="20201110 08:34:37.396"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.364" endtime="20201110 08:34:37.397"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:37.403" endtime="20201110 08:34:37.688"></status>
</kw>
<msg timestamp="20201110 08:34:37.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01950775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019586264, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:37.402" endtime="20201110 08:34:37.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:37.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01950775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019586264, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:37.693" endtime="20201110 08:34:37.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:37.701" endtime="20201110 08:34:37.703"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.399" endtime="20201110 08:34:37.703"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.397" endtime="20201110 08:34:37.704"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:37.708" level="INFO">${RESULT} = [{'time': 0.019586264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.851399999999828e-05, 'source_diff': 7.851399999999828e-05}, {'time': 0.019677236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:37.704" endtime="20201110 08:34:37.708"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:37.722" level="INFO">${ACCURACY} = {'source_diff': [7.851399999999828e-05, 7.800000000000168e-05, 7.808299999999962e-05, 7.855600000000046e-05, 7.783399999999885e-05, 7.77229999999983e-05, 7.863900000000187e-05, 7.830500000000074e-05, ...</msg>
<status status="PASS" starttime="20201110 08:34:37.709" endtime="20201110 08:34:37.722"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:37.727" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201110 08:34:37.725" endtime="20201110 08:34:37.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:37.729" level="INFO">VALUE: [7.851399999999828e-05, 7.800000000000168e-05, 7.808299999999962e-05, 7.855600000000046e-05, 7.783399999999885e-05, 7.77229999999983e-05, 7.863900000000187e-05, 7.830500000000074e-05, 7.783299999999937e-05, 7.841599999999782e-05, 7.852699999999838e-05, 7.85969999999997e-05, 7.800000000000168e-05, 7.84030000000012e-05, 7.851399999999828e-05, 7.822199999999932e-05, 7.783300000000284e-05, 7.770799999999925e-05, 7.805599999999996e-05, 7.822199999999932e-05, 7.829199999999717e-05, 7.818000000000061e-05, 7.852799999999785e-05, 7.834800000000239e-05, 7.784700000000241e-05, 7.852699999999838e-05, 7.8458e-05, 7.868000000000111e-05, 7.776399999999753e-05, 7.843100000000033e-05, 7.823599999999889e-05, 7.827800000000107e-05, 7.791700000000026e-05, 7.861100000000273e-05, 7.80839999999991e-05, 7.802800000000082e-05, 7.827800000000107e-05, 7.773599999999839e-05, 7.772199999999882e-05, 7.769400000000315e-05, 7.833299999999987e-05, 7.851400000000175e-05, 7.811100000000223e-05, 7.82640000000015e-05, 7.822200000000279e-05, 7.784699999999894e-05, 7.793099999999983e-05, 7.780599999999971e-05, 7.820899999999922e-05, 7.808400000000257e-05]</msg>
<status status="PASS" starttime="20201110 08:34:37.728" endtime="20201110 08:34:37.730"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.723" endtime="20201110 08:34:37.730"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:37.733" endtime="20201110 08:34:37.734"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:37.736" endtime="20201110 08:34:37.755"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.734" endtime="20201110 08:34:37.756"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.731" endtime="20201110 08:34:37.756"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.362" endtime="20201110 08:34:37.757"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.361" endtime="20201110 08:34:37.757"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:37.765" endtime="20201110 08:34:37.786"></status>
</kw>
<msg timestamp="20201110 08:34:37.786" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:37.764" endtime="20201110 08:34:37.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:37.789" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:37.787" endtime="20201110 08:34:37.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:37.790" endtime="20201110 08:34:37.792"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.761" endtime="20201110 08:34:37.793"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.759" endtime="20201110 08:34:37.793"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:37.800" endtime="20201110 08:34:38.086"></status>
</kw>
<msg timestamp="20201110 08:34:38.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019619153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019698444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:37.798" endtime="20201110 08:34:38.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:38.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019619153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019698444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:38.090" endtime="20201110 08:34:38.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.099" endtime="20201110 08:34:38.100"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.796" endtime="20201110 08:34:38.101"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.794" endtime="20201110 08:34:38.101"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:38.105" level="INFO">${RESULT} = [{'time': 0.019698444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.92909999999987e-05, 'source_diff': 7.92909999999987e-05}, {'time': 0.019793458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:34:38.102" endtime="20201110 08:34:38.106"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:38.120" level="INFO">${ACCURACY} = {'source_diff': [7.92909999999987e-05, 7.941599999999882e-05, 7.963900000000287e-05, 7.944400000000143e-05, 7.947200000000057e-05, 7.920800000000075e-05, 7.9458000000001e-05, 7.89030000000017e-05, 7.8...</msg>
<status status="PASS" starttime="20201110 08:34:38.106" endtime="20201110 08:34:38.120"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:38.125" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201110 08:34:38.123" endtime="20201110 08:34:38.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:38.127" level="INFO">VALUE: [7.92909999999987e-05, 7.941599999999882e-05, 7.963900000000287e-05, 7.944400000000143e-05, 7.947200000000057e-05, 7.920800000000075e-05, 7.9458000000001e-05, 7.89030000000017e-05, 7.883300000000037e-05, 7.934700000000044e-05, 7.89030000000017e-05, 7.8764000000002e-05, 7.966699999999854e-05, 7.888899999999865e-05, 7.897200000000007e-05, 7.90840000000001e-05, 7.90970000000002e-05, 7.91389999999989e-05, 7.891600000000179e-05, 7.954199999999842e-05, 7.870800000000025e-05, 7.90970000000002e-05, 7.952799999999885e-05, 7.929199999999817e-05, 7.95129999999998e-05, 7.91389999999989e-05, 7.886099999999951e-05, 7.898700000000258e-05, 7.893100000000083e-05, 7.95970000000007e-05, 7.893000000000136e-05, 7.884699999999994e-05, 7.965299999999897e-05, 7.911099999999976e-05, 7.88190000000008e-05, 7.929199999999817e-05, 7.92779999999986e-05, 7.923599999999989e-05, 7.956900000000156e-05, 7.958299999999766e-05, 7.947300000000004e-05, 7.965299999999897e-05, 7.87909999999982e-05, 7.882000000000028e-05, 7.940199999999925e-05, 7.90970000000002e-05, 7.884699999999994e-05, 7.92640000000025e-05, 7.940299999999872e-05, 7.856900000000056e-05]</msg>
<status status="PASS" starttime="20201110 08:34:38.126" endtime="20201110 08:34:38.128"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.121" endtime="20201110 08:34:38.128"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.130" endtime="20201110 08:34:38.132"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:38.134" endtime="20201110 08:34:38.153"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.132" endtime="20201110 08:34:38.154"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.129" endtime="20201110 08:34:38.154"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.758" endtime="20201110 08:34:38.155"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.757" endtime="20201110 08:34:38.155"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.163" endtime="20201110 08:34:38.184"></status>
</kw>
<msg timestamp="20201110 08:34:38.184" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:38.162" endtime="20201110 08:34:38.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:38.186" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:38.185" endtime="20201110 08:34:38.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.187" endtime="20201110 08:34:38.190"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.159" endtime="20201110 08:34:38.191"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.157" endtime="20201110 08:34:38.191"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.198" endtime="20201110 08:34:38.483"></status>
</kw>
<msg timestamp="20201110 08:34:38.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019500486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019580139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:38.196" endtime="20201110 08:34:38.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:38.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019500486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019580139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:38.487" endtime="20201110 08:34:38.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.496" endtime="20201110 08:34:38.497"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.194" endtime="20201110 08:34:38.498"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.192" endtime="20201110 08:34:38.498"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:38.502" level="INFO">${RESULT} = [{'time': 0.019580139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.965299999999897e-05, 'source_diff': 7.965299999999897e-05}, {'time': 0.019673167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:38.499" endtime="20201110 08:34:38.503"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:38.516" level="INFO">${ACCURACY} = {'source_diff': [7.965299999999897e-05, 8.020899999999775e-05, 8.02779999999996e-05, 8.033399999999788e-05, 7.973699999999986e-05, 8.002799999999935e-05, 7.997200000000107e-05, 8.016600000000304e-05, ...</msg>
<status status="PASS" starttime="20201110 08:34:38.503" endtime="20201110 08:34:38.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:38.520" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201110 08:34:38.519" endtime="20201110 08:34:38.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:38.523" level="INFO">VALUE: [7.965299999999897e-05, 8.020899999999775e-05, 8.02779999999996e-05, 8.033399999999788e-05, 7.973699999999986e-05, 8.002799999999935e-05, 7.997200000000107e-05, 8.016600000000304e-05, 8.017999999999914e-05, 7.99719999999976e-05, 8.054199999999942e-05, 7.984700000000094e-05, 7.970800000000125e-05, 7.99580000000015e-05, 7.970800000000125e-05, 7.986099999999705e-05, 8.04169999999993e-05, 7.976399999999953e-05, 8.011200000000024e-05, 8.0458000000002e-05, 8.052700000000038e-05, 7.970800000000125e-05, 8.01389999999999e-05, 8.067999999999964e-05, 8.0152e-05, 8.06109999999978e-05, 8.019399999999871e-05, 8.04719999999981e-05, 7.988899999999965e-05, 8.011100000000076e-05, 7.970800000000125e-05, 8.05840000000016e-05, 8.025000000000046e-05, 7.986099999999705e-05, 8.042999999999939e-05, 8.026300000000056e-05, 8.001399999999978e-05, 8.026400000000003e-05, 8.019399999999871e-05, 7.979200000000214e-05, 7.976399999999953e-05, 7.98329999999979e-05, 8.019400000000218e-05, 8.06390000000004e-05, 7.988899999999965e-05, 8.026400000000003e-05, 8.054199999999942e-05, 8.051400000000028e-05, 7.984700000000094e-05, 8.040199999999678e-05]</msg>
<status status="PASS" starttime="20201110 08:34:38.522" endtime="20201110 08:34:38.524"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.517" endtime="20201110 08:34:38.524"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.526" endtime="20201110 08:34:38.528"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:38.530" endtime="20201110 08:34:38.549"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.528" endtime="20201110 08:34:38.550"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.525" endtime="20201110 08:34:38.550"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.156" endtime="20201110 08:34:38.550"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.155" endtime="20201110 08:34:38.551"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.559" endtime="20201110 08:34:38.579"></status>
</kw>
<msg timestamp="20201110 08:34:38.579" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:38.558" endtime="20201110 08:34:38.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:38.582" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:38.580" endtime="20201110 08:34:38.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.583" endtime="20201110 08:34:38.585"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.555" endtime="20201110 08:34:38.586"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.553" endtime="20201110 08:34:38.586"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.593" endtime="20201110 08:34:38.879"></status>
</kw>
<msg timestamp="20201110 08:34:38.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01955675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019638097, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:38.591" endtime="20201110 08:34:38.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:38.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01955675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019638097, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:38.883" endtime="20201110 08:34:38.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.892" endtime="20201110 08:34:38.894"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.589" endtime="20201110 08:34:38.894"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.587" endtime="20201110 08:34:38.895"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:38.899" level="INFO">${RESULT} = [{'time': 0.019638097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.134699999999898e-05, 'source_diff': 8.134699999999898e-05}, {'time': 0.019732139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:38.895" endtime="20201110 08:34:38.899"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:38.912" level="INFO">${ACCURACY} = {'source_diff': [8.134699999999898e-05, 8.137499999999812e-05, 8.108299999999916e-05, 8.081999999999881e-05, 8.09169999999998e-05, 8.162499999999837e-05, 8.159699999999923e-05, 8.079199999999967e-05, ...</msg>
<status status="PASS" starttime="20201110 08:34:38.900" endtime="20201110 08:34:38.913"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:38.917" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201110 08:34:38.916" endtime="20201110 08:34:38.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:38.919" level="INFO">VALUE: [8.134699999999898e-05, 8.137499999999812e-05, 8.108299999999916e-05, 8.081999999999881e-05, 8.09169999999998e-05, 8.162499999999837e-05, 8.159699999999923e-05, 8.079199999999967e-05, 8.082000000000228e-05, 8.16520000000015e-05, 8.138800000000168e-05, 8.147200000000257e-05, 8.109699999999873e-05, 8.075000000000096e-05, 8.147200000000257e-05, 8.080600000000271e-05, 8.075000000000096e-05, 8.136099999999855e-05, 8.158299999999966e-05, 8.163899999999794e-05, 8.109800000000167e-05, 8.137500000000158e-05, 8.115300000000047e-05, 8.145799999999953e-05, 8.080499999999977e-05, 8.102700000000088e-05, 8.15269999999979e-05, 8.16659999999976e-05, 8.108300000000263e-05, 8.166700000000054e-05, 8.14719999999991e-05, 8.10970000000022e-05, 8.055599999999899e-05, 8.090300000000022e-05, 8.129200000000017e-05, 8.09450000000024e-05, 8.087499999999762e-05, 8.109800000000167e-05, 8.154200000000042e-05, 8.088900000000065e-05, 8.149999999999824e-05, 8.144399999999996e-05, 8.119399999999971e-05, 8.166700000000054e-05, 8.147200000000257e-05, 8.108399999999863e-05, 8.158299999999966e-05, 8.088900000000065e-05, 8.16390000000014e-05, 8.090299999999676e-05]</msg>
<status status="PASS" starttime="20201110 08:34:38.918" endtime="20201110 08:34:38.920"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.913" endtime="20201110 08:34:38.921"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.923" endtime="20201110 08:34:38.924"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:38.926" endtime="20201110 08:34:38.946"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.925" endtime="20201110 08:34:38.946"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.921" endtime="20201110 08:34:38.947"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.552" endtime="20201110 08:34:38.947"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.551" endtime="20201110 08:34:38.947"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.956" endtime="20201110 08:34:38.975"></status>
</kw>
<msg timestamp="20201110 08:34:38.976" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:38.954" endtime="20201110 08:34:38.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:38.978" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:38.977" endtime="20201110 08:34:38.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.979" endtime="20201110 08:34:38.982"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.952" endtime="20201110 08:34:38.982"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.949" endtime="20201110 08:34:38.983"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.989" endtime="20201110 08:34:39.275"></status>
</kw>
<msg timestamp="20201110 08:34:39.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019660069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019742667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:38.988" endtime="20201110 08:34:39.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:39.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019660069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019742667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:39.279" endtime="20201110 08:34:39.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:39.287" endtime="20201110 08:34:39.289"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.985" endtime="20201110 08:34:39.289"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.983" endtime="20201110 08:34:39.290"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:39.294" level="INFO">${RESULT} = [{'time': 0.019742667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.25979999999997e-05, 'source_diff': 8.25979999999997e-05}, {'time': 0.019838653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:34:39.291" endtime="20201110 08:34:39.294"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:39.308" level="INFO">${ACCURACY} = {'source_diff': [8.25979999999997e-05, 8.232000000000031e-05, 8.226399999999856e-05, 8.234799999999945e-05, 8.184699999999948e-05, 8.259700000000023e-05, 8.218100000000061e-05, 8.19719999999996e-05, 8...</msg>
<status status="PASS" starttime="20201110 08:34:39.295" endtime="20201110 08:34:39.308"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:39.312" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201110 08:34:39.311" endtime="20201110 08:34:39.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:39.315" level="INFO">VALUE: [8.25979999999997e-05, 8.232000000000031e-05, 8.226399999999856e-05, 8.234799999999945e-05, 8.184699999999948e-05, 8.259700000000023e-05, 8.218100000000061e-05, 8.19719999999996e-05, 8.175000000000196e-05, 8.268100000000111e-05, 8.215300000000147e-05, 8.198599999999917e-05, 8.233399999999988e-05, 8.190300000000122e-05, 8.2459e-05, 8.258400000000013e-05, 8.177699999999816e-05, 8.204100000000145e-05, 8.208399999999963e-05, 8.252699999999891e-05, 8.252699999999891e-05, 8.21390000000019e-05, 8.204199999999745e-05, 8.223599999999942e-05, 8.252799999999838e-05, 8.227799999999813e-05, 8.209699999999973e-05, 8.212499999999887e-05, 8.218100000000061e-05, 8.22369999999989e-05, 8.177799999999763e-05, 8.21109999999993e-05, 8.222199999999985e-05, 8.21390000000019e-05, 8.23330000000004e-05, 8.195800000000003e-05, 8.179200000000067e-05, 8.252800000000185e-05, 8.266700000000154e-05, 8.224999999999899e-05, 8.205600000000049e-05, 8.244399999999749e-05, 8.219500000000018e-05, 8.20840000000031e-05, 8.247299999999957e-05, 8.17780000000011e-05, 8.195800000000003e-05, 8.230500000000127e-05, 8.245799999999706e-05, 8.19719999999996e-05]</msg>
<status status="PASS" starttime="20201110 08:34:39.313" endtime="20201110 08:34:39.315"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.309" endtime="20201110 08:34:39.316"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:39.318" endtime="20201110 08:34:39.320"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:39.322" endtime="20201110 08:34:39.341"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.320" endtime="20201110 08:34:39.342"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.317" endtime="20201110 08:34:39.342"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.948" endtime="20201110 08:34:39.342"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.947" endtime="20201110 08:34:39.343"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:39.351" endtime="20201110 08:34:39.372"></status>
</kw>
<msg timestamp="20201110 08:34:39.372" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:39.350" endtime="20201110 08:34:39.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:39.375" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:39.373" endtime="20201110 08:34:39.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:39.376" endtime="20201110 08:34:39.378"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.347" endtime="20201110 08:34:39.379"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.345" endtime="20201110 08:34:39.379"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:39.386" endtime="20201110 08:34:39.672"></status>
</kw>
<msg timestamp="20201110 08:34:39.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019794083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019877333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:39.384" endtime="20201110 08:34:39.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:39.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019794083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019877333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:39.676" endtime="20201110 08:34:39.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:39.684" endtime="20201110 08:34:39.686"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.382" endtime="20201110 08:34:39.686"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.380" endtime="20201110 08:34:39.687"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:39.691" level="INFO">${RESULT} = [{'time': 0.019877333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.324999999999999e-05, 'source_diff': 8.324999999999999e-05}, {'time': 0.019974333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:39.688" endtime="20201110 08:34:39.691"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:39.706" level="INFO">${ACCURACY} = {'source_diff': [8.324999999999999e-05, 8.272200000000035e-05, 8.351399999999981e-05, 8.36659999999996e-05, 8.323600000000042e-05, 8.288900000000265e-05, 8.32780000000026e-05, 8.331899999999837e-05, 8...</msg>
<status status="PASS" starttime="20201110 08:34:39.692" endtime="20201110 08:34:39.706"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:39.710" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201110 08:34:39.709" endtime="20201110 08:34:39.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:39.713" level="INFO">VALUE: [8.324999999999999e-05, 8.272200000000035e-05, 8.351399999999981e-05, 8.36659999999996e-05, 8.323600000000042e-05, 8.288900000000265e-05, 8.32780000000026e-05, 8.331899999999837e-05, 8.359700000000123e-05, 8.327799999999913e-05, 8.301399999999931e-05, 8.279200000000167e-05, 8.305600000000149e-05, 8.323600000000042e-05, 8.336100000000055e-05, 8.33330000000014e-05, 8.338899999999969e-05, 8.315300000000247e-05, 8.352799999999938e-05, 8.362500000000037e-05, 8.281900000000134e-05, 8.354199999999895e-05, 8.288899999999919e-05, 8.304099999999898e-05, 8.30980000000002e-05, 8.351399999999981e-05, 8.356999999999809e-05, 8.340199999999978e-05, 8.350000000000024e-05, 8.320800000000128e-05, 8.333299999999794e-05, 8.304099999999898e-05, 8.334700000000098e-05, 8.34720000000011e-05, 8.322200000000085e-05, 8.295800000000103e-05, 8.272200000000035e-05, 8.302799999999888e-05, 8.338899999999969e-05, 8.332000000000131e-05, 8.33049999999988e-05, 8.272199999999688e-05, 8.356899999999862e-05, 8.29720000000006e-05, 8.344400000000196e-05, 8.305500000000202e-05, 8.318100000000161e-05, 8.336100000000055e-05, 8.341699999999883e-05, 8.305599999999802e-05]</msg>
<status status="PASS" starttime="20201110 08:34:39.711" endtime="20201110 08:34:39.713"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.707" endtime="20201110 08:34:39.714"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:39.716" endtime="20201110 08:34:39.718"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:39.720" endtime="20201110 08:34:39.739"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.718" endtime="20201110 08:34:39.740"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.715" endtime="20201110 08:34:39.740"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.344" endtime="20201110 08:34:39.741"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.343" endtime="20201110 08:34:39.741"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:39.750" endtime="20201110 08:34:39.771"></status>
</kw>
<msg timestamp="20201110 08:34:39.771" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:39.749" endtime="20201110 08:34:39.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:39.774" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:39.772" endtime="20201110 08:34:39.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:39.775" endtime="20201110 08:34:39.777"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.746" endtime="20201110 08:34:39.778"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.744" endtime="20201110 08:34:39.778"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:39.785" endtime="20201110 08:34:40.070"></status>
</kw>
<msg timestamp="20201110 08:34:40.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021086792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021171236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:39.783" endtime="20201110 08:34:40.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:40.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021086792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021171236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:40.075" endtime="20201110 08:34:40.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:40.083" endtime="20201110 08:34:40.085"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.781" endtime="20201110 08:34:40.085"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.779" endtime="20201110 08:34:40.086"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:40.090" level="INFO">${RESULT} = [{'time': 0.021171236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.444399999999949e-05, 'source_diff': 8.444399999999949e-05}, {'time': 0.02126825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:34:40.086" endtime="20201110 08:34:40.090"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:40.103" level="INFO">${ACCURACY} = {'source_diff': [8.444399999999949e-05, 8.422199999999838e-05, 8.395799999999856e-05, 8.408299999999869e-05, 8.465299999999704e-05, 8.391699999999933e-05, 8.370899999999779e-05, 8.458399999999866e-05,...</msg>
<status status="PASS" starttime="20201110 08:34:40.091" endtime="20201110 08:34:40.104"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:40.108" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201110 08:34:40.107" endtime="20201110 08:34:40.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:40.110" level="INFO">VALUE: [8.444399999999949e-05, 8.422199999999838e-05, 8.395799999999856e-05, 8.408299999999869e-05, 8.465299999999704e-05, 8.391699999999933e-05, 8.370899999999779e-05, 8.458399999999866e-05, 8.370900000000125e-05, 8.454100000000048e-05, 8.442999999999992e-05, 8.43469999999985e-05, 8.424999999999752e-05, 8.441699999999983e-05, 8.401400000000031e-05, 8.441699999999983e-05, 8.466700000000008e-05, 8.382000000000181e-05, 8.397199999999813e-05, 8.436100000000155e-05, 8.408300000000216e-05, 8.382000000000181e-05, 8.402799999999988e-05, 8.46249999999979e-05, 8.462500000000137e-05, 8.46249999999979e-05, 8.422199999999838e-05, 8.437499999999765e-05, 8.423600000000142e-05, 8.420799999999881e-05, 8.452800000000038e-05, 8.43469999999985e-05, 8.370800000000178e-05, 8.383400000000138e-05, 8.397300000000107e-05, 8.459799999999823e-05, 8.401400000000031e-05, 8.463900000000094e-05, 8.459700000000223e-05, 8.440300000000026e-05, 8.404199999999945e-05, 8.391699999999933e-05, 8.42919999999997e-05, 8.463900000000094e-05, 8.376400000000006e-05, 8.445800000000253e-05, 8.420899999999829e-05, 8.416700000000304e-05, 8.450000000000124e-05, 8.377799999999963e-05]</msg>
<status status="PASS" starttime="20201110 08:34:40.109" endtime="20201110 08:34:40.111"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.104" endtime="20201110 08:34:40.112"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:40.114" endtime="20201110 08:34:40.115"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:40.117" endtime="20201110 08:34:40.137"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.116" endtime="20201110 08:34:40.137"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.112" endtime="20201110 08:34:40.138"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.742" endtime="20201110 08:34:40.138"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.741" endtime="20201110 08:34:40.138"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:40.147" endtime="20201110 08:34:40.167"></status>
</kw>
<msg timestamp="20201110 08:34:40.168" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:40.145" endtime="20201110 08:34:40.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:40.170" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:40.169" endtime="20201110 08:34:40.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:40.171" endtime="20201110 08:34:40.174"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.143" endtime="20201110 08:34:40.175"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.141" endtime="20201110 08:34:40.175"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:40.181" endtime="20201110 08:34:40.467"></status>
</kw>
<msg timestamp="20201110 08:34:40.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019754361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019839833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:40.180" endtime="20201110 08:34:40.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:40.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019754361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019839833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:40.471" endtime="20201110 08:34:40.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:40.479" endtime="20201110 08:34:40.481"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.177" endtime="20201110 08:34:40.482"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.176" endtime="20201110 08:34:40.482"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:40.486" level="INFO">${RESULT} = [{'time': 0.019839833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.547199999999963e-05, 'source_diff': 8.547199999999963e-05}, {'time': 0.019939889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:40.483" endtime="20201110 08:34:40.486"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:40.500" level="INFO">${ACCURACY} = {'source_diff': [8.547199999999963e-05, 8.555600000000052e-05, 8.565299999999804e-05, 8.547199999999963e-05, 8.483299999999944e-05, 8.504200000000045e-05, 8.530600000000027e-05, 8.486099999999858e-05,...</msg>
<status status="PASS" starttime="20201110 08:34:40.487" endtime="20201110 08:34:40.500"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:40.505" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201110 08:34:40.504" endtime="20201110 08:34:40.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:40.507" level="INFO">VALUE: [8.547199999999963e-05, 8.555600000000052e-05, 8.565299999999804e-05, 8.547199999999963e-05, 8.483299999999944e-05, 8.504200000000045e-05, 8.530600000000027e-05, 8.486099999999858e-05, 8.513900000000144e-05, 8.538899999999822e-05, 8.540300000000126e-05, 8.545899999999954e-05, 8.56249999999989e-05, 8.554099999999801e-05, 8.555499999999758e-05, 8.508299999999969e-05, 8.549999999999877e-05, 8.469399999999974e-05, 8.540300000000126e-05, 8.555599999999705e-05, 8.554200000000095e-05, 8.502699999999794e-05, 8.520899999999929e-05, 8.526399999999809e-05, 8.544499999999997e-05, 8.472199999999888e-05, 8.482000000000281e-05, 8.484700000000248e-05, 8.49720000000026e-05, 8.545800000000006e-05, 8.547199999999963e-05, 8.5153000000001e-05, 8.502800000000088e-05, 8.522199999999938e-05, 8.490300000000076e-05, 8.52920000000007e-05, 8.451400000000081e-05, 8.49729999999986e-05, 8.5459000000003e-05, 8.504099999999751e-05, 8.536099999999908e-05, 8.543000000000092e-05, 8.565299999999804e-05, 8.470799999999931e-05, 8.47920000000002e-05, 8.488900000000119e-05, 8.480599999999977e-05, 8.4846999999999e-05, 8.508299999999969e-05, 8.49590000000025e-05]</msg>
<status status="PASS" starttime="20201110 08:34:40.506" endtime="20201110 08:34:40.508"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.501" endtime="20201110 08:34:40.508"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:40.511" endtime="20201110 08:34:40.512"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:40.514" endtime="20201110 08:34:40.533"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.512" endtime="20201110 08:34:40.534"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.509" endtime="20201110 08:34:40.534"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.139" endtime="20201110 08:34:40.535"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.138" endtime="20201110 08:34:40.535"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:40.544" endtime="20201110 08:34:40.564"></status>
</kw>
<msg timestamp="20201110 08:34:40.564" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:40.542" endtime="20201110 08:34:40.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:40.567" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:40.565" endtime="20201110 08:34:40.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:40.568" endtime="20201110 08:34:40.570"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.539" endtime="20201110 08:34:40.571"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.537" endtime="20201110 08:34:40.571"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:40.578" endtime="20201110 08:34:40.864"></status>
</kw>
<msg timestamp="20201110 08:34:40.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019835875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019921986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:40.576" endtime="20201110 08:34:40.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:40.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019835875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019921986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:40.869" endtime="20201110 08:34:40.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:40.877" endtime="20201110 08:34:40.878"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.574" endtime="20201110 08:34:40.879"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.572" endtime="20201110 08:34:40.879"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:40.884" level="INFO">${RESULT} = [{'time': 0.019921986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.611099999999983e-05, 'source_diff': 8.611099999999983e-05}, {'time': 0.020022042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:40.880" endtime="20201110 08:34:40.884"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:40.897" level="INFO">${ACCURACY} = {'source_diff': [8.611099999999983e-05, 8.644500000000097e-05, 8.66249999999999e-05, 8.654199999999848e-05, 8.627799999999866e-05, 8.659799999999676e-05, 8.608400000000016e-05, 8.618100000000115e-05, ...</msg>
<status status="PASS" starttime="20201110 08:34:40.884" endtime="20201110 08:34:40.897"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:40.902" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201110 08:34:40.901" endtime="20201110 08:34:40.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:40.904" level="INFO">VALUE: [8.611099999999983e-05, 8.644500000000097e-05, 8.66249999999999e-05, 8.654199999999848e-05, 8.627799999999866e-05, 8.659799999999676e-05, 8.608400000000016e-05, 8.618100000000115e-05, 8.568100000000065e-05, 8.575000000000249e-05, 8.587500000000262e-05, 8.665299999999904e-05, 8.641700000000183e-05, 8.645800000000106e-05, 8.61249999999994e-05, 8.622200000000038e-05, 8.663899999999947e-05, 8.651399999999934e-05, 8.586199999999905e-05, 8.634799999999998e-05, 8.583399999999991e-05, 8.597200000000013e-05, 8.651399999999934e-05, 8.641600000000235e-05, 8.604100000000198e-05, 8.623599999999995e-05, 8.616700000000158e-05, 8.654200000000195e-05, 8.59859999999997e-05, 8.627799999999866e-05, 8.654200000000195e-05, 8.611099999999983e-05, 8.637499999999965e-05, 8.583399999999991e-05, 8.644400000000149e-05, 8.634799999999998e-05, 8.604099999999851e-05, 8.619400000000124e-05, 8.595800000000056e-05, 8.59859999999997e-05, 8.577799999999816e-05, 8.615299999999854e-05, 8.569400000000074e-05, 8.659700000000076e-05, 8.569500000000022e-05, 8.598700000000264e-05, 8.598699999999918e-05, 8.636100000000008e-05, 8.629099999999876e-05, 8.5847e-05]</msg>
<status status="PASS" starttime="20201110 08:34:40.903" endtime="20201110 08:34:40.911"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.898" endtime="20201110 08:34:40.912"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:40.914" endtime="20201110 08:34:40.915"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:40.917" endtime="20201110 08:34:40.937"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.916" endtime="20201110 08:34:40.937"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.912" endtime="20201110 08:34:40.938"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.536" endtime="20201110 08:34:40.938"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.535" endtime="20201110 08:34:40.938"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:40.947" endtime="20201110 08:34:40.967"></status>
</kw>
<msg timestamp="20201110 08:34:40.967" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:40.945" endtime="20201110 08:34:40.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:40.970" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:40.968" endtime="20201110 08:34:40.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:40.971" endtime="20201110 08:34:40.973"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.943" endtime="20201110 08:34:40.974"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.941" endtime="20201110 08:34:40.974"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:40.980" endtime="20201110 08:34:41.266"></status>
</kw>
<msg timestamp="20201110 08:34:41.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019756125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019843375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:40.979" endtime="20201110 08:34:41.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:41.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019756125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019843375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:41.271" endtime="20201110 08:34:41.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:41.280" endtime="20201110 08:34:41.283"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.976" endtime="20201110 08:34:41.284"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.975" endtime="20201110 08:34:41.285"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:41.289" level="INFO">${RESULT} = [{'time': 0.019843375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.725000000000052e-05, 'source_diff': 8.725000000000052e-05}, {'time': 0.019945417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:41.286" endtime="20201110 08:34:41.290"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:41.304" level="INFO">${ACCURACY} = {'source_diff': [8.725000000000052e-05, 8.737500000000065e-05, 8.757000000000209e-05, 8.713899999999997e-05, 8.684800000000048e-05, 8.682000000000134e-05, 8.745900000000154e-05, 8.758299999999872e-05,...</msg>
<status status="PASS" starttime="20201110 08:34:41.290" endtime="20201110 08:34:41.305"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:41.309" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201110 08:34:41.308" endtime="20201110 08:34:41.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:41.311" level="INFO">VALUE: [8.725000000000052e-05, 8.737500000000065e-05, 8.757000000000209e-05, 8.713899999999997e-05, 8.684800000000048e-05, 8.682000000000134e-05, 8.745900000000154e-05, 8.758299999999872e-05, 8.6847000000001e-05, 8.722200000000138e-05, 8.722200000000138e-05, 8.745799999999859e-05, 8.682000000000134e-05, 8.740299999999979e-05, 8.694399999999852e-05, 8.702799999999941e-05, 8.686100000000058e-05, 8.731999999999837e-05, 8.719399999999877e-05, 8.76669999999996e-05, 8.690299999999929e-05, 8.708300000000169e-05, 8.752799999999991e-05, 8.73189999999989e-05, 8.763900000000047e-05, 8.672200000000088e-05, 8.718099999999868e-05, 8.672200000000088e-05, 8.751400000000034e-05, 8.679199999999873e-05, 8.68059999999983e-05, 8.725000000000052e-05, 8.766600000000013e-05, 8.748599999999773e-05, 8.677699999999969e-05, 8.702699999999994e-05, 8.754100000000001e-05, 8.738899999999675e-05, 8.740299999999979e-05, 8.747200000000163e-05, 8.709699999999779e-05, 8.675000000000002e-05, 8.722199999999791e-05, 8.6944999999998e-05, 8.654200000000195e-05, 8.679199999999873e-05, 8.705600000000202e-05, 8.6847000000001e-05, 8.684699999999754e-05, 8.705500000000255e-05]</msg>
<status status="PASS" starttime="20201110 08:34:41.310" endtime="20201110 08:34:41.312"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.305" endtime="20201110 08:34:41.313"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:41.315" endtime="20201110 08:34:41.316"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:41.318" endtime="20201110 08:34:41.338"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.317" endtime="20201110 08:34:41.338"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.313" endtime="20201110 08:34:41.339"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.939" endtime="20201110 08:34:41.339"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.938" endtime="20201110 08:34:41.339"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:41.348" endtime="20201110 08:34:41.368"></status>
</kw>
<msg timestamp="20201110 08:34:41.369" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:41.346" endtime="20201110 08:34:41.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:41.371" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:41.370" endtime="20201110 08:34:41.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:41.372" endtime="20201110 08:34:41.375"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.344" endtime="20201110 08:34:41.375"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.341" endtime="20201110 08:34:41.376"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:41.382" endtime="20201110 08:34:41.668"></status>
</kw>
<msg timestamp="20201110 08:34:41.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019749764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019838083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:41.381" endtime="20201110 08:34:41.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:41.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019749764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019838083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:41.672" endtime="20201110 08:34:41.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:41.680" endtime="20201110 08:34:41.682"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.378" endtime="20201110 08:34:41.682"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.376" endtime="20201110 08:34:41.683"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:41.687" level="INFO">${RESULT} = [{'time': 0.019838083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.83189999999999e-05, 'source_diff': 8.83189999999999e-05}, {'time': 0.019940097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:34:41.684" endtime="20201110 08:34:41.687"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:41.701" level="INFO">${ACCURACY} = {'source_diff': [8.83189999999999e-05, 8.816600000000063e-05, 8.773600000000145e-05, 8.816699999999664e-05, 8.775000000000102e-05, 8.841700000000036e-05, 8.776400000000059e-05, 8.81670000000001e-05, 8...</msg>
<status status="PASS" starttime="20201110 08:34:41.688" endtime="20201110 08:34:41.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:41.705" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201110 08:34:41.704" endtime="20201110 08:34:41.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:41.708" level="INFO">VALUE: [8.83189999999999e-05, 8.816600000000063e-05, 8.773600000000145e-05, 8.816699999999664e-05, 8.775000000000102e-05, 8.841700000000036e-05, 8.776400000000059e-05, 8.81670000000001e-05, 8.827800000000066e-05, 8.865300000000104e-05, 8.804199999999998e-05, 8.784699999999854e-05, 8.865200000000156e-05, 8.827699999999772e-05, 8.86250000000019e-05, 8.774999999999755e-05, 8.813900000000097e-05, 8.784700000000201e-05, 8.775000000000102e-05, 8.777800000000016e-05, 8.845799999999959e-05, 8.829200000000023e-05, 8.837500000000165e-05, 8.838899999999775e-05, 8.775000000000102e-05, 8.79860000000017e-05, 8.86519999999981e-05, 8.829100000000076e-05, 8.758299999999872e-05, 8.827800000000066e-05, 8.81670000000001e-05, 8.818100000000315e-05, 8.804199999999998e-05, 8.854200000000048e-05, 8.811100000000183e-05, 8.786200000000105e-05, 8.811199999999783e-05, 8.845899999999907e-05, 8.825000000000152e-05, 8.840200000000131e-05, 8.808299999999922e-05, 8.791699999999986e-05, 8.834700000000251e-05, 8.788900000000072e-05, 8.855600000000005e-05, 8.827800000000066e-05, 8.834699999999904e-05, 8.773599999999798e-05, 8.852799999999744e-05, 8.841700000000036e-05]</msg>
<status status="PASS" starttime="20201110 08:34:41.706" endtime="20201110 08:34:41.708"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.702" endtime="20201110 08:34:41.709"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:41.711" endtime="20201110 08:34:41.713"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:41.715" endtime="20201110 08:34:41.734"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.713" endtime="20201110 08:34:41.735"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.710" endtime="20201110 08:34:41.735"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.340" endtime="20201110 08:34:41.735"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.339" endtime="20201110 08:34:41.735"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:41.744" endtime="20201110 08:34:41.765"></status>
</kw>
<msg timestamp="20201110 08:34:41.765" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:41.743" endtime="20201110 08:34:41.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:41.767" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:41.766" endtime="20201110 08:34:41.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:41.769" endtime="20201110 08:34:41.771"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.740" endtime="20201110 08:34:41.772"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.738" endtime="20201110 08:34:41.773"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:41.779" endtime="20201110 08:34:42.065"></status>
</kw>
<msg timestamp="20201110 08:34:42.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019708847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019798153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:41.778" endtime="20201110 08:34:42.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:42.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019708847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019798153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:42.069" endtime="20201110 08:34:42.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:42.078" endtime="20201110 08:34:42.079"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.775" endtime="20201110 08:34:42.080"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.773" endtime="20201110 08:34:42.080"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:42.084" level="INFO">${RESULT} = [{'time': 0.019798153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.930599999999733e-05, 'source_diff': 8.930599999999733e-05}, {'time': 0.019902167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:42.081" endtime="20201110 08:34:42.085"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:42.098" level="INFO">${ACCURACY} = {'source_diff': [8.930599999999733e-05, 8.870899999999932e-05, 8.943100000000093e-05, 8.938900000000222e-05, 8.909699999999979e-05, 8.901399999999837e-05, 8.951300000000287e-05, 8.954100000000201e-05,...</msg>
<status status="PASS" starttime="20201110 08:34:42.085" endtime="20201110 08:34:42.098"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:42.103" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201110 08:34:42.102" endtime="20201110 08:34:42.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:42.105" level="INFO">VALUE: [8.930599999999733e-05, 8.870899999999932e-05, 8.943100000000093e-05, 8.938900000000222e-05, 8.909699999999979e-05, 8.901399999999837e-05, 8.951300000000287e-05, 8.954100000000201e-05, 8.958300000000072e-05, 8.920800000000034e-05, 8.898599999999923e-05, 8.933399999999994e-05, 8.963900000000247e-05, 8.915300000000154e-05, 8.897200000000313e-05, 8.958400000000019e-05, 8.883399999999944e-05, 8.96670000000016e-05, 8.924999999999905e-05, 8.955500000000158e-05, 8.941600000000188e-05, 8.890299999999782e-05, 8.886099999999911e-05, 8.895800000000009e-05, 8.934700000000004e-05, 8.891700000000086e-05, 8.856999999999962e-05, 8.912499999999893e-05, 8.936099999999961e-05, 8.948599999999973e-05, 8.902800000000141e-05, 8.936099999999961e-05, 8.941599999999841e-05, 8.966599999999866e-05, 8.890299999999782e-05, 8.915299999999807e-05, 8.886099999999911e-05, 8.922199999999991e-05, 8.91250000000024e-05, 8.877799999999769e-05, 8.905499999999761e-05, 8.920899999999982e-05, 8.938899999999875e-05, 8.897299999999914e-05, 8.91519999999986e-05, 8.954099999999854e-05, 8.955500000000158e-05, 8.883299999999997e-05, 8.918100000000068e-05, 8.888899999999825e-05]</msg>
<status status="PASS" starttime="20201110 08:34:42.104" endtime="20201110 08:34:42.106"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.099" endtime="20201110 08:34:42.106"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:42.109" endtime="20201110 08:34:42.110"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:42.112" endtime="20201110 08:34:42.131"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.111" endtime="20201110 08:34:42.132"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.107" endtime="20201110 08:34:42.132"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.736" endtime="20201110 08:34:42.133"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.736" endtime="20201110 08:34:42.133"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:42.141" endtime="20201110 08:34:42.162"></status>
</kw>
<msg timestamp="20201110 08:34:42.163" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:42.140" endtime="20201110 08:34:42.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:42.165" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:42.164" endtime="20201110 08:34:42.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:42.166" endtime="20201110 08:34:42.169"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.137" endtime="20201110 08:34:42.169"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.135" endtime="20201110 08:34:42.170"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:42.176" endtime="20201110 08:34:42.462"></status>
</kw>
<msg timestamp="20201110 08:34:42.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019578014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019668236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:42.175" endtime="20201110 08:34:42.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:42.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019578014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019668236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:42.466" endtime="20201110 08:34:42.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:42.475" endtime="20201110 08:34:42.476"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.172" endtime="20201110 08:34:42.477"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.170" endtime="20201110 08:34:42.477"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:42.481" level="INFO">${RESULT} = [{'time': 0.019668236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.022199999999744e-05, 'source_diff': 9.022199999999744e-05}, {'time': 0.01977325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:34:42.478" endtime="20201110 08:34:42.481"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:42.495" level="INFO">${ACCURACY} = {'source_diff': [9.022199999999744e-05, 8.991699999999839e-05, 8.970800000000084e-05, 9.05000000000003e-05, 8.972200000000041e-05, 9.016699999999864e-05, 9.01389999999995e-05, 9.065299999999957e-05, 8...</msg>
<status status="PASS" starttime="20201110 08:34:42.482" endtime="20201110 08:34:42.495"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:42.499" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201110 08:34:42.498" endtime="20201110 08:34:42.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:42.502" level="INFO">VALUE: [9.022199999999744e-05, 8.991699999999839e-05, 8.970800000000084e-05, 9.05000000000003e-05, 8.972200000000041e-05, 9.016699999999864e-05, 9.01389999999995e-05, 9.065299999999957e-05, 8.976399999999912e-05, 9.015200000000306e-05, 9.008299999999775e-05, 8.99999999999998e-05, 8.96800000000017e-05, 8.969400000000127e-05, 9.054199999999901e-05, 8.970800000000084e-05, 8.998600000000023e-05, 9.0639e-05, 8.976399999999912e-05, 8.976399999999912e-05, 9.061100000000086e-05, 9.026399999999962e-05, 9.007000000000112e-05, 9.040299999999932e-05, 9.012499999999993e-05, 8.988900000000272e-05, 8.977800000000216e-05, 9.061099999999739e-05, 9.017999999999873e-05, 9.04450000000015e-05, 8.976399999999912e-05, 9.040299999999932e-05, 8.972299999999989e-05, 9.015299999999907e-05, 9.004099999999904e-05, 8.991599999999891e-05, 9.047200000000116e-05, 8.990199999999934e-05, 8.984699999999707e-05, 8.990299999999882e-05, 8.981899999999793e-05, 9.01389999999995e-05, 8.977800000000216e-05, 8.980599999999783e-05, 9.022200000000091e-05, 8.984800000000001e-05, 9.01670000000021e-05, 8.970900000000032e-05, 9.009699999999732e-05, 9.016599999999916e-05]</msg>
<status status="PASS" starttime="20201110 08:34:42.500" endtime="20201110 08:34:42.503"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.496" endtime="20201110 08:34:42.503"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:42.505" endtime="20201110 08:34:42.507"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:42.509" endtime="20201110 08:34:42.528"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.507" endtime="20201110 08:34:42.529"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.504" endtime="20201110 08:34:42.529"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.134" endtime="20201110 08:34:42.529"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.133" endtime="20201110 08:34:42.530"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:42.538" endtime="20201110 08:34:42.559"></status>
</kw>
<msg timestamp="20201110 08:34:42.559" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:42.536" endtime="20201110 08:34:42.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:42.562" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:42.560" endtime="20201110 08:34:42.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:42.563" endtime="20201110 08:34:42.565"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.534" endtime="20201110 08:34:42.566"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.532" endtime="20201110 08:34:42.566"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:42.573" endtime="20201110 08:34:42.858"></status>
</kw>
<msg timestamp="20201110 08:34:42.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019719208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019810694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:42.571" endtime="20201110 08:34:42.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:42.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019719208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019810694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:42.863" endtime="20201110 08:34:42.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:42.872" endtime="20201110 08:34:42.874"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.569" endtime="20201110 08:34:42.874"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.567" endtime="20201110 08:34:42.875"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:42.879" level="INFO">${RESULT} = [{'time': 0.019810694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.148600000000173e-05, 'source_diff': 9.148600000000173e-05}, {'time': 0.019915681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:42.875" endtime="20201110 08:34:42.879"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:42.893" level="INFO">${ACCURACY} = {'source_diff': [9.148600000000173e-05, 9.0945000000002e-05, 9.102700000000047e-05, 9.16520000000011e-05, 9.084700000000154e-05, 9.091599999999991e-05, 9.166700000000014e-05, 9.125000000000105e-05, 9....</msg>
<status status="PASS" starttime="20201110 08:34:42.879" endtime="20201110 08:34:42.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:42.898" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201110 08:34:42.897" endtime="20201110 08:34:42.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:42.900" level="INFO">VALUE: [9.148600000000173e-05, 9.0945000000002e-05, 9.102700000000047e-05, 9.16520000000011e-05, 9.084700000000154e-05, 9.091599999999991e-05, 9.166700000000014e-05, 9.125000000000105e-05, 9.127800000000019e-05, 9.079199999999926e-05, 9.079199999999926e-05, 9.104199999999951e-05, 9.082000000000187e-05, 9.127800000000019e-05, 9.072200000000141e-05, 9.091599999999991e-05, 9.112500000000093e-05, 9.080500000000283e-05, 9.166700000000014e-05, 9.126400000000062e-05, 9.151400000000087e-05, 9.098600000000123e-05, 9.102800000000341e-05, 9.090299999999982e-05, 9.108399999999822e-05, 9.127800000000019e-05, 9.075000000000055e-05, 9.151400000000087e-05, 9.098600000000123e-05, 9.087499999999721e-05, 9.134699999999857e-05, 9.1639000000001e-05, 9.134699999999857e-05, 9.159699999999882e-05, 9.077799999999969e-05, 9.162500000000143e-05, 9.092999999999948e-05, 9.158399999999872e-05, 9.152800000000044e-05, 9.138900000000075e-05, 9.079099999999979e-05, 9.138900000000075e-05, 9.101400000000037e-05, 9.084699999999807e-05, 9.104100000000004e-05, 9.120799999999887e-05, 9.0945000000002e-05, 9.1639000000001e-05, 9.161100000000186e-05, 9.1332999999999e-05]</msg>
<status status="PASS" starttime="20201110 08:34:42.899" endtime="20201110 08:34:42.901"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.894" endtime="20201110 08:34:42.902"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:42.904" endtime="20201110 08:34:42.905"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:42.907" endtime="20201110 08:34:42.926"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.906" endtime="20201110 08:34:42.927"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.902" endtime="20201110 08:34:42.928"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.530" endtime="20201110 08:34:42.928"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.530" endtime="20201110 08:34:42.928"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:42.936" endtime="20201110 08:34:42.957"></status>
</kw>
<msg timestamp="20201110 08:34:42.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:42.935" endtime="20201110 08:34:42.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:42.960" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:42.958" endtime="20201110 08:34:42.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:42.961" endtime="20201110 08:34:42.963"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.932" endtime="20201110 08:34:42.964"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.930" endtime="20201110 08:34:42.964"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:42.970" endtime="20201110 08:34:43.256"></status>
</kw>
<msg timestamp="20201110 08:34:43.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019587681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019680139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:42.969" endtime="20201110 08:34:43.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:43.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019587681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019680139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:43.260" endtime="20201110 08:34:43.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:43.269" endtime="20201110 08:34:43.270"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.966" endtime="20201110 08:34:43.271"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.965" endtime="20201110 08:34:43.271"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:43.275" level="INFO">${RESULT} = [{'time': 0.019680139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.245800000000012e-05, 'source_diff': 9.245800000000012e-05}, {'time': 0.019785153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:43.272" endtime="20201110 08:34:43.276"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:43.289" level="INFO">${ACCURACY} = {'source_diff': [9.245800000000012e-05, 9.24719999999997e-05, 9.211199999999836e-05, 9.23199999999999e-05, 9.263899999999853e-05, 9.177800000000069e-05, 9.255500000000111e-05, 9.16939999999998e-05, 9....</msg>
<status status="PASS" starttime="20201110 08:34:43.276" endtime="20201110 08:34:43.289"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:43.294" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201110 08:34:43.293" endtime="20201110 08:34:43.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:43.296" level="INFO">VALUE: [9.245800000000012e-05, 9.24719999999997e-05, 9.211199999999836e-05, 9.23199999999999e-05, 9.263899999999853e-05, 9.177800000000069e-05, 9.255500000000111e-05, 9.16939999999998e-05, 9.208299999999975e-05, 9.240300000000132e-05, 9.187499999999821e-05, 9.162500000000143e-05, 9.222200000000291e-05, 9.197200000000266e-05, 9.170800000000284e-05, 9.195900000000257e-05, 9.229200000000076e-05, 9.241700000000089e-05, 9.226400000000162e-05, 9.25269999999985e-05, 9.187499999999821e-05, 9.216700000000064e-05, 9.215300000000107e-05, 9.243100000000046e-05, 9.263899999999853e-05, 9.208299999999975e-05, 9.254200000000101e-05, 9.158399999999872e-05, 9.201400000000137e-05, 9.170899999999885e-05, 9.240199999999837e-05, 9.19719999999992e-05, 9.248600000000273e-05, 9.187500000000168e-05, 9.244400000000055e-05, 9.191700000000039e-05, 9.229200000000076e-05, 9.195799999999962e-05, 9.220799999999987e-05, 9.191700000000039e-05, 9.204200000000051e-05, 9.226400000000162e-05, 9.247299999999917e-05, 9.229200000000076e-05, 9.240300000000132e-05, 9.204100000000104e-05, 9.19719999999992e-05, 9.262499999999896e-05, 9.223599999999901e-05, 9.227800000000119e-05]</msg>
<status status="PASS" starttime="20201110 08:34:43.295" endtime="20201110 08:34:43.297"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.290" endtime="20201110 08:34:43.297"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:43.300" endtime="20201110 08:34:43.301"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:43.303" endtime="20201110 08:34:43.323"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.302" endtime="20201110 08:34:43.323"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.298" endtime="20201110 08:34:43.324"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.929" endtime="20201110 08:34:43.324"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.928" endtime="20201110 08:34:43.324"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:43.333" endtime="20201110 08:34:43.353"></status>
</kw>
<msg timestamp="20201110 08:34:43.354" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:43.331" endtime="20201110 08:34:43.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:43.356" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:43.355" endtime="20201110 08:34:43.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:43.357" endtime="20201110 08:34:43.360"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.328" endtime="20201110 08:34:43.360"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.326" endtime="20201110 08:34:43.361"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:43.367" endtime="20201110 08:34:43.654"></status>
</kw>
<msg timestamp="20201110 08:34:43.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019506264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019599042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:43.366" endtime="20201110 08:34:43.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:43.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019506264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019599042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:43.658" endtime="20201110 08:34:43.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:43.666" endtime="20201110 08:34:43.668"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.363" endtime="20201110 08:34:43.668"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.361" endtime="20201110 08:34:43.669"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:43.673" level="INFO">${RESULT} = [{'time': 0.019599042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.277800000000169e-05, 'source_diff': 9.277800000000169e-05}, {'time': 0.019704056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:43.669" endtime="20201110 08:34:43.673"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:43.686" level="INFO">${ACCURACY} = {'source_diff': [9.277800000000169e-05, 9.29590000000001e-05, 9.319399999999783e-05, 9.333299999999753e-05, 9.354099999999907e-05, 9.316699999999817e-05, 9.326400000000262e-05, 9.293100000000096e-05, ...</msg>
<status status="PASS" starttime="20201110 08:34:43.674" endtime="20201110 08:34:43.687"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:43.691" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201110 08:34:43.690" endtime="20201110 08:34:43.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:43.694" level="INFO">VALUE: [9.277800000000169e-05, 9.29590000000001e-05, 9.319399999999783e-05, 9.333299999999753e-05, 9.354099999999907e-05, 9.316699999999817e-05, 9.326400000000262e-05, 9.293100000000096e-05, 9.302800000000194e-05, 9.295800000000062e-05, 9.290299999999835e-05, 9.272299999999942e-05, 9.302800000000194e-05, 9.304100000000204e-05, 9.318000000000173e-05, 9.272199999999994e-05, 9.311099999999989e-05, 9.358300000000125e-05, 9.358300000000125e-05, 9.324999999999958e-05, 9.366699999999867e-05, 9.290300000000182e-05, 9.30139999999989e-05, 9.362499999999996e-05, 9.358400000000072e-05, 9.283399999999997e-05, 9.306900000000118e-05, 9.311099999999989e-05, 9.267999999999776e-05, 9.318100000000121e-05, 9.301400000000237e-05, 9.327799999999872e-05, 9.312499999999946e-05, 9.284700000000007e-05, 9.272199999999994e-05, 9.348600000000026e-05, 9.298599999999976e-05, 9.344500000000103e-05, 9.336100000000014e-05, 9.327699999999925e-05, 9.35139999999994e-05, 9.330500000000186e-05, 9.309700000000032e-05, 9.3333000000001e-05, 9.343100000000146e-05, 9.36529999999991e-05, 9.304199999999804e-05, 9.30139999999989e-05, 9.319500000000078e-05, 9.311099999999989e-05]</msg>
<status status="PASS" starttime="20201110 08:34:43.692" endtime="20201110 08:34:43.694"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.687" endtime="20201110 08:34:43.695"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:43.697" endtime="20201110 08:34:43.698"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:43.700" endtime="20201110 08:34:43.720"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.699" endtime="20201110 08:34:43.720"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.695" endtime="20201110 08:34:43.721"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.325" endtime="20201110 08:34:43.721"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.324" endtime="20201110 08:34:43.721"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:43.730" endtime="20201110 08:34:43.751"></status>
</kw>
<msg timestamp="20201110 08:34:43.751" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:43.728" endtime="20201110 08:34:43.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:43.754" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:43.752" endtime="20201110 08:34:43.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:43.755" endtime="20201110 08:34:43.757"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.726" endtime="20201110 08:34:43.758"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.724" endtime="20201110 08:34:43.758"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:43.765" endtime="20201110 08:34:44.052"></status>
</kw>
<msg timestamp="20201110 08:34:44.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019602653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019696639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:43.763" endtime="20201110 08:34:44.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:44.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019602653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019696639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:44.056" endtime="20201110 08:34:44.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:44.064" endtime="20201110 08:34:44.066"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.761" endtime="20201110 08:34:44.066"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.759" endtime="20201110 08:34:44.067"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:44.071" level="INFO">${RESULT} = [{'time': 0.019696639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.39859999999973e-05, 'source_diff': 9.39859999999973e-05}, {'time': 0.019803625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:34:44.068" endtime="20201110 08:34:44.071"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:44.085" level="INFO">${ACCURACY} = {'source_diff': [9.39859999999973e-05, 9.387499999999674e-05, 9.443099999999899e-05, 9.41529999999996e-05, 9.377699999999975e-05, 9.402799999999947e-05, 9.459700000000182e-05, 9.398700000000024e-05, 9...</msg>
<status status="PASS" starttime="20201110 08:34:44.072" endtime="20201110 08:34:44.085"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:44.089" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201110 08:34:44.088" endtime="20201110 08:34:44.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:44.092" level="INFO">VALUE: [9.39859999999973e-05, 9.387499999999674e-05, 9.443099999999899e-05, 9.41529999999996e-05, 9.377699999999975e-05, 9.402799999999947e-05, 9.459700000000182e-05, 9.398700000000024e-05, 9.408300000000175e-05, 9.434700000000157e-05, 9.457000000000215e-05, 9.416700000000264e-05, 9.408300000000175e-05, 9.427799999999972e-05, 9.386100000000064e-05, 9.422199999999797e-05, 9.405599999999861e-05, 9.422299999999745e-05, 9.461200000000086e-05, 9.426300000000068e-05, 9.38469999999976e-05, 9.422199999999797e-05, 9.41529999999996e-05, 9.409700000000132e-05, 9.402800000000294e-05, 9.402799999999947e-05, 9.372200000000094e-05, 9.373600000000051e-05, 9.426400000000015e-05, 9.425000000000058e-05, 9.377799999999922e-05, 9.41659999999997e-05, 9.386100000000064e-05, 9.452799999999997e-05, 9.386100000000064e-05, 9.461100000000139e-05, 9.436099999999767e-05, 9.429100000000329e-05, 9.427799999999972e-05, 9.422200000000144e-05, 9.40139999999999e-05, 9.405600000000208e-05, 9.406999999999818e-05, 9.39720000000012e-05, 9.434700000000157e-05, 9.41940000000023e-05, 9.458300000000225e-05, 9.395800000000162e-05, 9.404200000000251e-05, 9.426400000000015e-05]</msg>
<status status="PASS" starttime="20201110 08:34:44.090" endtime="20201110 08:34:44.092"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.085" endtime="20201110 08:34:44.093"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:44.095" endtime="20201110 08:34:44.096"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:44.098" endtime="20201110 08:34:44.118"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.097" endtime="20201110 08:34:44.118"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.094" endtime="20201110 08:34:44.119"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.722" endtime="20201110 08:34:44.119"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.722" endtime="20201110 08:34:44.119"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:44.128" endtime="20201110 08:34:44.149"></status>
</kw>
<msg timestamp="20201110 08:34:44.149" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:44.126" endtime="20201110 08:34:44.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:44.152" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:44.150" endtime="20201110 08:34:44.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:44.153" endtime="20201110 08:34:44.155"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.124" endtime="20201110 08:34:44.156"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.122" endtime="20201110 08:34:44.156"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:44.163" endtime="20201110 08:34:44.448"></status>
</kw>
<msg timestamp="20201110 08:34:44.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019714375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019809917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:44.161" endtime="20201110 08:34:44.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:44.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019714375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019809917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:44.452" endtime="20201110 08:34:44.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:44.461" endtime="20201110 08:34:44.462"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.159" endtime="20201110 08:34:44.463"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.157" endtime="20201110 08:34:44.463"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:44.467" level="INFO">${RESULT} = [{'time': 0.019809917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.554200000000054e-05, 'source_diff': 9.554200000000054e-05}, {'time': 0.019918931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:44.464" endtime="20201110 08:34:44.468"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:44.482" level="INFO">${ACCURACY} = {'source_diff': [9.554200000000054e-05, 9.545899999999913e-05, 9.483400000000197e-05, 9.519399999999983e-05, 9.569499999999981e-05, 9.497199999999872e-05, 9.48469999999986e-05, 9.479199999999979e-05, ...</msg>
<status status="PASS" starttime="20201110 08:34:44.468" endtime="20201110 08:34:44.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:44.486" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201110 08:34:44.485" endtime="20201110 08:34:44.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:44.489" level="INFO">VALUE: [9.554200000000054e-05, 9.545899999999913e-05, 9.483400000000197e-05, 9.519399999999983e-05, 9.569499999999981e-05, 9.497199999999872e-05, 9.48469999999986e-05, 9.479199999999979e-05, 9.499999999999786e-05, 9.552800000000097e-05, 9.536099999999867e-05, 9.483299999999903e-05, 9.490300000000035e-05, 9.534799999999857e-05, 9.491699999999992e-05, 9.48339999999985e-05, 9.49019999999974e-05, 9.479199999999979e-05, 9.491699999999992e-05, 9.505500000000014e-05, 9.533299999999953e-05, 9.504200000000004e-05, 9.511100000000189e-05, 9.495800000000262e-05, 9.472300000000142e-05, 9.559800000000229e-05, 9.500000000000133e-05, 9.55270000000015e-05, 9.483299999999903e-05, 9.538799999999834e-05, 9.500000000000133e-05, 9.565299999999763e-05, 9.509699999999885e-05, 9.550000000000183e-05, 9.49859999999983e-05, 9.502800000000047e-05, 9.519499999999931e-05, 9.540299999999738e-05, 9.495899999999863e-05, 9.508399999999875e-05, 9.483400000000197e-05, 9.47079999999989e-05, 9.50409999999971e-05, 9.47079999999989e-05, 9.540299999999738e-05, 9.552800000000097e-05, 9.48469999999986e-05, 9.527800000000072e-05, 9.526400000000115e-05, 9.499999999999786e-05]</msg>
<status status="PASS" starttime="20201110 08:34:44.488" endtime="20201110 08:34:44.490"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.483" endtime="20201110 08:34:44.490"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:44.493" endtime="20201110 08:34:44.494"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:44.496" endtime="20201110 08:34:44.515"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.494" endtime="20201110 08:34:44.516"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.491" endtime="20201110 08:34:44.516"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.120" endtime="20201110 08:34:44.517"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.120" endtime="20201110 08:34:44.517"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:44.525" endtime="20201110 08:34:44.546"></status>
</kw>
<msg timestamp="20201110 08:34:44.547" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:44.524" endtime="20201110 08:34:44.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:44.549" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:44.548" endtime="20201110 08:34:44.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:44.550" endtime="20201110 08:34:44.553"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.521" endtime="20201110 08:34:44.554"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.519" endtime="20201110 08:34:44.554"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:44.560" endtime="20201110 08:34:44.852"></status>
</kw>
<msg timestamp="20201110 08:34:44.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019586153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019682375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:44.559" endtime="20201110 08:34:44.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:44.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019586153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019682375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:44.856" endtime="20201110 08:34:44.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:44.865" endtime="20201110 08:34:44.866"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.556" endtime="20201110 08:34:44.867"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.555" endtime="20201110 08:34:44.867"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:44.871" level="INFO">${RESULT} = [{'time': 0.019682375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.622199999999997e-05, 'source_diff': 9.622199999999997e-05}, {'time': 0.019792361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:44.868" endtime="20201110 08:34:44.872"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:44.885" level="INFO">${ACCURACY} = {'source_diff': [9.622199999999997e-05, 9.663900000000253e-05, 9.627800000000172e-05, 9.640299999999838e-05, 9.61530000000016e-05, 9.627799999999825e-05, 9.661199999999939e-05, 9.581900000000046e-05, ...</msg>
<status status="PASS" starttime="20201110 08:34:44.872" endtime="20201110 08:34:44.885"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:44.890" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201110 08:34:44.889" endtime="20201110 08:34:44.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:44.892" level="INFO">VALUE: [9.622199999999997e-05, 9.663900000000253e-05, 9.627800000000172e-05, 9.640299999999838e-05, 9.61530000000016e-05, 9.627799999999825e-05, 9.661199999999939e-05, 9.581900000000046e-05, 9.595800000000015e-05, 9.602699999999853e-05, 9.652699999999903e-05, 9.608300000000028e-05, 9.622299999999945e-05, 9.663900000000253e-05, 9.643099999999752e-05, 9.665299999999863e-05, 9.595899999999963e-05, 9.58469999999996e-05, 9.61669999999977e-05, 9.599999999999886e-05, 9.638900000000228e-05, 9.58059999999969e-05, 9.590299999999788e-05, 9.58469999999996e-05, 9.640300000000185e-05, 9.663900000000253e-05, 9.593100000000049e-05, 9.595800000000015e-05, 9.659700000000035e-05, 9.581999999999993e-05, 9.63470000000001e-05, 9.608399999999975e-05, 9.613899999999856e-05, 9.593000000000101e-05, 9.638799999999934e-05, 9.640200000000237e-05, 9.616700000000117e-05, 9.654199999999807e-05, 9.569399999999686e-05, 9.644399999999761e-05, 9.665299999999863e-05, 9.601399999999843e-05, 9.672200000000047e-05, 9.641700000000142e-05, 9.65409999999986e-05, 9.661099999999992e-05, 9.615199999999866e-05, 9.659700000000035e-05, 9.619400000000083e-05, 9.666700000000167e-05]</msg>
<status status="PASS" starttime="20201110 08:34:44.891" endtime="20201110 08:34:44.893"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.886" endtime="20201110 08:34:44.893"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:44.896" endtime="20201110 08:34:44.897"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:44.899" endtime="20201110 08:34:44.918"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.897" endtime="20201110 08:34:44.919"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.894" endtime="20201110 08:34:44.919"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.518" endtime="20201110 08:34:44.920"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.517" endtime="20201110 08:34:44.920"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:44.936" endtime="20201110 08:34:44.963"></status>
</kw>
<msg timestamp="20201110 08:34:44.964" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:44.933" endtime="20201110 08:34:44.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:44.969" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:44.966" endtime="20201110 08:34:44.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:44.972" endtime="20201110 08:34:44.977"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.928" endtime="20201110 08:34:44.978"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.923" endtime="20201110 08:34:44.979"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:44.992" endtime="20201110 08:34:45.283"></status>
</kw>
<msg timestamp="20201110 08:34:45.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028760986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028858431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:44.989" endtime="20201110 08:34:45.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:45.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028760986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028858431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:45.287" endtime="20201110 08:34:45.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:45.296" endtime="20201110 08:34:45.297"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.984" endtime="20201110 08:34:45.298"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.980" endtime="20201110 08:34:45.298"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:45.302" level="INFO">${RESULT} = [{'time': 0.028858431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.744500000000156e-05, 'source_diff': 9.744500000000156e-05}, {'time': 0.028969431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:45.299" endtime="20201110 08:34:45.303"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:45.316" level="INFO">${ACCURACY} = {'source_diff': [9.744500000000156e-05, 9.7027999999999e-05, 9.741600000000294e-05, 9.727799999999925e-05, 9.691700000000192e-05, 9.736100000000067e-05, 9.734699999999763e-05, 9.731900000000196e-05, 9...</msg>
<status status="PASS" starttime="20201110 08:34:45.303" endtime="20201110 08:34:45.316"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:45.320" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201110 08:34:45.319" endtime="20201110 08:34:45.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:45.323" level="INFO">VALUE: [9.744500000000156e-05, 9.7027999999999e-05, 9.741600000000294e-05, 9.727799999999925e-05, 9.691700000000192e-05, 9.736100000000067e-05, 9.734699999999763e-05, 9.731900000000196e-05, 9.758300000000178e-05, 9.718099999999827e-05, 9.740300000000285e-05, 9.681999999999746e-05, 9.690299999999888e-05, 9.71530000000026e-05, 9.74019999999999e-05, 9.702699999999953e-05, 9.736100000000067e-05, 9.708300000000128e-05, 9.713899999999956e-05, 9.691699999999845e-05, 9.720799999999793e-05, 9.695900000000063e-05, 9.740300000000285e-05, 9.763900000000353e-05, 9.680499999999842e-05, 9.744400000000208e-05, 9.683299999999756e-05, 9.706899999999824e-05, 9.656899999999774e-05, 9.694400000000158e-05, 9.680499999999842e-05, 9.701400000000637e-05, 9.75409999999996e-05, 9.722199999999404e-05, 9.736100000000414e-05, 9.677799999999875e-05, 9.740200000000337e-05, 9.712500000000346e-05, 9.738799999999687e-05, 9.722200000000097e-05, 9.751400000000687e-05, 9.759699999999788e-05, 9.668000000000176e-05, 9.744500000000156e-05, 9.768100000000224e-05, 9.74860000000008e-05, 9.745800000000165e-05, 9.704199999999857e-05, 9.681999999999746e-05, 9.740299999999591e-05]</msg>
<status status="PASS" starttime="20201110 08:34:45.321" endtime="20201110 08:34:45.324"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.317" endtime="20201110 08:34:45.324"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:45.326" endtime="20201110 08:34:45.328"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:45.330" endtime="20201110 08:34:45.349"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.328" endtime="20201110 08:34:45.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.325" endtime="20201110 08:34:45.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.921" endtime="20201110 08:34:45.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.920" endtime="20201110 08:34:45.351"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:45.360" endtime="20201110 08:34:45.381"></status>
</kw>
<msg timestamp="20201110 08:34:45.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:45.359" endtime="20201110 08:34:45.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:45.384" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:45.382" endtime="20201110 08:34:45.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:45.385" endtime="20201110 08:34:45.387"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.356" endtime="20201110 08:34:45.388"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.353" endtime="20201110 08:34:45.388"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:45.395" endtime="20201110 08:34:45.680"></status>
</kw>
<msg timestamp="20201110 08:34:45.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020849722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020948333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:45.393" endtime="20201110 08:34:45.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:45.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020849722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020948333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:45.685" endtime="20201110 08:34:45.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:45.693" endtime="20201110 08:34:45.695"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.390" endtime="20201110 08:34:45.695"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.389" endtime="20201110 08:34:45.696"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:45.700" level="INFO">${RESULT} = [{'time': 0.020948333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.861099999999845e-05, 'source_diff': 9.861099999999845e-05}, {'time': 0.021061333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:45.696" endtime="20201110 08:34:45.700"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:45.713" level="INFO">${ACCURACY} = {'source_diff': [9.861099999999845e-05, 9.786100000000117e-05, 9.85280000000005e-05, 9.79860000000013e-05, 9.779199999999932e-05, 9.788900000000031e-05, 9.826400000000068e-05, 9.793099999999902e-05, 9...</msg>
<status status="PASS" starttime="20201110 08:34:45.701" endtime="20201110 08:34:45.713"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:45.718" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201110 08:34:45.717" endtime="20201110 08:34:45.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:45.720" level="INFO">VALUE: [9.861099999999845e-05, 9.786100000000117e-05, 9.85280000000005e-05, 9.79860000000013e-05, 9.779199999999932e-05, 9.788900000000031e-05, 9.826400000000068e-05, 9.793099999999902e-05, 9.788900000000031e-05, 9.797200000000172e-05, 9.78609999999977e-05, 9.809700000000185e-05, 9.78470000000016e-05, 9.788899999999684e-05, 9.769399999999887e-05, 9.841700000000342e-05, 9.833299999999906e-05, 9.788900000000031e-05, 9.797199999999825e-05, 9.859800000000182e-05, 9.777799999999975e-05, 9.850000000000136e-05, 9.773600000000104e-05, 9.822200000000197e-05, 9.813900000000056e-05, 9.859699999999888e-05, 9.788900000000031e-05, 9.780600000000236e-05, 9.775000000000061e-05, 9.775000000000061e-05, 9.822300000000145e-05, 9.78479999999976e-05, 9.78340000000015e-05, 9.859799999999835e-05, 9.765299999999963e-05, 9.859700000000235e-05, 9.862499999999802e-05, 9.863899999999759e-05, 9.773600000000104e-05, 9.797199999999825e-05, 9.85280000000005e-05, 9.826400000000068e-05, 9.829199999999982e-05, 9.79860000000013e-05, 9.79860000000013e-05, 9.825000000000111e-05, 9.78470000000016e-05, 9.830499999999992e-05, 9.808300000000228e-05, 9.820799999999894e-05]</msg>
<status status="PASS" starttime="20201110 08:34:45.719" endtime="20201110 08:34:45.721"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.714" endtime="20201110 08:34:45.721"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:45.724" endtime="20201110 08:34:45.725"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:45.727" endtime="20201110 08:34:45.746"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.725" endtime="20201110 08:34:45.747"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.722" endtime="20201110 08:34:45.747"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.351" endtime="20201110 08:34:45.748"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.351" endtime="20201110 08:34:45.748"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:45.756" endtime="20201110 08:34:45.777"></status>
</kw>
<msg timestamp="20201110 08:34:45.778" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:45.755" endtime="20201110 08:34:45.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:45.780" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:45.779" endtime="20201110 08:34:45.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:45.781" endtime="20201110 08:34:45.784"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.752" endtime="20201110 08:34:45.784"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.750" endtime="20201110 08:34:45.785"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:45.791" endtime="20201110 08:34:46.076"></status>
</kw>
<msg timestamp="20201110 08:34:46.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019699819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019799486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:45.789" endtime="20201110 08:34:46.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:46.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019699819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019799486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:46.080" endtime="20201110 08:34:46.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:46.088" endtime="20201110 08:34:46.090"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.787" endtime="20201110 08:34:46.090"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.785" endtime="20201110 08:34:46.091"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:46.095" level="INFO">${RESULT} = [{'time': 0.019799486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.96670000000012e-05, 'source_diff': 9.96670000000012e-05}, {'time': 0.0199115, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9...</msg>
<status status="PASS" starttime="20201110 08:34:46.091" endtime="20201110 08:34:46.095"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:46.109" level="INFO">${ACCURACY} = {'source_diff': [9.96670000000012e-05, 9.877799999999728e-05, 9.940299999999791e-05, 9.941700000000095e-05, 9.881999999999946e-05, 9.966699999999773e-05, 9.929199999999735e-05, 9.89159999999975e-05, 9...</msg>
<status status="PASS" starttime="20201110 08:34:46.096" endtime="20201110 08:34:46.110"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:46.114" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201110 08:34:46.113" endtime="20201110 08:34:46.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:46.116" level="INFO">VALUE: [9.96670000000012e-05, 9.877799999999728e-05, 9.940299999999791e-05, 9.941700000000095e-05, 9.881999999999946e-05, 9.966699999999773e-05, 9.929199999999735e-05, 9.89159999999975e-05, 9.90410000000011e-05, 9.916600000000123e-05, 9.91800000000008e-05, 9.895799999999969e-05, 9.8721999999999e-05, 9.884699999999913e-05, 9.958300000000031e-05, 9.926400000000168e-05, 9.870899999999891e-05, 9.905600000000014e-05, 9.874999999999814e-05, 9.870899999999891e-05, 9.937499999999877e-05, 9.965199999999869e-05, 9.890199999999794e-05, 9.954099999999813e-05, 9.873600000000204e-05, 9.936100000000267e-05, 9.930599999999692e-05, 9.898599999999882e-05, 9.891600000000098e-05, 9.93060000000004e-05, 9.895899999999916e-05, 9.877800000000075e-05, 9.916600000000123e-05, 9.948599999999932e-05, 9.947199999999976e-05, 9.876399999999771e-05, 9.904200000000057e-05, 9.958300000000031e-05, 9.919400000000037e-05, 9.912499999999852e-05, 9.908400000000275e-05, 9.929200000000082e-05, 9.893100000000002e-05, 9.901400000000143e-05, 9.897199999999926e-05, 9.931900000000049e-05, 9.966600000000173e-05, 9.940199999999844e-05, 9.909699999999938e-05, 9.890300000000088e-05]</msg>
<status status="PASS" starttime="20201110 08:34:46.115" endtime="20201110 08:34:46.123"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.110" endtime="20201110 08:34:46.124"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:46.126" endtime="20201110 08:34:46.127"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:46.130" endtime="20201110 08:34:46.149"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.128" endtime="20201110 08:34:46.150"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.125" endtime="20201110 08:34:46.150"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.749" endtime="20201110 08:34:46.150"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.748" endtime="20201110 08:34:46.150"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:46.159" endtime="20201110 08:34:46.180"></status>
</kw>
<msg timestamp="20201110 08:34:46.180" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:46.158" endtime="20201110 08:34:46.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:46.183" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:46.181" endtime="20201110 08:34:46.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:46.184" endtime="20201110 08:34:46.186"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.155" endtime="20201110 08:34:46.187"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.153" endtime="20201110 08:34:46.187"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:46.194" endtime="20201110 08:34:46.488"></status>
</kw>
<msg timestamp="20201110 08:34:46.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019769167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019868972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:46.192" endtime="20201110 08:34:46.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:46.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019769167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019868972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:46.497" endtime="20201110 08:34:46.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:46.516" endtime="20201110 08:34:46.519"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.190" endtime="20201110 08:34:46.520"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.188" endtime="20201110 08:34:46.521"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:46.530" level="INFO">${RESULT} = [{'time': 0.019868972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.980499999999795e-05, 'source_diff': 9.980499999999795e-05}, {'time': 0.019983917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:46.523" endtime="20201110 08:34:46.530"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:46.548" level="INFO">${ACCURACY} = {'source_diff': [9.980499999999795e-05, 0.00010052799999999903, 9.977799999999828e-05, 0.00010024999999999964, 0.00010045800000000119, 9.969400000000087e-05, 0.0001005280000000025, 9.983300000000056e-...</msg>
<status status="PASS" starttime="20201110 08:34:46.532" endtime="20201110 08:34:46.548"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:46.553" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201110 08:34:46.552" endtime="20201110 08:34:46.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:46.555" level="INFO">VALUE: [9.980499999999795e-05, 0.00010052799999999903, 9.977799999999828e-05, 0.00010024999999999964, 0.00010045800000000119, 9.969400000000087e-05, 0.0001005280000000025, 9.983300000000056e-05, 0.00010051400000000293, 9.984700000000013e-05, 0.00010029199999999835, 0.00010023699999999955, 0.0001000549999999982, 9.983400000000003e-05, 9.990300000000188e-05, 0.0001001800000000018, 9.969400000000087e-05, 0.00010061100000000045, 0.00010008300000000081, 0.00010027799999999878, 0.00010034700000000063, 9.982000000000046e-05, 0.00010048600000000033, 9.969500000000034e-05, 9.975000000000261e-05, 0.00010007000000000071, 0.00010007000000000071, 0.00010030499999999845, 9.983300000000056e-05, 9.970799999999697e-05, 0.00010051399999999946, 0.00010008300000000081, 0.00010047200000000076, 9.969500000000034e-05, 9.970800000000044e-05, 0.00010009799999999985, 0.00010051400000000293, 9.976399999999871e-05, 0.00010011099999999995, 0.00010013899999999909, 0.00010045800000000119, 9.973599999999957e-05, 0.00010061100000000045, 0.0001001939999999979, 0.00010058299999999784, 0.00010009700000000038, 0.00010019500000000084, 0.00010020900000000041, 0.00010011199999999942, 0.000100415999999999]</msg>
<status status="PASS" starttime="20201110 08:34:46.554" endtime="20201110 08:34:46.556"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.549" endtime="20201110 08:34:46.557"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:46.559" endtime="20201110 08:34:46.560"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:46.563" endtime="20201110 08:34:46.582"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.561" endtime="20201110 08:34:46.583"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.557" endtime="20201110 08:34:46.583"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.151" endtime="20201110 08:34:46.583"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.151" endtime="20201110 08:34:46.584"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:46.592" endtime="20201110 08:34:46.613"></status>
</kw>
<msg timestamp="20201110 08:34:46.613" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:46.591" endtime="20201110 08:34:46.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:46.616" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:46.614" endtime="20201110 08:34:46.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:46.617" endtime="20201110 08:34:46.619"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.588" endtime="20201110 08:34:46.620"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.586" endtime="20201110 08:34:46.620"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:46.626" endtime="20201110 08:34:46.913"></status>
</kw>
<msg timestamp="20201110 08:34:46.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019753611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019854583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:46.625" endtime="20201110 08:34:46.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:46.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019753611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019854583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:46.917" endtime="20201110 08:34:46.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:46.925" endtime="20201110 08:34:46.926"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.622" endtime="20201110 08:34:46.927"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.621" endtime="20201110 08:34:46.927"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:46.931" level="INFO">${RESULT} = [{'time': 0.019854583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010097199999999779, 'source_diff': 0.00010097199999999779}, {'time': 0.019967625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:46.928" endtime="20201110 08:34:46.932"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:46.945" level="INFO">${ACCURACY} = {'source_diff': [0.00010097199999999779, 0.00010129199999999935, 0.00010147299999999776, 0.00010070799999999797, 0.00010079199999999885, 0.00010140299999999991, 0.00010144499999999862, 0.0001013059999...</msg>
<status status="PASS" starttime="20201110 08:34:46.932" endtime="20201110 08:34:46.945"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:46.949" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201110 08:34:46.948" endtime="20201110 08:34:46.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:46.952" level="INFO">VALUE: [0.00010097199999999779, 0.00010129199999999935, 0.00010147299999999776, 0.00010070799999999797, 0.00010079199999999885, 0.00010140299999999991, 0.00010144499999999862, 0.00010130599999999892, 0.00010152800000000003, 0.00010116699999999923, 0.00010077699999999981, 0.00010094399999999865, 0.00010159699999999841, 0.00010129200000000282, 0.00010163900000000059, 0.00010151400000000046, 0.00010165300000000016, 0.00010101399999999996, 0.00010147200000000176, 0.00010102799999999953, 0.00010122300000000098, 0.00010159800000000135, 0.000100722000000001, 0.00010137500000000077, 0.00010133300000000206, 0.00010056900000000174, 0.00010122199999999804, 0.00010082000000000146, 0.0001012220000000015, 0.00010106999999999824, 0.00010166699999999973, 0.00010148600000000133, 0.00010147300000000123, 0.00010159799999999788, 0.00010147200000000176, 0.00010148600000000133, 0.00010084700000000113, 0.0001010000000000004, 0.000100722000000001, 0.00010056899999999827, 0.00010090300000000288, 0.00010098600000000083, 0.00010097300000000073, 0.00010140299999999991, 0.00010133399999999806, 0.0001015419999999996, 0.0001012359999999976, 0.000100722000000001, 0.00010134700000000163, 0.00010129100000000335]</msg>
<status status="PASS" starttime="20201110 08:34:46.950" endtime="20201110 08:34:46.952"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.946" endtime="20201110 08:34:46.953"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:46.955" endtime="20201110 08:34:46.956"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:46.959" endtime="20201110 08:34:46.978"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.957" endtime="20201110 08:34:46.979"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.954" endtime="20201110 08:34:46.979"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.584" endtime="20201110 08:34:46.979"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.584" endtime="20201110 08:34:46.979"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:46.988" endtime="20201110 08:34:47.009"></status>
</kw>
<msg timestamp="20201110 08:34:47.010" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:46.986" endtime="20201110 08:34:47.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:47.012" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:47.011" endtime="20201110 08:34:47.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:47.013" endtime="20201110 08:34:47.016"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.984" endtime="20201110 08:34:47.016"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.982" endtime="20201110 08:34:47.017"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:47.023" endtime="20201110 08:34:47.310"></status>
</kw>
<msg timestamp="20201110 08:34:47.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019486944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019589417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:47.022" endtime="20201110 08:34:47.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:47.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019486944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019589417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:47.314" endtime="20201110 08:34:47.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:47.322" endtime="20201110 08:34:47.324"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.019" endtime="20201110 08:34:47.325"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.017" endtime="20201110 08:34:47.325"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:47.329" level="INFO">${RESULT} = [{'time': 0.019589417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010247300000000223, 'source_diff': 0.00010247300000000223}, {'time': 0.019706403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:47.326" endtime="20201110 08:34:47.329"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:47.342" level="INFO">${ACCURACY} = {'source_diff': [0.00010247300000000223, 0.00010233400000000253, 0.00010265300000000116, 0.0001020550000000002, 0.00010220799999999947, 0.00010215200000000119, 0.00010208299999999934, 0.00010183299999...</msg>
<status status="PASS" starttime="20201110 08:34:47.330" endtime="20201110 08:34:47.342"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:47.347" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201110 08:34:47.346" endtime="20201110 08:34:47.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:47.349" level="INFO">VALUE: [0.00010247300000000223, 0.00010233400000000253, 0.00010265300000000116, 0.0001020550000000002, 0.00010220799999999947, 0.00010215200000000119, 0.00010208299999999934, 0.00010183299999999909, 0.0001020550000000002, 0.00010198599999999836, 0.00010197199999999879, 0.00010172199999999854, 0.00010248600000000233, 0.00010183400000000203, 0.0001025559999999967, 0.00010219500000000284, 0.00010227700000000131, 0.00010193000000000008, 0.00010222199999999904, 0.00010244400000000015, 0.0001025420000000006, 0.0001018060000000029, 0.00010177800000000028, 0.00010223600000000208, 0.00010190300000000041, 0.00010229200000000035, 0.00010179199999999985, 0.00010197199999999879, 0.00010240199999999797, 0.00010216700000000023, 0.00010227799999999732, 0.00010197200000000226, 0.00010220900000000241, 0.00010230499999999698, 0.00010220900000000241, 0.00010219499999999937, 0.00010237500000000177, 0.00010244400000000015, 0.00010262500000000202, 0.00010248599999999886, 0.00010231900000000002, 0.00010262500000000202, 0.00010229200000000035, 0.00010230599999999992, 0.00010266700000000073, 0.00010229099999999741, 0.00010222300000000198, 0.00010188900000000084, 0.00010220899999999894, 0.00010266600000000126]</msg>
<status status="PASS" starttime="20201110 08:34:47.348" endtime="20201110 08:34:47.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.343" endtime="20201110 08:34:47.350"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:47.353" endtime="20201110 08:34:47.354"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:47.356" endtime="20201110 08:34:47.375"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.354" endtime="20201110 08:34:47.376"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.351" endtime="20201110 08:34:47.376"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.980" endtime="20201110 08:34:47.377"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.980" endtime="20201110 08:34:47.377"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:47.385" endtime="20201110 08:34:47.407"></status>
</kw>
<msg timestamp="20201110 08:34:47.407" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:47.384" endtime="20201110 08:34:47.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:47.410" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:47.408" endtime="20201110 08:34:47.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:47.411" endtime="20201110 08:34:47.414"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.381" endtime="20201110 08:34:47.414"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.379" endtime="20201110 08:34:47.415"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:47.421" endtime="20201110 08:34:47.707"></status>
</kw>
<msg timestamp="20201110 08:34:47.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019485292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019588639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:47.419" endtime="20201110 08:34:47.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:47.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019485292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019588639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:47.711" endtime="20201110 08:34:47.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:47.719" endtime="20201110 08:34:47.721"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.417" endtime="20201110 08:34:47.721"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.415" endtime="20201110 08:34:47.722"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:47.726" level="INFO">${RESULT} = [{'time': 0.019588639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010334700000000016, 'source_diff': 0.00010334700000000016}, {'time': 0.019706639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:47.723" endtime="20201110 08:34:47.726"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:47.740" level="INFO">${ACCURACY} = {'source_diff': [0.00010334700000000016, 0.00010288900000000184, 0.00010363899999999912, 0.00010363799999999965, 0.00010315299999999819, 0.00010359700000000041, 0.00010320800000000047, 0.0001032640000...</msg>
<status status="PASS" starttime="20201110 08:34:47.727" endtime="20201110 08:34:47.741"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:47.745" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201110 08:34:47.744" endtime="20201110 08:34:47.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:47.747" level="INFO">VALUE: [0.00010334700000000016, 0.00010288900000000184, 0.00010363899999999912, 0.00010363799999999965, 0.00010315299999999819, 0.00010359700000000041, 0.00010320800000000047, 0.00010326400000000222, 0.00010366600000000226, 0.00010272199999999954, 0.00010308300000000034, 0.00010333300000000059, 0.00010294500000000012, 0.00010286099999999923, 0.00010347299999999976, 0.00010277800000000128, 0.00010362499999999955, 0.00010290199999999847, 0.00010356900000000127, 0.00010333299999999712, 0.00010277800000000128, 0.00010344500000000062, 0.00010294400000000065, 0.00010298599999999936, 0.00010340299999999844, 0.00010315300000000166, 0.00010340299999999844, 0.000103207999999997, 0.0001035000000000029, 0.00010308300000000034, 0.00010345800000000072, 0.00010334700000000016, 0.00010372300000000001, 0.00010320800000000047, 0.00010320800000000047, 0.00010295800000000022, 0.00010359700000000041, 0.00010326399999999875, 0.00010275000000000215, 0.0001028480000000026, 0.0001030550000000012, 0.00010366599999999879, 0.00010272199999999954, 0.00010283300000000009, 0.0001026940000000004, 0.00010304199999999764, 0.00010270799999999997, 0.00010283300000000009, 0.00010326400000000222, 0.0001033200000000005]</msg>
<status status="PASS" starttime="20201110 08:34:47.746" endtime="20201110 08:34:47.748"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.741" endtime="20201110 08:34:47.749"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:47.751" endtime="20201110 08:34:47.752"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:47.754" endtime="20201110 08:34:47.774"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.753" endtime="20201110 08:34:47.774"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.749" endtime="20201110 08:34:47.775"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.378" endtime="20201110 08:34:47.775"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.377" endtime="20201110 08:34:47.775"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:47.784" endtime="20201110 08:34:47.805"></status>
</kw>
<msg timestamp="20201110 08:34:47.805" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:47.782" endtime="20201110 08:34:47.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:47.807" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:47.806" endtime="20201110 08:34:47.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:47.808" endtime="20201110 08:34:47.811"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.779" endtime="20201110 08:34:47.812"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.777" endtime="20201110 08:34:47.812"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:47.819" endtime="20201110 08:34:48.105"></status>
</kw>
<msg timestamp="20201110 08:34:48.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019525986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019630014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:47.817" endtime="20201110 08:34:48.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:48.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019525986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019630014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:48.109" endtime="20201110 08:34:48.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:48.118" endtime="20201110 08:34:48.119"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.815" endtime="20201110 08:34:48.120"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.813" endtime="20201110 08:34:48.120"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:48.124" level="INFO">${RESULT} = [{'time': 0.019630014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010402800000000254, 'source_diff': 0.00010402800000000254}, {'time': 0.019749014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:48.121" endtime="20201110 08:34:48.124"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:48.137" level="INFO">${ACCURACY} = {'source_diff': [0.00010402800000000254, 0.00010418099999999833, 0.00010412500000000005, 0.00010384800000000013, 0.00010398600000000036, 0.00010370900000000044, 0.00010425000000000018, 0.0001043470000...</msg>
<status status="PASS" starttime="20201110 08:34:48.125" endtime="20201110 08:34:48.138"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:48.142" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201110 08:34:48.141" endtime="20201110 08:34:48.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:48.144" level="INFO">VALUE: [0.00010402800000000254, 0.00010418099999999833, 0.00010412500000000005, 0.00010384800000000013, 0.00010398600000000036, 0.00010370900000000044, 0.00010425000000000018, 0.00010434700000000116, 0.00010465300000000316, 0.00010462499999999708, 0.00010433299999999812, 0.00010433300000000159, 0.00010411100000000048, 0.00010395900000000069, 0.00010408400000000081, 0.00010416699999999876, 0.00010374999999999968, 0.00010427699999999984, 0.00010415199999999972, 0.00010419399999999843, 0.00010441599999999954, 0.00010377799999999882, 0.00010397300000000026, 0.00010399999999999993, 0.00010447200000000129, 0.00010393100000000155, 0.00010452799999999957, 0.00010377799999999882, 0.00010469399999999893, 0.00010406999999999778, 0.00010422199999999757, 0.00010442999999999911, 0.00010395800000000122, 0.00010384700000000066, 0.00010397200000000079, 0.00010445799999999825, 0.00010448600000000086, 0.00010422300000000051, 0.00010376400000000272, 0.00010430600000000192, 0.00010440199999999997, 0.00010427699999999984, 0.00010416599999999929, 0.00010415199999999972, 0.00010415299999999919, 0.00010405600000000167, 0.00010456999999999828, 0.00010388899999999937, 0.00010362499999999955, 0.00010390300000000241]</msg>
<status status="PASS" starttime="20201110 08:34:48.143" endtime="20201110 08:34:48.145"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.138" endtime="20201110 08:34:48.146"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:48.148" endtime="20201110 08:34:48.149"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:48.152" endtime="20201110 08:34:48.171"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.150" endtime="20201110 08:34:48.171"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.146" endtime="20201110 08:34:48.172"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.776" endtime="20201110 08:34:48.172"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.775" endtime="20201110 08:34:48.172"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:48.181" endtime="20201110 08:34:48.200"></status>
</kw>
<msg timestamp="20201110 08:34:48.200" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:48.179" endtime="20201110 08:34:48.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:48.203" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:48.202" endtime="20201110 08:34:48.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:48.204" endtime="20201110 08:34:48.206"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.177" endtime="20201110 08:34:48.207"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.175" endtime="20201110 08:34:48.207"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:48.214" endtime="20201110 08:34:48.501"></status>
</kw>
<msg timestamp="20201110 08:34:48.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019672125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019777153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:48.213" endtime="20201110 08:34:48.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:48.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019672125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019777153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:48.505" endtime="20201110 08:34:48.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:48.513" endtime="20201110 08:34:48.515"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.210" endtime="20201110 08:34:48.515"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.208" endtime="20201110 08:34:48.516"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:48.519" level="INFO">${RESULT} = [{'time': 0.019777153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010502800000000007, 'source_diff': 0.00010502800000000007}, {'time': 0.019898194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:48.516" endtime="20201110 08:34:48.520"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:48.533" level="INFO">${ACCURACY} = {'source_diff': [0.00010502800000000007, 0.00010544399999999968, 0.00010525000000000118, 0.00010536099999999826, 0.00010569399999999993, 0.00010500000000000093, 0.0001045689999999988, 0.00010484700000...</msg>
<status status="PASS" starttime="20201110 08:34:48.520" endtime="20201110 08:34:48.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:48.537" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201110 08:34:48.536" endtime="20201110 08:34:48.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:48.540" level="INFO">VALUE: [0.00010502800000000007, 0.00010544399999999968, 0.00010525000000000118, 0.00010536099999999826, 0.00010569399999999993, 0.00010500000000000093, 0.0001045689999999988, 0.00010484700000000166, 0.00010565300000000069, 0.00010481899999999905, 0.00010534700000000216, 0.00010536099999999826, 0.00010536100000000173, 0.00010559799999999842, 0.00010520900000000194, 0.00010529100000000041, 0.000105207999999999, 0.00010512500000000105, 0.0001048750000000008, 0.00010545799999999925, 0.00010473599999999764, 0.00010495800000000222, 0.0001050689999999993, 0.00010533299999999912, 0.00010480599999999896, 0.00010494500000000212, 0.00010509699999999844, 0.00010509700000000191, 0.000105207999999999, 0.00010450000000000043, 0.00010500000000000093, 0.00010504199999999964, 0.00010540300000000044, 0.00010512500000000105, 0.00010491699999999951, 0.00010554200000000014, 0.00010507000000000224, 0.00010491600000000004, 0.00010530600000000293, 0.00010529100000000041, 0.00010491600000000004, 0.00010525000000000118, 0.00010497199999999832, 0.000105207999999999, 0.000105514000000001, 0.00010526400000000075, 0.00010520899999999847, 0.00010534799999999817, 0.00010525000000000118, 0.00010505499999999973]</msg>
<status status="PASS" starttime="20201110 08:34:48.538" endtime="20201110 08:34:48.541"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.534" endtime="20201110 08:34:48.541"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:48.544" endtime="20201110 08:34:48.545"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:48.547" endtime="20201110 08:34:48.566"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.545" endtime="20201110 08:34:48.567"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.542" endtime="20201110 08:34:48.567"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.173" endtime="20201110 08:34:48.568"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.173" endtime="20201110 08:34:48.568"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.544" endtime="20201110 08:34:48.568"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:48.572" endtime="20201110 08:34:48.591"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.570" endtime="20201110 08:34:48.592"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.569" endtime="20201110 08:34:48.592"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201110 08:34:08.428" endtime="20201110 08:34:48.592" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:48.599" endtime="20201110 08:34:48.618"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.597" endtime="20201110 08:34:48.619"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:48.633" endtime="20201110 08:34:48.649"></status>
</kw>
<msg timestamp="20201110 08:34:48.650" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:48.631" endtime="20201110 08:34:48.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:48.652" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:48.651" endtime="20201110 08:34:48.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:34:48.655" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:34:48.653" endtime="20201110 08:34:48.655"></status>
</kw>
<status status="FAIL" starttime="20201110 08:34:48.628" endtime="20201110 08:34:48.656"></status>
</kw>
<status status="FAIL" starttime="20201110 08:34:48.626" endtime="20201110 08:34:48.656"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.625" endtime="20201110 08:34:48.657"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:34:48.660" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:34:48.660" endtime="20201110 08:34:48.661"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.658" endtime="20201110 08:34:48.661"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.624" endtime="20201110 08:34:48.661"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.622" endtime="20201110 08:34:48.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:48.662" endtime="20201110 08:34:48.664"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.621" endtime="20201110 08:34:48.664"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.619" endtime="20201110 08:34:48.665"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.596" endtime="20201110 08:34:48.665"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:48.675" endtime="20201110 08:34:48.693"></status>
</kw>
<msg timestamp="20201110 08:34:48.694" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:48.673" endtime="20201110 08:34:48.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:48.696" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:48.695" endtime="20201110 08:34:48.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:48.697" endtime="20201110 08:34:48.699"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.670" endtime="20201110 08:34:48.699"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.668" endtime="20201110 08:34:48.700"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:48.707" endtime="20201110 08:34:48.991"></status>
</kw>
<msg timestamp="20201110 08:34:48.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066538861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066561667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:48.704" endtime="20201110 08:34:48.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:49.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066538861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066561667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:48.996" endtime="20201110 08:34:49.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:49.004" endtime="20201110 08:34:49.006"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.702" endtime="20201110 08:34:49.006"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.700" endtime="20201110 08:34:49.007"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:49.011" level="INFO">${RESULT} = [{'time': 0.066561667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2806000000000215e-05, 'source_diff': 2.2806000000000215e-05}, {'time': 0.066571681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:49.007" endtime="20201110 08:34:49.011"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:49.024" level="INFO">${ACCURACY} = {'source_diff': [2.2806000000000215e-05, 5.555999999989902e-06, 5.596999999996077e-06, 6.02800000000514e-06, 6.05600000000428e-06, 5.555999999989902e-06, 6.069999999996911e-06, 6.05600000000428e-06, 6...</msg>
<status status="PASS" starttime="20201110 08:34:49.012" endtime="20201110 08:34:49.025"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:49.029" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201110 08:34:49.028" endtime="20201110 08:34:49.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:49.031" level="INFO">VALUE: [2.2806000000000215e-05, 5.555999999989902e-06, 5.596999999996077e-06, 6.02800000000514e-06, 6.05600000000428e-06, 5.555999999989902e-06, 6.069999999996911e-06, 6.05600000000428e-06, 6.05600000000428e-06, 6.041999999997771e-06, 5.555999999989902e-06, 6.0829999999900686e-06, 6.041999999997771e-06, 5.55600000000378e-06, 5.541999999997271e-06, 6.041999999997771e-06, 5.55600000000378e-06, 6.012999999999158e-06, 6.05600000000428e-06, 6.0550000000048065e-06, 5.625000000009095e-06, 6.55600000000478e-06, 6.0279999999912626e-06, 6.042000000011649e-06, 6.52800000000564e-06, 6.5559999999909024e-06, 5.542000000011149e-06, 6.5559999999909024e-06, 6.0550000000048065e-06, 6.055999999990402e-06, 5.471999999992483e-06, 5.540999999997798e-06, 5.5689999999969375e-06, 5.555999999989902e-06, 6.070000000010789e-06, 6.0550000000048065e-06, 5.540999999997798e-06, 6.040999999998298e-06, 6.041999999997771e-06, 6.040999999998298e-06, 5.5139999999981315e-06, 6.0410000000121755e-06, 5.499999999991623e-06, 5.624999999995217e-06, 6.0550000000048065e-06, 5.55600000000378e-06, 6.040999999998298e-06, 5.55600000000378e-06, 6.569999999997411e-06, 6.0689999999974376e-06]</msg>
<status status="PASS" starttime="20201110 08:34:49.030" endtime="20201110 08:34:49.032"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.025" endtime="20201110 08:34:49.032"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:49.034" endtime="20201110 08:34:49.036"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:49.038" endtime="20201110 08:34:49.057"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.036" endtime="20201110 08:34:49.058"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.033" endtime="20201110 08:34:49.058"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.667" endtime="20201110 08:34:49.058"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.666" endtime="20201110 08:34:49.058"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:49.068" endtime="20201110 08:34:49.084"></status>
</kw>
<msg timestamp="20201110 08:34:49.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:49.066" endtime="20201110 08:34:49.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:49.087" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:49.085" endtime="20201110 08:34:49.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:49.088" endtime="20201110 08:34:49.089"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.064" endtime="20201110 08:34:49.090"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.061" endtime="20201110 08:34:49.090"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:49.097" endtime="20201110 08:34:49.387"></status>
</kw>
<msg timestamp="20201110 08:34:49.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020253944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020260986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:49.095" endtime="20201110 08:34:49.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:49.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020253944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020260986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:49.391" endtime="20201110 08:34:49.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:49.400" endtime="20201110 08:34:49.401"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.093" endtime="20201110 08:34:49.402"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.091" endtime="20201110 08:34:49.402"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:49.406" level="INFO">${RESULT} = [{'time': 0.020260986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.042000000002241e-06, 'source_diff': 7.042000000002241e-06}, {'time': 0.020272181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:49.403" endtime="20201110 08:34:49.407"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:49.464" level="INFO">${ACCURACY} = {'source_diff': [7.042000000002241e-06, 7.056000000001811e-06, 6.556000000001311e-06, 6.528000000002171e-06, 6.556000000001311e-06, 7.0279999999992016e-06, 7.540999999999798e-06, 6.570000000000881e-06...</msg>
<status status="PASS" starttime="20201110 08:34:49.407" endtime="20201110 08:34:49.465"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:49.469" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201110 08:34:49.468" endtime="20201110 08:34:49.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:49.471" level="INFO">VALUE: [7.042000000002241e-06, 7.056000000001811e-06, 6.556000000001311e-06, 6.528000000002171e-06, 6.556000000001311e-06, 7.0279999999992016e-06, 7.540999999999798e-06, 6.570000000000881e-06, 7.040999999999298e-06, 6.555000000001837e-06, 6.556000000001311e-06, 7.054999999998868e-06, 7.028000000002671e-06, 6.528000000002171e-06, 6.569000000001407e-06, 6.541999999998271e-06, 7.042000000002241e-06, 6.569000000001407e-06, 6.541999999998271e-06, 6.472000000000422e-06, 6.611000000000117e-06, 7.056000000001811e-06, 7.0419999999987715e-06, 6.540999999998798e-06, 6.569999999997411e-06, 6.555000000001837e-06, 6.540999999998798e-06, 7.068999999998438e-06, 6.541999999998271e-06, 6.584000000000451e-06, 6.555000000001837e-06, 7.041000000002767e-06, 6.554999999998368e-06, 7.055999999998341e-06, 6.499999999999562e-06, 7.055999999998341e-06, 6.555999999997841e-06, 6.485999999999992e-06, 6.541999999998271e-06, 7.070000000001381e-06, 7.055999999998341e-06, 6.485999999999992e-06, 6.540999999998798e-06, 7.056000000001811e-06, 7.0279999999992016e-06, 7.555000000002837e-06, 7.028000000002671e-06, 7.041000000002767e-06, 7.069999999997911e-06, 7.040999999999298e-06]</msg>
<status status="PASS" starttime="20201110 08:34:49.470" endtime="20201110 08:34:49.472"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.465" endtime="20201110 08:34:49.472"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:49.474" endtime="20201110 08:34:49.476"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:49.478" endtime="20201110 08:34:49.498"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.477" endtime="20201110 08:34:49.498"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.473" endtime="20201110 08:34:49.499"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.060" endtime="20201110 08:34:49.499"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.059" endtime="20201110 08:34:49.499"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:49.508" endtime="20201110 08:34:49.526"></status>
</kw>
<msg timestamp="20201110 08:34:49.527" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:49.507" endtime="20201110 08:34:49.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:49.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:49.528" endtime="20201110 08:34:49.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:49.530" endtime="20201110 08:34:49.532"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.504" endtime="20201110 08:34:49.532"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.501" endtime="20201110 08:34:49.533"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:49.540" endtime="20201110 08:34:49.827"></status>
</kw>
<msg timestamp="20201110 08:34:49.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020252569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020260611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:49.538" endtime="20201110 08:34:49.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:49.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020252569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020260611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:49.832" endtime="20201110 08:34:49.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:49.840" endtime="20201110 08:34:49.841"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.535" endtime="20201110 08:34:49.842"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.533" endtime="20201110 08:34:49.842"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:49.846" level="INFO">${RESULT} = [{'time': 0.020260611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.041999999999772e-06, 'source_diff': 8.041999999999772e-06}, {'time': 0.020271611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:49.843" endtime="20201110 08:34:49.847"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:49.860" level="INFO">${ACCURACY} = {'source_diff': [8.041999999999772e-06, 7.514000000000132e-06, 8.028000000000202e-06, 8.068999999999438e-06, 8.014000000000632e-06, 8.055999999999341e-06, 8.041999999999772e-06, 8.041999999999772e-06,...</msg>
<status status="PASS" starttime="20201110 08:34:49.847" endtime="20201110 08:34:49.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:49.865" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201110 08:34:49.863" endtime="20201110 08:34:49.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:49.867" level="INFO">VALUE: [8.041999999999772e-06, 7.514000000000132e-06, 8.028000000000202e-06, 8.068999999999438e-06, 8.014000000000632e-06, 8.055999999999341e-06, 8.041999999999772e-06, 8.041999999999772e-06, 7.6120000000005905e-06, 8.041999999999772e-06, 7.569999999998411e-06, 7.555999999998841e-06, 8.041999999999772e-06, 8.014000000000632e-06, 7.486000000000992e-06, 7.569999999998411e-06, 8.041999999999772e-06, 8.014000000000632e-06, 7.554999999999368e-06, 8.041999999999772e-06, 8.110999999998147e-06, 7.540999999999798e-06, 7.555000000002837e-06, 8.055000000003337e-06, 8.041000000000298e-06, 8.041000000000298e-06, 8.054999999999868e-06, 7.514000000000132e-06, 8.041999999999772e-06, 8.028000000000202e-06, 7.625000000000687e-06, 8.568999999999938e-06, 7.570000000001881e-06, 8.054999999999868e-06, 8.055999999999341e-06, 8.541000000000798e-06, 7.540999999999798e-06, 8.054999999999868e-06, 8.055999999999341e-06, 7.554999999999368e-06, 8.041000000000298e-06, 7.986000000001492e-06, 8.028000000000202e-06, 7.5419999999992715e-06, 8.054999999999868e-06, 7.5419999999992715e-06, 7.556000000002311e-06, 8.056000000002811e-06, 7.555999999998841e-06, 8.124999999997717e-06]</msg>
<status status="PASS" starttime="20201110 08:34:49.866" endtime="20201110 08:34:49.868"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.861" endtime="20201110 08:34:49.868"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:49.871" endtime="20201110 08:34:49.872"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:49.874" endtime="20201110 08:34:49.894"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.873" endtime="20201110 08:34:49.894"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.869" endtime="20201110 08:34:49.895"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.500" endtime="20201110 08:34:49.895"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.499" endtime="20201110 08:34:49.895"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:49.905" endtime="20201110 08:34:49.923"></status>
</kw>
<msg timestamp="20201110 08:34:49.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:49.904" endtime="20201110 08:34:49.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:49.926" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:49.924" endtime="20201110 08:34:49.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:49.927" endtime="20201110 08:34:49.928"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.900" endtime="20201110 08:34:49.929"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.898" endtime="20201110 08:34:49.929"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:49.936" endtime="20201110 08:34:50.224"></status>
</kw>
<msg timestamp="20201110 08:34:50.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021317042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021326139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:49.934" endtime="20201110 08:34:50.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:50.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021317042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021326139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:50.228" endtime="20201110 08:34:50.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:50.237" endtime="20201110 08:34:50.238"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.932" endtime="20201110 08:34:50.239"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.930" endtime="20201110 08:34:50.239"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:50.243" level="INFO">${RESULT} = [{'time': 0.021326139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.096999999999578e-06, 'source_diff': 9.096999999999578e-06}, {'time': 0.021337986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:50.240" endtime="20201110 08:34:50.244"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:50.257" level="INFO">${ACCURACY} = {'source_diff': [9.096999999999578e-06, 9.069000000000438e-06, 8.555000000000368e-06, 9.042000000000772e-06, 9.042000000000772e-06, 9.055000000000868e-06, 9.056000000000342e-06, 9.056000000000342e-06,...</msg>
<status status="PASS" starttime="20201110 08:34:50.244" endtime="20201110 08:34:50.257"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:50.261" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201110 08:34:50.260" endtime="20201110 08:34:50.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:50.264" level="INFO">VALUE: [9.096999999999578e-06, 9.069000000000438e-06, 8.555000000000368e-06, 9.042000000000772e-06, 9.042000000000772e-06, 9.055000000000868e-06, 9.056000000000342e-06, 9.056000000000342e-06, 9.054999999997398e-06, 8.555999999999842e-06, 9.570000000000412e-06, 9.041999999997302e-06, 9.042000000000772e-06, 8.554999999996898e-06, 9.042000000000772e-06, 8.555000000000368e-06, 8.971999999999453e-06, 9.542000000001272e-06, 8.513999999997662e-06, 9.042000000000772e-06, 9.069000000000438e-06, 9.042000000000772e-06, 8.555999999999842e-06, 9.069000000000438e-06, 9.042000000000772e-06, 9.555999999997372e-06, 9.138999999998287e-06, 8.570000000002881e-06, 9.042000000000772e-06, 9.042000000000772e-06, 9.568999999997468e-06, 9.040999999997829e-06, 8.528000000000702e-06, 9.054999999997398e-06, 8.540999999997329e-06, 8.542000000000272e-06, 8.555999999999842e-06, 8.555999999999842e-06, 8.555999999999842e-06, 9.069999999999911e-06, 8.542000000000272e-06, 8.555999999999842e-06, 9.541000000001798e-06, 9.08400000000295e-06, 9.055000000000868e-06, 8.555000000000368e-06, 9.069000000000438e-06, 9.055000000000868e-06, 8.596999999999078e-06, 8.555999999999842e-06]</msg>
<status status="PASS" starttime="20201110 08:34:50.262" endtime="20201110 08:34:50.265"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.258" endtime="20201110 08:34:50.265"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:50.268" endtime="20201110 08:34:50.269"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:50.271" endtime="20201110 08:34:50.290"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.269" endtime="20201110 08:34:50.291"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.266" endtime="20201110 08:34:50.291"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.896" endtime="20201110 08:34:50.292"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.895" endtime="20201110 08:34:50.292"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:50.301" endtime="20201110 08:34:50.319"></status>
</kw>
<msg timestamp="20201110 08:34:50.320" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:50.299" endtime="20201110 08:34:50.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:50.322" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:50.321" endtime="20201110 08:34:50.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:50.323" endtime="20201110 08:34:50.325"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.296" endtime="20201110 08:34:50.325"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.294" endtime="20201110 08:34:50.326"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:50.332" endtime="20201110 08:34:50.616"></status>
</kw>
<msg timestamp="20201110 08:34:50.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020569792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020579333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:50.331" endtime="20201110 08:34:50.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:50.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020569792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020579333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:50.621" endtime="20201110 08:34:50.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:50.629" endtime="20201110 08:34:50.631"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.328" endtime="20201110 08:34:50.631"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.326" endtime="20201110 08:34:50.632"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:50.636" level="INFO">${RESULT} = [{'time': 0.020579333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.540999999998329e-06, 'source_diff': 9.540999999998329e-06}, {'time': 0.020592278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:50.632" endtime="20201110 08:34:50.636"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:50.649" level="INFO">${ACCURACY} = {'source_diff': [9.540999999998329e-06, 1.0055999999997872e-05, 1.0056000000001342e-05, 1.0040999999998829e-05, 1.0042000000001772e-05, 1.0069000000001438e-05, 1.0013999999999162e-05, 1.00409999999988...</msg>
<status status="PASS" starttime="20201110 08:34:50.637" endtime="20201110 08:34:50.649"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:50.654" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201110 08:34:50.653" endtime="20201110 08:34:50.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:50.656" level="INFO">VALUE: [9.540999999998329e-06, 1.0055999999997872e-05, 1.0056000000001342e-05, 1.0040999999998829e-05, 1.0042000000001772e-05, 1.0069000000001438e-05, 1.0013999999999162e-05, 1.0040999999998829e-05, 1.0541999999998802e-05, 1.0028000000002202e-05, 9.542000000001272e-06, 1.0040999999998829e-05, 1.0055999999997872e-05, 9.999999999999593e-06, 1.0013999999999162e-05, 9.555000000001368e-06, 1.0041999999998302e-05, 9.542000000001272e-06, 9.556000000000842e-06, 1.0097000000000578e-05, 1.0056000000001342e-05, 1.0042000000001772e-05, 9.556000000000842e-06, 1.0084000000000481e-05, 9.999999999999593e-06, 1.0054999999998399e-05, 9.570000000000412e-06, 9.527000000002228e-06, 9.500000000002562e-06, 9.554999999997899e-06, 1.0040999999998829e-05, 9.554999999997899e-06, 1.0069000000001438e-05, 9.556000000000842e-06, 1.0055000000001868e-05, 1.0111000000000148e-05, 1.0028000000002202e-05, 1.0000000000003062e-05, 9.570000000000412e-06, 9.555999999997372e-06, 1.0056000000001342e-05, 9.542000000001272e-06, 1.0541999999998802e-05, 9.556000000000842e-06, 9.556000000000842e-06, 1.0027999999998732e-05, 1.0028000000002202e-05, 1.0070000000000912e-05, 1.0070000000000912e-05, 9.597000000000078e-06]</msg>
<status status="PASS" starttime="20201110 08:34:50.655" endtime="20201110 08:34:50.657"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.650" endtime="20201110 08:34:50.657"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:50.660" endtime="20201110 08:34:50.661"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:50.663" endtime="20201110 08:34:50.683"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.662" endtime="20201110 08:34:50.683"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.658" endtime="20201110 08:34:50.684"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.293" endtime="20201110 08:34:50.684"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.292" endtime="20201110 08:34:50.684"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:50.693" endtime="20201110 08:34:50.711"></status>
</kw>
<msg timestamp="20201110 08:34:50.711" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:50.691" endtime="20201110 08:34:50.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:50.714" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:50.712" endtime="20201110 08:34:50.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:50.715" endtime="20201110 08:34:50.717"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.689" endtime="20201110 08:34:50.717"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.686" endtime="20201110 08:34:50.717"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:50.724" endtime="20201110 08:34:51.009"></status>
</kw>
<msg timestamp="20201110 08:34:51.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019726958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019738028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:50.722" endtime="20201110 08:34:51.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019726958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019738028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:51.014" endtime="20201110 08:34:51.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:51.022" endtime="20201110 08:34:51.024"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.720" endtime="20201110 08:34:51.025"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.718" endtime="20201110 08:34:51.025"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:51.029" level="INFO">${RESULT} = [{'time': 0.019738028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1070000000001912e-05, 'source_diff': 1.1070000000001912e-05}, {'time': 0.019751819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:51.026" endtime="20201110 08:34:51.029"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:51.044" level="INFO">${ACCURACY} = {'source_diff': [1.1070000000001912e-05, 1.0540999999999329e-05, 1.0527999999999232e-05, 1.1040999999999829e-05, 1.0554999999998899e-05, 1.1084000000001482e-05, 1.0556000000001842e-05, 1.0540999999999...</msg>
<status status="PASS" starttime="20201110 08:34:51.030" endtime="20201110 08:34:51.044"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.048" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201110 08:34:51.047" endtime="20201110 08:34:51.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.050" level="INFO">VALUE: [1.1070000000001912e-05, 1.0540999999999329e-05, 1.0527999999999232e-05, 1.1040999999999829e-05, 1.0554999999998899e-05, 1.1084000000001482e-05, 1.0556000000001842e-05, 1.0540999999999329e-05, 1.1070000000001912e-05, 1.0556000000001842e-05, 1.1555999999999372e-05, 1.0526999999999759e-05, 1.1054999999999399e-05, 1.1055999999998872e-05, 1.0568999999998469e-05, 1.1068999999998969e-05, 1.0540999999999329e-05, 1.1027999999999732e-05, 1.0541999999998802e-05, 1.1054999999999399e-05, 1.1111000000001148e-05, 1.1055999999998872e-05, 1.1556000000002842e-05, 1.0541999999998802e-05, 1.0556000000001842e-05, 1.1055999999998872e-05, 1.1527999999996763e-05, 1.1054999999999399e-05, 1.0555999999998372e-05, 1.1568999999999469e-05, 1.1042000000002772e-05, 1.0513999999999663e-05, 1.1055999999998872e-05, 1.0542000000002272e-05, 1.1069999999998442e-05, 1.0555999999998372e-05, 1.1098000000001051e-05, 1.1054999999999399e-05, 1.0556000000001842e-05, 1.1054999999999399e-05, 1.1568999999999469e-05, 1.0527999999999232e-05, 1.1042000000002772e-05, 1.0570000000001412e-05, 1.1040999999999829e-05, 1.1000000000000593e-05, 1.1041999999999302e-05, 1.0555999999998372e-05, 1.1054999999999399e-05, 1.0555999999998372e-05]</msg>
<status status="PASS" starttime="20201110 08:34:51.049" endtime="20201110 08:34:51.051"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.045" endtime="20201110 08:34:51.052"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:51.054" endtime="20201110 08:34:51.055"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:51.057" endtime="20201110 08:34:51.077"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.056" endtime="20201110 08:34:51.077"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.052" endtime="20201110 08:34:51.078"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.685" endtime="20201110 08:34:51.078"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.684" endtime="20201110 08:34:51.078"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:51.087" endtime="20201110 08:34:51.105"></status>
</kw>
<msg timestamp="20201110 08:34:51.105" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:51.085" endtime="20201110 08:34:51.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.107" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:51.106" endtime="20201110 08:34:51.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:51.108" endtime="20201110 08:34:51.111"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.083" endtime="20201110 08:34:51.112"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.081" endtime="20201110 08:34:51.112"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:51.119" endtime="20201110 08:34:51.404"></status>
</kw>
<msg timestamp="20201110 08:34:51.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019746028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019757597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:51.117" endtime="20201110 08:34:51.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019746028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019757597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:51.408" endtime="20201110 08:34:51.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:51.416" endtime="20201110 08:34:51.418"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.114" endtime="20201110 08:34:51.419"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.113" endtime="20201110 08:34:51.419"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:51.423" level="INFO">${RESULT} = [{'time': 0.019757597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1568999999999469e-05, 'source_diff': 1.1568999999999469e-05}, {'time': 0.019774208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:51.420" endtime="20201110 08:34:51.423"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:51.437" level="INFO">${ACCURACY} = {'source_diff': [1.1568999999999469e-05, 1.1972000000002453e-05, 1.1555999999999372e-05, 1.2042000000000302e-05, 1.2041000000000829e-05, 1.1569999999998942e-05, 1.2041000000000829e-05, 1.2040999999997...</msg>
<status status="PASS" starttime="20201110 08:34:51.424" endtime="20201110 08:34:51.437"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.441" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201110 08:34:51.440" endtime="20201110 08:34:51.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.444" level="INFO">VALUE: [1.1568999999999469e-05, 1.1972000000002453e-05, 1.1555999999999372e-05, 1.2042000000000302e-05, 1.2041000000000829e-05, 1.1569999999998942e-05, 1.2041000000000829e-05, 1.204099999999736e-05, 1.1569999999998942e-05, 1.2055000000000399e-05, 1.1541000000000329e-05, 1.2055000000000399e-05, 1.1611000000001648e-05, 1.2069999999999442e-05, 1.2028000000000733e-05, 1.1582999999999039e-05, 1.1554999999999899e-05, 1.1596999999998608e-05, 1.1528000000000233e-05, 1.1542000000003272e-05, 1.2068999999999969e-05, 1.2082999999999539e-05, 1.2068999999999969e-05, 1.1568999999999469e-05, 1.2042000000000302e-05, 1.2042000000000302e-05, 1.2055999999999872e-05, 1.1541999999999802e-05, 1.2112000000001621e-05, 1.1554999999999899e-05, 1.2056000000003342e-05, 1.255499999999743e-05, 1.1999999999998123e-05, 1.2028000000000733e-05, 1.1541999999999802e-05, 1.2068999999999969e-05, 1.201299999999822e-05, 1.2055999999999872e-05, 1.1556000000002842e-05, 1.1485999999998053e-05, 1.2055999999999872e-05, 1.1541999999999802e-05, 1.1527000000000759e-05, 1.1568999999999469e-05, 1.1527999999996763e-05, 1.1514000000000663e-05, 1.1556000000002842e-05, 1.1555999999999372e-05, 1.2027000000001259e-05, 1.2055999999999872e-05]</msg>
<status status="PASS" starttime="20201110 08:34:51.442" endtime="20201110 08:34:51.451"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.438" endtime="20201110 08:34:51.451"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:51.454" endtime="20201110 08:34:51.455"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:51.457" endtime="20201110 08:34:51.476"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.456" endtime="20201110 08:34:51.477"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.452" endtime="20201110 08:34:51.477"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.079" endtime="20201110 08:34:51.478"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.078" endtime="20201110 08:34:51.478"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:51.486" endtime="20201110 08:34:51.504"></status>
</kw>
<msg timestamp="20201110 08:34:51.504" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:51.485" endtime="20201110 08:34:51.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.507" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:51.505" endtime="20201110 08:34:51.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:51.508" endtime="20201110 08:34:51.510"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.482" endtime="20201110 08:34:51.511"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.480" endtime="20201110 08:34:51.511"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:51.517" endtime="20201110 08:34:51.803"></status>
</kw>
<msg timestamp="20201110 08:34:51.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019767764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019780319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:51.516" endtime="20201110 08:34:51.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019767764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019780319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:51.807" endtime="20201110 08:34:51.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:51.816" endtime="20201110 08:34:51.817"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.513" endtime="20201110 08:34:51.818"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.512" endtime="20201110 08:34:51.818"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:51.823" level="INFO">${RESULT} = [{'time': 0.019780319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2555000000000899e-05, 'source_diff': 1.2555000000000899e-05}, {'time': 0.019798333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:51.819" endtime="20201110 08:34:51.823"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:51.836" level="INFO">${ACCURACY} = {'source_diff': [1.2555000000000899e-05, 1.3069000000000969e-05, 1.3070000000000442e-05, 1.304099999999836e-05, 1.3569999999997473e-05, 1.3055000000001399e-05, 1.3528000000002233e-05, 1.25690000000004...</msg>
<status status="PASS" starttime="20201110 08:34:51.823" endtime="20201110 08:34:51.836"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.840" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201110 08:34:51.839" endtime="20201110 08:34:51.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.843" level="INFO">VALUE: [1.2555000000000899e-05, 1.3069000000000969e-05, 1.3070000000000442e-05, 1.304099999999836e-05, 1.3569999999997473e-05, 1.3055000000001399e-05, 1.3528000000002233e-05, 1.2569000000000469e-05, 1.3556000000001373e-05, 1.3055999999997403e-05, 1.3042000000001303e-05, 1.2584000000002982e-05, 1.2583000000000039e-05, 1.2542000000000803e-05, 1.3084000000000012e-05, 1.2499999999998623e-05, 1.2541999999997333e-05, 1.305499999999793e-05, 1.2499999999998623e-05, 1.2541999999997333e-05, 1.3056000000000872e-05, 1.3570000000000942e-05, 1.2541999999997333e-05, 1.3070000000000442e-05, 1.2513999999998193e-05, 1.2542000000000803e-05, 1.2972999999999457e-05, 1.3056000000000872e-05, 1.3028000000001733e-05, 1.2542000000000803e-05, 1.3014000000002163e-05, 1.2569999999999942e-05, 1.3070000000000442e-05, 1.2542000000000803e-05, 1.2542000000000803e-05, 1.254099999999786e-05, 1.2569000000000469e-05, 1.2541000000001329e-05, 1.2569000000000469e-05, 1.2485999999999053e-05, 1.351299999999972e-05, 1.2542000000000803e-05, 1.3056000000000872e-05, 1.3124999999999248e-05, 1.2541000000001329e-05, 1.2555000000000899e-05, 1.3056000000000872e-05, 1.254099999999786e-05, 1.3027999999998263e-05, 1.2556000000000372e-05]</msg>
<status status="PASS" starttime="20201110 08:34:51.842" endtime="20201110 08:34:51.844"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.837" endtime="20201110 08:34:51.844"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:51.846" endtime="20201110 08:34:51.848"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:51.850" endtime="20201110 08:34:51.869"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.848" endtime="20201110 08:34:51.870"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.845" endtime="20201110 08:34:51.870"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.479" endtime="20201110 08:34:51.870"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.478" endtime="20201110 08:34:51.871"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:51.881" endtime="20201110 08:34:51.899"></status>
</kw>
<msg timestamp="20201110 08:34:51.899" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:51.879" endtime="20201110 08:34:51.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.902" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:51.900" endtime="20201110 08:34:51.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:51.903" endtime="20201110 08:34:51.905"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.875" endtime="20201110 08:34:51.906"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.873" endtime="20201110 08:34:51.906"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:51.913" endtime="20201110 08:34:52.198"></status>
</kw>
<msg timestamp="20201110 08:34:52.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021569736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021583792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:51.911" endtime="20201110 08:34:52.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:52.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021569736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021583792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:52.203" endtime="20201110 08:34:52.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:52.211" endtime="20201110 08:34:52.213"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.909" endtime="20201110 08:34:52.213"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.907" endtime="20201110 08:34:52.214"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:52.218" level="INFO">${RESULT} = [{'time': 0.021583792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4056000000001873e-05, 'source_diff': 1.4056000000001873e-05}, {'time': 0.021599792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:52.214" endtime="20201110 08:34:52.218"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:52.231" level="INFO">${ACCURACY} = {'source_diff': [1.4056000000001873e-05, 1.3555999999997903e-05, 1.3556000000001373e-05, 1.354099999999886e-05, 1.3541999999998333e-05, 1.4055999999998403e-05, 1.4041999999998833e-05, 1.45409999999998...</msg>
<status status="PASS" starttime="20201110 08:34:52.219" endtime="20201110 08:34:52.232"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:52.236" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201110 08:34:52.235" endtime="20201110 08:34:52.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:52.238" level="INFO">VALUE: [1.4056000000001873e-05, 1.3555999999997903e-05, 1.3556000000001373e-05, 1.354099999999886e-05, 1.3541999999998333e-05, 1.4055999999998403e-05, 1.4041999999998833e-05, 1.454099999999986e-05, 1.4041999999998833e-05, 1.404099999999936e-05, 1.3499999999999623e-05, 1.3527999999998763e-05, 1.4083000000001539e-05, 1.3569000000001469e-05, 1.4041999999998833e-05, 1.4111000000000679e-05, 1.3542000000001803e-05, 1.3569000000001469e-05, 1.405499999999893e-05, 1.4028000000002733e-05, 1.4041999999998833e-05, 1.3542000000001803e-05, 1.405499999999893e-05, 1.4555999999998903e-05, 1.3541999999998333e-05, 1.3570000000000942e-05, 1.3555000000001899e-05, 1.40689999999985e-05, 1.404099999999936e-05, 1.4055000000002399e-05, 1.355499999999843e-05, 1.354099999999886e-05, 1.4069000000001969e-05, 1.4055999999998403e-05, 1.3555000000001899e-05, 1.3583000000001039e-05, 1.4097000000001109e-05, 1.40689999999985e-05, 1.3556000000001373e-05, 1.354099999999886e-05, 1.4056000000001873e-05, 1.4555999999998903e-05, 1.3542000000001803e-05, 1.4097000000001109e-05, 1.3499999999999623e-05, 1.3528000000002233e-05, 1.355499999999843e-05, 1.4055999999998403e-05, 1.354099999999886e-05, 1.3527999999998763e-05]</msg>
<status status="PASS" starttime="20201110 08:34:52.237" endtime="20201110 08:34:52.239"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.232" endtime="20201110 08:34:52.240"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:52.242" endtime="20201110 08:34:52.243"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:52.245" endtime="20201110 08:34:52.265"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.244" endtime="20201110 08:34:52.265"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.240" endtime="20201110 08:34:52.266"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.872" endtime="20201110 08:34:52.266"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.871" endtime="20201110 08:34:52.266"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:52.275" endtime="20201110 08:34:52.293"></status>
</kw>
<msg timestamp="20201110 08:34:52.293" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:52.273" endtime="20201110 08:34:52.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:52.296" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:52.294" endtime="20201110 08:34:52.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:52.297" endtime="20201110 08:34:52.299"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.271" endtime="20201110 08:34:52.300"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.269" endtime="20201110 08:34:52.300"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:52.307" endtime="20201110 08:34:52.593"></status>
</kw>
<msg timestamp="20201110 08:34:52.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019886708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019901764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:52.305" endtime="20201110 08:34:52.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:52.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019886708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019901764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:52.597" endtime="20201110 08:34:52.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:52.605" endtime="20201110 08:34:52.607"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.303" endtime="20201110 08:34:52.607"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.301" endtime="20201110 08:34:52.608"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:52.612" level="INFO">${RESULT} = [{'time': 0.019901764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5055999999999403e-05, 'source_diff': 1.5055999999999403e-05}, {'time': 0.019921083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:52.609" endtime="20201110 08:34:52.612"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:52.627" level="INFO">${ACCURACY} = {'source_diff': [1.5055999999999403e-05, 1.505499999999993e-05, 1.4527999999999763e-05, 1.5125000000001249e-05, 1.5583999999999043e-05, 1.455499999999943e-05, 1.455499999999943e-05, 1.4556000000002373...</msg>
<status status="PASS" starttime="20201110 08:34:52.613" endtime="20201110 08:34:52.627"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:52.631" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201110 08:34:52.630" endtime="20201110 08:34:52.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:52.634" level="INFO">VALUE: [1.5055999999999403e-05, 1.505499999999993e-05, 1.4527999999999763e-05, 1.5125000000001249e-05, 1.5583999999999043e-05, 1.455499999999943e-05, 1.455499999999943e-05, 1.4556000000002373e-05, 1.4555999999998903e-05, 1.454099999999986e-05, 1.5055999999999403e-05, 1.455499999999943e-05, 1.5041999999999833e-05, 1.4556000000002373e-05, 1.504100000000036e-05, 1.505499999999993e-05, 1.5083000000002539e-05, 1.505499999999993e-05, 1.4555999999998903e-05, 1.4555999999998903e-05, 1.4541999999999333e-05, 1.5056000000002873e-05, 1.5028000000000263e-05, 1.4555999999998903e-05, 1.455499999999943e-05, 1.4541999999999333e-05, 1.5041999999999833e-05, 1.555500000000043e-05, 1.4542000000002803e-05, 1.505499999999993e-05, 1.505499999999993e-05, 1.4556000000002373e-05, 1.505499999999993e-05, 1.5041999999999833e-05, 1.4569999999998473e-05, 1.5569e-05, 1.4527999999999763e-05, 1.5069000000002969e-05, 1.4541999999999333e-05, 1.5028000000000263e-05, 1.4555999999998903e-05, 1.5083000000002539e-05, 1.502700000000079e-05, 1.4555999999998903e-05, 1.4555999999998903e-05, 1.5041999999999833e-05, 1.5055999999999403e-05, 1.511099999999821e-05, 1.4527999999999763e-05, 1.504099999999689e-05]</msg>
<status status="PASS" starttime="20201110 08:34:52.632" endtime="20201110 08:34:52.634"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.628" endtime="20201110 08:34:52.635"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:52.637" endtime="20201110 08:34:52.638"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:52.640" endtime="20201110 08:34:52.660"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.639" endtime="20201110 08:34:52.660"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.636" endtime="20201110 08:34:52.661"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.267" endtime="20201110 08:34:52.661"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.267" endtime="20201110 08:34:52.661"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:52.670" endtime="20201110 08:34:52.688"></status>
</kw>
<msg timestamp="20201110 08:34:52.689" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:52.668" endtime="20201110 08:34:52.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:52.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:52.690" endtime="20201110 08:34:52.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:52.692" endtime="20201110 08:34:52.695"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.666" endtime="20201110 08:34:52.695"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.664" endtime="20201110 08:34:52.696"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:52.702" endtime="20201110 08:34:52.987"></status>
</kw>
<msg timestamp="20201110 08:34:52.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019897833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019914375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:52.700" endtime="20201110 08:34:52.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:52.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019897833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019914375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:52.992" endtime="20201110 08:34:52.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:53.000" endtime="20201110 08:34:53.002"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.698" endtime="20201110 08:34:53.002"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.696" endtime="20201110 08:34:53.003"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:53.007" level="INFO">${RESULT} = [{'time': 0.019914375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6542000000001333e-05, 'source_diff': 1.6542000000001333e-05}, {'time': 0.019933, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:34:53.003" endtime="20201110 08:34:53.007"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:53.020" level="INFO">${ACCURACY} = {'source_diff': [1.6542000000001333e-05, 1.6056000000000403e-05, 1.612499999999878e-05, 1.5555999999999903e-05, 1.554100000000086e-05, 1.554100000000086e-05, 1.5985999999999084e-05, 1.558299999999957e...</msg>
<status status="PASS" starttime="20201110 08:34:53.008" endtime="20201110 08:34:53.020"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:53.025" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201110 08:34:53.024" endtime="20201110 08:34:53.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:53.027" level="INFO">VALUE: [1.6542000000001333e-05, 1.6056000000000403e-05, 1.612499999999878e-05, 1.5555999999999903e-05, 1.554100000000086e-05, 1.554100000000086e-05, 1.5985999999999084e-05, 1.558299999999957e-05, 1.6056000000000403e-05, 1.6069999999999973e-05, 1.6042000000000833e-05, 1.5555999999999903e-05, 1.5541999999996864e-05, 1.605500000000093e-05, 1.555500000000043e-05, 1.606899999999703e-05, 1.6042000000000833e-05, 1.5555999999999903e-05, 1.604100000000136e-05, 1.5542000000000333e-05, 1.5999999999998654e-05, 1.605500000000093e-05, 1.5542000000000333e-05, 1.6556000000000903e-05, 1.6056000000000403e-05, 1.5485999999998584e-05, 1.6028000000001263e-05, 1.555500000000043e-05, 1.605500000000093e-05, 1.5528000000000763e-05, 1.608300000000007e-05, 1.555500000000043e-05, 1.5542000000000333e-05, 1.5528000000000763e-05, 1.6041999999997364e-05, 1.605500000000093e-05, 1.605500000000093e-05, 1.5542000000000333e-05, 1.6056000000000403e-05, 1.5542000000000333e-05, 1.6042000000000833e-05, 1.6069999999999973e-05, 1.656899999999753e-05, 1.554099999999739e-05, 1.5555999999999903e-05, 1.605499999999746e-05, 1.563899999999785e-05, 1.5542000000000333e-05, 1.6056000000000403e-05, 1.5569999999999473e-05]</msg>
<status status="PASS" starttime="20201110 08:34:53.026" endtime="20201110 08:34:53.028"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.021" endtime="20201110 08:34:53.028"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:53.031" endtime="20201110 08:34:53.032"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:53.034" endtime="20201110 08:34:53.054"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.033" endtime="20201110 08:34:53.054"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.029" endtime="20201110 08:34:53.055"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.662" endtime="20201110 08:34:53.055"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.662" endtime="20201110 08:34:53.055"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:53.064" endtime="20201110 08:34:53.081"></status>
</kw>
<msg timestamp="20201110 08:34:53.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:53.062" endtime="20201110 08:34:53.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:53.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:53.082" endtime="20201110 08:34:53.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:53.085" endtime="20201110 08:34:53.087"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.059" endtime="20201110 08:34:53.088"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.057" endtime="20201110 08:34:53.088"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:53.095" endtime="20201110 08:34:53.381"></status>
</kw>
<msg timestamp="20201110 08:34:53.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019695, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019711542, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:34:53.093" endtime="20201110 08:34:53.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:53.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019695, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019711542, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:34:53.385" endtime="20201110 08:34:53.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:53.393" endtime="20201110 08:34:53.395"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.091" endtime="20201110 08:34:53.395"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.089" endtime="20201110 08:34:53.396"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:53.400" level="INFO">${RESULT} = [{'time': 0.019711542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6541999999997864e-05, 'source_diff': 1.6541999999997864e-05}, {'time': 0.019732417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:53.397" endtime="20201110 08:34:53.400"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:53.414" level="INFO">${ACCURACY} = {'source_diff': [1.6541999999997864e-05, 1.6513999999998724e-05, 1.6556000000000903e-05, 1.6542000000001333e-05, 1.702699999999932e-05, 1.6556000000000903e-05, 1.655500000000143e-05, 1.656899999999753...</msg>
<status status="PASS" starttime="20201110 08:34:53.401" endtime="20201110 08:34:53.414"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:53.418" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201110 08:34:53.417" endtime="20201110 08:34:53.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:53.421" level="INFO">VALUE: [1.6541999999997864e-05, 1.6513999999998724e-05, 1.6556000000000903e-05, 1.6542000000001333e-05, 1.702699999999932e-05, 1.6556000000000903e-05, 1.655500000000143e-05, 1.656899999999753e-05, 1.655500000000143e-05, 1.7056000000001403e-05, 1.6556000000000903e-05, 1.6570000000000473e-05, 1.7542000000002334e-05, 1.7042000000001833e-05, 1.7070000000000973e-05, 1.7056000000001403e-05, 1.704099999999889e-05, 1.7055999999997934e-05, 1.7055999999997934e-05, 1.7527999999999294e-05, 1.6999999999999654e-05, 1.6570000000000473e-05, 1.654099999999839e-05, 1.6570000000000473e-05, 1.7084000000000543e-05, 1.7056000000001403e-05, 1.656899999999753e-05, 1.6542000000001333e-05, 1.655499999999796e-05, 1.6555999999997434e-05, 1.6570000000000473e-05, 1.7056000000001403e-05, 1.7013999999999224e-05, 1.7041999999998364e-05, 1.6556000000000903e-05, 1.6569000000001e-05, 1.6569000000001e-05, 1.7556000000001903e-05, 1.7056000000001403e-05, 1.6569000000001e-05, 1.654100000000186e-05, 1.6500000000002624e-05, 1.7056000000001403e-05, 1.7056000000001403e-05, 1.705499999999846e-05, 1.6528000000001764e-05, 1.7041999999998364e-05, 1.711100000000021e-05, 1.702699999999932e-05, 1.6556000000000903e-05]</msg>
<status status="PASS" starttime="20201110 08:34:53.419" endtime="20201110 08:34:53.421"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.414" endtime="20201110 08:34:53.422"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:53.424" endtime="20201110 08:34:53.425"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:53.428" endtime="20201110 08:34:53.447"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.426" endtime="20201110 08:34:53.447"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.423" endtime="20201110 08:34:53.448"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.056" endtime="20201110 08:34:53.448"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.055" endtime="20201110 08:34:53.448"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:53.457" endtime="20201110 08:34:53.473"></status>
</kw>
<msg timestamp="20201110 08:34:53.473" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:53.455" endtime="20201110 08:34:53.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:53.476" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:53.474" endtime="20201110 08:34:53.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:53.477" endtime="20201110 08:34:53.479"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.453" endtime="20201110 08:34:53.480"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.451" endtime="20201110 08:34:53.480"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:53.487" endtime="20201110 08:34:53.772"></status>
</kw>
<msg timestamp="20201110 08:34:53.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019647931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019665986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:53.485" endtime="20201110 08:34:53.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:53.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019647931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019665986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:53.776" endtime="20201110 08:34:53.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:53.785" endtime="20201110 08:34:53.787"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.483" endtime="20201110 08:34:53.787"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.481" endtime="20201110 08:34:53.787"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:53.792" level="INFO">${RESULT} = [{'time': 0.019665986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.805499999999946e-05, 'source_diff': 1.805499999999946e-05}, {'time': 0.019689542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:53.788" endtime="20201110 08:34:53.792"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:53.805" level="INFO">${ACCURACY} = {'source_diff': [1.805499999999946e-05, 1.7542000000002334e-05, 1.804099999999989e-05, 1.805499999999946e-05, 1.8555999999999434e-05, 1.7542000000002334e-05, 1.8014000000000224e-05, 1.8056000000002403...</msg>
<status status="PASS" starttime="20201110 08:34:53.793" endtime="20201110 08:34:53.805"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:53.810" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201110 08:34:53.809" endtime="20201110 08:34:53.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:53.812" level="INFO">VALUE: [1.805499999999946e-05, 1.7542000000002334e-05, 1.804099999999989e-05, 1.805499999999946e-05, 1.8555999999999434e-05, 1.7542000000002334e-05, 1.8014000000000224e-05, 1.8056000000002403e-05, 1.755499999999896e-05, 1.7527999999999294e-05, 1.8112000000000683e-05, 1.8041999999999364e-05, 1.8069999999998504e-05, 1.805499999999946e-05, 1.8055999999998934e-05, 1.7555999999998434e-05, 1.7556000000001903e-05, 1.805499999999946e-05, 1.7556000000001903e-05, 1.8069999999998504e-05, 1.808300000000207e-05, 1.755500000000243e-05, 1.7570000000001473e-05, 1.805499999999946e-05, 1.7569000000002e-05, 1.80829999999986e-05, 1.7513999999999724e-05, 1.8055999999998934e-05, 1.7569000000002e-05, 1.754099999999939e-05, 1.806899999999903e-05, 1.8041999999999364e-05, 1.812500000000078e-05, 1.7542000000002334e-05, 1.8041999999999364e-05, 1.856899999999953e-05, 1.805500000000293e-05, 1.7541999999998864e-05, 1.8014000000000224e-05, 1.7541999999998864e-05, 1.8055999999998934e-05, 1.8055999999998934e-05, 1.8056000000002403e-05, 1.7584000000001043e-05, 1.7569000000002e-05, 1.8041999999999364e-05, 1.805499999999946e-05, 1.7528000000002764e-05, 1.804099999999989e-05, 1.754099999999939e-05]</msg>
<status status="PASS" starttime="20201110 08:34:53.811" endtime="20201110 08:34:53.813"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.806" endtime="20201110 08:34:53.814"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:53.816" endtime="20201110 08:34:53.817"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:53.819" endtime="20201110 08:34:53.839"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.818" endtime="20201110 08:34:53.839"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.814" endtime="20201110 08:34:53.840"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.449" endtime="20201110 08:34:53.840"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.449" endtime="20201110 08:34:53.840"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:53.849" endtime="20201110 08:34:53.865"></status>
</kw>
<msg timestamp="20201110 08:34:53.865" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:53.847" endtime="20201110 08:34:53.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:53.867" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:53.866" endtime="20201110 08:34:53.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:53.868" endtime="20201110 08:34:53.871"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.845" endtime="20201110 08:34:53.872"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.843" endtime="20201110 08:34:53.872"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:53.878" endtime="20201110 08:34:54.165"></status>
</kw>
<msg timestamp="20201110 08:34:54.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019622903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019641958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:53.877" endtime="20201110 08:34:54.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:54.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019622903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019641958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:54.169" endtime="20201110 08:34:54.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:54.178" endtime="20201110 08:34:54.179"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.874" endtime="20201110 08:34:54.180"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.873" endtime="20201110 08:34:54.180"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:54.184" level="INFO">${RESULT} = [{'time': 0.019641958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.905500000000046e-05, 'source_diff': 1.905500000000046e-05}, {'time': 0.019664722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:54.181" endtime="20201110 08:34:54.185"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:54.199" level="INFO">${ACCURACY} = {'source_diff': [1.905500000000046e-05, 1.855499999999996e-05, 1.8514000000000724e-05, 1.956900000000053e-05, 1.905500000000046e-05, 1.8555999999999434e-05, 1.855499999999996e-05, 1.905500000000046e-0...</msg>
<status status="PASS" starttime="20201110 08:34:54.185" endtime="20201110 08:34:54.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:54.204" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201110 08:34:54.203" endtime="20201110 08:34:54.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:54.206" level="INFO">VALUE: [1.905500000000046e-05, 1.855499999999996e-05, 1.8514000000000724e-05, 1.956900000000053e-05, 1.905500000000046e-05, 1.8555999999999434e-05, 1.855499999999996e-05, 1.905500000000046e-05, 1.905500000000046e-05, 1.9028000000000794e-05, 1.955500000000096e-05, 1.9069999999999504e-05, 1.9055999999999934e-05, 1.912499999999831e-05, 1.8555999999999434e-05, 1.8528000000000294e-05, 1.8541999999999864e-05, 1.8541999999999864e-05, 1.8541999999999864e-05, 1.8541999999999864e-05, 1.8569999999999004e-05, 1.8570000000002473e-05, 1.854099999999692e-05, 1.855499999999996e-05, 1.9042000000000364e-05, 1.8528000000000294e-05, 1.856899999999953e-05, 1.855499999999996e-05, 1.9069999999999504e-05, 1.9556000000000434e-05, 1.8569999999999004e-05, 1.855499999999996e-05, 1.9055999999999934e-05, 1.9541999999997395e-05, 1.8514000000000724e-05, 1.9000000000001654e-05, 1.9055999999999934e-05, 1.855499999999996e-05, 1.9042000000000364e-05, 1.9042000000000364e-05, 1.855499999999996e-05, 1.9055999999999934e-05, 1.8541999999999864e-05, 1.8541999999999864e-05, 1.9027999999997325e-05, 1.8528000000000294e-05, 1.8555999999999434e-05, 1.9042000000000364e-05, 1.956900000000053e-05, 1.9055999999999934e-05]</msg>
<status status="PASS" starttime="20201110 08:34:54.205" endtime="20201110 08:34:54.207"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.200" endtime="20201110 08:34:54.207"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:54.210" endtime="20201110 08:34:54.211"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:54.213" endtime="20201110 08:34:54.232"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.211" endtime="20201110 08:34:54.233"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.208" endtime="20201110 08:34:54.233"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.841" endtime="20201110 08:34:54.234"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.840" endtime="20201110 08:34:54.234"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:54.242" endtime="20201110 08:34:54.260"></status>
</kw>
<msg timestamp="20201110 08:34:54.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:54.241" endtime="20201110 08:34:54.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:54.263" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:54.261" endtime="20201110 08:34:54.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:54.264" endtime="20201110 08:34:54.266"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.238" endtime="20201110 08:34:54.267"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.236" endtime="20201110 08:34:54.267"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:54.274" endtime="20201110 08:34:54.560"></status>
</kw>
<msg timestamp="20201110 08:34:54.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019691667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019711194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:54.272" endtime="20201110 08:34:54.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:54.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019691667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019711194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:54.565" endtime="20201110 08:34:54.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:54.573" endtime="20201110 08:34:54.575"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.269" endtime="20201110 08:34:54.575"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.268" endtime="20201110 08:34:54.576"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:54.580" level="INFO">${RESULT} = [{'time': 0.019711194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.952700000000182e-05, 'source_diff': 1.952700000000182e-05}, {'time': 0.019733208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:54.576" endtime="20201110 08:34:54.580"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:54.593" level="INFO">${ACCURACY} = {'source_diff': [1.952700000000182e-05, 1.955499999999749e-05, 1.955500000000096e-05, 2.0527999999998825e-05, 2.005500000000146e-05, 2.0070000000000504e-05, 1.9542000000000864e-05, 2.0056000000000934e...</msg>
<status status="PASS" starttime="20201110 08:34:54.581" endtime="20201110 08:34:54.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:54.598" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201110 08:34:54.597" endtime="20201110 08:34:54.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:54.600" level="INFO">VALUE: [1.952700000000182e-05, 1.955499999999749e-05, 1.955500000000096e-05, 2.0527999999998825e-05, 2.005500000000146e-05, 2.0070000000000504e-05, 1.9542000000000864e-05, 2.0056000000000934e-05, 1.9999999999999185e-05, 2.004100000000189e-05, 1.9570000000000004e-05, 1.9556000000000434e-05, 2.0570000000001004e-05, 1.955500000000096e-05, 2.0069999999997035e-05, 2.0041999999997895e-05, 2.00830000000006e-05, 1.956900000000053e-05, 2.0084000000000074e-05, 2.0055999999997465e-05, 2.0028000000001794e-05, 2.0042000000001364e-05, 2.05830000000011e-05, 1.95830000000001e-05, 1.9542000000000864e-05, 1.955500000000096e-05, 1.9570000000000004e-05, 1.9570000000000004e-05, 2.005499999999799e-05, 2.0042000000001364e-05, 1.955499999999749e-05, 2.0056000000000934e-05, 2.004099999999842e-05, 2.0070000000000504e-05, 2.009700000000017e-05, 1.9542000000000864e-05, 1.9542000000000864e-05, 2.005499999999799e-05, 2.005499999999799e-05, 2.0013999999998755e-05, 2.004100000000189e-05, 2.0541999999998395e-05, 1.9528000000001294e-05, 2.0041999999997895e-05, 1.9541999999997395e-05, 2.005499999999799e-05, 1.9556000000000434e-05, 2.008299999999713e-05, 1.9999999999999185e-05, 1.9514000000001724e-05]</msg>
<status status="PASS" starttime="20201110 08:34:54.599" endtime="20201110 08:34:54.601"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.594" endtime="20201110 08:34:54.602"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:54.604" endtime="20201110 08:34:54.605"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:54.607" endtime="20201110 08:34:54.627"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.606" endtime="20201110 08:34:54.627"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.602" endtime="20201110 08:34:54.628"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.235" endtime="20201110 08:34:54.628"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.234" endtime="20201110 08:34:54.628"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:54.637" endtime="20201110 08:34:54.654"></status>
</kw>
<msg timestamp="20201110 08:34:54.654" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:54.635" endtime="20201110 08:34:54.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:54.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:54.655" endtime="20201110 08:34:54.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:54.658" endtime="20201110 08:34:54.660"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.633" endtime="20201110 08:34:54.661"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.630" endtime="20201110 08:34:54.661"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:54.667" endtime="20201110 08:34:54.955"></status>
</kw>
<msg timestamp="20201110 08:34:54.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019690708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019711736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:54.666" endtime="20201110 08:34:54.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:54.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019690708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019711736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:54.959" endtime="20201110 08:34:54.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:54.968" endtime="20201110 08:34:54.970"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.663" endtime="20201110 08:34:54.970"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.662" endtime="20201110 08:34:54.971"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:54.975" level="INFO">${RESULT} = [{'time': 0.019711736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1027999999999325e-05, 'source_diff': 2.1027999999999325e-05}, {'time': 0.019738056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:54.972" endtime="20201110 08:34:54.976"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:54.989" level="INFO">${ACCURACY} = {'source_diff': [2.1027999999999325e-05, 2.1056000000001934e-05, 2.056899999999806e-05, 2.1055999999998465e-05, 2.105499999999899e-05, 2.054100000000239e-05, 2.0513999999999255e-05, 2.105500000000246e...</msg>
<status status="PASS" starttime="20201110 08:34:54.976" endtime="20201110 08:34:54.989"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:54.993" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201110 08:34:54.992" endtime="20201110 08:34:54.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:54.996" level="INFO">VALUE: [2.1027999999999325e-05, 2.1056000000001934e-05, 2.056899999999806e-05, 2.1055999999998465e-05, 2.105499999999899e-05, 2.054100000000239e-05, 2.0513999999999255e-05, 2.105500000000246e-05, 2.0570000000001004e-05, 2.1084000000001074e-05, 2.052699999999935e-05, 2.1070000000001504e-05, 2.055499999999849e-05, 2.0528000000002294e-05, 2.0527999999998825e-05, 2.1000000000000185e-05, 2.105499999999899e-05, 2.105499999999899e-05, 2.1027999999999325e-05, 2.111100000000074e-05, 2.105499999999899e-05, 2.055500000000196e-05, 2.104099999999942e-05, 2.1056000000001934e-05, 2.1555999999998965e-05, 2.0542000000001864e-05, 2.059700000000067e-05, 2.055500000000196e-05, 2.1556000000002434e-05, 2.1555999999998965e-05, 2.1056000000001934e-05, 2.0570000000001004e-05, 2.0556000000001434e-05, 2.054099999999892e-05, 2.105499999999899e-05, 2.0556000000001434e-05, 2.106899999999856e-05, 2.104099999999942e-05, 2.104100000000289e-05, 2.0542000000001864e-05, 2.0556000000001434e-05, 2.055500000000196e-05, 2.1042000000002364e-05, 2.0570000000001004e-05, 2.104099999999942e-05, 2.0570000000001004e-05, 2.0556000000001434e-05, 2.1055999999998465e-05, 2.105499999999899e-05, 2.1000000000000185e-05]</msg>
<status status="PASS" starttime="20201110 08:34:54.994" endtime="20201110 08:34:54.997"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.990" endtime="20201110 08:34:54.997"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:54.999" endtime="20201110 08:34:55.001"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:55.003" endtime="20201110 08:34:55.022"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.001" endtime="20201110 08:34:55.023"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.998" endtime="20201110 08:34:55.023"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.629" endtime="20201110 08:34:55.024"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.628" endtime="20201110 08:34:55.024"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:55.032" endtime="20201110 08:34:55.050"></status>
</kw>
<msg timestamp="20201110 08:34:55.051" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:55.031" endtime="20201110 08:34:55.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:55.053" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:55.052" endtime="20201110 08:34:55.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:55.054" endtime="20201110 08:34:55.057"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.028" endtime="20201110 08:34:55.057"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.026" endtime="20201110 08:34:55.058"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:55.064" endtime="20201110 08:34:55.348"></status>
</kw>
<msg timestamp="20201110 08:34:55.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019873278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019895347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:55.062" endtime="20201110 08:34:55.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:55.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019873278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019895347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:55.352" endtime="20201110 08:34:55.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:55.361" endtime="20201110 08:34:55.363"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.060" endtime="20201110 08:34:55.363"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.058" endtime="20201110 08:34:55.363"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:55.368" level="INFO">${RESULT} = [{'time': 0.019895347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.206899999999956e-05, 'source_diff': 2.206899999999956e-05}, {'time': 0.019921264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:55.364" endtime="20201110 08:34:55.368"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:55.381" level="INFO">${ACCURACY} = {'source_diff': [2.206899999999956e-05, 2.1986000000001615e-05, 2.2555999999999965e-05, 2.1555999999998965e-05, 2.154099999999992e-05, 2.1555999999998965e-05, 2.155499999999949e-05, 2.20969999999987e-...</msg>
<status status="PASS" starttime="20201110 08:34:55.369" endtime="20201110 08:34:55.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:55.386" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201110 08:34:55.385" endtime="20201110 08:34:55.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:55.388" level="INFO">VALUE: [2.206899999999956e-05, 2.1986000000001615e-05, 2.2555999999999965e-05, 2.1555999999998965e-05, 2.154099999999992e-05, 2.1555999999998965e-05, 2.155499999999949e-05, 2.20969999999987e-05, 2.2028000000000325e-05, 2.2069999999999035e-05, 2.2028000000000325e-05, 2.1555999999998965e-05, 2.1556000000002434e-05, 2.1541999999999395e-05, 2.1555999999998965e-05, 2.1541999999999395e-05, 2.1541999999999395e-05, 2.256900000000006e-05, 2.1555999999998965e-05, 2.2041999999999895e-05, 2.1541999999999395e-05, 2.1556000000002434e-05, 2.2070000000002504e-05, 2.155499999999949e-05, 2.1527999999999825e-05, 2.1986000000001615e-05, 2.1541999999999395e-05, 2.20969999999987e-05, 2.2041999999999895e-05, 2.209700000000217e-05, 2.2084000000002074e-05, 2.154099999999992e-05, 2.1556000000002434e-05, 2.2041999999999895e-05, 2.1500000000000685e-05, 2.2000000000001185e-05, 2.2540999999997452e-05, 2.2055999999999465e-05, 2.254100000000092e-05, 2.205499999999999e-05, 2.155499999999949e-05, 2.2569999999999535e-05, 2.2542000000000395e-05, 2.206899999999956e-05, 2.156899999999906e-05, 2.2097999999998175e-05, 2.2041999999999895e-05, 2.1570000000002004e-05, 2.1527999999999825e-05, 2.204100000000042e-05]</msg>
<status status="PASS" starttime="20201110 08:34:55.387" endtime="20201110 08:34:55.389"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.382" endtime="20201110 08:34:55.390"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:55.392" endtime="20201110 08:34:55.393"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:55.395" endtime="20201110 08:34:55.415"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.394" endtime="20201110 08:34:55.415"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.390" endtime="20201110 08:34:55.416"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.025" endtime="20201110 08:34:55.416"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.024" endtime="20201110 08:34:55.416"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:55.425" endtime="20201110 08:34:55.443"></status>
</kw>
<msg timestamp="20201110 08:34:55.443" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:55.423" endtime="20201110 08:34:55.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:55.446" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:55.444" endtime="20201110 08:34:55.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:55.447" endtime="20201110 08:34:55.449"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.420" endtime="20201110 08:34:55.450"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.418" endtime="20201110 08:34:55.450"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:55.457" endtime="20201110 08:34:55.741"></status>
</kw>
<msg timestamp="20201110 08:34:55.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019896417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019918944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:55.455" endtime="20201110 08:34:55.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:55.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019896417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019918944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:55.746" endtime="20201110 08:34:55.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:55.754" endtime="20201110 08:34:55.755"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.453" endtime="20201110 08:34:55.756"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.451" endtime="20201110 08:34:55.756"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:55.760" level="INFO">${RESULT} = [{'time': 0.019918944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.252700000000135e-05, 'source_diff': 2.252700000000135e-05}, {'time': 0.019945833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:55.757" endtime="20201110 08:34:55.761"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:55.775" level="INFO">${ACCURACY} = {'source_diff': [2.252700000000135e-05, 2.306900000000056e-05, 2.302700000000185e-05, 2.2542000000000395e-05, 2.262499999999834e-05, 2.254100000000092e-05, 2.261100000000224e-05, 2.3056000000000465e-0...</msg>
<status status="PASS" starttime="20201110 08:34:55.761" endtime="20201110 08:34:55.775"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:55.780" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201110 08:34:55.779" endtime="20201110 08:34:55.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:55.782" level="INFO">VALUE: [2.252700000000135e-05, 2.306900000000056e-05, 2.302700000000185e-05, 2.2542000000000395e-05, 2.262499999999834e-05, 2.254100000000092e-05, 2.261100000000224e-05, 2.3056000000000465e-05, 2.3055999999996996e-05, 2.305500000000099e-05, 2.3055999999996996e-05, 2.356900000000106e-05, 2.254100000000092e-05, 2.2569999999999535e-05, 2.3070000000000035e-05, 2.3083999999999605e-05, 2.255500000000049e-05, 2.3054999999997522e-05, 2.256900000000006e-05, 2.256900000000006e-05, 2.258299999999963e-05, 2.2555999999999965e-05, 2.308300000000013e-05, 2.2542000000000395e-05, 2.3056000000000465e-05, 2.2583999999999105e-05, 2.3070000000000035e-05, 2.305500000000099e-05, 2.2555999999999965e-05, 2.3070000000000035e-05, 2.313899999999841e-05, 2.305500000000099e-05, 2.305500000000099e-05, 2.2540999999997452e-05, 2.254100000000092e-05, 2.255500000000049e-05, 2.2542000000000395e-05, 2.2555999999999965e-05, 2.256900000000006e-05, 2.305500000000099e-05, 2.25969999999992e-05, 2.2542000000000395e-05, 2.308300000000013e-05, 2.306900000000056e-05, 2.3042000000000895e-05, 2.2542000000000395e-05, 2.3041999999997426e-05, 2.3041999999997426e-05, 2.3056000000000465e-05, 2.2555999999999965e-05]</msg>
<status status="PASS" starttime="20201110 08:34:55.781" endtime="20201110 08:34:55.783"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.776" endtime="20201110 08:34:55.783"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:55.786" endtime="20201110 08:34:55.787"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:55.789" endtime="20201110 08:34:55.808"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.787" endtime="20201110 08:34:55.809"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.784" endtime="20201110 08:34:55.809"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.417" endtime="20201110 08:34:55.810"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.416" endtime="20201110 08:34:55.810"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:55.818" endtime="20201110 08:34:55.834"></status>
</kw>
<msg timestamp="20201110 08:34:55.834" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:55.817" endtime="20201110 08:34:55.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:55.837" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:55.835" endtime="20201110 08:34:55.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:55.838" endtime="20201110 08:34:55.840"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.814" endtime="20201110 08:34:55.841"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.812" endtime="20201110 08:34:55.841"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:55.848" endtime="20201110 08:34:56.134"></status>
</kw>
<msg timestamp="20201110 08:34:56.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019646819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019670861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:55.846" endtime="20201110 08:34:56.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:56.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019646819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019670861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:56.138" endtime="20201110 08:34:56.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:56.146" endtime="20201110 08:34:56.148"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.844" endtime="20201110 08:34:56.148"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.842" endtime="20201110 08:34:56.149"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:56.153" level="INFO">${RESULT} = [{'time': 0.019670861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4042000000001895e-05, 'source_diff': 2.4042000000001895e-05}, {'time': 0.019700625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:56.149" endtime="20201110 08:34:56.153"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:56.167" level="INFO">${ACCURACY} = {'source_diff': [2.4042000000001895e-05, 2.4055999999997996e-05, 2.3556000000000965e-05, 2.3554999999998022e-05, 2.4012999999999812e-05, 2.4027999999998856e-05, 2.355500000000149e-05, 2.40560000000014...</msg>
<status status="PASS" starttime="20201110 08:34:56.154" endtime="20201110 08:34:56.167"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:56.171" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201110 08:34:56.170" endtime="20201110 08:34:56.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:56.174" level="INFO">VALUE: [2.4042000000001895e-05, 2.4055999999997996e-05, 2.3556000000000965e-05, 2.3554999999998022e-05, 2.4012999999999812e-05, 2.4027999999998856e-05, 2.355500000000149e-05, 2.4056000000001465e-05, 2.352700000000235e-05, 2.3527999999998356e-05, 2.4054999999998522e-05, 2.3999999999999716e-05, 2.3555999999997496e-05, 2.4542000000002395e-05, 2.363899999999891e-05, 2.3555999999997496e-05, 2.4013999999999286e-05, 2.412499999999984e-05, 2.4056000000001465e-05, 2.4082999999997662e-05, 2.3541999999997926e-05, 2.408300000000113e-05, 2.4055999999997996e-05, 2.3570000000000535e-05, 2.3556000000000965e-05, 2.4041999999998426e-05, 2.3527999999998356e-05, 2.3555999999997496e-05, 2.404100000000242e-05, 2.406900000000156e-05, 2.3555999999997496e-05, 2.4042000000001895e-05, 2.4040999999998952e-05, 2.356900000000106e-05, 2.3555999999997496e-05, 2.4040999999998952e-05, 2.3554999999998022e-05, 2.4054999999998522e-05, 2.3556000000000965e-05, 2.4056000000001465e-05, 2.405500000000199e-05, 2.3556000000000965e-05, 2.4055999999997996e-05, 2.3542000000001395e-05, 2.3554999999998022e-05, 2.355500000000149e-05, 2.3542000000001395e-05, 2.4068999999998092e-05, 2.3569999999997066e-05, 2.4541999999998926e-05]</msg>
<status status="PASS" starttime="20201110 08:34:56.172" endtime="20201110 08:34:56.174"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.167" endtime="20201110 08:34:56.175"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:56.177" endtime="20201110 08:34:56.178"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:56.181" endtime="20201110 08:34:56.200"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.179" endtime="20201110 08:34:56.201"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.175" endtime="20201110 08:34:56.201"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.811" endtime="20201110 08:34:56.201"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.810" endtime="20201110 08:34:56.201"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:56.212" endtime="20201110 08:34:56.231"></status>
</kw>
<msg timestamp="20201110 08:34:56.232" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:56.210" endtime="20201110 08:34:56.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:56.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:56.234" endtime="20201110 08:34:56.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:56.237" endtime="20201110 08:34:56.241"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.206" endtime="20201110 08:34:56.242"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.204" endtime="20201110 08:34:56.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:56.249" endtime="20201110 08:34:56.536"></status>
</kw>
<msg timestamp="20201110 08:34:56.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022162681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022187736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:56.247" endtime="20201110 08:34:56.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:56.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022162681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022187736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:56.541" endtime="20201110 08:34:56.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:56.551" endtime="20201110 08:34:56.553"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.245" endtime="20201110 08:34:56.554"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.243" endtime="20201110 08:34:56.554"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:56.558" level="INFO">${RESULT} = [{'time': 0.022187736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5054999999999522e-05, 'source_diff': 2.5054999999999522e-05}, {'time': 0.022214611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:56.555" endtime="20201110 08:34:56.559"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:56.572" level="INFO">${ACCURACY} = {'source_diff': [2.5054999999999522e-05, 2.4610999999997302e-05, 2.5541999999999926e-05, 2.4527999999999356e-05, 2.4471999999997607e-05, 2.4555999999998496e-05, 2.5041999999999426e-05, 2.4568999999998...</msg>
<status status="PASS" starttime="20201110 08:34:56.559" endtime="20201110 08:34:56.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:56.576" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201110 08:34:56.575" endtime="20201110 08:34:56.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:56.579" level="INFO">VALUE: [2.5054999999999522e-05, 2.4610999999997302e-05, 2.5541999999999926e-05, 2.4527999999999356e-05, 2.4471999999997607e-05, 2.4555999999998496e-05, 2.5041999999999426e-05, 2.4568999999998592e-05, 2.5054999999999522e-05, 2.5568999999999592e-05, 2.5054999999999522e-05, 2.5042000000002895e-05, 2.5040999999999952e-05, 2.5040999999999952e-05, 2.5070000000002035e-05, 2.5056000000002465e-05, 2.5069999999998566e-05, 2.45970000000012e-05, 2.5056000000002465e-05, 2.506900000000256e-05, 2.454100000000292e-05, 2.50970000000017e-05, 2.5055999999998996e-05, 2.5068999999999092e-05, 2.5042000000002895e-05, 2.508300000000213e-05, 2.4555999999998496e-05, 2.4556000000001965e-05, 2.4555999999998496e-05, 2.4540999999999452e-05, 2.5055999999998996e-05, 2.5041999999999426e-05, 2.4541999999998926e-05, 2.4554999999999022e-05, 2.4555999999998496e-05, 2.4568999999998592e-05, 2.4554999999999022e-05, 2.4556000000001965e-05, 2.5054999999999522e-05, 2.5055999999998996e-05, 2.4570000000001535e-05, 2.455500000000249e-05, 2.5027999999999856e-05, 2.508300000000213e-05, 2.4540999999999452e-05, 2.50970000000017e-05, 2.5041999999999426e-05, 2.5054999999999522e-05, 2.5054999999999522e-05, 2.4598000000000675e-05]</msg>
<status status="PASS" starttime="20201110 08:34:56.578" endtime="20201110 08:34:56.580"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.573" endtime="20201110 08:34:56.581"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:56.583" endtime="20201110 08:34:56.584"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:56.586" endtime="20201110 08:34:56.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.585" endtime="20201110 08:34:56.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.581" endtime="20201110 08:34:56.607"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.202" endtime="20201110 08:34:56.607"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.202" endtime="20201110 08:34:56.607"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:56.616" endtime="20201110 08:34:56.633"></status>
</kw>
<msg timestamp="20201110 08:34:56.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:56.614" endtime="20201110 08:34:56.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:56.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:56.634" endtime="20201110 08:34:56.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:56.637" endtime="20201110 08:34:56.639"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.612" endtime="20201110 08:34:56.640"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.609" endtime="20201110 08:34:56.640"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:56.647" endtime="20201110 08:34:56.934"></status>
</kw>
<msg timestamp="20201110 08:34:56.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019741917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019767972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:56.645" endtime="20201110 08:34:56.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:56.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019741917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019767972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:56.938" endtime="20201110 08:34:56.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:56.946" endtime="20201110 08:34:56.948"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.643" endtime="20201110 08:34:56.948"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.641" endtime="20201110 08:34:56.949"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:56.953" level="INFO">${RESULT} = [{'time': 0.019767972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6055000000000522e-05, 'source_diff': 2.6055000000000522e-05}, {'time': 0.019798958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:56.950" endtime="20201110 08:34:56.953"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:56.967" level="INFO">${ACCURACY} = {'source_diff': [2.6055000000000522e-05, 2.6054999999997053e-05, 2.5541000000000452e-05, 2.5569999999999066e-05, 2.6069999999999566e-05, 2.5541000000000452e-05, 2.5528000000000356e-05, 2.6082999999999...</msg>
<status status="PASS" starttime="20201110 08:34:56.954" endtime="20201110 08:34:56.967"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:56.971" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201110 08:34:56.970" endtime="20201110 08:34:56.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:56.974" level="INFO">VALUE: [2.6055000000000522e-05, 2.6054999999997053e-05, 2.5541000000000452e-05, 2.5569999999999066e-05, 2.6069999999999566e-05, 2.5541000000000452e-05, 2.5528000000000356e-05, 2.6082999999999662e-05, 2.5541999999999926e-05, 2.6069999999999566e-05, 2.5555999999999496e-05, 2.5596999999998732e-05, 2.5568999999999592e-05, 2.6068999999996623e-05, 2.5528000000000356e-05, 2.5555999999999496e-05, 2.5555000000000022e-05, 2.5555999999999496e-05, 2.5556000000002965e-05, 2.6014000000001286e-05, 2.6055000000000522e-05, 2.561100000000177e-05, 2.6027000000001382e-05, 2.6055999999999996e-05, 2.6041000000000952e-05, 2.5624999999997872e-05, 2.5569999999999066e-05, 2.6540999999997983e-05, 2.6069999999999566e-05, 2.6042000000000426e-05, 2.6055999999999996e-05, 2.5555999999999496e-05, 2.5555999999999496e-05, 2.6055999999999996e-05, 2.6055000000000522e-05, 2.5541999999999926e-05, 2.6082999999999662e-05, 2.6542000000000926e-05, 2.6055999999999996e-05, 2.6542000000000926e-05, 2.5555999999999496e-05, 2.5568999999999592e-05, 2.6069000000000092e-05, 2.6054999999997053e-05, 2.558300000000263e-05, 2.5999999999998247e-05, 2.5541000000000452e-05, 2.6069000000000092e-05, 2.5999999999998247e-05, 2.5527000000000882e-05]</msg>
<status status="PASS" starttime="20201110 08:34:56.972" endtime="20201110 08:34:56.974"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.968" endtime="20201110 08:34:56.975"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:56.977" endtime="20201110 08:34:56.978"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:56.981" endtime="20201110 08:34:57.000"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.979" endtime="20201110 08:34:57.001"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.976" endtime="20201110 08:34:57.002"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.608" endtime="20201110 08:34:57.002"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.607" endtime="20201110 08:34:57.002"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:57.010" endtime="20201110 08:34:57.028"></status>
</kw>
<msg timestamp="20201110 08:34:57.028" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:57.009" endtime="20201110 08:34:57.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:57.031" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:57.030" endtime="20201110 08:34:57.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:57.032" endtime="20201110 08:34:57.035"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.006" endtime="20201110 08:34:57.035"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.004" endtime="20201110 08:34:57.036"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:57.042" endtime="20201110 08:34:57.332"></status>
</kw>
<msg timestamp="20201110 08:34:57.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020147375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020174403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:57.040" endtime="20201110 08:34:57.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:57.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020147375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020174403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:57.337" endtime="20201110 08:34:57.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:57.347" endtime="20201110 08:34:57.349"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.038" endtime="20201110 08:34:57.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.036" endtime="20201110 08:34:57.350"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:57.356" level="INFO">${RESULT} = [{'time': 0.020174403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7028000000001856e-05, 'source_diff': 2.7028000000001856e-05}, {'time': 0.020204264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:57.351" endtime="20201110 08:34:57.356"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:57.373" level="INFO">${ACCURACY} = {'source_diff': [2.7028000000001856e-05, 2.6570000000000066e-05, 2.7124999999999372e-05, 2.6596999999999732e-05, 2.6556000000000496e-05, 2.712500000000284e-05, 2.7554999999998553e-05, 2.74860000000001...</msg>
<status status="PASS" starttime="20201110 08:34:57.357" endtime="20201110 08:34:57.374"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:57.379" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201110 08:34:57.378" endtime="20201110 08:34:57.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:57.383" level="INFO">VALUE: [2.7028000000001856e-05, 2.6570000000000066e-05, 2.7124999999999372e-05, 2.6596999999999732e-05, 2.6556000000000496e-05, 2.712500000000284e-05, 2.7554999999998553e-05, 2.7486000000000177e-05, 2.7124999999999372e-05, 2.7042000000001426e-05, 2.7056000000000996e-05, 2.6540999999997983e-05, 2.7041999999997957e-05, 2.6556000000000496e-05, 2.6554999999997553e-05, 2.7056000000000996e-05, 2.6555999999997026e-05, 2.7054999999998053e-05, 2.7138999999998942e-05, 2.6556000000000496e-05, 2.7056000000000996e-05, 2.7000000000002716e-05, 2.7068999999997623e-05, 2.6556000000000496e-05, 2.7042000000001426e-05, 2.7555999999998027e-05, 2.7069000000001092e-05, 2.6541999999997457e-05, 2.6569000000000592e-05, 2.7056000000000996e-05, 2.7000000000002716e-05, 2.7041000000001952e-05, 2.6554999999997553e-05, 2.7055999999997526e-05, 2.6499999999998747e-05, 2.6554999999997553e-05, 2.6471999999999607e-05, 2.6999999999999247e-05, 2.6555999999997026e-05, 2.7056000000000996e-05, 2.6555000000001022e-05, 2.7042000000001426e-05, 2.7070000000000566e-05, 2.7014000000002286e-05, 2.6985999999999677e-05, 2.7055000000001522e-05, 2.6542000000000926e-05, 2.7041999999997957e-05, 2.7569000000001592e-05, 2.6583000000000162e-05]</msg>
<status status="PASS" starttime="20201110 08:34:57.381" endtime="20201110 08:34:57.384"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.374" endtime="20201110 08:34:57.386"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:57.391" endtime="20201110 08:34:57.395"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:57.400" endtime="20201110 08:34:57.422"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.396" endtime="20201110 08:34:57.422"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.387" endtime="20201110 08:34:57.423"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.003" endtime="20201110 08:34:57.423"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.002" endtime="20201110 08:34:57.423"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:57.432" endtime="20201110 08:34:57.450"></status>
</kw>
<msg timestamp="20201110 08:34:57.450" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:57.430" endtime="20201110 08:34:57.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:57.453" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:57.451" endtime="20201110 08:34:57.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:57.454" endtime="20201110 08:34:57.457"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.428" endtime="20201110 08:34:57.457"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.426" endtime="20201110 08:34:57.458"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:57.465" endtime="20201110 08:34:57.750"></status>
</kw>
<msg timestamp="20201110 08:34:57.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020588236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020616278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:57.463" endtime="20201110 08:34:57.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:57.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020588236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020616278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:57.754" endtime="20201110 08:34:57.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:57.763" endtime="20201110 08:34:57.764"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.460" endtime="20201110 08:34:57.765"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.458" endtime="20201110 08:34:57.765"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:57.769" level="INFO">${RESULT} = [{'time': 0.020616278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8041999999998957e-05, 'source_diff': 2.8041999999998957e-05}, {'time': 0.020646917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:57.766" endtime="20201110 08:34:57.770"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:57.783" level="INFO">${ACCURACY} = {'source_diff': [2.8041999999998957e-05, 2.8070000000001566e-05, 2.7569000000001592e-05, 2.8068999999998623e-05, 2.7499999999999747e-05, 2.7486000000000177e-05, 2.8041000000002952e-05, 2.8083000000001...</msg>
<status status="PASS" starttime="20201110 08:34:57.770" endtime="20201110 08:34:57.783"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:57.788" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201110 08:34:57.787" endtime="20201110 08:34:57.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:57.790" level="INFO">VALUE: [2.8041999999998957e-05, 2.8070000000001566e-05, 2.7569000000001592e-05, 2.8068999999998623e-05, 2.7499999999999747e-05, 2.7486000000000177e-05, 2.8041000000002952e-05, 2.8083000000001662e-05, 2.8042000000002426e-05, 2.8097000000001232e-05, 2.7583000000001162e-05, 2.8056000000001996e-05, 2.8055999999998527e-05, 2.8040999999999483e-05, 2.8068999999998623e-05, 2.8026999999999913e-05, 2.7541999999998457e-05, 2.8054999999999053e-05, 2.8055999999998527e-05, 2.7556000000001496e-05, 2.8055999999998527e-05, 2.7513999999999317e-05, 2.8027999999999387e-05, 2.7486000000000177e-05, 2.8055000000002522e-05, 2.7528000000002356e-05, 2.7555000000002022e-05, 2.7528000000002356e-05, 2.8054999999999053e-05, 2.8054999999999053e-05, 2.8097000000001232e-05, 2.7540999999998983e-05, 2.7556000000001496e-05, 2.7568999999998123e-05, 2.7555999999998027e-05, 2.8055999999998527e-05, 2.7556000000001496e-05, 2.8554999999999553e-05, 2.7555000000002022e-05, 2.8040999999999483e-05, 2.8055000000002522e-05, 2.7527999999998887e-05, 2.8055999999998527e-05, 2.7528000000002356e-05, 2.7526999999999413e-05, 2.8069000000002092e-05, 2.7542000000001926e-05, 2.7541000000002452e-05, 2.8041999999998957e-05, 2.8054999999999053e-05]</msg>
<status status="PASS" starttime="20201110 08:34:57.789" endtime="20201110 08:34:57.791"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.784" endtime="20201110 08:34:57.791"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:57.794" endtime="20201110 08:34:57.795"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:57.797" endtime="20201110 08:34:57.816"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.796" endtime="20201110 08:34:57.817"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.792" endtime="20201110 08:34:57.817"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.424" endtime="20201110 08:34:57.818"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.423" endtime="20201110 08:34:57.818"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:57.826" endtime="20201110 08:34:57.844"></status>
</kw>
<msg timestamp="20201110 08:34:57.845" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:57.825" endtime="20201110 08:34:57.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:57.850" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:57.847" endtime="20201110 08:34:57.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:57.852" endtime="20201110 08:34:57.857"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.822" endtime="20201110 08:34:57.859"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.820" endtime="20201110 08:34:57.860"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:57.873" endtime="20201110 08:34:58.166"></status>
</kw>
<msg timestamp="20201110 08:34:58.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019810958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019839514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:57.870" endtime="20201110 08:34:58.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:58.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019810958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019839514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:58.170" endtime="20201110 08:34:58.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:58.179" endtime="20201110 08:34:58.181"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.865" endtime="20201110 08:34:58.181"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.861" endtime="20201110 08:34:58.182"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:58.186" level="INFO">${RESULT} = [{'time': 0.019839514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8555999999999027e-05, 'source_diff': 2.8555999999999027e-05}, {'time': 0.019871625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:58.183" endtime="20201110 08:34:58.186"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:58.200" level="INFO">${ACCURACY} = {'source_diff': [2.8555999999999027e-05, 2.9528000000000887e-05, 2.8999999999997778e-05, 2.8556000000002496e-05, 2.8986000000001677e-05, 2.8554999999999553e-05, 2.9041999999999957e-05, 2.8514000000000...</msg>
<status status="PASS" starttime="20201110 08:34:58.187" endtime="20201110 08:34:58.201"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:58.205" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201110 08:34:58.204" endtime="20201110 08:34:58.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:58.208" level="INFO">VALUE: [2.8555999999999027e-05, 2.9528000000000887e-05, 2.8999999999997778e-05, 2.8556000000002496e-05, 2.8986000000001677e-05, 2.8554999999999553e-05, 2.9041999999999957e-05, 2.8514000000000317e-05, 2.9111000000001802e-05, 2.8555999999999027e-05, 2.9096999999998763e-05, 2.9082999999999193e-05, 2.8582999999998693e-05, 2.8554999999999553e-05, 2.9055000000000053e-05, 2.9041999999999957e-05, 2.8569000000002592e-05, 2.9041999999999957e-05, 2.9055999999999527e-05, 2.9028000000000387e-05, 2.8554999999999553e-05, 2.8541999999999457e-05, 2.9041999999999957e-05, 2.8555999999999027e-05, 2.8611000000001302e-05, 2.9041000000000483e-05, 2.9068999999999623e-05, 2.9041999999999957e-05, 2.8540999999999983e-05, 2.8541999999999457e-05, 2.9041000000000483e-05, 2.9485999999998708e-05, 2.9055999999999527e-05, 2.9055999999999527e-05, 2.9055999999999527e-05, 2.9055000000000053e-05, 2.9041999999999957e-05, 2.9013999999997347e-05, 2.9068999999999623e-05, 2.9041999999999957e-05, 2.8541999999999457e-05, 2.8554999999999553e-05, 2.8596999999998263e-05, 2.9069000000003092e-05, 2.8569999999998597e-05, 2.8569000000002592e-05, 2.8555000000003022e-05, 2.8555000000003022e-05, 2.9055999999999527e-05, 2.8540999999999983e-05]</msg>
<status status="PASS" starttime="20201110 08:34:58.206" endtime="20201110 08:34:58.208"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.201" endtime="20201110 08:34:58.209"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:58.211" endtime="20201110 08:34:58.213"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:58.215" endtime="20201110 08:34:58.234"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.213" endtime="20201110 08:34:58.235"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.210" endtime="20201110 08:34:58.235"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.819" endtime="20201110 08:34:58.236"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.818" endtime="20201110 08:34:58.236"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:58.245" endtime="20201110 08:34:58.265"></status>
</kw>
<msg timestamp="20201110 08:34:58.266" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:58.243" endtime="20201110 08:34:58.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:58.271" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:58.268" endtime="20201110 08:34:58.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:58.272" endtime="20201110 08:34:58.277"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.241" endtime="20201110 08:34:58.278"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.238" endtime="20201110 08:34:58.278"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:58.291" endtime="20201110 08:34:58.578"></status>
</kw>
<msg timestamp="20201110 08:34:58.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020418264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020448306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:58.288" endtime="20201110 08:34:58.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:58.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020418264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020448306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:58.582" endtime="20201110 08:34:58.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:58.591" endtime="20201110 08:34:58.593"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.284" endtime="20201110 08:34:58.593"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.280" endtime="20201110 08:34:58.594"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:58.598" level="INFO">${RESULT} = [{'time': 0.020448306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0042000000000957e-05, 'source_diff': 3.0042000000000957e-05}, {'time': 0.020483875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:58.594" endtime="20201110 08:34:58.598"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:58.612" level="INFO">${ACCURACY} = {'source_diff': [3.0042000000000957e-05, 2.9556000000000027e-05, 3.0040999999998014e-05, 3.0041999999997487e-05, 3.0055000000001053e-05, 2.9527000000001413e-05, 2.9541000000000983e-05, 3.0041000000001...</msg>
<status status="PASS" starttime="20201110 08:34:58.599" endtime="20201110 08:34:58.612"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:58.617" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201110 08:34:58.616" endtime="20201110 08:34:58.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:58.619" level="INFO">VALUE: [3.0042000000000957e-05, 2.9556000000000027e-05, 3.0040999999998014e-05, 3.0041999999997487e-05, 3.0055000000001053e-05, 2.9527000000001413e-05, 2.9541000000000983e-05, 3.0041000000001483e-05, 3.0069000000000623e-05, 2.9540999999997514e-05, 3.0054999999997584e-05, 3.0054999999997584e-05, 3.0069000000000623e-05, 3.0040999999998014e-05, 2.9999999999998778e-05, 2.9569999999999597e-05, 3.0069000000000623e-05, 2.9541999999996987e-05, 2.9985999999999208e-05, 3.0042000000000957e-05, 3.05700000000006e-05, 2.9554999999997084e-05, 2.9555000000000553e-05, 3.0069000000000623e-05, 3.0055000000001053e-05, 2.9554999999997084e-05, 3.0056000000000527e-05, 3.0041999999997487e-05, 3.0056000000000527e-05, 2.9556000000000027e-05, 3.0056000000000527e-05, 3.055600000000103e-05, 2.9554999999997084e-05, 3.055600000000103e-05, 2.9528000000000887e-05, 2.9541999999996987e-05, 2.9542000000000457e-05, 2.9542000000000457e-05, 3.0000000000002247e-05, 3.0042000000000957e-05, 2.9569999999999597e-05, 2.9555000000000553e-05, 3.0083000000000193e-05, 2.9527000000001413e-05, 2.9569000000000123e-05, 3.0056000000000527e-05, 3.0069000000000623e-05, 3.0540999999998514e-05, 3.052800000000189e-05, 2.9596999999999263e-05]</msg>
<status status="PASS" starttime="20201110 08:34:58.618" endtime="20201110 08:34:58.620"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.613" endtime="20201110 08:34:58.621"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:58.623" endtime="20201110 08:34:58.624"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:58.627" endtime="20201110 08:34:58.646"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.625" endtime="20201110 08:34:58.647"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.621" endtime="20201110 08:34:58.647"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.237" endtime="20201110 08:34:58.647"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.236" endtime="20201110 08:34:58.648"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:58.657" endtime="20201110 08:34:58.674"></status>
</kw>
<msg timestamp="20201110 08:34:58.675" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:58.655" endtime="20201110 08:34:58.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:58.677" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:58.676" endtime="20201110 08:34:58.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:58.678" endtime="20201110 08:34:58.681"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.652" endtime="20201110 08:34:58.682"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.650" endtime="20201110 08:34:58.682"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:58.689" endtime="20201110 08:34:58.976"></status>
</kw>
<msg timestamp="20201110 08:34:58.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020392028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020422597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:58.687" endtime="20201110 08:34:58.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:58.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020392028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020422597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:58.980" endtime="20201110 08:34:58.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:58.989" endtime="20201110 08:34:58.991"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.685" endtime="20201110 08:34:58.992"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.683" endtime="20201110 08:34:58.992"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:58.996" level="INFO">${RESULT} = [{'time': 0.020422597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.056900000000112e-05, 'source_diff': 3.056900000000112e-05}, {'time': 0.020458958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:58.993" endtime="20201110 08:34:58.997"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:59.012" level="INFO">${ACCURACY} = {'source_diff': [3.056900000000112e-05, 3.061099999999983e-05, 3.106900000000162e-05, 3.1568999999998654e-05, 3.104200000000196e-05, 3.105600000000153e-05, 3.055600000000103e-05, 3.104100000000248e-05...</msg>
<status status="PASS" starttime="20201110 08:34:58.997" endtime="20201110 08:34:59.012"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.017" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201110 08:34:59.015" endtime="20201110 08:34:59.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.019" level="INFO">VALUE: [3.056900000000112e-05, 3.061099999999983e-05, 3.106900000000162e-05, 3.1568999999998654e-05, 3.104200000000196e-05, 3.105600000000153e-05, 3.055600000000103e-05, 3.104100000000248e-05, 3.055500000000155e-05, 3.105599999999806e-05, 3.055600000000103e-05, 3.0513999999998848e-05, 3.059700000000026e-05, 3.104199999999849e-05, 3.102800000000239e-05, 3.150000000000028e-05, 3.052800000000189e-05, 3.055600000000103e-05, 3.055500000000155e-05, 3.101400000000282e-05, 3.056900000000112e-05, 3.105599999999806e-05, 3.0568999999997654e-05, 3.055599999999756e-05, 3.1040999999999014e-05, 3.054200000000146e-05, 3.055600000000103e-05, 3.154199999999899e-05, 3.101399999999935e-05, 3.0540999999998514e-05, 3.102799999999892e-05, 3.054199999999799e-05, 3.1082999999997724e-05, 3.104199999999849e-05, 3.101400000000282e-05, 3.104200000000196e-05, 3.104200000000196e-05, 3.1054999999998584e-05, 3.054200000000146e-05, 3.055600000000103e-05, 3.104200000000196e-05, 3.05700000000006e-05, 3.1554999999999084e-05, 3.10700000000011e-05, 3.055600000000103e-05, 3.05700000000006e-05, 3.102800000000239e-05, 3.055599999999756e-05, 3.1040999999999014e-05, 3.105500000000205e-05]</msg>
<status status="PASS" starttime="20201110 08:34:59.018" endtime="20201110 08:34:59.020"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.013" endtime="20201110 08:34:59.021"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:59.024" endtime="20201110 08:34:59.025"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:59.028" endtime="20201110 08:34:59.047"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.026" endtime="20201110 08:34:59.048"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.022" endtime="20201110 08:34:59.049"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.649" endtime="20201110 08:34:59.049"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.648" endtime="20201110 08:34:59.049"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:59.058" endtime="20201110 08:34:59.076"></status>
</kw>
<msg timestamp="20201110 08:34:59.076" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:59.056" endtime="20201110 08:34:59.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.079" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:59.077" endtime="20201110 08:34:59.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:59.080" endtime="20201110 08:34:59.083"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.054" endtime="20201110 08:34:59.083"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.052" endtime="20201110 08:34:59.084"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:59.090" endtime="20201110 08:34:59.377"></status>
</kw>
<msg timestamp="20201110 08:34:59.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020342903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020374458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:59.089" endtime="20201110 08:34:59.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020342903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020374458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:59.381" endtime="20201110 08:34:59.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:59.390" endtime="20201110 08:34:59.392"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.086" endtime="20201110 08:34:59.392"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.084" endtime="20201110 08:34:59.393"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:59.397" level="INFO">${RESULT} = [{'time': 0.020374458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.155500000000255e-05, 'source_diff': 3.155500000000255e-05}, {'time': 0.020411278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:59.394" endtime="20201110 08:34:59.397"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:59.411" level="INFO">${ACCURACY} = {'source_diff': [3.155500000000255e-05, 3.20700000000021e-05, 3.154199999999899e-05, 3.2041000000000014e-05, 3.161100000000083e-05, 3.154199999999899e-05, 3.1554999999999084e-05, 3.2068999999999154e-0...</msg>
<status status="PASS" starttime="20201110 08:34:59.398" endtime="20201110 08:34:59.411"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.416" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201110 08:34:59.415" endtime="20201110 08:34:59.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.418" level="INFO">VALUE: [3.155500000000255e-05, 3.20700000000021e-05, 3.154199999999899e-05, 3.2041000000000014e-05, 3.161100000000083e-05, 3.154199999999899e-05, 3.1554999999999084e-05, 3.2068999999999154e-05, 3.1568999999998654e-05, 3.209700000000176e-05, 3.155600000000203e-05, 3.205599999999906e-05, 3.155599999999856e-05, 3.204200000000296e-05, 3.205599999999906e-05, 3.2112000000000807e-05, 3.20700000000021e-05, 3.1540999999999514e-05, 3.2054999999999584e-05, 3.150000000000028e-05, 3.2555000000000084e-05, 3.206999999999863e-05, 3.2555000000000084e-05, 3.205599999999906e-05, 3.2027000000000444e-05, 3.155600000000203e-05, 3.154199999999899e-05, 3.156900000000212e-05, 3.151399999999985e-05, 3.154199999999899e-05, 3.204199999999949e-05, 3.2555000000000084e-05, 3.152799999999942e-05, 3.2054999999999584e-05, 3.152799999999942e-05, 3.2110999999997863e-05, 3.205599999999906e-05, 3.155599999999856e-05, 3.204200000000296e-05, 3.155599999999856e-05, 3.202799999999992e-05, 3.205599999999906e-05, 3.1540999999999514e-05, 3.1554999999999084e-05, 3.155599999999856e-05, 3.200000000000078e-05, 3.154100000000298e-05, 3.204199999999949e-05, 3.254199999999999e-05, 3.2054999999999584e-05]</msg>
<status status="PASS" starttime="20201110 08:34:59.417" endtime="20201110 08:34:59.419"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.412" endtime="20201110 08:34:59.420"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:59.422" endtime="20201110 08:34:59.423"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:59.426" endtime="20201110 08:34:59.445"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.424" endtime="20201110 08:34:59.446"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.420" endtime="20201110 08:34:59.446"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.050" endtime="20201110 08:34:59.447"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.049" endtime="20201110 08:34:59.447"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:59.456" endtime="20201110 08:34:59.474"></status>
</kw>
<msg timestamp="20201110 08:34:59.474" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:59.454" endtime="20201110 08:34:59.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.477" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:59.475" endtime="20201110 08:34:59.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:59.478" endtime="20201110 08:34:59.480"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.451" endtime="20201110 08:34:59.481"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.449" endtime="20201110 08:34:59.482"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:59.488" endtime="20201110 08:34:59.776"></status>
</kw>
<msg timestamp="20201110 08:34:59.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020383583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020416139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:59.487" endtime="20201110 08:34:59.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020383583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020416139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:59.781" endtime="20201110 08:34:59.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:59.790" endtime="20201110 08:34:59.791"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.484" endtime="20201110 08:34:59.792"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.482" endtime="20201110 08:34:59.792"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:59.797" level="INFO">${RESULT} = [{'time': 0.020416139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.255599999999956e-05, 'source_diff': 3.255599999999956e-05}, {'time': 0.020453014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:59.793" endtime="20201110 08:34:59.797"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:59.811" level="INFO">${ACCURACY} = {'source_diff': [3.255599999999956e-05, 3.255599999999956e-05, 3.3055000000000584e-05, 3.2582999999999224e-05, 3.3096999999999294e-05, 3.254199999999999e-05, 3.255600000000303e-05, 3.2541000000000514e...</msg>
<status status="PASS" starttime="20201110 08:34:59.798" endtime="20201110 08:34:59.811"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.815" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201110 08:34:59.814" endtime="20201110 08:34:59.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.818" level="INFO">VALUE: [3.255599999999956e-05, 3.255599999999956e-05, 3.3055000000000584e-05, 3.2582999999999224e-05, 3.3096999999999294e-05, 3.254199999999999e-05, 3.255600000000303e-05, 3.2541000000000514e-05, 3.305600000000006e-05, 3.3055000000000584e-05, 3.304200000000049e-05, 3.355600000000056e-05, 3.304200000000049e-05, 3.255599999999956e-05, 3.3069000000000154e-05, 3.355600000000056e-05, 3.3055000000000584e-05, 3.3055000000000584e-05, 3.3069000000000154e-05, 3.256999999999913e-05, 3.3055000000000584e-05, 3.3054999999997114e-05, 3.2541000000000514e-05, 3.305600000000006e-05, 3.30839999999992e-05, 3.252800000000042e-05, 3.3082999999999724e-05, 3.3082999999999724e-05, 3.302800000000092e-05, 3.254199999999999e-05, 3.3069000000000154e-05, 3.304200000000049e-05, 3.305600000000006e-05, 3.256999999999913e-05, 3.254199999999999e-05, 3.2568999999999654e-05, 3.3540999999998045e-05, 3.299999999999831e-05, 3.252800000000042e-05, 3.304200000000049e-05, 3.3096999999999294e-05, 3.305600000000006e-05, 3.254199999999999e-05, 3.255599999999956e-05, 3.2555000000000084e-05, 3.25700000000026e-05, 3.305600000000006e-05, 3.2568999999999654e-05, 3.3069000000000154e-05, 3.2555000000000084e-05]</msg>
<status status="PASS" starttime="20201110 08:34:59.816" endtime="20201110 08:34:59.819"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.812" endtime="20201110 08:34:59.819"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:59.822" endtime="20201110 08:34:59.823"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:59.825" endtime="20201110 08:34:59.845"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.824" endtime="20201110 08:34:59.845"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.820" endtime="20201110 08:34:59.846"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.448" endtime="20201110 08:34:59.846"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.447" endtime="20201110 08:34:59.846"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:59.855" endtime="20201110 08:34:59.872"></status>
</kw>
<msg timestamp="20201110 08:34:59.872" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:59.854" endtime="20201110 08:34:59.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.875" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:59.873" endtime="20201110 08:34:59.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:59.876" endtime="20201110 08:34:59.879"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.851" endtime="20201110 08:34:59.879"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.849" endtime="20201110 08:34:59.880"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:59.886" endtime="20201110 08:35:00.173"></status>
</kw>
<msg timestamp="20201110 08:35:00.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020368028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020401583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:59.885" endtime="20201110 08:35:00.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:00.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020368028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020401583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:00.177" endtime="20201110 08:35:00.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:00.186" endtime="20201110 08:35:00.188"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.882" endtime="20201110 08:35:00.188"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.880" endtime="20201110 08:35:00.189"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:00.193" level="INFO">${RESULT} = [{'time': 0.020401583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3555000000001084e-05, 'source_diff': 3.3555000000001084e-05}, {'time': 0.020438458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:00.189" endtime="20201110 08:35:00.193"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:00.207" level="INFO">${ACCURACY} = {'source_diff': [3.3555000000001084e-05, 3.4110999999999864e-05, 3.4138999999999003e-05, 3.354199999999752e-05, 3.357000000000013e-05, 3.4054999999998115e-05, 3.3555000000001084e-05, 3.348599999999924...</msg>
<status status="PASS" starttime="20201110 08:35:00.194" endtime="20201110 08:35:00.207"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:00.212" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201110 08:35:00.211" endtime="20201110 08:35:00.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:00.214" level="INFO">VALUE: [3.3555000000001084e-05, 3.4110999999999864e-05, 3.4138999999999003e-05, 3.354199999999752e-05, 3.357000000000013e-05, 3.4054999999998115e-05, 3.3555000000001084e-05, 3.348599999999924e-05, 3.402799999999845e-05, 3.4069000000001154e-05, 3.4054999999998115e-05, 3.404200000000149e-05, 3.354200000000099e-05, 3.3555000000001084e-05, 3.3555000000001084e-05, 3.3569000000000654e-05, 3.405600000000106e-05, 3.3527000000001944e-05, 3.405600000000106e-05, 3.354200000000099e-05, 3.4054999999998115e-05, 3.407000000000063e-05, 3.3569000000000654e-05, 3.354200000000099e-05, 3.404200000000149e-05, 3.354200000000099e-05, 3.3610999999999364e-05, 3.454200000000199e-05, 3.4069000000001154e-05, 3.455600000000156e-05, 3.405600000000106e-05, 3.355600000000056e-05, 3.4138999999999003e-05, 3.354200000000099e-05, 3.357000000000013e-05, 3.357000000000013e-05, 3.3555000000001084e-05, 3.351400000000185e-05, 3.405600000000106e-05, 3.4041000000002014e-05, 3.3554999999997615e-05, 3.404200000000149e-05, 3.355600000000056e-05, 3.4041000000002014e-05, 3.359700000000326e-05, 3.404199999999802e-05, 3.4069000000001154e-05, 3.3541000000001514e-05, 3.352800000000142e-05, 3.3555000000001084e-05]</msg>
<status status="PASS" starttime="20201110 08:35:00.213" endtime="20201110 08:35:00.215"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.208" endtime="20201110 08:35:00.216"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:00.218" endtime="20201110 08:35:00.219"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:00.222" endtime="20201110 08:35:00.241"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.220" endtime="20201110 08:35:00.242"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.216" endtime="20201110 08:35:00.242"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.847" endtime="20201110 08:35:00.243"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.847" endtime="20201110 08:35:00.243"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:00.252" endtime="20201110 08:35:00.269"></status>
</kw>
<msg timestamp="20201110 08:35:00.270" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:00.250" endtime="20201110 08:35:00.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:00.272" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:00.271" endtime="20201110 08:35:00.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:00.274" endtime="20201110 08:35:00.276"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.247" endtime="20201110 08:35:00.277"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.245" endtime="20201110 08:35:00.277"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:00.284" endtime="20201110 08:35:00.570"></status>
</kw>
<msg timestamp="20201110 08:35:00.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020284903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020335986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:00.282" endtime="20201110 08:35:00.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:00.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020284903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020335986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:00.575" endtime="20201110 08:35:00.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:00.583" endtime="20201110 08:35:00.585"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.280" endtime="20201110 08:35:00.585"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.278" endtime="20201110 08:35:00.586"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:00.590" level="INFO">${RESULT} = [{'time': 0.020335986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.108300000000038e-05, 'source_diff': 5.108300000000038e-05}, {'time': 0.020393, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201110 08:35:00.587" endtime="20201110 08:35:00.590"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:00.605" level="INFO">${ACCURACY} = {'source_diff': [5.108300000000038e-05, 5.212500000000009e-05, 5.124999999999921e-05, 5.205599999999824e-05, 5.145900000000023e-05, 5.129199999999792e-05, 5.2165999999999324e-05, 5.1901999999999504e-0...</msg>
<status status="PASS" starttime="20201110 08:35:00.591" endtime="20201110 08:35:00.606"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:00.610" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201110 08:35:00.609" endtime="20201110 08:35:00.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:00.613" level="INFO">VALUE: [5.108300000000038e-05, 5.212500000000009e-05, 5.124999999999921e-05, 5.205599999999824e-05, 5.145900000000023e-05, 5.129199999999792e-05, 5.2165999999999324e-05, 5.1901999999999504e-05, 5.130599999999749e-05, 5.122299999999955e-05, 5.180599999999799e-05, 5.211100000000052e-05, 5.169499999999744e-05, 5.124999999999921e-05, 5.20270000000031e-05, 5.18470000000007e-05, 5.186100000000027e-05, 5.18470000000007e-05, 5.1679999999998394e-05, 5.212500000000009e-05, 5.22080000000015e-05, 5.109699999999995e-05, 5.187499999999984e-05, 5.16530000000022e-05, 5.16669999999983e-05, 5.218100000000184e-05, 5.147200000000032e-05, 5.218099999999837e-05, 5.161100000000002e-05, 5.193099999999812e-05, 5.138899999999891e-05, 5.219500000000141e-05, 5.124999999999921e-05, 5.2207999999998034e-05, 5.132000000000053e-05, 5.145900000000023e-05, 5.180500000000199e-05, 5.168100000000134e-05, 5.129099999999845e-05, 5.149999999999946e-05, 5.123599999999964e-05, 5.2165999999999324e-05, 5.169400000000143e-05, 5.227799999999935e-05, 5.144500000000066e-05, 5.124999999999921e-05, 5.155499999999827e-05, 5.137499999999934e-05, 5.21669999999988e-05, 5.155600000000121e-05]</msg>
<status status="PASS" starttime="20201110 08:35:00.611" endtime="20201110 08:35:00.613"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.606" endtime="20201110 08:35:00.614"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:00.616" endtime="20201110 08:35:00.618"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:00.620" endtime="20201110 08:35:00.641"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.618" endtime="20201110 08:35:00.642"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.615" endtime="20201110 08:35:00.643"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.244" endtime="20201110 08:35:00.643"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.243" endtime="20201110 08:35:00.643"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:00.654" endtime="20201110 08:35:00.672"></status>
</kw>
<msg timestamp="20201110 08:35:00.673" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:00.652" endtime="20201110 08:35:00.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:00.675" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:00.674" endtime="20201110 08:35:00.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:00.676" endtime="20201110 08:35:00.679"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.649" endtime="20201110 08:35:00.679"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.646" endtime="20201110 08:35:00.679"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:00.686" endtime="20201110 08:35:00.983"></status>
</kw>
<msg timestamp="20201110 08:35:00.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024616625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024668958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:00.684" endtime="20201110 08:35:00.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:00.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024616625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024668958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:00.987" endtime="20201110 08:35:00.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:00.996" endtime="20201110 08:35:00.997"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.682" endtime="20201110 08:35:00.998"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.680" endtime="20201110 08:35:00.998"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:01.003" level="INFO">${RESULT} = [{'time': 0.024668958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.233300000000163e-05, 'source_diff': 5.233300000000163e-05}, {'time': 0.024725972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:00.999" endtime="20201110 08:35:01.003"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:01.016" level="INFO">${ACCURACY} = {'source_diff': [5.233300000000163e-05, 5.230499999999902e-05, 5.2429999999999144e-05, 5.251400000000003e-05, 5.240300000000295e-05, 5.23609999999973e-05, 5.294499999999869e-05, 5.280599999999899e-05,...</msg>
<status status="PASS" starttime="20201110 08:35:01.003" endtime="20201110 08:35:01.016"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:01.020" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201110 08:35:01.019" endtime="20201110 08:35:01.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:01.023" level="INFO">VALUE: [5.233300000000163e-05, 5.230499999999902e-05, 5.2429999999999144e-05, 5.251400000000003e-05, 5.240300000000295e-05, 5.23609999999973e-05, 5.294499999999869e-05, 5.280599999999899e-05, 5.230599999999849e-05, 5.262500000000059e-05, 5.318099999999937e-05, 5.28609999999978e-05, 5.268099999999887e-05, 5.254200000000264e-05, 5.305599999999924e-05, 5.248700000000037e-05, 5.2415999999999574e-05, 5.3138000000001184e-05, 5.2943999999999214e-05, 5.3179999999999894e-05, 5.255499999999927e-05, 5.261099999999755e-05, 5.256900000000231e-05, 5.2999999999997494e-05, 5.251400000000003e-05, 5.312500000000109e-05, 5.212500000000009e-05, 5.2679999999999394e-05, 5.255600000000221e-05, 5.315300000000023e-05, 5.255599999999874e-05, 5.236100000000077e-05, 5.318099999999937e-05, 5.236100000000077e-05, 5.31669999999998e-05, 5.276400000000028e-05, 5.243100000000209e-05, 5.225000000000021e-05, 5.238899999999991e-05, 5.220900000000098e-05, 5.286200000000074e-05, 5.287500000000084e-05, 5.230499999999902e-05, 5.2402000000000004e-05, 5.23470000000012e-05, 5.2749999999997244e-05, 5.275000000000071e-05, 5.2929999999999644e-05, 5.3179999999999894e-05, 5.279199999999942e-05]</msg>
<status status="PASS" starttime="20201110 08:35:01.022" endtime="20201110 08:35:01.024"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.017" endtime="20201110 08:35:01.024"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:01.027" endtime="20201110 08:35:01.028"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:01.030" endtime="20201110 08:35:01.049"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.028" endtime="20201110 08:35:01.050"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.025" endtime="20201110 08:35:01.051"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.645" endtime="20201110 08:35:01.051"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.644" endtime="20201110 08:35:01.051"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:01.061" endtime="20201110 08:35:01.080"></status>
</kw>
<msg timestamp="20201110 08:35:01.080" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:01.059" endtime="20201110 08:35:01.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:01.083" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:01.081" endtime="20201110 08:35:01.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:01.084" endtime="20201110 08:35:01.087"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.056" endtime="20201110 08:35:01.087"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.054" endtime="20201110 08:35:01.088"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:01.095" endtime="20201110 08:35:01.382"></status>
</kw>
<msg timestamp="20201110 08:35:01.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021569181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021622431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:01.093" endtime="20201110 08:35:01.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:01.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021569181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021622431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:01.386" endtime="20201110 08:35:01.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:01.395" endtime="20201110 08:35:01.397"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.090" endtime="20201110 08:35:01.397"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.088" endtime="20201110 08:35:01.398"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:01.402" level="INFO">${RESULT} = [{'time': 0.021622431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.325000000000121e-05, 'source_diff': 5.325000000000121e-05}, {'time': 0.021679431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:01.398" endtime="20201110 08:35:01.402"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:01.416" level="INFO">${ACCURACY} = {'source_diff': [5.325000000000121e-05, 5.361199999999802e-05, 5.34869999999979e-05, 5.36670000000003e-05, 5.375000000000171e-05, 5.3985999999998924e-05, 5.348600000000189e-05, 5.3680000000000394e-05,...</msg>
<status status="PASS" starttime="20201110 08:35:01.403" endtime="20201110 08:35:01.416"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:01.421" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201110 08:35:01.420" endtime="20201110 08:35:01.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:01.423" level="INFO">VALUE: [5.325000000000121e-05, 5.361199999999802e-05, 5.34869999999979e-05, 5.36670000000003e-05, 5.375000000000171e-05, 5.3985999999998924e-05, 5.348600000000189e-05, 5.3680000000000394e-05, 5.4180000000000894e-05, 5.404200000000067e-05, 5.423600000000264e-05, 5.3666000000000824e-05, 5.337499999999787e-05, 5.325000000000121e-05, 5.384699999999923e-05, 5.336200000000124e-05, 5.363899999999769e-05, 5.3735999999998674e-05, 5.333399999999863e-05, 5.419499999999994e-05, 5.3665999999997355e-05, 5.377700000000138e-05, 5.380500000000052e-05, 5.329199999999992e-05, 5.355599999999974e-05, 5.405600000000024e-05, 5.333299999999916e-05, 5.361100000000202e-05, 5.3707999999999534e-05, 5.3694000000003433e-05, 5.3680000000000394e-05, 5.3930000000000644e-05, 5.412500000000209e-05, 5.3999999999998494e-05, 5.3666000000000824e-05, 5.40549999999973e-05, 5.3902000000001504e-05, 5.3721999999999104e-05, 5.391700000000055e-05, 5.343099999999962e-05, 5.405600000000024e-05, 5.344499999999919e-05, 5.379200000000042e-05, 5.4013999999998064e-05, 5.38609999999988e-05, 5.33609999999983e-05, 5.344499999999919e-05, 5.326400000000078e-05, 5.325000000000121e-05, 5.311200000000099e-05]</msg>
<status status="PASS" starttime="20201110 08:35:01.422" endtime="20201110 08:35:01.424"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.417" endtime="20201110 08:35:01.425"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:01.427" endtime="20201110 08:35:01.428"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:01.431" endtime="20201110 08:35:01.450"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.429" endtime="20201110 08:35:01.451"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.425" endtime="20201110 08:35:01.451"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.052" endtime="20201110 08:35:01.451"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.051" endtime="20201110 08:35:01.452"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:01.460" endtime="20201110 08:35:01.479"></status>
</kw>
<msg timestamp="20201110 08:35:01.479" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:01.459" endtime="20201110 08:35:01.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:01.482" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:01.480" endtime="20201110 08:35:01.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:01.483" endtime="20201110 08:35:01.486"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.456" endtime="20201110 08:35:01.486"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.454" endtime="20201110 08:35:01.487"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:01.494" endtime="20201110 08:35:01.806"></status>
</kw>
<msg timestamp="20201110 08:35:01.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020389222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020443597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:01.492" endtime="20201110 08:35:01.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:01.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020389222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020443597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:01.811" endtime="20201110 08:35:01.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:01.819" endtime="20201110 08:35:01.821"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.489" endtime="20201110 08:35:01.822"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.487" endtime="20201110 08:35:01.822"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:01.827" level="INFO">${RESULT} = [{'time': 0.020443597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.437500000000234e-05, 'source_diff': 5.437500000000234e-05}, {'time': 0.020500542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:01.823" endtime="20201110 08:35:01.827"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:01.841" level="INFO">${ACCURACY} = {'source_diff': [5.437500000000234e-05, 5.487499999999937e-05, 5.516699999999833e-05, 5.490300000000198e-05, 5.437499999999887e-05, 5.458400000000335e-05, 5.431900000000059e-05, 5.4930000000001644e-05...</msg>
<status status="PASS" starttime="20201110 08:35:01.828" endtime="20201110 08:35:01.841"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:01.846" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201110 08:35:01.845" endtime="20201110 08:35:01.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:01.848" level="INFO">VALUE: [5.437500000000234e-05, 5.487499999999937e-05, 5.516699999999833e-05, 5.490300000000198e-05, 5.437499999999887e-05, 5.458400000000335e-05, 5.431900000000059e-05, 5.4930000000001644e-05, 5.4749999999999244e-05, 5.4999999999999494e-05, 5.461099999999955e-05, 5.4249999999998744e-05, 5.480500000000152e-05, 5.512499999999962e-05, 5.516699999999833e-05, 5.441699999999758e-05, 5.486200000000274e-05, 5.484700000000023e-05, 5.480599999999752e-05, 5.4235999999999174e-05, 5.507000000000081e-05, 5.4999999999999494e-05, 5.491700000000155e-05, 5.4749999999999244e-05, 5.468100000000087e-05, 5.430600000000049e-05, 5.4513999999998564e-05, 5.4249999999998744e-05, 5.4887999999999465e-05, 5.513900000000266e-05, 5.470900000000001e-05, 5.51809999999979e-05, 5.488899999999894e-05, 5.480500000000152e-05, 5.4693999999997495e-05, 5.481899999999762e-05, 5.4430000000001144e-05, 5.487499999999937e-05, 5.4749999999999244e-05, 5.4763999999998814e-05, 5.4499999999998994e-05, 5.4985999999999924e-05, 5.469500000000044e-05, 5.490300000000198e-05, 5.468100000000087e-05, 5.51809999999979e-05, 5.412500000000209e-05, 5.4499999999998994e-05, 5.5041999999998203e-05, 5.4915999999998605e-05]</msg>
<status status="PASS" starttime="20201110 08:35:01.847" endtime="20201110 08:35:01.849"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.842" endtime="20201110 08:35:01.850"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:01.852" endtime="20201110 08:35:01.853"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:01.856" endtime="20201110 08:35:01.875"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.854" endtime="20201110 08:35:01.876"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.850" endtime="20201110 08:35:01.876"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.452" endtime="20201110 08:35:01.876"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.452" endtime="20201110 08:35:01.876"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:01.886" endtime="20201110 08:35:01.904"></status>
</kw>
<msg timestamp="20201110 08:35:01.905" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:01.884" endtime="20201110 08:35:01.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:01.907" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:01.906" endtime="20201110 08:35:01.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:01.908" endtime="20201110 08:35:01.911"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.881" endtime="20201110 08:35:01.912"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.879" endtime="20201110 08:35:01.912"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:01.919" endtime="20201110 08:35:02.206"></status>
</kw>
<msg timestamp="20201110 08:35:02.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020425236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020480986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:01.917" endtime="20201110 08:35:02.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:02.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020425236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020480986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:02.211" endtime="20201110 08:35:02.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:02.219" endtime="20201110 08:35:02.221"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.914" endtime="20201110 08:35:02.222"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.913" endtime="20201110 08:35:02.222"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:02.227" level="INFO">${RESULT} = [{'time': 0.020480986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5750000000000244e-05, 'source_diff': 5.5750000000000244e-05}, {'time': 0.020539972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:02.223" endtime="20201110 08:35:02.227"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:02.242" level="INFO">${ACCURACY} = {'source_diff': [5.5750000000000244e-05, 5.5972000000001354e-05, 5.5943999999998745e-05, 5.6207999999998565e-05, 5.609700000000148e-05, 5.538899999999944e-05, 5.5736000000000674e-05, 5.581999999999809...</msg>
<status status="PASS" starttime="20201110 08:35:02.228" endtime="20201110 08:35:02.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:02.246" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201110 08:35:02.245" endtime="20201110 08:35:02.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:02.249" level="INFO">VALUE: [5.5750000000000244e-05, 5.5972000000001354e-05, 5.5943999999998745e-05, 5.6207999999998565e-05, 5.609700000000148e-05, 5.538899999999944e-05, 5.5736000000000674e-05, 5.581999999999809e-05, 5.5555999999998273e-05, 5.5736000000000674e-05, 5.511100000000005e-05, 5.581999999999809e-05, 5.6041999999999204e-05, 5.590300000000298e-05, 5.6041999999999204e-05, 5.6055999999998773e-05, 5.593099999999865e-05, 5.5291999999998453e-05, 5.615299999999976e-05, 5.580500000000252e-05, 5.579100000000295e-05, 5.531899999999812e-05, 5.529100000000245e-05, 5.5943999999998745e-05, 5.561099999999708e-05, 5.5513999999999564e-05, 5.6041999999999204e-05, 5.533400000000063e-05, 5.60549999999993e-05, 5.6000000000000494e-05, 5.5555999999998273e-05, 5.5457999999997815e-05, 5.581899999999862e-05, 5.587500000000037e-05, 5.569500000000144e-05, 5.583400000000113e-05, 5.558400000000088e-05, 5.609700000000148e-05, 5.5499999999999994e-05, 5.581999999999809e-05, 5.527800000000235e-05, 5.6000000000000494e-05, 5.5721999999997635e-05, 5.58610000000008e-05, 5.581899999999862e-05, 5.527699999999941e-05, 5.611100000000105e-05, 5.5651999999999785e-05, 5.5763999999999814e-05, 5.554200000000217e-05]</msg>
<status status="PASS" starttime="20201110 08:35:02.248" endtime="20201110 08:35:02.250"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.243" endtime="20201110 08:35:02.250"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:02.253" endtime="20201110 08:35:02.254"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:02.256" endtime="20201110 08:35:02.276"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.255" endtime="20201110 08:35:02.276"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.251" endtime="20201110 08:35:02.277"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.877" endtime="20201110 08:35:02.277"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.877" endtime="20201110 08:35:02.277"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:02.286" endtime="20201110 08:35:02.304"></status>
</kw>
<msg timestamp="20201110 08:35:02.305" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:02.285" endtime="20201110 08:35:02.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:02.307" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:02.306" endtime="20201110 08:35:02.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:02.308" endtime="20201110 08:35:02.311"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.282" endtime="20201110 08:35:02.312"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.280" endtime="20201110 08:35:02.312"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:02.319" endtime="20201110 08:35:02.605"></status>
</kw>
<msg timestamp="20201110 08:35:02.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0202365, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020293, 'source': 'DUT_IC', 'event': 'FALLING'...</msg>
<status status="PASS" starttime="20201110 08:35:02.317" endtime="20201110 08:35:02.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:02.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0202365, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020293, 'source': 'DUT_IC', 'event': 'FALLING'...</msg>
<status status="PASS" starttime="20201110 08:35:02.609" endtime="20201110 08:35:02.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:02.618" endtime="20201110 08:35:02.619"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.315" endtime="20201110 08:35:02.620"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.313" endtime="20201110 08:35:02.620"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:02.625" level="INFO">${RESULT} = [{'time': 0.020293, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6499999999997524e-05, 'source_diff': 5.6499999999997524e-05}, {'time': 0.020352028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:35:02.621" endtime="20201110 08:35:02.625"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:02.639" level="INFO">${ACCURACY} = {'source_diff': [5.6499999999997524e-05, 5.633400000000163e-05, 5.6791999999999954e-05, 5.644499999999872e-05, 5.6985999999998455e-05, 5.634700000000173e-05, 5.697300000000183e-05, 5.7055999999999774e...</msg>
<status status="PASS" starttime="20201110 08:35:02.626" endtime="20201110 08:35:02.639"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:02.644" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201110 08:35:02.643" endtime="20201110 08:35:02.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:02.646" level="INFO">VALUE: [5.6499999999997524e-05, 5.633400000000163e-05, 5.6791999999999954e-05, 5.644499999999872e-05, 5.6985999999998455e-05, 5.634700000000173e-05, 5.697300000000183e-05, 5.7055999999999774e-05, 5.633399999999816e-05, 5.6985999999998455e-05, 5.662500000000112e-05, 5.6901999999997566e-05, 5.672300000000158e-05, 5.6707999999999065e-05, 5.6222000000001604e-05, 5.65549999999998e-05, 5.63610000000013e-05, 5.6985999999998455e-05, 5.6972000000002354e-05, 5.6263999999996844e-05, 5.7180000000000425e-05, 5.680500000000005e-05, 5.631899999999912e-05, 5.683299999999919e-05, 5.6805999999999524e-05, 5.719499999999947e-05, 5.634699999999826e-05, 5.6513999999997094e-05, 5.613900000000019e-05, 5.66809999999994e-05, 5.6707999999999065e-05, 5.6500000000000994e-05, 5.6764000000000814e-05, 5.688900000000094e-05, 5.6749999999997774e-05, 5.63619999999973e-05, 5.6943999999999745e-05, 5.6222000000001604e-05, 5.6514000000000564e-05, 5.6736000000001674e-05, 5.654100000000023e-05, 5.6971999999998885e-05, 5.6707999999999065e-05, 5.65549999999998e-05, 5.661100000000155e-05, 5.6250000000000744e-05, 5.6500000000000994e-05, 5.697299999999836e-05, 5.6555999999999274e-05, 5.6236000000001174e-05]</msg>
<status status="PASS" starttime="20201110 08:35:02.645" endtime="20201110 08:35:02.647"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.640" endtime="20201110 08:35:02.648"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:02.650" endtime="20201110 08:35:02.651"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:02.654" endtime="20201110 08:35:02.673"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.652" endtime="20201110 08:35:02.674"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.648" endtime="20201110 08:35:02.674"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.278" endtime="20201110 08:35:02.674"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.278" endtime="20201110 08:35:02.675"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:02.684" endtime="20201110 08:35:02.702"></status>
</kw>
<msg timestamp="20201110 08:35:02.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:02.682" endtime="20201110 08:35:02.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:02.705" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:02.704" endtime="20201110 08:35:02.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:02.706" endtime="20201110 08:35:02.709"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.679" endtime="20201110 08:35:02.709"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.677" endtime="20201110 08:35:02.710"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:02.717" endtime="20201110 08:35:03.003"></status>
</kw>
<msg timestamp="20201110 08:35:03.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020319306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020376569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:02.715" endtime="20201110 08:35:03.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:03.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020319306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020376569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:03.007" endtime="20201110 08:35:03.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:03.016" endtime="20201110 08:35:03.017"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.712" endtime="20201110 08:35:03.018"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.710" endtime="20201110 08:35:03.018"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:03.023" level="INFO">${RESULT} = [{'time': 0.020376569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.726300000000184e-05, 'source_diff': 5.726300000000184e-05}, {'time': 0.020439542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:03.019" endtime="20201110 08:35:03.023"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:03.037" level="INFO">${ACCURACY} = {'source_diff': [5.726300000000184e-05, 5.737500000000187e-05, 5.762499999999865e-05, 5.78749999999989e-05, 5.809700000000001e-05, 5.763899999999822e-05, 5.8042000000001204e-05, 5.743100000000015e-05,...</msg>
<status status="PASS" starttime="20201110 08:35:03.024" endtime="20201110 08:35:03.037"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:03.041" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201110 08:35:03.040" endtime="20201110 08:35:03.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:03.044" level="INFO">VALUE: [5.726300000000184e-05, 5.737500000000187e-05, 5.762499999999865e-05, 5.78749999999989e-05, 5.809700000000001e-05, 5.763899999999822e-05, 5.8042000000001204e-05, 5.743100000000015e-05, 5.712500000000162e-05, 5.731900000000012e-05, 5.709699999999901e-05, 5.752699999999819e-05, 5.75550000000008e-05, 5.7735999999999205e-05, 5.7971999999999885e-05, 5.730499999999708e-05, 5.805499999999783e-05, 5.7680000000000925e-05, 5.811099999999958e-05, 5.816699999999786e-05, 5.762499999999865e-05, 5.7985999999999455e-05, 5.812499999999915e-05, 5.7542000000000704e-05, 5.7333999999999163e-05, 5.7735999999999205e-05, 5.808300000000044e-05, 5.779100000000148e-05, 5.73610000000023e-05, 5.812499999999915e-05, 5.7249999999998274e-05, 5.780500000000105e-05, 5.7486000000002424e-05, 5.7485999999998955e-05, 5.7679999999997456e-05, 5.763900000000169e-05, 5.7430000000000675e-05, 5.816700000000133e-05, 5.7721999999999635e-05, 5.7444000000000245e-05, 5.7750000000002244e-05, 5.812499999999915e-05, 5.7264000000001314e-05, 5.784699999999976e-05, 5.7319999999999593e-05, 5.709699999999901e-05, 5.81810000000009e-05, 5.794500000000022e-05, 5.7735999999999205e-05, 5.78480000000027e-05]</msg>
<status status="PASS" starttime="20201110 08:35:03.043" endtime="20201110 08:35:03.045"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.038" endtime="20201110 08:35:03.045"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:03.048" endtime="20201110 08:35:03.049"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:03.051" endtime="20201110 08:35:03.071"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.050" endtime="20201110 08:35:03.071"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.046" endtime="20201110 08:35:03.072"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.676" endtime="20201110 08:35:03.072"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.675" endtime="20201110 08:35:03.072"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:03.082" endtime="20201110 08:35:03.102"></status>
</kw>
<msg timestamp="20201110 08:35:03.102" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:03.080" endtime="20201110 08:35:03.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:03.106" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:03.105" endtime="20201110 08:35:03.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:03.108" endtime="20201110 08:35:03.112"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.078" endtime="20201110 08:35:03.113"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.075" endtime="20201110 08:35:03.114"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:03.123" endtime="20201110 08:35:03.410"></status>
</kw>
<msg timestamp="20201110 08:35:03.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021451861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0215105, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:35:03.120" endtime="20201110 08:35:03.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:03.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021451861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0215105, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:35:03.414" endtime="20201110 08:35:03.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:03.423" endtime="20201110 08:35:03.425"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.117" endtime="20201110 08:35:03.425"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.114" endtime="20201110 08:35:03.426"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:03.430" level="INFO">${RESULT} = [{'time': 0.0215105, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.863899999999922e-05, 'source_diff': 5.863899999999922e-05}, {'time': 0.021572514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:35:03.426" endtime="20201110 08:35:03.430"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:03.444" level="INFO">${ACCURACY} = {'source_diff': [5.863899999999922e-05, 5.88749999999999e-05, 5.893100000000165e-05, 5.9041999999998734e-05, 5.8986000000000455e-05, 5.9151999999999816e-05, 5.8097999999999483e-05, 5.8235999999999705e...</msg>
<status status="PASS" starttime="20201110 08:35:03.431" endtime="20201110 08:35:03.444"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:03.449" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201110 08:35:03.448" endtime="20201110 08:35:03.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:03.451" level="INFO">VALUE: [5.863899999999922e-05, 5.88749999999999e-05, 5.893100000000165e-05, 5.9041999999998734e-05, 5.8986000000000455e-05, 5.9151999999999816e-05, 5.8097999999999483e-05, 5.8235999999999705e-05, 5.858300000000094e-05, 5.8457999999997345e-05, 5.9000000000000025e-05, 5.8679999999998456e-05, 5.8429999999998206e-05, 5.8679999999998456e-05, 5.9179999999998956e-05, 5.8485999999999955e-05, 5.8429999999998206e-05, 5.8777999999998914e-05, 5.8679999999998456e-05, 5.8542000000001704e-05, 5.8570000000000844e-05, 5.8555999999997804e-05, 5.894500000000122e-05, 5.8749999999999775e-05, 5.8320000000000594e-05, 5.869500000000097e-05, 5.9013999999999595e-05, 5.83749999999994e-05, 5.893099999999818e-05, 5.8693999999998026e-05, 5.8986000000000455e-05, 5.9000000000000025e-05, 5.809700000000001e-05, 5.8430000000001675e-05, 5.8722000000000635e-05, 5.8708000000001065e-05, 5.830499999999808e-05, 5.811099999999958e-05, 5.880499999999858e-05, 5.8972000000000885e-05, 5.91810000000019e-05, 5.9055999999998304e-05, 5.9056000000001774e-05, 5.834700000000026e-05, 5.9041999999998734e-05, 5.8570000000000844e-05, 5.88749999999999e-05, 5.8749999999999775e-05, 5.8499999999999525e-05, 5.866699999999836e-05]</msg>
<status status="PASS" starttime="20201110 08:35:03.450" endtime="20201110 08:35:03.452"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.445" endtime="20201110 08:35:03.453"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:03.455" endtime="20201110 08:35:03.456"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:03.459" endtime="20201110 08:35:03.478"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.457" endtime="20201110 08:35:03.479"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.453" endtime="20201110 08:35:03.479"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.073" endtime="20201110 08:35:03.479"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.073" endtime="20201110 08:35:03.479"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:03.488" endtime="20201110 08:35:03.508"></status>
</kw>
<msg timestamp="20201110 08:35:03.508" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:03.487" endtime="20201110 08:35:03.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:03.511" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:03.509" endtime="20201110 08:35:03.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:03.512" endtime="20201110 08:35:03.514"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.484" endtime="20201110 08:35:03.515"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.482" endtime="20201110 08:35:03.516"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:03.522" endtime="20201110 08:35:03.808"></status>
</kw>
<msg timestamp="20201110 08:35:03.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020327597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020386792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:03.521" endtime="20201110 08:35:03.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:03.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020327597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020386792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:03.812" endtime="20201110 08:35:03.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:03.821" endtime="20201110 08:35:03.823"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.518" endtime="20201110 08:35:03.823"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.516" endtime="20201110 08:35:03.824"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:03.828" level="INFO">${RESULT} = [{'time': 0.020386792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.919500000000147e-05, 'source_diff': 5.919500000000147e-05}, {'time': 0.020448806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:03.825" endtime="20201110 08:35:03.828"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:03.843" level="INFO">${ACCURACY} = {'source_diff': [5.919500000000147e-05, 5.98750000000009e-05, 5.988900000000047e-05, 5.9665999999999886e-05, 5.9736000000001205e-05, 5.9236000000000705e-05, 5.96949999999985e-05, 6.011100000000158e-05...</msg>
<status status="PASS" starttime="20201110 08:35:03.829" endtime="20201110 08:35:03.844"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:03.848" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201110 08:35:03.847" endtime="20201110 08:35:03.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:03.851" level="INFO">VALUE: [5.919500000000147e-05, 5.98750000000009e-05, 5.988900000000047e-05, 5.9665999999999886e-05, 5.9736000000001205e-05, 5.9236000000000705e-05, 5.96949999999985e-05, 6.011100000000158e-05, 5.9943999999999276e-05, 5.9916000000000136e-05, 5.9236000000000705e-05, 5.943099999999868e-05, 5.963900000000022e-05, 5.9556000000002274e-05, 6.0041999999999734e-05, 6.0194999999999e-05, 5.9236000000000705e-05, 6.0055999999999304e-05, 6.0028000000000165e-05, 5.9291999999998984e-05, 6.0194999999999e-05, 5.9555999999998804e-05, 5.9612000000000553e-05, 5.9291999999998984e-05, 5.9486000000000955e-05, 5.9429999999999206e-05, 5.929099999999951e-05, 5.938899999999997e-05, 5.9541999999999234e-05, 5.986100000000133e-05, 5.9735999999997735e-05, 5.9916000000000136e-05, 6.012499999999768e-05, 5.986099999999786e-05, 5.962500000000065e-05, 5.9250000000000275e-05, 5.9735999999997735e-05, 5.9500000000000525e-05, 5.968099999999893e-05, 5.9764000000000345e-05, 5.961099999999761e-05, 5.911100000000058e-05, 6.0055999999999304e-05, 5.986099999999786e-05, 5.9402000000000066e-05, 5.9764000000000345e-05, 5.9208000000001565e-05, 5.984700000000176e-05, 6.0179999999999956e-05, 5.9415999999999636e-05]</msg>
<status status="PASS" starttime="20201110 08:35:03.849" endtime="20201110 08:35:03.851"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.844" endtime="20201110 08:35:03.852"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:03.854" endtime="20201110 08:35:03.856"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:03.858" endtime="20201110 08:35:03.877"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.856" endtime="20201110 08:35:03.878"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.853" endtime="20201110 08:35:03.878"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.480" endtime="20201110 08:35:03.879"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.480" endtime="20201110 08:35:03.879"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:03.888" endtime="20201110 08:35:03.907"></status>
</kw>
<msg timestamp="20201110 08:35:03.908" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:03.886" endtime="20201110 08:35:03.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:03.910" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:03.909" endtime="20201110 08:35:03.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:03.911" endtime="20201110 08:35:03.914"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.884" endtime="20201110 08:35:03.915"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.881" endtime="20201110 08:35:03.915"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:03.922" endtime="20201110 08:35:04.208"></status>
</kw>
<msg timestamp="20201110 08:35:04.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020239056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020299347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:03.920" endtime="20201110 08:35:04.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:04.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020239056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020299347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:04.212" endtime="20201110 08:35:04.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:04.221" endtime="20201110 08:35:04.223"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.918" endtime="20201110 08:35:04.223"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.916" endtime="20201110 08:35:04.224"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:04.228" level="INFO">${RESULT} = [{'time': 0.020299347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.029100000000051e-05, 'source_diff': 6.029100000000051e-05}, {'time': 0.020365292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:04.224" endtime="20201110 08:35:04.228"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:04.242" level="INFO">${ACCURACY} = {'source_diff': [6.029100000000051e-05, 6.047299999999839e-05, 6.0735999999998735e-05, 6.0735999999998735e-05, 6.03750000000014e-05, 6.0764000000001345e-05, 6.034700000000226e-05, 6.088900000000147e-0...</msg>
<status status="PASS" starttime="20201110 08:35:04.229" endtime="20201110 08:35:04.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:04.247" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201110 08:35:04.246" endtime="20201110 08:35:04.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:04.249" level="INFO">VALUE: [6.029100000000051e-05, 6.047299999999839e-05, 6.0735999999998735e-05, 6.0735999999998735e-05, 6.03750000000014e-05, 6.0764000000001345e-05, 6.034700000000226e-05, 6.088900000000147e-05, 6.054100000000076e-05, 6.0499999999998055e-05, 6.0680000000000456e-05, 6.0471999999998916e-05, 6.031899999999965e-05, 6.059699999999904e-05, 6.090300000000104e-05, 6.080500000000058e-05, 6.0819999999999624e-05, 6.093100000000018e-05, 6.013900000000072e-05, 6.044499999999925e-05, 6.0305999999999554e-05, 6.0305999999999554e-05, 6.0819999999999624e-05, 6.0500000000001525e-05, 6.0347999999998264e-05, 6.052700000000119e-05, 6.012500000000115e-05, 6.0943999999996806e-05, 6.087499999999843e-05, 6.030500000000008e-05, 6.0985999999998985e-05, 6.118000000000096e-05, 6.117999999999749e-05, 6.118000000000096e-05, 6.03750000000014e-05, 6.0514000000001095e-05, 6.047299999999839e-05, 6.126399999999838e-05, 6.0707999999999596e-05, 6.106999999999987e-05, 6.0721999999999166e-05, 6.0319999999999124e-05, 6.03889999999975e-05, 6.0555999999999804e-05, 6.0901999999998097e-05, 6.047300000000186e-05, 6.104200000000073e-05, 6.080500000000058e-05, 6.030500000000008e-05, 6.0916000000001136e-05]</msg>
<status status="PASS" starttime="20201110 08:35:04.248" endtime="20201110 08:35:04.250"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.243" endtime="20201110 08:35:04.251"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:04.253" endtime="20201110 08:35:04.254"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:04.257" endtime="20201110 08:35:04.276"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.255" endtime="20201110 08:35:04.277"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.251" endtime="20201110 08:35:04.277"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.880" endtime="20201110 08:35:04.277"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.879" endtime="20201110 08:35:04.278"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:04.286" endtime="20201110 08:35:04.306"></status>
</kw>
<msg timestamp="20201110 08:35:04.306" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:04.285" endtime="20201110 08:35:04.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:04.309" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:04.307" endtime="20201110 08:35:04.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:04.310" endtime="20201110 08:35:04.313"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.282" endtime="20201110 08:35:04.313"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.280" endtime="20201110 08:35:04.314"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:04.320" endtime="20201110 08:35:04.606"></status>
</kw>
<msg timestamp="20201110 08:35:04.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020244472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020305944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:04.319" endtime="20201110 08:35:04.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:04.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020244472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020305944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:04.611" endtime="20201110 08:35:04.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:04.620" endtime="20201110 08:35:04.622"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.316" endtime="20201110 08:35:04.623"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.314" endtime="20201110 08:35:04.623"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:04.628" level="INFO">${RESULT} = [{'time': 0.020305944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.147199999999992e-05, 'source_diff': 6.147199999999992e-05}, {'time': 0.020372944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:04.624" endtime="20201110 08:35:04.628"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:04.642" level="INFO">${ACCURACY} = {'source_diff': [6.147199999999992e-05, 6.123599999999924e-05, 6.13750000000024e-05, 6.205500000000183e-05, 6.201399999999913e-05, 6.183300000000072e-05, 6.169400000000103e-05, 6.215300000000229e-05, ...</msg>
<status status="PASS" starttime="20201110 08:35:04.629" endtime="20201110 08:35:04.642"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:04.647" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201110 08:35:04.646" endtime="20201110 08:35:04.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:04.649" level="INFO">VALUE: [6.147199999999992e-05, 6.123599999999924e-05, 6.13750000000024e-05, 6.205500000000183e-05, 6.201399999999913e-05, 6.183300000000072e-05, 6.169400000000103e-05, 6.215300000000229e-05, 6.161099999999961e-05, 6.179199999999802e-05, 6.15560000000008e-05, 6.19300000000017e-05, 6.123599999999924e-05, 6.157000000000037e-05, 6.109699999999954e-05, 6.212499999999968e-05, 6.166700000000136e-05, 6.190299999999857e-05, 6.181999999999716e-05, 6.136199999999883e-05, 6.155500000000133e-05, 6.136099999999936e-05, 6.13889999999985e-05, 6.186099999999986e-05, 6.176399999999888e-05, 6.148599999999949e-05, 6.218000000000196e-05, 6.141599999999817e-05, 6.173599999999974e-05, 6.169400000000103e-05, 6.173599999999974e-05, 6.20140000000026e-05, 6.13750000000024e-05, 6.216700000000186e-05, 6.166699999999789e-05, 6.211100000000011e-05, 6.169499999999703e-05, 6.154200000000123e-05, 6.132000000000012e-05, 6.166600000000189e-05, 6.17499999999993e-05, 6.112500000000215e-05, 6.205500000000183e-05, 6.17499999999993e-05, 6.199999999999956e-05, 6.129099999999804e-05, 6.173599999999974e-05, 6.213900000000272e-05, 6.184700000000029e-05, 6.162499999999918e-05]</msg>
<status status="PASS" starttime="20201110 08:35:04.648" endtime="20201110 08:35:04.650"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.643" endtime="20201110 08:35:04.650"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:04.653" endtime="20201110 08:35:04.654"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:04.656" endtime="20201110 08:35:04.675"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.654" endtime="20201110 08:35:04.676"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.651" endtime="20201110 08:35:04.676"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.278" endtime="20201110 08:35:04.677"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.278" endtime="20201110 08:35:04.677"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:04.685" endtime="20201110 08:35:04.704"></status>
</kw>
<msg timestamp="20201110 08:35:04.705" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:04.684" endtime="20201110 08:35:04.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:04.709" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:04.707" endtime="20201110 08:35:04.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:04.711" endtime="20201110 08:35:04.715"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.681" endtime="20201110 08:35:04.716"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.679" endtime="20201110 08:35:04.717"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:04.726" endtime="20201110 08:35:05.014"></status>
</kw>
<msg timestamp="20201110 08:35:05.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019741625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019804361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:04.724" endtime="20201110 08:35:05.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:05.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019741625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019804361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:05.018" endtime="20201110 08:35:05.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:05.027" endtime="20201110 08:35:05.028"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.720" endtime="20201110 08:35:05.029"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.717" endtime="20201110 08:35:05.029"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:05.034" level="INFO">${RESULT} = [{'time': 0.019804361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.273600000000074e-05, 'source_diff': 6.273600000000074e-05}, {'time': 0.019872375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:05.030" endtime="20201110 08:35:05.034"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:05.047" level="INFO">${ACCURACY} = {'source_diff': [6.273600000000074e-05, 6.233300000000122e-05, 6.241699999999864e-05, 6.304199999999927e-05, 6.27500000000003e-05, 6.293099999999871e-05, 6.30279999999997e-05, 6.254199999999877e-05, 6...</msg>
<status status="PASS" starttime="20201110 08:35:05.035" endtime="20201110 08:35:05.047"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:05.052" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201110 08:35:05.050" endtime="20201110 08:35:05.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:05.054" level="INFO">VALUE: [6.273600000000074e-05, 6.233300000000122e-05, 6.241699999999864e-05, 6.304199999999927e-05, 6.27500000000003e-05, 6.293099999999871e-05, 6.30279999999997e-05, 6.254199999999877e-05, 6.302700000000022e-05, 6.241699999999864e-05, 6.236199999999983e-05, 6.2889e-05, 6.242999999999874e-05, 6.258399999999747e-05, 6.261100000000061e-05, 6.292999999999924e-05, 6.255499999999886e-05, 6.291599999999967e-05, 6.240299999999907e-05, 6.270799999999813e-05, 6.287500000000043e-05, 6.298600000000099e-05, 6.212499999999968e-05, 6.30699999999984e-05, 6.282000000000162e-05, 6.30560000000023e-05, 6.262500000000018e-05, 6.3195000000002e-05, 6.230599999999809e-05, 6.22499999999998e-05, 6.261100000000061e-05, 6.243100000000168e-05, 6.245800000000135e-05, 6.317999999999949e-05, 6.287500000000043e-05, 6.211100000000011e-05, 6.212499999999968e-05, 6.284699999999782e-05, 6.300000000000056e-05, 6.211100000000011e-05, 6.290299999999957e-05, 6.295900000000132e-05, 6.27500000000003e-05, 6.282000000000162e-05, 6.268100000000193e-05, 6.262500000000018e-05, 6.291699999999914e-05, 6.23889999999995e-05, 6.211100000000011e-05, 6.229199999999852e-05]</msg>
<status status="PASS" starttime="20201110 08:35:05.053" endtime="20201110 08:35:05.055"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.048" endtime="20201110 08:35:05.055"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:05.058" endtime="20201110 08:35:05.059"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:05.061" endtime="20201110 08:35:05.080"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.059" endtime="20201110 08:35:05.081"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.056" endtime="20201110 08:35:05.081"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.678" endtime="20201110 08:35:05.082"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.677" endtime="20201110 08:35:05.082"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:05.090" endtime="20201110 08:35:05.114"></status>
</kw>
<msg timestamp="20201110 08:35:05.115" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:05.089" endtime="20201110 08:35:05.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:05.117" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:05.116" endtime="20201110 08:35:05.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:05.118" endtime="20201110 08:35:05.121"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.086" endtime="20201110 08:35:05.122"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.084" endtime="20201110 08:35:05.122"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:05.128" endtime="20201110 08:35:05.413"></status>
</kw>
<msg timestamp="20201110 08:35:05.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019729, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019792458, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:35:05.127" endtime="20201110 08:35:05.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:05.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019729, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019792458, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:35:05.417" endtime="20201110 08:35:05.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:05.426" endtime="20201110 08:35:05.428"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.124" endtime="20201110 08:35:05.428"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.123" endtime="20201110 08:35:05.428"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:05.433" level="INFO">${RESULT} = [{'time': 0.019792458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.345799999999888e-05, 'source_diff': 6.345799999999888e-05}, {'time': 0.019859458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:05.429" endtime="20201110 08:35:05.433"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:05.447" level="INFO">${ACCURACY} = {'source_diff': [6.345799999999888e-05, 6.387500000000143e-05, 6.404100000000079e-05, 6.334700000000179e-05, 6.331899999999918e-05, 6.366600000000042e-05, 6.327799999999995e-05, 6.345800000000235e-05,...</msg>
<status status="PASS" starttime="20201110 08:35:05.434" endtime="20201110 08:35:05.448"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:05.452" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201110 08:35:05.451" endtime="20201110 08:35:05.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:05.454" level="INFO">VALUE: [6.345799999999888e-05, 6.387500000000143e-05, 6.404100000000079e-05, 6.334700000000179e-05, 6.331899999999918e-05, 6.366600000000042e-05, 6.327799999999995e-05, 6.345800000000235e-05, 6.350000000000106e-05, 6.391700000000014e-05, 6.343099999999921e-05, 6.416700000000039e-05, 6.384699999999882e-05, 6.326400000000038e-05, 6.37219999999987e-05, 6.419499999999953e-05, 6.345899999999835e-05, 6.393100000000318e-05, 6.420799999999963e-05, 6.361100000000161e-05, 6.337500000000093e-05, 6.381899999999968e-05, 6.337500000000093e-05, 6.369399999999956e-05, 6.327799999999995e-05, 6.416600000000092e-05, 6.337500000000093e-05, 6.395800000000285e-05, 6.387499999999796e-05, 6.33340000000017e-05, 6.40280000000007e-05, 6.365300000000032e-05, 6.405599999999984e-05, 6.376400000000088e-05, 6.409699999999907e-05, 6.367999999999999e-05, 6.324999999999734e-05, 6.34439999999993e-05, 6.386100000000186e-05, 6.354199999999977e-05, 6.406899999999993e-05, 6.386100000000186e-05, 6.341700000000311e-05, 6.372200000000217e-05, 6.359699999999857e-05, 6.323599999999777e-05, 6.393099999999971e-05, 6.369499999999903e-05, 6.32500000000008e-05, 6.368099999999946e-05]</msg>
<status status="PASS" starttime="20201110 08:35:05.453" endtime="20201110 08:35:05.455"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.448" endtime="20201110 08:35:05.456"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:05.458" endtime="20201110 08:35:05.459"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:05.462" endtime="20201110 08:35:05.481"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.460" endtime="20201110 08:35:05.481"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.456" endtime="20201110 08:35:05.482"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.083" endtime="20201110 08:35:05.482"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.082" endtime="20201110 08:35:05.482"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:05.491" endtime="20201110 08:35:05.510"></status>
</kw>
<msg timestamp="20201110 08:35:05.510" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:05.489" endtime="20201110 08:35:05.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:05.513" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:05.512" endtime="20201110 08:35:05.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:05.514" endtime="20201110 08:35:05.517"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.487" endtime="20201110 08:35:05.517"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.485" endtime="20201110 08:35:05.518"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:05.524" endtime="20201110 08:35:05.810"></status>
</kw>
<msg timestamp="20201110 08:35:05.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019816486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019881236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:05.523" endtime="20201110 08:35:05.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:05.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019816486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019881236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:05.814" endtime="20201110 08:35:05.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:05.823" endtime="20201110 08:35:05.824"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.520" endtime="20201110 08:35:05.825"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.518" endtime="20201110 08:35:05.825"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:05.829" level="INFO">${RESULT} = [{'time': 0.019881236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.474999999999884e-05, 'source_diff': 6.474999999999884e-05}, {'time': 0.019948264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:05.826" endtime="20201110 08:35:05.830"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:05.843" level="INFO">${ACCURACY} = {'source_diff': [6.474999999999884e-05, 6.4889000000002e-05, 6.448599999999902e-05, 6.473600000000274e-05, 6.50700000000004e-05, 6.462499999999871e-05, 6.480600000000059e-05, 6.498599999999952e-05, 6....</msg>
<status status="PASS" starttime="20201110 08:35:05.830" endtime="20201110 08:35:05.843"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:05.848" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201110 08:35:05.847" endtime="20201110 08:35:05.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:05.850" level="INFO">VALUE: [6.474999999999884e-05, 6.4889000000002e-05, 6.448599999999902e-05, 6.473600000000274e-05, 6.50700000000004e-05, 6.462499999999871e-05, 6.480600000000059e-05, 6.498599999999952e-05, 6.411100000000211e-05, 6.431999999999966e-05, 6.479199999999755e-05, 6.469400000000056e-05, 6.480500000000111e-05, 6.441600000000117e-05, 6.412500000000168e-05, 6.462499999999871e-05, 6.454100000000129e-05, 6.451399999999816e-05, 6.47219999999997e-05, 6.429200000000052e-05, 6.438899999999803e-05, 6.519500000000053e-05, 6.427800000000095e-05, 6.50419999999978e-05, 6.42219999999992e-05, 6.443100000000021e-05, 6.449999999999859e-05, 6.480600000000059e-05, 6.461099999999914e-05, 6.469500000000003e-05, 6.422299999999867e-05, 6.443100000000021e-05, 6.443100000000021e-05, 6.499999999999909e-05, 6.413900000000125e-05, 6.481900000000068e-05, 6.462499999999871e-05, 6.498599999999952e-05, 6.461099999999914e-05, 6.456900000000043e-05, 6.434699999999932e-05, 6.447199999999945e-05, 6.488899999999853e-05, 6.476400000000188e-05, 6.443100000000021e-05, 6.448599999999902e-05, 6.498600000000299e-05, 6.482000000000016e-05, 6.430600000000009e-05, 6.448699999999849e-05]</msg>
<status status="PASS" starttime="20201110 08:35:05.849" endtime="20201110 08:35:05.851"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.844" endtime="20201110 08:35:05.852"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:05.854" endtime="20201110 08:35:05.855"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:05.857" endtime="20201110 08:35:05.877"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.856" endtime="20201110 08:35:05.877"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.852" endtime="20201110 08:35:05.878"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.483" endtime="20201110 08:35:05.878"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.483" endtime="20201110 08:35:05.878"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:05.887" endtime="20201110 08:35:05.905"></status>
</kw>
<msg timestamp="20201110 08:35:05.906" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:05.885" endtime="20201110 08:35:05.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:05.908" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:05.907" endtime="20201110 08:35:05.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:05.909" endtime="20201110 08:35:05.912"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.883" endtime="20201110 08:35:05.912"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.881" endtime="20201110 08:35:05.913"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:05.919" endtime="20201110 08:35:06.204"></status>
</kw>
<msg timestamp="20201110 08:35:06.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019840097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019906208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:05.918" endtime="20201110 08:35:06.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:06.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019840097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019906208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:06.209" endtime="20201110 08:35:06.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:06.217" endtime="20201110 08:35:06.219"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.915" endtime="20201110 08:35:06.219"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.914" endtime="20201110 08:35:06.220"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:06.224" level="INFO">${RESULT} = [{'time': 0.019906208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.611100000000064e-05, 'source_diff': 6.611100000000064e-05}, {'time': 0.019975194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:06.220" endtime="20201110 08:35:06.224"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:06.237" level="INFO">${ACCURACY} = {'source_diff': [6.611100000000064e-05, 6.568000000000199e-05, 6.600000000000009e-05, 6.537500000000293e-05, 6.541699999999817e-05, 6.617999999999902e-05, 6.566699999999842e-05, 6.581899999999821e-05,...</msg>
<status status="PASS" starttime="20201110 08:35:06.225" endtime="20201110 08:35:06.238"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:06.242" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201110 08:35:06.241" endtime="20201110 08:35:06.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:06.245" level="INFO">VALUE: [6.611100000000064e-05, 6.568000000000199e-05, 6.600000000000009e-05, 6.537500000000293e-05, 6.541699999999817e-05, 6.617999999999902e-05, 6.566699999999842e-05, 6.581899999999821e-05, 6.579200000000202e-05, 6.574999999999984e-05, 6.566699999999842e-05, 6.595900000000085e-05, 6.573600000000027e-05, 6.597200000000095e-05, 6.566700000000189e-05, 6.605600000000184e-05, 6.52500000000028e-05, 6.549999999999959e-05, 6.568100000000146e-05, 6.59440000000018e-05, 6.547200000000045e-05, 6.555500000000186e-05, 6.590199999999963e-05, 6.548600000000002e-05, 6.551399999999916e-05, 6.611100000000064e-05, 6.57500000000033e-05, 6.600000000000009e-05, 6.524999999999934e-05, 6.541699999999817e-05, 6.527800000000195e-05, 6.577799999999898e-05, 6.60419999999988e-05, 6.619500000000153e-05, 6.52639999999989e-05, 6.522300000000314e-05, 6.572300000000017e-05, 6.590199999999963e-05, 6.594399999999834e-05, 6.565199999999938e-05, 6.600000000000009e-05, 6.54159999999987e-05, 6.616599999999945e-05, 6.554200000000177e-05, 6.580599999999812e-05, 6.549999999999959e-05, 6.587499999999996e-05, 6.598599999999705e-05, 6.54029999999986e-05, 6.52639999999989e-05]</msg>
<status status="PASS" starttime="20201110 08:35:06.243" endtime="20201110 08:35:06.246"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.238" endtime="20201110 08:35:06.246"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:06.248" endtime="20201110 08:35:06.250"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:06.252" endtime="20201110 08:35:06.271"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.250" endtime="20201110 08:35:06.272"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.247" endtime="20201110 08:35:06.272"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.879" endtime="20201110 08:35:06.273"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.878" endtime="20201110 08:35:06.273"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:06.281" endtime="20201110 08:35:06.301"></status>
</kw>
<msg timestamp="20201110 08:35:06.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:06.280" endtime="20201110 08:35:06.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:06.304" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:06.302" endtime="20201110 08:35:06.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:06.305" endtime="20201110 08:35:06.307"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.277" endtime="20201110 08:35:06.308"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.275" endtime="20201110 08:35:06.308"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:06.315" endtime="20201110 08:35:06.599"></status>
</kw>
<msg timestamp="20201110 08:35:06.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019888722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01995525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:35:06.313" endtime="20201110 08:35:06.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:06.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019888722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01995525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:35:06.604" endtime="20201110 08:35:06.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:06.612" endtime="20201110 08:35:06.614"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.310" endtime="20201110 08:35:06.614"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.309" endtime="20201110 08:35:06.614"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:06.619" level="INFO">${RESULT} = [{'time': 0.01995525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.652799999999973e-05, 'source_diff': 6.652799999999973e-05}, {'time': 0.020027278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:35:06.615" endtime="20201110 08:35:06.619"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:06.634" level="INFO">${ACCURACY} = {'source_diff': [6.652799999999973e-05, 6.67640000000004e-05, 6.666599999999995e-05, 6.684700000000182e-05, 6.680600000000259e-05, 6.631899999999871e-05, 6.706899999999946e-05, 6.693099999999924e-05, ...</msg>
<status status="PASS" starttime="20201110 08:35:06.620" endtime="20201110 08:35:06.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:06.640" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201110 08:35:06.638" endtime="20201110 08:35:06.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:06.644" level="INFO">VALUE: [6.652799999999973e-05, 6.67640000000004e-05, 6.666599999999995e-05, 6.684700000000182e-05, 6.680600000000259e-05, 6.631899999999871e-05, 6.706899999999946e-05, 6.693099999999924e-05, 6.631900000000218e-05, 6.643099999999874e-05, 6.636099999999742e-05, 6.691699999999967e-05, 6.677799999999998e-05, 6.687500000000096e-05, 6.629099999999957e-05, 6.652799999999973e-05, 6.64159999999997e-05, 6.688900000000053e-05, 6.665299999999985e-05, 6.705599999999937e-05, 6.675000000000084e-05, 6.694499999999881e-05, 6.697199999999848e-05, 6.705599999999937e-05, 6.701300000000118e-05, 6.644399999999884e-05, 6.62229999999972e-05, 6.681899999999921e-05, 6.623600000000077e-05, 6.630600000000209e-05, 6.652799999999973e-05, 6.620800000000163e-05, 6.705499999999989e-05, 6.667999999999952e-05, 6.711099999999817e-05, 6.659700000000157e-05, 6.718099999999949e-05, 6.67359999999978e-05, 6.708299999999903e-05, 6.652799999999973e-05, 6.64029999999996e-05, 6.724999999999787e-05, 6.650000000000059e-05, 6.666699999999942e-05, 6.690200000000063e-05, 6.684799999999783e-05, 6.719399999999959e-05, 6.673700000000074e-05, 6.712500000000121e-05, 6.69160000000002e-05]</msg>
<status status="PASS" starttime="20201110 08:35:06.642" endtime="20201110 08:35:06.645"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.636" endtime="20201110 08:35:06.646"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:06.648" endtime="20201110 08:35:06.649"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:06.652" endtime="20201110 08:35:06.671"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.650" endtime="20201110 08:35:06.672"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.646" endtime="20201110 08:35:06.672"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.274" endtime="20201110 08:35:06.673"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.273" endtime="20201110 08:35:06.673"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:06.682" endtime="20201110 08:35:06.703"></status>
</kw>
<msg timestamp="20201110 08:35:06.704" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:06.680" endtime="20201110 08:35:06.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:06.706" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:06.705" endtime="20201110 08:35:06.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:06.707" endtime="20201110 08:35:06.710"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.677" endtime="20201110 08:35:06.710"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.675" endtime="20201110 08:35:06.711"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:06.717" endtime="20201110 08:35:07.004"></status>
</kw>
<msg timestamp="20201110 08:35:07.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022392167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022459639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:06.716" endtime="20201110 08:35:07.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:07.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022392167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022459639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:07.008" endtime="20201110 08:35:07.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:07.017" endtime="20201110 08:35:07.019"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.713" endtime="20201110 08:35:07.019"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.712" endtime="20201110 08:35:07.020"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:07.024" level="INFO">${RESULT} = [{'time': 0.022459639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.747199999999898e-05, 'source_diff': 6.747199999999898e-05}, {'time': 0.022531653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:07.021" endtime="20201110 08:35:07.024"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:07.039" level="INFO">${ACCURACY} = {'source_diff': [6.747199999999898e-05, 6.729200000000005e-05, 6.762500000000171e-05, 6.769499999999956e-05, 6.78480000000023e-05, 6.736099999999842e-05, 6.734799999999833e-05, 6.787499999999849e-05, ...</msg>
<status status="PASS" starttime="20201110 08:35:07.025" endtime="20201110 08:35:07.040"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:07.044" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201110 08:35:07.043" endtime="20201110 08:35:07.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:07.047" level="INFO">VALUE: [6.747199999999898e-05, 6.729200000000005e-05, 6.762500000000171e-05, 6.769499999999956e-05, 6.78480000000023e-05, 6.736099999999842e-05, 6.734799999999833e-05, 6.787499999999849e-05, 6.744399999999984e-05, 6.725000000000134e-05, 6.774999999999837e-05, 6.773600000000227e-05, 6.75969999999991e-05, 6.731899999999971e-05, 6.786100000000239e-05, 6.72359999999983e-05, 6.759700000000257e-05, 6.793100000000024e-05, 6.761099999999867e-05, 6.768099999999999e-05, 6.787499999999849e-05, 6.793100000000024e-05, 6.755599999999987e-05, 6.793100000000024e-05, 6.801400000000166e-05, 6.741700000000017e-05, 6.737499999999799e-05, 6.811200000000212e-05, 6.743000000000027e-05, 6.741700000000017e-05, 6.793000000000077e-05, 6.737499999999799e-05, 6.74160000000007e-05, 6.791700000000067e-05, 6.783299999999978e-05, 6.797199999999948e-05, 6.77640000000014e-05, 6.731999999999919e-05, 6.755599999999987e-05, 6.786099999999892e-05, 6.820800000000016e-05, 6.818099999999702e-05, 6.74030000000006e-05, 6.793000000000077e-05, 6.766700000000042e-05, 6.788799999999859e-05, 6.812500000000221e-05, 6.750000000000159e-05, 6.786099999999892e-05, 6.773600000000227e-05]</msg>
<status status="PASS" starttime="20201110 08:35:07.045" endtime="20201110 08:35:07.048"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.040" endtime="20201110 08:35:07.048"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:07.051" endtime="20201110 08:35:07.052"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:07.054" endtime="20201110 08:35:07.074"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.053" endtime="20201110 08:35:07.074"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.049" endtime="20201110 08:35:07.075"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.674" endtime="20201110 08:35:07.075"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.673" endtime="20201110 08:35:07.075"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:07.084" endtime="20201110 08:35:07.104"></status>
</kw>
<msg timestamp="20201110 08:35:07.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:07.082" endtime="20201110 08:35:07.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:07.107" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:07.105" endtime="20201110 08:35:07.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:07.108" endtime="20201110 08:35:07.110"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.080" endtime="20201110 08:35:07.111"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.078" endtime="20201110 08:35:07.112"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:07.118" endtime="20201110 08:35:07.429"></status>
</kw>
<msg timestamp="20201110 08:35:07.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020365861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020434486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:07.117" endtime="20201110 08:35:07.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:07.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020365861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020434486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:07.436" endtime="20201110 08:35:07.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:07.444" endtime="20201110 08:35:07.446"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.114" endtime="20201110 08:35:07.447"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.112" endtime="20201110 08:35:07.447"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:07.451" level="INFO">${RESULT} = [{'time': 0.020434486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.862500000000271e-05, 'source_diff': 6.862500000000271e-05}, {'time': 0.0205095, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:35:07.448" endtime="20201110 08:35:07.452"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:07.466" level="INFO">${ACCURACY} = {'source_diff': [6.862500000000271e-05, 6.905600000000137e-05, 6.869500000000056e-05, 6.827800000000148e-05, 6.911199999999965e-05, 6.918100000000149e-05, 6.899999999999962e-05, 6.891700000000167e-05,...</msg>
<status status="PASS" starttime="20201110 08:35:07.452" endtime="20201110 08:35:07.466"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:07.470" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201110 08:35:07.469" endtime="20201110 08:35:07.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:07.473" level="INFO">VALUE: [6.862500000000271e-05, 6.905600000000137e-05, 6.869500000000056e-05, 6.827800000000148e-05, 6.911199999999965e-05, 6.918100000000149e-05, 6.899999999999962e-05, 6.891700000000167e-05, 6.825000000000234e-05, 6.874999999999937e-05, 6.918099999999802e-05, 6.838899999999856e-05, 6.826299999999896e-05, 6.856900000000096e-05, 6.906900000000146e-05, 6.812500000000221e-05, 6.837499999999899e-05, 6.89169999999982e-05, 6.880500000000164e-05, 6.833299999999681e-05, 6.825000000000234e-05, 6.908300000000103e-05, 6.830600000000062e-05, 6.884700000000035e-05, 6.809799999999908e-05, 6.805600000000037e-05, 6.863899999999881e-05, 6.866700000000142e-05, 6.870800000000066e-05, 6.916599999999898e-05, 6.836200000000237e-05, 6.838899999999856e-05, 6.869399999999762e-05, 6.870800000000066e-05, 6.829100000000157e-05, 6.855500000000139e-05, 6.824999999999887e-05, 6.899999999999962e-05, 6.823600000000277e-05, 6.856999999999697e-05, 6.89030000000021e-05, 6.865299999999838e-05, 6.906999999999747e-05, 6.836099999999942e-05, 6.845899999999988e-05, 6.888899999999906e-05, 6.868100000000099e-05, 6.891700000000167e-05, 6.870800000000066e-05, 6.880500000000164e-05]</msg>
<status status="PASS" starttime="20201110 08:35:07.471" endtime="20201110 08:35:07.474"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.466" endtime="20201110 08:35:07.474"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:07.477" endtime="20201110 08:35:07.478"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:07.480" endtime="20201110 08:35:07.500"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.479" endtime="20201110 08:35:07.500"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.475" endtime="20201110 08:35:07.501"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.076" endtime="20201110 08:35:07.501"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.075" endtime="20201110 08:35:07.501"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:07.510" endtime="20201110 08:35:07.529"></status>
</kw>
<msg timestamp="20201110 08:35:07.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:07.508" endtime="20201110 08:35:07.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:07.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:07.530" endtime="20201110 08:35:07.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:07.533" endtime="20201110 08:35:07.536"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.506" endtime="20201110 08:35:07.536"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.504" endtime="20201110 08:35:07.537"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:07.543" endtime="20201110 08:35:07.830"></status>
</kw>
<msg timestamp="20201110 08:35:07.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020297778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020367347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:07.542" endtime="20201110 08:35:07.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:07.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020297778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020367347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:07.834" endtime="20201110 08:35:07.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:07.843" endtime="20201110 08:35:07.845"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.539" endtime="20201110 08:35:07.845"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.537" endtime="20201110 08:35:07.846"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:07.850" level="INFO">${RESULT} = [{'time': 0.020367347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.956900000000196e-05, 'source_diff': 6.956900000000196e-05}, {'time': 0.020443347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:07.846" endtime="20201110 08:35:07.850"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:07.864" level="INFO">${ACCURACY} = {'source_diff': [6.956900000000196e-05, 7.012500000000074e-05, 6.918000000000202e-05, 6.929200000000205e-05, 6.977799999999951e-05, 6.962499999999677e-05, 7.00970000000016e-05, 7.006999999999847e-05, ...</msg>
<status status="PASS" starttime="20201110 08:35:07.851" endtime="20201110 08:35:07.864"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:07.869" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201110 08:35:07.868" endtime="20201110 08:35:07.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:07.871" level="INFO">VALUE: [6.956900000000196e-05, 7.012500000000074e-05, 6.918000000000202e-05, 6.929200000000205e-05, 6.977799999999951e-05, 6.962499999999677e-05, 7.00970000000016e-05, 7.006999999999847e-05, 6.919500000000106e-05, 6.987500000000049e-05, 6.924999999999987e-05, 7.016699999999945e-05, 7.011100000000117e-05, 6.975000000000037e-05, 6.968099999999852e-05, 6.937499999999999e-05, 6.944399999999837e-05, 6.937499999999999e-05, 6.947199999999751e-05, 6.987500000000049e-05, 7.019400000000259e-05, 6.979200000000255e-05, 6.994399999999887e-05, 7.00559999999989e-05, 6.987500000000049e-05, 6.955500000000239e-05, 6.924999999999987e-05, 6.924999999999987e-05, 6.998600000000105e-05, 7.022200000000173e-05, 6.944400000000184e-05, 7.018000000000302e-05, 6.998600000000105e-05, 6.954099999999935e-05, 6.97360000000008e-05, 6.994399999999887e-05, 6.958300000000153e-05, 6.948599999999708e-05, 6.954099999999935e-05, 6.951399999999969e-05, 6.933300000000128e-05, 6.99169999999992e-05, 6.979199999999908e-05, 6.968000000000252e-05, 6.95559999999984e-05, 6.936100000000042e-05, 6.929200000000205e-05, 6.980600000000212e-05, 6.966699999999895e-05, 7.011100000000117e-05]</msg>
<status status="PASS" starttime="20201110 08:35:07.870" endtime="20201110 08:35:07.872"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.865" endtime="20201110 08:35:07.873"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:07.875" endtime="20201110 08:35:07.876"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:07.879" endtime="20201110 08:35:07.898"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.877" endtime="20201110 08:35:07.899"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.873" endtime="20201110 08:35:07.899"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.502" endtime="20201110 08:35:07.899"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.502" endtime="20201110 08:35:07.900"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:07.909" endtime="20201110 08:35:07.928"></status>
</kw>
<msg timestamp="20201110 08:35:07.928" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:07.907" endtime="20201110 08:35:07.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:07.931" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:07.929" endtime="20201110 08:35:07.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:07.932" endtime="20201110 08:35:07.935"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.904" endtime="20201110 08:35:07.935"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.902" endtime="20201110 08:35:07.936"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:07.942" endtime="20201110 08:35:08.229"></status>
</kw>
<msg timestamp="20201110 08:35:08.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020408014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020478306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:07.941" endtime="20201110 08:35:08.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:08.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020408014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020478306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:08.233" endtime="20201110 08:35:08.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:08.242" endtime="20201110 08:35:08.244"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.938" endtime="20201110 08:35:08.244"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.936" endtime="20201110 08:35:08.245"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:08.249" level="INFO">${RESULT} = [{'time': 0.020478306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.029200000000305e-05, 'source_diff': 7.029200000000305e-05}, {'time': 0.020553319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:08.245" endtime="20201110 08:35:08.249"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:08.263" level="INFO">${ACCURACY} = {'source_diff': [7.029200000000305e-05, 7.022200000000173e-05, 7.05970000000021e-05, 7.051400000000069e-05, 7.036100000000142e-05, 7.088899999999759e-05, 7.054100000000035e-05, 7.098599999999858e-05, ...</msg>
<status status="PASS" starttime="20201110 08:35:08.250" endtime="20201110 08:35:08.263"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:08.268" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201110 08:35:08.267" endtime="20201110 08:35:08.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:08.270" level="INFO">VALUE: [7.029200000000305e-05, 7.022200000000173e-05, 7.05970000000021e-05, 7.051400000000069e-05, 7.036100000000142e-05, 7.088899999999759e-05, 7.054100000000035e-05, 7.098599999999858e-05, 7.072199999999876e-05, 7.075000000000137e-05, 7.034700000000185e-05, 7.081899999999974e-05, 7.082000000000269e-05, 7.037500000000099e-05, 7.045900000000188e-05, 7.095899999999891e-05, 7.101399999999772e-05, 7.050000000000112e-05, 7.032000000000219e-05, 7.038800000000109e-05, 7.097200000000248e-05, 7.116600000000098e-05, 7.04299999999998e-05, 7.034699999999838e-05, 7.1069e-05, 7.050000000000112e-05, 7.050000000000112e-05, 7.119500000000306e-05, 7.077799999999704e-05, 7.061100000000167e-05, 7.056999999999897e-05, 7.044499999999884e-05, 7.050000000000112e-05, 7.086099999999845e-05, 7.086099999999845e-05, 7.047199999999851e-05, 7.02230000000012e-05, 7.097199999999901e-05, 7.034799999999786e-05, 7.04299999999998e-05, 7.025000000000087e-05, 7.062500000000124e-05, 7.030499999999967e-05, 7.025000000000087e-05, 7.068000000000005e-05, 7.080599999999965e-05, 7.077800000000051e-05, 7.100000000000162e-05, 7.079200000000008e-05, 7.012500000000074e-05]</msg>
<status status="PASS" starttime="20201110 08:35:08.269" endtime="20201110 08:35:08.271"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.264" endtime="20201110 08:35:08.272"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:08.274" endtime="20201110 08:35:08.275"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:08.278" endtime="20201110 08:35:08.297"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.276" endtime="20201110 08:35:08.298"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.272" endtime="20201110 08:35:08.298"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.901" endtime="20201110 08:35:08.298"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.900" endtime="20201110 08:35:08.299"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:08.308" endtime="20201110 08:35:08.327"></status>
</kw>
<msg timestamp="20201110 08:35:08.327" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:08.306" endtime="20201110 08:35:08.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:08.330" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:08.328" endtime="20201110 08:35:08.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:08.331" endtime="20201110 08:35:08.334"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.304" endtime="20201110 08:35:08.334"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.301" endtime="20201110 08:35:08.335"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:08.341" endtime="20201110 08:35:08.628"></status>
</kw>
<msg timestamp="20201110 08:35:08.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020532542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020604486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:08.340" endtime="20201110 08:35:08.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:08.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020532542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020604486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:08.632" endtime="20201110 08:35:08.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:08.640" endtime="20201110 08:35:08.642"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.337" endtime="20201110 08:35:08.643"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.335" endtime="20201110 08:35:08.643"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:08.648" level="INFO">${RESULT} = [{'time': 0.020604486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.194400000000087e-05, 'source_diff': 7.194400000000087e-05}, {'time': 0.020681472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:08.644" endtime="20201110 08:35:08.648"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:08.663" level="INFO">${ACCURACY} = {'source_diff': [7.194400000000087e-05, 7.186099999999945e-05, 7.137500000000199e-05, 7.16109999999992e-05, 7.148600000000255e-05, 7.200000000000262e-05, 7.194500000000034e-05, 7.158399999999954e-05, ...</msg>
<status status="PASS" starttime="20201110 08:35:08.649" endtime="20201110 08:35:08.663"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:08.667" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201110 08:35:08.666" endtime="20201110 08:35:08.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:08.670" level="INFO">VALUE: [7.194400000000087e-05, 7.186099999999945e-05, 7.137500000000199e-05, 7.16109999999992e-05, 7.148600000000255e-05, 7.200000000000262e-05, 7.194500000000034e-05, 7.158399999999954e-05, 7.193100000000077e-05, 7.204200000000133e-05, 7.182000000000022e-05, 7.14309999999968e-05, 7.126399999999797e-05, 7.161199999999868e-05, 7.13620000000019e-05, 7.198599999999958e-05, 7.21109999999997e-05, 7.187499999999902e-05, 7.181899999999727e-05, 7.198599999999958e-05, 7.147199999999951e-05, 7.137499999999852e-05, 7.147200000000298e-05, 7.137500000000199e-05, 7.216700000000145e-05, 7.15560000000004e-05, 7.200000000000262e-05, 7.180599999999718e-05, 7.193100000000077e-05, 7.19170000000012e-05, 7.168100000000052e-05, 7.168100000000052e-05, 7.127800000000101e-05, 7.14300000000008e-05, 7.181900000000074e-05, 7.17499999999989e-05, 7.194400000000087e-05, 7.159699999999963e-05, 7.17360000000028e-05, 7.131900000000024e-05, 7.155599999999693e-05, 7.186099999999945e-05, 7.227800000000201e-05, 7.187499999999902e-05, 7.168099999999705e-05, 7.149999999999865e-05, 7.133399999999929e-05, 7.200000000000262e-05, 7.184799999999936e-05, 7.213899999999884e-05]</msg>
<status status="PASS" starttime="20201110 08:35:08.668" endtime="20201110 08:35:08.671"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.664" endtime="20201110 08:35:08.671"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:08.674" endtime="20201110 08:35:08.675"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:08.677" endtime="20201110 08:35:08.697"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.676" endtime="20201110 08:35:08.697"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.672" endtime="20201110 08:35:08.698"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.300" endtime="20201110 08:35:08.698"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.299" endtime="20201110 08:35:08.698"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:08.707" endtime="20201110 08:35:08.726"></status>
</kw>
<msg timestamp="20201110 08:35:08.726" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:08.705" endtime="20201110 08:35:08.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:08.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:08.727" endtime="20201110 08:35:08.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:08.730" endtime="20201110 08:35:08.733"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.703" endtime="20201110 08:35:08.733"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.701" endtime="20201110 08:35:08.734"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:08.740" endtime="20201110 08:35:09.026"></status>
</kw>
<msg timestamp="20201110 08:35:09.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020254639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020327625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:08.739" endtime="20201110 08:35:09.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:09.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020254639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020327625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:09.030" endtime="20201110 08:35:09.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:09.039" endtime="20201110 08:35:09.041"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.736" endtime="20201110 08:35:09.041"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.734" endtime="20201110 08:35:09.042"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:09.046" level="INFO">${RESULT} = [{'time': 0.020327625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.298599999999711e-05, 'source_diff': 7.298599999999711e-05}, {'time': 0.020404653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:09.042" endtime="20201110 08:35:09.046"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:09.060" level="INFO">${ACCURACY} = {'source_diff': [7.298599999999711e-05, 7.320899999999769e-05, 7.301399999999972e-05, 7.21109999999997e-05, 7.281999999999775e-05, 7.291699999999873e-05, 7.230600000000115e-05, 7.287500000000002e-05, ...</msg>
<status status="PASS" starttime="20201110 08:35:09.047" endtime="20201110 08:35:09.060"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:09.065" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201110 08:35:09.064" endtime="20201110 08:35:09.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:09.067" level="INFO">VALUE: [7.298599999999711e-05, 7.320899999999769e-05, 7.301399999999972e-05, 7.21109999999997e-05, 7.281999999999775e-05, 7.291699999999873e-05, 7.230600000000115e-05, 7.287500000000002e-05, 7.251399999999922e-05, 7.232000000000072e-05, 7.268100000000152e-05, 7.305500000000242e-05, 7.236099999999995e-05, 7.309699999999766e-05, 7.281900000000174e-05, 7.216699999999798e-05, 7.288899999999959e-05, 7.225000000000287e-05, 7.277800000000251e-05, 7.233299999999734e-05, 7.287500000000002e-05, 7.286100000000045e-05, 7.319500000000159e-05, 7.318100000000202e-05, 7.272199999999729e-05, 7.238899999999909e-05, 7.280600000000165e-05, 7.24309999999978e-05, 7.262499999999977e-05, 7.298600000000058e-05, 7.212499999999927e-05, 7.298600000000058e-05, 7.234700000000038e-05, 7.22499999999994e-05, 7.305599999999843e-05, 7.27499999999999e-05, 7.240299999999866e-05, 7.241699999999823e-05, 7.298600000000058e-05, 7.232000000000072e-05, 7.313899999999984e-05, 7.236099999999995e-05, 7.230600000000115e-05, 7.226399999999897e-05, 7.269499999999762e-05, 7.26110000000002e-05, 7.244500000000084e-05, 7.291599999999926e-05, 7.306899999999852e-05, 7.222200000000026e-05]</msg>
<status status="PASS" starttime="20201110 08:35:09.066" endtime="20201110 08:35:09.068"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.061" endtime="20201110 08:35:09.069"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:09.071" endtime="20201110 08:35:09.072"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:09.075" endtime="20201110 08:35:09.094"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.073" endtime="20201110 08:35:09.095"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.069" endtime="20201110 08:35:09.095"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.699" endtime="20201110 08:35:09.095"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.698" endtime="20201110 08:35:09.095"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:09.104" endtime="20201110 08:35:09.124"></status>
</kw>
<msg timestamp="20201110 08:35:09.124" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:09.103" endtime="20201110 08:35:09.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:09.127" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:09.125" endtime="20201110 08:35:09.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:09.128" endtime="20201110 08:35:09.130"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.100" endtime="20201110 08:35:09.131"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.098" endtime="20201110 08:35:09.131"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:09.138" endtime="20201110 08:35:09.424"></status>
</kw>
<msg timestamp="20201110 08:35:09.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020393139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020466792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:09.136" endtime="20201110 08:35:09.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:09.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020393139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020466792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:09.428" endtime="20201110 08:35:09.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:09.437" endtime="20201110 08:35:09.439"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.134" endtime="20201110 08:35:09.439"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.132" endtime="20201110 08:35:09.440"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:09.444" level="INFO">${RESULT} = [{'time': 0.020466792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.365299999999991e-05, 'source_diff': 7.365299999999991e-05}, {'time': 0.020544792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:09.440" endtime="20201110 08:35:09.444"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:09.458" level="INFO">${ACCURACY} = {'source_diff': [7.365299999999991e-05, 7.348599999999761e-05, 7.420799999999922e-05, 7.409699999999866e-05, 7.406899999999952e-05, 7.326399999999997e-05, 7.32500000000004e-05, 7.350000000000065e-05, ...</msg>
<status status="PASS" starttime="20201110 08:35:09.445" endtime="20201110 08:35:09.458"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:09.463" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201110 08:35:09.462" endtime="20201110 08:35:09.463"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:09.465" level="INFO">VALUE: [7.365299999999991e-05, 7.348599999999761e-05, 7.420799999999922e-05, 7.409699999999866e-05, 7.406899999999952e-05, 7.326399999999997e-05, 7.32500000000004e-05, 7.350000000000065e-05, 7.36110000000012e-05, 7.329199999999911e-05, 7.336100000000095e-05, 7.391699999999973e-05, 7.322199999999779e-05, 7.379200000000308e-05, 7.355599999999893e-05, 7.402800000000029e-05, 7.336100000000095e-05, 7.401400000000072e-05, 7.39309999999993e-05, 7.363900000000034e-05, 7.415300000000041e-05, 7.340200000000019e-05, 7.355499999999945e-05, 7.312500000000027e-05, 7.386099999999798e-05, 7.320799999999822e-05, 7.416600000000051e-05, 7.336100000000095e-05, 7.397200000000201e-05, 7.384699999999841e-05, 7.372199999999829e-05, 7.366700000000295e-05, 7.409800000000161e-05, 7.37500000000009e-05, 7.373600000000133e-05, 7.379199999999961e-05, 7.393100000000277e-05, 7.380600000000265e-05, 7.391600000000026e-05, 7.381999999999875e-05, 7.381900000000274e-05, 7.416600000000051e-05, 7.368099999999905e-05, 7.336100000000095e-05, 7.344400000000237e-05, 7.329099999999963e-05, 7.418100000000302e-05, 7.380599999999918e-05, 7.355599999999893e-05, 7.344500000000184e-05]</msg>
<status status="PASS" starttime="20201110 08:35:09.464" endtime="20201110 08:35:09.466"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.459" endtime="20201110 08:35:09.467"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:09.469" endtime="20201110 08:35:09.471"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:09.473" endtime="20201110 08:35:09.492"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.471" endtime="20201110 08:35:09.493"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.467" endtime="20201110 08:35:09.493"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.096" endtime="20201110 08:35:09.494"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.096" endtime="20201110 08:35:09.494"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:09.503" endtime="20201110 08:35:09.523"></status>
</kw>
<msg timestamp="20201110 08:35:09.523" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:09.501" endtime="20201110 08:35:09.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:09.526" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:09.524" endtime="20201110 08:35:09.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:09.527" endtime="20201110 08:35:09.529"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.498" endtime="20201110 08:35:09.530"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.496" endtime="20201110 08:35:09.530"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:09.537" endtime="20201110 08:35:09.823"></status>
</kw>
<msg timestamp="20201110 08:35:09.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020387931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02046225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:35:09.535" endtime="20201110 08:35:09.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:09.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020387931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02046225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:35:09.828" endtime="20201110 08:35:09.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:09.837" endtime="20201110 08:35:09.838"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.533" endtime="20201110 08:35:09.839"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.531" endtime="20201110 08:35:09.839"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:09.844" level="INFO">${RESULT} = [{'time': 0.02046225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.431899999999977e-05, 'source_diff': 7.431899999999977e-05}, {'time': 0.020540278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:35:09.840" endtime="20201110 08:35:09.844"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:09.858" level="INFO">${ACCURACY} = {'source_diff': [7.431899999999977e-05, 7.468100000000005e-05, 7.430599999999968e-05, 7.461099999999873e-05, 7.51249999999988e-05, 7.452800000000079e-05, 7.420900000000216e-05, 7.430599999999968e-05, ...</msg>
<status status="PASS" starttime="20201110 08:35:09.845" endtime="20201110 08:35:09.858"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:09.862" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201110 08:35:09.861" endtime="20201110 08:35:09.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:09.865" level="INFO">VALUE: [7.431899999999977e-05, 7.468100000000005e-05, 7.430599999999968e-05, 7.461099999999873e-05, 7.51249999999988e-05, 7.452800000000079e-05, 7.420900000000216e-05, 7.430599999999968e-05, 7.51249999999988e-05, 7.463900000000134e-05, 7.506900000000052e-05, 7.473600000000233e-05, 7.433300000000281e-05, 7.513899999999837e-05, 7.486100000000245e-05, 7.452799999999732e-05, 7.4763999999998e-05, 7.480600000000018e-05, 7.427800000000054e-05, 7.459699999999916e-05, 7.437500000000152e-05, 7.473600000000233e-05, 7.499999999999868e-05, 7.509799999999914e-05, 7.413900000000084e-05, 7.47769999999981e-05, 7.519400000000065e-05, 7.443000000000033e-05, 7.504200000000086e-05, 7.443000000000033e-05, 7.413899999999737e-05, 7.468000000000058e-05, 7.487499999999855e-05, 7.468100000000005e-05, 7.463899999999787e-05, 7.481999999999975e-05, 7.462500000000177e-05, 7.47769999999981e-05, 7.437500000000152e-05, 7.449999999999818e-05, 7.430599999999968e-05, 7.487499999999855e-05, 7.505500000000095e-05, 7.434699999999891e-05, 7.465300000000091e-05, 7.499999999999868e-05, 7.509699999999966e-05, 7.454199999999689e-05, 7.461099999999873e-05, 7.438899999999762e-05]</msg>
<status status="PASS" starttime="20201110 08:35:09.864" endtime="20201110 08:35:09.866"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.859" endtime="20201110 08:35:09.866"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:09.869" endtime="20201110 08:35:09.870"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:09.872" endtime="20201110 08:35:09.892"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.871" endtime="20201110 08:35:09.892"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.867" endtime="20201110 08:35:09.893"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.495" endtime="20201110 08:35:09.893"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.494" endtime="20201110 08:35:09.893"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:09.902" endtime="20201110 08:35:09.922"></status>
</kw>
<msg timestamp="20201110 08:35:09.922" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:09.900" endtime="20201110 08:35:09.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:09.925" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:09.923" endtime="20201110 08:35:09.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:09.926" endtime="20201110 08:35:09.929"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.898" endtime="20201110 08:35:09.929"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.896" endtime="20201110 08:35:09.930"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:09.936" endtime="20201110 08:35:10.223"></status>
</kw>
<msg timestamp="20201110 08:35:10.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020387708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020463528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:09.935" endtime="20201110 08:35:10.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:10.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020387708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020463528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:10.227" endtime="20201110 08:35:10.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:10.236" endtime="20201110 08:35:10.238"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.932" endtime="20201110 08:35:10.238"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.930" endtime="20201110 08:35:10.239"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:10.243" level="INFO">${RESULT} = [{'time': 0.020463528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.582000000000075e-05, 'source_diff': 7.582000000000075e-05}, {'time': 0.020543486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:10.239" endtime="20201110 08:35:10.243"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:10.259" level="INFO">${ACCURACY} = {'source_diff': [7.582000000000075e-05, 7.509699999999966e-05, 7.582000000000075e-05, 7.529200000000111e-05, 7.580600000000118e-05, 7.54310000000008e-05, 7.568100000000105e-05, 7.612500000000327e-05, ...</msg>
<status status="PASS" starttime="20201110 08:35:10.244" endtime="20201110 08:35:10.259"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:10.263" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201110 08:35:10.262" endtime="20201110 08:35:10.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:10.266" level="INFO">VALUE: [7.582000000000075e-05, 7.509699999999966e-05, 7.582000000000075e-05, 7.529200000000111e-05, 7.580600000000118e-05, 7.54310000000008e-05, 7.568100000000105e-05, 7.612500000000327e-05, 7.545800000000047e-05, 7.529199999999764e-05, 7.53189999999973e-05, 7.547200000000004e-05, 7.54029999999982e-05, 7.593000000000183e-05, 7.56249999999993e-05, 7.555600000000093e-05, 7.529200000000111e-05, 7.588899999999912e-05, 7.611100000000023e-05, 7.526400000000197e-05, 7.536099999999948e-05, 7.599999999999968e-05, 7.601400000000272e-05, 7.52639999999985e-05, 7.558400000000007e-05, 7.588899999999912e-05, 7.548599999999961e-05, 7.569400000000115e-05, 7.581900000000127e-05, 7.566600000000201e-05, 7.594399999999793e-05, 7.618000000000208e-05, 7.548599999999961e-05, 7.59029999999987e-05, 7.574999999999943e-05, 7.593099999999783e-05, 7.555600000000093e-05, 7.594500000000087e-05, 7.581999999999728e-05, 7.56249999999993e-05, 7.529199999999764e-05, 7.613899999999937e-05, 7.55700000000005e-05, 7.562500000000277e-05, 7.604200000000186e-05, 7.56249999999993e-05, 7.580499999999823e-05, 7.594399999999793e-05, 7.509699999999966e-05, 7.53890000000021e-05]</msg>
<status status="PASS" starttime="20201110 08:35:10.265" endtime="20201110 08:35:10.267"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.260" endtime="20201110 08:35:10.267"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:10.270" endtime="20201110 08:35:10.271"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:10.273" endtime="20201110 08:35:10.293"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.272" endtime="20201110 08:35:10.293"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.268" endtime="20201110 08:35:10.294"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.894" endtime="20201110 08:35:10.294"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.894" endtime="20201110 08:35:10.294"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:10.303" endtime="20201110 08:35:10.323"></status>
</kw>
<msg timestamp="20201110 08:35:10.324" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:10.302" endtime="20201110 08:35:10.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:10.326" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:10.325" endtime="20201110 08:35:10.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:10.327" endtime="20201110 08:35:10.330"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.299" endtime="20201110 08:35:10.330"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.297" endtime="20201110 08:35:10.331"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:10.340" endtime="20201110 08:35:10.630"></status>
</kw>
<msg timestamp="20201110 08:35:10.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020324917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020401819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:10.336" endtime="20201110 08:35:10.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:10.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020324917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020401819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:10.634" endtime="20201110 08:35:10.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:10.643" endtime="20201110 08:35:10.644"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.333" endtime="20201110 08:35:10.645"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.331" endtime="20201110 08:35:10.645"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:10.650" level="INFO">${RESULT} = [{'time': 0.020401819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.690200000000022e-05, 'source_diff': 7.690200000000022e-05}, {'time': 0.020483903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:10.646" endtime="20201110 08:35:10.650"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:10.664" level="INFO">${ACCURACY} = {'source_diff': [7.690200000000022e-05, 7.632000000000125e-05, 7.675000000000043e-05, 7.641700000000223e-05, 7.716699999999951e-05, 7.692999999999936e-05, 7.701400000000025e-05, 7.69029999999997e-05, ...</msg>
<status status="PASS" starttime="20201110 08:35:10.651" endtime="20201110 08:35:10.664"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:10.669" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201110 08:35:10.668" endtime="20201110 08:35:10.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:10.671" level="INFO">VALUE: [7.690200000000022e-05, 7.632000000000125e-05, 7.675000000000043e-05, 7.641700000000223e-05, 7.716699999999951e-05, 7.692999999999936e-05, 7.701400000000025e-05, 7.69029999999997e-05, 7.654199999999889e-05, 7.661100000000073e-05, 7.651399999999975e-05, 7.636100000000048e-05, 7.650000000000018e-05, 7.644500000000137e-05, 7.650000000000018e-05, 7.677799999999957e-05, 7.644399999999843e-05, 7.69029999999997e-05, 7.633299999999787e-05, 7.719400000000265e-05, 7.717999999999961e-05, 7.633300000000134e-05, 7.69579999999985e-05, 7.634800000000039e-05, 7.718099999999908e-05, 7.705599999999896e-05, 7.718099999999908e-05, 7.630499999999873e-05, 7.713900000000037e-05, 7.71250000000008e-05, 7.686100000000098e-05, 7.666699999999901e-05, 7.622300000000026e-05, 7.641699999999876e-05, 7.637500000000005e-05, 7.617999999999861e-05, 7.694399999999893e-05, 7.720799999999875e-05, 7.636099999999701e-05, 7.637500000000005e-05, 7.702799999999982e-05, 7.651399999999975e-05, 7.658299999999812e-05, 7.643099999999833e-05, 7.644500000000137e-05, 7.681999999999828e-05, 7.661100000000073e-05, 7.650000000000018e-05, 7.61379999999999e-05, 7.670799999999825e-05]</msg>
<status status="PASS" starttime="20201110 08:35:10.670" endtime="20201110 08:35:10.672"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.665" endtime="20201110 08:35:10.673"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:10.675" endtime="20201110 08:35:10.676"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:10.679" endtime="20201110 08:35:10.698"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.677" endtime="20201110 08:35:10.699"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.673" endtime="20201110 08:35:10.699"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.295" endtime="20201110 08:35:10.699"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.295" endtime="20201110 08:35:10.699"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:10.709" endtime="20201110 08:35:10.728"></status>
</kw>
<msg timestamp="20201110 08:35:10.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:10.707" endtime="20201110 08:35:10.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:10.731" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:10.730" endtime="20201110 08:35:10.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:10.733" endtime="20201110 08:35:10.735"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.704" endtime="20201110 08:35:10.736"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.702" endtime="20201110 08:35:10.736"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:10.743" endtime="20201110 08:35:11.029"></status>
</kw>
<msg timestamp="20201110 08:35:11.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020402472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020479722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:10.741" endtime="20201110 08:35:11.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:11.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020402472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020479722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:11.034" endtime="20201110 08:35:11.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:11.043" endtime="20201110 08:35:11.044"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.739" endtime="20201110 08:35:11.045"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.737" endtime="20201110 08:35:11.045"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:11.049" level="INFO">${RESULT} = [{'time': 0.020479722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.724999999999746e-05, 'source_diff': 7.724999999999746e-05}, {'time': 0.020563736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:11.046" endtime="20201110 08:35:11.050"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:11.064" level="INFO">${ACCURACY} = {'source_diff': [7.724999999999746e-05, 7.799999999999821e-05, 7.794399999999993e-05, 7.797200000000254e-05, 7.7457999999999e-05, 7.768099999999958e-05, 7.806900000000006e-05, 7.787500000000155e-05, 7...</msg>
<status status="PASS" starttime="20201110 08:35:11.050" endtime="20201110 08:35:11.064"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:11.068" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201110 08:35:11.067" endtime="20201110 08:35:11.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:11.071" level="INFO">VALUE: [7.724999999999746e-05, 7.799999999999821e-05, 7.794399999999993e-05, 7.797200000000254e-05, 7.7457999999999e-05, 7.768099999999958e-05, 7.806900000000006e-05, 7.787500000000155e-05, 7.763900000000087e-05, 7.74449999999989e-05, 7.786099999999851e-05, 7.781999999999928e-05, 7.801300000000178e-05, 7.773700000000133e-05, 7.806900000000006e-05, 7.736099999999801e-05, 7.805599999999996e-05, 7.763900000000087e-05, 7.72640000000005e-05, 7.755499999999999e-05, 7.750000000000118e-05, 7.75969999999987e-05, 7.80969999999992e-05, 7.791700000000026e-05, 7.750000000000118e-05, 7.812499999999833e-05, 7.81250000000018e-05, 7.812499999999833e-05, 7.7457999999999e-05, 7.802800000000082e-05, 7.786200000000146e-05, 7.750000000000118e-05, 7.725000000000093e-05, 7.748600000000161e-05, 7.742999999999986e-05, 7.775000000000143e-05, 7.777800000000057e-05, 7.734700000000191e-05, 7.801399999999778e-05, 7.783399999999885e-05, 7.820899999999922e-05, 7.797199999999907e-05, 7.775000000000143e-05, 7.719499999999865e-05, 7.711099999999776e-05, 7.81380000000019e-05, 7.726300000000103e-05, 7.806900000000006e-05, 7.744399999999943e-05, 7.729100000000017e-05]</msg>
<status status="PASS" starttime="20201110 08:35:11.069" endtime="20201110 08:35:11.072"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.065" endtime="20201110 08:35:11.072"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:11.075" endtime="20201110 08:35:11.076"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:11.078" endtime="20201110 08:35:11.097"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.077" endtime="20201110 08:35:11.098"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.073" endtime="20201110 08:35:11.099"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.700" endtime="20201110 08:35:11.099"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.700" endtime="20201110 08:35:11.099"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:11.108" endtime="20201110 08:35:11.127"></status>
</kw>
<msg timestamp="20201110 08:35:11.128" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:11.106" endtime="20201110 08:35:11.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:11.130" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:11.129" endtime="20201110 08:35:11.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:11.131" endtime="20201110 08:35:11.134"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.104" endtime="20201110 08:35:11.135"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.102" endtime="20201110 08:35:11.135"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:11.142" endtime="20201110 08:35:11.428"></status>
</kw>
<msg timestamp="20201110 08:35:11.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020377236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020456444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:11.140" endtime="20201110 08:35:11.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:11.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020377236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020456444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:11.432" endtime="20201110 08:35:11.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:11.441" endtime="20201110 08:35:11.442"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.138" endtime="20201110 08:35:11.443"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.136" endtime="20201110 08:35:11.443"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:11.448" level="INFO">${RESULT} = [{'time': 0.020456444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.920800000000075e-05, 'source_diff': 7.920800000000075e-05}, {'time': 0.020539458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:11.444" endtime="20201110 08:35:11.448"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:11.462" level="INFO">${ACCURACY} = {'source_diff': [7.920800000000075e-05, 7.812499999999833e-05, 7.843000000000086e-05, 7.844400000000043e-05, 7.876399999999853e-05, 7.820799999999975e-05, 7.87909999999982e-05, 7.869400000000068e-05, ...</msg>
<status status="PASS" starttime="20201110 08:35:11.449" endtime="20201110 08:35:11.462"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:11.467" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201110 08:35:11.466" endtime="20201110 08:35:11.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:11.469" level="INFO">VALUE: [7.920800000000075e-05, 7.812499999999833e-05, 7.843000000000086e-05, 7.844400000000043e-05, 7.876399999999853e-05, 7.820799999999975e-05, 7.87909999999982e-05, 7.869400000000068e-05, 7.84169999999973e-05, 7.89030000000017e-05, 7.912499999999933e-05, 7.898599999999964e-05, 7.858300000000012e-05, 7.907000000000053e-05, 7.920799999999728e-05, 7.811200000000171e-05, 7.882000000000028e-05, 7.906900000000106e-05, 7.874999999999896e-05, 7.900000000000268e-05, 7.887500000000255e-05, 7.861100000000273e-05, 7.843000000000086e-05, 7.812499999999833e-05, 7.886099999999951e-05, 7.852800000000132e-05, 7.902799999999835e-05, 7.822199999999932e-05, 7.857000000000003e-05, 7.872199999999982e-05, 7.90129999999993e-05, 7.880600000000071e-05, 7.848699999999861e-05, 7.868000000000111e-05, 7.847199999999957e-05, 7.843000000000086e-05, 7.854099999999795e-05, 7.897200000000007e-05, 7.881899999999734e-05, 7.842999999999739e-05, 7.904200000000139e-05, 7.898600000000311e-05, 7.865300000000144e-05, 7.834699999999944e-05, 7.895899999999997e-05, 7.840199999999825e-05, 7.89450000000004e-05, 7.847300000000251e-05, 7.902700000000235e-05, 7.867999999999764e-05]</msg>
<status status="PASS" starttime="20201110 08:35:11.468" endtime="20201110 08:35:11.470"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.463" endtime="20201110 08:35:11.471"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:11.473" endtime="20201110 08:35:11.474"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:11.477" endtime="20201110 08:35:11.496"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.475" endtime="20201110 08:35:11.497"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.471" endtime="20201110 08:35:11.497"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.100" endtime="20201110 08:35:11.497"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.099" endtime="20201110 08:35:11.497"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:11.507" endtime="20201110 08:35:11.526"></status>
</kw>
<msg timestamp="20201110 08:35:11.527" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:11.505" endtime="20201110 08:35:11.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:11.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:11.528" endtime="20201110 08:35:11.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:11.530" endtime="20201110 08:35:11.533"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.502" endtime="20201110 08:35:11.534"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.500" endtime="20201110 08:35:11.534"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:11.541" endtime="20201110 08:35:11.828"></status>
</kw>
<msg timestamp="20201110 08:35:11.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020409778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020489833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:11.539" endtime="20201110 08:35:11.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:11.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020409778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020489833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:11.832" endtime="20201110 08:35:11.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:11.841" endtime="20201110 08:35:11.843"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.536" endtime="20201110 08:35:11.843"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.535" endtime="20201110 08:35:11.844"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:11.848" level="INFO">${RESULT} = [{'time': 0.020489833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.005499999999902e-05, 'source_diff': 8.005499999999902e-05}, {'time': 0.020571833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:11.844" endtime="20201110 08:35:11.848"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:11.863" level="INFO">${ACCURACY} = {'source_diff': [8.005499999999902e-05, 7.969400000000168e-05, 7.96519999999995e-05, 7.92640000000025e-05, 7.992999999999889e-05, 7.936100000000001e-05, 7.937500000000305e-05, 7.96389999999994e-05, 7....</msg>
<status status="PASS" starttime="20201110 08:35:11.849" endtime="20201110 08:35:11.863"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:11.868" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201110 08:35:11.867" endtime="20201110 08:35:11.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:11.870" level="INFO">VALUE: [8.005499999999902e-05, 7.969400000000168e-05, 7.96519999999995e-05, 7.92640000000025e-05, 7.992999999999889e-05, 7.936100000000001e-05, 7.937500000000305e-05, 7.96389999999994e-05, 7.954199999999842e-05, 7.912499999999933e-05, 7.92229999999998e-05, 8.005599999999849e-05, 8.005599999999849e-05, 7.962499999999983e-05, 7.99450000000014e-05, 7.944400000000143e-05, 7.973600000000039e-05, 8.016599999999957e-05, 7.994400000000193e-05, 7.980499999999877e-05, 7.937499999999958e-05, 7.993099999999836e-05, 7.941700000000176e-05, 8.002799999999935e-05, 8.005600000000196e-05, 7.987500000000008e-05, 7.941700000000176e-05, 7.941599999999882e-05, 7.984699999999748e-05, 7.976399999999953e-05, 7.998700000000011e-05, 7.961100000000026e-05, 7.994399999999846e-05, 7.988899999999965e-05, 7.911099999999976e-05, 7.973600000000039e-05, 7.937499999999958e-05, 8.002800000000282e-05, 7.949999999999971e-05, 7.923599999999989e-05, 7.997200000000107e-05, 7.944499999999743e-05, 7.94030000000022e-05, 7.982000000000128e-05, 7.979200000000214e-05, 7.976399999999953e-05, 8.007000000000153e-05, 7.987500000000008e-05, 7.968000000000211e-05, 7.949999999999971e-05]</msg>
<status status="PASS" starttime="20201110 08:35:11.869" endtime="20201110 08:35:11.871"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.864" endtime="20201110 08:35:11.872"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:11.874" endtime="20201110 08:35:11.876"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:11.878" endtime="20201110 08:35:11.897"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.876" endtime="20201110 08:35:11.898"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.873" endtime="20201110 08:35:11.898"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.498" endtime="20201110 08:35:11.898"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.498" endtime="20201110 08:35:11.899"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:11.908" endtime="20201110 08:35:11.928"></status>
</kw>
<msg timestamp="20201110 08:35:11.928" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:11.906" endtime="20201110 08:35:11.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:11.931" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:11.929" endtime="20201110 08:35:11.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:11.932" endtime="20201110 08:35:11.935"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.903" endtime="20201110 08:35:11.935"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.901" endtime="20201110 08:35:11.936"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:11.942" endtime="20201110 08:35:12.229"></status>
</kw>
<msg timestamp="20201110 08:35:12.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0204675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020547611, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:35:11.941" endtime="20201110 08:35:12.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:12.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0204675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020547611, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:35:12.234" endtime="20201110 08:35:12.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:12.242" endtime="20201110 08:35:12.244"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.938" endtime="20201110 08:35:12.245"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.936" endtime="20201110 08:35:12.245"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:12.249" level="INFO">${RESULT} = [{'time': 0.020547611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.011100000000076e-05, 'source_diff': 8.011100000000076e-05}, {'time': 0.020631625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:12.246" endtime="20201110 08:35:12.250"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:12.263" level="INFO">${ACCURACY} = {'source_diff': [8.011100000000076e-05, 8.080599999999924e-05, 8.075000000000096e-05, 8.023600000000089e-05, 8.058399999999813e-05, 8.06109999999978e-05, 8.061100000000126e-05, 8.118099999999961e-05, ...</msg>
<status status="PASS" starttime="20201110 08:35:12.250" endtime="20201110 08:35:12.264"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:12.268" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201110 08:35:12.267" endtime="20201110 08:35:12.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:12.271" level="INFO">VALUE: [8.011100000000076e-05, 8.080599999999924e-05, 8.075000000000096e-05, 8.023600000000089e-05, 8.058399999999813e-05, 8.06109999999978e-05, 8.061100000000126e-05, 8.118099999999961e-05, 8.091600000000032e-05, 8.105500000000002e-05, 8.105500000000002e-05, 8.092999999999989e-05, 8.030499999999927e-05, 8.106899999999959e-05, 8.052700000000038e-05, 8.07780000000001e-05, 8.098600000000164e-05, 8.105599999999949e-05, 8.116700000000004e-05, 8.050000000000071e-05, 8.036100000000101e-05, 8.068099999999911e-05, 8.088799999999771e-05, 8.084800000000142e-05, 8.07369999999974e-05, 8.106899999999959e-05, 8.066600000000007e-05, 8.102800000000035e-05, 8.061100000000126e-05, 8.06109999999978e-05, 8.091600000000032e-05, 8.02909999999997e-05, 8.076399999999706e-05, 8.119499999999918e-05, 8.056999999999856e-05, 8.059800000000117e-05, 8.034699999999798e-05, 8.11109999999983e-05, 8.105599999999949e-05, 8.090200000000075e-05, 8.068100000000258e-05, 8.062500000000083e-05, 8.104100000000045e-05, 8.070799999999878e-05, 8.104100000000045e-05, 8.091600000000032e-05, 8.037500000000058e-05, 8.012500000000033e-05, 8.081999999999881e-05, 8.098599999999817e-05]</msg>
<status status="PASS" starttime="20201110 08:35:12.269" endtime="20201110 08:35:12.330"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.264" endtime="20201110 08:35:12.331"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:12.333" endtime="20201110 08:35:12.335"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:12.337" endtime="20201110 08:35:12.356"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.335" endtime="20201110 08:35:12.357"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.332" endtime="20201110 08:35:12.357"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.900" endtime="20201110 08:35:12.358"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.899" endtime="20201110 08:35:12.358"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:12.367" endtime="20201110 08:35:12.387"></status>
</kw>
<msg timestamp="20201110 08:35:12.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:12.365" endtime="20201110 08:35:12.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:12.390" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:12.388" endtime="20201110 08:35:12.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:12.391" endtime="20201110 08:35:12.394"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.363" endtime="20201110 08:35:12.394"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.360" endtime="20201110 08:35:12.395"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:12.402" endtime="20201110 08:35:12.688"></status>
</kw>
<msg timestamp="20201110 08:35:12.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020319833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020401153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:12.400" endtime="20201110 08:35:12.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:12.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020319833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020401153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:12.692" endtime="20201110 08:35:12.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:12.701" endtime="20201110 08:35:12.703"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.397" endtime="20201110 08:35:12.703"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.395" endtime="20201110 08:35:12.704"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:12.708" level="INFO">${RESULT} = [{'time': 0.020401153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.132000000000278e-05, 'source_diff': 8.132000000000278e-05}, {'time': 0.020487153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:12.704" endtime="20201110 08:35:12.708"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:12.722" level="INFO">${ACCURACY} = {'source_diff': [8.132000000000278e-05, 8.111100000000177e-05, 8.145799999999953e-05, 8.10979999999982e-05, 8.205600000000049e-05, 8.200000000000221e-05, 8.179099999999773e-05, 8.213899999999844e-05, ...</msg>
<status status="PASS" starttime="20201110 08:35:12.709" endtime="20201110 08:35:12.722"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:12.727" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201110 08:35:12.726" endtime="20201110 08:35:12.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:12.730" level="INFO">VALUE: [8.132000000000278e-05, 8.111100000000177e-05, 8.145799999999953e-05, 8.10979999999982e-05, 8.205600000000049e-05, 8.200000000000221e-05, 8.179099999999773e-05, 8.213899999999844e-05, 8.211100000000277e-05, 8.130500000000027e-05, 8.12780000000006e-05, 8.205600000000049e-05, 8.156999999999956e-05, 8.137500000000158e-05, 8.199999999999874e-05, 8.125000000000146e-05, 8.127799999999713e-05, 8.184699999999948e-05, 8.172299999999882e-05, 8.213899999999844e-05, 8.186099999999905e-05, 8.184800000000242e-05, 8.144399999999996e-05, 8.111100000000177e-05, 8.193000000000089e-05, 8.130500000000027e-05, 8.148600000000214e-05, 8.130599999999974e-05, 8.134699999999898e-05, 8.173599999999892e-05, 8.11109999999983e-05, 8.172199999999935e-05, 8.131999999999931e-05, 8.166700000000054e-05, 8.137499999999812e-05, 8.144499999999943e-05, 8.137499999999812e-05, 8.11109999999983e-05, 8.127799999999713e-05, 8.181900000000034e-05, 8.191599999999785e-05, 8.219400000000071e-05, 8.216600000000157e-05, 8.18329999999999e-05, 8.130599999999974e-05, 8.120799999999928e-05, 8.155599999999999e-05, 8.136100000000202e-05, 8.174999999999849e-05, 8.147200000000257e-05]</msg>
<status status="PASS" starttime="20201110 08:35:12.728" endtime="20201110 08:35:12.730"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.723" endtime="20201110 08:35:12.731"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:12.733" endtime="20201110 08:35:12.735"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:12.737" endtime="20201110 08:35:12.756"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.735" endtime="20201110 08:35:12.757"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.732" endtime="20201110 08:35:12.757"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.359" endtime="20201110 08:35:12.758"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.358" endtime="20201110 08:35:12.758"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:12.767" endtime="20201110 08:35:12.787"></status>
</kw>
<msg timestamp="20201110 08:35:12.788" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:12.765" endtime="20201110 08:35:12.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:12.790" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:12.789" endtime="20201110 08:35:12.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:12.791" endtime="20201110 08:35:12.794"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.763" endtime="20201110 08:35:12.795"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.760" endtime="20201110 08:35:12.795"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:12.802" endtime="20201110 08:35:13.088"></status>
</kw>
<msg timestamp="20201110 08:35:13.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020305986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020389056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:12.800" endtime="20201110 08:35:13.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:13.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020305986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020389056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:13.092" endtime="20201110 08:35:13.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:13.101" endtime="20201110 08:35:13.103"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.797" endtime="20201110 08:35:13.103"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.796" endtime="20201110 08:35:13.104"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:13.108" level="INFO">${RESULT} = [{'time': 0.020389056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.306999999999759e-05, 'source_diff': 8.306999999999759e-05}, {'time': 0.020475111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:13.104" endtime="20201110 08:35:13.108"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:13.122" level="INFO">${ACCURACY} = {'source_diff': [8.306999999999759e-05, 8.31110000000003e-05, 8.276399999999906e-05, 8.270900000000025e-05, 8.249999999999924e-05, 8.304200000000192e-05, 8.236100000000302e-05, 8.255500000000152e-05, ...</msg>
<status status="PASS" starttime="20201110 08:35:13.109" endtime="20201110 08:35:13.122"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:13.127" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201110 08:35:13.126" endtime="20201110 08:35:13.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:13.129" level="INFO">VALUE: [8.306999999999759e-05, 8.31110000000003e-05, 8.276399999999906e-05, 8.270900000000025e-05, 8.249999999999924e-05, 8.304200000000192e-05, 8.236100000000302e-05, 8.255500000000152e-05, 8.24720000000001e-05, 8.273599999999992e-05, 8.298600000000017e-05, 8.319400000000171e-05, 8.276400000000253e-05, 8.268100000000111e-05, 8.215199999999853e-05, 8.282000000000081e-05, 8.230600000000074e-05, 8.254200000000142e-05, 8.280599999999777e-05, 8.234699999999998e-05, 8.212499999999887e-05, 8.273599999999992e-05, 8.309700000000073e-05, 8.206900000000059e-05, 8.286100000000005e-05, 8.212499999999887e-05, 8.258300000000066e-05, 8.26109999999998e-05, 8.277799999999863e-05, 8.244499999999697e-05, 8.22780000000016e-05, 8.257000000000056e-05, 8.31390000000029e-05, 8.254199999999795e-05, 8.270900000000025e-05, 8.306899999999812e-05, 8.244400000000096e-05, 8.212500000000234e-05, 8.267999999999817e-05, 8.274999999999949e-05, 8.238900000000215e-05, 8.236099999999955e-05, 8.291699999999833e-05, 8.294400000000146e-05, 8.222199999999985e-05, 8.282000000000081e-05, 8.318100000000161e-05, 8.238899999999869e-05, 8.232000000000031e-05, 8.304200000000192e-05]</msg>
<status status="PASS" starttime="20201110 08:35:13.128" endtime="20201110 08:35:13.130"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.123" endtime="20201110 08:35:13.131"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:13.133" endtime="20201110 08:35:13.135"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:13.137" endtime="20201110 08:35:13.156"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.135" endtime="20201110 08:35:13.157"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.131" endtime="20201110 08:35:13.157"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.759" endtime="20201110 08:35:13.157"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.758" endtime="20201110 08:35:13.158"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:13.167" endtime="20201110 08:35:13.186"></status>
</kw>
<msg timestamp="20201110 08:35:13.187" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:13.165" endtime="20201110 08:35:13.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:13.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:13.188" endtime="20201110 08:35:13.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:13.190" endtime="20201110 08:35:13.193"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.162" endtime="20201110 08:35:13.193"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.160" endtime="20201110 08:35:13.194"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:13.201" endtime="20201110 08:35:13.487"></status>
</kw>
<msg timestamp="20201110 08:35:13.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020452917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020536125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:13.199" endtime="20201110 08:35:13.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:13.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020452917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020536125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:13.491" endtime="20201110 08:35:13.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:13.500" endtime="20201110 08:35:13.502"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.196" endtime="20201110 08:35:13.502"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.195" endtime="20201110 08:35:13.503"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:13.507" level="INFO">${RESULT} = [{'time': 0.020536125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.320799999999781e-05, 'source_diff': 8.320799999999781e-05}, {'time': 0.020622167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:13.503" endtime="20201110 08:35:13.507"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:13.522" level="INFO">${ACCURACY} = {'source_diff': [8.320799999999781e-05, 8.376400000000006e-05, 8.394499999999847e-05, 8.357000000000156e-05, 8.33330000000014e-05, 8.350000000000024e-05, 8.404199999999945e-05, 8.412500000000087e-05, ...</msg>
<status status="PASS" starttime="20201110 08:35:13.508" endtime="20201110 08:35:13.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:13.527" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201110 08:35:13.526" endtime="20201110 08:35:13.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:13.529" level="INFO">VALUE: [8.320799999999781e-05, 8.376400000000006e-05, 8.394499999999847e-05, 8.357000000000156e-05, 8.33330000000014e-05, 8.350000000000024e-05, 8.404199999999945e-05, 8.412500000000087e-05, 8.368000000000264e-05, 8.419399999999924e-05, 8.392999999999942e-05, 8.355500000000252e-05, 8.39720000000016e-05, 8.390299999999976e-05, 8.399999999999727e-05, 8.329200000000217e-05, 8.326399999999956e-05, 8.345799999999806e-05, 8.350000000000024e-05, 8.326399999999956e-05, 8.386100000000105e-05, 8.405499999999955e-05, 8.334800000000045e-05, 8.331899999999837e-05, 8.358300000000166e-05, 8.309700000000073e-05, 8.394399999999899e-05, 8.326399999999956e-05, 8.326399999999956e-05, 8.344399999999849e-05, 8.361099999999733e-05, 8.368100000000211e-05, 8.36659999999996e-05, 8.386099999999758e-05, 8.324999999999999e-05, 8.341699999999883e-05, 8.336100000000055e-05, 8.338800000000021e-05, 8.336200000000002e-05, 8.326399999999956e-05, 8.390299999999976e-05, 8.336100000000055e-05, 8.363899999999994e-05, 8.39720000000016e-05, 8.356899999999862e-05, 8.381899999999887e-05, 8.324999999999999e-05, 8.334700000000098e-05, 8.362500000000037e-05, 8.324999999999999e-05]</msg>
<status status="PASS" starttime="20201110 08:35:13.528" endtime="20201110 08:35:13.530"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.523" endtime="20201110 08:35:13.531"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:13.533" endtime="20201110 08:35:13.534"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:13.537" endtime="20201110 08:35:13.556"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.535" endtime="20201110 08:35:13.557"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.531" endtime="20201110 08:35:13.557"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.159" endtime="20201110 08:35:13.557"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.158" endtime="20201110 08:35:13.558"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:13.567" endtime="20201110 08:35:13.586"></status>
</kw>
<msg timestamp="20201110 08:35:13.587" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:13.565" endtime="20201110 08:35:13.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:13.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:13.588" endtime="20201110 08:35:13.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:13.590" endtime="20201110 08:35:13.593"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.562" endtime="20201110 08:35:13.594"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.560" endtime="20201110 08:35:13.594"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:13.601" endtime="20201110 08:35:13.888"></status>
</kw>
<msg timestamp="20201110 08:35:13.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020370097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020455153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:13.599" endtime="20201110 08:35:13.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:13.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020370097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020455153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:13.892" endtime="20201110 08:35:13.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:13.901" endtime="20201110 08:35:13.902"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.597" endtime="20201110 08:35:13.903"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.595" endtime="20201110 08:35:13.903"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:13.908" level="INFO">${RESULT} = [{'time': 0.020455153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.505600000000002e-05, 'source_diff': 8.505600000000002e-05}, {'time': 0.020542181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:13.904" endtime="20201110 08:35:13.908"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:13.922" level="INFO">${ACCURACY} = {'source_diff': [8.505600000000002e-05, 8.431999999999884e-05, 8.422300000000132e-05, 8.49859999999987e-05, 8.480599999999977e-05, 8.456899999999962e-05, 8.491600000000085e-05, 8.495799999999956e-05, ...</msg>
<status status="PASS" starttime="20201110 08:35:13.909" endtime="20201110 08:35:13.922"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:13.926" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201110 08:35:13.925" endtime="20201110 08:35:13.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:13.929" level="INFO">VALUE: [8.505600000000002e-05, 8.431999999999884e-05, 8.422300000000132e-05, 8.49859999999987e-05, 8.480599999999977e-05, 8.456899999999962e-05, 8.491600000000085e-05, 8.495799999999956e-05, 8.423599999999795e-05, 8.431899999999937e-05, 8.495799999999956e-05, 8.473599999999845e-05, 8.51249999999984e-05, 8.470899999999879e-05, 8.472200000000235e-05, 8.519499999999972e-05, 8.518100000000015e-05, 8.491700000000033e-05, 8.412500000000087e-05, 8.494499999999947e-05, 8.491700000000033e-05, 8.519400000000024e-05, 8.434700000000198e-05, 8.427800000000013e-05, 8.508299999999969e-05, 8.436100000000155e-05, 8.43469999999985e-05, 8.430599999999927e-05, 8.434700000000198e-05, 8.451400000000081e-05, 8.461099999999833e-05, 8.46110000000018e-05, 8.454199999999995e-05, 8.444500000000243e-05, 8.423599999999795e-05, 8.440200000000078e-05, 8.41110000000013e-05, 8.463900000000094e-05, 8.501400000000131e-05, 8.505500000000055e-05, 8.506900000000012e-05, 8.434700000000198e-05, 8.455599999999952e-05, 8.486199999999805e-05, 8.502800000000088e-05, 8.456999999999909e-05, 8.506999999999959e-05, 8.486099999999858e-05, 8.484800000000195e-05, 8.505600000000002e-05]</msg>
<status status="PASS" starttime="20201110 08:35:13.928" endtime="20201110 08:35:13.930"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.923" endtime="20201110 08:35:13.931"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:13.933" endtime="20201110 08:35:13.934"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:13.936" endtime="20201110 08:35:13.956"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.935" endtime="20201110 08:35:13.956"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.931" endtime="20201110 08:35:13.957"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.559" endtime="20201110 08:35:13.957"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.558" endtime="20201110 08:35:13.957"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:13.966" endtime="20201110 08:35:13.987"></status>
</kw>
<msg timestamp="20201110 08:35:13.987" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:13.965" endtime="20201110 08:35:13.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:13.990" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:13.988" endtime="20201110 08:35:13.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:13.991" endtime="20201110 08:35:13.993"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.962" endtime="20201110 08:35:13.994"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.960" endtime="20201110 08:35:13.994"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:14.001" endtime="20201110 08:35:14.294"></status>
</kw>
<msg timestamp="20201110 08:35:14.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020297569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020383639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:14.000" endtime="20201110 08:35:14.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:14.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020297569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020383639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:14.298" endtime="20201110 08:35:14.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:14.307" endtime="20201110 08:35:14.309"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.997" endtime="20201110 08:35:14.309"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.995" endtime="20201110 08:35:14.310"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:14.315" level="INFO">${RESULT} = [{'time': 0.020383639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.606999999999712e-05, 'source_diff': 8.606999999999712e-05}, {'time': 0.020472667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:14.310" endtime="20201110 08:35:14.315"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:14.329" level="INFO">${ACCURACY} = {'source_diff': [8.606999999999712e-05, 8.544499999999997e-05, 8.568099999999718e-05, 8.54310000000004e-05, 8.555600000000052e-05, 8.561099999999933e-05, 8.605600000000102e-05, 8.548600000000267e-05, ...</msg>
<status status="PASS" starttime="20201110 08:35:14.316" endtime="20201110 08:35:14.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:14.333" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201110 08:35:14.332" endtime="20201110 08:35:14.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:14.336" level="INFO">VALUE: [8.606999999999712e-05, 8.544499999999997e-05, 8.568099999999718e-05, 8.54310000000004e-05, 8.555600000000052e-05, 8.561099999999933e-05, 8.605600000000102e-05, 8.548600000000267e-05, 8.577700000000216e-05, 8.620800000000081e-05, 8.580499999999783e-05, 8.526400000000156e-05, 8.572200000000335e-05, 8.541700000000083e-05, 8.537499999999865e-05, 8.558399999999966e-05, 8.620900000000029e-05, 8.547199999999963e-05, 8.582000000000034e-05, 8.568099999999718e-05, 8.530600000000027e-05, 8.604100000000198e-05, 8.568000000000117e-05, 8.53189999999969e-05, 8.529100000000123e-05, 8.593000000000142e-05, 8.549999999999877e-05, 8.609700000000026e-05, 8.605600000000102e-05, 8.573599999999945e-05, 8.56669999999976e-05, 8.54310000000004e-05, 8.536100000000255e-05, 8.561099999999933e-05, 8.601299999999937e-05, 8.606899999999765e-05, 8.619400000000124e-05, 8.53050000000008e-05, 8.525000000000199e-05, 8.618000000000167e-05, 8.56799999999977e-05, 8.597200000000013e-05, 8.550000000000224e-05, 8.51110000000023e-05, 8.559799999999923e-05, 8.530499999999733e-05, 8.537499999999865e-05, 8.569400000000074e-05, 8.574999999999902e-05, 8.570800000000031e-05]</msg>
<status status="PASS" starttime="20201110 08:35:14.335" endtime="20201110 08:35:14.337"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.330" endtime="20201110 08:35:14.337"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:14.340" endtime="20201110 08:35:14.341"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:14.344" endtime="20201110 08:35:14.363"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.342" endtime="20201110 08:35:14.364"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.338" endtime="20201110 08:35:14.364"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.958" endtime="20201110 08:35:14.364"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.958" endtime="20201110 08:35:14.365"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:14.373" endtime="20201110 08:35:14.393"></status>
</kw>
<msg timestamp="20201110 08:35:14.394" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:14.372" endtime="20201110 08:35:14.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:14.396" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:14.395" endtime="20201110 08:35:14.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:14.397" endtime="20201110 08:35:14.400"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.369" endtime="20201110 08:35:14.401"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.367" endtime="20201110 08:35:14.401"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:14.408" endtime="20201110 08:35:14.697"></status>
</kw>
<msg timestamp="20201110 08:35:14.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020504486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020591569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:14.406" endtime="20201110 08:35:14.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:14.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020504486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020591569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:14.701" endtime="20201110 08:35:14.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:14.710" endtime="20201110 08:35:14.711"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.403" endtime="20201110 08:35:14.712"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.402" endtime="20201110 08:35:14.712"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:14.716" level="INFO">${RESULT} = [{'time': 0.020591569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.708300000000169e-05, 'source_diff': 8.708300000000169e-05}, {'time': 0.020682556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:14.713" endtime="20201110 08:35:14.717"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:14.730" level="INFO">${ACCURACY} = {'source_diff': [8.708300000000169e-05, 8.718100000000215e-05, 8.686200000000005e-05, 8.623699999999943e-05, 8.638899999999922e-05, 8.608300000000069e-05, 8.66660000000026e-05, 8.611099999999983e-05, ...</msg>
<status status="PASS" starttime="20201110 08:35:14.717" endtime="20201110 08:35:14.730"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:14.734" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201110 08:35:14.733" endtime="20201110 08:35:14.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:14.737" level="INFO">VALUE: [8.708300000000169e-05, 8.718100000000215e-05, 8.686200000000005e-05, 8.623699999999943e-05, 8.638899999999922e-05, 8.608300000000069e-05, 8.66660000000026e-05, 8.611099999999983e-05, 8.644400000000149e-05, 8.680600000000177e-05, 8.638899999999922e-05, 8.630600000000127e-05, 8.700000000000027e-05, 8.705600000000202e-05, 8.68059999999983e-05, 8.636100000000008e-05, 8.634799999999998e-05, 8.673699999999993e-05, 8.6944999999998e-05, 8.680499999999883e-05, 8.711100000000083e-05, 8.663899999999947e-05, 8.700000000000027e-05, 8.620800000000081e-05, 8.695900000000104e-05, 8.719399999999877e-05, 8.673600000000045e-05, 8.631999999999737e-05, 8.669499999999775e-05, 8.673600000000045e-05, 8.627699999999919e-05, 8.661100000000033e-05, 8.69310000000019e-05, 8.638899999999922e-05, 8.642999999999845e-05, 8.66799999999987e-05, 8.637499999999965e-05, 8.626399999999909e-05, 8.637499999999965e-05, 8.706999999999812e-05, 8.633400000000041e-05, 8.624999999999952e-05, 8.669500000000122e-05, 8.63059999999978e-05, 8.624999999999952e-05, 8.64310000000014e-05, 8.638800000000321e-05, 8.623699999999943e-05, 8.643099999999793e-05, 8.643000000000192e-05]</msg>
<status status="PASS" starttime="20201110 08:35:14.736" endtime="20201110 08:35:14.738"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.731" endtime="20201110 08:35:14.738"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:14.740" endtime="20201110 08:35:14.742"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:14.744" endtime="20201110 08:35:14.763"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.742" endtime="20201110 08:35:14.764"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.739" endtime="20201110 08:35:14.764"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.365" endtime="20201110 08:35:14.765"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.365" endtime="20201110 08:35:14.765"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:14.773" endtime="20201110 08:35:14.793"></status>
</kw>
<msg timestamp="20201110 08:35:14.794" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:14.772" endtime="20201110 08:35:14.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:14.796" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:14.795" endtime="20201110 08:35:14.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:14.797" endtime="20201110 08:35:14.800"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.769" endtime="20201110 08:35:14.800"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.767" endtime="20201110 08:35:14.801"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:14.807" endtime="20201110 08:35:15.093"></status>
</kw>
<msg timestamp="20201110 08:35:15.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019737264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01982475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:35:14.806" endtime="20201110 08:35:15.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:15.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019737264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01982475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:35:15.098" endtime="20201110 08:35:15.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:15.106" endtime="20201110 08:35:15.108"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.803" endtime="20201110 08:35:15.108"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.802" endtime="20201110 08:35:15.109"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:15.113" level="INFO">${RESULT} = [{'time': 0.01982475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.748599999999773e-05, 'source_diff': 8.748599999999773e-05}, {'time': 0.019918778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:35:15.109" endtime="20201110 08:35:15.113"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:15.127" level="INFO">${ACCURACY} = {'source_diff': [8.748599999999773e-05, 8.819500000000272e-05, 8.72920000000027e-05, 8.765300000000004e-05, 8.747199999999816e-05, 8.811100000000183e-05, 8.79999999999978e-05, 8.729199999999923e-05, 8...</msg>
<status status="PASS" starttime="20201110 08:35:15.114" endtime="20201110 08:35:15.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:15.132" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201110 08:35:15.131" endtime="20201110 08:35:15.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:15.134" level="INFO">VALUE: [8.748599999999773e-05, 8.819500000000272e-05, 8.72920000000027e-05, 8.765300000000004e-05, 8.747199999999816e-05, 8.811100000000183e-05, 8.79999999999978e-05, 8.729199999999923e-05, 8.79860000000017e-05, 8.772200000000188e-05, 8.81250000000014e-05, 8.78189999999994e-05, 8.823600000000195e-05, 8.736099999999761e-05, 8.761100000000133e-05, 8.818099999999968e-05, 8.726400000000009e-05, 8.81670000000001e-05, 8.766600000000013e-05, 8.786099999999811e-05, 8.81250000000014e-05, 8.71120000000003e-05, 8.793099999999943e-05, 8.726400000000009e-05, 8.706900000000212e-05, 8.725000000000052e-05, 8.780499999999983e-05, 8.722199999999791e-05, 8.74999999999973e-05, 8.772300000000136e-05, 8.783399999999844e-05, 8.776400000000059e-05, 8.747200000000163e-05, 8.768099999999918e-05, 8.822199999999891e-05, 8.791699999999986e-05, 8.790200000000081e-05, 8.709700000000126e-05, 8.776400000000059e-05, 8.792999999999995e-05, 8.800000000000127e-05, 8.811099999999836e-05, 8.819399999999977e-05, 8.738900000000022e-05, 8.756999999999862e-05, 8.804200000000345e-05, 8.815299999999707e-05, 8.800000000000127e-05, 8.815300000000054e-05, 8.787499999999768e-05]</msg>
<status status="PASS" starttime="20201110 08:35:15.133" endtime="20201110 08:35:15.135"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.128" endtime="20201110 08:35:15.136"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:15.138" endtime="20201110 08:35:15.139"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:15.141" endtime="20201110 08:35:15.161"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.140" endtime="20201110 08:35:15.161"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.136" endtime="20201110 08:35:15.162"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.766" endtime="20201110 08:35:15.162"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.765" endtime="20201110 08:35:15.162"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:15.171" endtime="20201110 08:35:15.191"></status>
</kw>
<msg timestamp="20201110 08:35:15.192" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:15.169" endtime="20201110 08:35:15.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:15.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:15.193" endtime="20201110 08:35:15.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:15.195" endtime="20201110 08:35:15.198"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.167" endtime="20201110 08:35:15.198"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.164" endtime="20201110 08:35:15.199"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:15.205" endtime="20201110 08:35:15.491"></status>
</kw>
<msg timestamp="20201110 08:35:15.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019722389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019810736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:15.204" endtime="20201110 08:35:15.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:15.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019722389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019810736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:15.495" endtime="20201110 08:35:15.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:15.504" endtime="20201110 08:35:15.505"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.201" endtime="20201110 08:35:15.506"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.199" endtime="20201110 08:35:15.506"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:15.510" level="INFO">${RESULT} = [{'time': 0.019810736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.834699999999904e-05, 'source_diff': 8.834699999999904e-05}, {'time': 0.019903764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:15.507" endtime="20201110 08:35:15.511"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:15.524" level="INFO">${ACCURACY} = {'source_diff': [8.834699999999904e-05, 8.83059999999998e-05, 8.905600000000055e-05, 8.887499999999868e-05, 8.851399999999787e-05, 8.873599999999898e-05, 8.850000000000177e-05, 8.881999999999987e-05, ...</msg>
<status status="PASS" starttime="20201110 08:35:15.511" endtime="20201110 08:35:15.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:15.528" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201110 08:35:15.527" endtime="20201110 08:35:15.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:15.531" level="INFO">VALUE: [8.834699999999904e-05, 8.83059999999998e-05, 8.905600000000055e-05, 8.887499999999868e-05, 8.851399999999787e-05, 8.873599999999898e-05, 8.850000000000177e-05, 8.881999999999987e-05, 8.81120000000013e-05, 8.872199999999941e-05, 8.872199999999941e-05, 8.869400000000027e-05, 8.919400000000077e-05, 8.905500000000108e-05, 8.905500000000108e-05, 8.83189999999999e-05, 8.854200000000048e-05, 8.81250000000014e-05, 8.825000000000152e-05, 8.861099999999886e-05, 8.901399999999837e-05, 8.843099999999993e-05, 8.8945e-05, 8.920800000000034e-05, 8.874999999999855e-05, 8.838899999999775e-05, 8.916600000000163e-05, 8.825000000000152e-05, 8.91800000000012e-05, 8.86250000000019e-05, 8.890299999999782e-05, 8.848599999999873e-05, 8.898599999999923e-05, 8.888899999999825e-05, 8.907000000000012e-05, 8.904200000000098e-05, 8.836099999999861e-05, 8.886099999999911e-05, 8.905499999999761e-05, 8.897199999999966e-05, 8.890199999999834e-05, 8.91250000000024e-05, 8.83189999999999e-05, 8.86670000000006e-05, 8.872199999999941e-05, 8.918100000000068e-05, 8.91250000000024e-05, 8.873600000000245e-05, 8.836100000000208e-05, 8.859699999999929e-05]</msg>
<status status="PASS" starttime="20201110 08:35:15.529" endtime="20201110 08:35:15.532"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.525" endtime="20201110 08:35:15.532"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:15.534" endtime="20201110 08:35:15.536"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:15.538" endtime="20201110 08:35:15.557"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.536" endtime="20201110 08:35:15.558"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.533" endtime="20201110 08:35:15.558"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.163" endtime="20201110 08:35:15.558"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.162" endtime="20201110 08:35:15.559"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:15.567" endtime="20201110 08:35:15.588"></status>
</kw>
<msg timestamp="20201110 08:35:15.588" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:15.566" endtime="20201110 08:35:15.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:15.591" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:15.589" endtime="20201110 08:35:15.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:15.592" endtime="20201110 08:35:15.594"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.563" endtime="20201110 08:35:15.595"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.561" endtime="20201110 08:35:15.595"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:15.602" endtime="20201110 08:35:15.887"></status>
</kw>
<msg timestamp="20201110 08:35:15.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019801278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019890819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:15.600" endtime="20201110 08:35:15.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:15.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019801278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019890819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:15.892" endtime="20201110 08:35:15.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:15.900" endtime="20201110 08:35:15.901"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.597" endtime="20201110 08:35:15.902"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.596" endtime="20201110 08:35:15.902"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:15.907" level="INFO">${RESULT} = [{'time': 0.019890819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.954100000000201e-05, 'source_diff': 8.954100000000201e-05}, {'time': 0.019985819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:15.903" endtime="20201110 08:35:15.907"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:15.920" level="INFO">${ACCURACY} = {'source_diff': [8.954100000000201e-05, 8.99999999999998e-05, 8.969400000000127e-05, 8.931899999999743e-05, 8.984700000000054e-05, 8.997200000000066e-05, 8.9638999999999e-05, 8.955499999999811e-05, 8....</msg>
<status status="PASS" starttime="20201110 08:35:15.908" endtime="20201110 08:35:15.920"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:15.926" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201110 08:35:15.924" endtime="20201110 08:35:15.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:15.929" level="INFO">VALUE: [8.954100000000201e-05, 8.99999999999998e-05, 8.969400000000127e-05, 8.931899999999743e-05, 8.984700000000054e-05, 8.997200000000066e-05, 8.9638999999999e-05, 8.955499999999811e-05, 8.992999999999848e-05, 9.001399999999937e-05, 8.934799999999951e-05, 8.987499999999968e-05, 9.005600000000155e-05, 8.936099999999961e-05, 9.01519999999996e-05, 8.98060000000013e-05, 9.004199999999851e-05, 8.956900000000115e-05, 9.005499999999861e-05, 8.933300000000047e-05, 8.961099999999986e-05, 8.938899999999875e-05, 8.974999999999955e-05, 8.970900000000032e-05, 9.01670000000021e-05, 8.937500000000265e-05, 8.987499999999968e-05, 9.001399999999937e-05, 8.957000000000062e-05, 8.961199999999933e-05, 8.917999999999773e-05, 9.005499999999861e-05, 8.976399999999912e-05, 8.974999999999955e-05, 8.984700000000054e-05, 8.911099999999936e-05, 8.952800000000191e-05, 8.926400000000209e-05, 8.930500000000133e-05, 8.936099999999961e-05, 8.93060000000008e-05, 8.970900000000032e-05, 8.979199999999826e-05, 8.955600000000105e-05, 8.933300000000047e-05, 8.94999999999993e-05, 8.926399999999862e-05, 8.991600000000238e-05, 8.911099999999936e-05, 8.927800000000166e-05]</msg>
<status status="PASS" starttime="20201110 08:35:15.927" endtime="20201110 08:35:15.930"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.921" endtime="20201110 08:35:15.930"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:15.933" endtime="20201110 08:35:15.934"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:15.936" endtime="20201110 08:35:15.955"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.934" endtime="20201110 08:35:15.956"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.931" endtime="20201110 08:35:15.956"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.559" endtime="20201110 08:35:15.957"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.559" endtime="20201110 08:35:15.957"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:15.965" endtime="20201110 08:35:15.985"></status>
</kw>
<msg timestamp="20201110 08:35:15.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:15.964" endtime="20201110 08:35:15.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:15.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:15.987" endtime="20201110 08:35:15.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:15.989" endtime="20201110 08:35:15.992"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.961" endtime="20201110 08:35:15.993"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.959" endtime="20201110 08:35:15.993"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:15.999" endtime="20201110 08:35:16.285"></status>
</kw>
<msg timestamp="20201110 08:35:16.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019829681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019919764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:15.998" endtime="20201110 08:35:16.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:16.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019829681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019919764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:16.289" endtime="20201110 08:35:16.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:16.297" endtime="20201110 08:35:16.299"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.995" endtime="20201110 08:35:16.299"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.994" endtime="20201110 08:35:16.300"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:16.304" level="INFO">${RESULT} = [{'time': 0.019919764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.008300000000122e-05, 'source_diff': 9.008300000000122e-05}, {'time': 0.02001575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:35:16.300" endtime="20201110 08:35:16.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:16.317" level="INFO">${ACCURACY} = {'source_diff': [9.008300000000122e-05, 9.034699999999757e-05, 9.027799999999919e-05, 9.069500000000175e-05, 9.090299999999982e-05, 9.077799999999969e-05, 9.0945000000002e-05, 9.045799999999812e-05, 9...</msg>
<status status="PASS" starttime="20201110 08:35:16.305" endtime="20201110 08:35:16.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:16.322" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201110 08:35:16.321" endtime="20201110 08:35:16.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:16.324" level="INFO">VALUE: [9.008300000000122e-05, 9.034699999999757e-05, 9.027799999999919e-05, 9.069500000000175e-05, 9.090299999999982e-05, 9.077799999999969e-05, 9.0945000000002e-05, 9.045799999999812e-05, 9.042999999999898e-05, 9.052699999999997e-05, 9.095799999999862e-05, 9.045799999999812e-05, 9.065299999999957e-05, 9.077799999999969e-05, 9.047199999999769e-05, 9.05000000000003e-05, 9.069500000000175e-05, 9.115300000000007e-05, 9.025000000000005e-05, 9.106999999999865e-05, 9.041700000000236e-05, 9.044400000000202e-05, 9.034699999999757e-05, 9.106899999999918e-05, 9.051399999999987e-05, 9.027800000000266e-05, 9.051399999999987e-05, 9.093099999999896e-05, 9.112500000000093e-05, 9.062500000000043e-05, 9.079199999999926e-05, 9.048600000000073e-05, 9.055599999999858e-05, 9.043100000000193e-05, 9.086200000000058e-05, 9.015299999999907e-05, 9.097200000000166e-05, 9.117999999999973e-05, 9.036100000000061e-05, 9.05000000000003e-05, 9.0332999999998e-05, 9.087499999999721e-05, 9.105600000000255e-05, 9.086100000000111e-05, 9.086099999999764e-05, 9.037500000000018e-05, 9.025000000000005e-05, 9.05000000000003e-05, 9.095799999999862e-05, 9.106899999999918e-05]</msg>
<status status="PASS" starttime="20201110 08:35:16.323" endtime="20201110 08:35:16.325"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.318" endtime="20201110 08:35:16.326"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:16.328" endtime="20201110 08:35:16.329"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:16.331" endtime="20201110 08:35:16.351"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.330" endtime="20201110 08:35:16.351"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.326" endtime="20201110 08:35:16.352"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.958" endtime="20201110 08:35:16.352"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.957" endtime="20201110 08:35:16.352"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:16.361" endtime="20201110 08:35:16.381"></status>
</kw>
<msg timestamp="20201110 08:35:16.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:16.359" endtime="20201110 08:35:16.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:16.384" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:16.382" endtime="20201110 08:35:16.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:16.385" endtime="20201110 08:35:16.387"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.357" endtime="20201110 08:35:16.388"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.355" endtime="20201110 08:35:16.388"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:16.395" endtime="20201110 08:35:16.680"></status>
</kw>
<msg timestamp="20201110 08:35:16.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019829111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019920819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:16.393" endtime="20201110 08:35:16.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:16.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019829111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019920819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:16.684" endtime="20201110 08:35:16.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:16.692" endtime="20201110 08:35:16.694"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.390" endtime="20201110 08:35:16.694"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.389" endtime="20201110 08:35:16.695"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:16.699" level="INFO">${RESULT} = [{'time': 0.019920819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.170799999999937e-05, 'source_diff': 9.170799999999937e-05}, {'time': 0.020018819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:16.696" endtime="20201110 08:35:16.699"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:16.713" level="INFO">${ACCURACY} = {'source_diff': [9.170799999999937e-05, 9.198599999999876e-05, 9.162500000000143e-05, 9.142999999999998e-05, 9.174999999999808e-05, 9.202800000000094e-05, 9.19589999999991e-05, 9.145799999999912e-05, ...</msg>
<status status="PASS" starttime="20201110 08:35:16.700" endtime="20201110 08:35:16.714"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:16.718" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201110 08:35:16.717" endtime="20201110 08:35:16.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:16.720" level="INFO">VALUE: [9.170799999999937e-05, 9.198599999999876e-05, 9.162500000000143e-05, 9.142999999999998e-05, 9.174999999999808e-05, 9.202800000000094e-05, 9.19589999999991e-05, 9.145799999999912e-05, 9.212499999999846e-05, 9.162499999999796e-05, 9.129200000000323e-05, 9.186099999999864e-05, 9.206999999999965e-05, 9.154200000000001e-05, 9.131899999999943e-05, 9.177699999999775e-05, 9.141600000000041e-05, 9.168000000000023e-05, 9.204100000000104e-05, 9.211100000000236e-05, 9.181899999999993e-05, 9.136100000000161e-05, 9.186100000000211e-05, 9.212500000000193e-05, 9.219499999999978e-05, 9.180599999999983e-05, 9.174999999999808e-05, 9.129199999999976e-05, 9.148600000000173e-05, 9.201400000000137e-05, 9.193000000000048e-05, 9.208299999999975e-05, 9.216600000000116e-05, 9.218000000000073e-05, 9.181899999999993e-05, 9.16939999999998e-05, 9.127800000000019e-05, 9.184699999999907e-05, 9.156899999999968e-05, 9.201400000000137e-05, 9.137500000000118e-05, 9.162500000000143e-05, 9.145800000000259e-05, 9.130499999999986e-05, 9.133300000000247e-05, 9.144399999999955e-05, 9.187500000000168e-05, 9.156899999999968e-05, 9.158299999999925e-05, 9.209699999999932e-05]</msg>
<status status="PASS" starttime="20201110 08:35:16.719" endtime="20201110 08:35:16.721"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.714" endtime="20201110 08:35:16.722"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:16.724" endtime="20201110 08:35:16.725"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:16.727" endtime="20201110 08:35:16.747"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.726" endtime="20201110 08:35:16.747"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.722" endtime="20201110 08:35:16.748"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.353" endtime="20201110 08:35:16.748"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.353" endtime="20201110 08:35:16.748"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:16.757" endtime="20201110 08:35:16.777"></status>
</kw>
<msg timestamp="20201110 08:35:16.778" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:16.755" endtime="20201110 08:35:16.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:16.780" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:16.779" endtime="20201110 08:35:16.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:16.781" endtime="20201110 08:35:16.784"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.753" endtime="20201110 08:35:16.784"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.750" endtime="20201110 08:35:16.785"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:16.791" endtime="20201110 08:35:17.078"></status>
</kw>
<msg timestamp="20201110 08:35:17.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019768069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019861111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:16.789" endtime="20201110 08:35:17.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:17.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019768069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019861111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:17.082" endtime="20201110 08:35:17.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:17.090" endtime="20201110 08:35:17.092"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.787" endtime="20201110 08:35:17.093"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.785" endtime="20201110 08:35:17.093"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:17.097" level="INFO">${RESULT} = [{'time': 0.019861111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.304200000000151e-05, 'source_diff': 9.304200000000151e-05}, {'time': 0.019957097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:17.094" endtime="20201110 08:35:17.097"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:17.111" level="INFO">${ACCURACY} = {'source_diff': [9.304200000000151e-05, 9.241600000000141e-05, 9.231900000000043e-05, 9.295799999999715e-05, 9.279199999999779e-05, 9.299999999999933e-05, 9.229200000000076e-05, 9.298599999999976e-05,...</msg>
<status status="PASS" starttime="20201110 08:35:17.098" endtime="20201110 08:35:17.111"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:17.115" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201110 08:35:17.114" endtime="20201110 08:35:17.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:17.118" level="INFO">VALUE: [9.304200000000151e-05, 9.241600000000141e-05, 9.231900000000043e-05, 9.295799999999715e-05, 9.279199999999779e-05, 9.299999999999933e-05, 9.229200000000076e-05, 9.298599999999976e-05, 9.231900000000043e-05, 9.280499999999789e-05, 9.268000000000123e-05, 9.30139999999989e-05, 9.244400000000055e-05, 9.299999999999933e-05, 9.276399999999865e-05, 9.24719999999997e-05, 9.262499999999896e-05, 9.319500000000078e-05, 9.209699999999932e-05, 9.305600000000108e-05, 9.273600000000298e-05, 9.261100000000286e-05, 9.27079999999969e-05, 9.237500000000218e-05, 9.318000000000173e-05, 9.277699999999875e-05, 9.26940000000008e-05, 9.287499999999921e-05, 9.258300000000025e-05, 9.292999999999801e-05, 9.222199999999944e-05, 9.241700000000089e-05, 9.230600000000033e-05, 9.249999999999883e-05, 9.213899999999803e-05, 9.261199999999886e-05, 9.272299999999942e-05, 9.28330000000005e-05, 9.306899999999771e-05, 9.29720000000002e-05, 9.256899999999721e-05, 9.261099999999939e-05, 9.262499999999896e-05, 9.31940000000013e-05, 9.279200000000126e-05, 9.272199999999994e-05, 9.223599999999901e-05, 9.24589999999996e-05, 9.240300000000132e-05, 9.305600000000108e-05]</msg>
<status status="PASS" starttime="20201110 08:35:17.116" endtime="20201110 08:35:17.118"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.112" endtime="20201110 08:35:17.119"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:17.121" endtime="20201110 08:35:17.123"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:17.125" endtime="20201110 08:35:17.144"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.123" endtime="20201110 08:35:17.145"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.120" endtime="20201110 08:35:17.145"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.749" endtime="20201110 08:35:17.145"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.748" endtime="20201110 08:35:17.146"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:17.154" endtime="20201110 08:35:17.174"></status>
</kw>
<msg timestamp="20201110 08:35:17.174" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:17.152" endtime="20201110 08:35:17.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:17.177" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:17.175" endtime="20201110 08:35:17.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:17.178" endtime="20201110 08:35:17.180"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.150" endtime="20201110 08:35:17.181"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.148" endtime="20201110 08:35:17.181"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:17.188" endtime="20201110 08:35:17.473"></status>
</kw>
<msg timestamp="20201110 08:35:17.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019770944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019864153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:17.186" endtime="20201110 08:35:17.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:17.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019770944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019864153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:17.477" endtime="20201110 08:35:17.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:17.485" endtime="20201110 08:35:17.487"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.184" endtime="20201110 08:35:17.488"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.182" endtime="20201110 08:35:17.488"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:17.492" level="INFO">${RESULT} = [{'time': 0.019864153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.320900000000035e-05, 'source_diff': 9.320900000000035e-05}, {'time': 0.019964181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:17.489" endtime="20201110 08:35:17.492"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:17.506" level="INFO">${ACCURACY} = {'source_diff': [9.320900000000035e-05, 9.39590000000011e-05, 9.356899999999821e-05, 9.329200000000176e-05, 9.363899999999953e-05, 9.39720000000012e-05, 9.340300000000232e-05, 9.334700000000057e-05, 9...</msg>
<status status="PASS" starttime="20201110 08:35:17.493" endtime="20201110 08:35:17.506"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:17.510" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201110 08:35:17.509" endtime="20201110 08:35:17.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:17.513" level="INFO">VALUE: [9.320900000000035e-05, 9.39590000000011e-05, 9.356899999999821e-05, 9.329200000000176e-05, 9.363899999999953e-05, 9.39720000000012e-05, 9.340300000000232e-05, 9.334700000000057e-05, 9.41659999999997e-05, 9.36529999999991e-05, 9.329200000000176e-05, 9.384799999999707e-05, 9.381999999999793e-05, 9.349999999999983e-05, 9.361100000000039e-05, 9.349999999999983e-05, 9.359800000000029e-05, 9.380600000000183e-05, 9.376399999999965e-05, 9.343000000000198e-05, 9.312499999999946e-05, 9.375000000000008e-05, 9.36659999999992e-05, 9.366700000000214e-05, 9.383299999999803e-05, 9.355599999999811e-05, 9.348600000000026e-05, 9.419499999999831e-05, 9.361100000000039e-05, 9.336100000000014e-05, 9.344400000000155e-05, 9.344500000000103e-05, 9.402799999999947e-05, 9.359700000000082e-05, 9.400000000000033e-05, 9.387500000000021e-05, 9.331899999999796e-05, 9.324999999999958e-05, 9.361100000000039e-05, 9.409700000000132e-05, 9.347199999999722e-05, 9.311099999999989e-05, 9.344500000000103e-05, 9.330500000000186e-05, 9.397300000000067e-05, 9.405600000000208e-05, 9.326399999999915e-05, 9.355499999999864e-05, 9.327699999999925e-05, 9.362499999999996e-05]</msg>
<status status="PASS" starttime="20201110 08:35:17.511" endtime="20201110 08:35:18.655"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.507" endtime="20201110 08:35:18.656"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:18.661" endtime="20201110 08:35:18.664"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:18.668" endtime="20201110 08:35:18.690"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:18.665" endtime="20201110 08:35:18.691"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:18.658" endtime="20201110 08:35:18.692"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.146" endtime="20201110 08:35:18.693"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.146" endtime="20201110 08:35:18.693"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:18.710" endtime="20201110 08:35:18.737"></status>
</kw>
<msg timestamp="20201110 08:35:18.738" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:18.707" endtime="20201110 08:35:18.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:18.743" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:18.740" endtime="20201110 08:35:18.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:18.745" endtime="20201110 08:35:18.750"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:18.702" endtime="20201110 08:35:18.751"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:18.698" endtime="20201110 08:35:18.752"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:18.765" endtime="20201110 08:35:19.053"></status>
</kw>
<msg timestamp="20201110 08:35:19.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033376444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0334715, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:35:18.762" endtime="20201110 08:35:19.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033376444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0334715, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:35:19.057" endtime="20201110 08:35:19.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:19.065" endtime="20201110 08:35:19.067"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:18.757" endtime="20201110 08:35:19.067"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:18.753" endtime="20201110 08:35:19.068"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:19.072" level="INFO">${RESULT} = [{'time': 0.0334715, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.505600000000308e-05, 'source_diff': 9.505600000000308e-05}, {'time': 0.033570569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:35:19.068" endtime="20201110 08:35:19.072"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:19.086" level="INFO">${ACCURACY} = {'source_diff': [9.505600000000308e-05, 9.494399999999958e-05, 9.463900000000053e-05, 9.477799999999675e-05, 9.487500000000121e-05, 9.462500000000096e-05, 9.423599999999754e-05, 9.50000000000048e-05, ...</msg>
<status status="PASS" starttime="20201110 08:35:19.073" endtime="20201110 08:35:19.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.090" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201110 08:35:19.089" endtime="20201110 08:35:19.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.092" level="INFO">VALUE: [9.505600000000308e-05, 9.494399999999958e-05, 9.463900000000053e-05, 9.477799999999675e-05, 9.487500000000121e-05, 9.462500000000096e-05, 9.423599999999754e-05, 9.50000000000048e-05, 9.506899999999624e-05, 9.449999999999736e-05, 9.498600000000523e-05, 9.513900000000103e-05, 9.48609999999947e-05, 9.51530000000006e-05, 9.487500000000121e-05, 9.466699999999967e-05, 9.429199999999582e-05, 9.491699999999992e-05, 9.499999999999786e-05, 9.516700000000017e-05, 9.461100000000139e-05, 9.459800000000129e-05, 9.438900000000028e-05, 9.513900000000103e-05, 9.467999999999976e-05, 9.486100000000164e-05, 9.469399999999933e-05, 9.452800000000344e-05, 9.462499999999402e-05, 9.424999999999711e-05, 9.449999999999736e-05, 9.466699999999967e-05, 9.455600000000258e-05, 9.487500000000121e-05, 9.513900000000103e-05, 9.520800000000634e-05, 9.477699999999728e-05, 9.487500000000121e-05, 9.447199999999822e-05, 9.449999999999736e-05, 9.466699999999967e-05, 9.480500000000336e-05, 9.518099999999974e-05, 9.4945000000006e-05, 9.475000000000455e-05, 9.487500000000121e-05, 9.519500000000625e-05, 9.436100000000114e-05, 9.512500000000146e-05, 9.430499999999592e-05]</msg>
<status status="PASS" starttime="20201110 08:35:19.091" endtime="20201110 08:35:19.093"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.086" endtime="20201110 08:35:19.094"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:19.096" endtime="20201110 08:35:19.097"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:19.099" endtime="20201110 08:35:19.119"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.098" endtime="20201110 08:35:19.119"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.094" endtime="20201110 08:35:19.120"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:18.695" endtime="20201110 08:35:19.120"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:18.694" endtime="20201110 08:35:19.120"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:19.129" endtime="20201110 08:35:19.149"></status>
</kw>
<msg timestamp="20201110 08:35:19.150" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:19.127" endtime="20201110 08:35:19.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.152" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:19.151" endtime="20201110 08:35:19.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:19.153" endtime="20201110 08:35:19.156"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.125" endtime="20201110 08:35:19.156"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.123" endtime="20201110 08:35:19.157"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:19.163" endtime="20201110 08:35:19.449"></status>
</kw>
<msg timestamp="20201110 08:35:19.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019712528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019807944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:19.162" endtime="20201110 08:35:19.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019712528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019807944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:19.453" endtime="20201110 08:35:19.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:19.462" endtime="20201110 08:35:19.463"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.159" endtime="20201110 08:35:19.464"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.157" endtime="20201110 08:35:19.464"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:19.468" level="INFO">${RESULT} = [{'time': 0.019807944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.541600000000094e-05, 'source_diff': 9.541600000000094e-05}, {'time': 0.019907958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:19.465" endtime="20201110 08:35:19.469"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:19.483" level="INFO">${ACCURACY} = {'source_diff': [9.541600000000094e-05, 9.591600000000144e-05, 9.588899999999831e-05, 9.612499999999899e-05, 9.592999999999755e-05, 9.612499999999899e-05, 9.587500000000221e-05, 9.601399999999843e-05,...</msg>
<status status="PASS" starttime="20201110 08:35:19.469" endtime="20201110 08:35:19.483"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.488" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201110 08:35:19.487" endtime="20201110 08:35:19.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.490" level="INFO">VALUE: [9.541600000000094e-05, 9.591600000000144e-05, 9.588899999999831e-05, 9.612499999999899e-05, 9.592999999999755e-05, 9.612499999999899e-05, 9.587500000000221e-05, 9.601399999999843e-05, 9.607000000000018e-05, 9.606900000000071e-05, 9.593099999999702e-05, 9.555500000000064e-05, 9.604100000000157e-05, 9.577800000000122e-05, 9.609699999999985e-05, 9.58469999999996e-05, 9.581900000000046e-05, 9.523600000000201e-05, 9.565299999999763e-05, 9.556999999999968e-05, 9.595899999999963e-05, 9.545799999999965e-05, 9.607000000000018e-05, 9.523700000000149e-05, 9.52079999999994e-05, 9.619400000000083e-05, 9.537499999999824e-05, 9.619399999999736e-05, 9.59859999999993e-05, 9.574999999999861e-05, 9.56799999999973e-05, 9.526400000000115e-05, 9.536099999999867e-05, 9.561099999999892e-05, 9.543099999999999e-05, 9.544500000000303e-05, 9.599999999999886e-05, 9.569400000000033e-05, 9.548699999999827e-05, 9.595800000000015e-05, 9.60140000000019e-05, 9.591600000000144e-05, 9.563900000000153e-05, 9.583300000000003e-05, 9.565299999999763e-05, 9.53200000000029e-05, 9.559700000000282e-05, 9.544400000000008e-05, 9.620899999999988e-05, 9.543099999999999e-05]</msg>
<status status="PASS" starttime="20201110 08:35:19.489" endtime="20201110 08:35:19.491"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.484" endtime="20201110 08:35:19.491"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:19.494" endtime="20201110 08:35:19.495"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:19.497" endtime="20201110 08:35:19.516"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.496" endtime="20201110 08:35:19.517"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.492" endtime="20201110 08:35:19.517"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.121" endtime="20201110 08:35:19.518"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.120" endtime="20201110 08:35:19.518"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:19.526" endtime="20201110 08:35:19.547"></status>
</kw>
<msg timestamp="20201110 08:35:19.548" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:19.525" endtime="20201110 08:35:19.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.550" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:19.549" endtime="20201110 08:35:19.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:19.551" endtime="20201110 08:35:19.554"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.522" endtime="20201110 08:35:19.554"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.520" endtime="20201110 08:35:19.555"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:19.561" endtime="20201110 08:35:19.847"></status>
</kw>
<msg timestamp="20201110 08:35:19.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019787806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019884833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:19.559" endtime="20201110 08:35:19.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019787806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019884833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:19.851" endtime="20201110 08:35:19.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:19.859" endtime="20201110 08:35:19.861"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.557" endtime="20201110 08:35:19.862"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.555" endtime="20201110 08:35:19.862"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:19.866" level="INFO">${RESULT} = [{'time': 0.019884833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.702699999999953e-05, 'source_diff': 9.702699999999953e-05}, {'time': 0.019983847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:19.863" endtime="20201110 08:35:19.866"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:19.880" level="INFO">${ACCURACY} = {'source_diff': [9.702699999999953e-05, 9.637499999999924e-05, 9.676399999999918e-05, 9.662499999999949e-05, 9.611099999999942e-05, 9.674999999999961e-05, 9.715299999999913e-05, 9.611099999999942e-05,...</msg>
<status status="PASS" starttime="20201110 08:35:19.867" endtime="20201110 08:35:19.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.884" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201110 08:35:19.883" endtime="20201110 08:35:19.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.887" level="INFO">VALUE: [9.702699999999953e-05, 9.637499999999924e-05, 9.676399999999918e-05, 9.662499999999949e-05, 9.611099999999942e-05, 9.674999999999961e-05, 9.715299999999913e-05, 9.611099999999942e-05, 9.705600000000161e-05, 9.68059999999979e-05, 9.705600000000161e-05, 9.691699999999845e-05, 9.643100000000099e-05, 9.712499999999999e-05, 9.712499999999999e-05, 9.630500000000139e-05, 9.656900000000121e-05, 9.672200000000047e-05, 9.699999999999986e-05, 9.701399999999943e-05, 9.623599999999954e-05, 9.629099999999835e-05, 9.625000000000258e-05, 9.681999999999746e-05, 9.665199999999916e-05, 9.712499999999999e-05, 9.65279999999985e-05, 9.672200000000047e-05, 9.694399999999812e-05, 9.643000000000151e-05, 9.701399999999943e-05, 9.669400000000133e-05, 9.630600000000086e-05, 9.687500000000321e-05, 9.686100000000017e-05, 9.691700000000192e-05, 9.705600000000161e-05, 9.624999999999911e-05, 9.636199999999914e-05, 9.687499999999974e-05, 9.668000000000176e-05, 9.669399999999786e-05, 9.713900000000303e-05, 9.692999999999855e-05, 9.679099999999885e-05, 9.694399999999812e-05, 9.626399999999868e-05, 9.643099999999752e-05, 9.690200000000287e-05, 9.672200000000047e-05]</msg>
<status status="PASS" starttime="20201110 08:35:19.885" endtime="20201110 08:35:19.887"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.881" endtime="20201110 08:35:19.888"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:19.890" endtime="20201110 08:35:19.891"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:19.894" endtime="20201110 08:35:19.913"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.892" endtime="20201110 08:35:19.913"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.889" endtime="20201110 08:35:19.914"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.519" endtime="20201110 08:35:19.914"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.518" endtime="20201110 08:35:19.914"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:19.923" endtime="20201110 08:35:19.944"></status>
</kw>
<msg timestamp="20201110 08:35:19.944" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:19.921" endtime="20201110 08:35:19.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.946" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:19.945" endtime="20201110 08:35:19.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:19.947" endtime="20201110 08:35:19.950"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.919" endtime="20201110 08:35:19.951"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.917" endtime="20201110 08:35:19.951"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:19.957" endtime="20201110 08:35:20.242"></status>
</kw>
<msg timestamp="20201110 08:35:20.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019724556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019821847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:19.956" endtime="20201110 08:35:20.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:20.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019724556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019821847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:20.247" endtime="20201110 08:35:20.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:20.255" endtime="20201110 08:35:20.257"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.953" endtime="20201110 08:35:20.257"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.952" endtime="20201110 08:35:20.258"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:20.262" level="INFO">${RESULT} = [{'time': 0.019821847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.729099999999935e-05, 'source_diff': 9.729099999999935e-05}, {'time': 0.019922861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:20.258" endtime="20201110 08:35:20.262"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:20.276" level="INFO">${ACCURACY} = {'source_diff': [9.729099999999935e-05, 9.792999999999955e-05, 9.762500000000049e-05, 9.813900000000056e-05, 9.776400000000018e-05, 9.780600000000236e-05, 9.773599999999757e-05, 9.726299999999674e-05,...</msg>
<status status="PASS" starttime="20201110 08:35:20.263" endtime="20201110 08:35:20.276"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:20.280" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201110 08:35:20.279" endtime="20201110 08:35:20.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:20.283" level="INFO">VALUE: [9.729099999999935e-05, 9.792999999999955e-05, 9.762500000000049e-05, 9.813900000000056e-05, 9.776400000000018e-05, 9.780600000000236e-05, 9.773599999999757e-05, 9.726299999999674e-05, 9.745900000000113e-05, 9.741699999999895e-05, 9.731900000000196e-05, 9.773600000000104e-05, 9.709700000000085e-05, 9.726399999999968e-05, 9.816600000000023e-05, 9.805499999999967e-05, 9.801400000000043e-05, 9.797200000000172e-05, 9.781999999999846e-05, 9.759700000000135e-05, 9.807000000000218e-05, 9.804200000000304e-05, 9.819499999999884e-05, 9.800000000000086e-05, 9.737500000000024e-05, 9.727799999999925e-05, 9.773600000000104e-05, 9.748599999999732e-05, 9.761100000000092e-05, 9.748599999999732e-05, 9.736100000000067e-05, 9.748599999999732e-05, 9.78470000000016e-05, 9.75279999999995e-05, 9.820799999999894e-05, 9.75279999999995e-05, 9.725000000000011e-05, 9.804199999999957e-05, 9.76530000000031e-05, 9.736100000000067e-05, 9.80410000000001e-05, 9.797200000000172e-05, 9.744399999999862e-05, 9.768000000000276e-05, 9.801400000000043e-05, 9.743099999999852e-05, 9.779099999999985e-05, 9.784699999999813e-05, 9.776400000000018e-05, 9.729199999999882e-05]</msg>
<status status="PASS" starttime="20201110 08:35:20.281" endtime="20201110 08:35:20.283"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:20.277" endtime="20201110 08:35:20.284"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:20.286" endtime="20201110 08:35:20.287"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:20.290" endtime="20201110 08:35:20.309"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:20.288" endtime="20201110 08:35:20.309"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:20.285" endtime="20201110 08:35:20.310"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.915" endtime="20201110 08:35:20.310"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.915" endtime="20201110 08:35:20.310"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:20.319" endtime="20201110 08:35:20.339"></status>
</kw>
<msg timestamp="20201110 08:35:20.339" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:20.317" endtime="20201110 08:35:20.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:20.342" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:20.340" endtime="20201110 08:35:20.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:20.343" endtime="20201110 08:35:20.346"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:20.315" endtime="20201110 08:35:20.347"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:20.313" endtime="20201110 08:35:20.347"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:20.354" endtime="20201110 08:35:20.639"></status>
</kw>
<msg timestamp="20201110 08:35:20.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019650486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019748681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:20.352" endtime="20201110 08:35:20.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:20.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019650486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019748681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:20.644" endtime="20201110 08:35:20.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:20.652" endtime="20201110 08:35:20.653"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:20.350" endtime="20201110 08:35:20.654"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:20.348" endtime="20201110 08:35:20.654"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:20.658" level="INFO">${RESULT} = [{'time': 0.019748681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.819499999999884e-05, 'source_diff': 9.819499999999884e-05}, {'time': 0.019851681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:20.655" endtime="20201110 08:35:20.659"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:20.672" level="INFO">${ACCURACY} = {'source_diff': [9.819499999999884e-05, 9.88059999999999e-05, 9.895799999999969e-05, 9.870799999999944e-05, 9.900000000000186e-05, 9.820799999999894e-05, 9.897199999999926e-05, 9.848599999999832e-05, ...</msg>
<status status="PASS" starttime="20201110 08:35:20.659" endtime="20201110 08:35:20.672"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:20.677" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201110 08:35:20.676" endtime="20201110 08:35:20.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:20.679" level="INFO">VALUE: [9.819499999999884e-05, 9.88059999999999e-05, 9.895799999999969e-05, 9.870799999999944e-05, 9.900000000000186e-05, 9.820799999999894e-05, 9.897199999999926e-05, 9.848599999999832e-05, 9.865300000000063e-05, 9.865200000000116e-05, 9.891700000000045e-05, 9.877800000000075e-05, 9.858399999999878e-05, 9.862499999999802e-05, 9.854200000000007e-05, 9.875000000000161e-05, 9.919400000000037e-05, 9.888900000000131e-05, 9.906900000000024e-05, 9.898599999999882e-05, 9.855599999999964e-05, 9.841699999999995e-05, 9.838900000000081e-05, 9.893100000000002e-05, 9.893100000000002e-05, 9.919500000000331e-05, 9.883399999999903e-05, 9.89159999999975e-05, 9.89020000000014e-05, 9.886100000000217e-05, 9.830499999999992e-05, 9.919400000000037e-05, 9.877800000000075e-05, 9.873600000000204e-05, 9.825000000000111e-05, 9.893100000000002e-05, 9.854200000000007e-05, 9.920899999999941e-05, 9.89999999999984e-05, 9.850000000000136e-05, 9.844399999999962e-05, 9.84860000000018e-05, 9.89999999999984e-05, 9.869399999999987e-05, 9.83609999999982e-05, 9.823599999999807e-05, 9.919499999999984e-05, 9.918100000000027e-05, 9.887499999999827e-05, 9.83059999999994e-05]</msg>
<status status="PASS" starttime="20201110 08:35:20.678" endtime="20201110 08:35:20.680"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:20.673" endtime="20201110 08:35:20.680"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:20.683" endtime="20201110 08:35:20.684"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:20.686" endtime="20201110 08:35:20.705"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:20.684" endtime="20201110 08:35:20.706"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:20.681" endtime="20201110 08:35:20.706"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:20.311" endtime="20201110 08:35:20.707"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:20.311" endtime="20201110 08:35:20.707"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:20.715" endtime="20201110 08:35:20.735"></status>
</kw>
<msg timestamp="20201110 08:35:20.736" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:20.714" endtime="20201110 08:35:20.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:20.738" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:20.737" endtime="20201110 08:35:20.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:20.739" endtime="20201110 08:35:20.742"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:20.711" endtime="20201110 08:35:20.742"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:20.709" endtime="20201110 08:35:20.743"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:20.749" endtime="20201110 08:35:21.035"></status>
</kw>
<msg timestamp="20201110 08:35:21.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01972825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019828222, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:35:20.748" endtime="20201110 08:35:21.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:21.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01972825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019828222, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:35:21.039" endtime="20201110 08:35:21.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:21.047" endtime="20201110 08:35:21.049"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:20.745" endtime="20201110 08:35:21.049"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:20.743" endtime="20201110 08:35:21.050"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:21.054" level="INFO">${RESULT} = [{'time': 0.019828222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.997200000000026e-05, 'source_diff': 9.997200000000026e-05}, {'time': 0.019930222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:21.051" endtime="20201110 08:35:21.054"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:21.069" level="INFO">${ACCURACY} = {'source_diff': [9.997200000000026e-05, 9.911100000000242e-05, 0.00010011099999999995, 0.00010012499999999952, 9.931899999999702e-05, 9.940300000000138e-05, 0.00010004099999999863, 9.931999999999996e-...</msg>
<status status="PASS" starttime="20201110 08:35:21.055" endtime="20201110 08:35:21.069"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:21.073" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201110 08:35:21.072" endtime="20201110 08:35:21.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:21.076" level="INFO">VALUE: [9.997200000000026e-05, 9.911100000000242e-05, 0.00010011099999999995, 0.00010012499999999952, 9.931899999999702e-05, 9.940300000000138e-05, 0.00010004099999999863, 9.931999999999996e-05, 0.0001000419999999981, 9.94730000000027e-05, 0.00010018100000000127, 9.966599999999826e-05, 9.981899999999752e-05, 9.967999999999783e-05, 9.952699999999856e-05, 9.976400000000218e-05, 9.93609999999992e-05, 9.973599999999957e-05, 9.987499999999927e-05, 9.982000000000046e-05, 9.962499999999902e-05, 9.974999999999914e-05, 9.957000000000021e-05, 9.957000000000021e-05, 9.955600000000064e-05, 0.00010001400000000243, 9.92219999999995e-05, 9.926400000000168e-05, 9.981900000000099e-05, 9.930499999999745e-05, 9.983300000000056e-05, 9.993100000000102e-05, 9.98609999999997e-05, 9.93609999999992e-05, 9.950000000000236e-05, 9.931900000000049e-05, 9.963900000000206e-05, 9.940299999999791e-05, 9.98060000000009e-05, 9.973599999999957e-05, 9.991600000000198e-05, 9.942999999999758e-05, 9.969400000000087e-05, 9.994400000000112e-05, 0.00010005600000000114, 9.994500000000059e-05, 9.968100000000077e-05, 9.991699999999798e-05, 9.930500000000092e-05, 9.96809999999973e-05]</msg>
<status status="PASS" starttime="20201110 08:35:21.074" endtime="20201110 08:35:21.076"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.069" endtime="20201110 08:35:21.077"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:21.079" endtime="20201110 08:35:21.080"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:21.083" endtime="20201110 08:35:21.102"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.081" endtime="20201110 08:35:21.102"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.077" endtime="20201110 08:35:21.103"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:20.708" endtime="20201110 08:35:21.103"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:20.707" endtime="20201110 08:35:21.103"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:21.112" endtime="20201110 08:35:21.133"></status>
</kw>
<msg timestamp="20201110 08:35:21.134" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:21.110" endtime="20201110 08:35:21.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:21.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:21.135" endtime="20201110 08:35:21.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:21.137" endtime="20201110 08:35:21.139"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.108" endtime="20201110 08:35:21.140"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.106" endtime="20201110 08:35:21.140"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:21.147" endtime="20201110 08:35:21.432"></status>
</kw>
<msg timestamp="20201110 08:35:21.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019739653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019840639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:21.145" endtime="20201110 08:35:21.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:21.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019739653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019840639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:21.436" endtime="20201110 08:35:21.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:21.444" endtime="20201110 08:35:21.446"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.143" endtime="20201110 08:35:21.446"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.141" endtime="20201110 08:35:21.447"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:21.451" level="INFO">${RESULT} = [{'time': 0.019840639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010098600000000083, 'source_diff': 0.00010098600000000083}, {'time': 0.019947639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:21.447" endtime="20201110 08:35:21.451"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:21.464" level="INFO">${ACCURACY} = {'source_diff': [0.00010098600000000083, 0.00010113900000000009, 0.0001005419999999986, 0.00010058400000000078, 0.00010013899999999909, 0.0001003060000000014, 0.00010044500000000109, 0.000101181000000...</msg>
<status status="PASS" starttime="20201110 08:35:21.452" endtime="20201110 08:35:21.464"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:21.468" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201110 08:35:21.467" endtime="20201110 08:35:21.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:21.471" level="INFO">VALUE: [0.00010098600000000083, 0.00010113900000000009, 0.0001005419999999986, 0.00010058400000000078, 0.00010013899999999909, 0.0001003060000000014, 0.00010044500000000109, 0.00010118100000000227, 0.00010023699999999955, 0.00010030500000000192, 0.00010106899999999877, 0.0001005410000000026, 0.00010106899999999877, 0.00010108299999999834, 0.00010116699999999923, 0.0001010419999999991, 0.00010063899999999959, 0.000100722000000001, 0.00010074999999999668, 0.00010054200000000207, 0.00010087500000000027, 0.00010072300000000048, 0.00010038899999999934, 0.00010013899999999909, 0.00010070800000000144, 0.00010056899999999827, 0.0001003610000000002, 0.00010107000000000171, 0.00010101399999999996, 0.00010055599999999817, 0.00010058399999999731, 0.0001010000000000004, 0.0001004999999999999, 0.00010051399999999946, 0.00010008299999999734, 0.00010109700000000138, 0.00010088899999999984, 0.00010084699999999766, 0.0001011809999999988, 0.00010097300000000073, 0.00010061100000000045, 0.00010062500000000002, 0.00010041699999999848, 0.0001010000000000004, 0.00010038900000000281, 0.00010093099999999855, 0.00010037499999999977, 0.00010073600000000058, 0.00010042999999999858, 0.00010106899999999877]</msg>
<status status="PASS" starttime="20201110 08:35:21.469" endtime="20201110 08:35:21.471"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.465" endtime="20201110 08:35:21.472"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:21.474" endtime="20201110 08:35:21.476"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:21.478" endtime="20201110 08:35:21.497"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.476" endtime="20201110 08:35:21.498"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.473" endtime="20201110 08:35:21.498"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.104" endtime="20201110 08:35:21.498"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.104" endtime="20201110 08:35:21.498"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:21.507" endtime="20201110 08:35:21.527"></status>
</kw>
<msg timestamp="20201110 08:35:21.527" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:21.505" endtime="20201110 08:35:21.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:21.530" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:21.528" endtime="20201110 08:35:21.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:21.531" endtime="20201110 08:35:21.534"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.503" endtime="20201110 08:35:21.534"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.501" endtime="20201110 08:35:21.535"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:21.541" endtime="20201110 08:35:21.828"></status>
</kw>
<msg timestamp="20201110 08:35:21.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019651014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019753125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:21.540" endtime="20201110 08:35:21.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:21.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019651014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019753125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:21.832" endtime="20201110 08:35:21.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:21.840" endtime="20201110 08:35:21.842"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.537" endtime="20201110 08:35:21.842"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.535" endtime="20201110 08:35:21.843"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:21.847" level="INFO">${RESULT} = [{'time': 0.019753125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010211099999999848, 'source_diff': 0.00010211099999999848}, {'time': 0.019861083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:21.843" endtime="20201110 08:35:21.847"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:21.860" level="INFO">${ACCURACY} = {'source_diff': [0.00010211099999999848, 0.0001020550000000002, 0.00010184699999999866, 0.00010211100000000195, 0.0001021939999999999, 0.00010159800000000135, 0.00010134700000000163, 0.000101125000000...</msg>
<status status="PASS" starttime="20201110 08:35:21.848" endtime="20201110 08:35:21.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:21.865" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201110 08:35:21.864" endtime="20201110 08:35:21.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:21.867" level="INFO">VALUE: [0.00010211099999999848, 0.0001020550000000002, 0.00010184699999999866, 0.00010211100000000195, 0.0001021939999999999, 0.00010159800000000135, 0.00010134700000000163, 0.00010112500000000052, 0.00010211099999999848, 0.00010205599999999967, 0.00010148599999999786, 0.00010206999999999924, 0.00010145799999999872, 0.00010142999999999958, 0.00010137500000000077, 0.00010144399999999915, 0.00010111100000000095, 0.0001013199999999985, 0.00010184699999999866, 0.00010144499999999862, 0.00010197200000000226, 0.00010195900000000216, 0.00010161100000000145, 0.00010123700000000055, 0.0001018619999999977, 0.00010180499999999995, 0.00010179100000000038, 0.00010193000000000008, 0.00010198599999999836, 0.00010130499999999945, 0.00010148600000000133, 0.00010220799999999947, 0.00010198600000000183, 0.00010144499999999862, 0.00010216700000000023, 0.000101819999999999, 0.00010193000000000008, 0.0001016939999999994, 0.00010183300000000256, 0.00010112500000000052, 0.00010126400000000021, 0.00010149999999999743, 0.0001017359999999981, 0.00010158300000000231, 0.0001021809999999998, 0.00010179199999999985, 0.0001021809999999998, 0.00010175000000000115, 0.00010120899999999794, 0.00010111100000000095]</msg>
<status status="PASS" starttime="20201110 08:35:21.866" endtime="20201110 08:35:21.868"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.861" endtime="20201110 08:35:21.868"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:21.871" endtime="20201110 08:35:21.872"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:21.874" endtime="20201110 08:35:21.893"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.872" endtime="20201110 08:35:21.894"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.869" endtime="20201110 08:35:21.894"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.499" endtime="20201110 08:35:21.895"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.499" endtime="20201110 08:35:21.895"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:21.903" endtime="20201110 08:35:21.924"></status>
</kw>
<msg timestamp="20201110 08:35:21.924" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:21.902" endtime="20201110 08:35:21.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:21.926" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:21.925" endtime="20201110 08:35:21.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:21.927" endtime="20201110 08:35:21.930"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.899" endtime="20201110 08:35:21.931"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.897" endtime="20201110 08:35:21.931"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:21.939" endtime="20201110 08:35:22.226"></status>
</kw>
<msg timestamp="20201110 08:35:22.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019723458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019826097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:21.937" endtime="20201110 08:35:22.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:22.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019723458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019826097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:22.230" endtime="20201110 08:35:22.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:22.238" endtime="20201110 08:35:22.240"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.933" endtime="20201110 08:35:22.240"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.932" endtime="20201110 08:35:22.241"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:22.245" level="INFO">${RESULT} = [{'time': 0.019826097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010263900000000159, 'source_diff': 0.00010263900000000159}, {'time': 0.019932111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:22.241" endtime="20201110 08:35:22.245"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:22.258" level="INFO">${ACCURACY} = {'source_diff': [0.00010263900000000159, 0.00010231900000000002, 0.00010243000000000058, 0.00010322200000000004, 0.00010238900000000134, 0.00010249999999999843, 0.00010266700000000073, 0.0001024030000...</msg>
<status status="PASS" starttime="20201110 08:35:22.246" endtime="20201110 08:35:22.258"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:22.263" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201110 08:35:22.261" endtime="20201110 08:35:22.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:22.265" level="INFO">VALUE: [0.00010263900000000159, 0.00010231900000000002, 0.00010243000000000058, 0.00010322200000000004, 0.00010238900000000134, 0.00010249999999999843, 0.00010266700000000073, 0.00010240300000000091, 0.00010322200000000004, 0.0001023749999999983, 0.00010297199999999979, 0.00010254100000000113, 0.0001030000000000024, 0.00010269399999999693, 0.00010213900000000109, 0.0001022359999999986, 0.00010280500000000095, 0.00010238899999999787, 0.00010233400000000253, 0.00010202800000000053, 0.00010263799999999865, 0.00010298699999999883, 0.0001025420000000006, 0.00010270799999999997, 0.00010266599999999779, 0.00010230499999999698, 0.00010236099999999873, 0.00010290300000000141, 0.0001023749999999983, 0.00010280600000000042, 0.00010291700000000098, 0.00010276400000000172, 0.00010270900000000291, 0.0001026940000000004, 0.00010230599999999992, 0.00010259799999999888, 0.0001030550000000012, 0.0001022359999999986, 0.00010313900000000209, 0.00010254100000000113, 0.00010317999999999786, 0.00010259700000000288, 0.00010236099999999873, 0.00010298600000000283, 0.00010280600000000042, 0.00010287500000000227, 0.00010305600000000067, 0.00010263799999999865, 0.00010212499999999805, 0.00010261100000000245]</msg>
<status status="PASS" starttime="20201110 08:35:22.264" endtime="20201110 08:35:22.266"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.259" endtime="20201110 08:35:22.266"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:22.269" endtime="20201110 08:35:22.270"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:22.272" endtime="20201110 08:35:22.291"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.270" endtime="20201110 08:35:22.292"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.267" endtime="20201110 08:35:22.292"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.896" endtime="20201110 08:35:22.293"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.895" endtime="20201110 08:35:22.293"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:22.301" endtime="20201110 08:35:22.323"></status>
</kw>
<msg timestamp="20201110 08:35:22.323" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:22.300" endtime="20201110 08:35:22.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:22.326" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:22.324" endtime="20201110 08:35:22.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:22.327" endtime="20201110 08:35:22.329"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.297" endtime="20201110 08:35:22.330"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.295" endtime="20201110 08:35:22.330"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:22.337" endtime="20201110 08:35:22.624"></status>
</kw>
<msg timestamp="20201110 08:35:22.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019713736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019817292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:22.335" endtime="20201110 08:35:22.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:22.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019713736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019817292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:22.629" endtime="20201110 08:35:22.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:22.637" endtime="20201110 08:35:22.639"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.333" endtime="20201110 08:35:22.639"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.331" endtime="20201110 08:35:22.640"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:22.644" level="INFO">${RESULT} = [{'time': 0.019817292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010355600000000117, 'source_diff': 0.00010355600000000117}, {'time': 0.019925361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:22.640" endtime="20201110 08:35:22.644"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:22.658" level="INFO">${ACCURACY} = {'source_diff': [0.00010355600000000117, 0.00010355499999999823, 0.00010413800000000015, 0.00010343000000000158, 0.00010344400000000115, 0.00010398600000000036, 0.00010408300000000134, 0.0001033749999...</msg>
<status status="PASS" starttime="20201110 08:35:22.645" endtime="20201110 08:35:22.658"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:22.663" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201110 08:35:22.662" endtime="20201110 08:35:22.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:22.665" level="INFO">VALUE: [0.00010355600000000117, 0.00010355499999999823, 0.00010413800000000015, 0.00010343000000000158, 0.00010344400000000115, 0.00010398600000000036, 0.00010408300000000134, 0.0001033749999999993, 0.00010381899999999805, 0.00010348599999999986, 0.00010349999999999943, 0.00010363899999999912, 0.0001040420000000021, 0.00010347200000000029, 0.0001035550000000017, 0.00010379100000000238, 0.00010402699999999959, 0.00010325000000000265, 0.00010375000000000315, 0.0001040139999999995, 0.00010412500000000005, 0.00010416699999999876, 0.00010341699999999801, 0.0001036810000000013, 0.00010395900000000069, 0.00010416699999999876, 0.00010361099999999998, 0.00010384700000000066, 0.00010356900000000127, 0.0001033749999999993, 0.00010325000000000265, 0.00010405499999999873, 0.00010344400000000115, 0.00010391699999999851, 0.0001033749999999993, 0.00010361099999999998, 0.00010359700000000041, 0.0001033200000000005, 0.00010397300000000026, 0.00010374999999999968, 0.00010351299999999952, 0.0001035550000000017, 0.00010342999999999811, 0.00010312500000000252, 0.00010331899999999755, 0.00010418000000000233, 0.0001040689999999983, 0.00010330600000000092, 0.0001033200000000005, 0.00010377799999999882]</msg>
<status status="PASS" starttime="20201110 08:35:22.664" endtime="20201110 08:35:22.672"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.659" endtime="20201110 08:35:22.673"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:22.675" endtime="20201110 08:35:22.677"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:22.679" endtime="20201110 08:35:22.698"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.677" endtime="20201110 08:35:22.699"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.673" endtime="20201110 08:35:22.699"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.294" endtime="20201110 08:35:22.699"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.293" endtime="20201110 08:35:22.700"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:22.708" endtime="20201110 08:35:22.729"></status>
</kw>
<msg timestamp="20201110 08:35:22.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:22.707" endtime="20201110 08:35:22.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:22.732" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:22.731" endtime="20201110 08:35:22.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:22.733" endtime="20201110 08:35:22.736"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.704" endtime="20201110 08:35:22.736"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.702" endtime="20201110 08:35:22.737"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:22.743" endtime="20201110 08:35:23.037"></status>
</kw>
<msg timestamp="20201110 08:35:23.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019871458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019976403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:22.742" endtime="20201110 08:35:23.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:23.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019871458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019976403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:23.047" endtime="20201110 08:35:23.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:23.066" endtime="20201110 08:35:23.069"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.739" endtime="20201110 08:35:23.071"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.737" endtime="20201110 08:35:23.072"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:23.081" level="INFO">${RESULT} = [{'time': 0.019976403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010494499999999865, 'source_diff': 0.00010494499999999865}, {'time': 0.020084431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:23.073" endtime="20201110 08:35:23.081"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:23.113" level="INFO">${ACCURACY} = {'source_diff': [0.00010494499999999865, 0.0001050140000000005, 0.00010412500000000005, 0.00010447199999999782, 0.00010452800000000304, 0.00010411100000000048, 0.00010454099999999966, 0.00010423600000...</msg>
<status status="PASS" starttime="20201110 08:35:23.083" endtime="20201110 08:35:23.113"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:23.118" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201110 08:35:23.117" endtime="20201110 08:35:23.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:23.120" level="INFO">VALUE: [0.00010494499999999865, 0.0001050140000000005, 0.00010412500000000005, 0.00010447199999999782, 0.00010452800000000304, 0.00010411100000000048, 0.00010454099999999966, 0.0001042360000000006, 0.00010517999999999986, 0.00010517999999999986, 0.00010498599999999789, 0.00010518099999999933, 0.00010494499999999865, 0.00010430599999999846, 0.00010487499999999733, 0.00010447200000000129, 0.00010438899999999987, 0.00010498700000000083, 0.00010443000000000258, 0.00010498599999999789, 0.00010448600000000086, 0.00010481899999999905, 0.0001045559999999987, 0.0001042360000000006, 0.00010425000000000018, 0.00010431999999999803, 0.00010480600000000242, 0.00010491699999999951, 0.00010518099999999933, 0.00010454099999999966, 0.0001048750000000008, 0.00010459700000000141, 0.00010476400000000025, 0.0001047360000000011, 0.00010462499999999708, 0.00010442999999999911, 0.00010461100000000098, 0.00010458400000000131, 0.000105207999999999, 0.0001050559999999992, 0.00010500000000000093, 0.0001050689999999993, 0.00010433300000000159, 0.00010499999999999746, 0.00010508299999999887, 0.00010466699999999926, 0.00010516699999999976, 0.00010493099999999908, 0.000104514, 0.00010472200000000154]</msg>
<status status="PASS" starttime="20201110 08:35:23.119" endtime="20201110 08:35:23.121"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:23.114" endtime="20201110 08:35:23.122"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:23.124" endtime="20201110 08:35:23.125"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:23.128" endtime="20201110 08:35:23.147"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:23.126" endtime="20201110 08:35:23.148"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:23.122" endtime="20201110 08:35:23.148"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.700" endtime="20201110 08:35:23.148"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.700" endtime="20201110 08:35:23.149"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:23.158" endtime="20201110 08:35:23.178"></status>
</kw>
<msg timestamp="20201110 08:35:23.179" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:23.156" endtime="20201110 08:35:23.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:23.181" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:23.180" endtime="20201110 08:35:23.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:23.182" endtime="20201110 08:35:23.185"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:23.153" endtime="20201110 08:35:23.186"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:23.151" endtime="20201110 08:35:23.186"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:23.193" endtime="20201110 08:35:23.479"></status>
</kw>
<msg timestamp="20201110 08:35:23.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020380056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020485292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:23.191" endtime="20201110 08:35:23.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:23.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020380056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020485292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:23.484" endtime="20201110 08:35:23.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:23.492" endtime="20201110 08:35:23.494"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:23.188" endtime="20201110 08:35:23.494"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:23.187" endtime="20201110 08:35:23.495"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:23.499" level="INFO">${RESULT} = [{'time': 0.020485292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010523599999999814, 'source_diff': 0.00010523599999999814}, {'time': 0.020595306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:23.495" endtime="20201110 08:35:23.499"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:23.513" level="INFO">${ACCURACY} = {'source_diff': [0.00010523599999999814, 0.00010606999999999978, 0.00010575000000000168, 0.00010605499999999726, 0.00010581900000000005, 0.00010531999999999903, 0.00010584699999999919, 0.0001062360000...</msg>
<status status="PASS" starttime="20201110 08:35:23.500" endtime="20201110 08:35:23.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:23.517" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201110 08:35:23.516" endtime="20201110 08:35:23.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:23.520" level="INFO">VALUE: [0.00010523599999999814, 0.00010606999999999978, 0.00010575000000000168, 0.00010605499999999726, 0.00010581900000000005, 0.00010531999999999903, 0.00010584699999999919, 0.0001062360000000026, 0.00010537499999999783, 0.00010568099999999983, 0.00010556999999999928, 0.0001058339999999991, 0.00010566699999999679, 0.00010544500000000262, 0.00010584799999999867, 0.00010547300000000176, 0.00010526399999999728, 0.00010547199999999882, 0.00010599999999999846, 0.00010513899999999715, 0.00010592999999999714, 0.00010569399999999993, 0.00010587499999999833, 0.00010544499999999915, 0.0001057079999999995, 0.0001057499999999982, 0.00010594400000000018, 0.00010555500000000023, 0.00010555500000000023, 0.00010562499999999808, 0.00010577800000000082, 0.00010583299999999962, 0.00010595800000000322, 0.00010572199999999907, 0.0001060560000000002, 0.00010601399999999803, 0.0001057629999999983, 0.00010594499999999965, 0.00010586099999999876, 0.00010591700000000051, 0.00010519399999999943, 0.00010586099999999876, 0.00010586100000000223, 0.00010579200000000039, 0.00010555500000000023, 0.00010512500000000105, 0.00010544499999999915, 0.00010529199999999989, 0.00010606999999999978, 0.00010604200000000064]</msg>
<status status="PASS" starttime="20201110 08:35:23.519" endtime="20201110 08:35:23.521"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:23.514" endtime="20201110 08:35:23.521"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:23.524" endtime="20201110 08:35:23.525"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:23.527" endtime="20201110 08:35:23.547"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:23.526" endtime="20201110 08:35:23.547"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:23.522" endtime="20201110 08:35:23.548"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:23.149" endtime="20201110 08:35:23.548"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:23.149" endtime="20201110 08:35:23.548"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:23.558" endtime="20201110 08:35:23.579"></status>
</kw>
<msg timestamp="20201110 08:35:23.579" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:23.556" endtime="20201110 08:35:23.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:23.582" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:23.580" endtime="20201110 08:35:23.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:23.583" endtime="20201110 08:35:23.586"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:23.553" endtime="20201110 08:35:23.586"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:23.551" endtime="20201110 08:35:23.587"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:23.593" endtime="20201110 08:35:23.879"></status>
</kw>
<msg timestamp="20201110 08:35:23.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020490222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020596847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:23.592" endtime="20201110 08:35:23.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:23.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020490222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020596847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:23.884" endtime="20201110 08:35:23.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:23.892" endtime="20201110 08:35:23.894"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:23.589" endtime="20201110 08:35:23.894"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:23.587" endtime="20201110 08:35:23.895"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:23.899" level="INFO">${RESULT} = [{'time': 0.020596847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010662500000000255, 'source_diff': 0.00010662500000000255}, {'time': 0.020706847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:23.896" endtime="20201110 08:35:23.899"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:23.913" level="INFO">${ACCURACY} = {'source_diff': [0.00010662500000000255, 0.00010637499999999883, 0.00010705500000000173, 0.00010695800000000075, 0.00010643099999999711, 0.00010707000000000078, 0.00010654199999999767, 0.0001069999999...</msg>
<status status="PASS" starttime="20201110 08:35:23.900" endtime="20201110 08:35:23.913"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:23.918" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201110 08:35:23.916" endtime="20201110 08:35:23.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:23.920" level="INFO">VALUE: [0.00010662500000000255, 0.00010637499999999883, 0.00010705500000000173, 0.00010695800000000075, 0.00010643099999999711, 0.00010707000000000078, 0.00010654199999999767, 0.00010699999999999946, 0.0001066950000000004, 0.00010630600000000046, 0.00010680600000000096, 0.00010687499999999933, 0.00010701399999999903, 0.00010652700000000209, 0.0001062499999999987, 0.000106514000000002, 0.00010704200000000164, 0.00010612500000000205, 0.0001070560000000012, 0.00010698599999999989, 0.00010673599999999964, 0.00010701299999999955, 0.00010623599999999914, 0.00010677699999999887, 0.00010693000000000161, 0.00010638900000000187, 0.00010716599999999882, 0.00010630499999999751, 0.00010713899999999915, 0.00010693100000000108, 0.00010707000000000078, 0.00010680600000000096, 0.00010645800000000025, 0.00010611100000000248, 0.00010668000000000136, 0.00010681900000000105, 0.00010701399999999903, 0.00010677699999999887, 0.00010629100000000141, 0.00010623599999999914, 0.00010631900000000055, 0.00010673599999999964, 0.00010694500000000065, 0.00010670899999999997, 0.0001066950000000004, 0.00010691700000000151, 0.00010699999999999946, 0.0001068750000000028, 0.00010693099999999761, 0.00010701399999999903]</msg>
<status status="PASS" starttime="20201110 08:35:23.919" endtime="20201110 08:35:23.921"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:23.914" endtime="20201110 08:35:23.922"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:23.924" endtime="20201110 08:35:23.925"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:23.927" endtime="20201110 08:35:23.947"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:23.926" endtime="20201110 08:35:23.947"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:23.922" endtime="20201110 08:35:23.948"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:23.549" endtime="20201110 08:35:23.948"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:23.549" endtime="20201110 08:35:23.948"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:23.957" endtime="20201110 08:35:23.979"></status>
</kw>
<msg timestamp="20201110 08:35:23.979" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:23.956" endtime="20201110 08:35:23.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:23.982" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:23.981" endtime="20201110 08:35:23.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:23.983" endtime="20201110 08:35:23.986"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:23.953" endtime="20201110 08:35:23.987"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:23.951" endtime="20201110 08:35:23.987"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:23.994" endtime="20201110 08:35:24.280"></status>
</kw>
<msg timestamp="20201110 08:35:24.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020359625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020467278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:23.992" endtime="20201110 08:35:24.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020359625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020467278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:24.284" endtime="20201110 08:35:24.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:24.293" endtime="20201110 08:35:24.294"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:23.989" endtime="20201110 08:35:24.295"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:23.988" endtime="20201110 08:35:24.295"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:24.299" level="INFO">${RESULT} = [{'time': 0.020467278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010765299999999922, 'source_diff': 0.00010765299999999922}, {'time': 0.020580361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:24.296" endtime="20201110 08:35:24.300"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:24.315" level="INFO">${ACCURACY} = {'source_diff': [0.00010765299999999922, 0.00010781899999999858, 0.0001070699999999973, 0.00010790299999999947, 0.00010787499999999686, 0.00010766699999999879, 0.0001080829999999984, 0.000107388999999...</msg>
<status status="PASS" starttime="20201110 08:35:24.300" endtime="20201110 08:35:24.315"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.319" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201110 08:35:24.318" endtime="20201110 08:35:24.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.322" level="INFO">VALUE: [0.00010765299999999922, 0.00010781899999999858, 0.0001070699999999973, 0.00010790299999999947, 0.00010787499999999686, 0.00010766699999999879, 0.0001080829999999984, 0.0001073889999999994, 0.00010761100000000051, 0.00010748600000000039, 0.00010762500000000008, 0.00010741699999999854, 0.00010793099999999861, 0.00010734700000000069, 0.00010768099999999836, 0.00010732000000000103, 0.00010804200000000264, 0.00010762500000000008, 0.00010727799999999885, 0.0001074019999999995, 0.00010736100000000026, 0.000107208000000001, 0.00010794399999999871, 0.00010816699999999929, 0.0001073889999999994, 0.0001078889999999999, 0.00010723600000000014, 0.00010793099999999861, 0.00010798599999999742, 0.00010737499999999983, 0.00010705499999999826, 0.00010813899999999668, 0.00010804099999999969, 0.0001080279999999996, 0.00010759700000000094, 0.00010797300000000079, 0.00010738900000000287, 0.0001078340000000011, 0.0001078889999999999, 0.00010783399999999763, 0.00010772200000000107, 0.00010787500000000033, 0.00010740300000000244, 0.00010792999999999914, 0.00010727800000000232, 0.00010748599999999692, 0.00010780499999999901, 0.00010784800000000067, 0.00010780600000000196, 0.00010762500000000008]</msg>
<status status="PASS" starttime="20201110 08:35:24.320" endtime="20201110 08:35:24.323"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.316" endtime="20201110 08:35:24.323"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:24.325" endtime="20201110 08:35:24.327"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:24.329" endtime="20201110 08:35:24.348"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.327" endtime="20201110 08:35:24.349"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.324" endtime="20201110 08:35:24.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:23.949" endtime="20201110 08:35:24.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:23.949" endtime="20201110 08:35:24.350"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:24.359" endtime="20201110 08:35:24.380"></status>
</kw>
<msg timestamp="20201110 08:35:24.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:24.357" endtime="20201110 08:35:24.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.384" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:24.382" endtime="20201110 08:35:24.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:24.385" endtime="20201110 08:35:24.387"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.355" endtime="20201110 08:35:24.388"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.353" endtime="20201110 08:35:24.388"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:24.395" endtime="20201110 08:35:24.682"></status>
</kw>
<msg timestamp="20201110 08:35:24.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020463306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020572208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:24.394" endtime="20201110 08:35:24.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020463306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020572208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:24.687" endtime="20201110 08:35:24.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:24.695" endtime="20201110 08:35:24.697"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.391" endtime="20201110 08:35:24.697"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.389" endtime="20201110 08:35:24.698"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:24.702" level="INFO">${RESULT} = [{'time': 0.020572208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000108902000000001, 'source_diff': 0.000108902000000001}, {'time': 0.020685236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:35:24.699" endtime="20201110 08:35:24.702"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:24.716" level="INFO">${ACCURACY} = {'source_diff': [0.000108902000000001, 0.00010919399999999996, 0.00010887499999999786, 0.00010836100000000126, 0.00010898600000000189, 0.0001090699999999993, 0.00010905599999999974, 0.0001086249999999...</msg>
<status status="PASS" starttime="20201110 08:35:24.703" endtime="20201110 08:35:24.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.721" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201110 08:35:24.720" endtime="20201110 08:35:24.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.723" level="INFO">VALUE: [0.000108902000000001, 0.00010919399999999996, 0.00010887499999999786, 0.00010836100000000126, 0.00010898600000000189, 0.0001090699999999993, 0.00010905599999999974, 0.00010862499999999761, 0.00010872200000000207, 0.00010883300000000262, 0.0001082500000000007, 0.0001083890000000004, 0.00010886100000000176, 0.00010833299999999865, 0.00010919399999999996, 0.00010909699999999897, 0.00010879199999999992, 0.00010879199999999992, 0.00010872200000000207, 0.00010815200000000025, 0.00010870900000000197, 0.0001083890000000004, 0.00010854199999999967, 0.00010874999999999774, 0.00010805499999999926, 0.00010844399999999921, 0.00010873600000000164, 0.00010823600000000114, 0.00010900000000000146, 0.0001082500000000007, 0.0001083890000000004, 0.00010901399999999756, 0.00010879199999999992, 0.00010902700000000112, 0.00010868099999999936, 0.00010812499999999711, 0.00010869399999999946, 0.0001085280000000001, 0.00010916700000000029, 0.00010894399999999971, 0.00010848599999999792, 0.00010858399999999838, 0.00010836100000000126, 0.00010894499999999918, 0.00010829199999999942, 0.00010836200000000074, 0.00010856899999999933, 0.00010823599999999767, 0.00010912499999999811, 0.00010898600000000189]</msg>
<status status="PASS" starttime="20201110 08:35:24.722" endtime="20201110 08:35:24.724"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.717" endtime="20201110 08:35:24.725"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:24.727" endtime="20201110 08:35:24.728"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:24.730" endtime="20201110 08:35:24.750"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.729" endtime="20201110 08:35:24.750"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.725" endtime="20201110 08:35:24.751"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.351" endtime="20201110 08:35:24.751"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.350" endtime="20201110 08:35:24.751"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:24.760" endtime="20201110 08:35:24.782"></status>
</kw>
<msg timestamp="20201110 08:35:24.783" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:24.759" endtime="20201110 08:35:24.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.785" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:24.784" endtime="20201110 08:35:24.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:24.786" endtime="20201110 08:35:24.789"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.756" endtime="20201110 08:35:24.789"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.754" endtime="20201110 08:35:24.790"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:24.797" endtime="20201110 08:35:25.083"></status>
</kw>
<msg timestamp="20201110 08:35:25.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020410375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020520347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:24.795" endtime="20201110 08:35:25.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:25.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020410375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020520347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:25.088" endtime="20201110 08:35:25.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:25.096" endtime="20201110 08:35:25.098"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.792" endtime="20201110 08:35:25.098"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.791" endtime="20201110 08:35:25.099"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:25.103" level="INFO">${RESULT} = [{'time': 0.020520347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010997199999999985, 'source_diff': 0.00010997199999999985}, {'time': 0.020632347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:25.099" endtime="20201110 08:35:25.103"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:25.117" level="INFO">${ACCURACY} = {'source_diff': [0.00010997199999999985, 0.00010949999999999849, 0.00010980600000000049, 0.00010968100000000036, 0.00011011099999999954, 0.00011012499999999911, 0.00010991700000000104, 0.0001098609999...</msg>
<status status="PASS" starttime="20201110 08:35:25.104" endtime="20201110 08:35:25.117"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:25.122" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201110 08:35:25.120" endtime="20201110 08:35:25.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:25.124" level="INFO">VALUE: [0.00010997199999999985, 0.00010949999999999849, 0.00010980600000000049, 0.00010968100000000036, 0.00011011099999999954, 0.00011012499999999911, 0.00010991700000000104, 0.00010986099999999929, 0.00010943100000000011, 0.0001100700000000003, 0.00010992999999999767, 0.00011001399999999856, 0.00010937500000000183, 0.00010926400000000128, 0.00010955600000000024, 0.00010937500000000183, 0.00010979200000000092, 0.00010975000000000221, 0.00010982000000000006, 0.00010938899999999793, 0.00010955600000000024, 0.00010948599999999892, 0.00010954200000000067, 0.00011001399999999856, 0.00010948599999999892, 0.00010936100000000226, 0.00011018100000000086, 0.0001098890000000019, 0.00010968100000000036, 0.00011015300000000172, 0.00010936100000000226, 0.00010969499999999993, 0.00010974999999999874, 0.00010986199999999877, 0.00011004200000000117, 0.00010948599999999892, 0.00011012499999999911, 0.00010951399999999806, 0.00010924999999999824, 0.0001095699999999998, 0.00010962500000000208, 0.00010929200000000042, 0.0001093479999999987, 0.00010991700000000104, 0.00010975000000000221, 0.00010966699999999732, 0.00010984699999999972, 0.00010961099999999904, 0.00010931900000000008, 0.00010923599999999867]</msg>
<status status="PASS" starttime="20201110 08:35:25.123" endtime="20201110 08:35:25.125"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:25.118" endtime="20201110 08:35:25.126"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:25.128" endtime="20201110 08:35:25.129"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:25.132" endtime="20201110 08:35:25.151"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:25.130" endtime="20201110 08:35:25.152"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:25.126" endtime="20201110 08:35:25.152"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.752" endtime="20201110 08:35:25.152"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.752" endtime="20201110 08:35:25.152"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:25.161" endtime="20201110 08:35:25.182"></status>
</kw>
<msg timestamp="20201110 08:35:25.183" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:25.160" endtime="20201110 08:35:25.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:25.185" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:25.184" endtime="20201110 08:35:25.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:25.186" endtime="20201110 08:35:25.189"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:25.157" endtime="20201110 08:35:25.190"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:25.155" endtime="20201110 08:35:25.190"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:25.197" endtime="20201110 08:35:25.484"></status>
</kw>
<msg timestamp="20201110 08:35:25.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020337028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020447528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:25.195" endtime="20201110 08:35:25.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:25.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020337028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020447528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:25.488" endtime="20201110 08:35:25.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:25.497" endtime="20201110 08:35:25.498"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:25.193" endtime="20201110 08:35:25.499"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:25.191" endtime="20201110 08:35:25.499"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:25.504" level="INFO">${RESULT} = [{'time': 0.020447528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011049999999999949, 'source_diff': 0.00011049999999999949}, {'time': 0.020562528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:25.500" endtime="20201110 08:35:25.504"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:25.518" level="INFO">${ACCURACY} = {'source_diff': [0.00011049999999999949, 0.0001107090000000005, 0.00011022300000000304, 0.00011031899999999761, 0.00011115299999999925, 0.00011029200000000142, 0.00011108299999999793, 0.00011056899999...</msg>
<status status="PASS" starttime="20201110 08:35:25.505" endtime="20201110 08:35:25.518"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:25.522" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201110 08:35:25.521" endtime="20201110 08:35:25.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:25.525" level="INFO">VALUE: [0.00011049999999999949, 0.0001107090000000005, 0.00011022300000000304, 0.00011031899999999761, 0.00011115299999999925, 0.00011029200000000142, 0.00011108299999999793, 0.00011056899999999786, 0.00011099999999999999, 0.00011030500000000151, 0.00011043100000000111, 0.00011080599999999802, 0.00011055599999999777, 0.00011051399999999906, 0.0001104029999999985, 0.00011063800000000318, 0.00011087499999999986, 0.00011118000000000239, 0.00011013899999999868, 0.00011073600000000017, 0.00011059700000000047, 0.00011087499999999986, 0.0001105700000000008, 0.00011044500000000068, 0.00011116600000000282, 0.00011116699999999882, 0.00011101300000000008, 0.00011120800000000153, 0.00011054099999999872, 0.0001102220000000001, 0.00011087499999999986, 0.00011036099999999979, 0.00011052799999999863, 0.00011102799999999913, 0.00011080600000000149, 0.0001110280000000026, 0.00011063899999999918, 0.00011043099999999764, 0.00011080600000000149, 0.00011052799999999863, 0.00011062499999999961, 0.00011101399999999956, 0.00011098599999999695, 0.00011094399999999824, 0.00011036099999999979, 0.0001110830000000014, 0.00011036099999999979, 0.00011043100000000111, 0.00011118100000000186, 0.00011074999999999974]</msg>
<status status="PASS" starttime="20201110 08:35:25.524" endtime="20201110 08:35:25.526"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:25.518" endtime="20201110 08:35:25.526"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:25.529" endtime="20201110 08:35:25.530"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:25.532" endtime="20201110 08:35:25.552"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:25.531" endtime="20201110 08:35:25.552"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:25.527" endtime="20201110 08:35:25.553"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:25.153" endtime="20201110 08:35:25.553"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:25.153" endtime="20201110 08:35:25.553"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:25.562" endtime="20201110 08:35:25.584"></status>
</kw>
<msg timestamp="20201110 08:35:25.584" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:25.561" endtime="20201110 08:35:25.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:25.587" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:25.585" endtime="20201110 08:35:25.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:25.588" endtime="20201110 08:35:25.591"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:25.558" endtime="20201110 08:35:25.591"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:25.556" endtime="20201110 08:35:25.592"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:25.598" endtime="20201110 08:35:25.884"></status>
</kw>
<msg timestamp="20201110 08:35:25.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020484028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020595986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:25.597" endtime="20201110 08:35:25.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:25.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020484028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020595986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:25.889" endtime="20201110 08:35:25.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:25.897" endtime="20201110 08:35:25.899"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:25.594" endtime="20201110 08:35:25.899"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:25.592" endtime="20201110 08:35:25.900"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:25.904" level="INFO">${RESULT} = [{'time': 0.020595986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011195799999999881, 'source_diff': 0.00011195799999999881}, {'time': 0.020711014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:25.901" endtime="20201110 08:35:25.904"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:25.919" level="INFO">${ACCURACY} = {'source_diff': [0.00011195799999999881, 0.00011158299999999843, 0.00011206999999999884, 0.00011124999999999677, 0.0001119160000000001, 0.00011179199999999945, 0.00011218099999999939, 0.00011173600000...</msg>
<status status="PASS" starttime="20201110 08:35:25.905" endtime="20201110 08:35:25.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:25.924" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201110 08:35:25.923" endtime="20201110 08:35:25.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:25.926" level="INFO">VALUE: [0.00011195799999999881, 0.00011158299999999843, 0.00011206999999999884, 0.00011124999999999677, 0.0001119160000000001, 0.00011179199999999945, 0.00011218099999999939, 0.00011173600000000117, 0.00011126399999999981, 0.00011162499999999714, 0.00011198600000000142, 0.0001115549999999993, 0.00011156899999999886, 0.00011188900000000043, 0.00011175000000000074, 0.00011143099999999864, 0.00011177799999999988, 0.00011218099999999939, 0.00011133299999999818, 0.00011123700000000014, 0.00011202800000000013, 0.00011144399999999874, 0.00011194399999999924, 0.00011166599999999985, 0.00011201400000000056, 0.00011155599999999877, 0.00011216699999999982, 0.00011174999999999727, 0.00011176400000000031, 0.00011166699999999932, 0.00011205599999999927, 0.00011194399999999924, 0.00011188900000000043, 0.00011212499999999764, 0.00011206899999999936, 0.00011215300000000025, 0.00011144399999999874, 0.00011156899999999886, 0.00011180599999999902, 0.00011156999999999834, 0.00011180599999999902, 0.00011187500000000086, 0.00011212499999999764, 0.00011202700000000065, 0.00011150000000000049, 0.00011133299999999818, 0.00011198599999999795, 0.00011183299999999868, 0.0001114029999999995, 0.00011206899999999936]</msg>
<status status="PASS" starttime="20201110 08:35:25.925" endtime="20201110 08:35:25.927"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:25.920" endtime="20201110 08:35:25.928"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:25.930" endtime="20201110 08:35:25.931"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:25.934" endtime="20201110 08:35:25.953"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:25.932" endtime="20201110 08:35:25.954"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:25.928" endtime="20201110 08:35:25.954"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:25.554" endtime="20201110 08:35:25.954"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:25.554" endtime="20201110 08:35:25.954"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:25.963" endtime="20201110 08:35:25.985"></status>
</kw>
<msg timestamp="20201110 08:35:25.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:25.962" endtime="20201110 08:35:25.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:25.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:25.987" endtime="20201110 08:35:25.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:25.989" endtime="20201110 08:35:25.992"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:25.959" endtime="20201110 08:35:25.993"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:25.957" endtime="20201110 08:35:25.993"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:26.000" endtime="20201110 08:35:26.286"></status>
</kw>
<msg timestamp="20201110 08:35:26.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020331167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020444264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:25.998" endtime="20201110 08:35:26.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:26.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020331167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020444264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:26.290" endtime="20201110 08:35:26.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:26.299" endtime="20201110 08:35:26.301"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:25.996" endtime="20201110 08:35:26.301"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:25.994" endtime="20201110 08:35:26.302"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:26.306" level="INFO">${RESULT} = [{'time': 0.020444264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001130969999999995, 'source_diff': 0.0001130969999999995}, {'time': 0.020559292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:26.302" endtime="20201110 08:35:26.306"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:26.320" level="INFO">${ACCURACY} = {'source_diff': [0.0001130969999999995, 0.00011251400000000106, 0.00011229199999999995, 0.00011305600000000027, 0.00011212500000000111, 0.00011275000000000174, 0.00011261099999999857, 0.00011277800000...</msg>
<status status="PASS" starttime="20201110 08:35:26.307" endtime="20201110 08:35:26.320"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:26.325" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201110 08:35:26.324" endtime="20201110 08:35:26.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:26.327" level="INFO">VALUE: [0.0001130969999999995, 0.00011251400000000106, 0.00011229199999999995, 0.00011305600000000027, 0.00011212500000000111, 0.00011275000000000174, 0.00011261099999999857, 0.00011277800000000088, 0.00011234699999999875, 0.00011318000000000092, 0.00011261099999999857, 0.00011227800000000038, 0.00011226400000000081, 0.00011251399999999759, 0.00011226399999999734, 0.00011269499999999946, 0.00011262500000000161, 0.00011305600000000027, 0.00011224999999999777, 0.00011276400000000131, 0.0001124160000000006, 0.0001122359999999982, 0.00011266700000000032, 0.00011244399999999974, 0.00011219499999999896, 0.00011269499999999946, 0.00011223600000000167, 0.00011229199999999995, 0.00011240200000000103, 0.00011261100000000204, 0.00011317999999999745, 0.00011268000000000042, 0.00011244399999999974, 0.0001125550000000003, 0.00011276400000000131, 0.00011295900000000275, 0.00011231999999999909, 0.00011249999999999802, 0.00011286099999999882, 0.00011212499999999764, 0.00011281900000000011, 0.00011244399999999974, 0.00011220800000000253, 0.00011280600000000002, 0.00011248599999999845, 0.00011313899999999821, 0.00011280600000000002, 0.0001124030000000005, 0.00011261099999999857, 0.0001127359999999987]</msg>
<status status="PASS" starttime="20201110 08:35:26.326" endtime="20201110 08:35:26.328"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:26.321" endtime="20201110 08:35:26.329"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:26.331" endtime="20201110 08:35:26.333"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:26.335" endtime="20201110 08:35:26.354"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:26.333" endtime="20201110 08:35:26.355"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:26.329" endtime="20201110 08:35:26.355"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:25.955" endtime="20201110 08:35:26.356"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:25.955" endtime="20201110 08:35:26.356"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:26.365" endtime="20201110 08:35:26.387"></status>
</kw>
<msg timestamp="20201110 08:35:26.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:26.363" endtime="20201110 08:35:26.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:26.390" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:26.388" endtime="20201110 08:35:26.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:26.391" endtime="20201110 08:35:26.394"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:26.360" endtime="20201110 08:35:26.394"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:26.358" endtime="20201110 08:35:26.395"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:26.402" endtime="20201110 08:35:26.688"></status>
</kw>
<msg timestamp="20201110 08:35:26.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020451319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020564583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:26.400" endtime="20201110 08:35:26.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:26.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020451319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020564583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:26.692" endtime="20201110 08:35:26.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:26.700" endtime="20201110 08:35:26.702"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:26.397" endtime="20201110 08:35:26.703"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:26.395" endtime="20201110 08:35:26.703"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:26.707" level="INFO">${RESULT} = [{'time': 0.020564583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011326400000000181, 'source_diff': 0.00011326400000000181}, {'time': 0.020681569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:26.704" endtime="20201110 08:35:26.708"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:26.721" level="INFO">${ACCURACY} = {'source_diff': [0.00011326400000000181, 0.00011374999999999927, 0.00011348599999999945, 0.00011365299999999828, 0.00011398599999999995, 0.00011334699999999975, 0.00011363899999999871, 0.0001134859999...</msg>
<status status="PASS" starttime="20201110 08:35:26.708" endtime="20201110 08:35:26.722"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:26.726" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201110 08:35:26.725" endtime="20201110 08:35:26.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:26.728" level="INFO">VALUE: [0.00011326400000000181, 0.00011374999999999927, 0.00011348599999999945, 0.00011365299999999828, 0.00011398599999999995, 0.00011334699999999975, 0.00011363899999999871, 0.00011348599999999945, 0.0001133749999999989, 0.00011362499999999914, 0.00011340199999999856, 0.0001133749999999989, 0.00011402700000000265, 0.00011326399999999834, 0.00011330500000000104, 0.00011345800000000031, 0.00011391599999999863, 0.00011412499999999964, 0.00011412499999999964, 0.00011350000000000249, 0.00011336099999999932, 0.00011333399999999966, 0.00011345899999999978, 0.00011323699999999867, 0.00011398699999999942, 0.00011402799999999866, 0.00011419399999999802, 0.00011413899999999921, 0.00011417999999999845, 0.00011393100000000114, 0.0001133749999999989, 0.00011376400000000231, 0.000113597, 0.00011382000000000059, 0.00011329200000000095, 0.00011408300000000093, 0.00011381900000000111, 0.0001130969999999995, 0.00011326399999999834, 0.00011404100000000222, 0.00011345800000000031, 0.00011329200000000095, 0.00011412499999999964, 0.0001133749999999989, 0.00011359799999999948, 0.00011337500000000236, 0.00011384799999999973, 0.00011413799999999974, 0.0001138749999999994, 0.00011420799999999759]</msg>
<status status="PASS" starttime="20201110 08:35:26.727" endtime="20201110 08:35:26.729"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:26.722" endtime="20201110 08:35:26.730"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:26.732" endtime="20201110 08:35:26.734"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:26.736" endtime="20201110 08:35:26.755"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:26.734" endtime="20201110 08:35:26.756"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:26.730" endtime="20201110 08:35:26.756"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:26.357" endtime="20201110 08:35:26.757"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:26.356" endtime="20201110 08:35:26.757"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:26.766" endtime="20201110 08:35:26.787"></status>
</kw>
<msg timestamp="20201110 08:35:26.788" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:26.764" endtime="20201110 08:35:26.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:26.790" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:26.789" endtime="20201110 08:35:26.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:26.791" endtime="20201110 08:35:26.794"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:26.762" endtime="20201110 08:35:26.795"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:26.759" endtime="20201110 08:35:26.795"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:26.802" endtime="20201110 08:35:27.088"></status>
</kw>
<msg timestamp="20201110 08:35:27.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020313389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020428278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:26.800" endtime="20201110 08:35:27.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020313389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020428278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:27.092" endtime="20201110 08:35:27.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:27.100" endtime="20201110 08:35:27.102"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:26.797" endtime="20201110 08:35:27.103"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:26.796" endtime="20201110 08:35:27.103"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:27.107" level="INFO">${RESULT} = [{'time': 0.020428278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011488899999999996, 'source_diff': 0.00011488899999999996}, {'time': 0.020547292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:27.104" endtime="20201110 08:35:27.108"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:27.122" level="INFO">${ACCURACY} = {'source_diff': [0.00011488899999999996, 0.00011507000000000184, 0.00011483299999999821, 0.00011422299999999663, 0.00011455600000000177, 0.0001145550000000023, 0.000114597000000001, 0.0001148050000000...</msg>
<status status="PASS" starttime="20201110 08:35:27.108" endtime="20201110 08:35:27.122"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.126" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201110 08:35:27.125" endtime="20201110 08:35:27.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.129" level="INFO">VALUE: [0.00011488899999999996, 0.00011507000000000184, 0.00011483299999999821, 0.00011422299999999663, 0.00011455600000000177, 0.0001145550000000023, 0.000114597000000001, 0.00011480500000000254, 0.0001146109999999971, 0.00011430499999999857, 0.0001150420000000027, 0.0001148750000000004, 0.0001152360000000012, 0.0001143749999999999, 0.0001145420000000022, 0.00011475000000000027, 0.00011520800000000206, 0.00011480499999999907, 0.00011505499999999932, 0.00011450000000000002, 0.00011484700000000125, 0.00011448600000000045, 0.0001149299999999992, 0.00011448600000000045, 0.00011443100000000164, 0.00011508299999999846, 0.00011456900000000186, 0.00011447200000000088, 0.00011480499999999907, 0.00011488899999999996, 0.00011463899999999971, 0.00011516699999999935, 0.00011431999999999762, 0.00011413899999999921, 0.00011438899999999946, 0.00011444500000000121, 0.0001142230000000001, 0.00011498600000000095, 0.00011519499999999849, 0.00011519399999999902, 0.0001145689999999984, 0.00011508300000000193, 0.0001144169999999986, 0.00011518099999999892, 0.00011500000000000052, 0.00011430600000000152, 0.00011443100000000164, 0.00011450000000000002, 0.00011413799999999974, 0.0001145689999999984]</msg>
<status status="PASS" starttime="20201110 08:35:27.127" endtime="20201110 08:35:27.130"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.123" endtime="20201110 08:35:27.130"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:27.133" endtime="20201110 08:35:27.134"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:27.136" endtime="20201110 08:35:27.156"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.135" endtime="20201110 08:35:27.156"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.131" endtime="20201110 08:35:27.157"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:26.758" endtime="20201110 08:35:27.157"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:26.757" endtime="20201110 08:35:27.157"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:27.166" endtime="20201110 08:35:27.187"></status>
</kw>
<msg timestamp="20201110 08:35:27.188" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:27.165" endtime="20201110 08:35:27.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.190" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:27.189" endtime="20201110 08:35:27.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:27.192" endtime="20201110 08:35:27.194"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.162" endtime="20201110 08:35:27.195"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.160" endtime="20201110 08:35:27.195"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:27.202" endtime="20201110 08:35:27.488"></status>
</kw>
<msg timestamp="20201110 08:35:27.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020424347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020540514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:27.200" endtime="20201110 08:35:27.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020424347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020540514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:27.492" endtime="20201110 08:35:27.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:27.501" endtime="20201110 08:35:27.502"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.198" endtime="20201110 08:35:27.503"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.196" endtime="20201110 08:35:27.503"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:27.508" level="INFO">${RESULT} = [{'time': 0.020540514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011616700000000035, 'source_diff': 0.00011616700000000035}, {'time': 0.020660514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:27.504" endtime="20201110 08:35:27.508"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:27.522" level="INFO">${ACCURACY} = {'source_diff': [0.00011616700000000035, 0.00011583300000000268, 0.00011509699999999803, 0.0001153620000000008, 0.00011618099999999992, 0.0001154169999999996, 0.00011597199999999891, 0.000115291, 0.00...</msg>
<status status="PASS" starttime="20201110 08:35:27.509" endtime="20201110 08:35:27.523"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.527" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201110 08:35:27.526" endtime="20201110 08:35:27.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.530" level="INFO">VALUE: [0.00011616700000000035, 0.00011583300000000268, 0.00011509699999999803, 0.0001153620000000008, 0.00011618099999999992, 0.0001154169999999996, 0.00011597199999999891, 0.000115291, 0.00011618000000000045, 0.00011619400000000002, 0.00011605500000000032, 0.00011568099999999942, 0.00011575000000000127, 0.00011511100000000107, 0.00011599999999999805, 0.00011615300000000078, 0.00011556999999999887, 0.00011550000000000102, 0.00011604100000000075, 0.0001150689999999989, 0.00011581899999999964, 0.0001160689999999999, 0.00011575000000000127, 0.00011581899999999964, 0.0001157499999999978, 0.00011570900000000203, 0.00011570799999999909, 0.0001155559999999993, 0.00011556999999999887, 0.00011572199999999866, 0.00011611199999999808, 0.00011581899999999964, 0.00011604100000000075, 0.00011548600000000145, 0.0001155689999999994, 0.0001157360000000017, 0.00011562499999999767, 0.00011559699999999853, 0.00011544499999999874, 0.00011531999999999862, 0.00011618099999999992, 0.00011619400000000002, 0.00011577700000000093, 0.00011526400000000034, 0.000115291, 0.00011559699999999853, 0.0001153750000000009, 0.00011526400000000034, 0.00011600000000000152, 0.00011593100000000314]</msg>
<status status="PASS" starttime="20201110 08:35:27.528" endtime="20201110 08:35:27.531"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.523" endtime="20201110 08:35:27.531"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:27.534" endtime="20201110 08:35:27.535"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:27.537" endtime="20201110 08:35:27.557"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.536" endtime="20201110 08:35:27.557"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.532" endtime="20201110 08:35:27.558"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.158" endtime="20201110 08:35:27.558"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.158" endtime="20201110 08:35:27.558"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:27.567" endtime="20201110 08:35:27.589"></status>
</kw>
<msg timestamp="20201110 08:35:27.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:27.565" endtime="20201110 08:35:27.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.592" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:27.591" endtime="20201110 08:35:27.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:27.593" endtime="20201110 08:35:27.596"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.563" endtime="20201110 08:35:27.596"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.560" endtime="20201110 08:35:27.597"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:27.604" endtime="20201110 08:35:27.890"></status>
</kw>
<msg timestamp="20201110 08:35:27.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020321125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020437431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:27.602" endtime="20201110 08:35:27.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020321125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020437431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:27.894" endtime="20201110 08:35:27.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:27.903" endtime="20201110 08:35:27.904"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.599" endtime="20201110 08:35:27.905"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.597" endtime="20201110 08:35:27.905"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:27.910" level="INFO">${RESULT} = [{'time': 0.020437431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011630600000000005, 'source_diff': 0.00011630600000000005}, {'time': 0.020557458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:27.906" endtime="20201110 08:35:27.910"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:27.923" level="INFO">${ACCURACY} = {'source_diff': [0.00011630600000000005, 0.0001170690000000009, 0.00011641600000000113, 0.0001165560000000003, 0.00011655500000000082, 0.00011694400000000077, 0.0001169439999999973, 0.0001162359999999...</msg>
<status status="PASS" starttime="20201110 08:35:27.911" endtime="20201110 08:35:27.924"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.928" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201110 08:35:27.927" endtime="20201110 08:35:27.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.930" level="INFO">VALUE: [0.00011630600000000005, 0.0001170690000000009, 0.00011641600000000113, 0.0001165560000000003, 0.00011655500000000082, 0.00011694400000000077, 0.0001169439999999973, 0.00011623599999999873, 0.00011640300000000103, 0.0001162360000000022, 0.00011673599999999923, 0.0001162369999999982, 0.00011699999999999905, 0.00011638900000000146, 0.00011644400000000027, 0.00011667999999999748, 0.00011691699999999763, 0.00011715300000000178, 0.00011625000000000177, 0.00011719499999999702, 0.00011641699999999713, 0.00011718100000000092, 0.00011713799999999927, 0.0001167499999999988, 0.00011722200000000016, 0.00011681900000000064, 0.00011659699999999953, 0.00011697199999999991, 0.00011644499999999974, 0.00011720900000000006, 0.00011611100000000207, 0.0001162360000000022, 0.0001168889999999985, 0.0001164300000000007, 0.00011623599999999873, 0.00011700000000000252, 0.00011662499999999867, 0.00011691600000000163, 0.00011652799999999769, 0.00011718100000000092, 0.00011699999999999905, 0.00011690299999999806, 0.00011683399999999969, 0.0001164300000000007, 0.00011693100000000067, 0.00011691599999999816, 0.00011669400000000052, 0.00011708300000000046, 0.00011634699999999928, 0.00011699999999999905]</msg>
<status status="PASS" starttime="20201110 08:35:27.929" endtime="20201110 08:35:27.931"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.924" endtime="20201110 08:35:27.932"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:27.934" endtime="20201110 08:35:27.936"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:27.938" endtime="20201110 08:35:27.957"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.936" endtime="20201110 08:35:27.958"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.933" endtime="20201110 08:35:27.959"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.559" endtime="20201110 08:35:27.959"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.558" endtime="20201110 08:35:27.959"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:27.968" endtime="20201110 08:35:27.989"></status>
</kw>
<msg timestamp="20201110 08:35:27.990" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:27.966" endtime="20201110 08:35:27.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.992" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:27.991" endtime="20201110 08:35:27.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:27.993" endtime="20201110 08:35:27.996"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.964" endtime="20201110 08:35:27.997"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.962" endtime="20201110 08:35:27.997"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:28.004" endtime="20201110 08:35:28.291"></status>
</kw>
<msg timestamp="20201110 08:35:28.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020470431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020588472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:28.002" endtime="20201110 08:35:28.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:28.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020470431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020588472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:28.295" endtime="20201110 08:35:28.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:28.303" endtime="20201110 08:35:28.305"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.999" endtime="20201110 08:35:28.306"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.998" endtime="20201110 08:35:28.306"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:28.310" level="INFO">${RESULT} = [{'time': 0.020588472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011804099999999929, 'source_diff': 0.00011804099999999929}, {'time': 0.020708472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:28.307" endtime="20201110 08:35:28.310"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:28.324" level="INFO">${ACCURACY} = {'source_diff': [0.00011804099999999929, 0.00011767999999999848, 0.00011755499999999836, 0.00011800000000000005, 0.00011722200000000016, 0.00011729199999999801, 0.00011787499999999992, 0.0001177499999...</msg>
<status status="PASS" starttime="20201110 08:35:28.311" endtime="20201110 08:35:28.324"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:28.329" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201110 08:35:28.328" endtime="20201110 08:35:28.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:28.331" level="INFO">VALUE: [0.00011804099999999929, 0.00011767999999999848, 0.00011755499999999836, 0.00011800000000000005, 0.00011722200000000016, 0.00011729199999999801, 0.00011787499999999992, 0.0001177499999999998, 0.000117695000000001, 0.00011812500000000017, 0.0001177499999999998, 0.00011797200000000091, 0.00011737499999999942, 0.00011809700000000103, 0.00011819399999999855, 0.0001172499999999993, 0.00011804199999999876, 0.0001172499999999993, 0.00011813899999999974, 0.00011801399999999962, 0.0001177629999999999, 0.00011779099999999904, 0.00011781900000000164, 0.00011736099999999985, 0.00011816599999999941, 0.00011726399999999887, 0.00011800000000000005, 0.00011818100000000192, 0.00011733400000000019, 0.00011744500000000074, 0.00011744500000000074, 0.00011786100000000035, 0.00011730500000000157, 0.00011745800000000084, 0.00011791600000000263, 0.00011791599999999916, 0.00011749999999999955, 0.00011756899999999793, 0.0001177499999999998, 0.00011732000000000062, 0.00011793100000000167, 0.00011763900000000271, 0.0001171109999999996, 0.00011748699999999945, 0.00011812500000000017, 0.00011748599999999998, 0.00011816699999999888, 0.00011731899999999768, 0.0001175690000000014, 0.00011732000000000062]</msg>
<status status="PASS" starttime="20201110 08:35:28.330" endtime="20201110 08:35:28.332"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:28.325" endtime="20201110 08:35:28.333"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:28.335" endtime="20201110 08:35:28.336"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:28.339" endtime="20201110 08:35:28.358"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:28.337" endtime="20201110 08:35:28.359"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:28.333" endtime="20201110 08:35:28.359"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.960" endtime="20201110 08:35:28.359"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.959" endtime="20201110 08:35:28.360"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:28.375" endtime="20201110 08:35:28.397"></status>
</kw>
<msg timestamp="20201110 08:35:28.398" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:28.372" endtime="20201110 08:35:28.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:28.400" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:28.399" endtime="20201110 08:35:28.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:28.401" endtime="20201110 08:35:28.404"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:28.368" endtime="20201110 08:35:28.404"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:28.365" endtime="20201110 08:35:28.405"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:28.411" endtime="20201110 08:35:28.697"></status>
</kw>
<msg timestamp="20201110 08:35:28.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02739625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027515167, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:35:28.410" endtime="20201110 08:35:28.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:28.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02739625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027515167, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:35:28.701" endtime="20201110 08:35:28.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:28.709" endtime="20201110 08:35:28.711"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:28.407" endtime="20201110 08:35:28.712"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:28.405" endtime="20201110 08:35:28.712"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:28.716" level="INFO">${RESULT} = [{'time': 0.027515167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011891699999999963, 'source_diff': 0.00011891699999999963}, {'time': 0.027637222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:28.713" endtime="20201110 08:35:28.716"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:28.730" level="INFO">${ACCURACY} = {'source_diff': [0.00011891699999999963, 0.00011915300000000031, 0.00011829099999999954, 0.00011837500000000042, 0.0001188049999999996, 0.00011874999999999733, 0.00011887500000000092, 0.00011891699999...</msg>
<status status="PASS" starttime="20201110 08:35:28.717" endtime="20201110 08:35:28.730"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:28.734" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201110 08:35:28.733" endtime="20201110 08:35:28.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:28.737" level="INFO">VALUE: [0.00011891699999999963, 0.00011915300000000031, 0.00011829099999999954, 0.00011837500000000042, 0.0001188049999999996, 0.00011874999999999733, 0.00011887500000000092, 0.00011891699999999963, 0.00011897200000000191, 0.00011869399999999905, 0.00011891699999999963, 0.00011917999999999998, 0.0001183049999999991, 0.00011873600000000123, 0.00011851400000000012, 0.00011891600000000016, 0.0001184300000000027, 0.00011893100000000267, 0.00011873600000000123, 0.00011924999999999783, 0.00011836099999999738, 0.00011831999999999815, 0.00011890199999999712, 0.00011866599999999991, 0.00011904100000000029, 0.00011899999999999758, 0.00011837500000000042, 0.0001188049999999996, 0.00011908399999999847, 0.0001192089999999986, 0.0001181110000000006, 0.0001190699999999989, 0.00011836100000000432, 0.00011843100000000217, 0.00011837499999999695, 0.00011809699999999757, 0.00011840300000000303, 0.00011901400000000062, 0.0001189579999999954, 0.00011872200000000166, 0.00011838899999999652, 0.0001185699999999984, 0.00011847300000000088, 0.00011870899999999462, 0.00011830600000000552, 0.00011812500000000364, 0.00011870799999999515, 0.0001188750000000044, 0.00011906899999999943, 0.00011848600000000098]</msg>
<status status="PASS" starttime="20201110 08:35:28.735" endtime="20201110 08:35:28.738"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:28.730" endtime="20201110 08:35:28.738"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:28.740" endtime="20201110 08:35:28.742"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:28.744" endtime="20201110 08:35:28.763"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:28.742" endtime="20201110 08:35:28.764"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:28.739" endtime="20201110 08:35:28.765"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:28.360" endtime="20201110 08:35:28.766"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:28.360" endtime="20201110 08:35:28.766"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:28.785" endtime="20201110 08:35:28.811"></status>
</kw>
<msg timestamp="20201110 08:35:28.812" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:28.781" endtime="20201110 08:35:28.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:28.817" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:28.814" endtime="20201110 08:35:28.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:28.819" endtime="20201110 08:35:28.825"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:28.776" endtime="20201110 08:35:28.826"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:28.771" endtime="20201110 08:35:28.827"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:28.841" endtime="20201110 08:35:29.131"></status>
</kw>
<msg timestamp="20201110 08:35:29.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032620181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032740181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:28.837" endtime="20201110 08:35:29.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:29.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032620181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032740181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:29.135" endtime="20201110 08:35:29.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:29.143" endtime="20201110 08:35:29.145"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:28.832" endtime="20201110 08:35:29.145"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:28.828" endtime="20201110 08:35:29.146"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:29.150" level="INFO">${RESULT} = [{'time': 0.032740181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012000000000000205, 'source_diff': 0.00012000000000000205}, {'time': 0.032863181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:29.147" endtime="20201110 08:35:29.150"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:29.166" level="INFO">${ACCURACY} = {'source_diff': [0.00012000000000000205, 0.00011980600000000008, 0.00011949999999999461, 0.00012006900000000043, 0.00011937499999999795, 0.00011945800000000284, 0.00011981999999999965, 0.0001196389999...</msg>
<status status="PASS" starttime="20201110 08:35:29.151" endtime="20201110 08:35:29.166"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:29.170" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201110 08:35:29.169" endtime="20201110 08:35:29.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:29.173" level="INFO">VALUE: [0.00012000000000000205, 0.00011980600000000008, 0.00011949999999999461, 0.00012006900000000043, 0.00011937499999999795, 0.00011945800000000284, 0.00011981999999999965, 0.00011963899999999777, 0.00011993099999999673, 0.00011958399999999897, 0.00012026399999999493, 0.00011963900000000471, 0.00011965300000000428, 0.0001201249999999987, 0.00012015299999999784, 0.00011983299999999975, 0.00011979100000000104, 0.00012000000000000205, 0.00011913899999999727, 0.00011963899999999777, 0.00011983399999999922, 0.00011958400000000591, 0.00012005600000000033, 0.000119695000000003, 0.0001192630000000014, 0.0001193050000000001, 0.0001193750000000049, 0.00011950000000000155, 0.00011987499999999846, 0.00011961099999999864, 0.00011950000000000155, 0.00011957000000000634, 0.00011987499999999846, 0.00011965299999999734, 0.00011981999999999965, 0.00012000000000000205, 0.00011931899999999968, 0.00011958300000000643, 0.00011987499999999846, 0.00011951400000000112, 0.00011969399999999658, 0.00011936100000000532, 0.00011926400000000087, 0.00012016699999999741, 0.00011990300000000453, 0.00011981900000000018, 0.00011998700000000195, 0.00011976399999999443, 0.00011963900000000471, 0.00012000000000000205]</msg>
<status status="PASS" starttime="20201110 08:35:29.171" endtime="20201110 08:35:29.173"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:29.166" endtime="20201110 08:35:29.174"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:29.176" endtime="20201110 08:35:29.177"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:29.180" endtime="20201110 08:35:29.199"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:29.178" endtime="20201110 08:35:29.200"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:29.175" endtime="20201110 08:35:29.200"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:28.768" endtime="20201110 08:35:29.200"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:28.767" endtime="20201110 08:35:29.200"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:29.209" endtime="20201110 08:35:29.231"></status>
</kw>
<msg timestamp="20201110 08:35:29.232" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:29.207" endtime="20201110 08:35:29.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:29.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:29.233" endtime="20201110 08:35:29.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:29.235" endtime="20201110 08:35:29.238"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:29.205" endtime="20201110 08:35:29.238"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:29.203" endtime="20201110 08:35:29.239"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:29.245" endtime="20201110 08:35:29.531"></status>
</kw>
<msg timestamp="20201110 08:35:29.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019829306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019950194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:29.244" endtime="20201110 08:35:29.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:29.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019829306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019950194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:29.535" endtime="20201110 08:35:29.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:29.544" endtime="20201110 08:35:29.545"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:29.241" endtime="20201110 08:35:29.546"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:29.239" endtime="20201110 08:35:29.546"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:29.550" level="INFO">${RESULT} = [{'time': 0.019950194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012088799999999955, 'source_diff': 0.00012088799999999955}, {'time': 0.020077208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:29.547" endtime="20201110 08:35:29.550"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:29.565" level="INFO">${ACCURACY} = {'source_diff': [0.00012088799999999955, 0.00012099999999999958, 0.00012073599999999976, 0.00012087499999999946, 0.00012055600000000083, 0.00012088899999999903, 0.00012101399999999915, 0.0001208199999...</msg>
<status status="PASS" starttime="20201110 08:35:29.551" endtime="20201110 08:35:29.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:29.569" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201110 08:35:29.568" endtime="20201110 08:35:29.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:29.572" level="INFO">VALUE: [0.00012088799999999955, 0.00012099999999999958, 0.00012073599999999976, 0.00012087499999999946, 0.00012055600000000083, 0.00012088899999999903, 0.00012101399999999915, 0.00012081999999999718, 0.00012061199999999911, 0.00012069400000000105, 0.00012119399999999808, 0.00012106899999999796, 0.00012087499999999946, 0.00012015300000000131, 0.0001203050000000011, 0.00012013899999999827, 0.00012087499999999946, 0.00012105500000000186, 0.00012116699999999841, 0.00012099999999999958, 0.0001204310000000007, 0.00012066599999999844, 0.00012074999999999933, 0.00012040199999999862, 0.00012040300000000156, 0.00012055500000000136, 0.00012117999999999851, 0.00012101399999999915, 0.0001205700000000004, 0.00012030600000000058, 0.00012081999999999718, 0.00012063900000000224, 0.00012104099999999882, 0.00012097200000000044, 0.00012070800000000062, 0.0001207500000000028, 0.00012013900000000174, 0.00012054199999999779, 0.00012043099999999723, 0.00012082000000000065, 0.00012051400000000212, 0.00012083300000000075, 0.00012065200000000234, 0.00012066599999999844, 0.00012040199999999862, 0.00012054100000000179, 0.00012069400000000105, 0.00012118100000000145, 0.00012123699999999973, 0.00012080600000000108]</msg>
<status status="PASS" starttime="20201110 08:35:29.570" endtime="20201110 08:35:29.573"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:29.566" endtime="20201110 08:35:29.573"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:29.576" endtime="20201110 08:35:29.577"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:29.579" endtime="20201110 08:35:29.598"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:29.577" endtime="20201110 08:35:29.599"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:29.574" endtime="20201110 08:35:29.599"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:29.201" endtime="20201110 08:35:29.600"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:29.201" endtime="20201110 08:35:29.600"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:29.608" endtime="20201110 08:35:29.629"></status>
</kw>
<msg timestamp="20201110 08:35:29.629" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:29.607" endtime="20201110 08:35:29.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:29.632" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:29.630" endtime="20201110 08:35:29.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:29.633" endtime="20201110 08:35:29.636"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:29.604" endtime="20201110 08:35:29.636"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:29.602" endtime="20201110 08:35:29.637"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:29.643" endtime="20201110 08:35:29.931"></status>
</kw>
<msg timestamp="20201110 08:35:29.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020033417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020155611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:29.642" endtime="20201110 08:35:29.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:29.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020033417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020155611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:29.935" endtime="20201110 08:35:29.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:29.944" endtime="20201110 08:35:29.945"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:29.639" endtime="20201110 08:35:29.946"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:29.637" endtime="20201110 08:35:29.946"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:29.950" level="INFO">${RESULT} = [{'time': 0.020155611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012219399999999908, 'source_diff': 0.00012219399999999908}, {'time': 0.020281625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:29.947" endtime="20201110 08:35:29.950"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:29.965" level="INFO">${ACCURACY} = {'source_diff': [0.00012219399999999908, 0.00012148600000000051, 0.00012206999999999843, 0.0001217639999999999, 0.00012213900000000028, 0.00012173599999999729, 0.0001213189999999982, 0.000121097000000...</msg>
<status status="PASS" starttime="20201110 08:35:29.951" endtime="20201110 08:35:29.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:29.969" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201110 08:35:29.968" endtime="20201110 08:35:29.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:29.972" level="INFO">VALUE: [0.00012219399999999908, 0.00012148600000000051, 0.00012206999999999843, 0.0001217639999999999, 0.00012213900000000028, 0.00012173599999999729, 0.0001213189999999982, 0.00012109700000000057, 0.00012206899999999896, 0.00012220799999999865, 0.00012202799999999972, 0.0001219449999999983, 0.00012213900000000028, 0.0001217639999999999, 0.00012200000000000058, 0.00012155599999999836, 0.00012156899999999846, 0.00012204099999999982, 0.00012156900000000193, 0.0001219579999999984, 0.00012202799999999972, 0.00012179099999999957, 0.00012212499999999724, 0.00012132000000000115, 0.00012204200000000276, 0.00012163899999999978, 0.00012136199999999986, 0.00012172300000000066, 0.00012198700000000048, 0.00012166599999999944, 0.0001216250000000002, 0.00012212499999999724, 0.00012186100000000089, 0.00012219399999999908, 0.0001219310000000022, 0.00012219499999999855, 0.00012186099999999742, 0.00012202700000000025, 0.00012115300000000231, 0.0001218189999999987, 0.00012141599999999919, 0.00012138899999999953, 0.00012129200000000201, 0.0001218189999999987, 0.00012206899999999896, 0.00012218000000000298, 0.00012206999999999843, 0.00012148600000000051, 0.00012186100000000089, 0.0001213189999999982]</msg>
<status status="PASS" starttime="20201110 08:35:29.970" endtime="20201110 08:35:29.972"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:29.966" endtime="20201110 08:35:29.973"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:29.975" endtime="20201110 08:35:29.977"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:29.979" endtime="20201110 08:35:29.998"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:29.977" endtime="20201110 08:35:29.999"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:29.974" endtime="20201110 08:35:29.999"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:29.601" endtime="20201110 08:35:29.999"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:29.600" endtime="20201110 08:35:29.999"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.665" endtime="20201110 08:35:30.000"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:30.004" endtime="20201110 08:35:30.023"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.002" endtime="20201110 08:35:30.023"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.001" endtime="20201110 08:35:30.024"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201110 08:34:48.594" endtime="20201110 08:35:30.024" critical="yes"></status>
</test>
<status status="PASS" starttime="20201110 08:34:05.985" endtime="20201110 08:35:30.028"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201110 08:35:30.083" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201110 08:35:30.092" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201110 08:35:31.154" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201110 08:35:30.082" endtime="20201110 08:35:31.155"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201110 08:35:32.160" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20201110 08:35:31.157" endtime="20201110 08:35:32.162"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.081" endtime="20201110 08:35:32.163"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:32.167" endtime="20201110 08:35:32.411"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.164" endtime="20201110 08:35:32.412"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:32.424" endtime="20201110 08:35:32.445"></status>
</kw>
<msg timestamp="20201110 08:35:32.446" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:32.423" endtime="20201110 08:35:32.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:32.448" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:32.447" endtime="20201110 08:35:32.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:35:32.451" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:35:32.449" endtime="20201110 08:35:32.452"></status>
</kw>
<status status="FAIL" starttime="20201110 08:35:32.420" endtime="20201110 08:35:32.452"></status>
</kw>
<status status="FAIL" starttime="20201110 08:35:32.418" endtime="20201110 08:35:32.453"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.417" endtime="20201110 08:35:32.453"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:35:32.458" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:35:32.457" endtime="20201110 08:35:32.459"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.454" endtime="20201110 08:35:32.459"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.416" endtime="20201110 08:35:32.459"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.415" endtime="20201110 08:35:32.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:32.460" endtime="20201110 08:35:32.462"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.414" endtime="20201110 08:35:32.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:32.463" endtime="20201110 08:35:32.465"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.412" endtime="20201110 08:35:32.465"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.079" endtime="20201110 08:35:32.466"></status>
</kw>
<test id="s1-s4-t1" name="Measure Sleep Jitter With Increasing Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:32.472" endtime="20201110 08:35:32.491"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.470" endtime="20201110 08:35:32.492"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:32.505" endtime="20201110 08:35:32.523"></status>
</kw>
<msg timestamp="20201110 08:35:32.524" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:32.503" endtime="20201110 08:35:32.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:32.526" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:32.525" endtime="20201110 08:35:32.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:35:32.529" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:35:32.527" endtime="20201110 08:35:32.530"></status>
</kw>
<status status="FAIL" starttime="20201110 08:35:32.500" endtime="20201110 08:35:32.530"></status>
</kw>
<status status="FAIL" starttime="20201110 08:35:32.498" endtime="20201110 08:35:32.531"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.497" endtime="20201110 08:35:32.531"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:35:32.535" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:35:32.534" endtime="20201110 08:35:32.535"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.532" endtime="20201110 08:35:32.536"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.496" endtime="20201110 08:35:32.536"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.495" endtime="20201110 08:35:32.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:32.537" endtime="20201110 08:35:32.538"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.494" endtime="20201110 08:35:32.539"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.492" endtime="20201110 08:35:32.539"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.469" endtime="20201110 08:35:32.539"></status>
</kw>
<kw name="${n} IN RANGE [ 10 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:35:32.543" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:32.552" endtime="20201110 08:35:34.640"></status>
</kw>
<msg timestamp="20201110 08:35:34.641" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 1350587, 'start-iter': 1, 'wakeups': [1360664, 1370604, 1380595, 13905...</msg>
<status status="PASS" starttime="20201110 08:35:32.551" endtime="20201110 08:35:34.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:34.647" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 1350587, 'start-iter': 1, 'wakeups': [1360664, 1370604, 1380595, 13905...</msg>
<status status="PASS" starttime="20201110 08:35:34.644" endtime="20201110 08:35:34.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:34.651" endtime="20201110 08:35:34.654"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.548" endtime="20201110 08:35:34.655"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.545" endtime="20201110 08:35:34.656"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:34.662" level="INFO">${RESULT} = {'start-iter': 1, 'start-time': 1350587, 'timer-count': 1, 'timer-interval': 10000, 'wakeups': [1360664, 1370604, 1380595, 1390595, 1400595, 1410595, 1420595, 1430595, 1440595, 1450595, 1460595, 14705...</msg>
<status status="PASS" starttime="20201110 08:35:34.658" endtime="20201110 08:35:34.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:34.671" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:34.668" endtime="20201110 08:35:34.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:34.675" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:34.673" endtime="20201110 08:35:34.676"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:34.664" endtime="20201110 08:35:34.677"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:34.685" level="INFO">NAME: 1-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:34.683" endtime="20201110 08:35:34.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:34.689" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:34.687" endtime="20201110 08:35:34.690"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:34.678" endtime="20201110 08:35:34.691"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:34.700" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201110 08:35:34.697" endtime="20201110 08:35:34.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:34.704" level="INFO">VALUE: 1350587</msg>
<status status="PASS" starttime="20201110 08:35:34.702" endtime="20201110 08:35:34.705"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:34.692" endtime="20201110 08:35:34.706"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:34.714" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:34.712" endtime="20201110 08:35:34.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:34.719" level="INFO">VALUE: [1360664, 1370604, 1380595, 1390595, 1400595, 1410595, 1420595, 1430595, 1440595, 1450595, 1460595, 1470595, 1480595, 1490595, 1500595, 1510595, 1520595, 1530595, 1540595, 1550595, 1560595, 1570595, 1580595, 1590595, 1600595, 1610595, 1620595, 1630595, 1640595, 1650595, 1660595, 1670595, 1680595, 1690595, 1700595, 1710595, 1720595, 1730595, 1740595, 1750595, 1760595, 1770595, 1780595, 1790595, 1800595, 1810595, 1820595, 1830595, 1840595, 1850595, 1860595, 1870595, 1880595, 1890595, 1900595, 1910595, 1920595, 1930595, 1940595, 1950595, 1960595, 1970595, 1980595, 1990595, 2000595, 2010595, 2020595, 2030595, 2040595, 2050595, 2060595, 2070595, 2080595, 2090595, 2100595, 2110595, 2120595, 2130595, 2140595, 2150595, 2160595, 2170595, 2180595, 2190595, 2200595, 2210595, 2220595, 2230595, 2240595, 2250595, 2260595, 2270595, 2280595, 2290595, 2300595, 2310595, 2320595, 2330595, 2340595, 2350595]</msg>
<status status="PASS" starttime="20201110 08:35:34.717" endtime="20201110 08:35:34.720"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:34.707" endtime="20201110 08:35:34.721"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:34.735" endtime="20201110 08:35:35.038"></status>
</kw>
<msg timestamp="20201110 08:35:35.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071193569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.081276528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:34.731" endtime="20201110 08:35:35.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:35.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071193569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.081276528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:35.042" endtime="20201110 08:35:35.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:35.049" endtime="20201110 08:35:35.051"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:34.726" endtime="20201110 08:35:35.052"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:34.722" endtime="20201110 08:35:35.052"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:35.076" level="INFO">${RESULT} = {'source_diff': [0, 0.010082959000000002, 0.009936389000000004, 0.009991929999999996, 0.010000888999999999, 0.010000958000000004, 0.010000903000000005, 0.010000944999999983, 0.010000889000000013, 0.01...</msg>
<status status="PASS" starttime="20201110 08:35:35.053" endtime="20201110 08:35:35.077"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:35.081" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201110 08:35:35.080" endtime="20201110 08:35:35.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:35.083" level="INFO">VALUE: 0.071193569</msg>
<status status="PASS" starttime="20201110 08:35:35.082" endtime="20201110 08:35:35.083"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.077" endtime="20201110 08:35:35.084"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:35.088" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:35.087" endtime="20201110 08:35:35.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:35.090" level="INFO">VALUE: [0.081276528, 0.091212917, 0.101204847, 0.111205736, 0.121206694, 0.131207597, 0.141208542, 0.151209431, 0.161210375, 0.171211278, 0.181212222, 0.191213194, 0.201214069, 0.211214986, 0.221215917, 0.231216833, 0.241217847, 0.251218681, 0.261219625, 0.271220542, 0.281221472, 0.291222375, 0.301223306, 0.311224222, 0.321225153, 0.331226083, 0.341227056, 0.351227917, 0.361228875, 0.371229792, 0.381230722, 0.391231625, 0.401232556, 0.411233472, 0.421234417, 0.431235347, 0.441236292, 0.451237167, 0.461238111, 0.471239014, 0.481239958, 0.491240861, 0.501241806, 0.511242708, 0.521243653, 0.531244583, 0.541245514, 0.551246417, 0.561247417, 0.571248264, 0.581249208, 0.591250111, 0.601251069, 0.611251972, 0.621252903, 0.631253847, 0.641254764, 0.651255681, 0.661256597, 0.671257514, 0.681258458, 0.691259361, 0.701260375, 0.711261222, 0.721262181, 0.731263069, 0.741264, 0.751264917, 0.761265875, 0.771266806, 0.781267708, 0.791268625, 0.801269556, 0.811270472, 0.821271403, 0.831272319, 0.84127325, 0.851274181, 0.861275097, 0.871276014, 0.881276986, 0.891277861, 0.901278819, 0.911279736, 0.921280653, 0.931281569, 0.9412825, 0.951283417, 0.961284361, 0.971285264, 0.981286222, 0.991287125, 1.001288069, 1.011288972, 1.021289903, 1.031290833, 1.04129175, 1.051292667, 1.061293681, 1.071294528] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:35.089" endtime="20201110 08:35:35.091"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.084" endtime="20201110 08:35:35.091"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:35.094" endtime="20201110 08:35:35.095"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:35.097" endtime="20201110 08:35:35.116"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.096" endtime="20201110 08:35:35.117"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.092" endtime="20201110 08:35:35.117"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.543" endtime="20201110 08:35:35.118"></status>
</kw>
<msg timestamp="20201110 08:35:35.118" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:35.126" endtime="20201110 08:35:37.213"></status>
</kw>
<msg timestamp="20201110 08:35:37.214" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 3923024, 'start-iter': 1, 'wakeups': [3933032, 3943032, 3953032, 39630...</msg>
<status status="PASS" starttime="20201110 08:35:35.124" endtime="20201110 08:35:37.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:37.220" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 3923024, 'start-iter': 1, 'wakeups': [3933032, 3943032, 3953032, 39630...</msg>
<status status="PASS" starttime="20201110 08:35:37.216" endtime="20201110 08:35:37.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:37.222" endtime="20201110 08:35:37.227"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.122" endtime="20201110 08:35:37.228"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.120" endtime="20201110 08:35:37.229"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:37.235" level="INFO">${RESULT} = {'start-iter': 1, 'start-time': 3923024, 'timer-count': 1, 'timer-interval': 10000, 'wakeups': [3933032, 3943032, 3953032, 3963032, 3973032, 3983032, 3993032, 4003032, 4013032, 4023032, 4033032, 40430...</msg>
<status status="PASS" starttime="20201110 08:35:37.231" endtime="20201110 08:35:37.235"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:37.244" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:37.241" endtime="20201110 08:35:37.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:37.249" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:37.246" endtime="20201110 08:35:37.249"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:37.237" endtime="20201110 08:35:37.250"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:37.259" level="INFO">NAME: 1-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:37.257" endtime="20201110 08:35:37.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:37.263" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:37.261" endtime="20201110 08:35:37.264"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:37.252" endtime="20201110 08:35:37.265"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:37.273" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201110 08:35:37.271" endtime="20201110 08:35:37.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:37.278" level="INFO">VALUE: 3923024</msg>
<status status="PASS" starttime="20201110 08:35:37.276" endtime="20201110 08:35:37.279"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:37.266" endtime="20201110 08:35:37.280"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:37.288" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:37.286" endtime="20201110 08:35:37.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:37.293" level="INFO">VALUE: [3933032, 3943032, 3953032, 3963032, 3973032, 3983032, 3993032, 4003032, 4013032, 4023032, 4033032, 4043032, 4053032, 4063032, 4073032, 4083032, 4093032, 4103032, 4113032, 4123032, 4133032, 4143032, 4153032, 4163032, 4173032, 4183032, 4193032, 4203032, 4213032, 4223032, 4233032, 4243032, 4253032, 4263032, 4273032, 4283032, 4293032, 4303032, 4313032, 4323032, 4333032, 4343032, 4353032, 4363032, 4373032, 4383032, 4393032, 4403032, 4413032, 4423032, 4433032, 4443032, 4453032, 4463032, 4473032, 4483032, 4493032, 4503032, 4513032, 4523032, 4533032, 4543032, 4553032, 4563032, 4573032, 4583032, 4593032, 4603032, 4613032, 4623032, 4633032, 4643032, 4653032, 4663032, 4673032, 4683032, 4693032, 4703032, 4713032, 4723032, 4733032, 4743032, 4753032, 4763032, 4773032, 4783032, 4793032, 4803032, 4813032, 4823032, 4833032, 4843032, 4853032, 4863032, 4873032, 4883032, 4893032, 4903032, 4913032, 4923032]</msg>
<status status="PASS" starttime="20201110 08:35:37.290" endtime="20201110 08:35:37.294"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:37.281" endtime="20201110 08:35:37.295"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:37.308" endtime="20201110 08:35:37.607"></status>
</kw>
<msg timestamp="20201110 08:35:37.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018300778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02830975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:35:37.305" endtime="20201110 08:35:37.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:37.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018300778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02830975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:35:37.611" endtime="20201110 08:35:37.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:37.619" endtime="20201110 08:35:37.620"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:37.299" endtime="20201110 08:35:37.621"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:37.296" endtime="20201110 08:35:37.621"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:37.651" level="INFO">${RESULT} = {'source_diff': [0, 0.010008972000000001, 0.010000971999999997, 0.010000875, 0.010000917000000005, 0.01000094399999999, 0.010000903000000005, 0.010000944999999997, 0.010000888, 0.010000945000000011, 0...</msg>
<status status="PASS" starttime="20201110 08:35:37.622" endtime="20201110 08:35:37.651"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:37.656" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201110 08:35:37.654" endtime="20201110 08:35:37.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:37.658" level="INFO">VALUE: 0.018300778</msg>
<status status="PASS" starttime="20201110 08:35:37.657" endtime="20201110 08:35:37.658"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:37.652" endtime="20201110 08:35:37.659"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:37.664" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:37.663" endtime="20201110 08:35:37.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:37.666" level="INFO">VALUE: [0.02830975, 0.038310722, 0.048311597, 0.058312514, 0.068313458, 0.078314361, 0.088315306, 0.098316194, 0.108317139, 0.118318042, 0.128318986, 0.138319917, 0.148320833, 0.158321736, 0.168322681, 0.178323583, 0.188324542, 0.198325431, 0.208326389, 0.218327292, 0.228328222, 0.238329139, 0.248330069, 0.258330972, 0.268331917, 0.278332819, 0.288333764, 0.298334736, 0.308335611, 0.318336542, 0.328337458, 0.338338375, 0.348339306, 0.358340222, 0.368341167, 0.378342083, 0.388343028, 0.398343917, 0.408344903, 0.418345833, 0.428346708, 0.438347625, 0.448348569, 0.458349486, 0.468350417, 0.478351333, 0.488352264, 0.498353167, 0.508354111, 0.518355028, 0.528355958, 0.538356889, 0.548357806, 0.558358722, 0.568359667, 0.578360569, 0.588361514, 0.598362431, 0.608363361, 0.618364278, 0.628365208, 0.638366125, 0.648367069, 0.658367972, 0.668368917, 0.678369861, 0.688370778, 0.698371681, 0.708372625, 0.718373556, 0.728374472, 0.738375389, 0.748376319, 0.758377222, 0.768378181, 0.778379097, 0.788380014, 0.798380931, 0.808381861, 0.818382778, 0.82838375, 0.838384625, 0.848385569, 0.858386486, 0.868387472, 0.878388347, 0.888389264, 0.898390181, 0.908391139, 0.918392083, 0.928392972, 0.938393875, 0.948394819, 0.958395736, 0.968396667, 0.978397611, 0.988398514, 0.998399431, 1.008400361, 1.018401333] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:37.665" endtime="20201110 08:35:37.667"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:37.659" endtime="20201110 08:35:37.667"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:37.669" endtime="20201110 08:35:37.671"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:37.673" endtime="20201110 08:35:37.692"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:37.671" endtime="20201110 08:35:37.693"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:37.668" endtime="20201110 08:35:37.694"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.118" endtime="20201110 08:35:37.694"></status>
</kw>
<msg timestamp="20201110 08:35:37.694" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:37.702" endtime="20201110 08:35:39.789"></status>
</kw>
<msg timestamp="20201110 08:35:39.791" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 6499484, 'start-iter': 1, 'wakeups': [6509491, 6519492, 6529492, 65394...</msg>
<status status="PASS" starttime="20201110 08:35:37.701" endtime="20201110 08:35:39.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:39.797" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 6499484, 'start-iter': 1, 'wakeups': [6509491, 6519492, 6529492, 65394...</msg>
<status status="PASS" starttime="20201110 08:35:39.793" endtime="20201110 08:35:39.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:39.799" endtime="20201110 08:35:39.803"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:37.698" endtime="20201110 08:35:39.804"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:37.696" endtime="20201110 08:35:39.805"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:39.811" level="INFO">${RESULT} = {'start-iter': 1, 'start-time': 6499484, 'timer-count': 1, 'timer-interval': 10000, 'wakeups': [6509491, 6519492, 6529492, 6539492, 6549492, 6559492, 6569492, 6579492, 6589492, 6599492, 6609492, 66194...</msg>
<status status="PASS" starttime="20201110 08:35:39.807" endtime="20201110 08:35:39.812"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:39.820" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:39.818" endtime="20201110 08:35:39.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:39.827" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:39.825" endtime="20201110 08:35:39.828"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:39.813" endtime="20201110 08:35:39.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:39.838" level="INFO">NAME: 1-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:39.836" endtime="20201110 08:35:39.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:39.843" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:39.840" endtime="20201110 08:35:39.843"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:39.831" endtime="20201110 08:35:39.844"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:39.860" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201110 08:35:39.858" endtime="20201110 08:35:39.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:39.865" level="INFO">VALUE: 6499484</msg>
<status status="PASS" starttime="20201110 08:35:39.863" endtime="20201110 08:35:39.866"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:39.852" endtime="20201110 08:35:39.867"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:39.876" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:39.874" endtime="20201110 08:35:39.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:39.881" level="INFO">VALUE: [6509491, 6519492, 6529492, 6539492, 6549492, 6559492, 6569492, 6579492, 6589492, 6599492, 6609492, 6619492, 6629492, 6639492, 6649492, 6659492, 6669492, 6679492, 6689492, 6699492, 6709492, 6719492, 6729492, 6739492, 6749492, 6759492, 6769492, 6779492, 6789492, 6799492, 6809492, 6819492, 6829492, 6839492, 6849492, 6859492, 6869492, 6879492, 6889492, 6899492, 6909492, 6919492, 6929492, 6939492, 6949492, 6959492, 6969492, 6979492, 6989492, 6999492, 7009492, 7019492, 7029492, 7039492, 7049492, 7059492, 7069492, 7079492, 7089492, 7099492, 7109492, 7119492, 7129492, 7139492, 7149492, 7159492, 7169492, 7179492, 7189492, 7199492, 7209492, 7219492, 7229492, 7239492, 7249492, 7259492, 7269492, 7279492, 7289492, 7299492, 7309492, 7319492, 7329492, 7339492, 7349492, 7359492, 7369492, 7379492, 7389492, 7399492, 7409492, 7419492, 7429492, 7439492, 7449492, 7459492, 7469492, 7479492, 7489492, 7499492]</msg>
<status status="PASS" starttime="20201110 08:35:39.878" endtime="20201110 08:35:39.882"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:39.868" endtime="20201110 08:35:39.883"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:39.900" endtime="20201110 08:35:40.200"></status>
</kw>
<msg timestamp="20201110 08:35:40.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018690486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028699069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:39.896" endtime="20201110 08:35:40.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:40.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018690486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028699069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:40.204" endtime="20201110 08:35:40.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:40.212" endtime="20201110 08:35:40.213"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:39.890" endtime="20201110 08:35:40.214"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:39.884" endtime="20201110 08:35:40.214"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:40.239" level="INFO">${RESULT} = {'source_diff': [0, 0.010008583000000001, 0.010001930999999999, 0.010000930999999998, 0.010000902000000006, 0.010000958999999997, 0.010000888999999999, 0.010000943999999998, 0.010000903000000005, 0.01...</msg>
<status status="PASS" starttime="20201110 08:35:40.215" endtime="20201110 08:35:40.239"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:40.243" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201110 08:35:40.242" endtime="20201110 08:35:40.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:40.245" level="INFO">VALUE: 0.018690486</msg>
<status status="PASS" starttime="20201110 08:35:40.244" endtime="20201110 08:35:40.246"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.240" endtime="20201110 08:35:40.246"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:40.251" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:40.250" endtime="20201110 08:35:40.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:40.253" level="INFO">VALUE: [0.028699069, 0.038701, 0.048701931, 0.058702833, 0.068703792, 0.078704681, 0.088705625, 0.098706528, 0.108707472, 0.118708389, 0.128709306, 0.138710222, 0.148711153, 0.158712069, 0.168713014, 0.178713917, 0.188714861, 0.198715764, 0.20871675, 0.218717611, 0.228718542, 0.238719458, 0.248720403, 0.258721306, 0.268722236, 0.278723153, 0.288724097, 0.298725014, 0.308725958, 0.318726847, 0.328727792, 0.338728694, 0.348729639, 0.358730542, 0.368731486, 0.378732403, 0.388733347, 0.398734278, 0.408735194, 0.418736097, 0.428737028, 0.438737944, 0.448738931, 0.458739806, 0.468740736, 0.478741639, 0.488742597, 0.4987435, 0.508744472, 0.518745389, 0.528746278, 0.53874725, 0.548748125, 0.558749042, 0.568750028, 0.578750889, 0.588751833, 0.59875275, 0.608753681, 0.618754597, 0.628755528, 0.638756486, 0.648757403, 0.658758306, 0.668759236, 0.678760167, 0.688761083, 0.698762, 0.708762944, 0.718763847, 0.728764792, 0.738765694, 0.748766653, 0.758767542, 0.768768486, 0.778769403, 0.788770319, 0.79877125, 0.808772167, 0.818773083, 0.828774069, 0.838774931, 0.848775861, 0.858776778, 0.868777722, 0.878778625, 0.888779556, 0.898780486, 0.908781472, 0.918782333, 0.928783264, 0.938784167, 0.948785111, 0.958786014, 0.968786958, 0.978787875, 0.988788806, 0.998789736, 1.008790653, 1.018791625] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:40.252" endtime="20201110 08:35:40.254"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.247" endtime="20201110 08:35:40.254"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:40.256" endtime="20201110 08:35:40.258"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:40.260" endtime="20201110 08:35:40.279"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.258" endtime="20201110 08:35:40.280"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.255" endtime="20201110 08:35:40.280"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:37.695" endtime="20201110 08:35:40.280"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.541" endtime="20201110 08:35:40.281"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.540" endtime="20201110 08:35:40.281"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:35:40.283" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:40.291" endtime="20201110 08:35:42.377"></status>
</kw>
<msg timestamp="20201110 08:35:42.379" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 9088233, 'start-iter': 1, 'wakeups': [9098262, 9108241, 9118248, 91282...</msg>
<status status="PASS" starttime="20201110 08:35:40.290" endtime="20201110 08:35:42.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:42.386" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 9088233, 'start-iter': 1, 'wakeups': [9098262, 9108241, 9118248, 91282...</msg>
<status status="PASS" starttime="20201110 08:35:42.382" endtime="20201110 08:35:42.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:42.388" endtime="20201110 08:35:42.391"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.287" endtime="20201110 08:35:42.393"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.285" endtime="20201110 08:35:42.394"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:42.399" level="INFO">${RESULT} = {'start-iter': 1, 'start-time': 9088233, 'timer-count': 2, 'timer-interval': 10000, 'wakeups': [9098262, 9108241, 9118248, 9128249, 9138249, 9148249, 9158249, 9168249, 9178249, 9188249, 9198249, 92082...</msg>
<status status="PASS" starttime="20201110 08:35:42.395" endtime="20201110 08:35:42.399"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:42.407" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:42.405" endtime="20201110 08:35:42.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:42.412" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:42.410" endtime="20201110 08:35:42.412"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:42.401" endtime="20201110 08:35:42.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:42.422" level="INFO">NAME: 2-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:42.420" endtime="20201110 08:35:42.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:42.426" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:42.424" endtime="20201110 08:35:42.427"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:42.415" endtime="20201110 08:35:42.428"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:42.438" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201110 08:35:42.436" endtime="20201110 08:35:42.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:42.442" level="INFO">VALUE: 9088233</msg>
<status status="PASS" starttime="20201110 08:35:42.440" endtime="20201110 08:35:42.443"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:42.429" endtime="20201110 08:35:42.444"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:42.452" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:42.450" endtime="20201110 08:35:42.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:42.458" level="INFO">VALUE: [9098262, 9108241, 9118248, 9128249, 9138249, 9148249, 9158249, 9168249, 9178249, 9188249, 9198249, 9208249, 9218249, 9228249, 9238249, 9248249, 9258249, 9268249, 9278249, 9288249, 9298249, 9308249, 9318249, 9328249, 9338249, 9348249, 9358249, 9368249, 9378249, 9388249, 9398249, 9408249, 9418249, 9428249, 9438249, 9448249, 9458249, 9468249, 9478249, 9488249, 9498249, 9508249, 9518249, 9528249, 9538249, 9548249, 9558249, 9568249, 9578249, 9588249, 9598249, 9608249, 9618249, 9628249, 9638249, 9648249, 9658249, 9668249, 9678249, 9688249, 9698249, 9708249, 9718249, 9728249, 9738249, 9748249, 9758249, 9768249, 9778249, 9788249, 9798249, 9808249, 9818249, 9828249, 9838249, 9848249, 9858249, 9868249, 9878249, 9888249, 9898249, 9908249, 9918249, 9928249, 9938249, 9948249, 9958249, 9968249, 9978249, 9988249, 9998249, 10008249, 10018249, 10028249, 10038249, 10048249, 10058249, 10068249, 10078249, 10088249]</msg>
<status status="PASS" starttime="20201110 08:35:42.455" endtime="20201110 08:35:42.459"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:42.445" endtime="20201110 08:35:42.460"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:42.469" endtime="20201110 08:35:42.761"></status>
</kw>
<msg timestamp="20201110 08:35:42.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020750389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030780569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:42.467" endtime="20201110 08:35:42.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:42.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020750389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030780569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:42.765" endtime="20201110 08:35:42.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:42.773" endtime="20201110 08:35:42.774"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:42.464" endtime="20201110 08:35:42.775"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:42.461" endtime="20201110 08:35:42.775"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:42.799" level="INFO">${RESULT} = {'source_diff': [0, 0.01003018, 0.009979737000000002, 0.010008012999999996, 0.010001916999999999, 0.010000945000000004, 0.010000915999999999, 0.010000931000000005, 0.010000915999999999, 0.010000930999...</msg>
<status status="PASS" starttime="20201110 08:35:42.776" endtime="20201110 08:35:42.799"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:42.804" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201110 08:35:42.803" endtime="20201110 08:35:42.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:42.806" level="INFO">VALUE: 0.020750389</msg>
<status status="PASS" starttime="20201110 08:35:42.805" endtime="20201110 08:35:42.807"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:42.800" endtime="20201110 08:35:42.807"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:42.812" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:42.811" endtime="20201110 08:35:42.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:42.814" level="INFO">VALUE: [0.030780569, 0.040760306, 0.050768319, 0.060770236, 0.070771181, 0.080772097, 0.090773028, 0.100773944, 0.110774875, 0.120775792, 0.130776722, 0.140777667, 0.150778569, 0.1607795, 0.170780417, 0.180781333, 0.190782264, 0.200783181, 0.210784097, 0.220785083, 0.230785944, 0.240786889, 0.250787792, 0.260788722, 0.270789653, 0.280790583, 0.290791486, 0.300792417, 0.310793347, 0.320794278, 0.330795208, 0.340796111, 0.350797042, 0.360797972, 0.370798889, 0.380799861, 0.39080075, 0.400801708, 0.410802639, 0.420803528, 0.430804431, 0.440805361, 0.450806292, 0.460807208, 0.470808125, 0.480809056, 0.49081, 0.500810903, 0.510811847, 0.520812806, 0.530813694, 0.540814639, 0.550815528, 0.560816472, 0.570817375, 0.580818306, 0.590819236, 0.600820153, 0.610821069, 0.620822028, 0.630823, 0.640823861, 0.650824778, 0.660825708, 0.670826625, 0.680827569, 0.690828472, 0.700829458, 0.710830347, 0.720831264, 0.730832167, 0.740833097, 0.750834028, 0.760834944, 0.770835875, 0.780836792, 0.790837764, 0.800838667, 0.810839611, 0.820840528, 0.830841431, 0.840842417, 0.850843278, 0.86084425, 0.870845125, 0.880846056, 0.890846972, 0.900847917, 0.910848833, 0.92084975, 0.930850694, 0.940851597, 0.950852514, 0.960853444, 0.970854375, 0.980855292, 0.990856208, 1.000857167, 1.010858056, 1.020858986] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:42.813" endtime="20201110 08:35:42.814"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:42.808" endtime="20201110 08:35:42.815"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:42.817" endtime="20201110 08:35:42.818"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:42.820" endtime="20201110 08:35:42.840"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:42.819" endtime="20201110 08:35:42.840"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:42.815" endtime="20201110 08:35:42.841"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.284" endtime="20201110 08:35:42.841"></status>
</kw>
<msg timestamp="20201110 08:35:42.842" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:42.849" endtime="20201110 08:35:44.942"></status>
</kw>
<msg timestamp="20201110 08:35:44.943" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 11646519, 'start-iter': 1, 'wakeups': [11656534, 11666535, 11676535, 1...</msg>
<status status="PASS" starttime="20201110 08:35:42.848" endtime="20201110 08:35:44.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:44.949" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 11646519, 'start-iter': 1, 'wakeups': [11656534, 11666535, 11676535, 1...</msg>
<status status="PASS" starttime="20201110 08:35:44.945" endtime="20201110 08:35:44.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:44.952" endtime="20201110 08:35:44.955"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:42.845" endtime="20201110 08:35:44.957"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:42.844" endtime="20201110 08:35:44.958"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:44.964" level="INFO">${RESULT} = {'start-iter': 1, 'start-time': 11646519, 'timer-count': 2, 'timer-interval': 10000, 'wakeups': [11656534, 11666535, 11676535, 11686535, 11696535, 11706535, 11716535, 11726535, 11736535, 11746535, 117...</msg>
<status status="PASS" starttime="20201110 08:35:44.959" endtime="20201110 08:35:44.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:44.973" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:44.970" endtime="20201110 08:35:44.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:44.977" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:44.975" endtime="20201110 08:35:44.977"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:44.966" endtime="20201110 08:35:44.979"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:44.987" level="INFO">NAME: 2-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:44.985" endtime="20201110 08:35:44.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:44.991" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:44.989" endtime="20201110 08:35:44.992"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:44.980" endtime="20201110 08:35:44.993"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:45.001" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201110 08:35:44.999" endtime="20201110 08:35:45.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:45.005" level="INFO">VALUE: 11646519</msg>
<status status="PASS" starttime="20201110 08:35:45.003" endtime="20201110 08:35:45.006"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:44.994" endtime="20201110 08:35:45.007"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:45.017" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:45.013" endtime="20201110 08:35:45.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:45.022" level="INFO">VALUE: [11656534, 11666535, 11676535, 11686535, 11696535, 11706535, 11716535, 11726535, 11736535, 11746535, 11756535, 11766535, 11776535, 11786535, 11796535, 11806535, 11816535, 11826535, 11836535, 11846535, 11856535, 11866535, 11876535, 11886535, 11896535, 11906535, 11916535, 11926535, 11936535, 11946535, 11956535, 11966535, 11976535, 11986535, 11996535, 12006535, 12016535, 12026535, 12036535, 12046535, 12056535, 12066535, 12076535, 12086535, 12096535, 12106535, 12116535, 12126535, 12136535, 12146535, 12156535, 12166535, 12176535, 12186535, 12196535, 12206535, 12216535, 12226535, 12236535, 12246535, 12256535, 12266535, 12276535, 12286535, 12296535, 12306535, 12316535, 12326535, 12336535, 12346535, 12356535, 12366535, 12376535, 12386535, 12396535, 12406535, 12416535, 12426535, 12436535, 12446535, 12456535, 12466535, 12476535, 12486535, 12496535, 12506535, 12516535, 12526535, 12536535, 12546535, 12556535, 12566535, 12576535, 12586535, 12596535, 12606535, 12616535, 12626535, 12636535, 12646535]</msg>
<status status="PASS" starttime="20201110 08:35:45.020" endtime="20201110 08:35:45.023"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.008" endtime="20201110 08:35:45.024"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:45.044" endtime="20201110 08:35:45.335"></status>
</kw>
<msg timestamp="20201110 08:35:45.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018438292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028455014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:45.041" endtime="20201110 08:35:45.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:45.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018438292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028455014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:45.339" endtime="20201110 08:35:45.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:45.347" endtime="20201110 08:35:45.348"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.036" endtime="20201110 08:35:45.349"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.025" endtime="20201110 08:35:45.349"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:45.374" level="INFO">${RESULT} = {'source_diff': [0, 0.010016722000000002, 0.010001805000000002, 0.010000972999999996, 0.010000875, 0.010000929999999998, 0.010000916999999998, 0.010000916999999998, 0.010000930000000005, 0.01000099999...</msg>
<status status="PASS" starttime="20201110 08:35:45.350" endtime="20201110 08:35:45.374"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:45.378" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201110 08:35:45.377" endtime="20201110 08:35:45.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:45.380" level="INFO">VALUE: 0.018438292</msg>
<status status="PASS" starttime="20201110 08:35:45.379" endtime="20201110 08:35:45.380"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.375" endtime="20201110 08:35:45.381"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:45.386" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:45.385" endtime="20201110 08:35:45.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:45.388" level="INFO">VALUE: [0.028455014, 0.038456819, 0.048457792, 0.058458667, 0.068459597, 0.078460514, 0.088461431, 0.098462361, 0.108463361, 0.118464236, 0.128465125, 0.138466056, 0.148467, 0.158467903, 0.168468819, 0.17846975, 0.188470667, 0.198471597, 0.208472514, 0.218473458, 0.228474361, 0.238475292, 0.248476208, 0.258477153, 0.268478056, 0.278478986, 0.288479903, 0.298480833, 0.308481764, 0.318482681, 0.328483625, 0.338484528, 0.348485458, 0.358486375, 0.368487319, 0.378488236, 0.388489167, 0.398490083, 0.408491, 0.418491944, 0.428492861, 0.438493778, 0.448494708, 0.458495667, 0.468496556, 0.478497514, 0.488498403, 0.498499347, 0.50850025, 0.518501208, 0.528502125, 0.538503097, 0.548503972, 0.558504875, 0.568505819, 0.578506736, 0.588507653, 0.598508583, 0.608509514, 0.618510458, 0.628511361, 0.638512278, 0.648513208, 0.658514167, 0.668515069, 0.678515986, 0.688516903, 0.698517833, 0.708518778, 0.718519681, 0.728520625, 0.738521528, 0.748522472, 0.758523389, 0.768524306, 0.778525264, 0.788526167, 0.798527083, 0.808528014, 0.818528931, 0.828529861, 0.838530792, 0.848531708, 0.858532639, 0.868533597, 0.8785345, 0.888535417, 0.898536333, 0.908537264, 0.918538208, 0.928539125, 0.938540083, 0.948540958, 0.958541903, 0.968542819, 0.978543736, 0.988544681, 0.998545583, 1.008546514, 1.018547444] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:45.387" endtime="20201110 08:35:45.388"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.382" endtime="20201110 08:35:45.388"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:45.391" endtime="20201110 08:35:45.392"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:45.395" endtime="20201110 08:35:45.414"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.393" endtime="20201110 08:35:45.415"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.389" endtime="20201110 08:35:45.415"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:42.842" endtime="20201110 08:35:45.415"></status>
</kw>
<msg timestamp="20201110 08:35:45.416" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:45.424" endtime="20201110 08:35:47.515"></status>
</kw>
<msg timestamp="20201110 08:35:47.516" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 14220678, 'start-iter': 1, 'wakeups': [14230694, 14240694, 14250694, 1...</msg>
<status status="PASS" starttime="20201110 08:35:45.422" endtime="20201110 08:35:47.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:47.523" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 14220678, 'start-iter': 1, 'wakeups': [14230694, 14240694, 14250694, 1...</msg>
<status status="PASS" starttime="20201110 08:35:47.519" endtime="20201110 08:35:47.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:47.525" endtime="20201110 08:35:47.528"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.420" endtime="20201110 08:35:47.529"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.418" endtime="20201110 08:35:47.530"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:47.536" level="INFO">${RESULT} = {'start-iter': 1, 'start-time': 14220678, 'timer-count': 2, 'timer-interval': 10000, 'wakeups': [14230694, 14240694, 14250694, 14260694, 14270694, 14280694, 14290694, 14300694, 14310694, 14320694, 143...</msg>
<status status="PASS" starttime="20201110 08:35:47.532" endtime="20201110 08:35:47.536"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:47.545" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:47.543" endtime="20201110 08:35:47.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:47.549" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:47.547" endtime="20201110 08:35:47.550"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:47.538" endtime="20201110 08:35:47.551"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:47.559" level="INFO">NAME: 2-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:47.557" endtime="20201110 08:35:47.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:47.563" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:47.561" endtime="20201110 08:35:47.564"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:47.552" endtime="20201110 08:35:47.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:47.573" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201110 08:35:47.571" endtime="20201110 08:35:47.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:47.577" level="INFO">VALUE: 14220678</msg>
<status status="PASS" starttime="20201110 08:35:47.576" endtime="20201110 08:35:47.578"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:47.566" endtime="20201110 08:35:47.579"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:47.587" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:47.585" endtime="20201110 08:35:47.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:47.592" level="INFO">VALUE: [14230694, 14240694, 14250694, 14260694, 14270694, 14280694, 14290694, 14300694, 14310694, 14320694, 14330694, 14340694, 14350694, 14360694, 14370694, 14380694, 14390694, 14400694, 14410694, 14420694, 14430694, 14440694, 14450694, 14460694, 14470694, 14480694, 14490694, 14500694, 14510694, 14520694, 14530694, 14540694, 14550694, 14560694, 14570694, 14580694, 14590694, 14600694, 14610694, 14620694, 14630694, 14640694, 14650694, 14660694, 14670694, 14680694, 14690694, 14700694, 14710694, 14720694, 14730694, 14740694, 14750694, 14760694, 14770694, 14780694, 14790694, 14800694, 14810694, 14820694, 14830694, 14840694, 14850694, 14860694, 14870694, 14880694, 14890694, 14900694, 14910694, 14920694, 14930694, 14940694, 14950694, 14960694, 14970694, 14980694, 14990694, 15000694, 15010694, 15020694, 15030694, 15040694, 15050694, 15060694, 15070694, 15080694, 15090694, 15100694, 15110694, 15120694, 15130694, 15140694, 15150694, 15160694, 15170694, 15180694, 15190694, 15200694, 15210694, 15220694]</msg>
<status status="PASS" starttime="20201110 08:35:47.590" endtime="20201110 08:35:47.593"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:47.580" endtime="20201110 08:35:47.594"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:47.607" endtime="20201110 08:35:47.903"></status>
</kw>
<msg timestamp="20201110 08:35:47.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018115014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028132153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:47.604" endtime="20201110 08:35:47.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:47.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018115014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028132153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:47.907" endtime="20201110 08:35:47.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:47.915" endtime="20201110 08:35:47.916"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:47.599" endtime="20201110 08:35:47.917"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:47.595" endtime="20201110 08:35:47.917"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:47.941" level="INFO">${RESULT} = {'source_diff': [0, 0.010017139000000001, 0.010000819000000001, 0.010000916999999998, 0.010000929999999998, 0.010000917000000005, 0.010000931000000005, 0.010000915999999999, 0.010000916999999998, 0.01...</msg>
<status status="PASS" starttime="20201110 08:35:47.918" endtime="20201110 08:35:47.941"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:47.946" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201110 08:35:47.945" endtime="20201110 08:35:47.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:47.948" level="INFO">VALUE: 0.018115014</msg>
<status status="PASS" starttime="20201110 08:35:47.947" endtime="20201110 08:35:47.948"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:47.942" endtime="20201110 08:35:47.948"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:47.953" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:47.952" endtime="20201110 08:35:47.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:47.955" level="INFO">VALUE: [0.028132153, 0.038132972, 0.048133889, 0.058134819, 0.068135736, 0.078136667, 0.088137583, 0.0981385, 0.108139444, 0.118140347, 0.128141278, 0.138142208, 0.148143153, 0.158144042, 0.168144972, 0.178145903, 0.188146819, 0.198147736, 0.208148736, 0.218149583, 0.228150514, 0.238151431, 0.248152361, 0.258153292, 0.268154208, 0.278155125, 0.288156056, 0.298156986, 0.308157903, 0.318158847, 0.32815975, 0.338160681, 0.348161597, 0.358162542, 0.368163458, 0.378164375, 0.388165292, 0.398166236, 0.408167167, 0.418168083, 0.428169, 0.438169917, 0.448170847, 0.458171792, 0.468172694, 0.478173625, 0.488174542, 0.4981755, 0.508176417, 0.518177333, 0.52817825, 0.538179181, 0.548180097, 0.558181028, 0.568181944, 0.578182889, 0.588183792, 0.598184722, 0.608185681, 0.618186583, 0.628187486, 0.638188417, 0.648189333, 0.658190278, 0.668191181, 0.678192111, 0.688193028, 0.698194028, 0.708194875, 0.718195806, 0.728196722, 0.738197667, 0.748198569, 0.7581995, 0.768200431, 0.778201361, 0.788202264, 0.798203222, 0.808204125, 0.818205042, 0.828205972, 0.838206903, 0.848207833, 0.858208778, 0.868209667, 0.878210597, 0.888211528, 0.898212444, 0.908213375, 0.918214292, 0.928215208, 0.938216181, 0.948217056, 0.958218042, 0.968218931, 0.978219903, 0.988220764, 0.998221681, 1.008222639, 1.018223542] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:47.954" endtime="20201110 08:35:47.955"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:47.949" endtime="20201110 08:35:47.956"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:47.958" endtime="20201110 08:35:47.959"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:47.961" endtime="20201110 08:35:47.981"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:47.960" endtime="20201110 08:35:47.981"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:47.956" endtime="20201110 08:35:47.982"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.416" endtime="20201110 08:35:47.982"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.282" endtime="20201110 08:35:47.982"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.281" endtime="20201110 08:35:47.983"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:35:47.985" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:47.994" endtime="20201110 08:35:50.086"></status>
</kw>
<msg timestamp="20201110 08:35:50.087" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 16790822, 'start-iter': 1, 'wakeups': [16800847, 16810847, 16820846, 1...</msg>
<status status="PASS" starttime="20201110 08:35:47.992" endtime="20201110 08:35:50.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:50.093" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 16790822, 'start-iter': 1, 'wakeups': [16800847, 16810847, 16820846, 1...</msg>
<status status="PASS" starttime="20201110 08:35:50.089" endtime="20201110 08:35:50.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:50.095" endtime="20201110 08:35:50.098"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:47.989" endtime="20201110 08:35:50.099"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:47.987" endtime="20201110 08:35:50.107"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:50.113" level="INFO">${RESULT} = {'start-iter': 1, 'start-time': 16790822, 'timer-count': 3, 'timer-interval': 10000, 'wakeups': [16800847, 16810847, 16820846, 16830846, 16840846, 16850846, 16860846, 16870846, 16880846, 16890846, 169...</msg>
<status status="PASS" starttime="20201110 08:35:50.108" endtime="20201110 08:35:50.113"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:50.121" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:50.119" endtime="20201110 08:35:50.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:50.125" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:50.123" endtime="20201110 08:35:50.126"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.114" endtime="20201110 08:35:50.127"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:50.135" level="INFO">NAME: 3-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:50.133" endtime="20201110 08:35:50.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:50.139" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:50.137" endtime="20201110 08:35:50.140"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.128" endtime="20201110 08:35:50.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:50.149" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201110 08:35:50.147" endtime="20201110 08:35:50.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:50.154" level="INFO">VALUE: 16790822</msg>
<status status="PASS" starttime="20201110 08:35:50.152" endtime="20201110 08:35:50.154"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.142" endtime="20201110 08:35:50.155"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:50.161" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:50.160" endtime="20201110 08:35:50.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:50.163" level="INFO">VALUE: [16800847, 16810847, 16820846, 16830846, 16840846, 16850846, 16860846, 16870846, 16880846, 16890846, 16900846, 16910846, 16920846, 16930846, 16940846, 16950846, 16960846, 16970846, 16980846, 16990846, 17000846, 17010846, 17020846, 17030846, 17040846, 17050846, 17060846, 17070846, 17080846, 17090846, 17100846, 17110846, 17120846, 17130846, 17140846, 17150846, 17160846, 17170846, 17180846, 17190846, 17200846, 17210846, 17220846, 17230846, 17240846, 17250846, 17260846, 17270846, 17280846, 17290846, 17300846, 17310846, 17320846, 17330846, 17340846, 17350846, 17360846, 17370846, 17380846, 17390846, 17400846, 17410846, 17420846, 17430846, 17440846, 17450846, 17460846, 17470846, 17480846, 17490846, 17500846, 17510846, 17520846, 17530846, 17540846, 17550846, 17560846, 17570846, 17580846, 17590846, 17600846, 17610846, 17620846, 17630846, 17640846, 17650846, 17660846, 17670846, 17680846, 17690846, 17700846, 17710846, 17720846, 17730846, 17740846, 17750846, 17760846, 17770846, 17780846, 17790846]</msg>
<status status="PASS" starttime="20201110 08:35:50.162" endtime="20201110 08:35:50.163"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.157" endtime="20201110 08:35:50.164"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:50.170" endtime="20201110 08:35:50.462"></status>
</kw>
<msg timestamp="20201110 08:35:50.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021710556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031736569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:50.168" endtime="20201110 08:35:50.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:50.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021710556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031736569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:50.465" endtime="20201110 08:35:50.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:50.473" endtime="20201110 08:35:50.475"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.166" endtime="20201110 08:35:50.476"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.164" endtime="20201110 08:35:50.476"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:50.501" level="INFO">${RESULT} = {'source_diff': [0, 0.010026013, 0.010001444999999998, 0.009999917000000004, 0.010000943999999998, 0.010000903000000005, 0.010000943999999998, 0.010000902999999992, 0.010000944000000012, 0.01000090299...</msg>
<status status="PASS" starttime="20201110 08:35:50.477" endtime="20201110 08:35:50.502"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:50.506" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201110 08:35:50.505" endtime="20201110 08:35:50.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:50.508" level="INFO">VALUE: 0.021710556</msg>
<status status="PASS" starttime="20201110 08:35:50.507" endtime="20201110 08:35:50.508"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.502" endtime="20201110 08:35:50.509"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:50.513" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:50.512" endtime="20201110 08:35:50.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:50.515" level="INFO">VALUE: [0.031736569, 0.041738014, 0.051737931, 0.061738875, 0.071739778, 0.081740722, 0.091741625, 0.101742569, 0.111743472, 0.121744417, 0.131745333, 0.141746278, 0.151747181, 0.161748125, 0.171749014, 0.181749958, 0.191750861, 0.201751875, 0.211752708, 0.221753667, 0.231754583, 0.2417555, 0.251756458, 0.261757347, 0.27175825, 0.281759194, 0.291760111, 0.301761042, 0.311761972, 0.321762889, 0.331763847, 0.34176475, 0.351765653, 0.361766583, 0.3717675, 0.381768431, 0.391769347, 0.401770292, 0.411771208, 0.421772139, 0.431773042, 0.441774, 0.451774944, 0.461775833, 0.47177675, 0.481777681, 0.491778597, 0.501779542, 0.511780444, 0.521781444, 0.531782361, 0.541783236, 0.551784139, 0.561785083, 0.571786, 0.581786931, 0.591787847, 0.601788792, 0.611789694, 0.621790625, 0.631791542, 0.641792486, 0.651793389, 0.661794347, 0.67179525, 0.681796194, 0.691797125, 0.701798028, 0.711798958, 0.721799875, 0.731800875, 0.741801764, 0.751802653, 0.761803583, 0.771804486, 0.781805458, 0.791806347, 0.801807278, 0.811808194, 0.821809139, 0.831810042, 0.841810986, 0.851811889, 0.861812833, 0.871813736, 0.881814708, 0.891815597, 0.901816542, 0.911817444, 0.921818417, 0.931819306, 0.941820236, 0.951821194, 0.961822139, 0.971823, 0.981823944, 0.991824861, 1.001825806, 1.011826708, 1.021827639] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:50.514" endtime="20201110 08:35:50.516"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.509" endtime="20201110 08:35:50.516"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:50.518" endtime="20201110 08:35:50.520"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:50.522" endtime="20201110 08:35:50.541"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.520" endtime="20201110 08:35:50.542"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.517" endtime="20201110 08:35:50.542"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:47.986" endtime="20201110 08:35:50.542"></status>
</kw>
<msg timestamp="20201110 08:35:50.543" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:50.550" endtime="20201110 08:35:52.643"></status>
</kw>
<msg timestamp="20201110 08:35:52.644" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 19347461, 'start-iter': 1, 'wakeups': [19357487, 19367486, 19377485, 1...</msg>
<status status="PASS" starttime="20201110 08:35:50.549" endtime="20201110 08:35:52.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:52.650" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 19347461, 'start-iter': 1, 'wakeups': [19357487, 19367486, 19377485, 1...</msg>
<status status="PASS" starttime="20201110 08:35:52.646" endtime="20201110 08:35:52.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:52.652" endtime="20201110 08:35:52.655"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.546" endtime="20201110 08:35:52.656"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.545" endtime="20201110 08:35:52.657"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:52.663" level="INFO">${RESULT} = {'start-iter': 1, 'start-time': 19347461, 'timer-count': 3, 'timer-interval': 10000, 'wakeups': [19357487, 19367486, 19377485, 19387485, 19397485, 19407485, 19417485, 19427485, 19437485, 19447485, 194...</msg>
<status status="PASS" starttime="20201110 08:35:52.659" endtime="20201110 08:35:52.663"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:52.671" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:52.669" endtime="20201110 08:35:52.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:52.675" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:52.673" endtime="20201110 08:35:52.676"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:52.665" endtime="20201110 08:35:52.678"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:52.686" level="INFO">NAME: 3-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:52.684" endtime="20201110 08:35:52.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:52.690" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:52.688" endtime="20201110 08:35:52.691"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:52.679" endtime="20201110 08:35:52.692"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:52.700" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201110 08:35:52.698" endtime="20201110 08:35:52.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:52.705" level="INFO">VALUE: 19347461</msg>
<status status="PASS" starttime="20201110 08:35:52.703" endtime="20201110 08:35:52.705"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:52.693" endtime="20201110 08:35:52.706"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:52.714" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:52.712" endtime="20201110 08:35:52.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:52.719" level="INFO">VALUE: [19357487, 19367486, 19377485, 19387485, 19397485, 19407485, 19417485, 19427485, 19437485, 19447485, 19457485, 19467485, 19477485, 19487485, 19497485, 19507485, 19517485, 19527485, 19537485, 19547485, 19557485, 19567485, 19577485, 19587485, 19597485, 19607485, 19617485, 19627485, 19637485, 19647485, 19657485, 19667485, 19677485, 19687485, 19697485, 19707485, 19717485, 19727485, 19737485, 19747485, 19757485, 19767485, 19777485, 19787485, 19797485, 19807485, 19817485, 19827485, 19837485, 19847485, 19857485, 19867485, 19877485, 19887485, 19897485, 19907485, 19917485, 19927485, 19937485, 19947485, 19957485, 19967485, 19977485, 19987485, 19997485, 20007485, 20017485, 20027485, 20037485, 20047485, 20057485, 20067485, 20077485, 20087485, 20097485, 20107485, 20117485, 20127485, 20137485, 20147485, 20157485, 20167485, 20177485, 20187485, 20197485, 20207485, 20217485, 20227485, 20237485, 20247485, 20257485, 20267485, 20277485, 20287485, 20297485, 20307485, 20317485, 20327485, 20337485, 20347485]</msg>
<status status="PASS" starttime="20201110 08:35:52.717" endtime="20201110 08:35:52.720"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:52.707" endtime="20201110 08:35:52.721"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:52.728" endtime="20201110 08:35:53.021"></status>
</kw>
<msg timestamp="20201110 08:35:53.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018118417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028144958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:52.727" endtime="20201110 08:35:53.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:53.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018118417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028144958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:53.025" endtime="20201110 08:35:53.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:53.033" endtime="20201110 08:35:53.034"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:52.724" endtime="20201110 08:35:53.035"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:52.722" endtime="20201110 08:35:53.035"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:53.060" level="INFO">${RESULT} = {'source_diff': [0, 0.010026541, 0.010000445, 0.009999929999999997, 0.010000931000000005, 0.010000902999999992, 0.010000944000000012, 0.010000902999999992, 0.010000958000000004, 0.010000888999999999, ...</msg>
<status status="PASS" starttime="20201110 08:35:53.036" endtime="20201110 08:35:53.060"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:53.064" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201110 08:35:53.063" endtime="20201110 08:35:53.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:53.066" level="INFO">VALUE: 0.018118417</msg>
<status status="PASS" starttime="20201110 08:35:53.065" endtime="20201110 08:35:53.067"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:53.061" endtime="20201110 08:35:53.067"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:53.072" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:53.071" endtime="20201110 08:35:53.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:53.074" level="INFO">VALUE: [0.028144958, 0.038145403, 0.048145333, 0.058146264, 0.068147167, 0.078148111, 0.088149014, 0.098149972, 0.108150861, 0.118151806, 0.128152736, 0.138153653, 0.148154556, 0.1581555, 0.168156403, 0.178157361, 0.188158264, 0.198159236, 0.208160111, 0.218161056, 0.228161958, 0.238162889, 0.248163792, 0.258164736, 0.268165667, 0.278166583, 0.288167514, 0.298168444, 0.308169347, 0.318170292, 0.328171194, 0.338172125, 0.348173042, 0.358174, 0.368174889, 0.378175847, 0.388176778, 0.398177694, 0.408178583, 0.418179542, 0.428180444, 0.438181375, 0.448182292, 0.458183222, 0.468184139, 0.478185083, 0.488186, 0.498186944, 0.508187861, 0.518188778, 0.528189736, 0.538190625, 0.548191542, 0.558192472, 0.568193403, 0.578194319, 0.588195236, 0.598196181, 0.608197083, 0.618198042, 0.628198972, 0.638199875, 0.648200792, 0.658201736, 0.668202639, 0.678203583, 0.688204486, 0.698205444, 0.708206333, 0.718207347, 0.728208208, 0.738209125, 0.748210042, 0.758210972, 0.768211931, 0.778212833, 0.788213736, 0.798214694, 0.808215597, 0.818216542, 0.828217458, 0.838218375, 0.848219292, 0.858220222, 0.868221167, 0.878222083, 0.888223014, 0.898223944, 0.908224847, 0.918225792, 0.928226708, 0.938227625, 0.948228542, 0.958229486, 0.968230389, 0.978231347, 0.988232278, 0.998233194, 1.008234083, 1.018235056] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:53.073" endtime="20201110 08:35:53.075"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:53.068" endtime="20201110 08:35:53.075"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:53.077" endtime="20201110 08:35:53.079"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:53.081" endtime="20201110 08:35:53.100"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:53.079" endtime="20201110 08:35:53.101"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:53.076" endtime="20201110 08:35:53.101"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.543" endtime="20201110 08:35:53.101"></status>
</kw>
<msg timestamp="20201110 08:35:53.102" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:53.109" endtime="20201110 08:35:55.202"></status>
</kw>
<msg timestamp="20201110 08:35:55.203" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 21906437, 'start-iter': 1, 'wakeups': [21916463, 21926462, 21936461, 2...</msg>
<status status="PASS" starttime="20201110 08:35:53.108" endtime="20201110 08:35:55.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:55.209" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 21906437, 'start-iter': 1, 'wakeups': [21916463, 21926462, 21936461, 2...</msg>
<status status="PASS" starttime="20201110 08:35:55.205" endtime="20201110 08:35:55.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:55.211" endtime="20201110 08:35:55.214"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:53.105" endtime="20201110 08:35:55.215"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:53.104" endtime="20201110 08:35:55.216"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:55.222" level="INFO">${RESULT} = {'start-iter': 1, 'start-time': 21906437, 'timer-count': 3, 'timer-interval': 10000, 'wakeups': [21916463, 21926462, 21936461, 21946461, 21956461, 21966461, 21976461, 21986461, 21996461, 22006461, 220...</msg>
<status status="PASS" starttime="20201110 08:35:55.218" endtime="20201110 08:35:55.222"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:55.232" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:55.228" endtime="20201110 08:35:55.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:55.236" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:55.234" endtime="20201110 08:35:55.237"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.223" endtime="20201110 08:35:55.238"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:55.247" level="INFO">NAME: 3-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:55.245" endtime="20201110 08:35:55.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:55.251" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:55.249" endtime="20201110 08:35:55.252"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.239" endtime="20201110 08:35:55.253"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:55.319" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201110 08:35:55.259" endtime="20201110 08:35:55.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:55.323" level="INFO">VALUE: 21906437</msg>
<status status="PASS" starttime="20201110 08:35:55.321" endtime="20201110 08:35:55.324"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.254" endtime="20201110 08:35:55.325"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:55.333" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:55.331" endtime="20201110 08:35:55.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:55.338" level="INFO">VALUE: [21916463, 21926462, 21936461, 21946461, 21956461, 21966461, 21976461, 21986461, 21996461, 22006461, 22016461, 22026461, 22036461, 22046461, 22056461, 22066461, 22076461, 22086461, 22096461, 22106461, 22116461, 22126461, 22136461, 22146461, 22156461, 22166461, 22176461, 22186461, 22196461, 22206461, 22216461, 22226461, 22236461, 22246461, 22256461, 22266461, 22276461, 22286461, 22296461, 22306461, 22316461, 22326461, 22336461, 22346461, 22356461, 22366461, 22376461, 22386461, 22396461, 22406461, 22416461, 22426461, 22436461, 22446461, 22456461, 22466461, 22476461, 22486461, 22496461, 22506461, 22516461, 22526461, 22536461, 22546461, 22556461, 22566461, 22576461, 22586461, 22596461, 22606461, 22616461, 22626461, 22636461, 22646461, 22656461, 22666461, 22676461, 22686461, 22696461, 22706461, 22716461, 22726461, 22736461, 22746461, 22756461, 22766461, 22776461, 22786461, 22796461, 22806461, 22816461, 22826461, 22836461, 22846461, 22856461, 22866461, 22876461, 22886461, 22896461, 22906461]</msg>
<status status="PASS" starttime="20201110 08:35:55.335" endtime="20201110 08:35:55.338"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.326" endtime="20201110 08:35:55.339"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:55.353" endtime="20201110 08:35:55.659"></status>
</kw>
<msg timestamp="20201110 08:35:55.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018022431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028049306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:55.350" endtime="20201110 08:35:55.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:55.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018022431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028049306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:55.663" endtime="20201110 08:35:55.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:55.670" endtime="20201110 08:35:55.672"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.344" endtime="20201110 08:35:55.672"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.341" endtime="20201110 08:35:55.673"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:55.698" level="INFO">${RESULT} = {'source_diff': [0, 0.010026875000000001, 0.010000458, 0.009999972000000003, 0.010000861, 0.010000945000000004, 0.010000901999999992, 0.010000931000000005, 0.010000916999999998, 0.010000943999999998, ...</msg>
<status status="PASS" starttime="20201110 08:35:55.673" endtime="20201110 08:35:55.698"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:55.702" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201110 08:35:55.701" endtime="20201110 08:35:55.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:55.704" level="INFO">VALUE: 0.018022431</msg>
<status status="PASS" starttime="20201110 08:35:55.703" endtime="20201110 08:35:55.704"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.699" endtime="20201110 08:35:55.705"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:55.709" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:55.708" endtime="20201110 08:35:55.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:55.712" level="INFO">VALUE: [0.028049306, 0.038049764, 0.048049736, 0.058050597, 0.068051542, 0.078052444, 0.088053375, 0.098054292, 0.108055236, 0.118056139, 0.128057069, 0.138057986, 0.148058917, 0.158059833, 0.168060764, 0.178061681, 0.188062611, 0.198063542, 0.208064472, 0.218065375, 0.228066403, 0.238067222, 0.248068167, 0.258069069, 0.268070014, 0.278070944, 0.288071861, 0.298072792, 0.308073708, 0.318074639, 0.328075556, 0.338076472, 0.348077431, 0.358078347, 0.368079264, 0.378080167, 0.388081111, 0.398082028, 0.408082972, 0.418083875, 0.428084875, 0.438085722, 0.448086667, 0.458087569, 0.468088528, 0.478089417, 0.488090361, 0.498091319, 0.508092208, 0.518093167, 0.528094056, 0.538094972, 0.548095931, 0.558096903, 0.568097778, 0.578098694, 0.588099611, 0.598100528, 0.608101486, 0.618102375, 0.628103361, 0.638104222, 0.648105153, 0.658106083, 0.668107042, 0.678107986, 0.688108847, 0.698109764, 0.708110694, 0.718111611, 0.728112556, 0.7381135, 0.748114403, 0.758115306, 0.76811625, 0.778117222, 0.788118083, 0.798119028, 0.808119931, 0.818120847, 0.828121806, 0.838122708, 0.848123639, 0.858124556, 0.868125542, 0.878126403, 0.888127347, 0.898128236, 0.90812925, 0.918130097, 0.928131083, 0.938131972, 0.948132889, 0.958133792, 0.968134722, 0.978135667, 0.988136569, 0.998137486, 1.008138431, 1.018139333] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:55.710" endtime="20201110 08:35:55.712"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.706" endtime="20201110 08:35:55.713"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:55.715" endtime="20201110 08:35:55.716"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:55.718" endtime="20201110 08:35:55.738"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.717" endtime="20201110 08:35:55.738"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.713" endtime="20201110 08:35:55.739"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:53.102" endtime="20201110 08:35:55.739"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:47.984" endtime="20201110 08:35:55.739"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:47.983" endtime="20201110 08:35:55.739"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:35:55.742" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:55.750" endtime="20201110 08:35:57.842"></status>
</kw>
<msg timestamp="20201110 08:35:57.843" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 24546832, 'start-iter': 1, 'wakeups': [24556868, 24566866, 24576866, 2...</msg>
<status status="PASS" starttime="20201110 08:35:55.748" endtime="20201110 08:35:57.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:57.849" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 24546832, 'start-iter': 1, 'wakeups': [24556868, 24566866, 24576866, 2...</msg>
<status status="PASS" starttime="20201110 08:35:57.846" endtime="20201110 08:35:57.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:57.851" endtime="20201110 08:35:57.855"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.746" endtime="20201110 08:35:57.856"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.744" endtime="20201110 08:35:57.857"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:57.863" level="INFO">${RESULT} = {'start-iter': 1, 'start-time': 24546832, 'timer-count': 4, 'timer-interval': 10000, 'wakeups': [24556868, 24566866, 24576866, 24586866, 24596866, 24606866, 24616866, 24626866, 24636866, 24646866, 246...</msg>
<status status="PASS" starttime="20201110 08:35:57.858" endtime="20201110 08:35:57.863"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:57.871" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:57.869" endtime="20201110 08:35:57.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:57.875" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:57.873" endtime="20201110 08:35:57.876"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:57.864" endtime="20201110 08:35:57.877"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:57.885" level="INFO">NAME: 4-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:57.883" endtime="20201110 08:35:57.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:57.889" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:57.888" endtime="20201110 08:35:57.890"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:57.878" endtime="20201110 08:35:57.891"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:57.902" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201110 08:35:57.900" endtime="20201110 08:35:57.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:57.906" level="INFO">VALUE: 24546832</msg>
<status status="PASS" starttime="20201110 08:35:57.904" endtime="20201110 08:35:57.907"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:57.893" endtime="20201110 08:35:57.908"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:57.914" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:57.913" endtime="20201110 08:35:57.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:57.917" level="INFO">VALUE: [24556868, 24566866, 24576866, 24586866, 24596866, 24606866, 24616866, 24626866, 24636866, 24646866, 24656866, 24666866, 24676866, 24686866, 24696866, 24706866, 24716866, 24726866, 24736866, 24746866, 24756866, 24766866, 24776866, 24786866, 24796866, 24806866, 24816866, 24826866, 24836866, 24846866, 24856866, 24866866, 24876866, 24886866, 24896866, 24906866, 24916866, 24926866, 24936866, 24946866, 24956866, 24966866, 24976866, 24986866, 24996866, 25006866, 25016866, 25026866, 25036866, 25046866, 25056866, 25066866, 25076866, 25086866, 25096866, 25106866, 25116866, 25126866, 25136866, 25146866, 25156866, 25166866, 25176866, 25186866, 25196866, 25206866, 25216866, 25226866, 25236866, 25246866, 25256866, 25266866, 25276866, 25286866, 25296866, 25306866, 25316866, 25326866, 25336866, 25346866, 25356866, 25366866, 25376866, 25386866, 25396866, 25406866, 25416866, 25426866, 25436866, 25446866, 25456866, 25466866, 25476866, 25486866, 25496866, 25506866, 25516866, 25526866, 25536866, 25546866]</msg>
<status status="PASS" starttime="20201110 08:35:57.915" endtime="20201110 08:35:57.917"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:57.909" endtime="20201110 08:35:57.918"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:57.924" endtime="20201110 08:35:58.216"></status>
</kw>
<msg timestamp="20201110 08:35:58.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020854278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030891264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:57.922" endtime="20201110 08:35:58.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:58.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020854278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030891264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:58.220" endtime="20201110 08:35:58.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:58.227" endtime="20201110 08:35:58.229"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:57.920" endtime="20201110 08:35:58.229"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:57.918" endtime="20201110 08:35:58.230"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:58.254" level="INFO">${RESULT} = {'source_diff': [0, 0.010036986000000001, 0.009999152999999997, 0.010000915999999999, 0.010000931000000005, 0.010000986000000003, 0.010000846999999993, 0.010000931000000005, 0.010000929999999991, 0.01...</msg>
<status status="PASS" starttime="20201110 08:35:58.230" endtime="20201110 08:35:58.254"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:58.258" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201110 08:35:58.257" endtime="20201110 08:35:58.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:58.261" level="INFO">VALUE: 0.020854278</msg>
<status status="PASS" starttime="20201110 08:35:58.260" endtime="20201110 08:35:58.261"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:58.255" endtime="20201110 08:35:58.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:58.266" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:58.265" endtime="20201110 08:35:58.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:58.268" level="INFO">VALUE: [0.030891264, 0.040890417, 0.050891333, 0.060892264, 0.07089325, 0.080894097, 0.090895028, 0.100895958, 0.110896889, 0.120897792, 0.130898722, 0.140899639, 0.150900569, 0.160901486, 0.170902417, 0.180903347, 0.190904264, 0.200905181, 0.210906125, 0.220907028, 0.230907972, 0.240908875, 0.250909806, 0.260910722, 0.270911639, 0.280912569, 0.290913514, 0.300914444, 0.310915361, 0.320916264, 0.330917208, 0.340918125, 0.350919042, 0.360919958, 0.370920889, 0.380921806, 0.390922736, 0.400923653, 0.410924597, 0.420925556, 0.430926431, 0.440927361, 0.450928278, 0.460929208, 0.470930125, 0.480931056, 0.490931972, 0.500932917, 0.510933833, 0.52093475, 0.530935681, 0.540936611, 0.550937556, 0.560938486, 0.570939375, 0.580940306, 0.590941222, 0.600942153, 0.610943139, 0.620944014, 0.630944931, 0.640945861, 0.650946764, 0.660947694, 0.670948694, 0.680949542, 0.690950514, 0.700951389, 0.710952333, 0.72095325, 0.730954181, 0.740955139, 0.750956028, 0.760956972, 0.770957861, 0.780958792, 0.790959722, 0.800960653, 0.810961583, 0.820962486, 0.830963417, 0.840964333, 0.850965264, 0.860966194, 0.870967111, 0.880968056, 0.890968958, 0.900969903, 0.910970806, 0.920971736, 0.930972681, 0.940973583, 0.950974528, 0.960975444, 0.970976361, 0.980977278, 0.990978208, 1.000979139, 1.010980083, 1.020980986] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:58.267" endtime="20201110 08:35:58.269"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:58.262" endtime="20201110 08:35:58.269"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:58.272" endtime="20201110 08:35:58.273"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:58.275" endtime="20201110 08:35:58.294"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:58.273" endtime="20201110 08:35:58.295"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:58.270" endtime="20201110 08:35:58.296"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.743" endtime="20201110 08:35:58.296"></status>
</kw>
<msg timestamp="20201110 08:35:58.296" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:58.304" endtime="20201110 08:36:00.396"></status>
</kw>
<msg timestamp="20201110 08:36:00.398" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 27101100, 'start-iter': 1, 'wakeups': [27111135, 27121134, 27131134, 2...</msg>
<status status="PASS" starttime="20201110 08:35:58.303" endtime="20201110 08:36:00.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:00.404" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 27101100, 'start-iter': 1, 'wakeups': [27111135, 27121134, 27131134, 2...</msg>
<status status="PASS" starttime="20201110 08:36:00.400" endtime="20201110 08:36:00.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:00.406" endtime="20201110 08:36:00.409"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:58.300" endtime="20201110 08:36:00.410"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:58.298" endtime="20201110 08:36:00.411"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:00.417" level="INFO">${RESULT} = {'start-iter': 1, 'start-time': 27101100, 'timer-count': 4, 'timer-interval': 10000, 'wakeups': [27111135, 27121134, 27131134, 27141134, 27151134, 27161134, 27171134, 27181134, 27191134, 27201134, 272...</msg>
<status status="PASS" starttime="20201110 08:36:00.413" endtime="20201110 08:36:00.417"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:00.425" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:36:00.423" endtime="20201110 08:36:00.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:00.429" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:36:00.427" endtime="20201110 08:36:00.430"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:00.418" endtime="20201110 08:36:00.431"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:00.439" level="INFO">NAME: 4-start-iter</msg>
<status status="PASS" starttime="20201110 08:36:00.437" endtime="20201110 08:36:00.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:00.444" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:36:00.442" endtime="20201110 08:36:00.444"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:00.432" endtime="20201110 08:36:00.445"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:00.454" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201110 08:36:00.452" endtime="20201110 08:36:00.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:00.458" level="INFO">VALUE: 27101100</msg>
<status status="PASS" starttime="20201110 08:36:00.456" endtime="20201110 08:36:00.459"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:00.447" endtime="20201110 08:36:00.460"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:00.470" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:00.466" endtime="20201110 08:36:00.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:00.474" level="INFO">VALUE: [27111135, 27121134, 27131134, 27141134, 27151134, 27161134, 27171134, 27181134, 27191134, 27201134, 27211134, 27221134, 27231134, 27241134, 27251134, 27261134, 27271134, 27281134, 27291134, 27301134, 27311134, 27321134, 27331134, 27341134, 27351134, 27361134, 27371134, 27381134, 27391134, 27401134, 27411134, 27421134, 27431134, 27441134, 27451134, 27461134, 27471134, 27481134, 27491134, 27501134, 27511134, 27521134, 27531134, 27541134, 27551134, 27561134, 27571134, 27581134, 27591134, 27601134, 27611134, 27621134, 27631134, 27641134, 27651134, 27661134, 27671134, 27681134, 27691134, 27701134, 27711134, 27721134, 27731134, 27741134, 27751134, 27761134, 27771134, 27781134, 27791134, 27801134, 27811134, 27821134, 27831134, 27841134, 27851134, 27861134, 27871134, 27881134, 27891134, 27901134, 27911134, 27921134, 27931134, 27941134, 27951134, 27961134, 27971134, 27981134, 27991134, 28001134, 28011134, 28021134, 28031134, 28041134, 28051134, 28061134, 28071134, 28081134, 28091134, 28101134]</msg>
<status status="PASS" starttime="20201110 08:36:00.472" endtime="20201110 08:36:00.475"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:00.461" endtime="20201110 08:36:00.476"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:00.493" endtime="20201110 08:36:00.782"></status>
</kw>
<msg timestamp="20201110 08:36:00.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018553167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028589139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:00.491" endtime="20201110 08:36:00.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:00.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018553167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028589139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:00.786" endtime="20201110 08:36:00.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:00.794" endtime="20201110 08:36:00.796"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:00.488" endtime="20201110 08:36:00.796"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:00.477" endtime="20201110 08:36:00.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:00.821" level="INFO">${RESULT} = {'source_diff': [0, 0.010035972, 0.010000179999999997, 0.010000931000000005, 0.010000902999999998, 0.010000944000000005, 0.010000902999999992, 0.010000931000000005, 0.010000930000000005, 0.01000091699...</msg>
<status status="PASS" starttime="20201110 08:36:00.797" endtime="20201110 08:36:00.821"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:00.825" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201110 08:36:00.824" endtime="20201110 08:36:00.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:00.827" level="INFO">VALUE: 0.018553167</msg>
<status status="PASS" starttime="20201110 08:36:00.826" endtime="20201110 08:36:00.828"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:00.822" endtime="20201110 08:36:00.828"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:00.833" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:00.832" endtime="20201110 08:36:00.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:00.835" level="INFO">VALUE: [0.028589139, 0.038589319, 0.04859025, 0.058591153, 0.068592097, 0.078593, 0.088593931, 0.098594861, 0.108595778, 0.118596694, 0.128597625, 0.138598542, 0.148599472, 0.158600458, 0.168601319, 0.17860225, 0.188603181, 0.198604083, 0.208605014, 0.218605944, 0.228606861, 0.238607833, 0.248608736, 0.258609639, 0.268610569, 0.278611472, 0.288612417, 0.298613361, 0.30861425, 0.318615167, 0.328616097, 0.338617056, 0.348618, 0.358618861, 0.368619806, 0.378620708, 0.388621653, 0.398622569, 0.4086235, 0.418624417, 0.428625333, 0.438626319, 0.448627194, 0.458628111, 0.468629028, 0.478629972, 0.488630903, 0.498631806, 0.50863275, 0.518633653, 0.528634583, 0.538635542, 0.548636431, 0.558637361, 0.568638278, 0.578639222, 0.588640125, 0.598641069, 0.608641972, 0.618642903, 0.628643833, 0.63864475, 0.648645708, 0.658646597, 0.668647528, 0.678648458, 0.688649389, 0.698650333, 0.708651222, 0.718652167, 0.728653083, 0.738654, 0.748654931, 0.758655847, 0.768656792, 0.778657694, 0.788658639, 0.798659583, 0.8086605, 0.818661417, 0.828662319, 0.83866325, 0.848664194, 0.858665111, 0.868666028, 0.878666958, 0.888667875, 0.898668806, 0.908669736, 0.918670722, 0.928671583, 0.9386725, 0.948673417, 0.958674361, 0.968675278, 0.978676194, 0.988677139, 0.998678042, 1.008678972, 1.018679903] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:36:00.834" endtime="20201110 08:36:00.835"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:00.829" endtime="20201110 08:36:00.836"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:00.838" endtime="20201110 08:36:00.839"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:00.842" endtime="20201110 08:36:00.861"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:00.840" endtime="20201110 08:36:00.862"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:00.836" endtime="20201110 08:36:00.862"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:58.297" endtime="20201110 08:36:00.863"></status>
</kw>
<msg timestamp="20201110 08:36:00.863" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:00.871" endtime="20201110 08:36:02.963"></status>
</kw>
<msg timestamp="20201110 08:36:02.965" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 29667759, 'start-iter': 1, 'wakeups': [29677795, 29687793, 29697793, 2...</msg>
<status status="PASS" starttime="20201110 08:36:00.869" endtime="20201110 08:36:02.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:02.971" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 29667759, 'start-iter': 1, 'wakeups': [29677795, 29687793, 29697793, 2...</msg>
<status status="PASS" starttime="20201110 08:36:02.967" endtime="20201110 08:36:02.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:02.973" endtime="20201110 08:36:02.977"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:00.867" endtime="20201110 08:36:02.978"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:00.865" endtime="20201110 08:36:02.979"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:02.984" level="INFO">${RESULT} = {'start-iter': 1, 'start-time': 29667759, 'timer-count': 4, 'timer-interval': 10000, 'wakeups': [29677795, 29687793, 29697793, 29707793, 29717793, 29727793, 29737793, 29747793, 29757793, 29767793, 297...</msg>
<status status="PASS" starttime="20201110 08:36:02.980" endtime="20201110 08:36:02.985"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:02.993" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:36:02.991" endtime="20201110 08:36:02.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:02.997" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:36:02.995" endtime="20201110 08:36:02.998"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:02.986" endtime="20201110 08:36:02.999"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:03.007" level="INFO">NAME: 4-start-iter</msg>
<status status="PASS" starttime="20201110 08:36:03.005" endtime="20201110 08:36:03.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:03.011" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:36:03.009" endtime="20201110 08:36:03.012"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:03.000" endtime="20201110 08:36:03.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:03.021" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201110 08:36:03.019" endtime="20201110 08:36:03.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:03.026" level="INFO">VALUE: 29667759</msg>
<status status="PASS" starttime="20201110 08:36:03.024" endtime="20201110 08:36:03.026"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:03.014" endtime="20201110 08:36:03.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:03.036" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:03.034" endtime="20201110 08:36:03.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:03.040" level="INFO">VALUE: [29677795, 29687793, 29697793, 29707793, 29717793, 29727793, 29737793, 29747793, 29757793, 29767793, 29777793, 29787793, 29797793, 29807793, 29817793, 29827793, 29837793, 29847793, 29857793, 29867793, 29877793, 29887793, 29897793, 29907793, 29917793, 29927793, 29937793, 29947793, 29957793, 29967793, 29977793, 29987793, 29997793, 30007793, 30017793, 30027793, 30037793, 30047793, 30057793, 30067793, 30077793, 30087793, 30097793, 30107793, 30117793, 30127793, 30137793, 30147793, 30157793, 30167793, 30177793, 30187793, 30197793, 30207793, 30217793, 30227793, 30237793, 30247793, 30257793, 30267793, 30277793, 30287793, 30297793, 30307793, 30317793, 30327793, 30337793, 30347793, 30357793, 30367793, 30377793, 30387793, 30397793, 30407793, 30417793, 30427793, 30437793, 30447793, 30457793, 30467793, 30477793, 30487793, 30497793, 30507793, 30517793, 30527793, 30537793, 30547793, 30557793, 30567793, 30577793, 30587793, 30597793, 30607793, 30617793, 30627793, 30637793, 30647793, 30657793, 30667793]</msg>
<status status="PASS" starttime="20201110 08:36:03.038" endtime="20201110 08:36:03.041"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:03.029" endtime="20201110 08:36:03.042"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:03.053" endtime="20201110 08:36:03.346"></status>
</kw>
<msg timestamp="20201110 08:36:03.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018145597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028182194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:03.051" endtime="20201110 08:36:03.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:03.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018145597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028182194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:03.350" endtime="20201110 08:36:03.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:03.358" endtime="20201110 08:36:03.360"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:03.047" endtime="20201110 08:36:03.360"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:03.043" endtime="20201110 08:36:03.360"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:03.384" level="INFO">${RESULT} = {'source_diff': [0, 0.010036597000000001, 0.009999166999999996, 0.010000889000000006, 0.010000985999999996, 0.010000875000000006, 0.010000902999999992, 0.010000930000000005, 0.010000916999999998, 0.01...</msg>
<status status="PASS" starttime="20201110 08:36:03.361" endtime="20201110 08:36:03.385"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:03.389" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201110 08:36:03.388" endtime="20201110 08:36:03.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:03.391" level="INFO">VALUE: 0.018145597</msg>
<status status="PASS" starttime="20201110 08:36:03.390" endtime="20201110 08:36:03.391"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:03.385" endtime="20201110 08:36:03.392"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:03.396" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:03.395" endtime="20201110 08:36:03.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:03.398" level="INFO">VALUE: [0.028182194, 0.038181361, 0.04818225, 0.058183236, 0.068184111, 0.078185014, 0.088185944, 0.098186861, 0.108187792, 0.118188708, 0.128189639, 0.138190569, 0.1481915, 0.158192403, 0.168193333, 0.178194292, 0.188195194, 0.198196153, 0.208197083, 0.218197958, 0.228198889, 0.238199792, 0.248200722, 0.258201639, 0.268202583, 0.278203514, 0.288204417, 0.298205347, 0.308206264, 0.318207194, 0.328208111, 0.338209042, 0.348209972, 0.358210903, 0.368211819, 0.378212736, 0.388213667, 0.398214583, 0.408215514, 0.418216431, 0.428217361, 0.438218292, 0.448219208, 0.458220139, 0.468221056, 0.478221986, 0.488222931, 0.498223833, 0.508224778, 0.518225694, 0.528226653, 0.538227556, 0.548228458, 0.558229403, 0.568230347, 0.578231306, 0.588232167, 0.598233097, 0.608234028, 0.618234931, 0.628235889, 0.638236792, 0.648237708, 0.658238639, 0.668239556, 0.678240486, 0.688241417, 0.698242333, 0.708243264, 0.718244181, 0.728245125, 0.738246083, 0.748246958, 0.758247903, 0.768248819, 0.778249736, 0.788250667, 0.798251583, 0.808252514, 0.818253486, 0.828254431, 0.838255292, 0.848256222, 0.858257153, 0.868258097, 0.878259, 0.888259917, 0.898260861, 0.908261764, 0.91826275, 0.928263611, 0.938264542, 0.948265458, 0.958266389, 0.968267306, 0.978268236, 0.988269153, 0.998270083, 1.008271056, 1.018271917] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:36:03.397" endtime="20201110 08:36:03.398"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:03.392" endtime="20201110 08:36:03.399"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:03.401" endtime="20201110 08:36:03.402"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:03.405" endtime="20201110 08:36:03.424"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:03.403" endtime="20201110 08:36:03.424"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:03.399" endtime="20201110 08:36:03.425"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:00.863" endtime="20201110 08:36:03.425"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.740" endtime="20201110 08:36:03.425"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.740" endtime="20201110 08:36:03.426"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:36:03.428" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:03.437" endtime="20201110 08:36:05.529"></status>
</kw>
<msg timestamp="20201110 08:36:05.530" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 32233820, 'start-iter': 1, 'wakeups': [32243868, 32253866, 32263865, 3...</msg>
<status status="PASS" starttime="20201110 08:36:03.435" endtime="20201110 08:36:05.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:05.536" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 32233820, 'start-iter': 1, 'wakeups': [32243868, 32253866, 32263865, 3...</msg>
<status status="PASS" starttime="20201110 08:36:05.532" endtime="20201110 08:36:05.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:05.538" endtime="20201110 08:36:05.549"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:03.432" endtime="20201110 08:36:05.550"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:03.430" endtime="20201110 08:36:05.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:05.557" level="INFO">${RESULT} = {'start-iter': 1, 'start-time': 32233820, 'timer-count': 5, 'timer-interval': 10000, 'wakeups': [32243868, 32253866, 32263865, 32273865, 32283865, 32293865, 32303865, 32313865, 32323865, 32333865, 323...</msg>
<status status="PASS" starttime="20201110 08:36:05.553" endtime="20201110 08:36:05.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:05.565" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:36:05.563" endtime="20201110 08:36:05.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:05.570" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:36:05.568" endtime="20201110 08:36:05.570"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:05.559" endtime="20201110 08:36:05.571"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:05.580" level="INFO">NAME: 5-start-iter</msg>
<status status="PASS" starttime="20201110 08:36:05.578" endtime="20201110 08:36:05.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:05.584" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:36:05.582" endtime="20201110 08:36:05.585"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:05.573" endtime="20201110 08:36:05.586"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:05.594" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201110 08:36:05.592" endtime="20201110 08:36:05.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:05.598" level="INFO">VALUE: 32233820</msg>
<status status="PASS" starttime="20201110 08:36:05.596" endtime="20201110 08:36:05.599"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:05.587" endtime="20201110 08:36:05.600"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:05.608" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:05.606" endtime="20201110 08:36:05.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:05.613" level="INFO">VALUE: [32243868, 32253866, 32263865, 32273865, 32283865, 32293865, 32303865, 32313865, 32323865, 32333865, 32343865, 32353865, 32363865, 32373865, 32383865, 32393865, 32403865, 32413865, 32423865, 32433865, 32443865, 32453865, 32463865, 32473865, 32483865, 32493865, 32503865, 32513865, 32523865, 32533865, 32543865, 32553865, 32563865, 32573865, 32583865, 32593865, 32603865, 32613865, 32623865, 32633865, 32643865, 32653865, 32663865, 32673865, 32683865, 32693865, 32703865, 32713865, 32723865, 32733865, 32743865, 32753865, 32763865, 32773865, 32783865, 32793865, 32803865, 32813865, 32823865, 32833865, 32843865, 32853865, 32863865, 32873865, 32883865, 32893865, 32903865, 32913865, 32923865, 32933865, 32943865, 32953865, 32963865, 32973865, 32983865, 32993865, 33003865, 33013865, 33023865, 33033865, 33043865, 33053865, 33063865, 33073865, 33083865, 33093865, 33103865, 33113865, 33123865, 33133865, 33143865, 33153865, 33163865, 33173865, 33183865, 33193865, 33203865, 33213865, 33223865, 33233865]</msg>
<status status="PASS" starttime="20201110 08:36:05.610" endtime="20201110 08:36:05.613"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:05.601" endtime="20201110 08:36:05.615"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:05.628" endtime="20201110 08:36:05.921"></status>
</kw>
<msg timestamp="20201110 08:36:05.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021686472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031735486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:05.625" endtime="20201110 08:36:05.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:05.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021686472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031735486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:05.925" endtime="20201110 08:36:05.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:05.933" endtime="20201110 08:36:05.935"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:05.619" endtime="20201110 08:36:05.936"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:05.616" endtime="20201110 08:36:05.936"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:05.962" level="INFO">${RESULT} = {'source_diff': [0, 0.010049014000000002, 0.009998846999999998, 0.009999931000000004, 0.010000916999999998, 0.010000915999999999, 0.010000931000000005, 0.010000902999999992, 0.010000958000000004, 0.01...</msg>
<status status="PASS" starttime="20201110 08:36:05.937" endtime="20201110 08:36:05.962"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:05.967" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201110 08:36:05.966" endtime="20201110 08:36:05.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:05.969" level="INFO">VALUE: 0.021686472</msg>
<status status="PASS" starttime="20201110 08:36:05.968" endtime="20201110 08:36:05.969"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:05.963" endtime="20201110 08:36:05.970"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:05.974" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:05.973" endtime="20201110 08:36:05.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:05.977" level="INFO">VALUE: [0.031735486, 0.041734333, 0.051734264, 0.061735181, 0.071736097, 0.081737028, 0.091737931, 0.101738889, 0.111739819, 0.121740722, 0.131741667, 0.141742569, 0.151743486, 0.161744403, 0.171745319, 0.18174625, 0.191747167, 0.201748097, 0.211749014, 0.221749944, 0.231750875, 0.241751792, 0.251752708, 0.261753639, 0.271754556, 0.2817555, 0.291756403, 0.301757361, 0.31175825, 0.321759208, 0.331760097, 0.341761056, 0.351761958, 0.361762903, 0.371763806, 0.381764736, 0.391765667, 0.401766597, 0.411767514, 0.421768444, 0.431769347, 0.441770278, 0.451771208, 0.461772153, 0.471773042, 0.481773986, 0.491774903, 0.501775833, 0.511776764, 0.521777694, 0.531778597, 0.541779597, 0.551780458, 0.561781431, 0.571782292, 0.581783236, 0.591784139, 0.601785083, 0.611785986, 0.621786931, 0.631787861, 0.641788778, 0.651789764, 0.661790639, 0.671791542, 0.6817925, 0.691793403, 0.701794333, 0.71179525, 0.721796181, 0.731797111, 0.741798069, 0.751798958, 0.761799917, 0.771800792, 0.781801722, 0.791802639, 0.801803583, 0.8118045, 0.821805444, 0.831806347, 0.841807292, 0.851808208, 0.861809153, 0.871810042, 0.881810972, 0.891811903, 0.901812833, 0.911813736, 0.921814681, 0.931815611, 0.941816542, 0.951817486, 0.961818431, 0.971819292, 0.981820236, 0.991821139, 1.001822083, 1.011822986, 1.021823958] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:36:05.975" endtime="20201110 08:36:05.977"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:05.970" endtime="20201110 08:36:05.977"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:05.980" endtime="20201110 08:36:05.981"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:05.983" endtime="20201110 08:36:06.003"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:05.982" endtime="20201110 08:36:06.003"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:05.978" endtime="20201110 08:36:06.004"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:03.429" endtime="20201110 08:36:06.004"></status>
</kw>
<msg timestamp="20201110 08:36:06.004" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:06.013" endtime="20201110 08:36:08.105"></status>
</kw>
<msg timestamp="20201110 08:36:08.106" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 34809750, 'start-iter': 1, 'wakeups': [34819798, 34829796, 34839795, 3...</msg>
<status status="PASS" starttime="20201110 08:36:06.011" endtime="20201110 08:36:08.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:08.112" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 34809750, 'start-iter': 1, 'wakeups': [34819798, 34829796, 34839795, 3...</msg>
<status status="PASS" starttime="20201110 08:36:08.108" endtime="20201110 08:36:08.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:08.115" endtime="20201110 08:36:08.120"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:06.008" endtime="20201110 08:36:08.121"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:06.006" endtime="20201110 08:36:08.122"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:08.128" level="INFO">${RESULT} = {'start-iter': 1, 'start-time': 34809750, 'timer-count': 5, 'timer-interval': 10000, 'wakeups': [34819798, 34829796, 34839795, 34849795, 34859795, 34869795, 34879795, 34889795, 34899795, 34909795, 349...</msg>
<status status="PASS" starttime="20201110 08:36:08.124" endtime="20201110 08:36:08.129"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:08.137" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:36:08.135" endtime="20201110 08:36:08.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:08.142" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:36:08.140" endtime="20201110 08:36:08.143"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:08.130" endtime="20201110 08:36:08.144"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:08.153" level="INFO">NAME: 5-start-iter</msg>
<status status="PASS" starttime="20201110 08:36:08.151" endtime="20201110 08:36:08.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:08.158" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:36:08.156" endtime="20201110 08:36:08.159"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:08.146" endtime="20201110 08:36:08.160"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:08.169" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201110 08:36:08.166" endtime="20201110 08:36:08.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:08.173" level="INFO">VALUE: 34809750</msg>
<status status="PASS" starttime="20201110 08:36:08.171" endtime="20201110 08:36:08.174"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:08.161" endtime="20201110 08:36:08.175"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:08.182" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:08.181" endtime="20201110 08:36:08.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:08.184" level="INFO">VALUE: [34819798, 34829796, 34839795, 34849795, 34859795, 34869795, 34879795, 34889795, 34899795, 34909795, 34919795, 34929795, 34939795, 34949795, 34959795, 34969795, 34979795, 34989795, 34999795, 35009795, 35019795, 35029795, 35039795, 35049795, 35059795, 35069795, 35079795, 35089795, 35099795, 35109795, 35119795, 35129795, 35139795, 35149795, 35159795, 35169795, 35179795, 35189795, 35199795, 35209795, 35219795, 35229795, 35239795, 35249795, 35259795, 35269795, 35279795, 35289795, 35299795, 35309795, 35319795, 35329795, 35339795, 35349795, 35359795, 35369795, 35379795, 35389795, 35399795, 35409795, 35419795, 35429795, 35439795, 35449795, 35459795, 35469795, 35479795, 35489795, 35499795, 35509795, 35519795, 35529795, 35539795, 35549795, 35559795, 35569795, 35579795, 35589795, 35599795, 35609795, 35619795, 35629795, 35639795, 35649795, 35659795, 35669795, 35679795, 35689795, 35699795, 35709795, 35719795, 35729795, 35739795, 35749795, 35759795, 35769795, 35779795, 35789795, 35799795, 35809795]</msg>
<status status="PASS" starttime="20201110 08:36:08.183" endtime="20201110 08:36:08.185"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:08.176" endtime="20201110 08:36:08.185"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:08.192" endtime="20201110 08:36:08.486"></status>
</kw>
<msg timestamp="20201110 08:36:08.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018769222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028818111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:08.190" endtime="20201110 08:36:08.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:08.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018769222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028818111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:08.490" endtime="20201110 08:36:08.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:08.498" endtime="20201110 08:36:08.499"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:08.188" endtime="20201110 08:36:08.500"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:08.186" endtime="20201110 08:36:08.500"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:08.525" level="INFO">${RESULT} = {'source_diff': [0, 0.010048889000000002, 0.009998846999999998, 0.009999917000000004, 0.010000916999999998, 0.010000916000000006, 0.010000916999999998, 0.010000943999999998, 0.010000902999999992, 0.01...</msg>
<status status="PASS" starttime="20201110 08:36:08.501" endtime="20201110 08:36:08.525"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:08.529" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201110 08:36:08.528" endtime="20201110 08:36:08.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:08.531" level="INFO">VALUE: 0.018769222</msg>
<status status="PASS" starttime="20201110 08:36:08.530" endtime="20201110 08:36:08.532"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:08.526" endtime="20201110 08:36:08.532"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:08.537" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:08.536" endtime="20201110 08:36:08.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:08.539" level="INFO">VALUE: [0.028818111, 0.038816958, 0.048816875, 0.058817792, 0.068818708, 0.078819625, 0.088820569, 0.098821472, 0.108822417, 0.118823333, 0.128824306, 0.138825194, 0.148826111, 0.158827014, 0.168827944, 0.178828861, 0.188829792, 0.198830722, 0.208831639, 0.218832556, 0.228833486, 0.238834444, 0.248835347, 0.25883625, 0.268837181, 0.278838097, 0.288839042, 0.298839944, 0.308840875, 0.318841792, 0.32884275, 0.338843653, 0.348844569, 0.3588455, 0.368846458, 0.378847333, 0.388848306, 0.398849208, 0.408850125, 0.418851042, 0.428851972, 0.438852875, 0.448853833, 0.458854778, 0.468855681, 0.478856611, 0.488857528, 0.498858444, 0.508859361, 0.518860292, 0.528861208, 0.538862125, 0.548863069, 0.558863972, 0.568864917, 0.578865847, 0.588866764, 0.598867681, 0.608868611, 0.618869528, 0.628870472, 0.638871417, 0.648872319, 0.658873222, 0.668874181, 0.678875083, 0.688876014, 0.698876931, 0.708877861, 0.718878778, 0.728879722, 0.738880639, 0.748881583, 0.758882472, 0.768883417, 0.778884333, 0.788885264, 0.798886167, 0.808887111, 0.818888014, 0.828888958, 0.838889861, 0.848890819, 0.858891708, 0.868892694, 0.878893556, 0.888894514, 0.898895431, 0.908896361, 0.91889725, 0.928898194, 0.938899097, 0.948900056, 0.958900958, 0.968901917, 0.978902792, 0.988903736, 0.998904681, 1.008905583, 1.018906514] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:36:08.538" endtime="20201110 08:36:08.540"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:08.533" endtime="20201110 08:36:08.540"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:08.543" endtime="20201110 08:36:08.544"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:08.546" endtime="20201110 08:36:08.565"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:08.545" endtime="20201110 08:36:08.566"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:08.541" endtime="20201110 08:36:08.566"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:06.005" endtime="20201110 08:36:08.567"></status>
</kw>
<msg timestamp="20201110 08:36:08.567" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:08.575" endtime="20201110 08:36:10.667"></status>
</kw>
<msg timestamp="20201110 08:36:10.669" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 37371942, 'start-iter': 1, 'wakeups': [37381990, 37391988, 37401987, 3...</msg>
<status status="PASS" starttime="20201110 08:36:08.574" endtime="20201110 08:36:10.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:10.674" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 37371942, 'start-iter': 1, 'wakeups': [37381990, 37391988, 37401987, 3...</msg>
<status status="PASS" starttime="20201110 08:36:10.671" endtime="20201110 08:36:10.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:10.677" endtime="20201110 08:36:10.680"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:08.571" endtime="20201110 08:36:10.681"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:08.569" endtime="20201110 08:36:10.682"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:10.688" level="INFO">${RESULT} = {'start-iter': 1, 'start-time': 37371942, 'timer-count': 5, 'timer-interval': 10000, 'wakeups': [37381990, 37391988, 37401987, 37411987, 37421987, 37431987, 37441987, 37451987, 37461987, 37471987, 374...</msg>
<status status="PASS" starttime="20201110 08:36:10.684" endtime="20201110 08:36:10.688"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:10.698" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:36:10.694" endtime="20201110 08:36:10.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:10.703" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:36:10.701" endtime="20201110 08:36:10.704"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:10.689" endtime="20201110 08:36:10.705"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:10.713" level="INFO">NAME: 5-start-iter</msg>
<status status="PASS" starttime="20201110 08:36:10.711" endtime="20201110 08:36:10.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:10.718" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:36:10.716" endtime="20201110 08:36:10.718"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:10.706" endtime="20201110 08:36:10.719"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:10.737" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201110 08:36:10.735" endtime="20201110 08:36:10.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:10.742" level="INFO">VALUE: 37371942</msg>
<status status="PASS" starttime="20201110 08:36:10.739" endtime="20201110 08:36:10.742"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:10.730" endtime="20201110 08:36:10.743"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:10.747" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:10.746" endtime="20201110 08:36:10.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:10.749" level="INFO">VALUE: [37381990, 37391988, 37401987, 37411987, 37421987, 37431987, 37441987, 37451987, 37461987, 37471987, 37481987, 37491987, 37501987, 37511987, 37521987, 37531987, 37541987, 37551987, 37561987, 37571987, 37581987, 37591987, 37601987, 37611987, 37621987, 37631987, 37641987, 37651987, 37661987, 37671987, 37681987, 37691987, 37701987, 37711987, 37721987, 37731987, 37741987, 37751987, 37761987, 37771987, 37781987, 37791987, 37801987, 37811987, 37821987, 37831987, 37841987, 37851987, 37861987, 37871987, 37881987, 37891987, 37901987, 37911987, 37921987, 37931987, 37941987, 37951987, 37961987, 37971987, 37981987, 37991987, 38001987, 38011987, 38021987, 38031987, 38041987, 38051987, 38061987, 38071987, 38081987, 38091987, 38101987, 38111987, 38121987, 38131987, 38141987, 38151987, 38161987, 38171987, 38181987, 38191987, 38201987, 38211987, 38221987, 38231987, 38241987, 38251987, 38261987, 38271987, 38281987, 38291987, 38301987, 38311987, 38321987, 38331987, 38341987, 38351987, 38361987, 38371987]</msg>
<status status="PASS" starttime="20201110 08:36:10.748" endtime="20201110 08:36:10.750"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:10.744" endtime="20201110 08:36:10.750"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:10.757" endtime="20201110 08:36:11.047"></status>
</kw>
<msg timestamp="20201110 08:36:11.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018257611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02830675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:36:10.755" endtime="20201110 08:36:11.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:11.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018257611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02830675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:36:11.051" endtime="20201110 08:36:11.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:11.059" endtime="20201110 08:36:11.060"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:10.753" endtime="20201110 08:36:11.061"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:10.751" endtime="20201110 08:36:11.062"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:11.087" level="INFO">${RESULT} = {'source_diff': [0, 0.010049138999999999, 0.009998846999999998, 0.009999931000000004, 0.010000902999999998, 0.010000944000000005, 0.010000902999999992, 0.010000944000000012, 0.010000902999999992, 0.01...</msg>
<status status="PASS" starttime="20201110 08:36:11.062" endtime="20201110 08:36:11.087"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:11.091" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201110 08:36:11.090" endtime="20201110 08:36:11.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:11.093" level="INFO">VALUE: 0.018257611</msg>
<status status="PASS" starttime="20201110 08:36:11.092" endtime="20201110 08:36:11.094"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:11.088" endtime="20201110 08:36:11.094"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:11.099" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:11.098" endtime="20201110 08:36:11.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:11.101" level="INFO">VALUE: [0.02830675, 0.038305597, 0.048305528, 0.058306431, 0.068307375, 0.078308278, 0.088309222, 0.098310125, 0.108311153, 0.118311986, 0.128312931, 0.138313819, 0.148314764, 0.158315681, 0.168316611, 0.178317528, 0.188318458, 0.198319361, 0.208320319, 0.218321208, 0.228322153, 0.238323069, 0.248324, 0.258324917, 0.268325889, 0.278326778, 0.288327708, 0.298328653, 0.308329542, 0.318330458, 0.328331458, 0.338332306, 0.348333236, 0.358334153, 0.368335097, 0.378336, 0.388336958, 0.398337847, 0.408338847, 0.418339708, 0.428340653, 0.438341569, 0.448342486, 0.458343417, 0.468344375, 0.478345306, 0.488346194, 0.498347111, 0.508348042, 0.518348972, 0.528349889, 0.538350806, 0.548351736, 0.558352653, 0.568353611, 0.5783545, 0.588355458, 0.598356375, 0.608357292, 0.618358222, 0.628359153, 0.638360083, 0.648360986, 0.658361917, 0.668362847, 0.67836375, 0.688364708, 0.698365625, 0.708366597, 0.718367458, 0.728368458, 0.738369319, 0.748370264, 0.758371153, 0.768372083, 0.778373014, 0.788373944, 0.798374903, 0.808375778, 0.818376694, 0.828377653, 0.838378556, 0.848379486, 0.858380403, 0.868381319, 0.878382236, 0.888383167, 0.898384097, 0.908385014, 0.918385931, 0.928386861, 0.938387778, 0.948388722, 0.958389625, 0.968390569, 0.978391472, 0.988392403, 0.998393319, 1.008394264, 1.018395167] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:36:11.100" endtime="20201110 08:36:11.101"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:11.095" endtime="20201110 08:36:11.102"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:11.104" endtime="20201110 08:36:11.106"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:11.108" endtime="20201110 08:36:11.127"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:11.106" endtime="20201110 08:36:11.128"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:11.103" endtime="20201110 08:36:11.128"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:08.568" endtime="20201110 08:36:11.128"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:03.427" endtime="20201110 08:36:11.129"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:03.426" endtime="20201110 08:36:11.129"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:36:11.131" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:11.139" endtime="20201110 08:36:13.232"></status>
</kw>
<msg timestamp="20201110 08:36:13.233" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 39936421, 'start-iter': 1, 'wakeups': [39946480, 39956478, 39966478, 3...</msg>
<status status="PASS" starttime="20201110 08:36:11.138" endtime="20201110 08:36:13.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:13.239" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 39936421, 'start-iter': 1, 'wakeups': [39946480, 39956478, 39966478, 3...</msg>
<status status="PASS" starttime="20201110 08:36:13.235" endtime="20201110 08:36:13.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:13.241" endtime="20201110 08:36:13.244"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:11.135" endtime="20201110 08:36:13.245"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:11.133" endtime="20201110 08:36:13.246"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:13.252" level="INFO">${RESULT} = {'start-iter': 1, 'start-time': 39936421, 'timer-count': 6, 'timer-interval': 10000, 'wakeups': [39946480, 39956478, 39966478, 39976478, 39986478, 39996478, 40006478, 40016478, 40026478, 40036478, 400...</msg>
<status status="PASS" starttime="20201110 08:36:13.248" endtime="20201110 08:36:13.253"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:13.261" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:36:13.258" endtime="20201110 08:36:13.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:13.265" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:36:13.263" endtime="20201110 08:36:13.266"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:13.254" endtime="20201110 08:36:13.267"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:13.275" level="INFO">NAME: 6-start-iter</msg>
<status status="PASS" starttime="20201110 08:36:13.273" endtime="20201110 08:36:13.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:13.279" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:36:13.277" endtime="20201110 08:36:13.280"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:13.268" endtime="20201110 08:36:13.281"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:13.291" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201110 08:36:13.290" endtime="20201110 08:36:13.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:13.293" level="INFO">VALUE: 39936421</msg>
<status status="PASS" starttime="20201110 08:36:13.292" endtime="20201110 08:36:13.293"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:13.282" endtime="20201110 08:36:13.294"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:13.298" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:13.297" endtime="20201110 08:36:13.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:13.300" level="INFO">VALUE: [39946480, 39956478, 39966478, 39976478, 39986478, 39996478, 40006478, 40016478, 40026478, 40036478, 40046478, 40056478, 40066478, 40076478, 40086478, 40096478, 40106478, 40116478, 40126478, 40136478, 40146478, 40156478, 40166478, 40176478, 40186478, 40196478, 40206478, 40216478, 40226478, 40236478, 40246478, 40256478, 40266478, 40276478, 40286478, 40296478, 40306478, 40316478, 40326478, 40336478, 40346478, 40356478, 40366478, 40376478, 40386478, 40396478, 40406478, 40416478, 40426478, 40436478, 40446478, 40456478, 40466478, 40476478, 40486478, 40496478, 40506478, 40516478, 40526478, 40536478, 40546478, 40556478, 40566478, 40576478, 40586478, 40596478, 40606478, 40616478, 40626478, 40636478, 40646478, 40656478, 40666478, 40676478, 40686478, 40696478, 40706478, 40716478, 40726478, 40736478, 40746478, 40756478, 40766478, 40776478, 40786478, 40796478, 40806478, 40816478, 40826478, 40836478, 40846478, 40856478, 40866478, 40876478, 40886478, 40896478, 40906478, 40916478, 40926478, 40936478]</msg>
<status status="PASS" starttime="20201110 08:36:13.299" endtime="20201110 08:36:13.301"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:13.294" endtime="20201110 08:36:13.301"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:13.308" endtime="20201110 08:36:13.598"></status>
</kw>
<msg timestamp="20201110 08:36:13.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021162472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031222917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:13.306" endtime="20201110 08:36:13.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:13.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021162472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031222917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:13.602" endtime="20201110 08:36:13.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:13.610" endtime="20201110 08:36:13.611"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:13.304" endtime="20201110 08:36:13.612"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:13.302" endtime="20201110 08:36:13.612"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:13.636" level="INFO">${RESULT} = {'source_diff': [0, 0.010060444999999998, 0.00999868, 0.010000931000000005, 0.010000929999999998, 0.010000945000000004, 0.010000929999999991, 0.010000888999999999, 0.010000959000000004, 0.010000888, 0...</msg>
<status status="PASS" starttime="20201110 08:36:13.613" endtime="20201110 08:36:13.637"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:13.641" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201110 08:36:13.640" endtime="20201110 08:36:13.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:13.644" level="INFO">VALUE: 0.021162472</msg>
<status status="PASS" starttime="20201110 08:36:13.643" endtime="20201110 08:36:13.644"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:13.637" endtime="20201110 08:36:13.645"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:13.649" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:13.648" endtime="20201110 08:36:13.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:13.651" level="INFO">VALUE: [0.031222917, 0.041221597, 0.051222528, 0.061223458, 0.071224403, 0.081225333, 0.091226222, 0.101227181, 0.111228069, 0.121229, 0.131229917, 0.141230833, 0.151231806, 0.161232681, 0.171233611, 0.181234542, 0.191235458, 0.201236375, 0.211237306, 0.221238236, 0.231239153, 0.241240139, 0.251241014, 0.261241917, 0.271242847, 0.281243778, 0.291244694, 0.301245625, 0.311246542, 0.321247486, 0.331248403, 0.341249319, 0.35125025, 0.361251167, 0.371252139, 0.381253028, 0.391253944, 0.401254861, 0.411255778, 0.42125675, 0.431257653, 0.441258556, 0.451259486, 0.461260417, 0.471261333, 0.481262264, 0.491263181, 0.501264111, 0.511265097, 0.521265958, 0.531266931, 0.541267819, 0.551268736, 0.561269653, 0.571270639, 0.5812715, 0.591272431, 0.601273361, 0.611274278, 0.621275208, 0.631276153, 0.641277069, 0.651277986, 0.661278903, 0.671279833, 0.681280764, 0.691281681, 0.701282667, 0.711283528, 0.721284472, 0.731285389, 0.741286319, 0.751287222, 0.761288153, 0.771289083, 0.781290014, 0.791290944, 0.801291847, 0.811292792, 0.821293708, 0.831294653, 0.841295556, 0.851296472, 0.861297403, 0.871298319, 0.881299264, 0.891300181, 0.901301111, 0.911302042, 0.921302972, 0.931303875, 0.941304806, 0.951305722, 0.961306694, 0.971307583, 0.981308514, 0.991309431, 1.001310375, 1.011311292, 1.02131225] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:36:13.650" endtime="20201110 08:36:13.652"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:13.645" endtime="20201110 08:36:13.652"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:13.654" endtime="20201110 08:36:13.656"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:13.658" endtime="20201110 08:36:13.677"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:13.656" endtime="20201110 08:36:13.678"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:13.653" endtime="20201110 08:36:13.679"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:11.132" endtime="20201110 08:36:13.679"></status>
</kw>
<msg timestamp="20201110 08:36:13.679" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:13.687" endtime="20201110 08:36:15.779"></status>
</kw>
<msg timestamp="20201110 08:36:15.781" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 42484100, 'start-iter': 1, 'wakeups': [42494161, 42504159, 42514157, 4...</msg>
<status status="PASS" starttime="20201110 08:36:13.686" endtime="20201110 08:36:15.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:15.787" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 42484100, 'start-iter': 1, 'wakeups': [42494161, 42504159, 42514157, 4...</msg>
<status status="PASS" starttime="20201110 08:36:15.783" endtime="20201110 08:36:15.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:15.789" endtime="20201110 08:36:15.792"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:13.683" endtime="20201110 08:36:15.793"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:13.681" endtime="20201110 08:36:15.794"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:15.800" level="INFO">${RESULT} = {'start-iter': 1, 'start-time': 42484100, 'timer-count': 6, 'timer-interval': 10000, 'wakeups': [42494161, 42504159, 42514157, 42524157, 42534157, 42544157, 42554157, 42564157, 42574157, 42584157, 425...</msg>
<status status="PASS" starttime="20201110 08:36:15.796" endtime="20201110 08:36:15.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:15.808" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:36:15.806" endtime="20201110 08:36:15.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:15.813" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:36:15.811" endtime="20201110 08:36:15.814"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:15.802" endtime="20201110 08:36:15.815"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:15.823" level="INFO">NAME: 6-start-iter</msg>
<status status="PASS" starttime="20201110 08:36:15.821" endtime="20201110 08:36:15.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:15.827" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:36:15.825" endtime="20201110 08:36:15.828"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:15.816" endtime="20201110 08:36:15.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:15.837" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201110 08:36:15.835" endtime="20201110 08:36:15.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:15.842" level="INFO">VALUE: 42484100</msg>
<status status="PASS" starttime="20201110 08:36:15.840" endtime="20201110 08:36:15.843"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:15.830" endtime="20201110 08:36:15.844"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:15.854" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:15.850" endtime="20201110 08:36:15.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:15.859" level="INFO">VALUE: [42494161, 42504159, 42514157, 42524157, 42534157, 42544157, 42554157, 42564157, 42574157, 42584157, 42594157, 42604157, 42614157, 42624157, 42634157, 42644157, 42654157, 42664157, 42674157, 42684157, 42694157, 42704157, 42714157, 42724157, 42734157, 42744157, 42754157, 42764157, 42774157, 42784157, 42794157, 42804157, 42814157, 42824157, 42834157, 42844157, 42854157, 42864157, 42874157, 42884157, 42894157, 42904157, 42914157, 42924157, 42934157, 42944157, 42954157, 42964157, 42974157, 42984157, 42994157, 43004157, 43014157, 43024157, 43034157, 43044157, 43054157, 43064157, 43074157, 43084157, 43094157, 43104157, 43114157, 43124157, 43134157, 43144157, 43154157, 43164157, 43174157, 43184157, 43194157, 43204157, 43214157, 43224157, 43234157, 43244157, 43254157, 43264157, 43274157, 43284157, 43294157, 43304157, 43314157, 43324157, 43334157, 43344157, 43354157, 43364157, 43374157, 43384157, 43394157, 43404157, 43414157, 43424157, 43434157, 43444157, 43454157, 43464157, 43474157, 43484157]</msg>
<status status="PASS" starttime="20201110 08:36:15.856" endtime="20201110 08:36:15.860"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:15.845" endtime="20201110 08:36:15.861"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:15.876" endtime="20201110 08:36:16.168"></status>
</kw>
<msg timestamp="20201110 08:36:16.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018742181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028803819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:15.874" endtime="20201110 08:36:16.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:16.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018742181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028803819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:16.172" endtime="20201110 08:36:16.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:16.179" endtime="20201110 08:36:16.181"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:15.872" endtime="20201110 08:36:16.182"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:15.862" endtime="20201110 08:36:16.182"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:16.207" level="INFO">${RESULT} = {'source_diff': [0, 0.010061638000000001, 0.009999152999999997, 0.009998931000000003, 0.010000929999999998, 0.010000903000000005, 0.01000095799999999, 0.010000888999999999, 0.010000931000000005, 0.010...</msg>
<status status="PASS" starttime="20201110 08:36:16.183" endtime="20201110 08:36:16.207"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:16.211" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201110 08:36:16.210" endtime="20201110 08:36:16.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:16.214" level="INFO">VALUE: 0.018742181</msg>
<status status="PASS" starttime="20201110 08:36:16.213" endtime="20201110 08:36:16.214"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.208" endtime="20201110 08:36:16.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:16.219" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:16.218" endtime="20201110 08:36:16.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:16.221" level="INFO">VALUE: [0.028803819, 0.038802972, 0.048801903, 0.058802833, 0.068803736, 0.078804694, 0.088805583, 0.098806514, 0.108807431, 0.118808361, 0.128809333, 0.138810222, 0.148811167, 0.158812069, 0.168812986, 0.178813917, 0.188814819, 0.19881575, 0.208816667, 0.218817611, 0.228818514, 0.238819528, 0.248820361, 0.258821292, 0.268822208, 0.278823153, 0.288824097, 0.298825, 0.308825931, 0.318826833, 0.328827764, 0.338828694, 0.348829611, 0.358830528, 0.368831458, 0.378832403, 0.388833306, 0.398834236, 0.408835167, 0.418836097, 0.428837, 0.438837931, 0.448838847, 0.458839778, 0.468840708, 0.478841625, 0.488842556, 0.498843472, 0.508844431, 0.518845347, 0.52884625, 0.538847194, 0.548848167, 0.558849042, 0.568849972, 0.578850903, 0.588851819, 0.598852736, 0.608853653, 0.618854625, 0.628855514, 0.638856431, 0.648857431, 0.658858292, 0.668859194, 0.678860125, 0.688861125, 0.698862014, 0.708862917, 0.718863819, 0.728864764, 0.738865681, 0.748866597, 0.758867528, 0.768868444, 0.778869375, 0.788870306, 0.798871222, 0.808872153, 0.818873069, 0.828874, 0.838874931, 0.848875847, 0.858876847, 0.868877708, 0.878878625, 0.888879556, 0.898880472, 0.908881403, 0.918882333, 0.928883278, 0.938884181, 0.948885097, 0.958886028, 0.968886944, 0.978887875, 0.988888861, 0.998889722, 1.008890653, 1.018891583] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:36:16.220" endtime="20201110 08:36:16.221"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.215" endtime="20201110 08:36:16.222"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:16.224" endtime="20201110 08:36:16.225"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:16.228" endtime="20201110 08:36:16.248"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.226" endtime="20201110 08:36:16.248"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.223" endtime="20201110 08:36:16.249"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:13.680" endtime="20201110 08:36:16.249"></status>
</kw>
<msg timestamp="20201110 08:36:16.249" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:16.257" endtime="20201110 08:36:18.349"></status>
</kw>
<msg timestamp="20201110 08:36:18.350" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 45054249, 'start-iter': 1, 'wakeups': [45064310, 45074307, 45084306, 4...</msg>
<status status="PASS" starttime="20201110 08:36:16.256" endtime="20201110 08:36:18.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:18.357" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 45054249, 'start-iter': 1, 'wakeups': [45064310, 45074307, 45084306, 4...</msg>
<status status="PASS" starttime="20201110 08:36:18.353" endtime="20201110 08:36:18.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:18.359" endtime="20201110 08:36:18.363"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.253" endtime="20201110 08:36:18.364"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.251" endtime="20201110 08:36:18.365"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:18.370" level="INFO">${RESULT} = {'start-iter': 1, 'start-time': 45054249, 'timer-count': 6, 'timer-interval': 10000, 'wakeups': [45064310, 45074307, 45084306, 45094306, 45104306, 45114306, 45124306, 45134306, 45144306, 45154306, 451...</msg>
<status status="PASS" starttime="20201110 08:36:18.366" endtime="20201110 08:36:18.371"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:18.379" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:36:18.377" endtime="20201110 08:36:18.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:18.383" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:36:18.381" endtime="20201110 08:36:18.384"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.372" endtime="20201110 08:36:18.385"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:18.393" level="INFO">NAME: 6-start-iter</msg>
<status status="PASS" starttime="20201110 08:36:18.391" endtime="20201110 08:36:18.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:18.398" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:36:18.396" endtime="20201110 08:36:18.398"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.386" endtime="20201110 08:36:18.399"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:18.408" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201110 08:36:18.406" endtime="20201110 08:36:18.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:18.412" level="INFO">VALUE: 45054249</msg>
<status status="PASS" starttime="20201110 08:36:18.410" endtime="20201110 08:36:18.413"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.401" endtime="20201110 08:36:18.414"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:18.422" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:18.420" endtime="20201110 08:36:18.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:18.427" level="INFO">VALUE: [45064310, 45074307, 45084306, 45094306, 45104306, 45114306, 45124306, 45134306, 45144306, 45154306, 45164306, 45174306, 45184306, 45194306, 45204306, 45214306, 45224306, 45234306, 45244306, 45254306, 45264306, 45274306, 45284306, 45294306, 45304306, 45314306, 45324306, 45334306, 45344306, 45354306, 45364306, 45374306, 45384306, 45394306, 45404306, 45414306, 45424306, 45434306, 45444306, 45454306, 45464306, 45474306, 45484306, 45494306, 45504306, 45514306, 45524306, 45534306, 45544306, 45554306, 45564306, 45574306, 45584306, 45594306, 45604306, 45614306, 45624306, 45634306, 45644306, 45654306, 45664306, 45674306, 45684306, 45694306, 45704306, 45714306, 45724306, 45734306, 45744306, 45754306, 45764306, 45774306, 45784306, 45794306, 45804306, 45814306, 45824306, 45834306, 45844306, 45854306, 45864306, 45874306, 45884306, 45894306, 45904306, 45914306, 45924306, 45934306, 45944306, 45954306, 45964306, 45974306, 45984306, 45994306, 46004306, 46014306, 46024306, 46034306, 46044306, 46054306]</msg>
<status status="PASS" starttime="20201110 08:36:18.425" endtime="20201110 08:36:18.428"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.415" endtime="20201110 08:36:18.429"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:18.442" endtime="20201110 08:36:18.739"></status>
</kw>
<msg timestamp="20201110 08:36:18.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018345056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028406694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:18.439" endtime="20201110 08:36:18.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:18.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018345056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028406694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:18.743" endtime="20201110 08:36:18.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:18.751" endtime="20201110 08:36:18.753"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.434" endtime="20201110 08:36:18.753"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.430" endtime="20201110 08:36:18.754"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:18.777" level="INFO">${RESULT} = {'source_diff': [0, 0.010061638000000001, 0.009998153, 0.009999903000000004, 0.010000957999999997, 0.010000888999999999, 0.010000931000000005, 0.010000915999999999, 0.01000093099999999, 0.010000917000...</msg>
<status status="PASS" starttime="20201110 08:36:18.754" endtime="20201110 08:36:18.778"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:18.782" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201110 08:36:18.781" endtime="20201110 08:36:18.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:18.784" level="INFO">VALUE: 0.018345056</msg>
<status status="PASS" starttime="20201110 08:36:18.783" endtime="20201110 08:36:18.784"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.778" endtime="20201110 08:36:18.785"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:18.789" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:18.788" endtime="20201110 08:36:18.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:18.791" level="INFO">VALUE: [0.028406694, 0.038404847, 0.04840475, 0.058405708, 0.068406597, 0.078407528, 0.088408444, 0.098409375, 0.108410292, 0.118411236, 0.128412139, 0.138413069, 0.148413986, 0.158414931, 0.168415875, 0.17841675, 0.188417694, 0.198418597, 0.208419542, 0.2184205, 0.228421375, 0.238422306, 0.248423236, 0.258424139, 0.268425069, 0.278425986, 0.288426917, 0.298427847, 0.308428764, 0.318429764, 0.328430625, 0.338431542, 0.348432486, 0.358433389, 0.368434306, 0.378435236, 0.388436153, 0.398437083, 0.408438014, 0.418438931, 0.428439847, 0.438440778, 0.448441708, 0.458442639, 0.468443556, 0.478444486, 0.488445403, 0.498446333, 0.50844725, 0.518448167, 0.528449111, 0.538450028, 0.548450944, 0.558451875, 0.568452792, 0.578453722, 0.588454653, 0.598455569, 0.608456514, 0.618457472, 0.628458347, 0.638459319, 0.648460222, 0.658461111, 0.668462042, 0.678462958, 0.688463903, 0.698464833, 0.70846575, 0.718466722, 0.728467583, 0.738468569, 0.748469431, 0.758470375, 0.768471306, 0.778472222, 0.788473139, 0.798474083, 0.808475, 0.818475917, 0.828476833, 0.838477764, 0.848478681, 0.858479611, 0.868480528, 0.878481458, 0.888482389, 0.898483306, 0.908484236, 0.918485153, 0.928486083, 0.938487056, 0.948487931, 0.958488875, 0.968489792, 0.978490764, 0.988491625, 0.998492556, 1.008493486, 1.018494417] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:36:18.790" endtime="20201110 08:36:18.792"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.785" endtime="20201110 08:36:18.792"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:18.795" endtime="20201110 08:36:18.796"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:18.798" endtime="20201110 08:36:18.817"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.796" endtime="20201110 08:36:18.818"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.793" endtime="20201110 08:36:18.818"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.250" endtime="20201110 08:36:18.819"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:11.130" endtime="20201110 08:36:18.819"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:11.129" endtime="20201110 08:36:18.819"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:36:18.822" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:18.831" endtime="20201110 08:36:20.923"></status>
</kw>
<msg timestamp="20201110 08:36:20.924" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 47627538, 'start-iter': 1, 'wakeups': [47637613, 47647612, 47657610, 4...</msg>
<status status="PASS" starttime="20201110 08:36:18.829" endtime="20201110 08:36:20.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:20.930" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 47627538, 'start-iter': 1, 'wakeups': [47637613, 47647612, 47657610, 4...</msg>
<status status="PASS" starttime="20201110 08:36:20.927" endtime="20201110 08:36:20.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:20.933" endtime="20201110 08:36:20.936"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.826" endtime="20201110 08:36:20.937"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.824" endtime="20201110 08:36:20.945"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:20.951" level="INFO">${RESULT} = {'start-iter': 1, 'start-time': 47627538, 'timer-count': 7, 'timer-interval': 10000, 'wakeups': [47637613, 47647612, 47657610, 47667611, 47677610, 47687610, 47697611, 47707610, 47717610, 47727611, 477...</msg>
<status status="PASS" starttime="20201110 08:36:20.947" endtime="20201110 08:36:20.952"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:20.960" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:36:20.957" endtime="20201110 08:36:20.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:20.964" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:36:20.962" endtime="20201110 08:36:20.965"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.953" endtime="20201110 08:36:20.966"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:20.974" level="INFO">NAME: 7-start-iter</msg>
<status status="PASS" starttime="20201110 08:36:20.972" endtime="20201110 08:36:20.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:20.978" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:36:20.976" endtime="20201110 08:36:20.979"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.967" endtime="20201110 08:36:20.980"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:20.989" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201110 08:36:20.987" endtime="20201110 08:36:20.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:20.993" level="INFO">VALUE: 47627538</msg>
<status status="PASS" starttime="20201110 08:36:20.991" endtime="20201110 08:36:20.994"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.981" endtime="20201110 08:36:20.995"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:21.004" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:21.001" endtime="20201110 08:36:21.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:21.008" level="INFO">VALUE: [47637613, 47647612, 47657610, 47667611, 47677610, 47687610, 47697611, 47707610, 47717610, 47727611, 47737610, 47747610, 47757611, 47767610, 47777610, 47787611, 47797610, 47807610, 47817611, 47827610, 47837610, 47847611, 47857610, 47867610, 47877611, 47887610, 47897610, 47907611, 47917610, 47927610, 47937611, 47947610, 47957610, 47967611, 47977610, 47987610, 47997611, 48007610, 48017610, 48027611, 48037610, 48047610, 48057611, 48067610, 48077610, 48087611, 48097610, 48107610, 48117611, 48127610, 48137610, 48147611, 48157610, 48167610, 48177611, 48187610, 48197610, 48207611, 48217610, 48227610, 48237611, 48247610, 48257610, 48267611, 48277610, 48287610, 48297611, 48307610, 48317610, 48327611, 48337610, 48347610, 48357611, 48367610, 48377610, 48387611, 48397610, 48407610, 48417611, 48427610, 48437610, 48447611, 48457610, 48467610, 48477611, 48487610, 48497610, 48507611, 48517610, 48527610, 48537611, 48547610, 48557610, 48567611, 48577610, 48587610, 48597611, 48607610, 48617610, 48627611]</msg>
<status status="PASS" starttime="20201110 08:36:21.006" endtime="20201110 08:36:21.009"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.996" endtime="20201110 08:36:21.010"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:21.017" endtime="20201110 08:36:21.307"></status>
</kw>
<msg timestamp="20201110 08:36:21.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021972972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032048806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:21.016" endtime="20201110 08:36:21.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:21.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021972972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032048806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:21.311" endtime="20201110 08:36:21.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:21.318" endtime="20201110 08:36:21.321"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:21.013" endtime="20201110 08:36:21.322"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:21.011" endtime="20201110 08:36:21.322"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:21.347" level="INFO">${RESULT} = {'source_diff': [0, 0.010075833999999999, 0.009999944000000004, 0.009999513999999994, 0.010001250000000003, 0.009999916999999997, 0.010001611000000007, 0.010001235999999997, 0.009999930000000004, 0.01...</msg>
<status status="PASS" starttime="20201110 08:36:21.323" endtime="20201110 08:36:21.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:21.352" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201110 08:36:21.351" endtime="20201110 08:36:21.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:21.354" level="INFO">VALUE: 0.021972972</msg>
<status status="PASS" starttime="20201110 08:36:21.353" endtime="20201110 08:36:21.354"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:21.348" endtime="20201110 08:36:21.355"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:21.359" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:21.358" endtime="20201110 08:36:21.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:21.361" level="INFO">VALUE: [0.032048806, 0.04204875, 0.052048264, 0.062049514, 0.072049431, 0.082051042, 0.092052278, 0.102052208, 0.112053806, 0.122055056, 0.132054972, 0.142056569, 0.152057819, 0.16205775, 0.172059361, 0.182060583, 0.192060528, 0.202062125, 0.212063361, 0.222063292, 0.232064889, 0.242066139, 0.252066056, 0.262067653, 0.272068917, 0.282068833, 0.292070444, 0.302071681, 0.312071597, 0.322073194, 0.332074444, 0.342074375, 0.352075972, 0.362077222, 0.372077153, 0.38207875, 0.39208, 0.402079917, 0.412081514, 0.422082764, 0.432082694, 0.442084347, 0.452085556, 0.462085486, 0.472087111, 0.482088319, 0.492088236, 0.502089861, 0.512091111, 0.522091014, 0.532092611, 0.542093875, 0.552093792, 0.562095389, 0.572096653, 0.582096569, 0.592098167, 0.602099458, 0.612099347, 0.622100986, 0.632102194, 0.642102111, 0.652103722, 0.662104972, 0.672104903, 0.682106486, 0.692107736, 0.702107667, 0.712109278, 0.722110556, 0.732110444, 0.742112056, 0.752113292, 0.762113222, 0.772114819, 0.782116083, 0.792115986, 0.802117583, 0.812118833, 0.822118764, 0.832120361, 0.842121611, 0.852121528, 0.862123139, 0.872124389, 0.882124306, 0.892125903, 0.902127167, 0.912127097, 0.922128722, 0.932129944, 0.942129861, 0.952131458, 0.962132708, 0.972132639, 0.98213425, 0.992135486, 1.002135417, 1.012137014, 1.022138264] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:36:21.360" endtime="20201110 08:36:21.362"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:21.355" endtime="20201110 08:36:21.362"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:21.364" endtime="20201110 08:36:21.366"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:21.368" endtime="20201110 08:36:21.387"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:21.366" endtime="20201110 08:36:21.388"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:21.363" endtime="20201110 08:36:21.388"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.822" endtime="20201110 08:36:21.388"></status>
</kw>
<msg timestamp="20201110 08:36:21.389" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:21.397" endtime="20201110 08:36:23.489"></status>
</kw>
<msg timestamp="20201110 08:36:23.490" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 50193620, 'start-iter': 1, 'wakeups': [50203695, 50213694, 50223692, 5...</msg>
<status status="PASS" starttime="20201110 08:36:21.395" endtime="20201110 08:36:23.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:23.496" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 50193620, 'start-iter': 1, 'wakeups': [50203695, 50213694, 50223692, 5...</msg>
<status status="PASS" starttime="20201110 08:36:23.492" endtime="20201110 08:36:23.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:23.498" endtime="20201110 08:36:23.504"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:21.393" endtime="20201110 08:36:23.505"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:21.391" endtime="20201110 08:36:23.506"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:23.512" level="INFO">${RESULT} = {'start-iter': 1, 'start-time': 50193620, 'timer-count': 7, 'timer-interval': 10000, 'wakeups': [50203695, 50213694, 50223692, 50233693, 50243692, 50253692, 50263693, 50273692, 50283692, 50293693, 503...</msg>
<status status="PASS" starttime="20201110 08:36:23.508" endtime="20201110 08:36:23.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:23.521" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:36:23.519" endtime="20201110 08:36:23.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:23.525" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:36:23.523" endtime="20201110 08:36:23.526"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.514" endtime="20201110 08:36:23.528"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:23.536" level="INFO">NAME: 7-start-iter</msg>
<status status="PASS" starttime="20201110 08:36:23.534" endtime="20201110 08:36:23.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:23.540" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:36:23.538" endtime="20201110 08:36:23.541"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.529" endtime="20201110 08:36:23.542"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:23.551" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201110 08:36:23.549" endtime="20201110 08:36:23.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:23.555" level="INFO">VALUE: 50193620</msg>
<status status="PASS" starttime="20201110 08:36:23.553" endtime="20201110 08:36:23.556"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.544" endtime="20201110 08:36:23.557"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:23.564" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:23.563" endtime="20201110 08:36:23.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:23.566" level="INFO">VALUE: [50203695, 50213694, 50223692, 50233693, 50243692, 50253692, 50263693, 50273692, 50283692, 50293693, 50303692, 50313692, 50323693, 50333692, 50343692, 50353693, 50363692, 50373692, 50383693, 50393692, 50403692, 50413693, 50423692, 50433692, 50443693, 50453692, 50463692, 50473693, 50483692, 50493692, 50503693, 50513692, 50523692, 50533693, 50543692, 50553692, 50563693, 50573692, 50583692, 50593693, 50603692, 50613692, 50623693, 50633692, 50643692, 50653693, 50663692, 50673692, 50683693, 50693692, 50703692, 50713693, 50723692, 50733692, 50743693, 50753692, 50763692, 50773693, 50783692, 50793692, 50803693, 50813692, 50823692, 50833693, 50843692, 50853692, 50863693, 50873692, 50883692, 50893693, 50903692, 50913692, 50923693, 50933692, 50943692, 50953693, 50963692, 50973692, 50983693, 50993692, 51003692, 51013693, 51023692, 51033692, 51043693, 51053692, 51063692, 51073693, 51083692, 51093692, 51103693, 51113692, 51123692, 51133693, 51143692, 51153692, 51163693, 51173692, 51183692, 51193693]</msg>
<status status="PASS" starttime="20201110 08:36:23.565" endtime="20201110 08:36:23.567"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.558" endtime="20201110 08:36:23.567"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:23.574" endtime="20201110 08:36:23.864"></status>
</kw>
<msg timestamp="20201110 08:36:23.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018240667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028316597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:23.572" endtime="20201110 08:36:23.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:23.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018240667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028316597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:23.868" endtime="20201110 08:36:23.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:23.876" endtime="20201110 08:36:23.877"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.569" endtime="20201110 08:36:23.878"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.568" endtime="20201110 08:36:23.878"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:23.904" level="INFO">${RESULT} = {'source_diff': [0, 0.01007593, 0.009999847, 0.009999597999999998, 0.010001250000000003, 0.009999901999999998, 0.010001598, 0.010001305000000002, 0.009999959000000003, 0.010001513000000004, 0.01000124...</msg>
<status status="PASS" starttime="20201110 08:36:23.879" endtime="20201110 08:36:23.904"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:23.908" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201110 08:36:23.907" endtime="20201110 08:36:23.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:23.910" level="INFO">VALUE: 0.018240667</msg>
<status status="PASS" starttime="20201110 08:36:23.909" endtime="20201110 08:36:23.911"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.905" endtime="20201110 08:36:23.911"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:23.916" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:23.915" endtime="20201110 08:36:23.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:23.918" level="INFO">VALUE: [0.028316597, 0.038316444, 0.048316042, 0.058317292, 0.068317194, 0.078318792, 0.088320097, 0.098320056, 0.108321569, 0.118322819, 0.12832275, 0.138324403, 0.148325625, 0.158325528, 0.168327111, 0.178328361, 0.188328306, 0.198329889, 0.208331153, 0.218331125, 0.228332667, 0.238333917, 0.248333847, 0.258335444, 0.268336694, 0.278336653, 0.288338222, 0.298339472, 0.308339389, 0.318340986, 0.328342264, 0.338342181, 0.348343764, 0.358345028, 0.368344958, 0.378346569, 0.388347792, 0.398347708, 0.408349319, 0.418350569, 0.4283505, 0.438352097, 0.448353333, 0.458353264, 0.468354931, 0.478356111, 0.488356056, 0.498357639, 0.508358889, 0.518358819, 0.528360417, 0.538361681, 0.548361597, 0.55836325, 0.568364444, 0.578364389, 0.588365972, 0.598367208, 0.608367153, 0.618368736, 0.628369986, 0.638369917, 0.648371542, 0.65837275, 0.668372694, 0.678374292, 0.688375542, 0.698375486, 0.708377056, 0.718378319, 0.72837825, 0.738379819, 0.748381069, 0.758381014, 0.768382597, 0.778383861, 0.788383792, 0.798385375, 0.808386625, 0.818386542, 0.828388139, 0.838389389, 0.848389306, 0.858390931, 0.868392167, 0.878392097, 0.888393681, 0.898394931, 0.908394861, 0.918396458, 0.928397708, 0.938397639, 0.948399236, 0.9584005, 0.968400417, 0.978402014, 0.98840325, 0.998403181, 1.008404847, 1.018406028] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:36:23.917" endtime="20201110 08:36:23.919"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.912" endtime="20201110 08:36:23.919"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:23.922" endtime="20201110 08:36:23.923"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:23.925" endtime="20201110 08:36:23.944"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.923" endtime="20201110 08:36:23.945"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.920" endtime="20201110 08:36:23.945"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:21.389" endtime="20201110 08:36:23.946"></status>
</kw>
<msg timestamp="20201110 08:36:23.946" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:23.954" endtime="20201110 08:36:26.045"></status>
</kw>
<msg timestamp="20201110 08:36:26.047" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 52750737, 'start-iter': 1, 'wakeups': [52760812, 52770811, 52780809, 5...</msg>
<status status="PASS" starttime="20201110 08:36:23.952" endtime="20201110 08:36:26.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:26.052" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 52750737, 'start-iter': 1, 'wakeups': [52760812, 52770811, 52780809, 5...</msg>
<status status="PASS" starttime="20201110 08:36:26.049" endtime="20201110 08:36:26.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:26.055" endtime="20201110 08:36:26.058"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.950" endtime="20201110 08:36:26.059"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.948" endtime="20201110 08:36:26.060"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:26.066" level="INFO">${RESULT} = {'start-iter': 1, 'start-time': 52750737, 'timer-count': 7, 'timer-interval': 10000, 'wakeups': [52760812, 52770811, 52780809, 52790810, 52800809, 52810809, 52820810, 52830809, 52840809, 52850810, 528...</msg>
<status status="PASS" starttime="20201110 08:36:26.062" endtime="20201110 08:36:26.066"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:26.076" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:36:26.072" endtime="20201110 08:36:26.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:26.081" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:36:26.079" endtime="20201110 08:36:26.082"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.068" endtime="20201110 08:36:26.083"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:26.091" level="INFO">NAME: 7-start-iter</msg>
<status status="PASS" starttime="20201110 08:36:26.089" endtime="20201110 08:36:26.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:26.095" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:36:26.093" endtime="20201110 08:36:26.096"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.084" endtime="20201110 08:36:26.097"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:26.113" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201110 08:36:26.105" endtime="20201110 08:36:26.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:26.118" level="INFO">VALUE: 52750737</msg>
<status status="PASS" starttime="20201110 08:36:26.116" endtime="20201110 08:36:26.118"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.098" endtime="20201110 08:36:26.120"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:26.129" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:26.126" endtime="20201110 08:36:26.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:26.131" level="INFO">VALUE: [52760812, 52770811, 52780809, 52790810, 52800809, 52810809, 52820810, 52830809, 52840809, 52850810, 52860809, 52870809, 52880810, 52890809, 52900809, 52910810, 52920809, 52930809, 52940810, 52950809, 52960809, 52970810, 52980809, 52990809, 53000810, 53010809, 53020809, 53030810, 53040809, 53050809, 53060810, 53070809, 53080809, 53090810, 53100809, 53110809, 53120810, 53130809, 53140809, 53150810, 53160809, 53170809, 53180810, 53190809, 53200809, 53210810, 53220809, 53230809, 53240810, 53250809, 53260809, 53270810, 53280809, 53290809, 53300810, 53310809, 53320809, 53330810, 53340809, 53350809, 53360810, 53370809, 53380809, 53390810, 53400809, 53410809, 53420810, 53430809, 53440809, 53450810, 53460809, 53470809, 53480810, 53490809, 53500809, 53510810, 53520809, 53530809, 53540810, 53550809, 53560809, 53570810, 53580809, 53590809, 53600810, 53610809, 53620809, 53630810, 53640809, 53650809, 53660810, 53670809, 53680809, 53690810, 53700809, 53710809, 53720810, 53730809, 53740809, 53750810]</msg>
<status status="PASS" starttime="20201110 08:36:26.130" endtime="20201110 08:36:26.132"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.121" endtime="20201110 08:36:26.132"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:26.139" endtime="20201110 08:36:26.429"></status>
</kw>
<msg timestamp="20201110 08:36:26.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0182395, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028315167, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:36:26.137" endtime="20201110 08:36:26.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:26.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0182395, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028315167, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:36:26.433" endtime="20201110 08:36:26.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:26.441" endtime="20201110 08:36:26.442"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.135" endtime="20201110 08:36:26.443"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.133" endtime="20201110 08:36:26.443"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:26.469" level="INFO">${RESULT} = {'source_diff': [0, 0.010075667, 0.009999889000000001, 0.009999555, 0.010001249999999996, 0.009999916999999997, 0.010001625, 0.01000123600000001, 0.009999916999999997, 0.010001597000000001, 0.01000127...</msg>
<status status="PASS" starttime="20201110 08:36:26.444" endtime="20201110 08:36:26.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:26.473" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201110 08:36:26.472" endtime="20201110 08:36:26.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:26.475" level="INFO">VALUE: 0.0182395</msg>
<status status="PASS" starttime="20201110 08:36:26.474" endtime="20201110 08:36:26.475"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.469" endtime="20201110 08:36:26.476"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:26.480" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:26.479" endtime="20201110 08:36:26.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:26.483" level="INFO">VALUE: [0.028315167, 0.038315056, 0.048314611, 0.058315861, 0.068315778, 0.078317403, 0.088318639, 0.098318556, 0.108320153, 0.118321431, 0.128321319, 0.138322917, 0.148324167, 0.158324097, 0.168325681, 0.178326972, 0.188326861, 0.198328458, 0.208329708, 0.218329625, 0.228331222, 0.238332486, 0.248332403, 0.258334, 0.26833525, 0.278335167, 0.288336764, 0.298338014, 0.308337944, 0.318339542, 0.328340806, 0.338340708, 0.348342319, 0.358343556, 0.368343486, 0.378345111, 0.388346333, 0.39834625, 0.408347875, 0.418349111, 0.428349028, 0.438350625, 0.448351875, 0.458351861, 0.468353403, 0.478354667, 0.488354569, 0.498356194, 0.508357417, 0.518357361, 0.528358958, 0.538360194, 0.548360125, 0.55836175, 0.568362986, 0.578362917, 0.588364542, 0.598365736, 0.608365667, 0.618367264, 0.628368556, 0.638368472, 0.648370042, 0.658371319, 0.668371222, 0.678372819, 0.688374056, 0.698374, 0.708375583, 0.718376833, 0.728376778, 0.738378375, 0.748379611, 0.758379542, 0.768381139, 0.778382389, 0.788382361, 0.798383917, 0.808385167, 0.818385125, 0.828386694, 0.838387944, 0.848387861, 0.858389472, 0.868390722, 0.878390653, 0.88839225, 0.898393486, 0.908393417, 0.918395028, 0.928396264, 0.938396194, 0.948397778, 0.958399028, 0.968398944, 0.978400556, 0.988401792, 0.998401722, 1.008403347, 1.018404583] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:36:26.482" endtime="20201110 08:36:26.483"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.476" endtime="20201110 08:36:26.484"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:26.486" endtime="20201110 08:36:26.487"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:26.490" endtime="20201110 08:36:26.509"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.488" endtime="20201110 08:36:26.509"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.484" endtime="20201110 08:36:26.510"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.946" endtime="20201110 08:36:26.510"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.820" endtime="20201110 08:36:26.510"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.819" endtime="20201110 08:36:26.511"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:36:26.513" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:26.521" endtime="20201110 08:36:28.613"></status>
</kw>
<msg timestamp="20201110 08:36:28.615" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 55318144, 'start-iter': 1, 'wakeups': [55328233, 55338231, 55348231, 5...</msg>
<status status="PASS" starttime="20201110 08:36:26.520" endtime="20201110 08:36:28.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:28.621" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 55318144, 'start-iter': 1, 'wakeups': [55328233, 55338231, 55348231, 5...</msg>
<status status="PASS" starttime="20201110 08:36:28.617" endtime="20201110 08:36:28.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:28.623" endtime="20201110 08:36:28.626"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.517" endtime="20201110 08:36:28.627"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.515" endtime="20201110 08:36:28.628"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:28.634" level="INFO">${RESULT} = {'start-iter': 1, 'start-time': 55318144, 'timer-count': 8, 'timer-interval': 10000, 'wakeups': [55328233, 55338231, 55348231, 55358231, 55368231, 55378231, 55388231, 55398231, 55408231, 55418231, 554...</msg>
<status status="PASS" starttime="20201110 08:36:28.630" endtime="20201110 08:36:28.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:28.643" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:36:28.640" endtime="20201110 08:36:28.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:28.647" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:36:28.645" endtime="20201110 08:36:28.648"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:28.636" endtime="20201110 08:36:28.649"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:28.657" level="INFO">NAME: 8-start-iter</msg>
<status status="PASS" starttime="20201110 08:36:28.655" endtime="20201110 08:36:28.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:28.662" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:36:28.659" endtime="20201110 08:36:28.662"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:28.650" endtime="20201110 08:36:28.663"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:28.674" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201110 08:36:28.672" endtime="20201110 08:36:28.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:28.678" level="INFO">VALUE: 55318144</msg>
<status status="PASS" starttime="20201110 08:36:28.676" endtime="20201110 08:36:28.679"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:28.665" endtime="20201110 08:36:28.680"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:28.686" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:28.685" endtime="20201110 08:36:28.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:28.688" level="INFO">VALUE: [55328233, 55338231, 55348231, 55358231, 55368231, 55378231, 55388231, 55398231, 55408231, 55418231, 55428231, 55438231, 55448231, 55458231, 55468231, 55478231, 55488231, 55498231, 55508231, 55518231, 55528231, 55538231, 55548231, 55558231, 55568231, 55578231, 55588231, 55598231, 55608231, 55618231, 55628231, 55638231, 55648231, 55658231, 55668231, 55678231, 55688231, 55698231, 55708231, 55718231, 55728231, 55738231, 55748231, 55758231, 55768231, 55778231, 55788231, 55798231, 55808231, 55818231, 55828231, 55838231, 55848231, 55858231, 55868231, 55878231, 55888231, 55898231, 55908231, 55918231, 55928231, 55938231, 55948231, 55958231, 55968231, 55978231, 55988231, 55998231, 56008231, 56018231, 56028231, 56038231, 56048231, 56058231, 56068231, 56078231, 56088231, 56098231, 56108231, 56118231, 56128231, 56138231, 56148231, 56158231, 56168231, 56178231, 56188231, 56198231, 56208231, 56218231, 56228231, 56238231, 56248231, 56258231, 56268231, 56278231, 56288231, 56298231, 56308231, 56318231]</msg>
<status status="PASS" starttime="20201110 08:36:28.687" endtime="20201110 08:36:28.689"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:28.682" endtime="20201110 08:36:28.689"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:28.697" endtime="20201110 08:36:28.986"></status>
</kw>
<msg timestamp="20201110 08:36:28.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021082472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031172333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:28.695" endtime="20201110 08:36:28.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:28.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021082472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031172333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:28.990" endtime="20201110 08:36:28.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:28.998" endtime="20201110 08:36:28.999"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:28.692" endtime="20201110 08:36:29.000"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:28.690" endtime="20201110 08:36:29.001"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:29.025" level="INFO">${RESULT} = {'source_diff': [0, 0.010089860999999999, 0.009998999999999997, 0.010000903000000005, 0.010000902999999998, 0.010000916999999998, 0.010000915999999999, 0.010000944999999997, 0.010000902000000006, 0.01...</msg>
<status status="PASS" starttime="20201110 08:36:29.001" endtime="20201110 08:36:29.025"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:29.029" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201110 08:36:29.028" endtime="20201110 08:36:29.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:29.031" level="INFO">VALUE: 0.021082472</msg>
<status status="PASS" starttime="20201110 08:36:29.030" endtime="20201110 08:36:29.032"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:29.025" endtime="20201110 08:36:29.033"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:29.037" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:29.036" endtime="20201110 08:36:29.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:29.039" level="INFO">VALUE: [0.031172333, 0.041171333, 0.051172236, 0.061173139, 0.071174056, 0.081174972, 0.091175917, 0.101176819, 0.11117775, 0.121178667, 0.131179625, 0.141180514, 0.1511815, 0.161182361, 0.171183292, 0.181184208, 0.191185139, 0.201186069, 0.211187, 0.221188, 0.231188847, 0.241189778, 0.251190681, 0.261191611, 0.271192528, 0.281193458, 0.291194375, 0.301195306, 0.311196222, 0.321197167, 0.331198083, 0.341198986, 0.351199931, 0.361200833, 0.371201778, 0.381202681, 0.391203639, 0.401204528, 0.411205472, 0.421206375, 0.431207306, 0.441208236, 0.451209222, 0.461210111, 0.471211, 0.481211917, 0.491212847, 0.501213764, 0.511214708, 0.521215625, 0.531216542, 0.541217486, 0.551218403, 0.561219319, 0.571220236, 0.581221181, 0.591222083, 0.601223014, 0.611223931, 0.621224861, 0.631225778, 0.641226708, 0.651227653, 0.661228556, 0.671229486, 0.681230403, 0.691231333, 0.701232264, 0.711233194, 0.721234125, 0.731235028, 0.741235958, 0.751236875, 0.761237875, 0.771238736, 0.781239667, 0.791240583, 0.8012415, 0.811242431, 0.821243347, 0.831244278, 0.84124525, 0.851246125, 0.861247083, 0.871247972, 0.881248944, 0.891249819, 0.901250806, 0.911251681, 0.921252597, 0.931253542, 0.941254472, 0.951255403, 0.961256306, 0.971257222, 0.981258153, 0.991259083, 1.001260028, 1.011260931, 1.021261847] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:36:29.038" endtime="20201110 08:36:29.039"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:29.033" endtime="20201110 08:36:29.040"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:29.042" endtime="20201110 08:36:29.044"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:29.046" endtime="20201110 08:36:29.065"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:29.044" endtime="20201110 08:36:29.066"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:29.041" endtime="20201110 08:36:29.066"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.514" endtime="20201110 08:36:29.067"></status>
</kw>
<msg timestamp="20201110 08:36:29.067" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:29.075" endtime="20201110 08:36:31.166"></status>
</kw>
<msg timestamp="20201110 08:36:31.168" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 57871657, 'start-iter': 1, 'wakeups': [57881746, 57891744, 57901744, 5...</msg>
<status status="PASS" starttime="20201110 08:36:29.073" endtime="20201110 08:36:31.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:31.174" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 57871657, 'start-iter': 1, 'wakeups': [57881746, 57891744, 57901744, 5...</msg>
<status status="PASS" starttime="20201110 08:36:31.170" endtime="20201110 08:36:31.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:31.176" endtime="20201110 08:36:31.179"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:29.071" endtime="20201110 08:36:31.180"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:29.069" endtime="20201110 08:36:31.181"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:31.187" level="INFO">${RESULT} = {'start-iter': 1, 'start-time': 57871657, 'timer-count': 8, 'timer-interval': 10000, 'wakeups': [57881746, 57891744, 57901744, 57911744, 57921744, 57931744, 57941744, 57951744, 57961744, 57971744, 579...</msg>
<status status="PASS" starttime="20201110 08:36:31.183" endtime="20201110 08:36:31.187"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:31.195" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:36:31.193" endtime="20201110 08:36:31.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:31.199" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:36:31.197" endtime="20201110 08:36:31.200"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:31.188" endtime="20201110 08:36:31.201"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:31.210" level="INFO">NAME: 8-start-iter</msg>
<status status="PASS" starttime="20201110 08:36:31.208" endtime="20201110 08:36:31.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:31.214" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:36:31.212" endtime="20201110 08:36:31.215"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:31.203" endtime="20201110 08:36:31.216"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:31.224" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201110 08:36:31.222" endtime="20201110 08:36:31.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:31.226" level="INFO">VALUE: 57871657</msg>
<status status="PASS" starttime="20201110 08:36:31.225" endtime="20201110 08:36:31.226"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:31.217" endtime="20201110 08:36:31.226"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:31.231" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:31.229" endtime="20201110 08:36:31.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:31.234" level="INFO">VALUE: [57881746, 57891744, 57901744, 57911744, 57921744, 57931744, 57941744, 57951744, 57961744, 57971744, 57981744, 57991744, 58001744, 58011744, 58021744, 58031744, 58041744, 58051744, 58061744, 58071744, 58081744, 58091744, 58101744, 58111744, 58121744, 58131744, 58141744, 58151744, 58161744, 58171744, 58181744, 58191744, 58201744, 58211744, 58221744, 58231744, 58241744, 58251744, 58261744, 58271744, 58281744, 58291744, 58301744, 58311744, 58321744, 58331744, 58341744, 58351744, 58361744, 58371744, 58381744, 58391744, 58401744, 58411744, 58421744, 58431744, 58441744, 58451744, 58461744, 58471744, 58481744, 58491744, 58501744, 58511744, 58521744, 58531744, 58541744, 58551744, 58561744, 58571744, 58581744, 58591744, 58601744, 58611744, 58621744, 58631744, 58641744, 58651744, 58661744, 58671744, 58681744, 58691744, 58701744, 58711744, 58721744, 58731744, 58741744, 58751744, 58761744, 58771744, 58781744, 58791744, 58801744, 58811744, 58821744, 58831744, 58841744, 58851744, 58861744, 58871744]</msg>
<status status="PASS" starttime="20201110 08:36:31.233" endtime="20201110 08:36:31.234"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:31.227" endtime="20201110 08:36:31.235"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:31.242" endtime="20201110 08:36:31.531"></status>
</kw>
<msg timestamp="20201110 08:36:31.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018392417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028482111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:31.240" endtime="20201110 08:36:31.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:31.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018392417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028482111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:31.535" endtime="20201110 08:36:31.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:31.543" endtime="20201110 08:36:31.545"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:31.237" endtime="20201110 08:36:31.545"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:31.235" endtime="20201110 08:36:31.546"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:31.570" level="INFO">${RESULT} = {'source_diff': [0, 0.010089694, 0.009998957999999999, 0.010000944999999997, 0.010000903000000005, 0.010000929999999998, 0.010000971999999997, 0.010000888999999999, 0.010000903000000005, 0.01000093100...</msg>
<status status="PASS" starttime="20201110 08:36:31.546" endtime="20201110 08:36:31.571"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:31.575" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201110 08:36:31.574" endtime="20201110 08:36:31.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:31.577" level="INFO">VALUE: 0.018392417</msg>
<status status="PASS" starttime="20201110 08:36:31.576" endtime="20201110 08:36:31.577"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:31.571" endtime="20201110 08:36:31.578"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:31.582" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:31.581" endtime="20201110 08:36:31.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:31.584" level="INFO">VALUE: [0.028482111, 0.038481069, 0.048482014, 0.058482917, 0.068483847, 0.078484819, 0.088485708, 0.098486611, 0.108487542, 0.118488458, 0.128489403, 0.138490319, 0.14849125, 0.158492153, 0.168493083, 0.178494, 0.188494972, 0.198495847, 0.208496778, 0.218497694, 0.228498639, 0.238499542, 0.248500486, 0.258501403, 0.268502333, 0.27850325, 0.288504181, 0.298505097, 0.308506056, 0.318506944, 0.328507861, 0.338508792, 0.348509736, 0.358510639, 0.368511569, 0.378512486, 0.388513417, 0.398514333, 0.408515264, 0.418516208, 0.428517111, 0.438518056, 0.448518958, 0.458519889, 0.468520819, 0.478521736, 0.488522681, 0.498523583, 0.508524569, 0.518525458, 0.528526361, 0.538527292, 0.548528208, 0.558529208, 0.568530056, 0.578530986, 0.588531972, 0.598532889, 0.608533778, 0.618534708, 0.628535611, 0.638536556, 0.648537472, 0.658538403, 0.668539306, 0.678540278, 0.688541181, 0.698542153, 0.708543028, 0.718543958, 0.728544861, 0.738545792, 0.748546708, 0.758547653, 0.768548583, 0.778549486, 0.788550458, 0.798551347, 0.808552264, 0.818553194, 0.828554125, 0.838555042, 0.848555958, 0.858556889, 0.868557875, 0.87855875, 0.888559667, 0.898560653, 0.908561514, 0.918562444, 0.928563361, 0.938564292, 0.948565208, 0.958566153, 0.968567069, 0.978568014, 0.988568917, 0.998569875, 1.008570764, 1.018571694] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:36:31.583" endtime="20201110 08:36:31.585"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:31.578" endtime="20201110 08:36:31.585"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:31.587" endtime="20201110 08:36:31.589"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:31.591" endtime="20201110 08:36:31.611"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:31.589" endtime="20201110 08:36:31.611"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:31.586" endtime="20201110 08:36:31.612"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:29.068" endtime="20201110 08:36:31.612"></status>
</kw>
<msg timestamp="20201110 08:36:31.612" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:31.620" endtime="20201110 08:36:33.712"></status>
</kw>
<msg timestamp="20201110 08:36:33.713" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 60417088, 'start-iter': 1, 'wakeups': [60427177, 60437175, 60447175, 6...</msg>
<status status="PASS" starttime="20201110 08:36:31.619" endtime="20201110 08:36:33.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:33.720" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 60417088, 'start-iter': 1, 'wakeups': [60427177, 60437175, 60447175, 6...</msg>
<status status="PASS" starttime="20201110 08:36:33.716" endtime="20201110 08:36:33.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:33.722" endtime="20201110 08:36:33.725"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:31.616" endtime="20201110 08:36:33.726"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:31.614" endtime="20201110 08:36:33.727"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:33.733" level="INFO">${RESULT} = {'start-iter': 1, 'start-time': 60417088, 'timer-count': 8, 'timer-interval': 10000, 'wakeups': [60427177, 60437175, 60447175, 60457175, 60467175, 60477175, 60487175, 60497175, 60507175, 60517175, 605...</msg>
<status status="PASS" starttime="20201110 08:36:33.729" endtime="20201110 08:36:33.733"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:33.741" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:36:33.739" endtime="20201110 08:36:33.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:33.746" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:36:33.744" endtime="20201110 08:36:33.746"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:33.735" endtime="20201110 08:36:33.747"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:33.756" level="INFO">NAME: 8-start-iter</msg>
<status status="PASS" starttime="20201110 08:36:33.754" endtime="20201110 08:36:33.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:33.760" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:36:33.758" endtime="20201110 08:36:33.761"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:33.749" endtime="20201110 08:36:33.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:33.770" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201110 08:36:33.768" endtime="20201110 08:36:33.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:33.774" level="INFO">VALUE: 60417088</msg>
<status status="PASS" starttime="20201110 08:36:33.773" endtime="20201110 08:36:33.775"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:33.763" endtime="20201110 08:36:33.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:33.785" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:33.783" endtime="20201110 08:36:33.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:33.790" level="INFO">VALUE: [60427177, 60437175, 60447175, 60457175, 60467175, 60477175, 60487175, 60497175, 60507175, 60517175, 60527175, 60537175, 60547175, 60557175, 60567175, 60577175, 60587175, 60597175, 60607175, 60617175, 60627175, 60637175, 60647175, 60657175, 60667175, 60677175, 60687175, 60697175, 60707175, 60717175, 60727175, 60737175, 60747175, 60757175, 60767175, 60777175, 60787175, 60797175, 60807175, 60817175, 60827175, 60837175, 60847175, 60857175, 60867175, 60877175, 60887175, 60897175, 60907175, 60917175, 60927175, 60937175, 60947175, 60957175, 60967175, 60977175, 60987175, 60997175, 61007175, 61017175, 61027175, 61037175, 61047175, 61057175, 61067175, 61077175, 61087175, 61097175, 61107175, 61117175, 61127175, 61137175, 61147175, 61157175, 61167175, 61177175, 61187175, 61197175, 61207175, 61217175, 61227175, 61237175, 61247175, 61257175, 61267175, 61277175, 61287175, 61297175, 61307175, 61317175, 61327175, 61337175, 61347175, 61357175, 61367175, 61377175, 61387175, 61397175, 61407175, 61417175]</msg>
<status status="PASS" starttime="20201110 08:36:33.787" endtime="20201110 08:36:33.791"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:33.777" endtime="20201110 08:36:33.792"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:33.799" endtime="20201110 08:36:34.093"></status>
</kw>
<msg timestamp="20201110 08:36:34.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018088, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028177653, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:36:33.798" endtime="20201110 08:36:34.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:34.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018088, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028177653, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:36:34.096" endtime="20201110 08:36:34.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:34.104" endtime="20201110 08:36:34.106"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:33.795" endtime="20201110 08:36:34.107"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:33.793" endtime="20201110 08:36:34.107"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:34.132" level="INFO">${RESULT} = {'source_diff': [0, 0.010089653, 0.009998971999999998, 0.010000902999999998, 0.010000930000000005, 0.010000931000000005, 0.010000916999999998, 0.010000929999999991, 0.010000916999999998, 0.01000091600...</msg>
<status status="PASS" starttime="20201110 08:36:34.108" endtime="20201110 08:36:34.132"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:34.136" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201110 08:36:34.135" endtime="20201110 08:36:34.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:34.138" level="INFO">VALUE: 0.018088</msg>
<status status="PASS" starttime="20201110 08:36:34.137" endtime="20201110 08:36:34.139"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:34.133" endtime="20201110 08:36:34.139"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:34.144" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:34.143" endtime="20201110 08:36:34.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:34.146" level="INFO">VALUE: [0.028177653, 0.038176625, 0.048177528, 0.058178458, 0.068179389, 0.078180306, 0.088181236, 0.098182153, 0.108183069, 0.118184, 0.128184931, 0.138185861, 0.148186778, 0.158187694, 0.168188653, 0.178189542, 0.188190458, 0.198191444, 0.208192306, 0.218193236, 0.228194167, 0.238195083, 0.248196, 0.258196931, 0.268197861, 0.278198778, 0.288199694, 0.298200667, 0.308201542, 0.318202472, 0.328203417, 0.338204319, 0.348205264, 0.358206167, 0.368207097, 0.378208028, 0.388208958, 0.398209875, 0.408210792, 0.418211736, 0.428212667, 0.438213569, 0.448214486, 0.458215417, 0.468216347, 0.478217264, 0.488218194, 0.498219153, 0.508220042, 0.518220972, 0.528221889, 0.538222819, 0.548223736, 0.558224681, 0.568225611, 0.578226514, 0.588227458, 0.598228361, 0.608229319, 0.618230278, 0.628231139, 0.638232083, 0.648232986, 0.658233917, 0.668234847, 0.678235764, 0.688236708, 0.698237611, 0.708238542, 0.718239458, 0.728240389, 0.738241333, 0.748242236, 0.758243181, 0.768244083, 0.778245014, 0.788245931, 0.798246875, 0.808247792, 0.818248708, 0.828249639, 0.838250583, 0.848251486, 0.858252417, 0.868253333, 0.878254264, 0.888255194, 0.898256111, 0.908257097, 0.918258042, 0.928258903, 0.938259819, 0.948260736, 0.958261667, 0.968262583, 0.978263528, 0.988264472, 0.998265375, 1.008266319, 1.018267292] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:36:34.145" endtime="20201110 08:36:34.146"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:34.140" endtime="20201110 08:36:34.147"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:34.149" endtime="20201110 08:36:34.150"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:34.152" endtime="20201110 08:36:34.172"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:34.151" endtime="20201110 08:36:34.172"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:34.147" endtime="20201110 08:36:34.173"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:31.613" endtime="20201110 08:36:34.173"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.512" endtime="20201110 08:36:34.173"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.511" endtime="20201110 08:36:34.174"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:36:34.176" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:34.185" endtime="20201110 08:36:36.277"></status>
</kw>
<msg timestamp="20201110 08:36:36.279" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 62981691, 'start-iter': 1, 'wakeups': [62991795, 63001792, 63011792, 6...</msg>
<status status="PASS" starttime="20201110 08:36:34.183" endtime="20201110 08:36:36.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:36.284" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 62981691, 'start-iter': 1, 'wakeups': [62991795, 63001792, 63011792, 6...</msg>
<status status="PASS" starttime="20201110 08:36:36.281" endtime="20201110 08:36:36.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:36.287" endtime="20201110 08:36:36.290"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:34.180" endtime="20201110 08:36:36.291"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:34.178" endtime="20201110 08:36:36.299"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:36.305" level="INFO">${RESULT} = {'start-iter': 1, 'start-time': 62981691, 'timer-count': 9, 'timer-interval': 10000, 'wakeups': [62991795, 63001792, 63011792, 63021792, 63031792, 63041792, 63051792, 63061792, 63071792, 63081792, 630...</msg>
<status status="PASS" starttime="20201110 08:36:36.301" endtime="20201110 08:36:36.305"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:36.313" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:36:36.311" endtime="20201110 08:36:36.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:36.318" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:36:36.316" endtime="20201110 08:36:36.318"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:36.307" endtime="20201110 08:36:36.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:36.328" level="INFO">NAME: 9-start-iter</msg>
<status status="PASS" starttime="20201110 08:36:36.326" endtime="20201110 08:36:36.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:36.332" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:36:36.330" endtime="20201110 08:36:36.333"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:36.321" endtime="20201110 08:36:36.334"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:36.342" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201110 08:36:36.340" endtime="20201110 08:36:36.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:36.346" level="INFO">VALUE: 62981691</msg>
<status status="PASS" starttime="20201110 08:36:36.344" endtime="20201110 08:36:36.347"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:36.335" endtime="20201110 08:36:36.348"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:36.356" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:36.354" endtime="20201110 08:36:36.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:36.361" level="INFO">VALUE: [62991795, 63001792, 63011792, 63021792, 63031792, 63041792, 63051792, 63061792, 63071792, 63081792, 63091792, 63101792, 63111792, 63121792, 63131792, 63141792, 63151792, 63161792, 63171792, 63181792, 63191792, 63201792, 63211792, 63221792, 63231792, 63241792, 63251792, 63261792, 63271792, 63281792, 63291792, 63301792, 63311792, 63321792, 63331792, 63341792, 63351792, 63361792, 63371792, 63381792, 63391792, 63401792, 63411792, 63421792, 63431792, 63441792, 63451792, 63461792, 63471792, 63481792, 63491792, 63501792, 63511792, 63521792, 63531792, 63541792, 63551792, 63561792, 63571792, 63581792, 63591792, 63601792, 63611792, 63621792, 63631792, 63641792, 63651792, 63661792, 63671792, 63681792, 63691792, 63701792, 63711792, 63721792, 63731792, 63741792, 63751792, 63761792, 63771792, 63781792, 63791792, 63801792, 63811792, 63821792, 63831792, 63841792, 63851792, 63861792, 63871792, 63881792, 63891792, 63901792, 63911792, 63921792, 63931792, 63941792, 63951792, 63961792, 63971792, 63981792]</msg>
<status status="PASS" starttime="20201110 08:36:36.359" endtime="20201110 08:36:36.362"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:36.349" endtime="20201110 08:36:36.363"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:36.376" endtime="20201110 08:36:36.675"></status>
</kw>
<msg timestamp="20201110 08:36:36.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021727236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031832611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:36.373" endtime="20201110 08:36:36.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:36.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021727236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031832611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:36.679" endtime="20201110 08:36:36.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:36.686" endtime="20201110 08:36:36.689"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:36.368" endtime="20201110 08:36:36.689"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:36.364" endtime="20201110 08:36:36.690"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:36.714" level="INFO">${RESULT} = {'source_diff': [0, 0.010105374999999996, 0.009997361000000003, 0.010000930999999998, 0.010000916000000006, 0.010000916999999991, 0.010000931000000005, 0.010000915999999999, 0.010000931000000005, 0.01...</msg>
<status status="PASS" starttime="20201110 08:36:36.690" endtime="20201110 08:36:36.715"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:36.719" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201110 08:36:36.718" endtime="20201110 08:36:36.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:36.721" level="INFO">VALUE: 0.021727236</msg>
<status status="PASS" starttime="20201110 08:36:36.720" endtime="20201110 08:36:36.722"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:36.716" endtime="20201110 08:36:36.722"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:36.727" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:36.726" endtime="20201110 08:36:36.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:36.729" level="INFO">VALUE: [0.031832611, 0.041829972, 0.051830903, 0.061831819, 0.071832736, 0.081833667, 0.091834583, 0.101835514, 0.111836431, 0.121837361, 0.131838292, 0.141839222, 0.151840125, 0.161841056, 0.171841972, 0.181842903, 0.191843819, 0.201844764, 0.211845667, 0.221846597, 0.231847528, 0.241848444, 0.251849375, 0.261850292, 0.271851222, 0.281852153, 0.291853069, 0.301854, 0.311854903, 0.321855847, 0.331856764, 0.341857694, 0.351858597, 0.361859542, 0.371860472, 0.381861403, 0.391862319, 0.401863236, 0.411864153, 0.421865097, 0.431866014, 0.441866958, 0.451867847, 0.461868792, 0.471869708, 0.481870639, 0.491871556, 0.501872486, 0.511873403, 0.521874361, 0.531875278, 0.541876194, 0.551877111, 0.561878056, 0.571878972, 0.581879903, 0.591880806, 0.60188175, 0.611882653, 0.621883597, 0.6318845, 0.641885444, 0.651886361, 0.661887292, 0.671888236, 0.681889153, 0.691890069, 0.701891028, 0.711891903, 0.721892847, 0.73189375, 0.74189475, 0.751895625, 0.761896542, 0.771897472, 0.781898389, 0.791899306, 0.80190025, 0.811901208, 0.821902111, 0.831903014, 0.841903944, 0.851904861, 0.861905792, 0.871906708, 0.881907653, 0.891908556, 0.9019095, 0.911910417, 0.921911347, 0.931912278, 0.941913222, 0.951914125, 0.961915056, 0.971915972, 0.981916944, 0.991917806, 1.00191875, 1.011919667, 1.021920611] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:36:36.728" endtime="20201110 08:36:36.729"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:36.723" endtime="20201110 08:36:36.730"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:36.732" endtime="20201110 08:36:36.733"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:36.735" endtime="20201110 08:36:36.754"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:36.734" endtime="20201110 08:36:36.755"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:36.730" endtime="20201110 08:36:36.756"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:34.177" endtime="20201110 08:36:36.756"></status>
</kw>
<msg timestamp="20201110 08:36:36.756" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:36.764" endtime="20201110 08:36:38.856"></status>
</kw>
<msg timestamp="20201110 08:36:38.857" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 65560866, 'start-iter': 1, 'wakeups': [65570970, 65580967, 65590967, 6...</msg>
<status status="PASS" starttime="20201110 08:36:36.763" endtime="20201110 08:36:38.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:38.867" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 65560866, 'start-iter': 1, 'wakeups': [65570970, 65580967, 65590967, 6...</msg>
<status status="PASS" starttime="20201110 08:36:38.859" endtime="20201110 08:36:38.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:38.870" endtime="20201110 08:36:38.875"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:36.760" endtime="20201110 08:36:38.877"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:36.758" endtime="20201110 08:36:38.882"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:38.889" level="INFO">${RESULT} = {'start-iter': 1, 'start-time': 65560866, 'timer-count': 9, 'timer-interval': 10000, 'wakeups': [65570970, 65580967, 65590967, 65600967, 65610967, 65620967, 65630967, 65640967, 65650967, 65660967, 656...</msg>
<status status="PASS" starttime="20201110 08:36:38.884" endtime="20201110 08:36:38.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:38.898" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:36:38.896" endtime="20201110 08:36:38.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:38.903" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:36:38.901" endtime="20201110 08:36:38.904"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:38.890" endtime="20201110 08:36:38.906"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:38.915" level="INFO">NAME: 9-start-iter</msg>
<status status="PASS" starttime="20201110 08:36:38.913" endtime="20201110 08:36:38.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:38.920" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:36:38.918" endtime="20201110 08:36:38.921"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:38.907" endtime="20201110 08:36:38.922"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:38.931" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201110 08:36:38.929" endtime="20201110 08:36:38.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:38.935" level="INFO">VALUE: 65560866</msg>
<status status="PASS" starttime="20201110 08:36:38.933" endtime="20201110 08:36:38.936"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:38.923" endtime="20201110 08:36:38.937"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:38.946" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:38.944" endtime="20201110 08:36:38.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:38.951" level="INFO">VALUE: [65570970, 65580967, 65590967, 65600967, 65610967, 65620967, 65630967, 65640967, 65650967, 65660967, 65670967, 65680967, 65690967, 65700967, 65710967, 65720967, 65730967, 65740967, 65750967, 65760967, 65770967, 65780967, 65790967, 65800967, 65810967, 65820967, 65830967, 65840967, 65850967, 65860967, 65870967, 65880967, 65890967, 65900967, 65910967, 65920967, 65930967, 65940967, 65950967, 65960967, 65970967, 65980967, 65990967, 66000967, 66010967, 66020967, 66030967, 66040967, 66050967, 66060967, 66070967, 66080967, 66090967, 66100967, 66110967, 66120967, 66130967, 66140967, 66150967, 66160967, 66170967, 66180967, 66190967, 66200967, 66210967, 66220967, 66230967, 66240967, 66250967, 66260967, 66270967, 66280967, 66290967, 66300967, 66310967, 66320967, 66330967, 66340967, 66350967, 66360967, 66370967, 66380967, 66390967, 66400967, 66410967, 66420967, 66430967, 66440967, 66450967, 66460967, 66470967, 66480967, 66490967, 66500967, 66510967, 66520967, 66530967, 66540967, 66550967, 66560967]</msg>
<status status="PASS" starttime="20201110 08:36:38.949" endtime="20201110 08:36:38.952"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:38.939" endtime="20201110 08:36:38.953"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:38.968" endtime="20201110 08:36:39.268"></status>
</kw>
<msg timestamp="20201110 08:36:39.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018209208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028314833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:38.964" endtime="20201110 08:36:39.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:39.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018209208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028314833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:39.272" endtime="20201110 08:36:39.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:39.280" endtime="20201110 08:36:39.281"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:38.958" endtime="20201110 08:36:39.282"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:38.955" endtime="20201110 08:36:39.282"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:39.308" level="INFO">${RESULT} = {'source_diff': [0, 0.010105625, 0.009997361, 0.010000972999999996, 0.010000875000000006, 0.010000915999999992, 0.010000931000000005, 0.010000916999999998, 0.010000930000000005, 0.010000916999999998, ...</msg>
<status status="PASS" starttime="20201110 08:36:39.283" endtime="20201110 08:36:39.308"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:39.312" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201110 08:36:39.311" endtime="20201110 08:36:39.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:39.314" level="INFO">VALUE: 0.018209208</msg>
<status status="PASS" starttime="20201110 08:36:39.313" endtime="20201110 08:36:39.315"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:39.309" endtime="20201110 08:36:39.315"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:39.320" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:39.319" endtime="20201110 08:36:39.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:39.323" level="INFO">VALUE: [0.028314833, 0.038312194, 0.048313167, 0.058314042, 0.068314958, 0.078315889, 0.088316806, 0.098317736, 0.108318653, 0.118319597, 0.128320486, 0.138321431, 0.148322347, 0.158323264, 0.168324236, 0.178325125, 0.188326042, 0.198326972, 0.208327889, 0.218328847, 0.22832975, 0.238330681, 0.248331569, 0.258332528, 0.268333431, 0.278334361, 0.288335278, 0.298336236, 0.308337139, 0.318338056, 0.328338986, 0.338339917, 0.348340819, 0.35834175, 0.368342667, 0.378343597, 0.388344514, 0.398345458, 0.408346361, 0.418347306, 0.428348222, 0.438349153, 0.448350069, 0.458351, 0.468351917, 0.478352861, 0.488353778, 0.498354764, 0.508355611, 0.518356556, 0.528357472, 0.538358417, 0.548359375, 0.558360264, 0.568361181, 0.578362111, 0.588363014, 0.598363958, 0.608364861, 0.618365819, 0.628366708, 0.638367681, 0.648368556, 0.6583695, 0.668370431, 0.678371347, 0.688372292, 0.698373194, 0.708374111, 0.718375042, 0.728375958, 0.738376903, 0.748377806, 0.758378764, 0.768379667, 0.778380625, 0.788381514, 0.798382472, 0.808383444, 0.818384319, 0.828385208, 0.838386167, 0.848387056, 0.858388, 0.868388931, 0.878389847, 0.888390778, 0.898391708, 0.908392611, 0.918393556, 0.928394472, 0.938395403, 0.948396306, 0.95839725, 0.968398167, 0.978399111, 0.988400028, 0.998400972, 1.008401931, 1.018402806] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:36:39.322" endtime="20201110 08:36:39.323"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:39.316" endtime="20201110 08:36:39.324"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:39.326" endtime="20201110 08:36:39.327"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:39.329" endtime="20201110 08:36:39.349"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:39.328" endtime="20201110 08:36:39.349"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:39.324" endtime="20201110 08:36:39.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:36.757" endtime="20201110 08:36:39.350"></status>
</kw>
<msg timestamp="20201110 08:36:39.350" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:39.359" endtime="20201110 08:36:41.451"></status>
</kw>
<msg timestamp="20201110 08:36:41.453" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 68155598, 'start-iter': 1, 'wakeups': [68165702, 68175699, 68185699, 6...</msg>
<status status="PASS" starttime="20201110 08:36:39.357" endtime="20201110 08:36:41.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:41.459" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 68155598, 'start-iter': 1, 'wakeups': [68165702, 68175699, 68185699, 6...</msg>
<status status="PASS" starttime="20201110 08:36:41.455" endtime="20201110 08:36:41.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:41.461" endtime="20201110 08:36:41.465"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:39.355" endtime="20201110 08:36:41.466"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:39.353" endtime="20201110 08:36:41.467"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:41.473" level="INFO">${RESULT} = {'start-iter': 1, 'start-time': 68155598, 'timer-count': 9, 'timer-interval': 10000, 'wakeups': [68165702, 68175699, 68185699, 68195699, 68205699, 68215699, 68225699, 68235699, 68245699, 68255699, 682...</msg>
<status status="PASS" starttime="20201110 08:36:41.469" endtime="20201110 08:36:41.473"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:41.484" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:36:41.480" endtime="20201110 08:36:41.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:41.489" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:36:41.487" endtime="20201110 08:36:41.489"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:41.475" endtime="20201110 08:36:41.491"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:41.500" level="INFO">NAME: 9-start-iter</msg>
<status status="PASS" starttime="20201110 08:36:41.497" endtime="20201110 08:36:41.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:41.504" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:36:41.502" endtime="20201110 08:36:41.505"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:41.492" endtime="20201110 08:36:41.506"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:41.522" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201110 08:36:41.513" endtime="20201110 08:36:41.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:41.527" level="INFO">VALUE: 68155598</msg>
<status status="PASS" starttime="20201110 08:36:41.524" endtime="20201110 08:36:41.528"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:41.508" endtime="20201110 08:36:41.529"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:41.538" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:41.535" endtime="20201110 08:36:41.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:41.543" level="INFO">VALUE: [68165702, 68175699, 68185699, 68195699, 68205699, 68215699, 68225699, 68235699, 68245699, 68255699, 68265699, 68275699, 68285699, 68295699, 68305699, 68315699, 68325699, 68335699, 68345699, 68355699, 68365699, 68375699, 68385699, 68395699, 68405699, 68415699, 68425699, 68435699, 68445699, 68455699, 68465699, 68475699, 68485699, 68495699, 68505699, 68515699, 68525699, 68535699, 68545699, 68555699, 68565699, 68575699, 68585699, 68595699, 68605699, 68615699, 68625699, 68635699, 68645699, 68655699, 68665699, 68675699, 68685699, 68695699, 68705699, 68715699, 68725699, 68735699, 68745699, 68755699, 68765699, 68775699, 68785699, 68795699, 68805699, 68815699, 68825699, 68835699, 68845699, 68855699, 68865699, 68875699, 68885699, 68895699, 68905699, 68915699, 68925699, 68935699, 68945699, 68955699, 68965699, 68975699, 68985699, 68995699, 69005699, 69015699, 69025699, 69035699, 69045699, 69055699, 69065699, 69075699, 69085699, 69095699, 69105699, 69115699, 69125699, 69135699, 69145699, 69155699]</msg>
<status status="PASS" starttime="20201110 08:36:41.540" endtime="20201110 08:36:41.544"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:41.530" endtime="20201110 08:36:41.545"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:41.559" endtime="20201110 08:36:41.859"></status>
</kw>
<msg timestamp="20201110 08:36:41.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018652736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028757792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:41.556" endtime="20201110 08:36:41.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:41.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018652736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028757792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:41.863" endtime="20201110 08:36:41.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:41.871" endtime="20201110 08:36:41.872"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:41.550" endtime="20201110 08:36:41.873"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:41.546" endtime="20201110 08:36:41.873"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:41.899" level="INFO">${RESULT} = {'source_diff': [0, 0.010105056000000001, 0.009997347, 0.010000916999999998, 0.010000929999999998, 0.010000916999999998, 0.010000930000000005, 0.010000916999999998, 0.010000916999999998, 0.01000093000...</msg>
<status status="PASS" starttime="20201110 08:36:41.874" endtime="20201110 08:36:41.899"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:41.904" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201110 08:36:41.903" endtime="20201110 08:36:41.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:41.906" level="INFO">VALUE: 0.018652736</msg>
<status status="PASS" starttime="20201110 08:36:41.905" endtime="20201110 08:36:41.906"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:41.900" endtime="20201110 08:36:41.907"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:41.912" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:41.910" endtime="20201110 08:36:41.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:41.914" level="INFO">VALUE: [0.028757792, 0.038755139, 0.048756056, 0.058756986, 0.068757903, 0.078758833, 0.08875975, 0.098760667, 0.108761597, 0.118762542, 0.128763458, 0.138764361, 0.148765292, 0.158766208, 0.168767139, 0.178768069, 0.188768986, 0.198769903, 0.208770833, 0.218771792, 0.228772681, 0.238773611, 0.248774542, 0.258775444, 0.268776403, 0.278777292, 0.288778236, 0.298779153, 0.308780097, 0.318781014, 0.328781931, 0.338782847, 0.348783778, 0.358784764, 0.368785639, 0.378786542, 0.3887875, 0.398788389, 0.408789333, 0.41879025, 0.428791208, 0.438792097, 0.448793042, 0.458793958, 0.468794958, 0.478795792, 0.48879675, 0.498797667, 0.508798625, 0.5187995, 0.528800431, 0.538801347, 0.548802319, 0.558803194, 0.568804153, 0.578805042, 0.588805986, 0.598806903, 0.608807833, 0.61880875, 0.628809681, 0.638810597, 0.648811542, 0.658812444, 0.668813389, 0.678814306, 0.68881525, 0.698816167, 0.708817083, 0.718818, 0.728818958, 0.738819861, 0.748820806, 0.758821708, 0.768822639, 0.778823556, 0.788824528, 0.798825444, 0.808826333, 0.81882725, 0.828828194, 0.838829125, 0.848830042, 0.858830958, 0.868831903, 0.878832806, 0.888833833, 0.898834667, 0.908835597, 0.9188365, 0.928837444, 0.938838361, 0.948839292, 0.958840194, 0.968841139, 0.978842083, 0.988842986, 0.998843903, 1.008844847, 1.01884575] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:36:41.913" endtime="20201110 08:36:41.915"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:41.907" endtime="20201110 08:36:41.915"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:41.917" endtime="20201110 08:36:41.919"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:41.921" endtime="20201110 08:36:41.940"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:41.919" endtime="20201110 08:36:41.941"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:41.916" endtime="20201110 08:36:41.942"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:39.351" endtime="20201110 08:36:41.942"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:34.175" endtime="20201110 08:36:41.942"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:34.174" endtime="20201110 08:36:41.942"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:36:41.945" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:41.953" endtime="20201110 08:36:44.046"></status>
</kw>
<msg timestamp="20201110 08:36:44.047" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 70750257, 'start-iter': 1, 'wakeups': [70760374, 70770372, 70780372,...</msg>
<status status="PASS" starttime="20201110 08:36:41.952" endtime="20201110 08:36:44.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:44.053" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 70750257, 'start-iter': 1, 'wakeups': [70760374, 70770372, 70780372,...</msg>
<status status="PASS" starttime="20201110 08:36:44.050" endtime="20201110 08:36:44.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:44.056" endtime="20201110 08:36:44.059"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:41.949" endtime="20201110 08:36:44.060"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:41.947" endtime="20201110 08:36:44.062"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:44.068" level="INFO">${RESULT} = {'start-iter': 1, 'start-time': 70750257, 'timer-count': 10, 'timer-interval': 10000, 'wakeups': [70760374, 70770372, 70780372, 70790372, 70800372, 70810372, 70820372, 70830372, 70840372, 70850372, 70...</msg>
<status status="PASS" starttime="20201110 08:36:44.063" endtime="20201110 08:36:44.068"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:44.077" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:36:44.074" endtime="20201110 08:36:44.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:44.081" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:36:44.079" endtime="20201110 08:36:44.082"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.069" endtime="20201110 08:36:44.083"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:44.092" level="INFO">NAME: 10-start-iter</msg>
<status status="PASS" starttime="20201110 08:36:44.090" endtime="20201110 08:36:44.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:44.097" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:36:44.094" endtime="20201110 08:36:44.097"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.084" endtime="20201110 08:36:44.098"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:44.110" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201110 08:36:44.107" endtime="20201110 08:36:44.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:44.114" level="INFO">VALUE: 70750257</msg>
<status status="PASS" starttime="20201110 08:36:44.112" endtime="20201110 08:36:44.115"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.100" endtime="20201110 08:36:44.116"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:44.125" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:44.123" endtime="20201110 08:36:44.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:44.131" level="INFO">VALUE: [70760374, 70770372, 70780372, 70790372, 70800372, 70810372, 70820372, 70830372, 70840372, 70850372, 70860372, 70870372, 70880372, 70890372, 70900372, 70910372, 70920372, 70930372, 70940372, 70950372, 70960372, 70970372, 70980372, 70990372, 71000372, 71010372, 71020372, 71030372, 71040372, 71050372, 71060372, 71070372, 71080372, 71090372, 71100372, 71110372, 71120372, 71130372, 71140372, 71150372, 71160372, 71170372, 71180372, 71190372, 71200372, 71210372, 71220372, 71230372, 71240372, 71250372, 71260372, 71270372, 71280372, 71290372, 71300372, 71310372, 71320372, 71330372, 71340372, 71350372, 71360372, 71370372, 71380372, 71390372, 71400372, 71410372, 71420372, 71430372, 71440372, 71450372, 71460372, 71470372, 71480372, 71490372, 71500372, 71510372, 71520372, 71530372, 71540372, 71550372, 71560372, 71570372, 71580372, 71590372, 71600372, 71610372, 71620372, 71630372, 71640372, 71650372, 71660372, 71670372, 71680372, 71690372, 71700372, 71710372, 71720372, 71730372, 71740372, 71750372]</msg>
<status status="PASS" starttime="20201110 08:36:44.128" endtime="20201110 08:36:44.132"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.117" endtime="20201110 08:36:44.133"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:44.147" endtime="20201110 08:36:44.443"></status>
</kw>
<msg timestamp="20201110 08:36:44.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021646778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031765222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:44.144" endtime="20201110 08:36:44.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:44.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021646778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031765222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:44.447" endtime="20201110 08:36:44.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:44.455" endtime="20201110 08:36:44.457"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.138" endtime="20201110 08:36:44.457"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.134" endtime="20201110 08:36:44.458"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:44.483" level="INFO">${RESULT} = {'source_diff': [0, 0.010118444000000004, 0.009998778, 0.010000902999999998, 0.010000888999999999, 0.010000930000000005, 0.010000916999999998, 0.010000916999999998, 0.010000915999999999, 0.01000093100...</msg>
<status status="PASS" starttime="20201110 08:36:44.459" endtime="20201110 08:36:44.483"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:44.487" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201110 08:36:44.486" endtime="20201110 08:36:44.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:44.489" level="INFO">VALUE: 0.021646778</msg>
<status status="PASS" starttime="20201110 08:36:44.488" endtime="20201110 08:36:44.490"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.484" endtime="20201110 08:36:44.491"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:44.496" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:44.495" endtime="20201110 08:36:44.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:44.498" level="INFO">VALUE: [0.031765222, 0.041764, 0.051764903, 0.061765792, 0.071766722, 0.081767639, 0.091768556, 0.101769472, 0.111770403, 0.121771319, 0.131772264, 0.141773181, 0.151774111, 0.161775014, 0.171775958, 0.181776861, 0.191777792, 0.201778736, 0.211779639, 0.221780556, 0.231781486, 0.241782403, 0.251783347, 0.26178425, 0.271785194, 0.281786111, 0.291787042, 0.301787958, 0.311788903, 0.321789806, 0.331790736, 0.341791653, 0.351792583, 0.3617935, 0.371794431, 0.381795333, 0.391796278, 0.401797181, 0.411798125, 0.421799028, 0.431799972, 0.441800875, 0.451801806, 0.461802764, 0.471803653, 0.481804583, 0.4918055, 0.501806417, 0.511807403, 0.521808264, 0.531809194, 0.541810167, 0.551811083, 0.561811958, 0.571812889, 0.581813819, 0.591814736, 0.601815653, 0.611816597, 0.6218175, 0.631818431, 0.641819347, 0.651820347, 0.661821194, 0.671822139, 0.681823069, 0.691823986, 0.701824889, 0.711825833, 0.72182675, 0.731827681, 0.741828597, 0.751829528, 0.761830458, 0.771831375, 0.781832292, 0.791833236, 0.801834167, 0.811835069, 0.821835986, 0.831836931, 0.841837847, 0.851838792, 0.861839681, 0.871840653, 0.881841542, 0.891842472, 0.901843403, 0.911844361, 0.921845236, 0.931846167, 0.941847083, 0.951848028, 0.961849, 0.971849861, 0.981850819, 0.991851736, 1.001852625, 1.011853583, 1.021854472] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:36:44.497" endtime="20201110 08:36:44.498"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.492" endtime="20201110 08:36:44.499"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:44.501" endtime="20201110 08:36:44.508"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:44.510" endtime="20201110 08:36:44.530"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.509" endtime="20201110 08:36:44.530"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.499" endtime="20201110 08:36:44.531"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:41.946" endtime="20201110 08:36:44.532"></status>
</kw>
<msg timestamp="20201110 08:36:44.532" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:44.540" endtime="20201110 08:36:46.633"></status>
</kw>
<msg timestamp="20201110 08:36:46.634" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 73337500, 'start-iter': 1, 'wakeups': [73347620, 73357615, 73367615,...</msg>
<status status="PASS" starttime="20201110 08:36:44.539" endtime="20201110 08:36:46.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:46.640" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 73337500, 'start-iter': 1, 'wakeups': [73347620, 73357615, 73367615,...</msg>
<status status="PASS" starttime="20201110 08:36:46.636" endtime="20201110 08:36:46.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:46.642" endtime="20201110 08:36:46.646"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.536" endtime="20201110 08:36:46.647"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.534" endtime="20201110 08:36:46.648"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:46.654" level="INFO">${RESULT} = {'start-iter': 1, 'start-time': 73337500, 'timer-count': 10, 'timer-interval': 10000, 'wakeups': [73347620, 73357615, 73367615, 73377615, 73387615, 73397615, 73407615, 73417615, 73427615, 73437615, 73...</msg>
<status status="PASS" starttime="20201110 08:36:46.650" endtime="20201110 08:36:46.655"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:46.663" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:36:46.661" endtime="20201110 08:36:46.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:46.668" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:36:46.666" endtime="20201110 08:36:46.668"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.656" endtime="20201110 08:36:46.670"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:46.678" level="INFO">NAME: 10-start-iter</msg>
<status status="PASS" starttime="20201110 08:36:46.676" endtime="20201110 08:36:46.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:46.683" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:36:46.681" endtime="20201110 08:36:46.684"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.671" endtime="20201110 08:36:46.685"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:46.694" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201110 08:36:46.691" endtime="20201110 08:36:46.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:46.698" level="INFO">VALUE: 73337500</msg>
<status status="PASS" starttime="20201110 08:36:46.696" endtime="20201110 08:36:46.699"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.686" endtime="20201110 08:36:46.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:46.711" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:46.707" endtime="20201110 08:36:46.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:46.716" level="INFO">VALUE: [73347620, 73357615, 73367615, 73377615, 73387615, 73397615, 73407615, 73417615, 73427615, 73437615, 73447615, 73457615, 73467615, 73477615, 73487615, 73497615, 73507615, 73517615, 73527615, 73537615, 73547615, 73557615, 73567615, 73577615, 73587615, 73597615, 73607615, 73617615, 73627615, 73637615, 73647615, 73657615, 73667615, 73677615, 73687615, 73697615, 73707615, 73717615, 73727615, 73737615, 73747615, 73757615, 73767615, 73777615, 73787615, 73797615, 73807615, 73817615, 73827615, 73837615, 73847615, 73857615, 73867615, 73877615, 73887615, 73897615, 73907615, 73917615, 73927615, 73937615, 73947615, 73957615, 73967615, 73977615, 73987615, 73997615, 74007615, 74017615, 74027615, 74037615, 74047615, 74057615, 74067615, 74077615, 74087615, 74097615, 74107615, 74117615, 74127615, 74137615, 74147615, 74157615, 74167615, 74177615, 74187615, 74197615, 74207615, 74217615, 74227615, 74237615, 74247615, 74257615, 74267615, 74277615, 74287615, 74297615, 74307615, 74317615, 74327615, 74337615]</msg>
<status status="PASS" starttime="20201110 08:36:46.714" endtime="20201110 08:36:46.717"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.701" endtime="20201110 08:36:46.718"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:46.733" endtime="20201110 08:36:47.025"></status>
</kw>
<msg timestamp="20201110 08:36:47.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019727931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029849042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:46.731" endtime="20201110 08:36:47.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:47.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019727931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029849042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:47.029" endtime="20201110 08:36:47.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:47.037" endtime="20201110 08:36:47.039"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.728" endtime="20201110 08:36:47.039"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.720" endtime="20201110 08:36:47.040"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:47.064" level="INFO">${RESULT} = {'source_diff': [0, 0.010121110999999999, 0.009995583000000002, 0.010000930999999998, 0.010000915999999999, 0.010000931000000005, 0.010000929999999991, 0.010000931000000005, 0.010000916999999998, 0.01...</msg>
<status status="PASS" starttime="20201110 08:36:47.040" endtime="20201110 08:36:47.065"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:47.069" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201110 08:36:47.068" endtime="20201110 08:36:47.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:47.071" level="INFO">VALUE: 0.019727931</msg>
<status status="PASS" starttime="20201110 08:36:47.070" endtime="20201110 08:36:47.071"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:47.065" endtime="20201110 08:36:47.072"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:47.077" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:47.076" endtime="20201110 08:36:47.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:47.079" level="INFO">VALUE: [0.029849042, 0.039844625, 0.049845556, 0.059846472, 0.069847403, 0.079848333, 0.089849264, 0.099850181, 0.109851139, 0.119852014, 0.129852944, 0.139853903, 0.149854792, 0.159855708, 0.169856639, 0.179857569, 0.1898585, 0.199859403, 0.209860333, 0.219861264, 0.229862194, 0.239863139, 0.249864042, 0.259864958, 0.269865889, 0.279866806, 0.289867736, 0.299868653, 0.309869569, 0.319870528, 0.329871431, 0.339872333, 0.349873333, 0.359874181, 0.369875125, 0.379876042, 0.389876986, 0.399877889, 0.409878861, 0.419879736, 0.429880681, 0.439881583, 0.449882528, 0.459883444, 0.469884375, 0.479885306, 0.489886222, 0.499887167, 0.509888069, 0.519888986, 0.529889972, 0.539890833, 0.549891764, 0.559892681, 0.569893653, 0.579894542, 0.5898955, 0.599896375, 0.609897333, 0.61989825, 0.629899181, 0.639900083, 0.649901028, 0.659901972, 0.669902889, 0.679903778, 0.689904736, 0.699905625, 0.709906569, 0.719907486, 0.729908431, 0.739909333, 0.749910264, 0.759911181, 0.769912111, 0.779913042, 0.789913986, 0.799914889, 0.809915819, 0.81991675, 0.829917667, 0.839918583, 0.849919514, 0.859920431, 0.869921361, 0.879922292, 0.889923222, 0.899924194, 0.909925069, 0.919926028, 0.929926931, 0.939927833, 0.949928764, 0.959929722, 0.969930611, 0.979931528, 0.989932528, 0.999933389, 1.009934333, 1.01993525] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:36:47.078" endtime="20201110 08:36:47.079"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:47.073" endtime="20201110 08:36:47.080"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:47.082" endtime="20201110 08:36:47.084"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:47.088" endtime="20201110 08:36:47.108"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:47.085" endtime="20201110 08:36:47.108"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:47.080" endtime="20201110 08:36:47.109"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.533" endtime="20201110 08:36:47.109"></status>
</kw>
<msg timestamp="20201110 08:36:47.109" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:47.118" endtime="20201110 08:36:49.211"></status>
</kw>
<msg timestamp="20201110 08:36:49.212" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 75914598, 'start-iter': 1, 'wakeups': [75924718, 75934713, 75944713,...</msg>
<status status="PASS" starttime="20201110 08:36:47.116" endtime="20201110 08:36:49.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:49.219" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 75914598, 'start-iter': 1, 'wakeups': [75924718, 75934713, 75944713,...</msg>
<status status="PASS" starttime="20201110 08:36:49.215" endtime="20201110 08:36:49.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:49.221" endtime="20201110 08:36:49.225"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:47.113" endtime="20201110 08:36:49.226"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:47.111" endtime="20201110 08:36:49.227"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:49.233" level="INFO">${RESULT} = {'start-iter': 1, 'start-time': 75914598, 'timer-count': 10, 'timer-interval': 10000, 'wakeups': [75924718, 75934713, 75944713, 75954713, 75964713, 75974713, 75984713, 75994713, 76004713, 76014713, 76...</msg>
<status status="PASS" starttime="20201110 08:36:49.229" endtime="20201110 08:36:49.234"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:49.242" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:36:49.240" endtime="20201110 08:36:49.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:49.247" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:36:49.245" endtime="20201110 08:36:49.247"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:49.235" endtime="20201110 08:36:49.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:49.257" level="INFO">NAME: 10-start-iter</msg>
<status status="PASS" starttime="20201110 08:36:49.255" endtime="20201110 08:36:49.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:49.262" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:36:49.260" endtime="20201110 08:36:49.263"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:49.250" endtime="20201110 08:36:49.263"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:49.268" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201110 08:36:49.267" endtime="20201110 08:36:49.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:49.270" level="INFO">VALUE: 75914598</msg>
<status status="PASS" starttime="20201110 08:36:49.269" endtime="20201110 08:36:49.270"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:49.264" endtime="20201110 08:36:49.271"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:49.275" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:49.274" endtime="20201110 08:36:49.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:49.277" level="INFO">VALUE: [75924718, 75934713, 75944713, 75954713, 75964713, 75974713, 75984713, 75994713, 76004713, 76014713, 76024713, 76034713, 76044713, 76054713, 76064713, 76074713, 76084713, 76094713, 76104713, 76114713, 76124713, 76134713, 76144713, 76154713, 76164713, 76174713, 76184713, 76194713, 76204713, 76214713, 76224713, 76234713, 76244713, 76254713, 76264713, 76274713, 76284713, 76294713, 76304713, 76314713, 76324713, 76334713, 76344713, 76354713, 76364713, 76374713, 76384713, 76394713, 76404713, 76414713, 76424713, 76434713, 76444713, 76454713, 76464713, 76474713, 76484713, 76494713, 76504713, 76514713, 76524713, 76534713, 76544713, 76554713, 76564713, 76574713, 76584713, 76594713, 76604713, 76614713, 76624713, 76634713, 76644713, 76654713, 76664713, 76674713, 76684713, 76694713, 76704713, 76714713, 76724713, 76734713, 76744713, 76754713, 76764713, 76774713, 76784713, 76794713, 76804713, 76814713, 76824713, 76834713, 76844713, 76854713, 76864713, 76874713, 76884713, 76894713, 76904713, 76914713]</msg>
<status status="PASS" starttime="20201110 08:36:49.276" endtime="20201110 08:36:49.278"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:49.271" endtime="20201110 08:36:49.278"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:49.285" endtime="20201110 08:36:49.578"></status>
</kw>
<msg timestamp="20201110 08:36:49.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019016597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029137611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:49.283" endtime="20201110 08:36:49.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:49.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019016597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029137611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:49.582" endtime="20201110 08:36:49.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:49.590" endtime="20201110 08:36:49.592"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:49.280" endtime="20201110 08:36:49.592"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:49.279" endtime="20201110 08:36:49.593"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:49.617" level="INFO">${RESULT} = {'source_diff': [0, 0.010121014000000001, 0.009995597000000002, 0.010000916999999998, 0.010000916999999998, 0.010000943999999998, 0.010000944999999997, 0.010000902000000006, 0.010000888999999999, 0.01...</msg>
<status status="PASS" starttime="20201110 08:36:49.593" endtime="20201110 08:36:49.618"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:49.622" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201110 08:36:49.621" endtime="20201110 08:36:49.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:49.624" level="INFO">VALUE: 0.019016597</msg>
<status status="PASS" starttime="20201110 08:36:49.623" endtime="20201110 08:36:49.624"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:49.618" endtime="20201110 08:36:49.625"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:49.630" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:49.629" endtime="20201110 08:36:49.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:49.632" level="INFO">VALUE: [0.029137611, 0.039133208, 0.049134125, 0.059135042, 0.069135986, 0.079136931, 0.089137833, 0.099138722, 0.109139681, 0.119140583, 0.129141583, 0.139142417, 0.149143361, 0.159144264, 0.169145208, 0.179146125, 0.189147042, 0.199147958, 0.209148889, 0.219149833, 0.229150736, 0.239151667, 0.249152639, 0.2591535, 0.269154431, 0.279155417, 0.289156278, 0.299157194, 0.309158125, 0.319159042, 0.32916, 0.339160889, 0.349161819, 0.35916275, 0.369163694, 0.379164611, 0.389165528, 0.399166458, 0.409167389, 0.419168278, 0.429169222, 0.439170194, 0.449171069, 0.459172056, 0.469172931, 0.479173847, 0.489174778, 0.499175694, 0.509176611, 0.519177528, 0.529178458, 0.539179375, 0.549180319, 0.559181236, 0.569182167, 0.579183069, 0.589184014, 0.599184931, 0.609185861, 0.619186792, 0.629187708, 0.639188653, 0.649189569, 0.659190472, 0.669191403, 0.679192333, 0.689193319, 0.699194194, 0.709195111, 0.719196014, 0.729196958, 0.739197861, 0.749198806, 0.759199736, 0.769200653, 0.779201569, 0.789202542, 0.799203417, 0.809204347, 0.819205306, 0.829206194, 0.839207111, 0.849208056, 0.859208972, 0.869209972, 0.879210861, 0.88921175, 0.899212667, 0.909213611, 0.919214556, 0.929215444, 0.939216361, 0.949217292, 0.959218222, 0.969219194, 0.979220056, 0.989221, 0.999221903, 1.009222861, 1.019223778] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:36:49.631" endtime="20201110 08:36:49.632"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:49.626" endtime="20201110 08:36:49.633"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:49.635" endtime="20201110 08:36:49.636"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:49.639" endtime="20201110 08:36:49.658"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:49.637" endtime="20201110 08:36:49.659"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:49.633" endtime="20201110 08:36:49.659"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:47.110" endtime="20201110 08:36:49.659"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:41.944" endtime="20201110 08:36:49.660"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:41.943" endtime="20201110 08:36:49.660"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.540" endtime="20201110 08:36:49.660"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201110 08:35:32.466" endtime="20201110 08:36:49.660" critical="yes"></status>
</test>
<status status="PASS" starttime="20201110 08:35:30.037" endtime="20201110 08:36:49.664"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">esp32-wroom-32</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201110 08:33:40.708" endtime="20201110 08:36:49.680"></status>
</suite>
<statistics>
<total>
<stat pass="12" fail="0">Critical Tests</stat>
<stat pass="12" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="12" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="12" fail="0">BOARD_esp32-wroom-32</stat>
<stat pass="2" fail="0">dev</stat>
</tag>
<suite>
<stat pass="12" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="8" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="1" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
