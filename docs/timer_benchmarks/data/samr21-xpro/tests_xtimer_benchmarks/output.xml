<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2 (Python 3.7.3 on linux)" generated="20201110 08:32:28.012" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201110 08:32:29.312" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201110 08:32:29.329" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201110 08:32:31.386" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201110 08:32:29.308" endtime="20201110 08:32:31.387"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201110 08:32:31.393" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201110 08:32:31.389" endtime="20201110 08:32:31.393"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:29.305" endtime="20201110 08:32:31.395"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:31.399" endtime="20201110 08:32:31.738"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:31.396" endtime="20201110 08:32:31.740"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:31.771" endtime="20201110 08:32:31.787"></status>
</kw>
<msg timestamp="20201110 08:32:31.788" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:31.768" endtime="20201110 08:32:31.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:31.794" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:31.790" endtime="20201110 08:32:31.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:32:31.801" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:32:31.797" endtime="20201110 08:32:31.802"></status>
</kw>
<status status="FAIL" starttime="20201110 08:32:31.761" endtime="20201110 08:32:31.804"></status>
</kw>
<status status="FAIL" starttime="20201110 08:32:31.755" endtime="20201110 08:32:31.805"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:31.752" endtime="20201110 08:32:31.806"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:32:31.814" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:32:31.812" endtime="20201110 08:32:31.815"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:31.808" endtime="20201110 08:32:31.815"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:31.750" endtime="20201110 08:32:31.816"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:31.748" endtime="20201110 08:32:31.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:31.817" endtime="20201110 08:32:31.821"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:31.745" endtime="20201110 08:32:31.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:31.824" endtime="20201110 08:32:31.828"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:31.741" endtime="20201110 08:32:31.829"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:29.301" endtime="20201110 08:32:31.830"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:31.844" endtime="20201110 08:32:31.865"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:31.840" endtime="20201110 08:32:31.867"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:31.902" endtime="20201110 08:32:31.917"></status>
</kw>
<msg timestamp="20201110 08:32:31.918" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:31.898" endtime="20201110 08:32:31.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:31.924" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:31.920" endtime="20201110 08:32:31.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:32:31.931" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:32:31.926" endtime="20201110 08:32:31.931"></status>
</kw>
<status status="FAIL" starttime="20201110 08:32:31.891" endtime="20201110 08:32:31.933"></status>
</kw>
<status status="FAIL" starttime="20201110 08:32:31.885" endtime="20201110 08:32:31.935"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:31.880" endtime="20201110 08:32:31.935"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:32:31.943" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:32:31.942" endtime="20201110 08:32:31.944"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:31.937" endtime="20201110 08:32:31.945"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:31.879" endtime="20201110 08:32:31.945"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:31.877" endtime="20201110 08:32:31.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:31.947" endtime="20201110 08:32:31.951"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:31.873" endtime="20201110 08:32:31.953"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:31.869" endtime="20201110 08:32:31.954"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:31.838" endtime="20201110 08:32:31.955"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:31.973" endtime="20201110 08:32:31.983"></status>
</kw>
<msg timestamp="20201110 08:32:31.985" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:31.969" endtime="20201110 08:32:31.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:31.991" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:31.987" endtime="20201110 08:32:31.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:31.993" endtime="20201110 08:32:31.996"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:31.962" endtime="20201110 08:32:31.998"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:31.957" endtime="20201110 08:32:31.999"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:32.009" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201110 08:32:32.007" endtime="20201110 08:32:32.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:32.014" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201110 08:32:32.011" endtime="20201110 08:32:32.014"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:32.001" endtime="20201110 08:32:32.016"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201110 08:32:31.831" endtime="20201110 08:32:32.018" critical="yes"></status>
</test>
<status status="PASS" starttime="20201110 08:32:28.293" endtime="20201110 08:32:32.026"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201110 08:32:32.164" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201110 08:32:32.179" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201110 08:32:34.203" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201110 08:32:32.160" endtime="20201110 08:32:34.204"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201110 08:32:34.209" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201110 08:32:34.206" endtime="20201110 08:32:34.210"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:32.157" endtime="20201110 08:32:34.212"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:34.216" endtime="20201110 08:32:34.572"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:34.214" endtime="20201110 08:32:34.575"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:34.639" endtime="20201110 08:32:34.664"></status>
</kw>
<msg timestamp="20201110 08:32:34.665" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:34.631" endtime="20201110 08:32:34.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:34.671" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:34.667" endtime="20201110 08:32:34.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:32:34.678" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:32:34.674" endtime="20201110 08:32:34.679"></status>
</kw>
<status status="FAIL" starttime="20201110 08:32:34.616" endtime="20201110 08:32:34.681"></status>
</kw>
<status status="FAIL" starttime="20201110 08:32:34.604" endtime="20201110 08:32:34.683"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:34.597" endtime="20201110 08:32:34.684"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:32:34.693" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:32:34.692" endtime="20201110 08:32:34.694"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:34.686" endtime="20201110 08:32:34.695"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:34.594" endtime="20201110 08:32:34.695"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:34.590" endtime="20201110 08:32:34.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:34.697" endtime="20201110 08:32:34.700"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:34.582" endtime="20201110 08:32:34.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:34.703" endtime="20201110 08:32:34.707"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:34.577" endtime="20201110 08:32:34.709"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:32.154" endtime="20201110 08:32:34.709"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:34.723" endtime="20201110 08:32:34.744"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:34.719" endtime="20201110 08:32:34.746"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:34.840" endtime="20201110 08:32:34.857"></status>
</kw>
<msg timestamp="20201110 08:32:34.858" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:34.836" endtime="20201110 08:32:34.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:34.865" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:34.861" endtime="20201110 08:32:34.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:32:34.872" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:32:34.868" endtime="20201110 08:32:34.873"></status>
</kw>
<status status="FAIL" starttime="20201110 08:32:34.829" endtime="20201110 08:32:34.874"></status>
</kw>
<status status="FAIL" starttime="20201110 08:32:34.762" endtime="20201110 08:32:34.876"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:34.759" endtime="20201110 08:32:34.877"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:32:34.884" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:32:34.883" endtime="20201110 08:32:34.885"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:34.878" endtime="20201110 08:32:34.885"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:34.757" endtime="20201110 08:32:34.886"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:34.756" endtime="20201110 08:32:34.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:34.888" endtime="20201110 08:32:34.891"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:34.752" endtime="20201110 08:32:34.893"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:34.748" endtime="20201110 08:32:34.894"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:34.716" endtime="20201110 08:32:34.895"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201110 08:32:34.898" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:34.918" endtime="20201110 08:32:34.929"></status>
</kw>
<msg timestamp="20201110 08:32:34.931" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:34.915" endtime="20201110 08:32:34.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:34.937" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:34.933" endtime="20201110 08:32:34.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:34.939" endtime="20201110 08:32:34.943"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:34.907" endtime="20201110 08:32:34.944"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:34.903" endtime="20201110 08:32:34.946"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:34.964" endtime="20201110 08:32:35.319"></status>
</kw>
<msg timestamp="20201110 08:32:35.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.1856675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.185667972, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:32:34.960" endtime="20201110 08:32:35.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:35.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.1856675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.185667972, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:32:35.328" endtime="20201110 08:32:35.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:35.347" endtime="20201110 08:32:35.351"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:34.952" endtime="20201110 08:32:35.352"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:34.947" endtime="20201110 08:32:35.354"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:35.363" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:32:35.361" endtime="20201110 08:32:35.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:35.375" level="INFO">VALUE: [{'time': 0.1856675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.185667972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999997360464e-07, 'source_diff': 4.7199999997360464e-07}, {'time': 0.185677403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.431000000004186e-06, 'source_diff': 9.431000000004186e-06}, {'time': 0.185677875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.185684903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.028000000020018e-06, 'source_diff': 7.028000000020018e-06}, {'time': 0.185685375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.185692514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.138999999989348e-06, 'source_diff': 7.138999999989348e-06}, {'time': 0.185692986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.185699319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.3329999999972575e-06, 'source_diff': 6.3329999999972575e-06}, {'time': 0.185699792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.185705458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.665999999987514e-06, 'source_diff': 5.665999999987514e-06}, {'time': 0.185705931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.185716306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0375000000006906e-05, 'source_diff': 1.0375000000006906e-05}, {'time': 0.185716778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.185725903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.124999999998717e-06, 'source_diff': 9.124999999998717e-06}, {'time': 0.185726375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.185730806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.430999999999186e-06, 'source_diff': 4.430999999999186e-06}, {'time': 0.185731278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.185742083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0805000000002618e-05, 'source_diff': 1.0805000000002618e-05}, {'time': 0.185742556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.185750903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.346999999991889e-06, 'source_diff': 8.346999999991889e-06}, {'time': 0.185751375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.185760139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.763999999994443e-06, 'source_diff': 8.763999999994443e-06}, {'time': 0.185760611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.185770903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0291999999995083e-05, 'source_diff': 1.0291999999995083e-05}, {'time': 0.185771375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.185777042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.667000000014744e-06, 'source_diff': 5.667000000014744e-06}, {'time': 0.185777514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.185784389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.874999999989528e-06, 'source_diff': 6.874999999989528e-06}, {'time': 0.185784861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.185795306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0444999999997817e-05, 'source_diff': 1.0444999999997817e-05}, {'time': 0.185795778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.185805625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.847000000007267e-06, 'source_diff': 9.847000000007267e-06}, {'time': 0.185806097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.185810847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7499999999978115e-06, 'source_diff': 4.7499999999978115e-06}, {'time': 0.185811319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.185817208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.889000000008915e-06, 'source_diff': 5.889000000008915e-06}, {'time': 0.185817681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.185828056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0374999999979151e-05, 'source_diff': 1.0374999999979151e-05}, {'time': 0.185828528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.185835903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.375000000003906e-06, 'source_diff': 7.375000000003906e-06}, {'time': 0.185836375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.185844764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.388999999997537e-06, 'source_diff': 8.388999999997537e-06}, {'time': 0.185845236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.185849708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.4720000000053606e-06, 'source_diff': 4.4720000000053606e-06}, {'time': 0.185850181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.185858958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.7769999999876e-06, 'source_diff': 8.7769999999876e-06}, {'time': 0.185859431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.185867722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.291000000021365e-06, 'source_diff': 8.291000000021365e-06}, {'time': 0.185868194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999997360464e-07, 'source_diff': 4.7199999997360464e-07}, {'time': 0.18587325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.05600000000328e-06, 'source_diff': 5.05600000000328e-06}, {'time': 0.185873722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.185878181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.459000000012203e-06, 'source_diff': 4.459000000012203e-06}, {'time': 0.185878653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.185885764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.111000000004086e-06, 'source_diff': 7.111000000004086e-06}, {'time': 0.185886236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.185893694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.457999999987974e-06, 'source_diff': 7.457999999987974e-06}, {'time': 0.185894167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.185905069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0902000000007073e-05, 'source_diff': 1.0902000000007073e-05}, {'time': 0.185905542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.185914681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.138999999991348e-06, 'source_diff': 9.138999999991348e-06}, {'time': 0.185915153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.185920319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.166000000000892e-06, 'source_diff': 5.166000000000892e-06}, {'time': 0.185920792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.185931056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.026400000000982e-05, 'source_diff': 1.026400000000982e-05}, {'time': 0.185931597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999927972e-07, 'source_diff': 5.409999999927972e-07}, {'time': 0.185935986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.388999999993537e-06, 'source_diff': 4.388999999993537e-06}, {'time': 0.185936458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.185946625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0167000000005366e-05, 'source_diff': 1.0167000000005366e-05}, {'time': 0.185947097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.185956431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.333999999999731e-06, 'source_diff': 9.333999999999731e-06}, {'time': 0.185956903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.185967389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0486000000003992e-05, 'source_diff': 1.0486000000003992e-05}, {'time': 0.185967861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.185974181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.3199999999763445e-06, 'source_diff': 6.3199999999763445e-06}, {'time': 0.185974653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.185984722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0069000000001438e-05, 'source_diff': 1.0069000000001438e-05}, {'time': 0.185985194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.185990667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.473000000005834e-06, 'source_diff': 5.473000000005834e-06}, {'time': 0.185991139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.186000472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.333000000000258e-06, 'source_diff': 9.333000000000258e-06}, {'time': 0.186000944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.186007875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.930999999987808e-06, 'source_diff': 6.930999999987808e-06}, {'time': 0.186008347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.186014625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2779999999984515e-06, 'source_diff': 6.2779999999984515e-06}, {'time': 0.186015167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000200265e-07, 'source_diff': 5.420000000200265e-07}, {'time': 0.186023653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.486000000001992e-06, 'source_diff': 8.486000000001992e-06}, {'time': 0.186024125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.186034722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0597000000001078e-05, 'source_diff': 1.0597000000001078e-05}, {'time': 0.186035194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999997360464e-07, 'source_diff': 4.7199999997360464e-07}, {'time': 0.186045153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.959000000003826e-06, 'source_diff': 9.959000000003826e-06}, {'time': 0.186045625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.186053903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.278000000000452e-06, 'source_diff': 8.278000000000452e-06}, {'time': 0.186054375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.186061208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.833000000011635e-06, 'source_diff': 6.833000000011635e-06}, {'time': 0.186061681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.186068847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.166000000002892e-06, 'source_diff': 7.166000000002892e-06}, {'time': 0.186069319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.186076861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.5419999999992715e-06, 'source_diff': 7.5419999999992715e-06}, {'time': 0.186077333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201110 08:32:35.365" endtime="20201110 08:32:35.378"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:35.355" endtime="20201110 08:32:35.380"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:32:35.435" level="INFO">${debug-compressed} = {'time': [0.1856675, 0.185667972, 0.185677403, 0.185677875, 0.185684903, 0.185685375, 0.185692514, 0.185692986, 0.185699319, 0.185699792, 0.185705458, 0.185705931, 0.185716306, 0.185716778, 0.18572590...</msg>
<status status="PASS" starttime="20201110 08:32:35.381" endtime="20201110 08:32:35.435"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:35.444" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:32:35.442" endtime="20201110 08:32:35.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:35.454" level="INFO">VALUE: {'time': [0.1856675, 0.185667972, 0.185677403, 0.185677875, 0.185684903, 0.185685375, 0.185692514, 0.185692986, 0.185699319, 0.185699792, 0.185705458, 0.185705931, 0.185716306, 0.185716778, 0.185725903, 0.185726375, 0.185730806, 0.185731278, 0.185742083, 0.185742556, 0.185750903, 0.185751375, 0.185760139, 0.185760611, 0.185770903, 0.185771375, 0.185777042, 0.185777514, 0.185784389, 0.185784861, 0.185795306, 0.185795778, 0.185805625, 0.185806097, 0.185810847, 0.185811319, 0.185817208, 0.185817681, 0.185828056, 0.185828528, 0.185835903, 0.185836375, 0.185844764, 0.185845236, 0.185849708, 0.185850181, 0.185858958, 0.185859431, 0.185867722, 0.185868194, 0.18587325, 0.185873722, 0.185878181, 0.185878653, 0.185885764, 0.185886236, 0.185893694, 0.185894167, 0.185905069, 0.185905542, 0.185914681, 0.185915153, 0.185920319, 0.185920792, 0.185931056, 0.185931597, 0.185935986, 0.185936458, 0.185946625, 0.185947097, 0.185956431, 0.185956903, 0.185967389, 0.185967861, 0.185974181, 0.185974653, 0.185984722, 0.185985194, 0.185990667, 0.185991139, 0.186000472, 0.186000944, 0.186007875, 0.186008347, 0.186014625, 0.186015167, 0.186023653, 0.186024125, 0.186034722, 0.186035194, 0.186045153, 0.186045625, 0.186053903, 0.186054375, 0.186061208, 0.186061681, 0.186068847, 0.186069319, 0.186076861, 0.186077333], 'source_diff': [0, 4.7199999997360464e-07, 9.431000000004186e-06, 4.720000000013602e-07, 7.028000000020018e-06, 4.720000000013602e-07, 7.138999999989348e-06, 4.720000000013602e-07, 6.3329999999972575e-06, 4.7300000000083386e-07, 5.665999999987514e-06, 4.7300000000083386e-07, 1.0375000000006906e-05, 4.720000000013602e-07, 9.124999999998717e-06, 4.720000000013602e-07, 4.430999999999186e-06, 4.720000000013602e-07, 1.0805000000002618e-05, 4.7300000000083386e-07, 8.346999999991889e-06, 4.720000000013602e-07, 8.763999999994443e-06, 4.720000000013602e-07, 1.0291999999995083e-05, 4.720000000013602e-07, 5.667000000014744e-06, 4.720000000013602e-07, 6.874999999989528e-06, 4.720000000013602e-07, 1.0444999999997817e-05, 4.720000000013602e-07, 9.847000000007267e-06, 4.720000000013602e-07, 4.7499999999978115e-06, 4.720000000013602e-07, 5.889000000008915e-06, 4.7300000000083386e-07, 1.0374999999979151e-05, 4.720000000013602e-07, 7.375000000003906e-06, 4.720000000013602e-07, 8.388999999997537e-06, 4.720000000013602e-07, 4.4720000000053606e-06, 4.7300000000083386e-07, 8.7769999999876e-06, 4.7300000000083386e-07, 8.291000000021365e-06, 4.7199999997360464e-07, 5.05600000000328e-06, 4.720000000013602e-07, 4.459000000012203e-06, 4.720000000013602e-07, 7.111000000004086e-06, 4.720000000013602e-07, 7.457999999987974e-06, 4.7300000000083386e-07, 1.0902000000007073e-05, 4.7300000000083386e-07, 9.138999999991348e-06, 4.720000000013602e-07, 5.166000000000892e-06, 4.7300000000083386e-07, 1.026400000000982e-05, 5.409999999927972e-07, 4.388999999993537e-06, 4.720000000013602e-07, 1.0167000000005366e-05, 4.720000000013602e-07, 9.333999999999731e-06, 4.720000000013602e-07, 1.0486000000003992e-05, 4.720000000013602e-07, 6.3199999999763445e-06, 4.720000000013602e-07, 1.0069000000001438e-05, 4.720000000013602e-07, 5.473000000005834e-06, 4.720000000013602e-07, 9.333000000000258e-06, 4.720000000013602e-07, 6.930999999987808e-06, 4.720000000013602e-07, 6.2779999999984515e-06, 5.420000000200265e-07, 8.486000000001992e-06, 4.720000000013602e-07, 1.0597000000001078e-05, 4.7199999997360464e-07, 9.959000000003826e-06, 4.720000000013602e-07, 8.278000000000452e-06, 4.720000000013602e-07, 6.833000000011635e-06, 4.7300000000083386e-07, 7.166000000002892e-06, 4.720000000013602e-07, 7.5419999999992715e-06, 4.720000000013602e-07], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'eventdiff': [0, 4.7199999997360464e-07, 9.431000000004186e-06, 4.720000000013602e-07, 7.028000000020018e-06, 4.720000000013602e-07, 7.138999999989348e-06, 4.720000000013602e-07, 6.3329999999972575e-06, 4.7300000000083386e-07, 5.665999999987514e-06, 4.7300000000083386e-07, 1.0375000000006906e-05, 4.720000000013602e-07, 9.124999999998717e-06, 4.720000000013602e-07, 4.430999999999186e-06, 4.720000000013602e-07, 1.0805000000002618e-05, 4.7300000000083386e-07, 8.346999999991889e-06, 4.720000000013602e-07, 8.763999999994443e-06, 4.720000000013602e-07, 1.0291999999995083e-05, 4.720000000013602e-07, 5.667000000014744e-06, 4.720000000013602e-07, 6.874999999989528e-06, 4.720000000013602e-07, 1.0444999999997817e-05, 4.720000000013602e-07, 9.847000000007267e-06, 4.720000000013602e-07, 4.7499999999978115e-06, 4.720000000013602e-07, 5.889000000008915e-06, 4.7300000000083386e-07, 1.0374999999979151e-05, 4.720000000013602e-07, 7.375000000003906e-06, 4.720000000013602e-07, 8.388999999997537e-06, 4.720000000013602e-07, 4.4720000000053606e-06, 4.7300000000083386e-07, 8.7769999999876e-06, 4.7300000000083386e-07, 8.291000000021365e-06, 4.7199999997360464e-07, 5.05600000000328e-06, 4.720000000013602e-07, 4.459000000012203e-06, 4.720000000013602e-07, 7.111000000004086e-06, 4.720000000013602e-07, 7.457999999987974e-06, 4.7300000000083386e-07, 1.0902000000007073e-05, 4.7300000000083386e-07, 9.138999999991348e-06, 4.720000000013602e-07, 5.166000000000892e-06, 4.7300000000083386e-07, 1.026400000000982e-05, 5.409999999927972e-07, 4.388999999993537e-06, 4.720000000013602e-07, 1.0167000000005366e-05, 4.720000000013602e-07, 9.333999999999731e-06, 4.720000000013602e-07, 1.0486000000003992e-05, 4.720000000013602e-07, 6.3199999999763445e-06, 4.720000000013602e-07, 1.0069000000001438e-05, 4.720000000013602e-07, 5.473000000005834e-06, 4.720000000013602e-07, 9.333000000000258e-06, 4.720000000013602e-07, 6.930999999987808e-06, 4.720000000013602e-07, 6.2779999999984515e-06, 5.420000000200265e-07, 8.486000000001992e-06, 4.720000000013602e-07, 1.0597000000001078e-05, 4.7199999997360464e-07, 9.959000000003826e-06, 4.720000000013602e-07, 8.278000000000452e-06, 4.720000000013602e-07, 6.833000000011635e-06, 4.7300000000083386e-07, 7.166000000002892e-06, 4.720000000013602e-07, 7.5419999999992715e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201110 08:32:35.446" endtime="20201110 08:32:35.456"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:35.437" endtime="20201110 08:32:35.458"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:35.471" level="INFO">${RESULT} = [{'time': 0.185667972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999997360464e-07, 'source_diff': 4.7199999997360464e-07}, {'time': 0.185677875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:32:35.460" endtime="20201110 08:32:35.472"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:35.507" level="INFO">${GPIO_OVERHEAD} = {'time': [0.185667972, 0.185677875, 0.185685375, 0.185692986, 0.185699792, 0.185705931, 0.185716778, 0.185726375, 0.185731278, 0.185742556, 0.185751375, 0.185760611, 0.185771375, 0.185777514, 0.185784...</msg>
<status status="PASS" starttime="20201110 08:32:35.474" endtime="20201110 08:32:35.507"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:35.517" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:32:35.515" endtime="20201110 08:32:35.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:35.524" level="INFO">VALUE: [4.7199999997360464e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 5.409999999927972e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.420000000200265e-07, 4.720000000013602e-07, 4.7199999997360464e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201110 08:32:35.520" endtime="20201110 08:32:35.525"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:35.509" endtime="20201110 08:32:35.527"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:35.535" endtime="20201110 08:32:35.537"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:35.543" endtime="20201110 08:32:35.565"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:35.538" endtime="20201110 08:32:35.566"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:35.530" endtime="20201110 08:32:35.568"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:34.900" endtime="20201110 08:32:35.568"></status>
</kw>
<msg timestamp="20201110 08:32:35.569" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:35.588" endtime="20201110 08:32:35.599"></status>
</kw>
<msg timestamp="20201110 08:32:35.600" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:35.585" endtime="20201110 08:32:35.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:35.606" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:35.602" endtime="20201110 08:32:35.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:35.608" endtime="20201110 08:32:35.612"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:35.578" endtime="20201110 08:32:35.614"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:35.573" endtime="20201110 08:32:35.615"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:35.632" endtime="20201110 08:32:35.971"></status>
</kw>
<msg timestamp="20201110 08:32:35.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035761833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035762306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:35.628" endtime="20201110 08:32:35.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:35.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035761833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035762306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:35.980" endtime="20201110 08:32:35.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:35.999" endtime="20201110 08:32:36.003"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:35.621" endtime="20201110 08:32:36.005"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:35.616" endtime="20201110 08:32:36.006"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:36.015" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:32:36.013" endtime="20201110 08:32:36.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:36.028" level="INFO">VALUE: [{'time': 0.035761833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035762306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035771444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.137999999998814e-06, 'source_diff': 9.137999999998814e-06}, {'time': 0.035771917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035781986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0069000000001438e-05, 'source_diff': 1.0069000000001438e-05}, {'time': 0.035782458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035787, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.541999999996271e-06, 'source_diff': 4.541999999996271e-06}, {'time': 0.035787472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035797014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.542000000001272e-06, 'source_diff': 9.542000000001272e-06}, {'time': 0.035797486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035803208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.721999999999672e-06, 'source_diff': 5.721999999999672e-06}, {'time': 0.035803681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.035808083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.402000000000572e-06, 'source_diff': 4.402000000000572e-06}, {'time': 0.035808556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035815708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.152000000003322e-06, 'source_diff': 7.152000000003322e-06}, {'time': 0.035816181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035821028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.846999999995327e-06, 'source_diff': 4.846999999995327e-06}, {'time': 0.0358215, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035828042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.541999999998271e-06, 'source_diff': 6.541999999998271e-06}, {'time': 0.035828514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035839194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0679999999999024e-05, 'source_diff': 1.0679999999999024e-05}, {'time': 0.035839667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035845167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.499999999998562e-06, 'source_diff': 5.499999999998562e-06}, {'time': 0.035845639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03585375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.110999999998147e-06, 'source_diff': 8.110999999998147e-06}, {'time': 0.035854222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035863417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.195000000003506e-06, 'source_diff': 9.195000000003506e-06}, {'time': 0.035863889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035874056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0166999999998427e-05, 'source_diff': 1.0166999999998427e-05}, {'time': 0.035874528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035884083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.554999999994429e-06, 'source_diff': 9.554999999994429e-06}, {'time': 0.035884556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035890125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.569000000003876e-06, 'source_diff': 5.569000000003876e-06}, {'time': 0.035890597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035899736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.138999999998287e-06, 'source_diff': 9.138999999998287e-06}, {'time': 0.035900208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035906833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.624999999996217e-06, 'source_diff': 6.624999999996217e-06}, {'time': 0.035907306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035913097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.790999999998048e-06, 'source_diff': 5.790999999998048e-06}, {'time': 0.035913569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035921653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.083999999998481e-06, 'source_diff': 8.083999999998481e-06}, {'time': 0.035922125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035931583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.458000000003852e-06, 'source_diff': 9.458000000003852e-06}, {'time': 0.035932056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.035936917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.861000000001836e-06, 'source_diff': 4.861000000001836e-06}, {'time': 0.035937389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035947347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.957999999997413e-06, 'source_diff': 9.957999999997413e-06}, {'time': 0.035947819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035952375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.55600000000278e-06, 'source_diff': 4.55600000000278e-06}, {'time': 0.035952847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035963736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0889000000000038e-05, 'source_diff': 1.0889000000000038e-05}, {'time': 0.035964208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035973458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.250000000002312e-06, 'source_diff': 9.250000000002312e-06}, {'time': 0.035973931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035978444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.512999999997658e-06, 'source_diff': 4.512999999997658e-06}, {'time': 0.035978917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035983875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.957999999999352e-06, 'source_diff': 4.957999999999352e-06}, {'time': 0.035984347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035995167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0820000000001662e-05, 'source_diff': 1.0820000000001662e-05}, {'time': 0.035995639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036000375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.735999999998242e-06, 'source_diff': 4.735999999998242e-06}, {'time': 0.036000847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036007153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.305999999997591e-06, 'source_diff': 6.305999999997591e-06}, {'time': 0.036007625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036017486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.860999999999898e-06, 'source_diff': 9.860999999999898e-06}, {'time': 0.036017958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036025944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.985999999994553e-06, 'source_diff': 7.985999999994553e-06}, {'time': 0.036026417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036030736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.319000000002626e-06, 'source_diff': 4.319000000002626e-06}, {'time': 0.036031208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036040736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.527999999994763e-06, 'source_diff': 9.527999999994763e-06}, {'time': 0.036041208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036046375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.167000000000366e-06, 'source_diff': 5.167000000000366e-06}, {'time': 0.036046847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036055778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.930999999996747e-06, 'source_diff': 8.930999999996747e-06}, {'time': 0.03605625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036067042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0792000000002522e-05, 'source_diff': 1.0792000000002522e-05}, {'time': 0.036067514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036078, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0485999999997053e-05, 'source_diff': 1.0485999999997053e-05}, {'time': 0.036078472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036087083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.610999999998648e-06, 'source_diff': 8.610999999998648e-06}, {'time': 0.036087556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036094486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.930000000002212e-06, 'source_diff': 6.930000000002212e-06}, {'time': 0.036094958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036099806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.847999999994801e-06, 'source_diff': 4.847999999994801e-06}, {'time': 0.036100278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036109097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.819000000000188e-06, 'source_diff': 8.819000000000188e-06}, {'time': 0.036109569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036118083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.514000000001132e-06, 'source_diff': 8.514000000001132e-06}, {'time': 0.036118556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036127778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.221999999996233e-06, 'source_diff': 9.221999999996233e-06}, {'time': 0.03612825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036133208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.957999999999352e-06, 'source_diff': 4.957999999999352e-06}, {'time': 0.036133681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036144167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0485999999997053e-05, 'source_diff': 1.0485999999997053e-05}, {'time': 0.036144639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036149708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.069000000003376e-06, 'source_diff': 5.069000000003376e-06}, {'time': 0.036150181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036160556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0374999999999968e-05, 'source_diff': 1.0374999999999968e-05}, {'time': 0.036161028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}]</msg>
<status status="PASS" starttime="20201110 08:32:36.019" endtime="20201110 08:32:36.031"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:36.007" endtime="20201110 08:32:36.033"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:32:36.089" level="INFO">${debug-compressed} = {'time': [0.035761833, 0.035762306, 0.035771444, 0.035771917, 0.035781986, 0.035782458, 0.035787, 0.035787472, 0.035797014, 0.035797486, 0.035803208, 0.035803681, 0.035808083, 0.035808556, 0.035815708...</msg>
<status status="PASS" starttime="20201110 08:32:36.034" endtime="20201110 08:32:36.089"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:36.098" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:32:36.096" endtime="20201110 08:32:36.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:36.107" level="INFO">VALUE: {'time': [0.035761833, 0.035762306, 0.035771444, 0.035771917, 0.035781986, 0.035782458, 0.035787, 0.035787472, 0.035797014, 0.035797486, 0.035803208, 0.035803681, 0.035808083, 0.035808556, 0.035815708, 0.035816181, 0.035821028, 0.0358215, 0.035828042, 0.035828514, 0.035839194, 0.035839667, 0.035845167, 0.035845639, 0.03585375, 0.035854222, 0.035863417, 0.035863889, 0.035874056, 0.035874528, 0.035884083, 0.035884556, 0.035890125, 0.035890597, 0.035899736, 0.035900208, 0.035906833, 0.035907306, 0.035913097, 0.035913569, 0.035921653, 0.035922125, 0.035931583, 0.035932056, 0.035936917, 0.035937389, 0.035947347, 0.035947819, 0.035952375, 0.035952847, 0.035963736, 0.035964208, 0.035973458, 0.035973931, 0.035978444, 0.035978917, 0.035983875, 0.035984347, 0.035995167, 0.035995639, 0.036000375, 0.036000847, 0.036007153, 0.036007625, 0.036017486, 0.036017958, 0.036025944, 0.036026417, 0.036030736, 0.036031208, 0.036040736, 0.036041208, 0.036046375, 0.036046847, 0.036055778, 0.03605625, 0.036067042, 0.036067514, 0.036078, 0.036078472, 0.036087083, 0.036087556, 0.036094486, 0.036094958, 0.036099806, 0.036100278, 0.036109097, 0.036109569, 0.036118083, 0.036118556, 0.036127778, 0.03612825, 0.036133208, 0.036133681, 0.036144167, 0.036144639, 0.036149708, 0.036150181, 0.036160556, 0.036161028], 'source_diff': [0, 4.7300000000083386e-07, 9.137999999998814e-06, 4.7300000000083386e-07, 1.0069000000001438e-05, 4.720000000013602e-07, 4.541999999996271e-06, 4.720000000013602e-07, 9.542000000001272e-06, 4.720000000013602e-07, 5.721999999999672e-06, 4.7299999999389497e-07, 4.402000000000572e-06, 4.7300000000083386e-07, 7.152000000003322e-06, 4.7300000000083386e-07, 4.846999999995327e-06, 4.720000000013602e-07, 6.541999999998271e-06, 4.720000000013602e-07, 1.0679999999999024e-05, 4.7300000000083386e-07, 5.499999999998562e-06, 4.720000000013602e-07, 8.110999999998147e-06, 4.720000000013602e-07, 9.195000000003506e-06, 4.720000000013602e-07, 1.0166999999998427e-05, 4.720000000013602e-07, 9.554999999994429e-06, 4.7300000000083386e-07, 5.569000000003876e-06, 4.720000000013602e-07, 9.138999999998287e-06, 4.720000000013602e-07, 6.624999999996217e-06, 4.7300000000083386e-07, 5.790999999998048e-06, 4.720000000013602e-07, 8.083999999998481e-06, 4.720000000013602e-07, 9.458000000003852e-06, 4.7299999999389497e-07, 4.861000000001836e-06, 4.720000000013602e-07, 9.957999999997413e-06, 4.720000000013602e-07, 4.55600000000278e-06, 4.720000000013602e-07, 1.0889000000000038e-05, 4.7199999999442133e-07, 9.250000000002312e-06, 4.7300000000083386e-07, 4.512999999997658e-06, 4.7300000000083386e-07, 4.957999999999352e-06, 4.720000000013602e-07, 1.0820000000001662e-05, 4.720000000013602e-07, 4.735999999998242e-06, 4.720000000013602e-07, 6.305999999997591e-06, 4.720000000013602e-07, 9.860999999999898e-06, 4.720000000013602e-07, 7.985999999994553e-06, 4.7300000000083386e-07, 4.319000000002626e-06, 4.720000000013602e-07, 9.527999999994763e-06, 4.720000000013602e-07, 5.167000000000366e-06, 4.720000000013602e-07, 8.930999999996747e-06, 4.720000000013602e-07, 1.0792000000002522e-05, 4.720000000013602e-07, 1.0485999999997053e-05, 4.720000000013602e-07, 8.610999999998648e-06, 4.7300000000083386e-07, 6.930000000002212e-06, 4.720000000013602e-07, 4.847999999994801e-06, 4.720000000013602e-07, 8.819000000000188e-06, 4.720000000013602e-07, 8.514000000001132e-06, 4.7300000000083386e-07, 9.221999999996233e-06, 4.720000000013602e-07, 4.957999999999352e-06, 4.7300000000083386e-07, 1.0485999999997053e-05, 4.720000000013602e-07, 5.069000000003376e-06, 4.7300000000083386e-07, 1.0374999999999968e-05, 4.7199999999442133e-07], 'sourceeventdiff': [0, 4.7300000000083386e-07, 9.137999999998814e-06, 4.7300000000083386e-07, 1.0069000000001438e-05, 4.720000000013602e-07, 4.541999999996271e-06, 4.720000000013602e-07, 9.542000000001272e-06, 4.720000000013602e-07, 5.721999999999672e-06, 4.7299999999389497e-07, 4.402000000000572e-06, 4.7300000000083386e-07, 7.152000000003322e-06, 4.7300000000083386e-07, 4.846999999995327e-06, 4.720000000013602e-07, 6.541999999998271e-06, 4.720000000013602e-07, 1.0679999999999024e-05, 4.7300000000083386e-07, 5.499999999998562e-06, 4.720000000013602e-07, 8.110999999998147e-06, 4.720000000013602e-07, 9.195000000003506e-06, 4.720000000013602e-07, 1.0166999999998427e-05, 4.720000000013602e-07, 9.554999999994429e-06, 4.7300000000083386e-07, 5.569000000003876e-06, 4.720000000013602e-07, 9.138999999998287e-06, 4.720000000013602e-07, 6.624999999996217e-06, 4.7300000000083386e-07, 5.790999999998048e-06, 4.720000000013602e-07, 8.083999999998481e-06, 4.720000000013602e-07, 9.458000000003852e-06, 4.7299999999389497e-07, 4.861000000001836e-06, 4.720000000013602e-07, 9.957999999997413e-06, 4.720000000013602e-07, 4.55600000000278e-06, 4.720000000013602e-07, 1.0889000000000038e-05, 4.7199999999442133e-07, 9.250000000002312e-06, 4.7300000000083386e-07, 4.512999999997658e-06, 4.7300000000083386e-07, 4.957999999999352e-06, 4.720000000013602e-07, 1.0820000000001662e-05, 4.720000000013602e-07, 4.735999999998242e-06, 4.720000000013602e-07, 6.305999999997591e-06, 4.720000000013602e-07, 9.860999999999898e-06, 4.720000000013602e-07, 7.985999999994553e-06, 4.7300000000083386e-07, 4.319000000002626e-06, 4.720000000013602e-07, 9.527999999994763e-06, 4.720000000013602e-07, 5.167000000000366e-06, 4.720000000013602e-07, 8.930999999996747e-06, 4.720000000013602e-07, 1.0792000000002522e-05, 4.720000000013602e-07, 1.0485999999997053e-05, 4.720000000013602e-07, 8.610999999998648e-06, 4.7300000000083386e-07, 6.930000000002212e-06, 4.720000000013602e-07, 4.847999999994801e-06, 4.720000000013602e-07, 8.819000000000188e-06, 4.720000000013602e-07, 8.514000000001132e-06, 4.7300000000083386e-07, 9.221999999996233e-06, 4.720000000013602e-07, 4.957999999999352e-06, 4.7300000000083386e-07, 1.0485999999997053e-05, 4.720000000013602e-07, 5.069000000003376e-06, 4.7300000000083386e-07, 1.0374999999999968e-05, 4.7199999999442133e-07]}</msg>
<status status="PASS" starttime="20201110 08:32:36.100" endtime="20201110 08:32:36.109"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:36.091" endtime="20201110 08:32:36.111"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:36.121" level="INFO">${RESULT} = [{'time': 0.035762306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035771917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:32:36.113" endtime="20201110 08:32:36.122"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:36.152" level="INFO">${GPIO_OVERHEAD} = {'time': [0.035762306, 0.035771917, 0.035782458, 0.035787472, 0.035797486, 0.035803681, 0.035808556, 0.035816181, 0.0358215, 0.035828514, 0.035839667, 0.035845639, 0.035854222, 0.035863889, 0.03587452...</msg>
<status status="PASS" starttime="20201110 08:32:36.123" endtime="20201110 08:32:36.153"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:36.162" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:32:36.160" endtime="20201110 08:32:36.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:36.168" level="INFO">VALUE: [4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07]</msg>
<status status="PASS" starttime="20201110 08:32:36.164" endtime="20201110 08:32:36.168"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:36.154" endtime="20201110 08:32:36.170"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:36.176" endtime="20201110 08:32:36.179"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:36.184" endtime="20201110 08:32:36.206"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:36.180" endtime="20201110 08:32:36.208"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:36.172" endtime="20201110 08:32:36.209"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:35.570" endtime="20201110 08:32:36.210"></status>
</kw>
<msg timestamp="20201110 08:32:36.210" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:36.230" endtime="20201110 08:32:36.242"></status>
</kw>
<msg timestamp="20201110 08:32:36.243" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:36.226" endtime="20201110 08:32:36.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:36.249" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:36.245" endtime="20201110 08:32:36.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:36.251" endtime="20201110 08:32:36.255"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:36.219" endtime="20201110 08:32:36.257"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:36.215" endtime="20201110 08:32:36.258"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:36.277" endtime="20201110 08:32:36.613"></status>
</kw>
<msg timestamp="20201110 08:32:36.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037135444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037135917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:36.274" endtime="20201110 08:32:36.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:36.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037135444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037135917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:36.622" endtime="20201110 08:32:36.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:36.642" endtime="20201110 08:32:36.646"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:36.266" endtime="20201110 08:32:36.647"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:36.259" endtime="20201110 08:32:36.649"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:36.658" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:32:36.656" endtime="20201110 08:32:36.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:36.670" level="INFO">VALUE: [{'time': 0.037135444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037135917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037144736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.819000000000188e-06, 'source_diff': 8.819000000000188e-06}, {'time': 0.037145208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037152347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.139000000003226e-06, 'source_diff': 7.139000000003226e-06}, {'time': 0.037152819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037160389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.57000000000535e-06, 'source_diff': 7.57000000000535e-06}, {'time': 0.037160861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037169153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.292000000000022e-06, 'source_diff': 8.292000000000022e-06}, {'time': 0.037169625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037179181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.556000000000842e-06, 'source_diff': 9.556000000000842e-06}, {'time': 0.037179653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037185861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.208000000000602e-06, 'source_diff': 6.208000000000602e-06}, {'time': 0.037186333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037195778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.444999999996817e-06, 'source_diff': 9.444999999996817e-06}, {'time': 0.03719625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037200569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.319000000002626e-06, 'source_diff': 4.319000000002626e-06}, {'time': 0.037201042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.037211833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0791000000003048e-05, 'source_diff': 1.0791000000003048e-05}, {'time': 0.037212306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037217903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.596999999996077e-06, 'source_diff': 5.596999999996077e-06}, {'time': 0.037218375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037225514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.139000000003226e-06, 'source_diff': 7.139000000003226e-06}, {'time': 0.037225986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037236042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0055999999994403e-05, 'source_diff': 1.0055999999994403e-05}, {'time': 0.037236514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037243875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.361000000004336e-06, 'source_diff': 7.361000000004336e-06}, {'time': 0.037244347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037250139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.79200000000446e-06, 'source_diff': 5.79200000000446e-06}, {'time': 0.037250611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037260069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.457999999996913e-06, 'source_diff': 9.457999999996913e-06}, {'time': 0.037260542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037266208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.666000000001392e-06, 'source_diff': 5.666000000001392e-06}, {'time': 0.037266681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037275569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.887999999998564e-06, 'source_diff': 8.887999999998564e-06}, {'time': 0.037276111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.037281042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.930999999999686e-06, 'source_diff': 4.930999999999686e-06}, {'time': 0.037281514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037290417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.902999999997607e-06, 'source_diff': 8.902999999997607e-06}, {'time': 0.037290889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037300042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.152999999997857e-06, 'source_diff': 9.152999999997857e-06}, {'time': 0.037300514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037309111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.596999999999078e-06, 'source_diff': 8.596999999999078e-06}, {'time': 0.037309583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037317264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.681000000002436e-06, 'source_diff': 7.681000000002436e-06}, {'time': 0.037317736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037326861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.125000000005656e-06, 'source_diff': 9.125000000005656e-06}, {'time': 0.037327333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037337208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.874999999999468e-06, 'source_diff': 9.874999999999468e-06}, {'time': 0.037337681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037348153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0472000000004422e-05, 'source_diff': 1.0472000000004422e-05}, {'time': 0.037348625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0373565, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.874999999997467e-06, 'source_diff': 7.874999999997467e-06}, {'time': 0.037356972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037367347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0374999999999968e-05, 'source_diff': 1.0374999999999968e-05}, {'time': 0.037367819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037374569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.750000000006751e-06, 'source_diff': 6.750000000006751e-06}, {'time': 0.037375042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.037383333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.291000000000548e-06, 'source_diff': 8.291000000000548e-06}, {'time': 0.037383806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037390417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.611000000003586e-06, 'source_diff': 6.611000000003586e-06}, {'time': 0.037390889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037401194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0305000000002118e-05, 'source_diff': 1.0305000000002118e-05}, {'time': 0.037401667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037409722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.054999999999868e-06, 'source_diff': 8.054999999999868e-06}, {'time': 0.037410194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037414833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.037415306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.03741975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.443999999999282e-06, 'source_diff': 4.443999999999282e-06}, {'time': 0.037420222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037426417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.194999999993567e-06, 'source_diff': 6.194999999993567e-06}, {'time': 0.037426889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037435083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.194000000003032e-06, 'source_diff': 8.194000000003032e-06}, {'time': 0.037435556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037446361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.080499999999568e-05, 'source_diff': 1.080499999999568e-05}, {'time': 0.037446833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037456181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.347999999999301e-06, 'source_diff': 9.347999999999301e-06}, {'time': 0.037456653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037463889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.236000000000742e-06, 'source_diff': 7.236000000000742e-06}, {'time': 0.037464361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037472556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.194999999995567e-06, 'source_diff': 8.194999999995567e-06}, {'time': 0.037473028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037481431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.403000000004046e-06, 'source_diff': 8.403000000004046e-06}, {'time': 0.037481903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037489264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.361000000004336e-06, 'source_diff': 7.361000000004336e-06}, {'time': 0.037489736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037499903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0166999999998427e-05, 'source_diff': 1.0166999999998427e-05}, {'time': 0.037500375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037507944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.568999999998938e-06, 'source_diff': 7.568999999998938e-06}, {'time': 0.037508417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037514097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.680000000000962e-06, 'source_diff': 5.680000000000962e-06}, {'time': 0.037514569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037520792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2229999999996455e-06, 'source_diff': 6.2229999999996455e-06}, {'time': 0.037521264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037526111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.847000000002266e-06, 'source_diff': 4.847000000002266e-06}, {'time': 0.037526583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037537278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0694999999998067e-05, 'source_diff': 1.0694999999998067e-05}, {'time': 0.03753775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037544889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.138999999996287e-06, 'source_diff': 7.138999999996287e-06}, {'time': 0.037545361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201110 08:32:36.660" endtime="20201110 08:32:36.672"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:36.650" endtime="20201110 08:32:36.674"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:32:36.729" level="INFO">${debug-compressed} = {'time': [0.037135444, 0.037135917, 0.037144736, 0.037145208, 0.037152347, 0.037152819, 0.037160389, 0.037160861, 0.037169153, 0.037169625, 0.037179181, 0.037179653, 0.037185861, 0.037186333, 0.037195...</msg>
<status status="PASS" starttime="20201110 08:32:36.676" endtime="20201110 08:32:36.730"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:36.738" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:32:36.736" endtime="20201110 08:32:36.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:36.747" level="INFO">VALUE: {'time': [0.037135444, 0.037135917, 0.037144736, 0.037145208, 0.037152347, 0.037152819, 0.037160389, 0.037160861, 0.037169153, 0.037169625, 0.037179181, 0.037179653, 0.037185861, 0.037186333, 0.037195778, 0.03719625, 0.037200569, 0.037201042, 0.037211833, 0.037212306, 0.037217903, 0.037218375, 0.037225514, 0.037225986, 0.037236042, 0.037236514, 0.037243875, 0.037244347, 0.037250139, 0.037250611, 0.037260069, 0.037260542, 0.037266208, 0.037266681, 0.037275569, 0.037276111, 0.037281042, 0.037281514, 0.037290417, 0.037290889, 0.037300042, 0.037300514, 0.037309111, 0.037309583, 0.037317264, 0.037317736, 0.037326861, 0.037327333, 0.037337208, 0.037337681, 0.037348153, 0.037348625, 0.0373565, 0.037356972, 0.037367347, 0.037367819, 0.037374569, 0.037375042, 0.037383333, 0.037383806, 0.037390417, 0.037390889, 0.037401194, 0.037401667, 0.037409722, 0.037410194, 0.037414833, 0.037415306, 0.03741975, 0.037420222, 0.037426417, 0.037426889, 0.037435083, 0.037435556, 0.037446361, 0.037446833, 0.037456181, 0.037456653, 0.037463889, 0.037464361, 0.037472556, 0.037473028, 0.037481431, 0.037481903, 0.037489264, 0.037489736, 0.037499903, 0.037500375, 0.037507944, 0.037508417, 0.037514097, 0.037514569, 0.037520792, 0.037521264, 0.037526111, 0.037526583, 0.037537278, 0.03753775, 0.037544889, 0.037545361], 'source_diff': [0, 4.7300000000083386e-07, 8.819000000000188e-06, 4.720000000013602e-07, 7.139000000003226e-06, 4.7199999999442133e-07, 7.57000000000535e-06, 4.720000000013602e-07, 8.292000000000022e-06, 4.7199999999442133e-07, 9.556000000000842e-06, 4.720000000013602e-07, 6.208000000000602e-06, 4.720000000013602e-07, 9.444999999996817e-06, 4.720000000013602e-07, 4.319000000002626e-06, 4.7299999999389497e-07, 1.0791000000003048e-05, 4.7300000000083386e-07, 5.596999999996077e-06, 4.720000000013602e-07, 7.139000000003226e-06, 4.720000000013602e-07, 1.0055999999994403e-05, 4.720000000013602e-07, 7.361000000004336e-06, 4.7199999999442133e-07, 5.79200000000446e-06, 4.720000000013602e-07, 9.457999999996913e-06, 4.7300000000083386e-07, 5.666000000001392e-06, 4.7300000000083386e-07, 8.887999999998564e-06, 5.419999999992098e-07, 4.930999999999686e-06, 4.720000000013602e-07, 8.902999999997607e-06, 4.720000000013602e-07, 9.152999999997857e-06, 4.720000000013602e-07, 8.596999999999078e-06, 4.720000000013602e-07, 7.681000000002436e-06, 4.7199999999442133e-07, 9.125000000005656e-06, 4.7199999999442133e-07, 9.874999999999468e-06, 4.7300000000083386e-07, 1.0472000000004422e-05, 4.720000000013602e-07, 7.874999999997467e-06, 4.720000000013602e-07, 1.0374999999999968e-05, 4.7199999999442133e-07, 6.750000000006751e-06, 4.7299999999389497e-07, 8.291000000000548e-06, 4.7300000000083386e-07, 6.611000000003586e-06, 4.7199999999442133e-07, 1.0305000000002118e-05, 4.7300000000083386e-07, 8.054999999999868e-06, 4.720000000013602e-07, 4.639000000000726e-06, 4.7300000000083386e-07, 4.443999999999282e-06, 4.720000000013602e-07, 6.194999999993567e-06, 4.720000000013602e-07, 8.194000000003032e-06, 4.7300000000083386e-07, 1.080499999999568e-05, 4.720000000013602e-07, 9.347999999999301e-06, 4.720000000013602e-07, 7.236000000000742e-06, 4.720000000013602e-07, 8.194999999995567e-06, 4.720000000013602e-07, 8.403000000004046e-06, 4.7199999999442133e-07, 7.361000000004336e-06, 4.720000000013602e-07, 1.0166999999998427e-05, 4.720000000013602e-07, 7.568999999998938e-06, 4.7300000000083386e-07, 5.680000000000962e-06, 4.7199999999442133e-07, 6.2229999999996455e-06, 4.720000000013602e-07, 4.847000000002266e-06, 4.720000000013602e-07, 1.0694999999998067e-05, 4.720000000013602e-07, 7.138999999996287e-06, 4.720000000013602e-07], 'sourceeventdiff': [0, 4.7300000000083386e-07, 8.819000000000188e-06, 4.720000000013602e-07, 7.139000000003226e-06, 4.7199999999442133e-07, 7.57000000000535e-06, 4.720000000013602e-07, 8.292000000000022e-06, 4.7199999999442133e-07, 9.556000000000842e-06, 4.720000000013602e-07, 6.208000000000602e-06, 4.720000000013602e-07, 9.444999999996817e-06, 4.720000000013602e-07, 4.319000000002626e-06, 4.7299999999389497e-07, 1.0791000000003048e-05, 4.7300000000083386e-07, 5.596999999996077e-06, 4.720000000013602e-07, 7.139000000003226e-06, 4.720000000013602e-07, 1.0055999999994403e-05, 4.720000000013602e-07, 7.361000000004336e-06, 4.7199999999442133e-07, 5.79200000000446e-06, 4.720000000013602e-07, 9.457999999996913e-06, 4.7300000000083386e-07, 5.666000000001392e-06, 4.7300000000083386e-07, 8.887999999998564e-06, 5.419999999992098e-07, 4.930999999999686e-06, 4.720000000013602e-07, 8.902999999997607e-06, 4.720000000013602e-07, 9.152999999997857e-06, 4.720000000013602e-07, 8.596999999999078e-06, 4.720000000013602e-07, 7.681000000002436e-06, 4.7199999999442133e-07, 9.125000000005656e-06, 4.7199999999442133e-07, 9.874999999999468e-06, 4.7300000000083386e-07, 1.0472000000004422e-05, 4.720000000013602e-07, 7.874999999997467e-06, 4.720000000013602e-07, 1.0374999999999968e-05, 4.7199999999442133e-07, 6.750000000006751e-06, 4.7299999999389497e-07, 8.291000000000548e-06, 4.7300000000083386e-07, 6.611000000003586e-06, 4.7199999999442133e-07, 1.0305000000002118e-05, 4.7300000000083386e-07, 8.054999999999868e-06, 4.720000000013602e-07, 4.639000000000726e-06, 4.7300000000083386e-07, 4.443999999999282e-06, 4.720000000013602e-07, 6.194999999993567e-06, 4.720000000013602e-07, 8.194000000003032e-06, 4.7300000000083386e-07, 1.080499999999568e-05, 4.720000000013602e-07, 9.347999999999301e-06, 4.720000000013602e-07, 7.236000000000742e-06, 4.720000000013602e-07, 8.194999999995567e-06, 4.720000000013602e-07, 8.403000000004046e-06, 4.7199999999442133e-07, 7.361000000004336e-06, 4.720000000013602e-07, 1.0166999999998427e-05, 4.720000000013602e-07, 7.568999999998938e-06, 4.7300000000083386e-07, 5.680000000000962e-06, 4.7199999999442133e-07, 6.2229999999996455e-06, 4.720000000013602e-07, 4.847000000002266e-06, 4.720000000013602e-07, 1.0694999999998067e-05, 4.720000000013602e-07, 7.138999999996287e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201110 08:32:36.741" endtime="20201110 08:32:36.750"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:36.731" endtime="20201110 08:32:36.751"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:36.762" level="INFO">${RESULT} = [{'time': 0.037135917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037145208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:32:36.753" endtime="20201110 08:32:36.762"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:36.793" level="INFO">${GPIO_OVERHEAD} = {'time': [0.037135917, 0.037145208, 0.037152819, 0.037160861, 0.037169625, 0.037179653, 0.037186333, 0.03719625, 0.037201042, 0.037212306, 0.037218375, 0.037225986, 0.037236514, 0.037244347, 0.0372506...</msg>
<status status="PASS" starttime="20201110 08:32:36.764" endtime="20201110 08:32:36.793"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:36.807" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:32:36.802" endtime="20201110 08:32:36.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:36.814" level="INFO">VALUE: [4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7299999999389497e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201110 08:32:36.810" endtime="20201110 08:32:36.815"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:36.795" endtime="20201110 08:32:36.817"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:36.825" endtime="20201110 08:32:36.829"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:36.836" endtime="20201110 08:32:36.858"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:36.830" endtime="20201110 08:32:36.860"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:36.819" endtime="20201110 08:32:36.861"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:36.211" endtime="20201110 08:32:36.862"></status>
</kw>
<msg timestamp="20201110 08:32:36.862" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:36.882" endtime="20201110 08:32:36.893"></status>
</kw>
<msg timestamp="20201110 08:32:36.894" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:36.879" endtime="20201110 08:32:36.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:36.900" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:36.896" endtime="20201110 08:32:36.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:36.902" endtime="20201110 08:32:36.906"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:36.872" endtime="20201110 08:32:36.907"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:36.867" endtime="20201110 08:32:36.909"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:36.925" endtime="20201110 08:32:37.260"></status>
</kw>
<msg timestamp="20201110 08:32:37.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036058819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036059292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:36.922" endtime="20201110 08:32:37.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:37.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036058819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036059292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:37.269" endtime="20201110 08:32:37.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:37.289" endtime="20201110 08:32:37.293"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:36.915" endtime="20201110 08:32:37.294"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:36.910" endtime="20201110 08:32:37.296"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:37.305" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:32:37.303" endtime="20201110 08:32:37.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:37.316" level="INFO">VALUE: [{'time': 0.036058819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036059292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036066944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.651999999996884e-06, 'source_diff': 7.651999999996884e-06}, {'time': 0.036067417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036073208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.791000000004987e-06, 'source_diff': 5.791000000004987e-06}, {'time': 0.036073681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036084375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0693999999998594e-05, 'source_diff': 1.0693999999998594e-05}, {'time': 0.036084847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036091056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2090000000000756e-06, 'source_diff': 6.2090000000000756e-06}, {'time': 0.036091528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036101194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.666000000005393e-06, 'source_diff': 9.666000000005393e-06}, {'time': 0.036101667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.036112042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0374999999999968e-05, 'source_diff': 1.0374999999999968e-05}, {'time': 0.036112514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036120083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.568999999998938e-06, 'source_diff': 7.568999999998938e-06}, {'time': 0.036120556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036131347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0791000000003048e-05, 'source_diff': 1.0791000000003048e-05}, {'time': 0.036131819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036137639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.819999999996661e-06, 'source_diff': 5.819999999996661e-06}, {'time': 0.036138111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036145861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.750000000000812e-06, 'source_diff': 7.750000000000812e-06}, {'time': 0.036146333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036151389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.055999999996341e-06, 'source_diff': 5.055999999996341e-06}, {'time': 0.036151861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036162764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0902999999999607e-05, 'source_diff': 1.0902999999999607e-05}, {'time': 0.036163236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036171528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.292000000000022e-06, 'source_diff': 8.292000000000022e-06}, {'time': 0.036172, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036177167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.167000000000366e-06, 'source_diff': 5.167000000000366e-06}, {'time': 0.036177639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036186458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.819000000000188e-06, 'source_diff': 8.819000000000188e-06}, {'time': 0.036186931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036192194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.262999999998408e-06, 'source_diff': 5.262999999998408e-06}, {'time': 0.036192667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036202014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.036202486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036213292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0806000000002092e-05, 'source_diff': 1.0806000000002092e-05}, {'time': 0.036213764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03622225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.485999999995053e-06, 'source_diff': 8.485999999995053e-06}, {'time': 0.036222722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036228222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.499999999998562e-06, 'source_diff': 5.499999999998562e-06}, {'time': 0.036228694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036239056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0361999999999871e-05, 'source_diff': 1.0361999999999871e-05}, {'time': 0.036239528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036248264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.736000000002242e-06, 'source_diff': 8.736000000002242e-06}, {'time': 0.036248736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036259028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0292000000002022e-05, 'source_diff': 1.0292000000002022e-05}, {'time': 0.0362595, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036268833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.333000000000258e-06, 'source_diff': 9.333000000000258e-06}, {'time': 0.036269306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036276653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.3469999999978275e-06, 'source_diff': 7.3469999999978275e-06}, {'time': 0.036277125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036282069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.943999999999782e-06, 'source_diff': 4.943999999999782e-06}, {'time': 0.036282542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036287083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.540999999996798e-06, 'source_diff': 4.540999999996798e-06}, {'time': 0.036287556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036294597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.040999999999298e-06, 'source_diff': 7.040999999999298e-06}, {'time': 0.036295069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036301597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.5279999999987015e-06, 'source_diff': 6.5279999999987015e-06}, {'time': 0.036302069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036308375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.305999999997591e-06, 'source_diff': 6.305999999997591e-06}, {'time': 0.036308847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036319444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0597000000001078e-05, 'source_diff': 1.0597000000001078e-05}, {'time': 0.036319917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036328569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.651999999997884e-06, 'source_diff': 8.651999999997884e-06}, {'time': 0.036329042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036333444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.402000000000572e-06, 'source_diff': 4.402000000000572e-06}, {'time': 0.036333917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036339375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.457999999999852e-06, 'source_diff': 5.457999999999852e-06}, {'time': 0.036339847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036345431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.583999999995981e-06, 'source_diff': 5.583999999995981e-06}, {'time': 0.036345903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036355764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.860999999999898e-06, 'source_diff': 9.860999999999898e-06}, {'time': 0.036356236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036366528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0292000000002022e-05, 'source_diff': 1.0292000000002022e-05}, {'time': 0.036367, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036374583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.5830000000054465e-06, 'source_diff': 7.5830000000054465e-06}, {'time': 0.036375056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036380208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.151999999994383e-06, 'source_diff': 5.151999999994383e-06}, {'time': 0.036380681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036389583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.902000000005073e-06, 'source_diff': 8.902000000005073e-06}, {'time': 0.036390056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.036398236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.180000000003462e-06, 'source_diff': 8.180000000003462e-06}, {'time': 0.036398708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036408375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.666999999997927e-06, 'source_diff': 9.666999999997927e-06}, {'time': 0.036408847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036414208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.361000000002336e-06, 'source_diff': 5.361000000002336e-06}, {'time': 0.036414681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.036421931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.250000000000312e-06, 'source_diff': 7.250000000000312e-06}, {'time': 0.036422403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036432181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.778000000001952e-06, 'source_diff': 9.778000000001952e-06}, {'time': 0.036432653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036437903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2499999999983116e-06, 'source_diff': 5.2499999999983116e-06}, {'time': 0.036438375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036447917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.542000000001272e-06, 'source_diff': 9.542000000001272e-06}, {'time': 0.036448389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036456486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.097000000005516e-06, 'source_diff': 8.097000000005516e-06}, {'time': 0.036456958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036461611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.036462083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201110 08:32:37.307" endtime="20201110 08:32:37.319"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:37.297" endtime="20201110 08:32:37.321"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:32:37.379" level="INFO">${debug-compressed} = {'time': [0.036058819, 0.036059292, 0.036066944, 0.036067417, 0.036073208, 0.036073681, 0.036084375, 0.036084847, 0.036091056, 0.036091528, 0.036101194, 0.036101667, 0.036112042, 0.036112514, 0.036120...</msg>
<status status="PASS" starttime="20201110 08:32:37.322" endtime="20201110 08:32:37.380"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:37.391" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:32:37.388" endtime="20201110 08:32:37.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:37.407" level="INFO">VALUE: {'time': [0.036058819, 0.036059292, 0.036066944, 0.036067417, 0.036073208, 0.036073681, 0.036084375, 0.036084847, 0.036091056, 0.036091528, 0.036101194, 0.036101667, 0.036112042, 0.036112514, 0.036120083, 0.036120556, 0.036131347, 0.036131819, 0.036137639, 0.036138111, 0.036145861, 0.036146333, 0.036151389, 0.036151861, 0.036162764, 0.036163236, 0.036171528, 0.036172, 0.036177167, 0.036177639, 0.036186458, 0.036186931, 0.036192194, 0.036192667, 0.036202014, 0.036202486, 0.036213292, 0.036213764, 0.03622225, 0.036222722, 0.036228222, 0.036228694, 0.036239056, 0.036239528, 0.036248264, 0.036248736, 0.036259028, 0.0362595, 0.036268833, 0.036269306, 0.036276653, 0.036277125, 0.036282069, 0.036282542, 0.036287083, 0.036287556, 0.036294597, 0.036295069, 0.036301597, 0.036302069, 0.036308375, 0.036308847, 0.036319444, 0.036319917, 0.036328569, 0.036329042, 0.036333444, 0.036333917, 0.036339375, 0.036339847, 0.036345431, 0.036345903, 0.036355764, 0.036356236, 0.036366528, 0.036367, 0.036374583, 0.036375056, 0.036380208, 0.036380681, 0.036389583, 0.036390056, 0.036398236, 0.036398708, 0.036408375, 0.036408847, 0.036414208, 0.036414681, 0.036421931, 0.036422403, 0.036432181, 0.036432653, 0.036437903, 0.036438375, 0.036447917, 0.036448389, 0.036456486, 0.036456958, 0.036461611, 0.036462083], 'source_diff': [0, 4.7300000000083386e-07, 7.651999999996884e-06, 4.7300000000083386e-07, 5.791000000004987e-06, 4.7300000000083386e-07, 1.0693999999998594e-05, 4.720000000013602e-07, 6.2090000000000756e-06, 4.7199999999442133e-07, 9.666000000005393e-06, 4.7299999999389497e-07, 1.0374999999999968e-05, 4.720000000013602e-07, 7.568999999998938e-06, 4.7300000000083386e-07, 1.0791000000003048e-05, 4.720000000013602e-07, 5.819999999996661e-06, 4.720000000013602e-07, 7.750000000000812e-06, 4.720000000013602e-07, 5.055999999996341e-06, 4.720000000013602e-07, 1.0902999999999607e-05, 4.720000000013602e-07, 8.292000000000022e-06, 4.720000000013602e-07, 5.167000000000366e-06, 4.7199999999442133e-07, 8.819000000000188e-06, 4.7300000000083386e-07, 5.262999999998408e-06, 4.7300000000083386e-07, 9.346999999999828e-06, 4.720000000013602e-07, 1.0806000000002092e-05, 4.720000000013602e-07, 8.485999999995053e-06, 4.720000000013602e-07, 5.499999999998562e-06, 4.720000000013602e-07, 1.0361999999999871e-05, 4.720000000013602e-07, 8.736000000002242e-06, 4.7199999999442133e-07, 1.0292000000002022e-05, 4.720000000013602e-07, 9.333000000000258e-06, 4.7300000000083386e-07, 7.3469999999978275e-06, 4.720000000013602e-07, 4.943999999999782e-06, 4.7300000000083386e-07, 4.540999999996798e-06, 4.7300000000083386e-07, 7.040999999999298e-06, 4.720000000013602e-07, 6.5279999999987015e-06, 4.720000000013602e-07, 6.305999999997591e-06, 4.720000000013602e-07, 1.0597000000001078e-05, 4.7300000000083386e-07, 8.651999999997884e-06, 4.7300000000083386e-07, 4.402000000000572e-06, 4.7300000000083386e-07, 5.457999999999852e-06, 4.720000000013602e-07, 5.583999999995981e-06, 4.720000000013602e-07, 9.860999999999898e-06, 4.720000000013602e-07, 1.0292000000002022e-05, 4.7199999999442133e-07, 7.5830000000054465e-06, 4.7300000000083386e-07, 5.151999999994383e-06, 4.7300000000083386e-07, 8.902000000005073e-06, 4.7299999999389497e-07, 8.180000000003462e-06, 4.720000000013602e-07, 9.666999999997927e-06, 4.720000000013602e-07, 5.361000000002336e-06, 4.7299999999389497e-07, 7.250000000000312e-06, 4.720000000013602e-07, 9.778000000001952e-06, 4.720000000013602e-07, 5.2499999999983116e-06, 4.720000000013602e-07, 9.542000000001272e-06, 4.7199999999442133e-07, 8.097000000005516e-06, 4.7199999999442133e-07, 4.653000000000296e-06, 4.720000000013602e-07], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'diff': [0, 4.7300000000083386e-07, 7.651999999996884e-06, 4.7300000000083386e-07, 5.791000000004987e-06, 4.7300000000083386e-07, 1.0693999999998594e-05, 4.720000000013602e-07, 6.2090000000000756e-06, 4.7199999999442133e-07, 9.666000000005393e-06, 4.7299999999389497e-07, 1.0374999999999968e-05, 4.720000000013602e-07, 7.568999999998938e-06, 4.7300000000083386e-07, 1.0791000000003048e-05, 4.720000000013602e-07, 5.819999999996661e-06, 4.720000000013602e-07, 7.750000000000812e-06, 4.720000000013602e-07, 5.055999999996341e-06, 4.720000000013602e-07, 1.0902999999999607e-05, 4.720000000013602e-07, 8.292000000000022e-06, 4.720000000013602e-07, 5.167000000000366e-06, 4.7199999999442133e-07, 8.819000000000188e-06, 4.7300000000083386e-07, 5.262999999998408e-06, 4.7300000000083386e-07, 9.346999999999828e-06, 4.720000000013602e-07, 1.0806000000002092e-05, 4.720000000013602e-07, 8.485999999995053e-06, 4.720000000013602e-07, 5.499999999998562e-06, 4.720000000013602e-07, 1.0361999999999871e-05, 4.720000000013602e-07, 8.736000000002242e-06, 4.7199999999442133e-07, 1.0292000000002022e-05, 4.720000000013602e-07, 9.333000000000258e-06, 4.7300000000083386e-07, 7.3469999999978275e-06, 4.720000000013602e-07, 4.943999999999782e-06, 4.7300000000083386e-07, 4.540999999996798e-06, 4.7300000000083386e-07, 7.040999999999298e-06, 4.720000000013602e-07, 6.5279999999987015e-06, 4.720000000013602e-07, 6.305999999997591e-06, 4.720000000013602e-07, 1.0597000000001078e-05, 4.7300000000083386e-07, 8.651999999997884e-06, 4.7300000000083386e-07, 4.402000000000572e-06, 4.7300000000083386e-07, 5.457999999999852e-06, 4.720000000013602e-07, 5.583999999995981e-06, 4.720000000013602e-07, 9.860999999999898e-06, 4.720000000013602e-07, 1.0292000000002022e-05, 4.7199999999442133e-07, 7.5830000000054465e-06, 4.7300000000083386e-07, 5.151999999994383e-06, 4.7300000000083386e-07, 8.902000000005073e-06, 4.7299999999389497e-07, 8.180000000003462e-06, 4.720000000013602e-07, 9.666999999997927e-06, 4.720000000013602e-07, 5.361000000002336e-06, 4.7299999999389497e-07, 7.250000000000312e-06, 4.720000000013602e-07, 9.778000000001952e-06, 4.720000000013602e-07, 5.2499999999983116e-06, 4.720000000013602e-07, 9.542000000001272e-06, 4.7199999999442133e-07, 8.097000000005516e-06, 4.7199999999442133e-07, 4.653000000000296e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201110 08:32:37.394" endtime="20201110 08:32:37.409"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:37.381" endtime="20201110 08:32:37.411"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:37.427" level="INFO">${RESULT} = [{'time': 0.036059292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036067417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:32:37.415" endtime="20201110 08:32:37.427"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:37.458" level="INFO">${GPIO_OVERHEAD} = {'time': [0.036059292, 0.036067417, 0.036073681, 0.036084847, 0.036091528, 0.036101667, 0.036112514, 0.036120556, 0.036131819, 0.036138111, 0.036146333, 0.036151861, 0.036163236, 0.036172, 0.036177639...</msg>
<status status="PASS" starttime="20201110 08:32:37.429" endtime="20201110 08:32:37.459"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:37.469" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:32:37.467" endtime="20201110 08:32:37.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:37.474" level="INFO">VALUE: [4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201110 08:32:37.471" endtime="20201110 08:32:37.475"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:37.460" endtime="20201110 08:32:37.477"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:37.483" endtime="20201110 08:32:37.486"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:37.492" endtime="20201110 08:32:37.514"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:37.487" endtime="20201110 08:32:37.516"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:37.479" endtime="20201110 08:32:37.517"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:36.864" endtime="20201110 08:32:37.518"></status>
</kw>
<msg timestamp="20201110 08:32:37.518" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:37.539" endtime="20201110 08:32:37.552"></status>
</kw>
<msg timestamp="20201110 08:32:37.553" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:37.535" endtime="20201110 08:32:37.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:37.559" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:37.555" endtime="20201110 08:32:37.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:37.562" endtime="20201110 08:32:37.566"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:37.528" endtime="20201110 08:32:37.567"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:37.523" endtime="20201110 08:32:37.569"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:37.587" endtime="20201110 08:32:37.943"></status>
</kw>
<msg timestamp="20201110 08:32:37.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036822903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036823444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:37.583" endtime="20201110 08:32:37.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:37.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036822903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036823444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:37.953" endtime="20201110 08:32:37.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:37.973" endtime="20201110 08:32:37.977"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:37.575" endtime="20201110 08:32:37.978"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:37.570" endtime="20201110 08:32:37.980"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:37.989" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:32:37.987" endtime="20201110 08:32:37.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:38.001" level="INFO">VALUE: [{'time': 0.036822903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036823444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.036829319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.875000000002406e-06, 'source_diff': 5.875000000002406e-06}, {'time': 0.036829792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036836944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.152000000003322e-06, 'source_diff': 7.152000000003322e-06}, {'time': 0.036837417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.036846111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.694000000003532e-06, 'source_diff': 8.694000000003532e-06}, {'time': 0.036846583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036853833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.250000000000312e-06, 'source_diff': 7.250000000000312e-06}, {'time': 0.036854306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036864694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0388000000000064e-05, 'source_diff': 1.0388000000000064e-05}, {'time': 0.036865167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.036873681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.514000000001132e-06, 'source_diff': 8.514000000001132e-06}, {'time': 0.036874153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036879639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.485999999998992e-06, 'source_diff': 5.485999999998992e-06}, {'time': 0.036880111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036884556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.4449999999987555e-06, 'source_diff': 4.4449999999987555e-06}, {'time': 0.036885028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036894556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.528000000001702e-06, 'source_diff': 9.528000000001702e-06}, {'time': 0.036895028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0369, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.971999999998922e-06, 'source_diff': 4.971999999998922e-06}, {'time': 0.036900472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036909917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.445000000003756e-06, 'source_diff': 9.445000000003756e-06}, {'time': 0.036910389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036919181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.792000000000522e-06, 'source_diff': 8.792000000000522e-06}, {'time': 0.036919653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036929, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.036929472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036936208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.736000000000242e-06, 'source_diff': 6.736000000000242e-06}, {'time': 0.036936681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036943306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.625000000003156e-06, 'source_diff': 6.625000000003156e-06}, {'time': 0.036943778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036950083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.3050000000050566e-06, 'source_diff': 6.3050000000050566e-06}, {'time': 0.036950556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036958944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.387999999998064e-06, 'source_diff': 8.387999999998064e-06}, {'time': 0.036959486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036967208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.722000000001672e-06, 'source_diff': 7.722000000001672e-06}, {'time': 0.036967681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036977556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.874999999999468e-06, 'source_diff': 9.874999999999468e-06}, {'time': 0.036978028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036983486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.457999999999852e-06, 'source_diff': 5.457999999999852e-06}, {'time': 0.036983958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036992903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.945000000003256e-06, 'source_diff': 8.945000000003256e-06}, {'time': 0.036993375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036999208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8329999999967574e-06, 'source_diff': 5.8329999999967574e-06}, {'time': 0.03699975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.03700625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.499999999999562e-06, 'source_diff': 6.499999999999562e-06}, {'time': 0.037006722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037012819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.097000000003516e-06, 'source_diff': 6.097000000003516e-06}, {'time': 0.037013292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037018153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.860999999994897e-06, 'source_diff': 4.860999999994897e-06}, {'time': 0.037018625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037028167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.542000000001272e-06, 'source_diff': 9.542000000001272e-06}, {'time': 0.037028639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037036194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.554999999999368e-06, 'source_diff': 7.554999999999368e-06}, {'time': 0.037036667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037044028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.360999999997397e-06, 'source_diff': 7.360999999997397e-06}, {'time': 0.0370445, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037054056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.556000000000842e-06, 'source_diff': 9.556000000000842e-06}, {'time': 0.037054528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037060333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.804999999997618e-06, 'source_diff': 5.804999999997618e-06}, {'time': 0.037060806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.03707075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.943999999997843e-06, 'source_diff': 9.943999999997843e-06}, {'time': 0.037071222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037079014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.791999999999522e-06, 'source_diff': 7.791999999999522e-06}, {'time': 0.037079486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037085472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.037085944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037094347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.402999999997107e-06, 'source_diff': 8.402999999997107e-06}, {'time': 0.037094819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037104792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.972999999996457e-06, 'source_diff': 9.972999999996457e-06}, {'time': 0.037105264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037116083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0819000000002188e-05, 'source_diff': 1.0819000000002188e-05}, {'time': 0.037116556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037122875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.318999999997688e-06, 'source_diff': 6.318999999997688e-06}, {'time': 0.037123347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037131722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.374999999997967e-06, 'source_diff': 8.374999999997967e-06}, {'time': 0.037132194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037137042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.84800000000174e-06, 'source_diff': 4.84800000000174e-06}, {'time': 0.037137514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037142889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.374999999994967e-06, 'source_diff': 5.374999999994967e-06}, {'time': 0.037143361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037148944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.583000000003446e-06, 'source_diff': 5.583000000003446e-06}, {'time': 0.037149417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.037156569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.152000000003322e-06, 'source_diff': 7.152000000003322e-06}, {'time': 0.037157042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.957999999997413e-06, 'source_diff': 9.957999999997413e-06}, {'time': 0.037167472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037174, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.5279999999987015e-06, 'source_diff': 6.5279999999987015e-06}, {'time': 0.037174472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037184542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0070000000000912e-05, 'source_diff': 1.0070000000000912e-05}, {'time': 0.037185014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037193639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.624999999998217e-06, 'source_diff': 8.624999999998217e-06}, {'time': 0.037194111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037198986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.875000000001406e-06, 'source_diff': 4.875000000001406e-06}, {'time': 0.037199458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037207181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.723000000001146e-06, 'source_diff': 7.723000000001146e-06}, {'time': 0.037207653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037215861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.208000000002602e-06, 'source_diff': 8.208000000002602e-06}, {'time': 0.037216333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}]</msg>
<status status="PASS" starttime="20201110 08:32:37.992" endtime="20201110 08:32:38.004"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:37.981" endtime="20201110 08:32:38.006"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:32:38.071" level="INFO">${debug-compressed} = {'time': [0.036822903, 0.036823444, 0.036829319, 0.036829792, 0.036836944, 0.036837417, 0.036846111, 0.036846583, 0.036853833, 0.036854306, 0.036864694, 0.036865167, 0.036873681, 0.036874153, 0.036879...</msg>
<status status="PASS" starttime="20201110 08:32:38.007" endtime="20201110 08:32:38.072"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:38.084" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:32:38.081" endtime="20201110 08:32:38.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:38.110" level="INFO">VALUE: {'time': [0.036822903, 0.036823444, 0.036829319, 0.036829792, 0.036836944, 0.036837417, 0.036846111, 0.036846583, 0.036853833, 0.036854306, 0.036864694, 0.036865167, 0.036873681, 0.036874153, 0.036879639, 0.036880111, 0.036884556, 0.036885028, 0.036894556, 0.036895028, 0.0369, 0.036900472, 0.036909917, 0.036910389, 0.036919181, 0.036919653, 0.036929, 0.036929472, 0.036936208, 0.036936681, 0.036943306, 0.036943778, 0.036950083, 0.036950556, 0.036958944, 0.036959486, 0.036967208, 0.036967681, 0.036977556, 0.036978028, 0.036983486, 0.036983958, 0.036992903, 0.036993375, 0.036999208, 0.03699975, 0.03700625, 0.037006722, 0.037012819, 0.037013292, 0.037018153, 0.037018625, 0.037028167, 0.037028639, 0.037036194, 0.037036667, 0.037044028, 0.0370445, 0.037054056, 0.037054528, 0.037060333, 0.037060806, 0.03707075, 0.037071222, 0.037079014, 0.037079486, 0.037085472, 0.037085944, 0.037094347, 0.037094819, 0.037104792, 0.037105264, 0.037116083, 0.037116556, 0.037122875, 0.037123347, 0.037131722, 0.037132194, 0.037137042, 0.037137514, 0.037142889, 0.037143361, 0.037148944, 0.037149417, 0.037156569, 0.037157042, 0.037167, 0.037167472, 0.037174, 0.037174472, 0.037184542, 0.037185014, 0.037193639, 0.037194111, 0.037198986, 0.037199458, 0.037207181, 0.037207653, 0.037215861, 0.037216333], 'source_diff': [0, 5.409999999997361e-07, 5.875000000002406e-06, 4.7300000000083386e-07, 7.152000000003322e-06, 4.7299999999389497e-07, 8.694000000003532e-06, 4.720000000013602e-07, 7.250000000000312e-06, 4.7300000000083386e-07, 1.0388000000000064e-05, 4.7299999999389497e-07, 8.514000000001132e-06, 4.720000000013602e-07, 5.485999999998992e-06, 4.720000000013602e-07, 4.4449999999987555e-06, 4.720000000013602e-07, 9.528000000001702e-06, 4.720000000013602e-07, 4.971999999998922e-06, 4.7199999999442133e-07, 9.445000000003756e-06, 4.720000000013602e-07, 8.792000000000522e-06, 4.7199999999442133e-07, 9.346999999999828e-06, 4.720000000013602e-07, 6.736000000000242e-06, 4.7300000000083386e-07, 6.625000000003156e-06, 4.7199999999442133e-07, 6.3050000000050566e-06, 4.7300000000083386e-07, 8.387999999998064e-06, 5.419999999992098e-07, 7.722000000001672e-06, 4.7300000000083386e-07, 9.874999999999468e-06, 4.720000000013602e-07, 5.457999999999852e-06, 4.7199999999442133e-07, 8.945000000003256e-06, 4.720000000013602e-07, 5.8329999999967574e-06, 5.419999999992098e-07, 6.499999999999562e-06, 4.720000000013602e-07, 6.097000000003516e-06, 4.7300000000083386e-07, 4.860999999994897e-06, 4.720000000013602e-07, 9.542000000001272e-06, 4.720000000013602e-07, 7.554999999999368e-06, 4.7300000000083386e-07, 7.360999999997397e-06, 4.720000000013602e-07, 9.556000000000842e-06, 4.720000000013602e-07, 5.804999999997618e-06, 4.7300000000083386e-07, 9.943999999997843e-06, 4.720000000013602e-07, 7.791999999999522e-06, 4.720000000013602e-07, 5.985999999999492e-06, 4.720000000013602e-07, 8.402999999997107e-06, 4.720000000013602e-07, 9.972999999996457e-06, 4.720000000013602e-07, 1.0819000000002188e-05, 4.7300000000083386e-07, 6.318999999997688e-06, 4.720000000013602e-07, 8.374999999997967e-06, 4.720000000013602e-07, 4.84800000000174e-06, 4.720000000013602e-07, 5.374999999994967e-06, 4.720000000013602e-07, 5.583000000003446e-06, 4.7299999999389497e-07, 7.152000000003322e-06, 4.7300000000083386e-07, 9.957999999997413e-06, 4.720000000013602e-07, 6.5279999999987015e-06, 4.720000000013602e-07, 1.0070000000000912e-05, 4.720000000013602e-07, 8.624999999998217e-06, 4.720000000013602e-07, 4.875000000001406e-06, 4.7199999999442133e-07, 7.723000000001146e-06, 4.720000000013602e-07, 8.208000000002602e-06, 4.7199999999442133e-07], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'eventdiff': [0, 5.409999999997361e-07, 5.875000000002406e-06, 4.7300000000083386e-07, 7.152000000003322e-06, 4.7299999999389497e-07, 8.694000000003532e-06, 4.720000000013602e-07, 7.250000000000312e-06, 4.7300000000083386e-07, 1.0388000000000064e-05, 4.7299999999389497e-07, 8.514000000001132e-06, 4.720000000013602e-07, 5.485999999998992e-06, 4.720000000013602e-07, 4.4449999999987555e-06, 4.720000000013602e-07, 9.528000000001702e-06, 4.720000000013602e-07, 4.971999999998922e-06, 4.7199999999442133e-07, 9.445000000003756e-06, 4.720000000013602e-07, 8.792000000000522e-06, 4.7199999999442133e-07, 9.346999999999828e-06, 4.720000000013602e-07, 6.736000000000242e-06, 4.7300000000083386e-07, 6.625000000003156e-06, 4.7199999999442133e-07, 6.3050000000050566e-06, 4.7300000000083386e-07, 8.387999999998064e-06, 5.419999999992098e-07, 7.722000000001672e-06, 4.7300000000083386e-07, 9.874999999999468e-06, 4.720000000013602e-07, 5.457999999999852e-06, 4.7199999999442133e-07, 8.945000000003256e-06, 4.720000000013602e-07, 5.8329999999967574e-06, 5.419999999992098e-07, 6.499999999999562e-06, 4.720000000013602e-07, 6.097000000003516e-06, 4.7300000000083386e-07, 4.860999999994897e-06, 4.720000000013602e-07, 9.542000000001272e-06, 4.720000000013602e-07, 7.554999999999368e-06, 4.7300000000083386e-07, 7.360999999997397e-06, 4.720000000013602e-07, 9.556000000000842e-06, 4.720000000013602e-07, 5.804999999997618e-06, 4.7300000000083386e-07, 9.943999999997843e-06, 4.720000000013602e-07, 7.791999999999522e-06, 4.720000000013602e-07, 5.985999999999492e-06, 4.720000000013602e-07, 8.402999999997107e-06, 4.720000000013602e-07, 9.972999999996457e-06, 4.720000000013602e-07, 1.0819000000002188e-05, 4.7300000000083386e-07, 6.318999999997688e-06, 4.720000000013602e-07, 8.374999999997967e-06, 4.720000000013602e-07, 4.84800000000174e-06, 4.720000000013602e-07, 5.374999999994967e-06, 4.720000000013602e-07, 5.583000000003446e-06, 4.7299999999389497e-07, 7.152000000003322e-06, 4.7300000000083386e-07, 9.957999999997413e-06, 4.720000000013602e-07, 6.5279999999987015e-06, 4.720000000013602e-07, 1.0070000000000912e-05, 4.720000000013602e-07, 8.624999999998217e-06, 4.720000000013602e-07, 4.875000000001406e-06, 4.7199999999442133e-07, 7.723000000001146e-06, 4.720000000013602e-07, 8.208000000002602e-06, 4.7199999999442133e-07]}</msg>
<status status="PASS" starttime="20201110 08:32:38.088" endtime="20201110 08:32:38.112"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:38.074" endtime="20201110 08:32:38.114"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:38.125" level="INFO">${RESULT} = [{'time': 0.036823444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.036829792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:32:38.115" endtime="20201110 08:32:38.125"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:38.157" level="INFO">${GPIO_OVERHEAD} = {'time': [0.036823444, 0.036829792, 0.036837417, 0.036846583, 0.036854306, 0.036865167, 0.036874153, 0.036880111, 0.036885028, 0.036895028, 0.036900472, 0.036910389, 0.036919653, 0.036929472, 0.036936...</msg>
<status status="PASS" starttime="20201110 08:32:38.127" endtime="20201110 08:32:38.157"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:38.167" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:32:38.165" endtime="20201110 08:32:38.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:38.173" level="INFO">VALUE: [5.409999999997361e-07, 4.7300000000083386e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 5.419999999992098e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07]</msg>
<status status="PASS" starttime="20201110 08:32:38.169" endtime="20201110 08:32:38.174"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:38.159" endtime="20201110 08:32:38.175"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:38.182" endtime="20201110 08:32:38.184"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:38.190" endtime="20201110 08:32:38.212"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:38.186" endtime="20201110 08:32:38.214"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:38.177" endtime="20201110 08:32:38.215"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:37.520" endtime="20201110 08:32:38.216"></status>
</kw>
<msg timestamp="20201110 08:32:38.216" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:38.237" endtime="20201110 08:32:38.248"></status>
</kw>
<msg timestamp="20201110 08:32:38.251" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:38.234" endtime="20201110 08:32:38.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:38.265" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:38.256" endtime="20201110 08:32:38.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:38.271" endtime="20201110 08:32:38.280"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:38.225" endtime="20201110 08:32:38.284"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:38.221" endtime="20201110 08:32:38.287"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:38.324" endtime="20201110 08:32:38.684"></status>
</kw>
<msg timestamp="20201110 08:32:38.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037794639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037795111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:38.316" endtime="20201110 08:32:38.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:38.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037794639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037795111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:38.694" endtime="20201110 08:32:38.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:38.713" endtime="20201110 08:32:38.717"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:38.301" endtime="20201110 08:32:38.718"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:38.290" endtime="20201110 08:32:38.720"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:38.729" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:32:38.727" endtime="20201110 08:32:38.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:38.741" level="INFO">VALUE: [{'time': 0.037794639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037795111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037800278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.167000000000366e-06, 'source_diff': 5.167000000000366e-06}, {'time': 0.03780075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037806958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.208000000000602e-06, 'source_diff': 6.208000000000602e-06}, {'time': 0.037807431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037815611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.179999999996523e-06, 'source_diff': 8.179999999996523e-06}, {'time': 0.037816083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037821153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.07000000000285e-06, 'source_diff': 5.07000000000285e-06}, {'time': 0.037821625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037830028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.403000000004046e-06, 'source_diff': 8.403000000004046e-06}, {'time': 0.0378305, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037835861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.360999999995397e-06, 'source_diff': 5.360999999995397e-06}, {'time': 0.037836333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037840986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.037841458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037846736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.277999999997451e-06, 'source_diff': 5.277999999997451e-06}, {'time': 0.037847208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037854736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.527999999999702e-06, 'source_diff': 7.527999999999702e-06}, {'time': 0.037855208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037863819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.610999999998648e-06, 'source_diff': 8.610999999998648e-06}, {'time': 0.037864292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037869042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7499999999978115e-06, 'source_diff': 4.7499999999978115e-06}, {'time': 0.037869514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037876875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.360999999997397e-06, 'source_diff': 7.360999999997397e-06}, {'time': 0.037877347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037886264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.917000000004116e-06, 'source_diff': 8.917000000004116e-06}, {'time': 0.037886736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037895653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.917000000004116e-06, 'source_diff': 8.917000000004116e-06}, {'time': 0.037896125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037904319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.193999999996093e-06, 'source_diff': 8.193999999996093e-06}, {'time': 0.037904792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037911847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.054999999998868e-06, 'source_diff': 7.054999999998868e-06}, {'time': 0.037912319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037921764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.444999999996817e-06, 'source_diff': 9.444999999996817e-06}, {'time': 0.037922236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037932389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0152999999998857e-05, 'source_diff': 1.0152999999998857e-05}, {'time': 0.037932861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037939069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.208000000000602e-06, 'source_diff': 6.208000000000602e-06}, {'time': 0.037939542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037945778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.235999999999742e-06, 'source_diff': 6.235999999999742e-06}, {'time': 0.03794625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037956194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.943999999997843e-06, 'source_diff': 9.943999999997843e-06}, {'time': 0.037956667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037967042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0374999999999968e-05, 'source_diff': 1.0374999999999968e-05}, {'time': 0.037967514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037977903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0388999999999537e-05, 'source_diff': 1.0388999999999537e-05}, {'time': 0.037978375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037989167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0791999999995583e-05, 'source_diff': 1.0791999999995583e-05}, {'time': 0.037989639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037996806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.167000000002366e-06, 'source_diff': 7.167000000002366e-06}, {'time': 0.037997278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038002431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.153000000000796e-06, 'source_diff': 5.153000000000796e-06}, {'time': 0.038002903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038010361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.458000000001852e-06, 'source_diff': 7.458000000001852e-06}, {'time': 0.038010833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038020167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.333999999999731e-06, 'source_diff': 9.333999999999731e-06}, {'time': 0.038020639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038025181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.541999999996271e-06, 'source_diff': 4.541999999996271e-06}, {'time': 0.038025653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038034889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.236000000002742e-06, 'source_diff': 9.236000000002742e-06}, {'time': 0.038035361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038042625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.263999999999882e-06, 'source_diff': 7.263999999999882e-06}, {'time': 0.038043097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038052306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.209000000003076e-06, 'source_diff': 9.209000000003076e-06}, {'time': 0.038052778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038063375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0597000000001078e-05, 'source_diff': 1.0597000000001078e-05}, {'time': 0.038063847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038069847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.038070319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038076111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.79200000000446e-06, 'source_diff': 5.79200000000446e-06}, {'time': 0.038076583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038083528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.945000000001256e-06, 'source_diff': 6.945000000001256e-06}, {'time': 0.038084, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038094375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0374999999999968e-05, 'source_diff': 1.0374999999999968e-05}, {'time': 0.038094847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038102847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.000000000001062e-06, 'source_diff': 8.000000000001062e-06}, {'time': 0.038103319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038109514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.195000000000506e-06, 'source_diff': 6.195000000000506e-06}, {'time': 0.038109986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038120167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0181000000004936e-05, 'source_diff': 1.0181000000004936e-05}, {'time': 0.038120639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038125167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.52800000000364e-06, 'source_diff': 4.52800000000364e-06}, {'time': 0.038125639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038132069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.429999999994773e-06, 'source_diff': 6.429999999994773e-06}, {'time': 0.038132542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038140083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.540999999999798e-06, 'source_diff': 7.540999999999798e-06}, {'time': 0.038140556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038145194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.638000000001252e-06, 'source_diff': 4.638000000001252e-06}, {'time': 0.038145667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038150736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.0689999999964375e-06, 'source_diff': 5.0689999999964375e-06}, {'time': 0.038151208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038159083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.875000000004406e-06, 'source_diff': 7.875000000004406e-06}, {'time': 0.038159556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.038167861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.305000000000118e-06, 'source_diff': 8.305000000000118e-06}, {'time': 0.038168333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038173278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.9449999999992555e-06, 'source_diff': 4.9449999999992555e-06}, {'time': 0.03817375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038179667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.917000000001116e-06, 'source_diff': 5.917000000001116e-06}, {'time': 0.038180139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201110 08:32:38.732" endtime="20201110 08:32:38.744"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:38.721" endtime="20201110 08:32:38.745"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:32:38.800" level="INFO">${debug-compressed} = {'time': [0.037794639, 0.037795111, 0.037800278, 0.03780075, 0.037806958, 0.037807431, 0.037815611, 0.037816083, 0.037821153, 0.037821625, 0.037830028, 0.0378305, 0.037835861, 0.037836333, 0.037840986...</msg>
<status status="PASS" starttime="20201110 08:32:38.747" endtime="20201110 08:32:38.801"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:38.810" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:32:38.807" endtime="20201110 08:32:38.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:38.819" level="INFO">VALUE: {'time': [0.037794639, 0.037795111, 0.037800278, 0.03780075, 0.037806958, 0.037807431, 0.037815611, 0.037816083, 0.037821153, 0.037821625, 0.037830028, 0.0378305, 0.037835861, 0.037836333, 0.037840986, 0.037841458, 0.037846736, 0.037847208, 0.037854736, 0.037855208, 0.037863819, 0.037864292, 0.037869042, 0.037869514, 0.037876875, 0.037877347, 0.037886264, 0.037886736, 0.037895653, 0.037896125, 0.037904319, 0.037904792, 0.037911847, 0.037912319, 0.037921764, 0.037922236, 0.037932389, 0.037932861, 0.037939069, 0.037939542, 0.037945778, 0.03794625, 0.037956194, 0.037956667, 0.037967042, 0.037967514, 0.037977903, 0.037978375, 0.037989167, 0.037989639, 0.037996806, 0.037997278, 0.038002431, 0.038002903, 0.038010361, 0.038010833, 0.038020167, 0.038020639, 0.038025181, 0.038025653, 0.038034889, 0.038035361, 0.038042625, 0.038043097, 0.038052306, 0.038052778, 0.038063375, 0.038063847, 0.038069847, 0.038070319, 0.038076111, 0.038076583, 0.038083528, 0.038084, 0.038094375, 0.038094847, 0.038102847, 0.038103319, 0.038109514, 0.038109986, 0.038120167, 0.038120639, 0.038125167, 0.038125639, 0.038132069, 0.038132542, 0.038140083, 0.038140556, 0.038145194, 0.038145667, 0.038150736, 0.038151208, 0.038159083, 0.038159556, 0.038167861, 0.038168333, 0.038173278, 0.03817375, 0.038179667, 0.038180139], 'source_diff': [0, 4.720000000013602e-07, 5.167000000000366e-06, 4.720000000013602e-07, 6.208000000000602e-06, 4.7300000000083386e-07, 8.179999999996523e-06, 4.720000000013602e-07, 5.07000000000285e-06, 4.7199999999442133e-07, 8.403000000004046e-06, 4.720000000013602e-07, 5.360999999995397e-06, 4.720000000013602e-07, 4.653000000000296e-06, 4.720000000013602e-07, 5.277999999997451e-06, 4.720000000013602e-07, 7.527999999999702e-06, 4.720000000013602e-07, 8.610999999998648e-06, 4.7300000000083386e-07, 4.7499999999978115e-06, 4.720000000013602e-07, 7.360999999997397e-06, 4.720000000013602e-07, 8.917000000004116e-06, 4.7199999999442133e-07, 8.917000000004116e-06, 4.720000000013602e-07, 8.193999999996093e-06, 4.7300000000083386e-07, 7.054999999998868e-06, 4.720000000013602e-07, 9.444999999996817e-06, 4.720000000013602e-07, 1.0152999999998857e-05, 4.720000000013602e-07, 6.208000000000602e-06, 4.7300000000083386e-07, 6.235999999999742e-06, 4.720000000013602e-07, 9.943999999997843e-06, 4.7300000000083386e-07, 1.0374999999999968e-05, 4.720000000013602e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 1.0791999999995583e-05, 4.720000000013602e-07, 7.167000000002366e-06, 4.720000000013602e-07, 5.153000000000796e-06, 4.7199999999442133e-07, 7.458000000001852e-06, 4.720000000013602e-07, 9.333999999999731e-06, 4.720000000013602e-07, 4.541999999996271e-06, 4.720000000013602e-07, 9.236000000002742e-06, 4.7199999999442133e-07, 7.263999999999882e-06, 4.720000000013602e-07, 9.209000000003076e-06, 4.720000000013602e-07, 1.0597000000001078e-05, 4.7199999999442133e-07, 5.999999999999062e-06, 4.720000000013602e-07, 5.79200000000446e-06, 4.7199999999442133e-07, 6.945000000001256e-06, 4.720000000013602e-07, 1.0374999999999968e-05, 4.720000000013602e-07, 8.000000000001062e-06, 4.7199999999442133e-07, 6.195000000000506e-06, 4.720000000013602e-07, 1.0181000000004936e-05, 4.7199999999442133e-07, 4.52800000000364e-06, 4.720000000013602e-07, 6.429999999994773e-06, 4.7300000000083386e-07, 7.540999999999798e-06, 4.7300000000083386e-07, 4.638000000001252e-06, 4.7300000000083386e-07, 5.0689999999964375e-06, 4.720000000013602e-07, 7.875000000004406e-06, 4.7299999999389497e-07, 8.305000000000118e-06, 4.720000000013602e-07, 4.9449999999992555e-06, 4.720000000013602e-07, 5.917000000001116e-06, 4.720000000013602e-07], 'sourceeventdiff': [0, 4.720000000013602e-07, 5.167000000000366e-06, 4.720000000013602e-07, 6.208000000000602e-06, 4.7300000000083386e-07, 8.179999999996523e-06, 4.720000000013602e-07, 5.07000000000285e-06, 4.7199999999442133e-07, 8.403000000004046e-06, 4.720000000013602e-07, 5.360999999995397e-06, 4.720000000013602e-07, 4.653000000000296e-06, 4.720000000013602e-07, 5.277999999997451e-06, 4.720000000013602e-07, 7.527999999999702e-06, 4.720000000013602e-07, 8.610999999998648e-06, 4.7300000000083386e-07, 4.7499999999978115e-06, 4.720000000013602e-07, 7.360999999997397e-06, 4.720000000013602e-07, 8.917000000004116e-06, 4.7199999999442133e-07, 8.917000000004116e-06, 4.720000000013602e-07, 8.193999999996093e-06, 4.7300000000083386e-07, 7.054999999998868e-06, 4.720000000013602e-07, 9.444999999996817e-06, 4.720000000013602e-07, 1.0152999999998857e-05, 4.720000000013602e-07, 6.208000000000602e-06, 4.7300000000083386e-07, 6.235999999999742e-06, 4.720000000013602e-07, 9.943999999997843e-06, 4.7300000000083386e-07, 1.0374999999999968e-05, 4.720000000013602e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 1.0791999999995583e-05, 4.720000000013602e-07, 7.167000000002366e-06, 4.720000000013602e-07, 5.153000000000796e-06, 4.7199999999442133e-07, 7.458000000001852e-06, 4.720000000013602e-07, 9.333999999999731e-06, 4.720000000013602e-07, 4.541999999996271e-06, 4.720000000013602e-07, 9.236000000002742e-06, 4.7199999999442133e-07, 7.263999999999882e-06, 4.720000000013602e-07, 9.209000000003076e-06, 4.720000000013602e-07, 1.0597000000001078e-05, 4.7199999999442133e-07, 5.999999999999062e-06, 4.720000000013602e-07, 5.79200000000446e-06, 4.7199999999442133e-07, 6.945000000001256e-06, 4.720000000013602e-07, 1.0374999999999968e-05, 4.720000000013602e-07, 8.000000000001062e-06, 4.7199999999442133e-07, 6.195000000000506e-06, 4.720000000013602e-07, 1.0181000000004936e-05, 4.7199999999442133e-07, 4.52800000000364e-06, 4.720000000013602e-07, 6.429999999994773e-06, 4.7300000000083386e-07, 7.540999999999798e-06, 4.7300000000083386e-07, 4.638000000001252e-06, 4.7300000000083386e-07, 5.0689999999964375e-06, 4.720000000013602e-07, 7.875000000004406e-06, 4.7299999999389497e-07, 8.305000000000118e-06, 4.720000000013602e-07, 4.9449999999992555e-06, 4.720000000013602e-07, 5.917000000001116e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201110 08:32:38.812" endtime="20201110 08:32:38.821"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:38.802" endtime="20201110 08:32:38.823"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:38.833" level="INFO">${RESULT} = [{'time': 0.037795111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03780075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:32:38.824" endtime="20201110 08:32:38.834"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:38.864" level="INFO">${GPIO_OVERHEAD} = {'time': [0.037795111, 0.03780075, 0.037807431, 0.037816083, 0.037821625, 0.0378305, 0.037836333, 0.037841458, 0.037847208, 0.037855208, 0.037864292, 0.037869514, 0.037877347, 0.037886736, 0.037896125...</msg>
<status status="PASS" starttime="20201110 08:32:38.835" endtime="20201110 08:32:38.864"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:38.880" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:32:38.876" endtime="20201110 08:32:38.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:38.888" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201110 08:32:38.884" endtime="20201110 08:32:38.890"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:38.867" endtime="20201110 08:32:38.891"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:38.901" endtime="20201110 08:32:38.905"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:38.913" endtime="20201110 08:32:38.936"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:38.906" endtime="20201110 08:32:38.938"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:38.894" endtime="20201110 08:32:38.939"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:38.217" endtime="20201110 08:32:38.940"></status>
</kw>
<msg timestamp="20201110 08:32:38.940" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:38.960" endtime="20201110 08:32:38.971"></status>
</kw>
<msg timestamp="20201110 08:32:38.973" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:38.956" endtime="20201110 08:32:38.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:38.979" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:38.975" endtime="20201110 08:32:38.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:38.981" endtime="20201110 08:32:38.985"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:38.949" endtime="20201110 08:32:38.986"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:38.945" endtime="20201110 08:32:38.988"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:39.004" endtime="20201110 08:32:39.342"></status>
</kw>
<msg timestamp="20201110 08:32:39.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036311583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036312056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:39.001" endtime="20201110 08:32:39.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:39.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036311583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036312056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:39.352" endtime="20201110 08:32:39.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:39.371" endtime="20201110 08:32:39.375"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:38.994" endtime="20201110 08:32:39.376"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:38.989" endtime="20201110 08:32:39.378"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:39.387" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:32:39.385" endtime="20201110 08:32:39.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:39.399" level="INFO">VALUE: [{'time': 0.036311583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036312056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036322972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0915999999999704e-05, 'source_diff': 1.0915999999999704e-05}, {'time': 0.036323444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036330569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.124999999996717e-06, 'source_diff': 7.124999999996717e-06}, {'time': 0.036331042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036337361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.318999999997688e-06, 'source_diff': 6.318999999997688e-06}, {'time': 0.036337833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036346847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.014000000001632e-06, 'source_diff': 9.014000000001632e-06}, {'time': 0.036347319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036351861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.541999999996271e-06, 'source_diff': 4.541999999996271e-06}, {'time': 0.036352333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036361472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.138999999998287e-06, 'source_diff': 9.138999999998287e-06}, {'time': 0.036361944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036369931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.987000000000966e-06, 'source_diff': 7.987000000000966e-06}, {'time': 0.036370403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036379306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.902999999997607e-06, 'source_diff': 8.902999999997607e-06}, {'time': 0.036379778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036387861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.082999999999008e-06, 'source_diff': 8.082999999999008e-06}, {'time': 0.036388333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036394653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.319999999997161e-06, 'source_diff': 6.319999999997161e-06}, {'time': 0.036395125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036399667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.541999999996271e-06, 'source_diff': 4.541999999996271e-06}, {'time': 0.036400139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036405819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.680000000000962e-06, 'source_diff': 5.680000000000962e-06}, {'time': 0.036406292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036413028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.736000000000242e-06, 'source_diff': 6.736000000000242e-06}, {'time': 0.0364135, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036421056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.555999999998841e-06, 'source_diff': 7.555999999998841e-06}, {'time': 0.036421528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036429625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.096999999998578e-06, 'source_diff': 8.096999999998578e-06}, {'time': 0.036430097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036435042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.9449999999992555e-06, 'source_diff': 4.9449999999992555e-06}, {'time': 0.036435514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03644475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.235999999995803e-06, 'source_diff': 9.235999999995803e-06}, {'time': 0.036445222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036454583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.360999999999398e-06, 'source_diff': 9.360999999999398e-06}, {'time': 0.036455056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036460931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.875000000002406e-06, 'source_diff': 5.875000000002406e-06}, {'time': 0.036461403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036472194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.079099999999611e-05, 'source_diff': 1.079099999999611e-05}, {'time': 0.036472667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036482986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0319000000001688e-05, 'source_diff': 1.0319000000001688e-05}, {'time': 0.036483458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036491722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.263999999993943e-06, 'source_diff': 8.263999999993943e-06}, {'time': 0.036492194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036502069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.874999999999468e-06, 'source_diff': 9.874999999999468e-06}, {'time': 0.036502542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036510625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.082999999999008e-06, 'source_diff': 8.082999999999008e-06}, {'time': 0.036511097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036519681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.583999999998981e-06, 'source_diff': 8.583999999998981e-06}, {'time': 0.036520153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036530542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0388999999999537e-05, 'source_diff': 1.0388999999999537e-05}, {'time': 0.036531014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036538472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.458000000001852e-06, 'source_diff': 7.458000000001852e-06}, {'time': 0.036538944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036546931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.987000000000966e-06, 'source_diff': 7.987000000000966e-06}, {'time': 0.036547403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036552681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.277999999997451e-06, 'source_diff': 5.277999999997451e-06}, {'time': 0.036553153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036560611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.458000000001852e-06, 'source_diff': 7.458000000001852e-06}, {'time': 0.036561083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036568875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.791999999999522e-06, 'source_diff': 7.791999999999522e-06}, {'time': 0.036569347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036578653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.306000000000592e-06, 'source_diff': 9.306000000000592e-06}, {'time': 0.036579125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036583667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.54200000000321e-06, 'source_diff': 4.54200000000321e-06}, {'time': 0.036584139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036588486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.347000000001766e-06, 'source_diff': 4.347000000001766e-06}, {'time': 0.036588958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036596903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.945000000002256e-06, 'source_diff': 7.945000000002256e-06}, {'time': 0.036597375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036604097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.722000000000672e-06, 'source_diff': 6.722000000000672e-06}, {'time': 0.036604569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036611569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.999999999993123e-06, 'source_diff': 6.999999999993123e-06}, {'time': 0.036612111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000061487e-07, 'source_diff': 5.420000000061487e-07}, {'time': 0.036619042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.930999999994747e-06, 'source_diff': 6.930999999994747e-06}, {'time': 0.036619514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036628528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.014000000001632e-06, 'source_diff': 9.014000000001632e-06}, {'time': 0.036629, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036636569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.568999999998938e-06, 'source_diff': 7.568999999998938e-06}, {'time': 0.036637042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036645958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.915999999997704e-06, 'source_diff': 8.915999999997704e-06}, {'time': 0.036646431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036654, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.568999999998938e-06, 'source_diff': 7.568999999998938e-06}, {'time': 0.036654472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036662153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.681000000002436e-06, 'source_diff': 7.681000000002436e-06}, {'time': 0.036662625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036670694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.068999999999438e-06, 'source_diff': 8.068999999999438e-06}, {'time': 0.036671167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036675708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.5410000000037365e-06, 'source_diff': 4.5410000000037365e-06}, {'time': 0.036676181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036683847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.665999999996453e-06, 'source_diff': 7.665999999996453e-06}, {'time': 0.036684319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036694903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0584000000000982e-05, 'source_diff': 1.0584000000000982e-05}, {'time': 0.036695375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036703264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.888999999997037e-06, 'source_diff': 7.888999999997037e-06}, {'time': 0.036703736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036713236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.500000000002562e-06, 'source_diff': 9.500000000002562e-06}, {'time': 0.036713778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}]</msg>
<status status="PASS" starttime="20201110 08:32:39.390" endtime="20201110 08:32:39.401"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:39.379" endtime="20201110 08:32:39.403"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:32:39.461" level="INFO">${debug-compressed} = {'time': [0.036311583, 0.036312056, 0.036322972, 0.036323444, 0.036330569, 0.036331042, 0.036337361, 0.036337833, 0.036346847, 0.036347319, 0.036351861, 0.036352333, 0.036361472, 0.036361944, 0.036369...</msg>
<status status="PASS" starttime="20201110 08:32:39.405" endtime="20201110 08:32:39.461"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:39.470" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:32:39.468" endtime="20201110 08:32:39.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:39.479" level="INFO">VALUE: {'time': [0.036311583, 0.036312056, 0.036322972, 0.036323444, 0.036330569, 0.036331042, 0.036337361, 0.036337833, 0.036346847, 0.036347319, 0.036351861, 0.036352333, 0.036361472, 0.036361944, 0.036369931, 0.036370403, 0.036379306, 0.036379778, 0.036387861, 0.036388333, 0.036394653, 0.036395125, 0.036399667, 0.036400139, 0.036405819, 0.036406292, 0.036413028, 0.0364135, 0.036421056, 0.036421528, 0.036429625, 0.036430097, 0.036435042, 0.036435514, 0.03644475, 0.036445222, 0.036454583, 0.036455056, 0.036460931, 0.036461403, 0.036472194, 0.036472667, 0.036482986, 0.036483458, 0.036491722, 0.036492194, 0.036502069, 0.036502542, 0.036510625, 0.036511097, 0.036519681, 0.036520153, 0.036530542, 0.036531014, 0.036538472, 0.036538944, 0.036546931, 0.036547403, 0.036552681, 0.036553153, 0.036560611, 0.036561083, 0.036568875, 0.036569347, 0.036578653, 0.036579125, 0.036583667, 0.036584139, 0.036588486, 0.036588958, 0.036596903, 0.036597375, 0.036604097, 0.036604569, 0.036611569, 0.036612111, 0.036619042, 0.036619514, 0.036628528, 0.036629, 0.036636569, 0.036637042, 0.036645958, 0.036646431, 0.036654, 0.036654472, 0.036662153, 0.036662625, 0.036670694, 0.036671167, 0.036675708, 0.036676181, 0.036683847, 0.036684319, 0.036694903, 0.036695375, 0.036703264, 0.036703736, 0.036713236, 0.036713778], 'source_diff': [0, 4.7300000000083386e-07, 1.0915999999999704e-05, 4.720000000013602e-07, 7.124999999996717e-06, 4.7300000000083386e-07, 6.318999999997688e-06, 4.720000000013602e-07, 9.014000000001632e-06, 4.720000000013602e-07, 4.541999999996271e-06, 4.720000000013602e-07, 9.138999999998287e-06, 4.720000000013602e-07, 7.987000000000966e-06, 4.720000000013602e-07, 8.902999999997607e-06, 4.720000000013602e-07, 8.082999999999008e-06, 4.720000000013602e-07, 6.319999999997161e-06, 4.720000000013602e-07, 4.541999999996271e-06, 4.720000000013602e-07, 5.680000000000962e-06, 4.7300000000083386e-07, 6.736000000000242e-06, 4.720000000013602e-07, 7.555999999998841e-06, 4.720000000013602e-07, 8.096999999998578e-06, 4.720000000013602e-07, 4.9449999999992555e-06, 4.720000000013602e-07, 9.235999999995803e-06, 4.720000000013602e-07, 9.360999999999398e-06, 4.7300000000083386e-07, 5.875000000002406e-06, 4.720000000013602e-07, 1.079099999999611e-05, 4.7300000000083386e-07, 1.0319000000001688e-05, 4.720000000013602e-07, 8.263999999993943e-06, 4.720000000013602e-07, 9.874999999999468e-06, 4.7300000000083386e-07, 8.082999999999008e-06, 4.720000000013602e-07, 8.583999999998981e-06, 4.720000000013602e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 7.458000000001852e-06, 4.7199999999442133e-07, 7.987000000000966e-06, 4.720000000013602e-07, 5.277999999997451e-06, 4.720000000013602e-07, 7.458000000001852e-06, 4.720000000013602e-07, 7.791999999999522e-06, 4.720000000013602e-07, 9.306000000000592e-06, 4.7199999999442133e-07, 4.54200000000321e-06, 4.720000000013602e-07, 4.347000000001766e-06, 4.7199999999442133e-07, 7.945000000002256e-06, 4.720000000013602e-07, 6.722000000000672e-06, 4.720000000013602e-07, 6.999999999993123e-06, 5.420000000061487e-07, 6.930999999994747e-06, 4.720000000013602e-07, 9.014000000001632e-06, 4.720000000013602e-07, 7.568999999998938e-06, 4.7300000000083386e-07, 8.915999999997704e-06, 4.7300000000083386e-07, 7.568999999998938e-06, 4.720000000013602e-07, 7.681000000002436e-06, 4.7199999999442133e-07, 8.068999999999438e-06, 4.7300000000083386e-07, 4.5410000000037365e-06, 4.7300000000083386e-07, 7.665999999996453e-06, 4.720000000013602e-07, 1.0584000000000982e-05, 4.720000000013602e-07, 7.888999999997037e-06, 4.720000000013602e-07, 9.500000000002562e-06, 5.419999999992098e-07], 'sourceeventdiff': [0, 4.7300000000083386e-07, 1.0915999999999704e-05, 4.720000000013602e-07, 7.124999999996717e-06, 4.7300000000083386e-07, 6.318999999997688e-06, 4.720000000013602e-07, 9.014000000001632e-06, 4.720000000013602e-07, 4.541999999996271e-06, 4.720000000013602e-07, 9.138999999998287e-06, 4.720000000013602e-07, 7.987000000000966e-06, 4.720000000013602e-07, 8.902999999997607e-06, 4.720000000013602e-07, 8.082999999999008e-06, 4.720000000013602e-07, 6.319999999997161e-06, 4.720000000013602e-07, 4.541999999996271e-06, 4.720000000013602e-07, 5.680000000000962e-06, 4.7300000000083386e-07, 6.736000000000242e-06, 4.720000000013602e-07, 7.555999999998841e-06, 4.720000000013602e-07, 8.096999999998578e-06, 4.720000000013602e-07, 4.9449999999992555e-06, 4.720000000013602e-07, 9.235999999995803e-06, 4.720000000013602e-07, 9.360999999999398e-06, 4.7300000000083386e-07, 5.875000000002406e-06, 4.720000000013602e-07, 1.079099999999611e-05, 4.7300000000083386e-07, 1.0319000000001688e-05, 4.720000000013602e-07, 8.263999999993943e-06, 4.720000000013602e-07, 9.874999999999468e-06, 4.7300000000083386e-07, 8.082999999999008e-06, 4.720000000013602e-07, 8.583999999998981e-06, 4.720000000013602e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 7.458000000001852e-06, 4.7199999999442133e-07, 7.987000000000966e-06, 4.720000000013602e-07, 5.277999999997451e-06, 4.720000000013602e-07, 7.458000000001852e-06, 4.720000000013602e-07, 7.791999999999522e-06, 4.720000000013602e-07, 9.306000000000592e-06, 4.7199999999442133e-07, 4.54200000000321e-06, 4.720000000013602e-07, 4.347000000001766e-06, 4.7199999999442133e-07, 7.945000000002256e-06, 4.720000000013602e-07, 6.722000000000672e-06, 4.720000000013602e-07, 6.999999999993123e-06, 5.420000000061487e-07, 6.930999999994747e-06, 4.720000000013602e-07, 9.014000000001632e-06, 4.720000000013602e-07, 7.568999999998938e-06, 4.7300000000083386e-07, 8.915999999997704e-06, 4.7300000000083386e-07, 7.568999999998938e-06, 4.720000000013602e-07, 7.681000000002436e-06, 4.7199999999442133e-07, 8.068999999999438e-06, 4.7300000000083386e-07, 4.5410000000037365e-06, 4.7300000000083386e-07, 7.665999999996453e-06, 4.720000000013602e-07, 1.0584000000000982e-05, 4.720000000013602e-07, 7.888999999997037e-06, 4.720000000013602e-07, 9.500000000002562e-06, 5.419999999992098e-07]}</msg>
<status status="PASS" starttime="20201110 08:32:39.472" endtime="20201110 08:32:39.481"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:39.462" endtime="20201110 08:32:39.483"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:39.493" level="INFO">${RESULT} = [{'time': 0.036312056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036323444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:32:39.484" endtime="20201110 08:32:39.494"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:39.524" level="INFO">${GPIO_OVERHEAD} = {'time': [0.036312056, 0.036323444, 0.036331042, 0.036337833, 0.036347319, 0.036352333, 0.036361944, 0.036370403, 0.036379778, 0.036388333, 0.036395125, 0.036400139, 0.036406292, 0.0364135, 0.03642152...</msg>
<status status="PASS" starttime="20201110 08:32:39.495" endtime="20201110 08:32:39.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:39.534" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:32:39.532" endtime="20201110 08:32:39.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:39.539" level="INFO">VALUE: [4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.420000000061487e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07]</msg>
<status status="PASS" starttime="20201110 08:32:39.536" endtime="20201110 08:32:39.540"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:39.525" endtime="20201110 08:32:39.541"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:39.548" endtime="20201110 08:32:39.550"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:39.556" endtime="20201110 08:32:39.578"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:39.552" endtime="20201110 08:32:39.579"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:39.543" endtime="20201110 08:32:39.581"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:38.941" endtime="20201110 08:32:39.581"></status>
</kw>
<msg timestamp="20201110 08:32:39.582" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:39.601" endtime="20201110 08:32:39.613"></status>
</kw>
<msg timestamp="20201110 08:32:39.614" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:39.598" endtime="20201110 08:32:39.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:39.620" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:39.616" endtime="20201110 08:32:39.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:39.622" endtime="20201110 08:32:39.626"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:39.591" endtime="20201110 08:32:39.628"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:39.586" endtime="20201110 08:32:39.629"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:39.646" endtime="20201110 08:32:39.998"></status>
</kw>
<msg timestamp="20201110 08:32:40.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035763764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035764236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:39.643" endtime="20201110 08:32:40.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:40.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035763764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035764236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:40.007" endtime="20201110 08:32:40.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:40.034" endtime="20201110 08:32:40.038"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:39.635" endtime="20201110 08:32:40.040"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:39.630" endtime="20201110 08:32:40.041"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:40.050" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:32:40.048" endtime="20201110 08:32:40.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:40.062" level="INFO">VALUE: [{'time': 0.035763764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035764236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035771056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8200000000046e-06, 'source_diff': 6.8200000000046e-06}, {'time': 0.035771528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035778986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.458000000001852e-06, 'source_diff': 7.458000000001852e-06}, {'time': 0.035779458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035790347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0889000000000038e-05, 'source_diff': 1.0889000000000038e-05}, {'time': 0.035790819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035797556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.7369999999997154e-06, 'source_diff': 6.7369999999997154e-06}, {'time': 0.035798028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035804861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8329999999977575e-06, 'source_diff': 6.8329999999977575e-06}, {'time': 0.035805333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035809972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.035810444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035818847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.403000000004046e-06, 'source_diff': 8.403000000004046e-06}, {'time': 0.035819319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035830014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0694999999998067e-05, 'source_diff': 1.0694999999998067e-05}, {'time': 0.035830486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035839389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.902999999997607e-06, 'source_diff': 8.902999999997607e-06}, {'time': 0.035839861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035847319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.458000000001852e-06, 'source_diff': 7.458000000001852e-06}, {'time': 0.035847792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035856917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.124999999998717e-06, 'source_diff': 9.124999999998717e-06}, {'time': 0.035857389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035863806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.416999999994677e-06, 'source_diff': 6.416999999994677e-06}, {'time': 0.035864278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035875069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0791000000003048e-05, 'source_diff': 1.0791000000003048e-05}, {'time': 0.035875542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035881111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.5689999999969375e-06, 'source_diff': 5.5689999999969375e-06}, {'time': 0.035881583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035886542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.9589999999988255e-06, 'source_diff': 4.9589999999988255e-06}, {'time': 0.035887014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035892181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.167000000000366e-06, 'source_diff': 5.167000000000366e-06}, {'time': 0.035892653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035898167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.51400000000507e-06, 'source_diff': 5.51400000000507e-06}, {'time': 0.035898639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0359045, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999995897e-06, 'source_diff': 5.860999999995897e-06}, {'time': 0.035904972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035911278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.305999999997591e-06, 'source_diff': 6.305999999997591e-06}, {'time': 0.03591175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035918889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.139000000003226e-06, 'source_diff': 7.139000000003226e-06}, {'time': 0.035919361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035929736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0374999999999968e-05, 'source_diff': 1.0374999999999968e-05}, {'time': 0.035930208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035934847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.035935319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035942361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0419999999987715e-06, 'source_diff': 7.0419999999987715e-06}, {'time': 0.035942833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035953, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0166999999998427e-05, 'source_diff': 1.0166999999998427e-05}, {'time': 0.035953472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035962389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.916999999997177e-06, 'source_diff': 8.916999999997177e-06}, {'time': 0.035962861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035972208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.035972681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035979139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.458000000000852e-06, 'source_diff': 6.458000000000852e-06}, {'time': 0.035979611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035984222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.611000000001586e-06, 'source_diff': 4.611000000001586e-06}, {'time': 0.035984694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035995264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0570000000001412e-05, 'source_diff': 1.0570000000001412e-05}, {'time': 0.035995736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036006097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0361000000000398e-05, 'source_diff': 1.0361000000000398e-05}, {'time': 0.036006569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036014806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.237000000001216e-06, 'source_diff': 8.237000000001216e-06}, {'time': 0.036015278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036021333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0550000000048065e-06, 'source_diff': 6.0550000000048065e-06}, {'time': 0.036021806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036027181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.374999999994967e-06, 'source_diff': 5.374999999994967e-06}, {'time': 0.036027653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036032903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2499999999983116e-06, 'source_diff': 5.2499999999983116e-06}, {'time': 0.036033375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036041569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.194000000003032e-06, 'source_diff': 8.194000000003032e-06}, {'time': 0.036042042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036052236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0193999999998093e-05, 'source_diff': 1.0193999999998093e-05}, {'time': 0.036052708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036057861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.152999999993857e-06, 'source_diff': 5.152999999993857e-06}, {'time': 0.036058333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03606775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.417000000004616e-06, 'source_diff': 9.417000000004616e-06}, {'time': 0.036068222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036078597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0374999999999968e-05, 'source_diff': 1.0374999999999968e-05}, {'time': 0.036079069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036088833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.764000000002382e-06, 'source_diff': 9.764000000002382e-06}, {'time': 0.036089306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036097486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.179999999996523e-06, 'source_diff': 8.179999999996523e-06}, {'time': 0.036097958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036107, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.042000000000772e-06, 'source_diff': 9.042000000000772e-06}, {'time': 0.036107472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03611325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7779999999979514e-06, 'source_diff': 5.7779999999979514e-06}, {'time': 0.036113722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036121389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.666999999995927e-06, 'source_diff': 7.666999999995927e-06}, {'time': 0.036121861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036132444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0583000000001508e-05, 'source_diff': 1.0583000000001508e-05}, {'time': 0.036132917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036139875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.958000000001352e-06, 'source_diff': 6.958000000001352e-06}, {'time': 0.036140347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036148931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.583999999998981e-06, 'source_diff': 8.583999999998981e-06}, {'time': 0.036149403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036154153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.75000000000475e-06, 'source_diff': 4.75000000000475e-06}, {'time': 0.036154625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036165083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0457999999997913e-05, 'source_diff': 1.0457999999997913e-05}, {'time': 0.036165556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}]</msg>
<status status="PASS" starttime="20201110 08:32:40.053" endtime="20201110 08:32:40.064"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:40.042" endtime="20201110 08:32:40.066"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:32:40.121" level="INFO">${debug-compressed} = {'time': [0.035763764, 0.035764236, 0.035771056, 0.035771528, 0.035778986, 0.035779458, 0.035790347, 0.035790819, 0.035797556, 0.035798028, 0.035804861, 0.035805333, 0.035809972, 0.035810444, 0.035818...</msg>
<status status="PASS" starttime="20201110 08:32:40.068" endtime="20201110 08:32:40.122"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:40.130" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:32:40.128" endtime="20201110 08:32:40.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:40.139" level="INFO">VALUE: {'time': [0.035763764, 0.035764236, 0.035771056, 0.035771528, 0.035778986, 0.035779458, 0.035790347, 0.035790819, 0.035797556, 0.035798028, 0.035804861, 0.035805333, 0.035809972, 0.035810444, 0.035818847, 0.035819319, 0.035830014, 0.035830486, 0.035839389, 0.035839861, 0.035847319, 0.035847792, 0.035856917, 0.035857389, 0.035863806, 0.035864278, 0.035875069, 0.035875542, 0.035881111, 0.035881583, 0.035886542, 0.035887014, 0.035892181, 0.035892653, 0.035898167, 0.035898639, 0.0359045, 0.035904972, 0.035911278, 0.03591175, 0.035918889, 0.035919361, 0.035929736, 0.035930208, 0.035934847, 0.035935319, 0.035942361, 0.035942833, 0.035953, 0.035953472, 0.035962389, 0.035962861, 0.035972208, 0.035972681, 0.035979139, 0.035979611, 0.035984222, 0.035984694, 0.035995264, 0.035995736, 0.036006097, 0.036006569, 0.036014806, 0.036015278, 0.036021333, 0.036021806, 0.036027181, 0.036027653, 0.036032903, 0.036033375, 0.036041569, 0.036042042, 0.036052236, 0.036052708, 0.036057861, 0.036058333, 0.03606775, 0.036068222, 0.036078597, 0.036079069, 0.036088833, 0.036089306, 0.036097486, 0.036097958, 0.036107, 0.036107472, 0.03611325, 0.036113722, 0.036121389, 0.036121861, 0.036132444, 0.036132917, 0.036139875, 0.036140347, 0.036148931, 0.036149403, 0.036154153, 0.036154625, 0.036165083, 0.036165556], 'source_diff': [0, 4.7199999999442133e-07, 6.8200000000046e-06, 4.7199999999442133e-07, 7.458000000001852e-06, 4.720000000013602e-07, 1.0889000000000038e-05, 4.720000000013602e-07, 6.7369999999997154e-06, 4.720000000013602e-07, 6.8329999999977575e-06, 4.720000000013602e-07, 4.639000000000726e-06, 4.7199999999442133e-07, 8.403000000004046e-06, 4.720000000013602e-07, 1.0694999999998067e-05, 4.720000000013602e-07, 8.902999999997607e-06, 4.720000000013602e-07, 7.458000000001852e-06, 4.7300000000083386e-07, 9.124999999998717e-06, 4.720000000013602e-07, 6.416999999994677e-06, 4.720000000013602e-07, 1.0791000000003048e-05, 4.7300000000083386e-07, 5.5689999999969375e-06, 4.720000000013602e-07, 4.9589999999988255e-06, 4.720000000013602e-07, 5.167000000000366e-06, 4.7199999999442133e-07, 5.51400000000507e-06, 4.720000000013602e-07, 5.860999999995897e-06, 4.720000000013602e-07, 6.305999999997591e-06, 4.720000000013602e-07, 7.139000000003226e-06, 4.7199999999442133e-07, 1.0374999999999968e-05, 4.720000000013602e-07, 4.639000000000726e-06, 4.720000000013602e-07, 7.0419999999987715e-06, 4.720000000013602e-07, 1.0166999999998427e-05, 4.720000000013602e-07, 8.916999999997177e-06, 4.720000000013602e-07, 9.346999999999828e-06, 4.7300000000083386e-07, 6.458000000000852e-06, 4.720000000013602e-07, 4.611000000001586e-06, 4.7199999999442133e-07, 1.0570000000001412e-05, 4.720000000013602e-07, 1.0361000000000398e-05, 4.720000000013602e-07, 8.237000000001216e-06, 4.7199999999442133e-07, 6.0550000000048065e-06, 4.7300000000083386e-07, 5.374999999994967e-06, 4.720000000013602e-07, 5.2499999999983116e-06, 4.720000000013602e-07, 8.194000000003032e-06, 4.7300000000083386e-07, 1.0193999999998093e-05, 4.720000000013602e-07, 5.152999999993857e-06, 4.720000000013602e-07, 9.417000000004616e-06, 4.7199999999442133e-07, 1.0374999999999968e-05, 4.720000000013602e-07, 9.764000000002382e-06, 4.7300000000083386e-07, 8.179999999996523e-06, 4.720000000013602e-07, 9.042000000000772e-06, 4.720000000013602e-07, 5.7779999999979514e-06, 4.720000000013602e-07, 7.666999999995927e-06, 4.720000000013602e-07, 1.0583000000001508e-05, 4.7300000000083386e-07, 6.958000000001352e-06, 4.720000000013602e-07, 8.583999999998981e-06, 4.7199999999442133e-07, 4.75000000000475e-06, 4.720000000013602e-07, 1.0457999999997913e-05, 4.7300000000083386e-07], 'sourceevent': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'diff': [0, 4.7199999999442133e-07, 6.8200000000046e-06, 4.7199999999442133e-07, 7.458000000001852e-06, 4.720000000013602e-07, 1.0889000000000038e-05, 4.720000000013602e-07, 6.7369999999997154e-06, 4.720000000013602e-07, 6.8329999999977575e-06, 4.720000000013602e-07, 4.639000000000726e-06, 4.7199999999442133e-07, 8.403000000004046e-06, 4.720000000013602e-07, 1.0694999999998067e-05, 4.720000000013602e-07, 8.902999999997607e-06, 4.720000000013602e-07, 7.458000000001852e-06, 4.7300000000083386e-07, 9.124999999998717e-06, 4.720000000013602e-07, 6.416999999994677e-06, 4.720000000013602e-07, 1.0791000000003048e-05, 4.7300000000083386e-07, 5.5689999999969375e-06, 4.720000000013602e-07, 4.9589999999988255e-06, 4.720000000013602e-07, 5.167000000000366e-06, 4.7199999999442133e-07, 5.51400000000507e-06, 4.720000000013602e-07, 5.860999999995897e-06, 4.720000000013602e-07, 6.305999999997591e-06, 4.720000000013602e-07, 7.139000000003226e-06, 4.7199999999442133e-07, 1.0374999999999968e-05, 4.720000000013602e-07, 4.639000000000726e-06, 4.720000000013602e-07, 7.0419999999987715e-06, 4.720000000013602e-07, 1.0166999999998427e-05, 4.720000000013602e-07, 8.916999999997177e-06, 4.720000000013602e-07, 9.346999999999828e-06, 4.7300000000083386e-07, 6.458000000000852e-06, 4.720000000013602e-07, 4.611000000001586e-06, 4.7199999999442133e-07, 1.0570000000001412e-05, 4.720000000013602e-07, 1.0361000000000398e-05, 4.720000000013602e-07, 8.237000000001216e-06, 4.7199999999442133e-07, 6.0550000000048065e-06, 4.7300000000083386e-07, 5.374999999994967e-06, 4.720000000013602e-07, 5.2499999999983116e-06, 4.720000000013602e-07, 8.194000000003032e-06, 4.7300000000083386e-07, 1.0193999999998093e-05, 4.720000000013602e-07, 5.152999999993857e-06, 4.720000000013602e-07, 9.417000000004616e-06, 4.7199999999442133e-07, 1.0374999999999968e-05, 4.720000000013602e-07, 9.764000000002382e-06, 4.7300000000083386e-07, 8.179999999996523e-06, 4.720000000013602e-07, 9.042000000000772e-06, 4.720000000013602e-07, 5.7779999999979514e-06, 4.720000000013602e-07, 7.666999999995927e-06, 4.720000000013602e-07, 1.0583000000001508e-05, 4.7300000000083386e-07, 6.958000000001352e-06, 4.720000000013602e-07, 8.583999999998981e-06, 4.7199999999442133e-07, 4.75000000000475e-06, 4.720000000013602e-07, 1.0457999999997913e-05, 4.7300000000083386e-07]}</msg>
<status status="PASS" starttime="20201110 08:32:40.133" endtime="20201110 08:32:40.142"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:40.123" endtime="20201110 08:32:40.143"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:40.154" level="INFO">${RESULT} = [{'time': 0.035764236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035771528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:32:40.145" endtime="20201110 08:32:40.154"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:40.184" level="INFO">${GPIO_OVERHEAD} = {'time': [0.035764236, 0.035771528, 0.035779458, 0.035790819, 0.035798028, 0.035805333, 0.035810444, 0.035819319, 0.035830486, 0.035839861, 0.035847792, 0.035857389, 0.035864278, 0.035875542, 0.035881...</msg>
<status status="PASS" starttime="20201110 08:32:40.156" endtime="20201110 08:32:40.185"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:40.194" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:32:40.192" endtime="20201110 08:32:40.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:40.200" level="INFO">VALUE: [4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201110 08:32:40.196" endtime="20201110 08:32:40.200"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:40.186" endtime="20201110 08:32:40.202"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:40.208" endtime="20201110 08:32:40.211"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:40.217" endtime="20201110 08:32:40.238"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:40.212" endtime="20201110 08:32:40.240"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:40.204" endtime="20201110 08:32:40.242"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:39.583" endtime="20201110 08:32:40.242"></status>
</kw>
<msg timestamp="20201110 08:32:40.243" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:40.264" endtime="20201110 08:32:40.276"></status>
</kw>
<msg timestamp="20201110 08:32:40.277" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:40.261" endtime="20201110 08:32:40.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:40.284" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:40.279" endtime="20201110 08:32:40.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:40.286" endtime="20201110 08:32:40.290"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:40.252" endtime="20201110 08:32:40.291"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:40.247" endtime="20201110 08:32:40.293"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:40.309" endtime="20201110 08:32:40.649"></status>
</kw>
<msg timestamp="20201110 08:32:40.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038120028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0381205, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:32:40.305" endtime="20201110 08:32:40.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:40.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038120028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0381205, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:32:40.659" endtime="20201110 08:32:40.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:40.678" endtime="20201110 08:32:40.682"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:40.298" endtime="20201110 08:32:40.684"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:40.294" endtime="20201110 08:32:40.686"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:40.696" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:32:40.693" endtime="20201110 08:32:40.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:40.708" level="INFO">VALUE: [{'time': 0.038120028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0381205, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038124819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.318999999995687e-06, 'source_diff': 4.318999999995687e-06}, {'time': 0.038125292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038136194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0902000000000134e-05, 'source_diff': 1.0902000000000134e-05}, {'time': 0.038136667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038142667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.038143139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038152264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.124999999998717e-06, 'source_diff': 9.124999999998717e-06}, {'time': 0.038152736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038160722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.986000000001492e-06, 'source_diff': 7.986000000001492e-06}, {'time': 0.038161194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038168333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.138999999996287e-06, 'source_diff': 7.138999999996287e-06}, {'time': 0.038168806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038178792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.986000000003492e-06, 'source_diff': 9.986000000003492e-06}, {'time': 0.038179264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038189736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0472000000004422e-05, 'source_diff': 1.0472000000004422e-05}, {'time': 0.038190208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038200181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.972999999996457e-06, 'source_diff': 9.972999999996457e-06}, {'time': 0.038200653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038205819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.166000000000892e-06, 'source_diff': 5.166000000000892e-06}, {'time': 0.038206292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038211889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.596999999996077e-06, 'source_diff': 5.596999999996077e-06}, {'time': 0.038212361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038220028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.667000000002866e-06, 'source_diff': 7.667000000002866e-06}, {'time': 0.0382205, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038225875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.375000000001906e-06, 'source_diff': 5.375000000001906e-06}, {'time': 0.038226347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038235583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.235999999995803e-06, 'source_diff': 9.235999999995803e-06}, {'time': 0.038236056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038242361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.3050000000050566e-06, 'source_diff': 6.3050000000050566e-06}, {'time': 0.038242833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038252181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.34800000000624e-06, 'source_diff': 9.34800000000624e-06}, {'time': 0.038252653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038262, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.038262472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038266889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416999999999616e-06, 'source_diff': 4.416999999999616e-06}, {'time': 0.038267361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038275972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.610999999998648e-06, 'source_diff': 8.610999999998648e-06}, {'time': 0.038276444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038285403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.959000000002826e-06, 'source_diff': 8.959000000002826e-06}, {'time': 0.038285875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038291125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2500000000052505e-06, 'source_diff': 5.2500000000052505e-06}, {'time': 0.038291597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.03829675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.153000000000796e-06, 'source_diff': 5.153000000000796e-06}, {'time': 0.038297222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0383025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.27800000000439e-06, 'source_diff': 5.27800000000439e-06}, {'time': 0.038302972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038309736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.763999999999382e-06, 'source_diff': 6.763999999999382e-06}, {'time': 0.038310208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038317097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.889000000002976e-06, 'source_diff': 6.889000000002976e-06}, {'time': 0.038317569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038323625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.055999999997341e-06, 'source_diff': 6.055999999997341e-06}, {'time': 0.038324097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038328361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.263999999996881e-06, 'source_diff': 4.263999999996881e-06}, {'time': 0.038328833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038338486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.652999999998357e-06, 'source_diff': 9.652999999998357e-06}, {'time': 0.038338958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038343917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.9589999999988255e-06, 'source_diff': 4.9589999999988255e-06}, {'time': 0.038344389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038354764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0374999999999968e-05, 'source_diff': 1.0374999999999968e-05}, {'time': 0.038355236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038365, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.764000000002382e-06, 'source_diff': 9.764000000002382e-06}, {'time': 0.038365472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038376389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0916999999999177e-05, 'source_diff': 1.0916999999999177e-05}, {'time': 0.038376861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038386736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.874999999999468e-06, 'source_diff': 9.874999999999468e-06}, {'time': 0.038387208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038397792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0584000000000982e-05, 'source_diff': 1.0584000000000982e-05}, {'time': 0.038398264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038403431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.167000000000366e-06, 'source_diff': 5.167000000000366e-06}, {'time': 0.038403903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038408847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.943999999999782e-06, 'source_diff': 4.943999999999782e-06}, {'time': 0.038409319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038417528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.209000000002076e-06, 'source_diff': 8.209000000002076e-06}, {'time': 0.038418, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038422944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.943999999999782e-06, 'source_diff': 4.943999999999782e-06}, {'time': 0.038423417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038428278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.861000000001836e-06, 'source_diff': 4.861000000001836e-06}, {'time': 0.03842875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038434444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.694000000000532e-06, 'source_diff': 5.694000000000532e-06}, {'time': 0.038434917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038442486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.568999999998938e-06, 'source_diff': 7.568999999998938e-06}, {'time': 0.038442958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038453014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0056000000001342e-05, 'source_diff': 1.0056000000001342e-05}, {'time': 0.038453486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038460319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8329999999977575e-06, 'source_diff': 6.8329999999977575e-06}, {'time': 0.038460792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038465986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.194000000000032e-06, 'source_diff': 5.194000000000032e-06}, {'time': 0.038466458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038473903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.444999999994817e-06, 'source_diff': 7.444999999994817e-06}, {'time': 0.038474375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038480681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.30600000000453e-06, 'source_diff': 6.30600000000453e-06}, {'time': 0.038481153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038489764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.611000000005586e-06, 'source_diff': 8.611000000005586e-06}, {'time': 0.038490236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038498042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.80600000000603e-06, 'source_diff': 7.80600000000603e-06}, {'time': 0.038498514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038504806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.29200000000496e-06, 'source_diff': 6.29200000000496e-06}, {'time': 0.038505278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}]</msg>
<status status="PASS" starttime="20201110 08:32:40.698" endtime="20201110 08:32:40.712"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:40.687" endtime="20201110 08:32:40.713"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:32:40.769" level="INFO">${debug-compressed} = {'time': [0.038120028, 0.0381205, 0.038124819, 0.038125292, 0.038136194, 0.038136667, 0.038142667, 0.038143139, 0.038152264, 0.038152736, 0.038160722, 0.038161194, 0.038168333, 0.038168806, 0.03817879...</msg>
<status status="PASS" starttime="20201110 08:32:40.715" endtime="20201110 08:32:40.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:40.778" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:32:40.776" endtime="20201110 08:32:40.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:40.787" level="INFO">VALUE: {'time': [0.038120028, 0.0381205, 0.038124819, 0.038125292, 0.038136194, 0.038136667, 0.038142667, 0.038143139, 0.038152264, 0.038152736, 0.038160722, 0.038161194, 0.038168333, 0.038168806, 0.038178792, 0.038179264, 0.038189736, 0.038190208, 0.038200181, 0.038200653, 0.038205819, 0.038206292, 0.038211889, 0.038212361, 0.038220028, 0.0382205, 0.038225875, 0.038226347, 0.038235583, 0.038236056, 0.038242361, 0.038242833, 0.038252181, 0.038252653, 0.038262, 0.038262472, 0.038266889, 0.038267361, 0.038275972, 0.038276444, 0.038285403, 0.038285875, 0.038291125, 0.038291597, 0.03829675, 0.038297222, 0.0383025, 0.038302972, 0.038309736, 0.038310208, 0.038317097, 0.038317569, 0.038323625, 0.038324097, 0.038328361, 0.038328833, 0.038338486, 0.038338958, 0.038343917, 0.038344389, 0.038354764, 0.038355236, 0.038365, 0.038365472, 0.038376389, 0.038376861, 0.038386736, 0.038387208, 0.038397792, 0.038398264, 0.038403431, 0.038403903, 0.038408847, 0.038409319, 0.038417528, 0.038418, 0.038422944, 0.038423417, 0.038428278, 0.03842875, 0.038434444, 0.038434917, 0.038442486, 0.038442958, 0.038453014, 0.038453486, 0.038460319, 0.038460792, 0.038465986, 0.038466458, 0.038473903, 0.038474375, 0.038480681, 0.038481153, 0.038489764, 0.038490236, 0.038498042, 0.038498514, 0.038504806, 0.038505278], 'source_diff': [0, 4.720000000013602e-07, 4.318999999995687e-06, 4.7300000000083386e-07, 1.0902000000000134e-05, 4.7300000000083386e-07, 5.999999999999062e-06, 4.720000000013602e-07, 9.124999999998717e-06, 4.720000000013602e-07, 7.986000000001492e-06, 4.720000000013602e-07, 7.138999999996287e-06, 4.7300000000083386e-07, 9.986000000003492e-06, 4.7199999999442133e-07, 1.0472000000004422e-05, 4.720000000013602e-07, 9.972999999996457e-06, 4.720000000013602e-07, 5.166000000000892e-06, 4.7300000000083386e-07, 5.596999999996077e-06, 4.720000000013602e-07, 7.667000000002866e-06, 4.7199999999442133e-07, 5.375000000001906e-06, 4.720000000013602e-07, 9.235999999995803e-06, 4.7300000000083386e-07, 6.3050000000050566e-06, 4.7199999999442133e-07, 9.34800000000624e-06, 4.7199999999442133e-07, 9.346999999999828e-06, 4.720000000013602e-07, 4.416999999999616e-06, 4.720000000013602e-07, 8.610999999998648e-06, 4.720000000013602e-07, 8.959000000002826e-06, 4.7199999999442133e-07, 5.2500000000052505e-06, 4.7199999999442133e-07, 5.153000000000796e-06, 4.720000000013602e-07, 5.27800000000439e-06, 4.7199999999442133e-07, 6.763999999999382e-06, 4.720000000013602e-07, 6.889000000002976e-06, 4.720000000013602e-07, 6.055999999997341e-06, 4.720000000013602e-07, 4.263999999996881e-06, 4.720000000013602e-07, 9.652999999998357e-06, 4.720000000013602e-07, 4.9589999999988255e-06, 4.720000000013602e-07, 1.0374999999999968e-05, 4.720000000013602e-07, 9.764000000002382e-06, 4.7199999999442133e-07, 1.0916999999999177e-05, 4.720000000013602e-07, 9.874999999999468e-06, 4.720000000013602e-07, 1.0584000000000982e-05, 4.720000000013602e-07, 5.167000000000366e-06, 4.720000000013602e-07, 4.943999999999782e-06, 4.7199999999442133e-07, 8.209000000002076e-06, 4.720000000013602e-07, 4.943999999999782e-06, 4.7300000000083386e-07, 4.861000000001836e-06, 4.7199999999442133e-07, 5.694000000000532e-06, 4.7300000000083386e-07, 7.568999999998938e-06, 4.720000000013602e-07, 1.0056000000001342e-05, 4.720000000013602e-07, 6.8329999999977575e-06, 4.7300000000083386e-07, 5.194000000000032e-06, 4.720000000013602e-07, 7.444999999994817e-06, 4.720000000013602e-07, 6.30600000000453e-06, 4.7199999999442133e-07, 8.611000000005586e-06, 4.7199999999442133e-07, 7.80600000000603e-06, 4.7199999999442133e-07, 6.29200000000496e-06, 4.7199999999442133e-07], 'sourceeventdiff': [0, 4.720000000013602e-07, 4.318999999995687e-06, 4.7300000000083386e-07, 1.0902000000000134e-05, 4.7300000000083386e-07, 5.999999999999062e-06, 4.720000000013602e-07, 9.124999999998717e-06, 4.720000000013602e-07, 7.986000000001492e-06, 4.720000000013602e-07, 7.138999999996287e-06, 4.7300000000083386e-07, 9.986000000003492e-06, 4.7199999999442133e-07, 1.0472000000004422e-05, 4.720000000013602e-07, 9.972999999996457e-06, 4.720000000013602e-07, 5.166000000000892e-06, 4.7300000000083386e-07, 5.596999999996077e-06, 4.720000000013602e-07, 7.667000000002866e-06, 4.7199999999442133e-07, 5.375000000001906e-06, 4.720000000013602e-07, 9.235999999995803e-06, 4.7300000000083386e-07, 6.3050000000050566e-06, 4.7199999999442133e-07, 9.34800000000624e-06, 4.7199999999442133e-07, 9.346999999999828e-06, 4.720000000013602e-07, 4.416999999999616e-06, 4.720000000013602e-07, 8.610999999998648e-06, 4.720000000013602e-07, 8.959000000002826e-06, 4.7199999999442133e-07, 5.2500000000052505e-06, 4.7199999999442133e-07, 5.153000000000796e-06, 4.720000000013602e-07, 5.27800000000439e-06, 4.7199999999442133e-07, 6.763999999999382e-06, 4.720000000013602e-07, 6.889000000002976e-06, 4.720000000013602e-07, 6.055999999997341e-06, 4.720000000013602e-07, 4.263999999996881e-06, 4.720000000013602e-07, 9.652999999998357e-06, 4.720000000013602e-07, 4.9589999999988255e-06, 4.720000000013602e-07, 1.0374999999999968e-05, 4.720000000013602e-07, 9.764000000002382e-06, 4.7199999999442133e-07, 1.0916999999999177e-05, 4.720000000013602e-07, 9.874999999999468e-06, 4.720000000013602e-07, 1.0584000000000982e-05, 4.720000000013602e-07, 5.167000000000366e-06, 4.720000000013602e-07, 4.943999999999782e-06, 4.7199999999442133e-07, 8.209000000002076e-06, 4.720000000013602e-07, 4.943999999999782e-06, 4.7300000000083386e-07, 4.861000000001836e-06, 4.7199999999442133e-07, 5.694000000000532e-06, 4.7300000000083386e-07, 7.568999999998938e-06, 4.720000000013602e-07, 1.0056000000001342e-05, 4.720000000013602e-07, 6.8329999999977575e-06, 4.7300000000083386e-07, 5.194000000000032e-06, 4.720000000013602e-07, 7.444999999994817e-06, 4.720000000013602e-07, 6.30600000000453e-06, 4.7199999999442133e-07, 8.611000000005586e-06, 4.7199999999442133e-07, 7.80600000000603e-06, 4.7199999999442133e-07, 6.29200000000496e-06, 4.7199999999442133e-07]}</msg>
<status status="PASS" starttime="20201110 08:32:40.781" endtime="20201110 08:32:40.789"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:40.771" endtime="20201110 08:32:40.791"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:40.802" level="INFO">${RESULT} = [{'time': 0.0381205, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038125292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:32:40.793" endtime="20201110 08:32:40.802"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:40.832" level="INFO">${GPIO_OVERHEAD} = {'time': [0.0381205, 0.038125292, 0.038136667, 0.038143139, 0.038152736, 0.038161194, 0.038168806, 0.038179264, 0.038190208, 0.038200653, 0.038206292, 0.038212361, 0.0382205, 0.038226347, 0.038236056,...</msg>
<status status="PASS" starttime="20201110 08:32:40.804" endtime="20201110 08:32:40.833"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:40.844" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:32:40.840" endtime="20201110 08:32:40.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:40.849" level="INFO">VALUE: [4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7199999999442133e-07]</msg>
<status status="PASS" starttime="20201110 08:32:40.846" endtime="20201110 08:32:40.850"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:40.834" endtime="20201110 08:32:40.851"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:40.858" endtime="20201110 08:32:40.860"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:40.866" endtime="20201110 08:32:40.887"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:40.862" endtime="20201110 08:32:40.889"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:40.853" endtime="20201110 08:32:40.891"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:40.244" endtime="20201110 08:32:40.891"></status>
</kw>
<msg timestamp="20201110 08:32:40.892" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:40.911" endtime="20201110 08:32:40.923"></status>
</kw>
<msg timestamp="20201110 08:32:40.924" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:40.908" endtime="20201110 08:32:40.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:40.930" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:40.926" endtime="20201110 08:32:40.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:40.932" endtime="20201110 08:32:40.936"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:40.901" endtime="20201110 08:32:40.937"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:40.896" endtime="20201110 08:32:40.939"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:40.958" endtime="20201110 08:32:41.310"></status>
</kw>
<msg timestamp="20201110 08:32:41.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035636972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035637444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:40.953" endtime="20201110 08:32:41.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:41.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035636972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035637444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:41.320" endtime="20201110 08:32:41.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:41.339" endtime="20201110 08:32:41.343"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:40.945" endtime="20201110 08:32:41.345"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:40.940" endtime="20201110 08:32:41.346"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:41.355" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:32:41.353" endtime="20201110 08:32:41.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:41.367" level="INFO">VALUE: [{'time': 0.035636972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035637444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035642708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.26400000000482e-06, 'source_diff': 5.26400000000482e-06}, {'time': 0.035643181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035650208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.026999999999728e-06, 'source_diff': 7.026999999999728e-06}, {'time': 0.035650681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.035657333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.652000000002822e-06, 'source_diff': 6.652000000002822e-06}, {'time': 0.035657806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035665042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.236000000000742e-06, 'source_diff': 7.236000000000742e-06}, {'time': 0.035665514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035670583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.0689999999964375e-06, 'source_diff': 5.0689999999964375e-06}, {'time': 0.035671056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035679986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.929999999997273e-06, 'source_diff': 8.929999999997273e-06}, {'time': 0.035680458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03568675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.29200000000496e-06, 'source_diff': 6.29200000000496e-06}, {'time': 0.035687222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035695, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.777999999999952e-06, 'source_diff': 7.777999999999952e-06}, {'time': 0.035695472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035703458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.986000000001492e-06, 'source_diff': 7.986000000001492e-06}, {'time': 0.035703931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035714847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0915999999999704e-05, 'source_diff': 1.0915999999999704e-05}, {'time': 0.035715319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035720264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.9449999999992555e-06, 'source_diff': 4.9449999999992555e-06}, {'time': 0.035720736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035728847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.110999999998147e-06, 'source_diff': 8.110999999998147e-06}, {'time': 0.035729319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035734361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.041999999996771e-06, 'source_diff': 5.041999999996771e-06}, {'time': 0.035734833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035742625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.791999999999522e-06, 'source_diff': 7.791999999999522e-06}, {'time': 0.035743097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035747403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.305999999995591e-06, 'source_diff': 4.305999999995591e-06}, {'time': 0.035747875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035754181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.30600000000453e-06, 'source_diff': 6.30600000000453e-06}, {'time': 0.035754653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035760458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8050000000045565e-06, 'source_diff': 5.8050000000045565e-06}, {'time': 0.035760931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035767861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.929999999995273e-06, 'source_diff': 6.929999999995273e-06}, {'time': 0.035768333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035775889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.555999999998841e-06, 'source_diff': 7.555999999998841e-06}, {'time': 0.035776361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035785597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.236000000002742e-06, 'source_diff': 9.236000000002742e-06}, {'time': 0.035786069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035796236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0167000000005366e-05, 'source_diff': 1.0167000000005366e-05}, {'time': 0.035796708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035801458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7499999999978115e-06, 'source_diff': 4.7499999999978115e-06}, {'time': 0.035801931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035811708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.77699999999554e-06, 'source_diff': 9.77699999999554e-06}, {'time': 0.035812181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035820569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.387999999998064e-06, 'source_diff': 8.387999999998064e-06}, {'time': 0.035821042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035830583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.541000000001798e-06, 'source_diff': 9.541000000001798e-06}, {'time': 0.035831056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035836333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.276999999997978e-06, 'source_diff': 5.276999999997978e-06}, {'time': 0.035836806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035842694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.888000000002502e-06, 'source_diff': 5.888000000002502e-06}, {'time': 0.035843167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035848764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.596999999996077e-06, 'source_diff': 5.596999999996077e-06}, {'time': 0.035849236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035853861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.625000000001156e-06, 'source_diff': 4.625000000001156e-06}, {'time': 0.035854333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035861375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0419999999987715e-06, 'source_diff': 7.0419999999987715e-06}, {'time': 0.035861847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035872347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0499999999996623e-05, 'source_diff': 1.0499999999996623e-05}, {'time': 0.035872819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035878917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.09800000000299e-06, 'source_diff': 6.09800000000299e-06}, {'time': 0.035879389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035885069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.680000000000962e-06, 'source_diff': 5.680000000000962e-06}, {'time': 0.035885542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035894472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.929999999997273e-06, 'source_diff': 8.929999999997273e-06}, {'time': 0.035894944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035904389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.445000000003756e-06, 'source_diff': 9.445000000003756e-06}, {'time': 0.035904861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035911069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.207999999993663e-06, 'source_diff': 6.207999999993663e-06}, {'time': 0.035911542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035918167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.625000000003156e-06, 'source_diff': 6.625000000003156e-06}, {'time': 0.035918639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035924958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.318999999997688e-06, 'source_diff': 6.318999999997688e-06}, {'time': 0.035925431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035936125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0693999999998594e-05, 'source_diff': 1.0693999999998594e-05}, {'time': 0.035936597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035946347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.749999999995873e-06, 'source_diff': 9.749999999995873e-06}, {'time': 0.035946819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035955528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.709000000002576e-06, 'source_diff': 8.709000000002576e-06}, {'time': 0.035956, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035960319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.318999999995687e-06, 'source_diff': 4.318999999995687e-06}, {'time': 0.035960792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035965083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.2910000000034865e-06, 'source_diff': 4.2910000000034865e-06}, {'time': 0.035965556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035974375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.819000000000188e-06, 'source_diff': 8.819000000000188e-06}, {'time': 0.035974847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035984944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0097000000000578e-05, 'source_diff': 1.0097000000000578e-05}, {'time': 0.035985417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035995264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.847000000000328e-06, 'source_diff': 9.847000000000328e-06}, {'time': 0.035995736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036004236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.500000000001562e-06, 'source_diff': 8.500000000001562e-06}, {'time': 0.036004708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036010403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.695000000000006e-06, 'source_diff': 5.695000000000006e-06}, {'time': 0.036010875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036018847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.972000000001922e-06, 'source_diff': 7.972000000001922e-06}, {'time': 0.036019319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201110 08:32:41.358" endtime="20201110 08:32:41.369"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:41.347" endtime="20201110 08:32:41.371"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:32:41.428" level="INFO">${debug-compressed} = {'time': [0.035636972, 0.035637444, 0.035642708, 0.035643181, 0.035650208, 0.035650681, 0.035657333, 0.035657806, 0.035665042, 0.035665514, 0.035670583, 0.035671056, 0.035679986, 0.035680458, 0.035686...</msg>
<status status="PASS" starttime="20201110 08:32:41.373" endtime="20201110 08:32:41.428"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:41.437" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:32:41.435" endtime="20201110 08:32:41.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:41.446" level="INFO">VALUE: {'time': [0.035636972, 0.035637444, 0.035642708, 0.035643181, 0.035650208, 0.035650681, 0.035657333, 0.035657806, 0.035665042, 0.035665514, 0.035670583, 0.035671056, 0.035679986, 0.035680458, 0.03568675, 0.035687222, 0.035695, 0.035695472, 0.035703458, 0.035703931, 0.035714847, 0.035715319, 0.035720264, 0.035720736, 0.035728847, 0.035729319, 0.035734361, 0.035734833, 0.035742625, 0.035743097, 0.035747403, 0.035747875, 0.035754181, 0.035754653, 0.035760458, 0.035760931, 0.035767861, 0.035768333, 0.035775889, 0.035776361, 0.035785597, 0.035786069, 0.035796236, 0.035796708, 0.035801458, 0.035801931, 0.035811708, 0.035812181, 0.035820569, 0.035821042, 0.035830583, 0.035831056, 0.035836333, 0.035836806, 0.035842694, 0.035843167, 0.035848764, 0.035849236, 0.035853861, 0.035854333, 0.035861375, 0.035861847, 0.035872347, 0.035872819, 0.035878917, 0.035879389, 0.035885069, 0.035885542, 0.035894472, 0.035894944, 0.035904389, 0.035904861, 0.035911069, 0.035911542, 0.035918167, 0.035918639, 0.035924958, 0.035925431, 0.035936125, 0.035936597, 0.035946347, 0.035946819, 0.035955528, 0.035956, 0.035960319, 0.035960792, 0.035965083, 0.035965556, 0.035974375, 0.035974847, 0.035984944, 0.035985417, 0.035995264, 0.035995736, 0.036004236, 0.036004708, 0.036010403, 0.036010875, 0.036018847, 0.036019319], 'source_diff': [0, 4.7199999999442133e-07, 5.26400000000482e-06, 4.7300000000083386e-07, 7.026999999999728e-06, 4.7299999999389497e-07, 6.652000000002822e-06, 4.7300000000083386e-07, 7.236000000000742e-06, 4.720000000013602e-07, 5.0689999999964375e-06, 4.7300000000083386e-07, 8.929999999997273e-06, 4.720000000013602e-07, 6.29200000000496e-06, 4.7199999999442133e-07, 7.777999999999952e-06, 4.720000000013602e-07, 7.986000000001492e-06, 4.7300000000083386e-07, 1.0915999999999704e-05, 4.720000000013602e-07, 4.9449999999992555e-06, 4.720000000013602e-07, 8.110999999998147e-06, 4.720000000013602e-07, 5.041999999996771e-06, 4.720000000013602e-07, 7.791999999999522e-06, 4.720000000013602e-07, 4.305999999995591e-06, 4.720000000013602e-07, 6.30600000000453e-06, 4.7199999999442133e-07, 5.8050000000045565e-06, 4.7300000000083386e-07, 6.929999999995273e-06, 4.720000000013602e-07, 7.555999999998841e-06, 4.720000000013602e-07, 9.236000000002742e-06, 4.7199999999442133e-07, 1.0167000000005366e-05, 4.720000000013602e-07, 4.7499999999978115e-06, 4.7300000000083386e-07, 9.77699999999554e-06, 4.7300000000083386e-07, 8.387999999998064e-06, 4.7300000000083386e-07, 9.541000000001798e-06, 4.7300000000083386e-07, 5.276999999997978e-06, 4.7300000000083386e-07, 5.888000000002502e-06, 4.7300000000083386e-07, 5.596999999996077e-06, 4.720000000013602e-07, 4.625000000001156e-06, 4.720000000013602e-07, 7.0419999999987715e-06, 4.720000000013602e-07, 1.0499999999996623e-05, 4.720000000013602e-07, 6.09800000000299e-06, 4.7199999999442133e-07, 5.680000000000962e-06, 4.7300000000083386e-07, 8.929999999997273e-06, 4.720000000013602e-07, 9.445000000003756e-06, 4.720000000013602e-07, 6.207999999993663e-06, 4.7300000000083386e-07, 6.625000000003156e-06, 4.720000000013602e-07, 6.318999999997688e-06, 4.7300000000083386e-07, 1.0693999999998594e-05, 4.720000000013602e-07, 9.749999999995873e-06, 4.720000000013602e-07, 8.709000000002576e-06, 4.720000000013602e-07, 4.318999999995687e-06, 4.7300000000083386e-07, 4.2910000000034865e-06, 4.7300000000083386e-07, 8.819000000000188e-06, 4.7199999999442133e-07, 1.0097000000000578e-05, 4.7300000000083386e-07, 9.847000000000328e-06, 4.720000000013602e-07, 8.500000000001562e-06, 4.720000000013602e-07, 5.695000000000006e-06, 4.7199999999442133e-07, 7.972000000001922e-06, 4.720000000013602e-07], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'eventdiff': [0, 4.7199999999442133e-07, 5.26400000000482e-06, 4.7300000000083386e-07, 7.026999999999728e-06, 4.7299999999389497e-07, 6.652000000002822e-06, 4.7300000000083386e-07, 7.236000000000742e-06, 4.720000000013602e-07, 5.0689999999964375e-06, 4.7300000000083386e-07, 8.929999999997273e-06, 4.720000000013602e-07, 6.29200000000496e-06, 4.7199999999442133e-07, 7.777999999999952e-06, 4.720000000013602e-07, 7.986000000001492e-06, 4.7300000000083386e-07, 1.0915999999999704e-05, 4.720000000013602e-07, 4.9449999999992555e-06, 4.720000000013602e-07, 8.110999999998147e-06, 4.720000000013602e-07, 5.041999999996771e-06, 4.720000000013602e-07, 7.791999999999522e-06, 4.720000000013602e-07, 4.305999999995591e-06, 4.720000000013602e-07, 6.30600000000453e-06, 4.7199999999442133e-07, 5.8050000000045565e-06, 4.7300000000083386e-07, 6.929999999995273e-06, 4.720000000013602e-07, 7.555999999998841e-06, 4.720000000013602e-07, 9.236000000002742e-06, 4.7199999999442133e-07, 1.0167000000005366e-05, 4.720000000013602e-07, 4.7499999999978115e-06, 4.7300000000083386e-07, 9.77699999999554e-06, 4.7300000000083386e-07, 8.387999999998064e-06, 4.7300000000083386e-07, 9.541000000001798e-06, 4.7300000000083386e-07, 5.276999999997978e-06, 4.7300000000083386e-07, 5.888000000002502e-06, 4.7300000000083386e-07, 5.596999999996077e-06, 4.720000000013602e-07, 4.625000000001156e-06, 4.720000000013602e-07, 7.0419999999987715e-06, 4.720000000013602e-07, 1.0499999999996623e-05, 4.720000000013602e-07, 6.09800000000299e-06, 4.7199999999442133e-07, 5.680000000000962e-06, 4.7300000000083386e-07, 8.929999999997273e-06, 4.720000000013602e-07, 9.445000000003756e-06, 4.720000000013602e-07, 6.207999999993663e-06, 4.7300000000083386e-07, 6.625000000003156e-06, 4.720000000013602e-07, 6.318999999997688e-06, 4.7300000000083386e-07, 1.0693999999998594e-05, 4.720000000013602e-07, 9.749999999995873e-06, 4.720000000013602e-07, 8.709000000002576e-06, 4.720000000013602e-07, 4.318999999995687e-06, 4.7300000000083386e-07, 4.2910000000034865e-06, 4.7300000000083386e-07, 8.819000000000188e-06, 4.7199999999442133e-07, 1.0097000000000578e-05, 4.7300000000083386e-07, 9.847000000000328e-06, 4.720000000013602e-07, 8.500000000001562e-06, 4.720000000013602e-07, 5.695000000000006e-06, 4.7199999999442133e-07, 7.972000000001922e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201110 08:32:41.439" endtime="20201110 08:32:41.448"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:41.430" endtime="20201110 08:32:41.450"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:41.460" level="INFO">${RESULT} = [{'time': 0.035637444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035643181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:32:41.452" endtime="20201110 08:32:41.461"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:41.491" level="INFO">${GPIO_OVERHEAD} = {'time': [0.035637444, 0.035643181, 0.035650681, 0.035657806, 0.035665514, 0.035671056, 0.035680458, 0.035687222, 0.035695472, 0.035703931, 0.035715319, 0.035720736, 0.035729319, 0.035734833, 0.035743...</msg>
<status status="PASS" starttime="20201110 08:32:41.462" endtime="20201110 08:32:41.491"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:41.501" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:32:41.499" endtime="20201110 08:32:41.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:41.506" level="INFO">VALUE: [4.7199999999442133e-07, 4.7300000000083386e-07, 4.7299999999389497e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201110 08:32:41.503" endtime="20201110 08:32:41.507"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:41.493" endtime="20201110 08:32:41.509"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:41.515" endtime="20201110 08:32:41.517"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:41.523" endtime="20201110 08:32:41.545"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:41.519" endtime="20201110 08:32:41.547"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:41.510" endtime="20201110 08:32:41.548"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:40.893" endtime="20201110 08:32:41.549"></status>
</kw>
<msg timestamp="20201110 08:32:41.549" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:41.569" endtime="20201110 08:32:41.579"></status>
</kw>
<msg timestamp="20201110 08:32:41.581" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:41.565" endtime="20201110 08:32:41.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:41.587" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:41.583" endtime="20201110 08:32:41.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:41.589" endtime="20201110 08:32:41.593"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:41.558" endtime="20201110 08:32:41.594"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:41.554" endtime="20201110 08:32:41.596"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:41.612" endtime="20201110 08:32:41.954"></status>
</kw>
<msg timestamp="20201110 08:32:41.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035938792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035939264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:41.609" endtime="20201110 08:32:41.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:41.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035938792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035939264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:41.964" endtime="20201110 08:32:41.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:41.984" endtime="20201110 08:32:41.987"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:41.602" endtime="20201110 08:32:41.989"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:41.597" endtime="20201110 08:32:41.991"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:42.000" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:32:41.998" endtime="20201110 08:32:42.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:42.012" level="INFO">VALUE: [{'time': 0.035938792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035939264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035949236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.972000000003922e-06, 'source_diff': 9.972000000003922e-06}, {'time': 0.035949708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035958208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.500000000001562e-06, 'source_diff': 8.500000000001562e-06}, {'time': 0.035958681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035964264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.583000000003446e-06, 'source_diff': 5.583000000003446e-06}, {'time': 0.035964736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035970125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.389000000001476e-06, 'source_diff': 5.389000000001476e-06}, {'time': 0.035970597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035977319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.722000000000672e-06, 'source_diff': 6.722000000000672e-06}, {'time': 0.035977792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035984319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.526999999999228e-06, 'source_diff': 6.526999999999228e-06}, {'time': 0.035984792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035994847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0055000000001868e-05, 'source_diff': 1.0055000000001868e-05}, {'time': 0.035995319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.0360055, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0181000000004936e-05, 'source_diff': 1.0181000000004936e-05}, {'time': 0.036005972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036011139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.167000000000366e-06, 'source_diff': 5.167000000000366e-06}, {'time': 0.036011611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036018014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.403000000002046e-06, 'source_diff': 6.403000000002046e-06}, {'time': 0.036018486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036026486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.000000000001062e-06, 'source_diff': 8.000000000001062e-06}, {'time': 0.036026958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036034208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.250000000000312e-06, 'source_diff': 7.250000000000312e-06}, {'time': 0.036034681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036041167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.485999999999992e-06, 'source_diff': 6.485999999999992e-06}, {'time': 0.036041708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.036046194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.485999999997992e-06, 'source_diff': 4.485999999997992e-06}, {'time': 0.036046667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036051847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.180000000000462e-06, 'source_diff': 5.180000000000462e-06}, {'time': 0.036052319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036058625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.305999999997591e-06, 'source_diff': 6.305999999997591e-06}, {'time': 0.036059097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036068347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.250000000002312e-06, 'source_diff': 9.250000000002312e-06}, {'time': 0.036068819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036078458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.638999999998787e-06, 'source_diff': 9.638999999998787e-06}, {'time': 0.036078931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036088569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.637999999999314e-06, 'source_diff': 9.637999999999314e-06}, {'time': 0.036089042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036094625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.582999999996507e-06, 'source_diff': 5.582999999996507e-06}, {'time': 0.036095097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036101472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.375000000002906e-06, 'source_diff': 6.375000000002906e-06}, {'time': 0.036102014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036107361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.346999999995827e-06, 'source_diff': 5.346999999995827e-06}, {'time': 0.036107833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036114236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.403000000002046e-06, 'source_diff': 6.403000000002046e-06}, {'time': 0.036114708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036123153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.444999999995817e-06, 'source_diff': 8.444999999995817e-06}, {'time': 0.036123625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036130431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.805999999998091e-06, 'source_diff': 6.805999999998091e-06}, {'time': 0.036130903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036140972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0069000000001438e-05, 'source_diff': 1.0069000000001438e-05}, {'time': 0.036141444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0361465, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.055999999996341e-06, 'source_diff': 5.055999999996341e-06}, {'time': 0.036146972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036157875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0902999999999607e-05, 'source_diff': 1.0902999999999607e-05}, {'time': 0.036158347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036168458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0111000000000148e-05, 'source_diff': 1.0111000000000148e-05}, {'time': 0.036168931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036175625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.694000000001532e-06, 'source_diff': 6.694000000001532e-06}, {'time': 0.036176097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036182944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.847000000004266e-06, 'source_diff': 6.847000000004266e-06}, {'time': 0.036183417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036192944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.52699999999529e-06, 'source_diff': 9.52699999999529e-06}, {'time': 0.036193417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036197861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.443999999999282e-06, 'source_diff': 4.443999999999282e-06}, {'time': 0.036198333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036204764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.431000000001186e-06, 'source_diff': 6.431000000001186e-06}, {'time': 0.036205236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036212056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.819999999997661e-06, 'source_diff': 6.819999999997661e-06}, {'time': 0.036212528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036216833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.3049999999961175e-06, 'source_diff': 4.3049999999961175e-06}, {'time': 0.036217306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036226861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.555000000001368e-06, 'source_diff': 9.555000000001368e-06}, {'time': 0.036227333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03623625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.916999999997177e-06, 'source_diff': 8.916999999997177e-06}, {'time': 0.036236722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036241889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.167000000000366e-06, 'source_diff': 5.167000000000366e-06}, {'time': 0.036242361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03625175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.388999999998537e-06, 'source_diff': 9.388999999998537e-06}, {'time': 0.036252222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036261931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.708999999996637e-06, 'source_diff': 9.708999999996637e-06}, {'time': 0.036262403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036270903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.500000000001562e-06, 'source_diff': 8.500000000001562e-06}, {'time': 0.036271375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036276014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.036276486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036285069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.583000000006447e-06, 'source_diff': 8.583000000006447e-06}, {'time': 0.036285611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036294194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.582999999999508e-06, 'source_diff': 8.582999999999508e-06}, {'time': 0.036294667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036305264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0596999999994139e-05, 'source_diff': 1.0596999999994139e-05}, {'time': 0.036305736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036312972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.236000000000742e-06, 'source_diff': 7.236000000000742e-06}, {'time': 0.036313444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036320167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.7230000000001455e-06, 'source_diff': 6.7230000000001455e-06}, {'time': 0.036320639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036328, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.360999999997397e-06, 'source_diff': 7.360999999997397e-06}, {'time': 0.036328472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201110 08:32:42.003" endtime="20201110 08:32:42.014"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:41.992" endtime="20201110 08:32:42.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:32:42.072" level="INFO">${debug-compressed} = {'time': [0.035938792, 0.035939264, 0.035949236, 0.035949708, 0.035958208, 0.035958681, 0.035964264, 0.035964736, 0.035970125, 0.035970597, 0.035977319, 0.035977792, 0.035984319, 0.035984792, 0.035994...</msg>
<status status="PASS" starttime="20201110 08:32:42.018" endtime="20201110 08:32:42.073"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:42.082" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:32:42.079" endtime="20201110 08:32:42.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:42.091" level="INFO">VALUE: {'time': [0.035938792, 0.035939264, 0.035949236, 0.035949708, 0.035958208, 0.035958681, 0.035964264, 0.035964736, 0.035970125, 0.035970597, 0.035977319, 0.035977792, 0.035984319, 0.035984792, 0.035994847, 0.035995319, 0.0360055, 0.036005972, 0.036011139, 0.036011611, 0.036018014, 0.036018486, 0.036026486, 0.036026958, 0.036034208, 0.036034681, 0.036041167, 0.036041708, 0.036046194, 0.036046667, 0.036051847, 0.036052319, 0.036058625, 0.036059097, 0.036068347, 0.036068819, 0.036078458, 0.036078931, 0.036088569, 0.036089042, 0.036094625, 0.036095097, 0.036101472, 0.036102014, 0.036107361, 0.036107833, 0.036114236, 0.036114708, 0.036123153, 0.036123625, 0.036130431, 0.036130903, 0.036140972, 0.036141444, 0.0361465, 0.036146972, 0.036157875, 0.036158347, 0.036168458, 0.036168931, 0.036175625, 0.036176097, 0.036182944, 0.036183417, 0.036192944, 0.036193417, 0.036197861, 0.036198333, 0.036204764, 0.036205236, 0.036212056, 0.036212528, 0.036216833, 0.036217306, 0.036226861, 0.036227333, 0.03623625, 0.036236722, 0.036241889, 0.036242361, 0.03625175, 0.036252222, 0.036261931, 0.036262403, 0.036270903, 0.036271375, 0.036276014, 0.036276486, 0.036285069, 0.036285611, 0.036294194, 0.036294667, 0.036305264, 0.036305736, 0.036312972, 0.036313444, 0.036320167, 0.036320639, 0.036328, 0.036328472], 'source_diff': [0, 4.720000000013602e-07, 9.972000000003922e-06, 4.7199999999442133e-07, 8.500000000001562e-06, 4.7300000000083386e-07, 5.583000000003446e-06, 4.7199999999442133e-07, 5.389000000001476e-06, 4.720000000013602e-07, 6.722000000000672e-06, 4.7300000000083386e-07, 6.526999999999228e-06, 4.7300000000083386e-07, 1.0055000000001868e-05, 4.7199999999442133e-07, 1.0181000000004936e-05, 4.7199999999442133e-07, 5.167000000000366e-06, 4.720000000013602e-07, 6.403000000002046e-06, 4.720000000013602e-07, 8.000000000001062e-06, 4.7199999999442133e-07, 7.250000000000312e-06, 4.7300000000083386e-07, 6.485999999999992e-06, 5.409999999997361e-07, 4.485999999997992e-06, 4.7300000000083386e-07, 5.180000000000462e-06, 4.720000000013602e-07, 6.305999999997591e-06, 4.720000000013602e-07, 9.250000000002312e-06, 4.720000000013602e-07, 9.638999999998787e-06, 4.7300000000083386e-07, 9.637999999999314e-06, 4.7300000000083386e-07, 5.582999999996507e-06, 4.720000000013602e-07, 6.375000000002906e-06, 5.419999999992098e-07, 5.346999999995827e-06, 4.720000000013602e-07, 6.403000000002046e-06, 4.720000000013602e-07, 8.444999999995817e-06, 4.720000000013602e-07, 6.805999999998091e-06, 4.720000000013602e-07, 1.0069000000001438e-05, 4.720000000013602e-07, 5.055999999996341e-06, 4.720000000013602e-07, 1.0902999999999607e-05, 4.720000000013602e-07, 1.0111000000000148e-05, 4.7300000000083386e-07, 6.694000000001532e-06, 4.7199999999442133e-07, 6.847000000004266e-06, 4.7300000000083386e-07, 9.52699999999529e-06, 4.7300000000083386e-07, 4.443999999999282e-06, 4.720000000013602e-07, 6.431000000001186e-06, 4.720000000013602e-07, 6.819999999997661e-06, 4.720000000013602e-07, 4.3049999999961175e-06, 4.7300000000083386e-07, 9.555000000001368e-06, 4.720000000013602e-07, 8.916999999997177e-06, 4.720000000013602e-07, 5.167000000000366e-06, 4.720000000013602e-07, 9.388999999998537e-06, 4.720000000013602e-07, 9.708999999996637e-06, 4.720000000013602e-07, 8.500000000001562e-06, 4.720000000013602e-07, 4.639000000000726e-06, 4.7199999999442133e-07, 8.583000000006447e-06, 5.419999999992098e-07, 8.582999999999508e-06, 4.7300000000083386e-07, 1.0596999999994139e-05, 4.720000000013602e-07, 7.236000000000742e-06, 4.720000000013602e-07, 6.7230000000001455e-06, 4.720000000013602e-07, 7.360999999997397e-06, 4.720000000013602e-07], 'sourceeventdiff': [0, 4.720000000013602e-07, 9.972000000003922e-06, 4.7199999999442133e-07, 8.500000000001562e-06, 4.7300000000083386e-07, 5.583000000003446e-06, 4.7199999999442133e-07, 5.389000000001476e-06, 4.720000000013602e-07, 6.722000000000672e-06, 4.7300000000083386e-07, 6.526999999999228e-06, 4.7300000000083386e-07, 1.0055000000001868e-05, 4.7199999999442133e-07, 1.0181000000004936e-05, 4.7199999999442133e-07, 5.167000000000366e-06, 4.720000000013602e-07, 6.403000000002046e-06, 4.720000000013602e-07, 8.000000000001062e-06, 4.7199999999442133e-07, 7.250000000000312e-06, 4.7300000000083386e-07, 6.485999999999992e-06, 5.409999999997361e-07, 4.485999999997992e-06, 4.7300000000083386e-07, 5.180000000000462e-06, 4.720000000013602e-07, 6.305999999997591e-06, 4.720000000013602e-07, 9.250000000002312e-06, 4.720000000013602e-07, 9.638999999998787e-06, 4.7300000000083386e-07, 9.637999999999314e-06, 4.7300000000083386e-07, 5.582999999996507e-06, 4.720000000013602e-07, 6.375000000002906e-06, 5.419999999992098e-07, 5.346999999995827e-06, 4.720000000013602e-07, 6.403000000002046e-06, 4.720000000013602e-07, 8.444999999995817e-06, 4.720000000013602e-07, 6.805999999998091e-06, 4.720000000013602e-07, 1.0069000000001438e-05, 4.720000000013602e-07, 5.055999999996341e-06, 4.720000000013602e-07, 1.0902999999999607e-05, 4.720000000013602e-07, 1.0111000000000148e-05, 4.7300000000083386e-07, 6.694000000001532e-06, 4.7199999999442133e-07, 6.847000000004266e-06, 4.7300000000083386e-07, 9.52699999999529e-06, 4.7300000000083386e-07, 4.443999999999282e-06, 4.720000000013602e-07, 6.431000000001186e-06, 4.720000000013602e-07, 6.819999999997661e-06, 4.720000000013602e-07, 4.3049999999961175e-06, 4.7300000000083386e-07, 9.555000000001368e-06, 4.720000000013602e-07, 8.916999999997177e-06, 4.720000000013602e-07, 5.167000000000366e-06, 4.720000000013602e-07, 9.388999999998537e-06, 4.720000000013602e-07, 9.708999999996637e-06, 4.720000000013602e-07, 8.500000000001562e-06, 4.720000000013602e-07, 4.639000000000726e-06, 4.7199999999442133e-07, 8.583000000006447e-06, 5.419999999992098e-07, 8.582999999999508e-06, 4.7300000000083386e-07, 1.0596999999994139e-05, 4.720000000013602e-07, 7.236000000000742e-06, 4.720000000013602e-07, 6.7230000000001455e-06, 4.720000000013602e-07, 7.360999999997397e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201110 08:32:42.084" endtime="20201110 08:32:42.093"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:42.074" endtime="20201110 08:32:42.095"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:42.105" level="INFO">${RESULT} = [{'time': 0.035939264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035949708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:32:42.096" endtime="20201110 08:32:42.106"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:42.136" level="INFO">${GPIO_OVERHEAD} = {'time': [0.035939264, 0.035949708, 0.035958681, 0.035964736, 0.035970597, 0.035977792, 0.035984792, 0.035995319, 0.036005972, 0.036011611, 0.036018486, 0.036026958, 0.036034681, 0.036041708, 0.036046...</msg>
<status status="PASS" starttime="20201110 08:32:42.107" endtime="20201110 08:32:42.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:42.147" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:32:42.144" endtime="20201110 08:32:42.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:42.152" level="INFO">VALUE: [4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 5.409999999997361e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 5.419999999992098e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201110 08:32:42.149" endtime="20201110 08:32:42.153"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:42.138" endtime="20201110 08:32:42.154"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:42.161" endtime="20201110 08:32:42.164"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:42.169" endtime="20201110 08:32:42.191"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:42.165" endtime="20201110 08:32:42.193"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:42.156" endtime="20201110 08:32:42.194"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:41.550" endtime="20201110 08:32:42.195"></status>
</kw>
<msg timestamp="20201110 08:32:42.195" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:42.217" endtime="20201110 08:32:42.227"></status>
</kw>
<msg timestamp="20201110 08:32:42.228" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:42.213" endtime="20201110 08:32:42.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:42.235" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:42.231" endtime="20201110 08:32:42.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:42.237" endtime="20201110 08:32:42.241"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:42.204" endtime="20201110 08:32:42.242"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:42.200" endtime="20201110 08:32:42.244"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:42.260" endtime="20201110 08:32:42.602"></status>
</kw>
<msg timestamp="20201110 08:32:42.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037606403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037606875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:42.257" endtime="20201110 08:32:42.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:42.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037606403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037606875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:42.612" endtime="20201110 08:32:42.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:42.631" endtime="20201110 08:32:42.635"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:42.250" endtime="20201110 08:32:42.637"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:42.245" endtime="20201110 08:32:42.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:42.648" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:32:42.645" endtime="20201110 08:32:42.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:42.659" level="INFO">VALUE: [{'time': 0.037606403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037606875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037615569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.694000000003532e-06, 'source_diff': 8.694000000003532e-06}, {'time': 0.037616042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037624861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.819000000000188e-06, 'source_diff': 8.819000000000188e-06}, {'time': 0.037625333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037634528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.195000000003506e-06, 'source_diff': 9.195000000003506e-06}, {'time': 0.037635, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037644014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.014000000001632e-06, 'source_diff': 9.014000000001632e-06}, {'time': 0.037644486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037650819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.333000000004196e-06, 'source_diff': 6.333000000004196e-06}, {'time': 0.037651292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037662167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0875000000000468e-05, 'source_diff': 1.0875000000000468e-05}, {'time': 0.037662639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037670111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.472000000001422e-06, 'source_diff': 7.472000000001422e-06}, {'time': 0.037670583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037676792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2090000000000756e-06, 'source_diff': 6.2090000000000756e-06}, {'time': 0.037677264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037686653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.388999999998537e-06, 'source_diff': 9.388999999998537e-06}, {'time': 0.037687194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.037694625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.431000000002186e-06, 'source_diff': 7.431000000002186e-06}, {'time': 0.037695097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037703069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.972000000001922e-06, 'source_diff': 7.972000000001922e-06}, {'time': 0.037703542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037709653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.111000000003086e-06, 'source_diff': 6.111000000003086e-06}, {'time': 0.037710125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037720819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0694000000005532e-05, 'source_diff': 1.0694000000005532e-05}, {'time': 0.037721292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.037731778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0486000000003992e-05, 'source_diff': 1.0486000000003992e-05}, {'time': 0.03773225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037742014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.763999999995443e-06, 'source_diff': 9.763999999995443e-06}, {'time': 0.037742486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037748792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.30600000000453e-06, 'source_diff': 6.30600000000453e-06}, {'time': 0.037749264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037756528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.263999999999882e-06, 'source_diff': 7.263999999999882e-06}, {'time': 0.037757, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037761944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.943999999999782e-06, 'source_diff': 4.943999999999782e-06}, {'time': 0.037762417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037767472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.0550000000038064e-06, 'source_diff': 5.0550000000038064e-06}, {'time': 0.037767944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037774903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.959000000000826e-06, 'source_diff': 6.959000000000826e-06}, {'time': 0.037775375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037785833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0457999999997913e-05, 'source_diff': 1.0457999999997913e-05}, {'time': 0.037786306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037791681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.375000000001906e-06, 'source_diff': 5.375000000001906e-06}, {'time': 0.037792153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037800764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.610999999998648e-06, 'source_diff': 8.610999999998648e-06}, {'time': 0.037801236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037807556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.319999999997161e-06, 'source_diff': 6.319999999997161e-06}, {'time': 0.037808028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037814125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.096999999996577e-06, 'source_diff': 6.096999999996577e-06}, {'time': 0.037814597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037822792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.195000000002506e-06, 'source_diff': 8.195000000002506e-06}, {'time': 0.037823264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037831861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.596999999999078e-06, 'source_diff': 8.596999999999078e-06}, {'time': 0.037832333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037838125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.791999999997521e-06, 'source_diff': 5.791999999997521e-06}, {'time': 0.037838597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037845944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.3469999999978275e-06, 'source_diff': 7.3469999999978275e-06}, {'time': 0.037846417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037853875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.458000000001852e-06, 'source_diff': 7.458000000001852e-06}, {'time': 0.037854347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037861181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.833999999997231e-06, 'source_diff': 6.833999999997231e-06}, {'time': 0.037861653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03786775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.096999999996577e-06, 'source_diff': 6.096999999996577e-06}, {'time': 0.037868222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037873389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.167000000000366e-06, 'source_diff': 5.167000000000366e-06}, {'time': 0.037873861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037880069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.208000000000602e-06, 'source_diff': 6.208000000000602e-06}, {'time': 0.037880542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037889458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.915999999997704e-06, 'source_diff': 8.915999999997704e-06}, {'time': 0.037889931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037898736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.805000000000618e-06, 'source_diff': 8.805000000000618e-06}, {'time': 0.037899208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037907083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.875000000004406e-06, 'source_diff': 7.875000000004406e-06}, {'time': 0.037907556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037914181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.624999999996217e-06, 'source_diff': 6.624999999996217e-06}, {'time': 0.037914653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037924931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0278000000002452e-05, 'source_diff': 1.0278000000002452e-05}, {'time': 0.037925403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037932861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.457999999994913e-06, 'source_diff': 7.457999999994913e-06}, {'time': 0.037933333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037940181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.84800000000374e-06, 'source_diff': 6.84800000000374e-06}, {'time': 0.037940653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037948236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.5830000000054465e-06, 'source_diff': 7.5830000000054465e-06}, {'time': 0.037948708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037954778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.07000000000385e-06, 'source_diff': 6.07000000000385e-06}, {'time': 0.03795525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037966042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0791999999995583e-05, 'source_diff': 1.0791999999995583e-05}, {'time': 0.037966514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037977208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0693999999998594e-05, 'source_diff': 1.0693999999998594e-05}, {'time': 0.037977681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037984194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.512999999999658e-06, 'source_diff': 6.512999999999658e-06}, {'time': 0.037984667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037993486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.819000000000188e-06, 'source_diff': 8.819000000000188e-06}, {'time': 0.037993958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037998403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.4449999999987555e-06, 'source_diff': 4.4449999999987555e-06}, {'time': 0.037998875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038004208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.332999999996257e-06, 'source_diff': 5.332999999996257e-06}, {'time': 0.03800475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}]</msg>
<status status="PASS" starttime="20201110 08:32:42.650" endtime="20201110 08:32:42.662"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:42.640" endtime="20201110 08:32:42.664"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:32:42.721" level="INFO">${debug-compressed} = {'time': [0.037606403, 0.037606875, 0.037615569, 0.037616042, 0.037624861, 0.037625333, 0.037634528, 0.037635, 0.037644014, 0.037644486, 0.037650819, 0.037651292, 0.037662167, 0.037662639, 0.037670111...</msg>
<status status="PASS" starttime="20201110 08:32:42.665" endtime="20201110 08:32:42.722"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:42.731" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:32:42.728" endtime="20201110 08:32:42.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:42.741" level="INFO">VALUE: {'time': [0.037606403, 0.037606875, 0.037615569, 0.037616042, 0.037624861, 0.037625333, 0.037634528, 0.037635, 0.037644014, 0.037644486, 0.037650819, 0.037651292, 0.037662167, 0.037662639, 0.037670111, 0.037670583, 0.037676792, 0.037677264, 0.037686653, 0.037687194, 0.037694625, 0.037695097, 0.037703069, 0.037703542, 0.037709653, 0.037710125, 0.037720819, 0.037721292, 0.037731778, 0.03773225, 0.037742014, 0.037742486, 0.037748792, 0.037749264, 0.037756528, 0.037757, 0.037761944, 0.037762417, 0.037767472, 0.037767944, 0.037774903, 0.037775375, 0.037785833, 0.037786306, 0.037791681, 0.037792153, 0.037800764, 0.037801236, 0.037807556, 0.037808028, 0.037814125, 0.037814597, 0.037822792, 0.037823264, 0.037831861, 0.037832333, 0.037838125, 0.037838597, 0.037845944, 0.037846417, 0.037853875, 0.037854347, 0.037861181, 0.037861653, 0.03786775, 0.037868222, 0.037873389, 0.037873861, 0.037880069, 0.037880542, 0.037889458, 0.037889931, 0.037898736, 0.037899208, 0.037907083, 0.037907556, 0.037914181, 0.037914653, 0.037924931, 0.037925403, 0.037932861, 0.037933333, 0.037940181, 0.037940653, 0.037948236, 0.037948708, 0.037954778, 0.03795525, 0.037966042, 0.037966514, 0.037977208, 0.037977681, 0.037984194, 0.037984667, 0.037993486, 0.037993958, 0.037998403, 0.037998875, 0.038004208, 0.03800475], 'source_diff': [0, 4.720000000013602e-07, 8.694000000003532e-06, 4.7300000000083386e-07, 8.819000000000188e-06, 4.7199999999442133e-07, 9.195000000003506e-06, 4.720000000013602e-07, 9.014000000001632e-06, 4.7199999999442133e-07, 6.333000000004196e-06, 4.7300000000083386e-07, 1.0875000000000468e-05, 4.7199999999442133e-07, 7.472000000001422e-06, 4.720000000013602e-07, 6.2090000000000756e-06, 4.720000000013602e-07, 9.388999999998537e-06, 5.409999999997361e-07, 7.431000000002186e-06, 4.7199999999442133e-07, 7.972000000001922e-06, 4.7300000000083386e-07, 6.111000000003086e-06, 4.7199999999442133e-07, 1.0694000000005532e-05, 4.7299999999389497e-07, 1.0486000000003992e-05, 4.720000000013602e-07, 9.763999999995443e-06, 4.720000000013602e-07, 6.30600000000453e-06, 4.7199999999442133e-07, 7.263999999999882e-06, 4.720000000013602e-07, 4.943999999999782e-06, 4.7300000000083386e-07, 5.0550000000038064e-06, 4.7199999999442133e-07, 6.959000000000826e-06, 4.720000000013602e-07, 1.0457999999997913e-05, 4.7300000000083386e-07, 5.375000000001906e-06, 4.720000000013602e-07, 8.610999999998648e-06, 4.720000000013602e-07, 6.319999999997161e-06, 4.720000000013602e-07, 6.096999999996577e-06, 4.720000000013602e-07, 8.195000000002506e-06, 4.720000000013602e-07, 8.596999999999078e-06, 4.720000000013602e-07, 5.791999999997521e-06, 4.720000000013602e-07, 7.3469999999978275e-06, 4.7300000000083386e-07, 7.458000000001852e-06, 4.720000000013602e-07, 6.833999999997231e-06, 4.720000000013602e-07, 6.096999999996577e-06, 4.720000000013602e-07, 5.167000000000366e-06, 4.720000000013602e-07, 6.208000000000602e-06, 4.7300000000083386e-07, 8.915999999997704e-06, 4.7300000000083386e-07, 8.805000000000618e-06, 4.7199999999442133e-07, 7.875000000004406e-06, 4.7300000000083386e-07, 6.624999999996217e-06, 4.720000000013602e-07, 1.0278000000002452e-05, 4.720000000013602e-07, 7.457999999994913e-06, 4.720000000013602e-07, 6.84800000000374e-06, 4.7199999999442133e-07, 7.5830000000054465e-06, 4.7199999999442133e-07, 6.07000000000385e-06, 4.720000000013602e-07, 1.0791999999995583e-05, 4.720000000013602e-07, 1.0693999999998594e-05, 4.7300000000083386e-07, 6.512999999999658e-06, 4.7300000000083386e-07, 8.819000000000188e-06, 4.720000000013602e-07, 4.4449999999987555e-06, 4.720000000013602e-07, 5.332999999996257e-06, 5.419999999992098e-07], 'sourceeventdiff': [0, 4.720000000013602e-07, 8.694000000003532e-06, 4.7300000000083386e-07, 8.819000000000188e-06, 4.7199999999442133e-07, 9.195000000003506e-06, 4.720000000013602e-07, 9.014000000001632e-06, 4.7199999999442133e-07, 6.333000000004196e-06, 4.7300000000083386e-07, 1.0875000000000468e-05, 4.7199999999442133e-07, 7.472000000001422e-06, 4.720000000013602e-07, 6.2090000000000756e-06, 4.720000000013602e-07, 9.388999999998537e-06, 5.409999999997361e-07, 7.431000000002186e-06, 4.7199999999442133e-07, 7.972000000001922e-06, 4.7300000000083386e-07, 6.111000000003086e-06, 4.7199999999442133e-07, 1.0694000000005532e-05, 4.7299999999389497e-07, 1.0486000000003992e-05, 4.720000000013602e-07, 9.763999999995443e-06, 4.720000000013602e-07, 6.30600000000453e-06, 4.7199999999442133e-07, 7.263999999999882e-06, 4.720000000013602e-07, 4.943999999999782e-06, 4.7300000000083386e-07, 5.0550000000038064e-06, 4.7199999999442133e-07, 6.959000000000826e-06, 4.720000000013602e-07, 1.0457999999997913e-05, 4.7300000000083386e-07, 5.375000000001906e-06, 4.720000000013602e-07, 8.610999999998648e-06, 4.720000000013602e-07, 6.319999999997161e-06, 4.720000000013602e-07, 6.096999999996577e-06, 4.720000000013602e-07, 8.195000000002506e-06, 4.720000000013602e-07, 8.596999999999078e-06, 4.720000000013602e-07, 5.791999999997521e-06, 4.720000000013602e-07, 7.3469999999978275e-06, 4.7300000000083386e-07, 7.458000000001852e-06, 4.720000000013602e-07, 6.833999999997231e-06, 4.720000000013602e-07, 6.096999999996577e-06, 4.720000000013602e-07, 5.167000000000366e-06, 4.720000000013602e-07, 6.208000000000602e-06, 4.7300000000083386e-07, 8.915999999997704e-06, 4.7300000000083386e-07, 8.805000000000618e-06, 4.7199999999442133e-07, 7.875000000004406e-06, 4.7300000000083386e-07, 6.624999999996217e-06, 4.720000000013602e-07, 1.0278000000002452e-05, 4.720000000013602e-07, 7.457999999994913e-06, 4.720000000013602e-07, 6.84800000000374e-06, 4.7199999999442133e-07, 7.5830000000054465e-06, 4.7199999999442133e-07, 6.07000000000385e-06, 4.720000000013602e-07, 1.0791999999995583e-05, 4.720000000013602e-07, 1.0693999999998594e-05, 4.7300000000083386e-07, 6.512999999999658e-06, 4.7300000000083386e-07, 8.819000000000188e-06, 4.720000000013602e-07, 4.4449999999987555e-06, 4.720000000013602e-07, 5.332999999996257e-06, 5.419999999992098e-07]}</msg>
<status status="PASS" starttime="20201110 08:32:42.733" endtime="20201110 08:32:42.743"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:42.723" endtime="20201110 08:32:42.745"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:42.755" level="INFO">${RESULT} = [{'time': 0.037606875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037616042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:32:42.746" endtime="20201110 08:32:42.756"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:42.788" level="INFO">${GPIO_OVERHEAD} = {'time': [0.037606875, 0.037616042, 0.037625333, 0.037635, 0.037644486, 0.037651292, 0.037662639, 0.037670583, 0.037677264, 0.037687194, 0.037695097, 0.037703542, 0.037710125, 0.037721292, 0.03773225,...</msg>
<status status="PASS" starttime="20201110 08:32:42.758" endtime="20201110 08:32:42.788"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:42.798" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:32:42.796" endtime="20201110 08:32:42.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:42.803" level="INFO">VALUE: [4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07]</msg>
<status status="PASS" starttime="20201110 08:32:42.800" endtime="20201110 08:32:42.804"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:42.790" endtime="20201110 08:32:42.806"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:42.812" endtime="20201110 08:32:42.815"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:42.821" endtime="20201110 08:32:42.842"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:42.816" endtime="20201110 08:32:42.844"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:42.808" endtime="20201110 08:32:42.846"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:42.196" endtime="20201110 08:32:42.846"></status>
</kw>
<msg timestamp="20201110 08:32:42.847" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:42.866" endtime="20201110 08:32:42.877"></status>
</kw>
<msg timestamp="20201110 08:32:42.878" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:42.863" endtime="20201110 08:32:42.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:42.884" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:42.880" endtime="20201110 08:32:42.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:42.887" endtime="20201110 08:32:42.891"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:42.856" endtime="20201110 08:32:42.892"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:42.851" endtime="20201110 08:32:42.894"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:42.910" endtime="20201110 08:32:43.249"></status>
</kw>
<msg timestamp="20201110 08:32:43.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036025486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036025958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:42.907" endtime="20201110 08:32:43.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:43.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036025486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036025958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:43.258" endtime="20201110 08:32:43.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:43.278" endtime="20201110 08:32:43.281"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:42.900" endtime="20201110 08:32:43.283"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:42.895" endtime="20201110 08:32:43.284"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:43.294" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:32:43.292" endtime="20201110 08:32:43.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:43.306" level="INFO">VALUE: [{'time': 0.036025486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036025958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036031028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.07000000000285e-06, 'source_diff': 5.07000000000285e-06}, {'time': 0.0360315, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03603925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.750000000000812e-06, 'source_diff': 7.750000000000812e-06}, {'time': 0.036039722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036045, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.277999999997451e-06, 'source_diff': 5.277999999997451e-06}, {'time': 0.036045472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036053236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.764000000000382e-06, 'source_diff': 7.764000000000382e-06}, {'time': 0.036053708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036064181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0473000000003896e-05, 'source_diff': 1.0473000000003896e-05}, {'time': 0.036064653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036071278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.624999999996217e-06, 'source_diff': 6.624999999996217e-06}, {'time': 0.03607175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036076708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.957999999999352e-06, 'source_diff': 4.957999999999352e-06}, {'time': 0.036077181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036082472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.290999999997548e-06, 'source_diff': 5.290999999997548e-06}, {'time': 0.036082944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036089861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.917000000002116e-06, 'source_diff': 6.917000000002116e-06}, {'time': 0.036090333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036098417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.083999999998481e-06, 'source_diff': 8.083999999998481e-06}, {'time': 0.036098889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036109694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.080499999999568e-05, 'source_diff': 1.080499999999568e-05}, {'time': 0.036110167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036118042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.875000000004406e-06, 'source_diff': 7.875000000004406e-06}, {'time': 0.036118514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036123472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.957999999999352e-06, 'source_diff': 4.957999999999352e-06}, {'time': 0.036123944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036132667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.723000000002146e-06, 'source_diff': 8.723000000002146e-06}, {'time': 0.036133139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036142458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.319000000000688e-06, 'source_diff': 9.319000000000688e-06}, {'time': 0.036142931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036150417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.485999999994053e-06, 'source_diff': 7.485999999994053e-06}, {'time': 0.036150889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03616125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0361000000000398e-05, 'source_diff': 1.0361000000000398e-05}, {'time': 0.036161722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036170639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.916999999997177e-06, 'source_diff': 8.916999999997177e-06}, {'time': 0.036171111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036179417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.305999999999591e-06, 'source_diff': 8.305999999999591e-06}, {'time': 0.036179889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036186083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.194000000001032e-06, 'source_diff': 6.194000000001032e-06}, {'time': 0.036186556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036194139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.582999999998508e-06, 'source_diff': 7.582999999998508e-06}, {'time': 0.036194611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036201125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.513999999999132e-06, 'source_diff': 6.513999999999132e-06}, {'time': 0.036201597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036209681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.083999999998481e-06, 'source_diff': 8.083999999998481e-06}, {'time': 0.036210153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036217514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.360999999997397e-06, 'source_diff': 7.360999999997397e-06}, {'time': 0.036217986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036222528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.541999999996271e-06, 'source_diff': 4.541999999996271e-06}, {'time': 0.036223, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036231125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.125000000004656e-06, 'source_diff': 8.125000000004656e-06}, {'time': 0.036231597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036236917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.3200000000031e-06, 'source_diff': 5.3200000000031e-06}, {'time': 0.036237389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036242931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.541999999997271e-06, 'source_diff': 5.541999999997271e-06}, {'time': 0.036243472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.036250597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.125000000003656e-06, 'source_diff': 7.125000000003656e-06}, {'time': 0.036251069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036256542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.473000000005834e-06, 'source_diff': 5.473000000005834e-06}, {'time': 0.036257014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036265528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.514000000001132e-06, 'source_diff': 8.514000000001132e-06}, {'time': 0.036266, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036273264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.263999999999882e-06, 'source_diff': 7.263999999999882e-06}, {'time': 0.036273736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036279708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.036280181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036290681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0499999999996623e-05, 'source_diff': 1.0499999999996623e-05}, {'time': 0.036291153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036300722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.569000000000938e-06, 'source_diff': 9.569000000000938e-06}, {'time': 0.036301194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036308542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.347999999997301e-06, 'source_diff': 7.347999999997301e-06}, {'time': 0.036309014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036319278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0264000000002882e-05, 'source_diff': 1.0264000000002882e-05}, {'time': 0.03631975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.03632775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.000000000001062e-06, 'source_diff': 8.000000000001062e-06}, {'time': 0.036328222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036337458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.236000000002742e-06, 'source_diff': 9.236000000002742e-06}, {'time': 0.036337931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.036348333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0401999999999634e-05, 'source_diff': 1.0401999999999634e-05}, {'time': 0.036348806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036355569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.762999999999908e-06, 'source_diff': 6.762999999999908e-06}, {'time': 0.036356111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000061487e-07, 'source_diff': 5.420000000061487e-07}, {'time': 0.036366236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0124999999999718e-05, 'source_diff': 1.0124999999999718e-05}, {'time': 0.036366708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036371986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.27800000000439e-06, 'source_diff': 5.27800000000439e-06}, {'time': 0.036372458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036381375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.916999999997177e-06, 'source_diff': 8.916999999997177e-06}, {'time': 0.036381847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036391292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.444999999996817e-06, 'source_diff': 9.444999999996817e-06}, {'time': 0.036391764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036396931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.167000000000366e-06, 'source_diff': 5.167000000000366e-06}, {'time': 0.036397403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036406472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.069000000000438e-06, 'source_diff': 9.069000000000438e-06}, {'time': 0.036406944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036417181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0237000000003216e-05, 'source_diff': 1.0237000000003216e-05}, {'time': 0.036417653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036424486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8329999999977575e-06, 'source_diff': 6.8329999999977575e-06}, {'time': 0.036424958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201110 08:32:43.297" endtime="20201110 08:32:43.308"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:43.286" endtime="20201110 08:32:43.310"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:32:43.368" level="INFO">${debug-compressed} = {'time': [0.036025486, 0.036025958, 0.036031028, 0.0360315, 0.03603925, 0.036039722, 0.036045, 0.036045472, 0.036053236, 0.036053708, 0.036064181, 0.036064653, 0.036071278, 0.03607175, 0.036076708, 0....</msg>
<status status="PASS" starttime="20201110 08:32:43.312" endtime="20201110 08:32:43.368"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:43.377" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:32:43.375" endtime="20201110 08:32:43.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:43.387" level="INFO">VALUE: {'time': [0.036025486, 0.036025958, 0.036031028, 0.0360315, 0.03603925, 0.036039722, 0.036045, 0.036045472, 0.036053236, 0.036053708, 0.036064181, 0.036064653, 0.036071278, 0.03607175, 0.036076708, 0.036077181, 0.036082472, 0.036082944, 0.036089861, 0.036090333, 0.036098417, 0.036098889, 0.036109694, 0.036110167, 0.036118042, 0.036118514, 0.036123472, 0.036123944, 0.036132667, 0.036133139, 0.036142458, 0.036142931, 0.036150417, 0.036150889, 0.03616125, 0.036161722, 0.036170639, 0.036171111, 0.036179417, 0.036179889, 0.036186083, 0.036186556, 0.036194139, 0.036194611, 0.036201125, 0.036201597, 0.036209681, 0.036210153, 0.036217514, 0.036217986, 0.036222528, 0.036223, 0.036231125, 0.036231597, 0.036236917, 0.036237389, 0.036242931, 0.036243472, 0.036250597, 0.036251069, 0.036256542, 0.036257014, 0.036265528, 0.036266, 0.036273264, 0.036273736, 0.036279708, 0.036280181, 0.036290681, 0.036291153, 0.036300722, 0.036301194, 0.036308542, 0.036309014, 0.036319278, 0.03631975, 0.03632775, 0.036328222, 0.036337458, 0.036337931, 0.036348333, 0.036348806, 0.036355569, 0.036356111, 0.036366236, 0.036366708, 0.036371986, 0.036372458, 0.036381375, 0.036381847, 0.036391292, 0.036391764, 0.036396931, 0.036397403, 0.036406472, 0.036406944, 0.036417181, 0.036417653, 0.036424486, 0.036424958], 'source_diff': [0, 4.7199999999442133e-07, 5.07000000000285e-06, 4.720000000013602e-07, 7.750000000000812e-06, 4.720000000013602e-07, 5.277999999997451e-06, 4.720000000013602e-07, 7.764000000000382e-06, 4.7199999999442133e-07, 1.0473000000003896e-05, 4.720000000013602e-07, 6.624999999996217e-06, 4.720000000013602e-07, 4.957999999999352e-06, 4.7300000000083386e-07, 5.290999999997548e-06, 4.720000000013602e-07, 6.917000000002116e-06, 4.720000000013602e-07, 8.083999999998481e-06, 4.720000000013602e-07, 1.080499999999568e-05, 4.7300000000083386e-07, 7.875000000004406e-06, 4.7199999999442133e-07, 4.957999999999352e-06, 4.720000000013602e-07, 8.723000000002146e-06, 4.720000000013602e-07, 9.319000000000688e-06, 4.7300000000083386e-07, 7.485999999994053e-06, 4.720000000013602e-07, 1.0361000000000398e-05, 4.720000000013602e-07, 8.916999999997177e-06, 4.720000000013602e-07, 8.305999999999591e-06, 4.720000000013602e-07, 6.194000000001032e-06, 4.7300000000083386e-07, 7.582999999998508e-06, 4.720000000013602e-07, 6.513999999999132e-06, 4.720000000013602e-07, 8.083999999998481e-06, 4.720000000013602e-07, 7.360999999997397e-06, 4.720000000013602e-07, 4.541999999996271e-06, 4.720000000013602e-07, 8.125000000004656e-06, 4.7199999999442133e-07, 5.3200000000031e-06, 4.720000000013602e-07, 5.541999999997271e-06, 5.409999999997361e-07, 7.125000000003656e-06, 4.7199999999442133e-07, 5.473000000005834e-06, 4.7199999999442133e-07, 8.514000000001132e-06, 4.720000000013602e-07, 7.263999999999882e-06, 4.720000000013602e-07, 5.971999999999922e-06, 4.7300000000083386e-07, 1.0499999999996623e-05, 4.720000000013602e-07, 9.569000000000938e-06, 4.720000000013602e-07, 7.347999999997301e-06, 4.720000000013602e-07, 1.0264000000002882e-05, 4.7199999999442133e-07, 8.000000000001062e-06, 4.720000000013602e-07, 9.236000000002742e-06, 4.7299999999389497e-07, 1.0401999999999634e-05, 4.7300000000083386e-07, 6.762999999999908e-06, 5.420000000061487e-07, 1.0124999999999718e-05, 4.7199999999442133e-07, 5.27800000000439e-06, 4.720000000013602e-07, 8.916999999997177e-06, 4.720000000013602e-07, 9.444999999996817e-06, 4.720000000013602e-07, 5.167000000000366e-06, 4.720000000013602e-07, 9.069000000000438e-06, 4.7199999999442133e-07, 1.0237000000003216e-05, 4.720000000013602e-07, 6.8329999999977575e-06, 4.720000000013602e-07], 'sourceeventdiff': [0, 4.7199999999442133e-07, 5.07000000000285e-06, 4.720000000013602e-07, 7.750000000000812e-06, 4.720000000013602e-07, 5.277999999997451e-06, 4.720000000013602e-07, 7.764000000000382e-06, 4.7199999999442133e-07, 1.0473000000003896e-05, 4.720000000013602e-07, 6.624999999996217e-06, 4.720000000013602e-07, 4.957999999999352e-06, 4.7300000000083386e-07, 5.290999999997548e-06, 4.720000000013602e-07, 6.917000000002116e-06, 4.720000000013602e-07, 8.083999999998481e-06, 4.720000000013602e-07, 1.080499999999568e-05, 4.7300000000083386e-07, 7.875000000004406e-06, 4.7199999999442133e-07, 4.957999999999352e-06, 4.720000000013602e-07, 8.723000000002146e-06, 4.720000000013602e-07, 9.319000000000688e-06, 4.7300000000083386e-07, 7.485999999994053e-06, 4.720000000013602e-07, 1.0361000000000398e-05, 4.720000000013602e-07, 8.916999999997177e-06, 4.720000000013602e-07, 8.305999999999591e-06, 4.720000000013602e-07, 6.194000000001032e-06, 4.7300000000083386e-07, 7.582999999998508e-06, 4.720000000013602e-07, 6.513999999999132e-06, 4.720000000013602e-07, 8.083999999998481e-06, 4.720000000013602e-07, 7.360999999997397e-06, 4.720000000013602e-07, 4.541999999996271e-06, 4.720000000013602e-07, 8.125000000004656e-06, 4.7199999999442133e-07, 5.3200000000031e-06, 4.720000000013602e-07, 5.541999999997271e-06, 5.409999999997361e-07, 7.125000000003656e-06, 4.7199999999442133e-07, 5.473000000005834e-06, 4.7199999999442133e-07, 8.514000000001132e-06, 4.720000000013602e-07, 7.263999999999882e-06, 4.720000000013602e-07, 5.971999999999922e-06, 4.7300000000083386e-07, 1.0499999999996623e-05, 4.720000000013602e-07, 9.569000000000938e-06, 4.720000000013602e-07, 7.347999999997301e-06, 4.720000000013602e-07, 1.0264000000002882e-05, 4.7199999999442133e-07, 8.000000000001062e-06, 4.720000000013602e-07, 9.236000000002742e-06, 4.7299999999389497e-07, 1.0401999999999634e-05, 4.7300000000083386e-07, 6.762999999999908e-06, 5.420000000061487e-07, 1.0124999999999718e-05, 4.7199999999442133e-07, 5.27800000000439e-06, 4.720000000013602e-07, 8.916999999997177e-06, 4.720000000013602e-07, 9.444999999996817e-06, 4.720000000013602e-07, 5.167000000000366e-06, 4.720000000013602e-07, 9.069000000000438e-06, 4.7199999999442133e-07, 1.0237000000003216e-05, 4.720000000013602e-07, 6.8329999999977575e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201110 08:32:43.380" endtime="20201110 08:32:43.389"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:43.370" endtime="20201110 08:32:43.390"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:43.401" level="INFO">${RESULT} = [{'time': 0.036025958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.0360315, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:32:43.392" endtime="20201110 08:32:43.401"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:43.432" level="INFO">${GPIO_OVERHEAD} = {'time': [0.036025958, 0.0360315, 0.036039722, 0.036045472, 0.036053708, 0.036064653, 0.03607175, 0.036077181, 0.036082944, 0.036090333, 0.036098889, 0.036110167, 0.036118514, 0.036123944, 0.036133139...</msg>
<status status="PASS" starttime="20201110 08:32:43.403" endtime="20201110 08:32:43.433"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:43.443" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:32:43.440" endtime="20201110 08:32:43.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:43.448" level="INFO">VALUE: [4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.7300000000083386e-07, 5.420000000061487e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201110 08:32:43.445" endtime="20201110 08:32:43.449"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:43.434" endtime="20201110 08:32:43.451"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:43.457" endtime="20201110 08:32:43.460"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:43.465" endtime="20201110 08:32:43.487"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:43.461" endtime="20201110 08:32:43.489"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:43.452" endtime="20201110 08:32:43.490"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:42.848" endtime="20201110 08:32:43.491"></status>
</kw>
<msg timestamp="20201110 08:32:43.491" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:43.511" endtime="20201110 08:32:43.522"></status>
</kw>
<msg timestamp="20201110 08:32:43.523" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:43.508" endtime="20201110 08:32:43.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:43.529" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:43.525" endtime="20201110 08:32:43.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:43.531" endtime="20201110 08:32:43.535"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:43.500" endtime="20201110 08:32:43.537"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:43.496" endtime="20201110 08:32:43.538"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:43.556" endtime="20201110 08:32:43.899"></status>
</kw>
<msg timestamp="20201110 08:32:43.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036075194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036075667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:43.553" endtime="20201110 08:32:43.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:43.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036075194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036075667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:43.911" endtime="20201110 08:32:43.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:43.934" endtime="20201110 08:32:43.940"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:43.544" endtime="20201110 08:32:43.944"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:43.540" endtime="20201110 08:32:43.946"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:43.956" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:32:43.954" endtime="20201110 08:32:43.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:43.967" level="INFO">VALUE: [{'time': 0.036075194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036075667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036084958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.291000000001548e-06, 'source_diff': 9.291000000001548e-06}, {'time': 0.036085431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036092389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.958000000001352e-06, 'source_diff': 6.958000000001352e-06}, {'time': 0.036092861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036101069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.208000000002602e-06, 'source_diff': 8.208000000002602e-06}, {'time': 0.036101542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036107514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.036107986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036118681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0694999999998067e-05, 'source_diff': 1.0694999999998067e-05}, {'time': 0.036119153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036127861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.707999999996163e-06, 'source_diff': 8.707999999996163e-06}, {'time': 0.036128333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036137528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.195000000003506e-06, 'source_diff': 9.195000000003506e-06}, {'time': 0.036138069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.036143319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2499999999983116e-06, 'source_diff': 5.2499999999983116e-06}, {'time': 0.036143792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036149889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.096999999996577e-06, 'source_diff': 6.096999999996577e-06}, {'time': 0.036150361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036159806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.445000000003756e-06, 'source_diff': 9.445000000003756e-06}, {'time': 0.036160278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036166375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.097000000003516e-06, 'source_diff': 6.097000000003516e-06}, {'time': 0.036166847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036171389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.541999999996271e-06, 'source_diff': 4.541999999996271e-06}, {'time': 0.036171861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036182361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0500000000003562e-05, 'source_diff': 1.0500000000003562e-05}, {'time': 0.036182833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036188611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.77800000000489e-06, 'source_diff': 5.77800000000489e-06}, {'time': 0.036189083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.0362, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0917000000006116e-05, 'source_diff': 1.0917000000006116e-05}, {'time': 0.036200472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036211361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0889000000000038e-05, 'source_diff': 1.0889000000000038e-05}, {'time': 0.036211833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036220764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.931000000003686e-06, 'source_diff': 8.931000000003686e-06}, {'time': 0.036221236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036228486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.250000000000312e-06, 'source_diff': 7.250000000000312e-06}, {'time': 0.036228958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03623975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0792000000002522e-05, 'source_diff': 1.0792000000002522e-05}, {'time': 0.036240222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036250292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0070000000000912e-05, 'source_diff': 1.0070000000000912e-05}, {'time': 0.036250764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036257486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.722000000000672e-06, 'source_diff': 6.722000000000672e-06}, {'time': 0.036257958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036263333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.375000000001906e-06, 'source_diff': 5.375000000001906e-06}, {'time': 0.036263806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036269917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.110999999996147e-06, 'source_diff': 6.110999999996147e-06}, {'time': 0.036270389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036274694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.305000000003056e-06, 'source_diff': 4.305000000003056e-06}, {'time': 0.036275167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.036282, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8330000000046964e-06, 'source_diff': 6.8330000000046964e-06}, {'time': 0.036282472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036286972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.4999999999975615e-06, 'source_diff': 4.4999999999975615e-06}, {'time': 0.036287514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036295889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.374999999997967e-06, 'source_diff': 8.374999999997967e-06}, {'time': 0.036296361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036304583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.222000000002172e-06, 'source_diff': 8.222000000002172e-06}, {'time': 0.036305056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036313736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.679999999997023e-06, 'source_diff': 8.679999999997023e-06}, {'time': 0.036314208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036324486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0278000000002452e-05, 'source_diff': 1.0278000000002452e-05}, {'time': 0.036324958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036332625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.667000000002866e-06, 'source_diff': 7.667000000002866e-06}, {'time': 0.036333097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036339431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.333999999996731e-06, 'source_diff': 6.333999999996731e-06}, {'time': 0.036339903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036348181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.278000000000452e-06, 'source_diff': 8.278000000000452e-06}, {'time': 0.036348653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036358833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0179999999998524e-05, 'source_diff': 1.0179999999998524e-05}, {'time': 0.036359306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036365917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.610999999996647e-06, 'source_diff': 6.610999999996647e-06}, {'time': 0.036366389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036375542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.152999999997857e-06, 'source_diff': 9.152999999997857e-06}, {'time': 0.036376014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036384278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.264000000000882e-06, 'source_diff': 8.264000000000882e-06}, {'time': 0.03638475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036394333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.583000000000508e-06, 'source_diff': 9.583000000000508e-06}, {'time': 0.036394806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036401819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.013000000000158e-06, 'source_diff': 7.013000000000158e-06}, {'time': 0.036402292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036410792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.499999999994623e-06, 'source_diff': 8.499999999994623e-06}, {'time': 0.036411264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036421028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.764000000002382e-06, 'source_diff': 9.764000000002382e-06}, {'time': 0.0364215, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036432319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0818999999995249e-05, 'source_diff': 1.0818999999995249e-05}, {'time': 0.036432792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036439708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.916000000002642e-06, 'source_diff': 6.916000000002642e-06}, {'time': 0.036440181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036447014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8329999999977575e-06, 'source_diff': 6.8329999999977575e-06}, {'time': 0.036447486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036458306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0820000000001662e-05, 'source_diff': 1.0820000000001662e-05}, {'time': 0.036458778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036468417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.639000000005726e-06, 'source_diff': 9.639000000005726e-06}, {'time': 0.036468889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036474903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0140000000055704e-06, 'source_diff': 6.0140000000055704e-06}, {'time': 0.036475375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036482722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.347000000004766e-06, 'source_diff': 7.347000000004766e-06}, {'time': 0.036483194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.03649325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0056000000001342e-05, 'source_diff': 1.0056000000001342e-05}, {'time': 0.036493722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201110 08:32:43.958" endtime="20201110 08:32:43.970"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:43.947" endtime="20201110 08:32:43.972"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:32:44.028" level="INFO">${debug-compressed} = {'time': [0.036075194, 0.036075667, 0.036084958, 0.036085431, 0.036092389, 0.036092861, 0.036101069, 0.036101542, 0.036107514, 0.036107986, 0.036118681, 0.036119153, 0.036127861, 0.036128333, 0.036137...</msg>
<status status="PASS" starttime="20201110 08:32:43.973" endtime="20201110 08:32:44.028"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:44.037" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:32:44.035" endtime="20201110 08:32:44.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:44.047" level="INFO">VALUE: {'time': [0.036075194, 0.036075667, 0.036084958, 0.036085431, 0.036092389, 0.036092861, 0.036101069, 0.036101542, 0.036107514, 0.036107986, 0.036118681, 0.036119153, 0.036127861, 0.036128333, 0.036137528, 0.036138069, 0.036143319, 0.036143792, 0.036149889, 0.036150361, 0.036159806, 0.036160278, 0.036166375, 0.036166847, 0.036171389, 0.036171861, 0.036182361, 0.036182833, 0.036188611, 0.036189083, 0.0362, 0.036200472, 0.036211361, 0.036211833, 0.036220764, 0.036221236, 0.036228486, 0.036228958, 0.03623975, 0.036240222, 0.036250292, 0.036250764, 0.036257486, 0.036257958, 0.036263333, 0.036263806, 0.036269917, 0.036270389, 0.036274694, 0.036275167, 0.036282, 0.036282472, 0.036286972, 0.036287514, 0.036295889, 0.036296361, 0.036304583, 0.036305056, 0.036313736, 0.036314208, 0.036324486, 0.036324958, 0.036332625, 0.036333097, 0.036339431, 0.036339903, 0.036348181, 0.036348653, 0.036358833, 0.036359306, 0.036365917, 0.036366389, 0.036375542, 0.036376014, 0.036384278, 0.03638475, 0.036394333, 0.036394806, 0.036401819, 0.036402292, 0.036410792, 0.036411264, 0.036421028, 0.0364215, 0.036432319, 0.036432792, 0.036439708, 0.036440181, 0.036447014, 0.036447486, 0.036458306, 0.036458778, 0.036468417, 0.036468889, 0.036474903, 0.036475375, 0.036482722, 0.036483194, 0.03649325, 0.036493722], 'source_diff': [0, 4.7300000000083386e-07, 9.291000000001548e-06, 4.7300000000083386e-07, 6.958000000001352e-06, 4.7199999999442133e-07, 8.208000000002602e-06, 4.7300000000083386e-07, 5.971999999999922e-06, 4.720000000013602e-07, 1.0694999999998067e-05, 4.720000000013602e-07, 8.707999999996163e-06, 4.720000000013602e-07, 9.195000000003506e-06, 5.409999999997361e-07, 5.2499999999983116e-06, 4.7300000000083386e-07, 6.096999999996577e-06, 4.720000000013602e-07, 9.445000000003756e-06, 4.7199999999442133e-07, 6.097000000003516e-06, 4.720000000013602e-07, 4.541999999996271e-06, 4.720000000013602e-07, 1.0500000000003562e-05, 4.7199999999442133e-07, 5.77800000000489e-06, 4.7199999999442133e-07, 1.0917000000006116e-05, 4.7199999999442133e-07, 1.0889000000000038e-05, 4.720000000013602e-07, 8.931000000003686e-06, 4.7199999999442133e-07, 7.250000000000312e-06, 4.720000000013602e-07, 1.0792000000002522e-05, 4.720000000013602e-07, 1.0070000000000912e-05, 4.7199999999442133e-07, 6.722000000000672e-06, 4.720000000013602e-07, 5.375000000001906e-06, 4.7300000000083386e-07, 6.110999999996147e-06, 4.720000000013602e-07, 4.305000000003056e-06, 4.7299999999389497e-07, 6.8330000000046964e-06, 4.720000000013602e-07, 4.4999999999975615e-06, 5.419999999992098e-07, 8.374999999997967e-06, 4.720000000013602e-07, 8.222000000002172e-06, 4.7300000000083386e-07, 8.679999999997023e-06, 4.720000000013602e-07, 1.0278000000002452e-05, 4.7199999999442133e-07, 7.667000000002866e-06, 4.720000000013602e-07, 6.333999999996731e-06, 4.720000000013602e-07, 8.278000000000452e-06, 4.720000000013602e-07, 1.0179999999998524e-05, 4.7300000000083386e-07, 6.610999999996647e-06, 4.720000000013602e-07, 9.152999999997857e-06, 4.720000000013602e-07, 8.264000000000882e-06, 4.720000000013602e-07, 9.583000000000508e-06, 4.7300000000083386e-07, 7.013000000000158e-06, 4.7300000000083386e-07, 8.499999999994623e-06, 4.720000000013602e-07, 9.764000000002382e-06, 4.720000000013602e-07, 1.0818999999995249e-05, 4.7300000000083386e-07, 6.916000000002642e-06, 4.7300000000083386e-07, 6.8329999999977575e-06, 4.720000000013602e-07, 1.0820000000001662e-05, 4.7199999999442133e-07, 9.639000000005726e-06, 4.7199999999442133e-07, 6.0140000000055704e-06, 4.7199999999442133e-07, 7.347000000004766e-06, 4.7199999999442133e-07, 1.0056000000001342e-05, 4.720000000013602e-07], 'sourceeventdiff': [0, 4.7300000000083386e-07, 9.291000000001548e-06, 4.7300000000083386e-07, 6.958000000001352e-06, 4.7199999999442133e-07, 8.208000000002602e-06, 4.7300000000083386e-07, 5.971999999999922e-06, 4.720000000013602e-07, 1.0694999999998067e-05, 4.720000000013602e-07, 8.707999999996163e-06, 4.720000000013602e-07, 9.195000000003506e-06, 5.409999999997361e-07, 5.2499999999983116e-06, 4.7300000000083386e-07, 6.096999999996577e-06, 4.720000000013602e-07, 9.445000000003756e-06, 4.7199999999442133e-07, 6.097000000003516e-06, 4.720000000013602e-07, 4.541999999996271e-06, 4.720000000013602e-07, 1.0500000000003562e-05, 4.7199999999442133e-07, 5.77800000000489e-06, 4.7199999999442133e-07, 1.0917000000006116e-05, 4.7199999999442133e-07, 1.0889000000000038e-05, 4.720000000013602e-07, 8.931000000003686e-06, 4.7199999999442133e-07, 7.250000000000312e-06, 4.720000000013602e-07, 1.0792000000002522e-05, 4.720000000013602e-07, 1.0070000000000912e-05, 4.7199999999442133e-07, 6.722000000000672e-06, 4.720000000013602e-07, 5.375000000001906e-06, 4.7300000000083386e-07, 6.110999999996147e-06, 4.720000000013602e-07, 4.305000000003056e-06, 4.7299999999389497e-07, 6.8330000000046964e-06, 4.720000000013602e-07, 4.4999999999975615e-06, 5.419999999992098e-07, 8.374999999997967e-06, 4.720000000013602e-07, 8.222000000002172e-06, 4.7300000000083386e-07, 8.679999999997023e-06, 4.720000000013602e-07, 1.0278000000002452e-05, 4.7199999999442133e-07, 7.667000000002866e-06, 4.720000000013602e-07, 6.333999999996731e-06, 4.720000000013602e-07, 8.278000000000452e-06, 4.720000000013602e-07, 1.0179999999998524e-05, 4.7300000000083386e-07, 6.610999999996647e-06, 4.720000000013602e-07, 9.152999999997857e-06, 4.720000000013602e-07, 8.264000000000882e-06, 4.720000000013602e-07, 9.583000000000508e-06, 4.7300000000083386e-07, 7.013000000000158e-06, 4.7300000000083386e-07, 8.499999999994623e-06, 4.720000000013602e-07, 9.764000000002382e-06, 4.720000000013602e-07, 1.0818999999995249e-05, 4.7300000000083386e-07, 6.916000000002642e-06, 4.7300000000083386e-07, 6.8329999999977575e-06, 4.720000000013602e-07, 1.0820000000001662e-05, 4.7199999999442133e-07, 9.639000000005726e-06, 4.7199999999442133e-07, 6.0140000000055704e-06, 4.7199999999442133e-07, 7.347000000004766e-06, 4.7199999999442133e-07, 1.0056000000001342e-05, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201110 08:32:44.040" endtime="20201110 08:32:44.049"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:44.030" endtime="20201110 08:32:44.051"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:44.061" level="INFO">${RESULT} = [{'time': 0.036075667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036085431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:32:44.052" endtime="20201110 08:32:44.062"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:44.092" level="INFO">${GPIO_OVERHEAD} = {'time': [0.036075667, 0.036085431, 0.036092861, 0.036101542, 0.036107986, 0.036119153, 0.036128333, 0.036138069, 0.036143792, 0.036150361, 0.036160278, 0.036166847, 0.036171861, 0.036182833, 0.036189...</msg>
<status status="PASS" starttime="20201110 08:32:44.063" endtime="20201110 08:32:44.093"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:44.102" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:32:44.100" endtime="20201110 08:32:44.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:44.108" level="INFO">VALUE: [4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201110 08:32:44.105" endtime="20201110 08:32:44.109"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:44.094" endtime="20201110 08:32:44.111"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:44.117" endtime="20201110 08:32:44.120"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:44.126" endtime="20201110 08:32:44.148"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:44.121" endtime="20201110 08:32:44.150"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:44.112" endtime="20201110 08:32:44.152"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:43.492" endtime="20201110 08:32:44.152"></status>
</kw>
<msg timestamp="20201110 08:32:44.153" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:44.172" endtime="20201110 08:32:44.184"></status>
</kw>
<msg timestamp="20201110 08:32:44.185" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:44.169" endtime="20201110 08:32:44.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:44.192" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:44.188" endtime="20201110 08:32:44.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:44.194" endtime="20201110 08:32:44.198"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:44.162" endtime="20201110 08:32:44.200"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:44.157" endtime="20201110 08:32:44.201"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:44.218" endtime="20201110 08:32:44.569"></status>
</kw>
<msg timestamp="20201110 08:32:44.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036132514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036132986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:44.214" endtime="20201110 08:32:44.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:44.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036132514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036132986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:44.578" endtime="20201110 08:32:44.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:44.598" endtime="20201110 08:32:44.602"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:44.207" endtime="20201110 08:32:44.603"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:44.202" endtime="20201110 08:32:44.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:44.614" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:32:44.612" endtime="20201110 08:32:44.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:44.626" level="INFO">VALUE: [{'time': 0.036132514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036132986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036139069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.083000000003946e-06, 'source_diff': 6.083000000003946e-06}, {'time': 0.036139542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.036147944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.402000000004572e-06, 'source_diff': 8.402000000004572e-06}, {'time': 0.036148417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036155347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.929999999995273e-06, 'source_diff': 6.929999999995273e-06}, {'time': 0.036155819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036160889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.07000000000285e-06, 'source_diff': 5.07000000000285e-06}, {'time': 0.036161361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036166722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.360999999995397e-06, 'source_diff': 5.360999999995397e-06}, {'time': 0.036167194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036173819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.625000000003156e-06, 'source_diff': 6.625000000003156e-06}, {'time': 0.036174292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.036182097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.805000000006557e-06, 'source_diff': 7.805000000006557e-06}, {'time': 0.036182569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036193347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0778000000002952e-05, 'source_diff': 1.0778000000002952e-05}, {'time': 0.036193819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036199403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.583999999995981e-06, 'source_diff': 5.583999999995981e-06}, {'time': 0.036199875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036210569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0693999999998594e-05, 'source_diff': 1.0693999999998594e-05}, {'time': 0.036211042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036219333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.291000000000548e-06, 'source_diff': 8.291000000000548e-06}, {'time': 0.036219806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036228, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.194000000003032e-06, 'source_diff': 8.194000000003032e-06}, {'time': 0.036228472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036236361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.889000000003976e-06, 'source_diff': 7.889000000003976e-06}, {'time': 0.036236833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036245125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.292000000000022e-06, 'source_diff': 8.292000000000022e-06}, {'time': 0.036245597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036252736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.139000000003226e-06, 'source_diff': 7.139000000003226e-06}, {'time': 0.036253208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036260972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.764000000000382e-06, 'source_diff': 7.764000000000382e-06}, {'time': 0.036261444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036271528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0084000000000481e-05, 'source_diff': 1.0084000000000481e-05}, {'time': 0.036272, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036281014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.014000000001632e-06, 'source_diff': 9.014000000001632e-06}, {'time': 0.036281486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036289792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.305999999999591e-06, 'source_diff': 8.305999999999591e-06}, {'time': 0.036290264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036300625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0361000000000398e-05, 'source_diff': 1.0361000000000398e-05}, {'time': 0.036301097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036308153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.05600000000528e-06, 'source_diff': 7.05600000000528e-06}, {'time': 0.036308625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036313583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.958000000006291e-06, 'source_diff': 4.958000000006291e-06}, {'time': 0.036314056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.036324944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0888000000000564e-05, 'source_diff': 1.0888000000000564e-05}, {'time': 0.036325417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036330375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.957999999999352e-06, 'source_diff': 4.957999999999352e-06}, {'time': 0.036330847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036340917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0070000000000912e-05, 'source_diff': 1.0070000000000912e-05}, {'time': 0.036341389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036348944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.554999999999368e-06, 'source_diff': 7.554999999999368e-06}, {'time': 0.036349417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036354375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.957999999999352e-06, 'source_diff': 4.957999999999352e-06}, {'time': 0.036354847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036359931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.083999999995481e-06, 'source_diff': 5.083999999995481e-06}, {'time': 0.036360403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036370139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.736000000003242e-06, 'source_diff': 9.736000000003242e-06}, {'time': 0.036370611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036377208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.597000000004016e-06, 'source_diff': 6.597000000004016e-06}, {'time': 0.03637775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036386417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.666999999996927e-06, 'source_diff': 8.666999999996927e-06}, {'time': 0.036386889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036397069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0179999999998524e-05, 'source_diff': 1.0179999999998524e-05}, {'time': 0.036397542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036408125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0583000000001508e-05, 'source_diff': 1.0583000000001508e-05}, {'time': 0.036408597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036418764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0166999999998427e-05, 'source_diff': 1.0166999999998427e-05}, {'time': 0.036419236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036423667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.430999999999186e-06, 'source_diff': 4.430999999999186e-06}, {'time': 0.036424139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036430681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.541999999998271e-06, 'source_diff': 6.541999999998271e-06}, {'time': 0.036431153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036439542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.388999999997537e-06, 'source_diff': 8.388999999997537e-06}, {'time': 0.036440014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036446736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.722000000000672e-06, 'source_diff': 6.722000000000672e-06}, {'time': 0.036447208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036455306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.097999999998051e-06, 'source_diff': 8.097999999998051e-06}, {'time': 0.036455778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036465444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.665999999998454e-06, 'source_diff': 9.665999999998454e-06}, {'time': 0.036465917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036476208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0291000000002548e-05, 'source_diff': 1.0291000000002548e-05}, {'time': 0.036476681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.036487222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0541000000002798e-05, 'source_diff': 1.0541000000002798e-05}, {'time': 0.036487694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036493597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.903000000001546e-06, 'source_diff': 5.903000000001546e-06}, {'time': 0.036494069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036499861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.79200000000446e-06, 'source_diff': 5.79200000000446e-06}, {'time': 0.036500333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036508625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.292000000000022e-06, 'source_diff': 8.292000000000022e-06}, {'time': 0.036509097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036517597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.500000000001562e-06, 'source_diff': 8.500000000001562e-06}, {'time': 0.036518069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036522611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.54200000000321e-06, 'source_diff': 4.54200000000321e-06}, {'time': 0.036523083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.03653075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.667000000002866e-06, 'source_diff': 7.667000000002866e-06}, {'time': 0.036531222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036540556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.333999999999731e-06, 'source_diff': 9.333999999999731e-06}, {'time': 0.036541028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201110 08:32:44.616" endtime="20201110 08:32:44.629"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:44.606" endtime="20201110 08:32:44.630"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:32:44.688" level="INFO">${debug-compressed} = {'time': [0.036132514, 0.036132986, 0.036139069, 0.036139542, 0.036147944, 0.036148417, 0.036155347, 0.036155819, 0.036160889, 0.036161361, 0.036166722, 0.036167194, 0.036173819, 0.036174292, 0.036182...</msg>
<status status="PASS" starttime="20201110 08:32:44.632" endtime="20201110 08:32:44.689"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:44.698" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:32:44.696" endtime="20201110 08:32:44.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:44.707" level="INFO">VALUE: {'time': [0.036132514, 0.036132986, 0.036139069, 0.036139542, 0.036147944, 0.036148417, 0.036155347, 0.036155819, 0.036160889, 0.036161361, 0.036166722, 0.036167194, 0.036173819, 0.036174292, 0.036182097, 0.036182569, 0.036193347, 0.036193819, 0.036199403, 0.036199875, 0.036210569, 0.036211042, 0.036219333, 0.036219806, 0.036228, 0.036228472, 0.036236361, 0.036236833, 0.036245125, 0.036245597, 0.036252736, 0.036253208, 0.036260972, 0.036261444, 0.036271528, 0.036272, 0.036281014, 0.036281486, 0.036289792, 0.036290264, 0.036300625, 0.036301097, 0.036308153, 0.036308625, 0.036313583, 0.036314056, 0.036324944, 0.036325417, 0.036330375, 0.036330847, 0.036340917, 0.036341389, 0.036348944, 0.036349417, 0.036354375, 0.036354847, 0.036359931, 0.036360403, 0.036370139, 0.036370611, 0.036377208, 0.03637775, 0.036386417, 0.036386889, 0.036397069, 0.036397542, 0.036408125, 0.036408597, 0.036418764, 0.036419236, 0.036423667, 0.036424139, 0.036430681, 0.036431153, 0.036439542, 0.036440014, 0.036446736, 0.036447208, 0.036455306, 0.036455778, 0.036465444, 0.036465917, 0.036476208, 0.036476681, 0.036487222, 0.036487694, 0.036493597, 0.036494069, 0.036499861, 0.036500333, 0.036508625, 0.036509097, 0.036517597, 0.036518069, 0.036522611, 0.036523083, 0.03653075, 0.036531222, 0.036540556, 0.036541028], 'source_diff': [0, 4.720000000013602e-07, 6.083000000003946e-06, 4.7299999999389497e-07, 8.402000000004572e-06, 4.7300000000083386e-07, 6.929999999995273e-06, 4.720000000013602e-07, 5.07000000000285e-06, 4.720000000013602e-07, 5.360999999995397e-06, 4.720000000013602e-07, 6.625000000003156e-06, 4.7299999999389497e-07, 7.805000000006557e-06, 4.7199999999442133e-07, 1.0778000000002952e-05, 4.720000000013602e-07, 5.583999999995981e-06, 4.720000000013602e-07, 1.0693999999998594e-05, 4.7300000000083386e-07, 8.291000000000548e-06, 4.7300000000083386e-07, 8.194000000003032e-06, 4.7199999999442133e-07, 7.889000000003976e-06, 4.720000000013602e-07, 8.292000000000022e-06, 4.7199999999442133e-07, 7.139000000003226e-06, 4.720000000013602e-07, 7.764000000000382e-06, 4.7199999999442133e-07, 1.0084000000000481e-05, 4.720000000013602e-07, 9.014000000001632e-06, 4.720000000013602e-07, 8.305999999999591e-06, 4.720000000013602e-07, 1.0361000000000398e-05, 4.7199999999442133e-07, 7.05600000000528e-06, 4.7199999999442133e-07, 4.958000000006291e-06, 4.7299999999389497e-07, 1.0888000000000564e-05, 4.7300000000083386e-07, 4.957999999999352e-06, 4.720000000013602e-07, 1.0070000000000912e-05, 4.720000000013602e-07, 7.554999999999368e-06, 4.7300000000083386e-07, 4.957999999999352e-06, 4.720000000013602e-07, 5.083999999995481e-06, 4.720000000013602e-07, 9.736000000003242e-06, 4.7199999999442133e-07, 6.597000000004016e-06, 5.419999999992098e-07, 8.666999999996927e-06, 4.720000000013602e-07, 1.0179999999998524e-05, 4.7300000000083386e-07, 1.0583000000001508e-05, 4.720000000013602e-07, 1.0166999999998427e-05, 4.720000000013602e-07, 4.430999999999186e-06, 4.720000000013602e-07, 6.541999999998271e-06, 4.720000000013602e-07, 8.388999999997537e-06, 4.720000000013602e-07, 6.722000000000672e-06, 4.720000000013602e-07, 8.097999999998051e-06, 4.720000000013602e-07, 9.665999999998454e-06, 4.7300000000083386e-07, 1.0291000000002548e-05, 4.7299999999389497e-07, 1.0541000000002798e-05, 4.720000000013602e-07, 5.903000000001546e-06, 4.7199999999442133e-07, 5.79200000000446e-06, 4.720000000013602e-07, 8.292000000000022e-06, 4.7199999999442133e-07, 8.500000000001562e-06, 4.720000000013602e-07, 4.54200000000321e-06, 4.7199999999442133e-07, 7.667000000002866e-06, 4.720000000013602e-07, 9.333999999999731e-06, 4.720000000013602e-07], 'sourceeventdiff': [0, 4.720000000013602e-07, 6.083000000003946e-06, 4.7299999999389497e-07, 8.402000000004572e-06, 4.7300000000083386e-07, 6.929999999995273e-06, 4.720000000013602e-07, 5.07000000000285e-06, 4.720000000013602e-07, 5.360999999995397e-06, 4.720000000013602e-07, 6.625000000003156e-06, 4.7299999999389497e-07, 7.805000000006557e-06, 4.7199999999442133e-07, 1.0778000000002952e-05, 4.720000000013602e-07, 5.583999999995981e-06, 4.720000000013602e-07, 1.0693999999998594e-05, 4.7300000000083386e-07, 8.291000000000548e-06, 4.7300000000083386e-07, 8.194000000003032e-06, 4.7199999999442133e-07, 7.889000000003976e-06, 4.720000000013602e-07, 8.292000000000022e-06, 4.7199999999442133e-07, 7.139000000003226e-06, 4.720000000013602e-07, 7.764000000000382e-06, 4.7199999999442133e-07, 1.0084000000000481e-05, 4.720000000013602e-07, 9.014000000001632e-06, 4.720000000013602e-07, 8.305999999999591e-06, 4.720000000013602e-07, 1.0361000000000398e-05, 4.7199999999442133e-07, 7.05600000000528e-06, 4.7199999999442133e-07, 4.958000000006291e-06, 4.7299999999389497e-07, 1.0888000000000564e-05, 4.7300000000083386e-07, 4.957999999999352e-06, 4.720000000013602e-07, 1.0070000000000912e-05, 4.720000000013602e-07, 7.554999999999368e-06, 4.7300000000083386e-07, 4.957999999999352e-06, 4.720000000013602e-07, 5.083999999995481e-06, 4.720000000013602e-07, 9.736000000003242e-06, 4.7199999999442133e-07, 6.597000000004016e-06, 5.419999999992098e-07, 8.666999999996927e-06, 4.720000000013602e-07, 1.0179999999998524e-05, 4.7300000000083386e-07, 1.0583000000001508e-05, 4.720000000013602e-07, 1.0166999999998427e-05, 4.720000000013602e-07, 4.430999999999186e-06, 4.720000000013602e-07, 6.541999999998271e-06, 4.720000000013602e-07, 8.388999999997537e-06, 4.720000000013602e-07, 6.722000000000672e-06, 4.720000000013602e-07, 8.097999999998051e-06, 4.720000000013602e-07, 9.665999999998454e-06, 4.7300000000083386e-07, 1.0291000000002548e-05, 4.7299999999389497e-07, 1.0541000000002798e-05, 4.720000000013602e-07, 5.903000000001546e-06, 4.7199999999442133e-07, 5.79200000000446e-06, 4.720000000013602e-07, 8.292000000000022e-06, 4.7199999999442133e-07, 8.500000000001562e-06, 4.720000000013602e-07, 4.54200000000321e-06, 4.7199999999442133e-07, 7.667000000002866e-06, 4.720000000013602e-07, 9.333999999999731e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201110 08:32:44.700" endtime="20201110 08:32:44.709"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:44.691" endtime="20201110 08:32:44.711"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:44.722" level="INFO">${RESULT} = [{'time': 0.036132986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036139542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:32:44.712" endtime="20201110 08:32:44.722"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:44.755" level="INFO">${GPIO_OVERHEAD} = {'time': [0.036132986, 0.036139542, 0.036148417, 0.036155819, 0.036161361, 0.036167194, 0.036174292, 0.036182569, 0.036193819, 0.036199875, 0.036211042, 0.036219806, 0.036228472, 0.036236833, 0.036245...</msg>
<status status="PASS" starttime="20201110 08:32:44.724" endtime="20201110 08:32:44.756"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:44.766" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:32:44.763" endtime="20201110 08:32:44.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:44.771" level="INFO">VALUE: [4.720000000013602e-07, 4.7299999999389497e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7299999999389497e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201110 08:32:44.768" endtime="20201110 08:32:44.772"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:44.757" endtime="20201110 08:32:44.773"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:44.780" endtime="20201110 08:32:44.783"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:44.788" endtime="20201110 08:32:44.810"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:44.784" endtime="20201110 08:32:44.812"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:44.775" endtime="20201110 08:32:44.814"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:44.154" endtime="20201110 08:32:44.814"></status>
</kw>
<msg timestamp="20201110 08:32:44.815" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:44.836" endtime="20201110 08:32:44.847"></status>
</kw>
<msg timestamp="20201110 08:32:44.848" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:44.833" endtime="20201110 08:32:44.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:44.855" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:44.851" endtime="20201110 08:32:44.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:44.857" endtime="20201110 08:32:44.861"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:44.825" endtime="20201110 08:32:44.862"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:44.820" endtime="20201110 08:32:44.864"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:44.880" endtime="20201110 08:32:45.210"></status>
</kw>
<msg timestamp="20201110 08:32:45.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038334569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038335042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:44.877" endtime="20201110 08:32:45.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:45.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038334569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038335042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:45.220" endtime="20201110 08:32:45.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:45.244" endtime="20201110 08:32:45.247"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:44.870" endtime="20201110 08:32:45.249"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:44.865" endtime="20201110 08:32:45.251"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:45.260" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:32:45.258" endtime="20201110 08:32:45.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:45.271" level="INFO">VALUE: [{'time': 0.038334569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038335042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038339833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.790999999997048e-06, 'source_diff': 4.790999999997048e-06}, {'time': 0.038340306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038348028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.722000000001672e-06, 'source_diff': 7.722000000001672e-06}, {'time': 0.0383485, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038358264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.764000000002382e-06, 'source_diff': 9.764000000002382e-06}, {'time': 0.038358736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038368181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.445000000003756e-06, 'source_diff': 9.445000000003756e-06}, {'time': 0.038368653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038375792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.138999999996287e-06, 'source_diff': 7.138999999996287e-06}, {'time': 0.038376264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038384986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.722000000002672e-06, 'source_diff': 8.722000000002672e-06}, {'time': 0.038385458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038393222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.764000000000382e-06, 'source_diff': 7.764000000000382e-06}, {'time': 0.038393694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038402208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.514000000001132e-06, 'source_diff': 8.514000000001132e-06}, {'time': 0.038402681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038413292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0611000000000648e-05, 'source_diff': 1.0611000000000648e-05}, {'time': 0.038413764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038419736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.038420208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038428097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.889000000003976e-06, 'source_diff': 7.889000000003976e-06}, {'time': 0.038428569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038433778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2089999999990755e-06, 'source_diff': 5.2089999999990755e-06}, {'time': 0.03843425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038440222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.038440694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038448139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.445000000001756e-06, 'source_diff': 7.445000000001756e-06}, {'time': 0.038448611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038453875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2639999999978815e-06, 'source_diff': 5.2639999999978815e-06}, {'time': 0.038454347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038458778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.430999999999186e-06, 'source_diff': 4.430999999999186e-06}, {'time': 0.03845925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03846525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.038465722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038472139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.417000000001616e-06, 'source_diff': 6.417000000001616e-06}, {'time': 0.038472611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.03847925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.639000000002726e-06, 'source_diff': 6.639000000002726e-06}, {'time': 0.038479722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038486542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.819999999997661e-06, 'source_diff': 6.819999999997661e-06}, {'time': 0.038487014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038494264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.250000000000312e-06, 'source_diff': 7.250000000000312e-06}, {'time': 0.038494736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038500861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.124999999995717e-06, 'source_diff': 6.124999999995717e-06}, {'time': 0.038501333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038512139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0806000000002092e-05, 'source_diff': 1.0806000000002092e-05}, {'time': 0.038512611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038516903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.291999999996021e-06, 'source_diff': 4.291999999996021e-06}, {'time': 0.038517375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038525361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.986000000001492e-06, 'source_diff': 7.986000000001492e-06}, {'time': 0.038525833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038536222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0388999999999537e-05, 'source_diff': 1.0388999999999537e-05}, {'time': 0.038536694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038545194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.499999999994623e-06, 'source_diff': 8.499999999994623e-06}, {'time': 0.038545667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038555097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.430000000004712e-06, 'source_diff': 9.430000000004712e-06}, {'time': 0.038555569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038562792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2230000000006456e-06, 'source_diff': 7.2230000000006456e-06}, {'time': 0.038563333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.038569528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.195000000000506e-06, 'source_diff': 6.195000000000506e-06}, {'time': 0.03857, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038574931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.930999999999686e-06, 'source_diff': 4.930999999999686e-06}, {'time': 0.038575403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038585778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0374999999999968e-05, 'source_diff': 1.0374999999999968e-05}, {'time': 0.03858625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038592472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.038592944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038601431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.487000000001466e-06, 'source_diff': 8.487000000001466e-06}, {'time': 0.038601903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038609889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.986000000001492e-06, 'source_diff': 7.986000000001492e-06}, {'time': 0.038610361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038617917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.555999999998841e-06, 'source_diff': 7.555999999998841e-06}, {'time': 0.038618389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038625431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0419999999987715e-06, 'source_diff': 7.0419999999987715e-06}, {'time': 0.038625903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038634931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.027999999994263e-06, 'source_diff': 9.027999999994263e-06}, {'time': 0.038635403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038644208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.805000000000618e-06, 'source_diff': 8.805000000000618e-06}, {'time': 0.038644681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038651417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.736000000000242e-06, 'source_diff': 6.736000000000242e-06}, {'time': 0.038651889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0386585, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.610999999996647e-06, 'source_diff': 6.610999999996647e-06}, {'time': 0.038658972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038666125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.153000000002796e-06, 'source_diff': 7.153000000002796e-06}, {'time': 0.038666597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038672167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.57000000000335e-06, 'source_diff': 5.57000000000335e-06}, {'time': 0.038672639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038683153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0513999999996193e-05, 'source_diff': 1.0513999999996193e-05}, {'time': 0.038683625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038692319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.694000000003532e-06, 'source_diff': 8.694000000003532e-06}, {'time': 0.038692792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.038702875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0083000000001008e-05, 'source_diff': 1.0083000000001008e-05}, {'time': 0.038703347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038710389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0419999999987715e-06, 'source_diff': 7.0419999999987715e-06}, {'time': 0.038710861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038717375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.513999999999132e-06, 'source_diff': 6.513999999999132e-06}, {'time': 0.038717847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038726764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.916999999997177e-06, 'source_diff': 8.916999999997177e-06}, {'time': 0.038727236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201110 08:32:45.262" endtime="20201110 08:32:45.274"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:45.252" endtime="20201110 08:32:45.276"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:32:45.331" level="INFO">${debug-compressed} = {'time': [0.038334569, 0.038335042, 0.038339833, 0.038340306, 0.038348028, 0.0383485, 0.038358264, 0.038358736, 0.038368181, 0.038368653, 0.038375792, 0.038376264, 0.038384986, 0.038385458, 0.03839322...</msg>
<status status="PASS" starttime="20201110 08:32:45.277" endtime="20201110 08:32:45.332"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:45.340" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:32:45.338" endtime="20201110 08:32:45.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:45.350" level="INFO">VALUE: {'time': [0.038334569, 0.038335042, 0.038339833, 0.038340306, 0.038348028, 0.0383485, 0.038358264, 0.038358736, 0.038368181, 0.038368653, 0.038375792, 0.038376264, 0.038384986, 0.038385458, 0.038393222, 0.038393694, 0.038402208, 0.038402681, 0.038413292, 0.038413764, 0.038419736, 0.038420208, 0.038428097, 0.038428569, 0.038433778, 0.03843425, 0.038440222, 0.038440694, 0.038448139, 0.038448611, 0.038453875, 0.038454347, 0.038458778, 0.03845925, 0.03846525, 0.038465722, 0.038472139, 0.038472611, 0.03847925, 0.038479722, 0.038486542, 0.038487014, 0.038494264, 0.038494736, 0.038500861, 0.038501333, 0.038512139, 0.038512611, 0.038516903, 0.038517375, 0.038525361, 0.038525833, 0.038536222, 0.038536694, 0.038545194, 0.038545667, 0.038555097, 0.038555569, 0.038562792, 0.038563333, 0.038569528, 0.03857, 0.038574931, 0.038575403, 0.038585778, 0.03858625, 0.038592472, 0.038592944, 0.038601431, 0.038601903, 0.038609889, 0.038610361, 0.038617917, 0.038618389, 0.038625431, 0.038625903, 0.038634931, 0.038635403, 0.038644208, 0.038644681, 0.038651417, 0.038651889, 0.0386585, 0.038658972, 0.038666125, 0.038666597, 0.038672167, 0.038672639, 0.038683153, 0.038683625, 0.038692319, 0.038692792, 0.038702875, 0.038703347, 0.038710389, 0.038710861, 0.038717375, 0.038717847, 0.038726764, 0.038727236], 'source_diff': [0, 4.7300000000083386e-07, 4.790999999997048e-06, 4.7300000000083386e-07, 7.722000000001672e-06, 4.720000000013602e-07, 9.764000000002382e-06, 4.7199999999442133e-07, 9.445000000003756e-06, 4.720000000013602e-07, 7.138999999996287e-06, 4.720000000013602e-07, 8.722000000002672e-06, 4.7199999999442133e-07, 7.764000000000382e-06, 4.720000000013602e-07, 8.514000000001132e-06, 4.7300000000083386e-07, 1.0611000000000648e-05, 4.720000000013602e-07, 5.971999999999922e-06, 4.7199999999442133e-07, 7.889000000003976e-06, 4.720000000013602e-07, 5.2089999999990755e-06, 4.720000000013602e-07, 5.971999999999922e-06, 4.7199999999442133e-07, 7.445000000001756e-06, 4.720000000013602e-07, 5.2639999999978815e-06, 4.720000000013602e-07, 4.430999999999186e-06, 4.720000000013602e-07, 5.999999999999062e-06, 4.720000000013602e-07, 6.417000000001616e-06, 4.7199999999442133e-07, 6.639000000002726e-06, 4.720000000013602e-07, 6.819999999997661e-06, 4.720000000013602e-07, 7.250000000000312e-06, 4.720000000013602e-07, 6.124999999995717e-06, 4.720000000013602e-07, 1.0806000000002092e-05, 4.720000000013602e-07, 4.291999999996021e-06, 4.720000000013602e-07, 7.986000000001492e-06, 4.720000000013602e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 8.499999999994623e-06, 4.7300000000083386e-07, 9.430000000004712e-06, 4.7199999999442133e-07, 7.2230000000006456e-06, 5.409999999997361e-07, 6.195000000000506e-06, 4.720000000013602e-07, 4.930999999999686e-06, 4.720000000013602e-07, 1.0374999999999968e-05, 4.720000000013602e-07, 6.222000000000172e-06, 4.7199999999442133e-07, 8.487000000001466e-06, 4.720000000013602e-07, 7.986000000001492e-06, 4.720000000013602e-07, 7.555999999998841e-06, 4.720000000013602e-07, 7.0419999999987715e-06, 4.720000000013602e-07, 9.027999999994263e-06, 4.720000000013602e-07, 8.805000000000618e-06, 4.7300000000083386e-07, 6.736000000000242e-06, 4.720000000013602e-07, 6.610999999996647e-06, 4.720000000013602e-07, 7.153000000002796e-06, 4.7199999999442133e-07, 5.57000000000335e-06, 4.720000000013602e-07, 1.0513999999996193e-05, 4.720000000013602e-07, 8.694000000003532e-06, 4.7299999999389497e-07, 1.0083000000001008e-05, 4.720000000013602e-07, 7.0419999999987715e-06, 4.720000000013602e-07, 6.513999999999132e-06, 4.720000000013602e-07, 8.916999999997177e-06, 4.720000000013602e-07], 'sourceeventdiff': [0, 4.7300000000083386e-07, 4.790999999997048e-06, 4.7300000000083386e-07, 7.722000000001672e-06, 4.720000000013602e-07, 9.764000000002382e-06, 4.7199999999442133e-07, 9.445000000003756e-06, 4.720000000013602e-07, 7.138999999996287e-06, 4.720000000013602e-07, 8.722000000002672e-06, 4.7199999999442133e-07, 7.764000000000382e-06, 4.720000000013602e-07, 8.514000000001132e-06, 4.7300000000083386e-07, 1.0611000000000648e-05, 4.720000000013602e-07, 5.971999999999922e-06, 4.7199999999442133e-07, 7.889000000003976e-06, 4.720000000013602e-07, 5.2089999999990755e-06, 4.720000000013602e-07, 5.971999999999922e-06, 4.7199999999442133e-07, 7.445000000001756e-06, 4.720000000013602e-07, 5.2639999999978815e-06, 4.720000000013602e-07, 4.430999999999186e-06, 4.720000000013602e-07, 5.999999999999062e-06, 4.720000000013602e-07, 6.417000000001616e-06, 4.7199999999442133e-07, 6.639000000002726e-06, 4.720000000013602e-07, 6.819999999997661e-06, 4.720000000013602e-07, 7.250000000000312e-06, 4.720000000013602e-07, 6.124999999995717e-06, 4.720000000013602e-07, 1.0806000000002092e-05, 4.720000000013602e-07, 4.291999999996021e-06, 4.720000000013602e-07, 7.986000000001492e-06, 4.720000000013602e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 8.499999999994623e-06, 4.7300000000083386e-07, 9.430000000004712e-06, 4.7199999999442133e-07, 7.2230000000006456e-06, 5.409999999997361e-07, 6.195000000000506e-06, 4.720000000013602e-07, 4.930999999999686e-06, 4.720000000013602e-07, 1.0374999999999968e-05, 4.720000000013602e-07, 6.222000000000172e-06, 4.7199999999442133e-07, 8.487000000001466e-06, 4.720000000013602e-07, 7.986000000001492e-06, 4.720000000013602e-07, 7.555999999998841e-06, 4.720000000013602e-07, 7.0419999999987715e-06, 4.720000000013602e-07, 9.027999999994263e-06, 4.720000000013602e-07, 8.805000000000618e-06, 4.7300000000083386e-07, 6.736000000000242e-06, 4.720000000013602e-07, 6.610999999996647e-06, 4.720000000013602e-07, 7.153000000002796e-06, 4.7199999999442133e-07, 5.57000000000335e-06, 4.720000000013602e-07, 1.0513999999996193e-05, 4.720000000013602e-07, 8.694000000003532e-06, 4.7299999999389497e-07, 1.0083000000001008e-05, 4.720000000013602e-07, 7.0419999999987715e-06, 4.720000000013602e-07, 6.513999999999132e-06, 4.720000000013602e-07, 8.916999999997177e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201110 08:32:45.343" endtime="20201110 08:32:45.352"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:45.333" endtime="20201110 08:32:45.353"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:45.364" level="INFO">${RESULT} = [{'time': 0.038335042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038340306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:32:45.355" endtime="20201110 08:32:45.364"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:45.394" level="INFO">${GPIO_OVERHEAD} = {'time': [0.038335042, 0.038340306, 0.0383485, 0.038358736, 0.038368653, 0.038376264, 0.038385458, 0.038393694, 0.038402681, 0.038413764, 0.038420208, 0.038428569, 0.03843425, 0.038440694, 0.038448611...</msg>
<status status="PASS" starttime="20201110 08:32:45.366" endtime="20201110 08:32:45.394"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:45.404" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:32:45.402" endtime="20201110 08:32:45.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:45.409" level="INFO">VALUE: [4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201110 08:32:45.406" endtime="20201110 08:32:45.410"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:45.396" endtime="20201110 08:32:45.412"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:45.418" endtime="20201110 08:32:45.421"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:45.426" endtime="20201110 08:32:45.447"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:45.422" endtime="20201110 08:32:45.449"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:45.413" endtime="20201110 08:32:45.451"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:44.816" endtime="20201110 08:32:45.451"></status>
</kw>
<msg timestamp="20201110 08:32:45.452" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:45.473" endtime="20201110 08:32:45.483"></status>
</kw>
<msg timestamp="20201110 08:32:45.484" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:45.469" endtime="20201110 08:32:45.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:45.490" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:45.487" endtime="20201110 08:32:45.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:45.493" endtime="20201110 08:32:45.496"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:45.461" endtime="20201110 08:32:45.498"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:45.456" endtime="20201110 08:32:45.499"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:45.516" endtime="20201110 08:32:45.861"></status>
</kw>
<msg timestamp="20201110 08:32:45.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036982208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036982681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:45.512" endtime="20201110 08:32:45.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:45.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036982208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036982681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:45.870" endtime="20201110 08:32:45.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:45.890" endtime="20201110 08:32:45.893"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:45.505" endtime="20201110 08:32:45.895"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:45.501" endtime="20201110 08:32:45.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:45.906" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:32:45.904" endtime="20201110 08:32:45.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:45.917" level="INFO">VALUE: [{'time': 0.036982208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036982681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036989917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.235999999993803e-06, 'source_diff': 7.235999999993803e-06}, {'time': 0.036990389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037001069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0679999999999024e-05, 'source_diff': 1.0679999999999024e-05}, {'time': 0.037001542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037009125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.582999999998508e-06, 'source_diff': 7.582999999998508e-06}, {'time': 0.037009597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037016931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.33400000000467e-06, 'source_diff': 7.33400000000467e-06}, {'time': 0.037017403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037026736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.333000000000258e-06, 'source_diff': 9.333000000000258e-06}, {'time': 0.037027208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037032722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.5139999999981315e-06, 'source_diff': 5.5139999999981315e-06}, {'time': 0.037033194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037041972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.778000000000952e-06, 'source_diff': 8.778000000000952e-06}, {'time': 0.037042444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037049083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.638999999995787e-06, 'source_diff': 6.638999999995787e-06}, {'time': 0.037049556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.0370545, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.943999999999782e-06, 'source_diff': 4.943999999999782e-06}, {'time': 0.037054972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037062014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0419999999987715e-06, 'source_diff': 7.0419999999987715e-06}, {'time': 0.037062486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037072347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.860999999999898e-06, 'source_diff': 9.860999999999898e-06}, {'time': 0.037072819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037081333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.514000000001132e-06, 'source_diff': 8.514000000001132e-06}, {'time': 0.037081806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037088833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.026999999999728e-06, 'source_diff': 7.026999999999728e-06}, {'time': 0.037089306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037096153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8469999999973274e-06, 'source_diff': 6.8469999999973274e-06}, {'time': 0.037096625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037103556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.931000000001686e-06, 'source_diff': 6.931000000001686e-06}, {'time': 0.037104028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037114403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0374999999999968e-05, 'source_diff': 1.0374999999999968e-05}, {'time': 0.037114875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037122125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.250000000000312e-06, 'source_diff': 7.250000000000312e-06}, {'time': 0.037122597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037133333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0735999999997303e-05, 'source_diff': 1.0735999999997303e-05}, {'time': 0.037133875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.037141736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.861000000004836e-06, 'source_diff': 7.861000000004836e-06}, {'time': 0.037142208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037150931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.722999999995207e-06, 'source_diff': 8.722999999995207e-06}, {'time': 0.037151403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037161444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0041000000002298e-05, 'source_diff': 1.0041000000002298e-05}, {'time': 0.037161917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037167194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.276999999997978e-06, 'source_diff': 5.276999999997978e-06}, {'time': 0.037167667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037174181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.513999999999132e-06, 'source_diff': 6.513999999999132e-06}, {'time': 0.037174653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037184931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0277999999995513e-05, 'source_diff': 1.0277999999995513e-05}, {'time': 0.037185403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037191514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.111000000003086e-06, 'source_diff': 6.111000000003086e-06}, {'time': 0.037191986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037196514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.527999999996701e-06, 'source_diff': 4.527999999996701e-06}, {'time': 0.037196986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037205597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.610999999998648e-06, 'source_diff': 8.610999999998648e-06}, {'time': 0.037206069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037214681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.611999999998121e-06, 'source_diff': 8.611999999998121e-06}, {'time': 0.037215153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037222722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.568999999998938e-06, 'source_diff': 7.568999999998938e-06}, {'time': 0.037223194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037231486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.292000000000022e-06, 'source_diff': 8.292000000000022e-06}, {'time': 0.037231958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037238361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.402999999995107e-06, 'source_diff': 6.402999999995107e-06}, {'time': 0.037238833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037247972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.138999999998287e-06, 'source_diff': 9.138999999998287e-06}, {'time': 0.037248444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037254736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.291999999998021e-06, 'source_diff': 6.291999999998021e-06}, {'time': 0.037255208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037259931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.723000000005084e-06, 'source_diff': 4.723000000005084e-06}, {'time': 0.037260472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.037269042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.569999999999411e-06, 'source_diff': 8.569999999999411e-06}, {'time': 0.037269514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037278681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.167000000004366e-06, 'source_diff': 9.167000000004366e-06}, {'time': 0.037279153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037287847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.693999999996593e-06, 'source_diff': 8.693999999996593e-06}, {'time': 0.037288319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037296389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.069999999998911e-06, 'source_diff': 8.069999999998911e-06}, {'time': 0.037296861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037303792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.931000000001686e-06, 'source_diff': 6.931000000001686e-06}, {'time': 0.037304264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037309806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.54200000000421e-06, 'source_diff': 5.54200000000421e-06}, {'time': 0.037310347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.037314861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.513999999997131e-06, 'source_diff': 4.513999999997131e-06}, {'time': 0.037315333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037324778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.445000000003756e-06, 'source_diff': 9.445000000003756e-06}, {'time': 0.03732525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037333431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.181000000002936e-06, 'source_diff': 8.181000000002936e-06}, {'time': 0.037333903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037339889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.037340361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037346792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.430999999994247e-06, 'source_diff': 6.430999999994247e-06}, {'time': 0.037347264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037352528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.26400000000482e-06, 'source_diff': 5.26400000000482e-06}, {'time': 0.037353, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037363583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0583000000001508e-05, 'source_diff': 1.0583000000001508e-05}, {'time': 0.037364056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037373083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.027000000001728e-06, 'source_diff': 9.027000000001728e-06}, {'time': 0.037373556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037378931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.374999999994967e-06, 'source_diff': 5.374999999994967e-06}, {'time': 0.037379403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201110 08:32:45.908" endtime="20201110 08:32:45.920"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:45.898" endtime="20201110 08:32:45.922"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:32:45.979" level="INFO">${debug-compressed} = {'time': [0.036982208, 0.036982681, 0.036989917, 0.036990389, 0.037001069, 0.037001542, 0.037009125, 0.037009597, 0.037016931, 0.037017403, 0.037026736, 0.037027208, 0.037032722, 0.037033194, 0.037041...</msg>
<status status="PASS" starttime="20201110 08:32:45.923" endtime="20201110 08:32:45.979"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:45.988" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:32:45.986" endtime="20201110 08:32:45.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:45.997" level="INFO">VALUE: {'time': [0.036982208, 0.036982681, 0.036989917, 0.036990389, 0.037001069, 0.037001542, 0.037009125, 0.037009597, 0.037016931, 0.037017403, 0.037026736, 0.037027208, 0.037032722, 0.037033194, 0.037041972, 0.037042444, 0.037049083, 0.037049556, 0.0370545, 0.037054972, 0.037062014, 0.037062486, 0.037072347, 0.037072819, 0.037081333, 0.037081806, 0.037088833, 0.037089306, 0.037096153, 0.037096625, 0.037103556, 0.037104028, 0.037114403, 0.037114875, 0.037122125, 0.037122597, 0.037133333, 0.037133875, 0.037141736, 0.037142208, 0.037150931, 0.037151403, 0.037161444, 0.037161917, 0.037167194, 0.037167667, 0.037174181, 0.037174653, 0.037184931, 0.037185403, 0.037191514, 0.037191986, 0.037196514, 0.037196986, 0.037205597, 0.037206069, 0.037214681, 0.037215153, 0.037222722, 0.037223194, 0.037231486, 0.037231958, 0.037238361, 0.037238833, 0.037247972, 0.037248444, 0.037254736, 0.037255208, 0.037259931, 0.037260472, 0.037269042, 0.037269514, 0.037278681, 0.037279153, 0.037287847, 0.037288319, 0.037296389, 0.037296861, 0.037303792, 0.037304264, 0.037309806, 0.037310347, 0.037314861, 0.037315333, 0.037324778, 0.03732525, 0.037333431, 0.037333903, 0.037339889, 0.037340361, 0.037346792, 0.037347264, 0.037352528, 0.037353, 0.037363583, 0.037364056, 0.037373083, 0.037373556, 0.037378931, 0.037379403], 'source_diff': [0, 4.7300000000083386e-07, 7.235999999993803e-06, 4.720000000013602e-07, 1.0679999999999024e-05, 4.7300000000083386e-07, 7.582999999998508e-06, 4.720000000013602e-07, 7.33400000000467e-06, 4.7199999999442133e-07, 9.333000000000258e-06, 4.720000000013602e-07, 5.5139999999981315e-06, 4.720000000013602e-07, 8.778000000000952e-06, 4.720000000013602e-07, 6.638999999995787e-06, 4.7300000000083386e-07, 4.943999999999782e-06, 4.720000000013602e-07, 7.0419999999987715e-06, 4.720000000013602e-07, 9.860999999999898e-06, 4.720000000013602e-07, 8.514000000001132e-06, 4.7300000000083386e-07, 7.026999999999728e-06, 4.7300000000083386e-07, 6.8469999999973274e-06, 4.720000000013602e-07, 6.931000000001686e-06, 4.7199999999442133e-07, 1.0374999999999968e-05, 4.720000000013602e-07, 7.250000000000312e-06, 4.720000000013602e-07, 1.0735999999997303e-05, 5.419999999992098e-07, 7.861000000004836e-06, 4.720000000013602e-07, 8.722999999995207e-06, 4.720000000013602e-07, 1.0041000000002298e-05, 4.7300000000083386e-07, 5.276999999997978e-06, 4.7300000000083386e-07, 6.513999999999132e-06, 4.720000000013602e-07, 1.0277999999995513e-05, 4.720000000013602e-07, 6.111000000003086e-06, 4.720000000013602e-07, 4.527999999996701e-06, 4.720000000013602e-07, 8.610999999998648e-06, 4.720000000013602e-07, 8.611999999998121e-06, 4.720000000013602e-07, 7.568999999998938e-06, 4.720000000013602e-07, 8.292000000000022e-06, 4.720000000013602e-07, 6.402999999995107e-06, 4.720000000013602e-07, 9.138999999998287e-06, 4.720000000013602e-07, 6.291999999998021e-06, 4.720000000013602e-07, 4.723000000005084e-06, 5.409999999997361e-07, 8.569999999999411e-06, 4.7199999999442133e-07, 9.167000000004366e-06, 4.720000000013602e-07, 8.693999999996593e-06, 4.720000000013602e-07, 8.069999999998911e-06, 4.720000000013602e-07, 6.931000000001686e-06, 4.7199999999442133e-07, 5.54200000000421e-06, 5.409999999997361e-07, 4.513999999997131e-06, 4.720000000013602e-07, 9.445000000003756e-06, 4.7199999999442133e-07, 8.181000000002936e-06, 4.720000000013602e-07, 5.985999999999492e-06, 4.720000000013602e-07, 6.430999999994247e-06, 4.720000000013602e-07, 5.26400000000482e-06, 4.7199999999442133e-07, 1.0583000000001508e-05, 4.7300000000083386e-07, 9.027000000001728e-06, 4.7300000000083386e-07, 5.374999999994967e-06, 4.720000000013602e-07], 'sourceeventdiff': [0, 4.7300000000083386e-07, 7.235999999993803e-06, 4.720000000013602e-07, 1.0679999999999024e-05, 4.7300000000083386e-07, 7.582999999998508e-06, 4.720000000013602e-07, 7.33400000000467e-06, 4.7199999999442133e-07, 9.333000000000258e-06, 4.720000000013602e-07, 5.5139999999981315e-06, 4.720000000013602e-07, 8.778000000000952e-06, 4.720000000013602e-07, 6.638999999995787e-06, 4.7300000000083386e-07, 4.943999999999782e-06, 4.720000000013602e-07, 7.0419999999987715e-06, 4.720000000013602e-07, 9.860999999999898e-06, 4.720000000013602e-07, 8.514000000001132e-06, 4.7300000000083386e-07, 7.026999999999728e-06, 4.7300000000083386e-07, 6.8469999999973274e-06, 4.720000000013602e-07, 6.931000000001686e-06, 4.7199999999442133e-07, 1.0374999999999968e-05, 4.720000000013602e-07, 7.250000000000312e-06, 4.720000000013602e-07, 1.0735999999997303e-05, 5.419999999992098e-07, 7.861000000004836e-06, 4.720000000013602e-07, 8.722999999995207e-06, 4.720000000013602e-07, 1.0041000000002298e-05, 4.7300000000083386e-07, 5.276999999997978e-06, 4.7300000000083386e-07, 6.513999999999132e-06, 4.720000000013602e-07, 1.0277999999995513e-05, 4.720000000013602e-07, 6.111000000003086e-06, 4.720000000013602e-07, 4.527999999996701e-06, 4.720000000013602e-07, 8.610999999998648e-06, 4.720000000013602e-07, 8.611999999998121e-06, 4.720000000013602e-07, 7.568999999998938e-06, 4.720000000013602e-07, 8.292000000000022e-06, 4.720000000013602e-07, 6.402999999995107e-06, 4.720000000013602e-07, 9.138999999998287e-06, 4.720000000013602e-07, 6.291999999998021e-06, 4.720000000013602e-07, 4.723000000005084e-06, 5.409999999997361e-07, 8.569999999999411e-06, 4.7199999999442133e-07, 9.167000000004366e-06, 4.720000000013602e-07, 8.693999999996593e-06, 4.720000000013602e-07, 8.069999999998911e-06, 4.720000000013602e-07, 6.931000000001686e-06, 4.7199999999442133e-07, 5.54200000000421e-06, 5.409999999997361e-07, 4.513999999997131e-06, 4.720000000013602e-07, 9.445000000003756e-06, 4.7199999999442133e-07, 8.181000000002936e-06, 4.720000000013602e-07, 5.985999999999492e-06, 4.720000000013602e-07, 6.430999999994247e-06, 4.720000000013602e-07, 5.26400000000482e-06, 4.7199999999442133e-07, 1.0583000000001508e-05, 4.7300000000083386e-07, 9.027000000001728e-06, 4.7300000000083386e-07, 5.374999999994967e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201110 08:32:45.990" endtime="20201110 08:32:45.999"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:45.981" endtime="20201110 08:32:46.001"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:46.012" level="INFO">${RESULT} = [{'time': 0.036982681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036990389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:32:46.003" endtime="20201110 08:32:46.012"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:46.043" level="INFO">${GPIO_OVERHEAD} = {'time': [0.036982681, 0.036990389, 0.037001542, 0.037009597, 0.037017403, 0.037027208, 0.037033194, 0.037042444, 0.037049556, 0.037054972, 0.037062486, 0.037072819, 0.037081806, 0.037089306, 0.037096...</msg>
<status status="PASS" starttime="20201110 08:32:46.014" endtime="20201110 08:32:46.043"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:46.053" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:32:46.051" endtime="20201110 08:32:46.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:46.058" level="INFO">VALUE: [4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201110 08:32:46.055" endtime="20201110 08:32:46.059"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:46.045" endtime="20201110 08:32:46.061"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:46.067" endtime="20201110 08:32:46.070"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:46.075" endtime="20201110 08:32:46.097"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:46.071" endtime="20201110 08:32:46.098"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:46.063" endtime="20201110 08:32:46.100"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:45.453" endtime="20201110 08:32:46.101"></status>
</kw>
<msg timestamp="20201110 08:32:46.101" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:46.121" endtime="20201110 08:32:46.131"></status>
</kw>
<msg timestamp="20201110 08:32:46.132" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:46.117" endtime="20201110 08:32:46.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:46.138" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:46.134" endtime="20201110 08:32:46.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:46.141" endtime="20201110 08:32:46.144"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:46.110" endtime="20201110 08:32:46.146"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:46.105" endtime="20201110 08:32:46.147"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:46.165" endtime="20201110 08:32:46.497"></status>
</kw>
<msg timestamp="20201110 08:32:46.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035705292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035705764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:46.161" endtime="20201110 08:32:46.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:46.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035705292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035705764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:46.507" endtime="20201110 08:32:46.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:46.526" endtime="20201110 08:32:46.530"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:46.154" endtime="20201110 08:32:46.531"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:46.149" endtime="20201110 08:32:46.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:46.542" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:32:46.540" endtime="20201110 08:32:46.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:46.554" level="INFO">VALUE: [{'time': 0.035705292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035705764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035712472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.708000000001102e-06, 'source_diff': 6.708000000001102e-06}, {'time': 0.035712944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035720819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.874999999997467e-06, 'source_diff': 7.874999999997467e-06}, {'time': 0.035721292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035731153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.860999999999898e-06, 'source_diff': 9.860999999999898e-06}, {'time': 0.035731625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035738875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.250000000000312e-06, 'source_diff': 7.250000000000312e-06}, {'time': 0.035739347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.03574975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0402999999999107e-05, 'source_diff': 1.0402999999999107e-05}, {'time': 0.035750222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035757778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.555999999998841e-06, 'source_diff': 7.555999999998841e-06}, {'time': 0.03575825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035765917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.667000000002866e-06, 'source_diff': 7.667000000002866e-06}, {'time': 0.035766389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035771847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.457999999999852e-06, 'source_diff': 5.457999999999852e-06}, {'time': 0.035772319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035779583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.263999999999882e-06, 'source_diff': 7.263999999999882e-06}, {'time': 0.035780056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035788611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.555000000000368e-06, 'source_diff': 8.555000000000368e-06}, {'time': 0.035789153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.035794819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.666000000001392e-06, 'source_diff': 5.666000000001392e-06}, {'time': 0.035795292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035802861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.568999999998938e-06, 'source_diff': 7.568999999998938e-06}, {'time': 0.035803333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035811097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.764000000000382e-06, 'source_diff': 7.764000000000382e-06}, {'time': 0.035811569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035817472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.903000000001546e-06, 'source_diff': 5.903000000001546e-06}, {'time': 0.035817944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.03582625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.305999999999591e-06, 'source_diff': 8.305999999999591e-06}, {'time': 0.035826722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035831458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.735999999998242e-06, 'source_diff': 4.735999999998242e-06}, {'time': 0.035831931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035839403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.472000000001422e-06, 'source_diff': 7.472000000001422e-06}, {'time': 0.035839875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035849611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.736000000003242e-06, 'source_diff': 9.736000000003242e-06}, {'time': 0.035850083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035859542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.459000000003326e-06, 'source_diff': 9.459000000003326e-06}, {'time': 0.035860014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035868917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.902999999997607e-06, 'source_diff': 8.902999999997607e-06}, {'time': 0.035869389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035876972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.582999999998508e-06, 'source_diff': 7.582999999998508e-06}, {'time': 0.035877444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035887403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.958999999996887e-06, 'source_diff': 9.958999999996887e-06}, {'time': 0.035887875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035895319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.444000000002282e-06, 'source_diff': 7.444000000002282e-06}, {'time': 0.035895792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035901792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.035902264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035908903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.638999999995787e-06, 'source_diff': 6.638999999995787e-06}, {'time': 0.035909375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035915222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.846999999996327e-06, 'source_diff': 5.846999999996327e-06}, {'time': 0.035915764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000061487e-07, 'source_diff': 5.420000000061487e-07}, {'time': 0.035924653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.888999999998037e-06, 'source_diff': 8.888999999998037e-06}, {'time': 0.035925125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035931958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8329999999977575e-06, 'source_diff': 6.8329999999977575e-06}, {'time': 0.035932431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035937903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.035938375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035942819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.443999999999282e-06, 'source_diff': 4.443999999999282e-06}, {'time': 0.035943292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035952431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.138999999998287e-06, 'source_diff': 9.138999999998287e-06}, {'time': 0.035952903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035960556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.652999999996357e-06, 'source_diff': 7.652999999996357e-06}, {'time': 0.035961028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035970778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.750000000002812e-06, 'source_diff': 9.750000000002812e-06}, {'time': 0.03597125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035980389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.138999999998287e-06, 'source_diff': 9.138999999998287e-06}, {'time': 0.035980861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035988417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.555999999998841e-06, 'source_diff': 7.555999999998841e-06}, {'time': 0.035988889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035993542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.035994014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036001042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0279999999992016e-06, 'source_diff': 7.0279999999992016e-06}, {'time': 0.036001514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036012417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0902999999999607e-05, 'source_diff': 1.0902999999999607e-05}, {'time': 0.036012889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036018889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.036019361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036024014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.036024486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036028792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.305999999995591e-06, 'source_diff': 4.305999999995591e-06}, {'time': 0.036029264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036036306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0419999999987715e-06, 'source_diff': 7.0419999999987715e-06}, {'time': 0.036036778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036045792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.014000000001632e-06, 'source_diff': 9.014000000001632e-06}, {'time': 0.036046264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03605425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.986000000001492e-06, 'source_diff': 7.986000000001492e-06}, {'time': 0.036054722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036059153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.430999999999186e-06, 'source_diff': 4.430999999999186e-06}, {'time': 0.036059625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036064264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.036064736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0360745, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.764000000002382e-06, 'source_diff': 9.764000000002382e-06}, {'time': 0.036074972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036080236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.26400000000482e-06, 'source_diff': 5.26400000000482e-06}, {'time': 0.036080708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036090153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.444999999996817e-06, 'source_diff': 9.444999999996817e-06}, {'time': 0.036090625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201110 08:32:46.544" endtime="20201110 08:32:46.556"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:46.534" endtime="20201110 08:32:46.558"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:32:46.614" level="INFO">${debug-compressed} = {'time': [0.035705292, 0.035705764, 0.035712472, 0.035712944, 0.035720819, 0.035721292, 0.035731153, 0.035731625, 0.035738875, 0.035739347, 0.03574975, 0.035750222, 0.035757778, 0.03575825, 0.03576591...</msg>
<status status="PASS" starttime="20201110 08:32:46.560" endtime="20201110 08:32:46.615"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:46.624" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:32:46.621" endtime="20201110 08:32:46.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:46.633" level="INFO">VALUE: {'time': [0.035705292, 0.035705764, 0.035712472, 0.035712944, 0.035720819, 0.035721292, 0.035731153, 0.035731625, 0.035738875, 0.035739347, 0.03574975, 0.035750222, 0.035757778, 0.03575825, 0.035765917, 0.035766389, 0.035771847, 0.035772319, 0.035779583, 0.035780056, 0.035788611, 0.035789153, 0.035794819, 0.035795292, 0.035802861, 0.035803333, 0.035811097, 0.035811569, 0.035817472, 0.035817944, 0.03582625, 0.035826722, 0.035831458, 0.035831931, 0.035839403, 0.035839875, 0.035849611, 0.035850083, 0.035859542, 0.035860014, 0.035868917, 0.035869389, 0.035876972, 0.035877444, 0.035887403, 0.035887875, 0.035895319, 0.035895792, 0.035901792, 0.035902264, 0.035908903, 0.035909375, 0.035915222, 0.035915764, 0.035924653, 0.035925125, 0.035931958, 0.035932431, 0.035937903, 0.035938375, 0.035942819, 0.035943292, 0.035952431, 0.035952903, 0.035960556, 0.035961028, 0.035970778, 0.03597125, 0.035980389, 0.035980861, 0.035988417, 0.035988889, 0.035993542, 0.035994014, 0.036001042, 0.036001514, 0.036012417, 0.036012889, 0.036018889, 0.036019361, 0.036024014, 0.036024486, 0.036028792, 0.036029264, 0.036036306, 0.036036778, 0.036045792, 0.036046264, 0.03605425, 0.036054722, 0.036059153, 0.036059625, 0.036064264, 0.036064736, 0.0360745, 0.036074972, 0.036080236, 0.036080708, 0.036090153, 0.036090625], 'source_diff': [0, 4.720000000013602e-07, 6.708000000001102e-06, 4.720000000013602e-07, 7.874999999997467e-06, 4.7300000000083386e-07, 9.860999999999898e-06, 4.720000000013602e-07, 7.250000000000312e-06, 4.7199999999442133e-07, 1.0402999999999107e-05, 4.720000000013602e-07, 7.555999999998841e-06, 4.720000000013602e-07, 7.667000000002866e-06, 4.720000000013602e-07, 5.457999999999852e-06, 4.7199999999442133e-07, 7.263999999999882e-06, 4.7300000000083386e-07, 8.555000000000368e-06, 5.419999999992098e-07, 5.666000000001392e-06, 4.7300000000083386e-07, 7.568999999998938e-06, 4.720000000013602e-07, 7.764000000000382e-06, 4.720000000013602e-07, 5.903000000001546e-06, 4.7199999999442133e-07, 8.305999999999591e-06, 4.720000000013602e-07, 4.735999999998242e-06, 4.7300000000083386e-07, 7.472000000001422e-06, 4.720000000013602e-07, 9.736000000003242e-06, 4.7199999999442133e-07, 9.459000000003326e-06, 4.720000000013602e-07, 8.902999999997607e-06, 4.720000000013602e-07, 7.582999999998508e-06, 4.720000000013602e-07, 9.958999999996887e-06, 4.720000000013602e-07, 7.444000000002282e-06, 4.7300000000083386e-07, 5.999999999999062e-06, 4.720000000013602e-07, 6.638999999995787e-06, 4.720000000013602e-07, 5.846999999996327e-06, 5.420000000061487e-07, 8.888999999998037e-06, 4.720000000013602e-07, 6.8329999999977575e-06, 4.7300000000083386e-07, 5.471999999999422e-06, 4.720000000013602e-07, 4.443999999999282e-06, 4.7300000000083386e-07, 9.138999999998287e-06, 4.720000000013602e-07, 7.652999999996357e-06, 4.720000000013602e-07, 9.750000000002812e-06, 4.720000000013602e-07, 9.138999999998287e-06, 4.720000000013602e-07, 7.555999999998841e-06, 4.720000000013602e-07, 4.653000000000296e-06, 4.7199999999442133e-07, 7.0279999999992016e-06, 4.720000000013602e-07, 1.0902999999999607e-05, 4.720000000013602e-07, 5.999999999999062e-06, 4.720000000013602e-07, 4.653000000000296e-06, 4.720000000013602e-07, 4.305999999995591e-06, 4.720000000013602e-07, 7.0419999999987715e-06, 4.720000000013602e-07, 9.014000000001632e-06, 4.720000000013602e-07, 7.986000000001492e-06, 4.7199999999442133e-07, 4.430999999999186e-06, 4.720000000013602e-07, 4.639000000000726e-06, 4.720000000013602e-07, 9.764000000002382e-06, 4.7199999999442133e-07, 5.26400000000482e-06, 4.720000000013602e-07, 9.444999999996817e-06, 4.720000000013602e-07], 'sourceeventdiff': [0, 4.720000000013602e-07, 6.708000000001102e-06, 4.720000000013602e-07, 7.874999999997467e-06, 4.7300000000083386e-07, 9.860999999999898e-06, 4.720000000013602e-07, 7.250000000000312e-06, 4.7199999999442133e-07, 1.0402999999999107e-05, 4.720000000013602e-07, 7.555999999998841e-06, 4.720000000013602e-07, 7.667000000002866e-06, 4.720000000013602e-07, 5.457999999999852e-06, 4.7199999999442133e-07, 7.263999999999882e-06, 4.7300000000083386e-07, 8.555000000000368e-06, 5.419999999992098e-07, 5.666000000001392e-06, 4.7300000000083386e-07, 7.568999999998938e-06, 4.720000000013602e-07, 7.764000000000382e-06, 4.720000000013602e-07, 5.903000000001546e-06, 4.7199999999442133e-07, 8.305999999999591e-06, 4.720000000013602e-07, 4.735999999998242e-06, 4.7300000000083386e-07, 7.472000000001422e-06, 4.720000000013602e-07, 9.736000000003242e-06, 4.7199999999442133e-07, 9.459000000003326e-06, 4.720000000013602e-07, 8.902999999997607e-06, 4.720000000013602e-07, 7.582999999998508e-06, 4.720000000013602e-07, 9.958999999996887e-06, 4.720000000013602e-07, 7.444000000002282e-06, 4.7300000000083386e-07, 5.999999999999062e-06, 4.720000000013602e-07, 6.638999999995787e-06, 4.720000000013602e-07, 5.846999999996327e-06, 5.420000000061487e-07, 8.888999999998037e-06, 4.720000000013602e-07, 6.8329999999977575e-06, 4.7300000000083386e-07, 5.471999999999422e-06, 4.720000000013602e-07, 4.443999999999282e-06, 4.7300000000083386e-07, 9.138999999998287e-06, 4.720000000013602e-07, 7.652999999996357e-06, 4.720000000013602e-07, 9.750000000002812e-06, 4.720000000013602e-07, 9.138999999998287e-06, 4.720000000013602e-07, 7.555999999998841e-06, 4.720000000013602e-07, 4.653000000000296e-06, 4.7199999999442133e-07, 7.0279999999992016e-06, 4.720000000013602e-07, 1.0902999999999607e-05, 4.720000000013602e-07, 5.999999999999062e-06, 4.720000000013602e-07, 4.653000000000296e-06, 4.720000000013602e-07, 4.305999999995591e-06, 4.720000000013602e-07, 7.0419999999987715e-06, 4.720000000013602e-07, 9.014000000001632e-06, 4.720000000013602e-07, 7.986000000001492e-06, 4.7199999999442133e-07, 4.430999999999186e-06, 4.720000000013602e-07, 4.639000000000726e-06, 4.720000000013602e-07, 9.764000000002382e-06, 4.7199999999442133e-07, 5.26400000000482e-06, 4.720000000013602e-07, 9.444999999996817e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201110 08:32:46.626" endtime="20201110 08:32:46.635"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:46.616" endtime="20201110 08:32:46.636"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:46.647" level="INFO">${RESULT} = [{'time': 0.035705764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035712944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:32:46.638" endtime="20201110 08:32:46.647"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:46.678" level="INFO">${GPIO_OVERHEAD} = {'time': [0.035705764, 0.035712944, 0.035721292, 0.035731625, 0.035739347, 0.035750222, 0.03575825, 0.035766389, 0.035772319, 0.035780056, 0.035789153, 0.035795292, 0.035803333, 0.035811569, 0.0358179...</msg>
<status status="PASS" starttime="20201110 08:32:46.649" endtime="20201110 08:32:46.678"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:46.688" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:32:46.686" endtime="20201110 08:32:46.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:46.693" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 5.419999999992098e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.420000000061487e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201110 08:32:46.690" endtime="20201110 08:32:46.694"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:46.680" endtime="20201110 08:32:46.696"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:46.702" endtime="20201110 08:32:46.704"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:46.710" endtime="20201110 08:32:46.732"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:46.706" endtime="20201110 08:32:46.734"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:46.697" endtime="20201110 08:32:46.736"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:46.102" endtime="20201110 08:32:46.736"></status>
</kw>
<msg timestamp="20201110 08:32:46.737" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:46.757" endtime="20201110 08:32:46.767"></status>
</kw>
<msg timestamp="20201110 08:32:46.768" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:46.753" endtime="20201110 08:32:46.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:46.774" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:46.770" endtime="20201110 08:32:46.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:46.777" endtime="20201110 08:32:46.780"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:46.746" endtime="20201110 08:32:46.782"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:46.741" endtime="20201110 08:32:46.783"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:46.801" endtime="20201110 08:32:47.148"></status>
</kw>
<msg timestamp="20201110 08:32:47.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036841958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036842431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:46.798" endtime="20201110 08:32:47.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:47.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036841958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036842431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:47.157" endtime="20201110 08:32:47.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:47.177" endtime="20201110 08:32:47.180"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:46.789" endtime="20201110 08:32:47.182"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:46.785" endtime="20201110 08:32:47.183"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:47.193" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:32:47.190" endtime="20201110 08:32:47.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:47.204" level="INFO">VALUE: [{'time': 0.036841958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036842431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036853111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0679999999999024e-05, 'source_diff': 1.0679999999999024e-05}, {'time': 0.036853583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036862514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.930999999996747e-06, 'source_diff': 8.930999999996747e-06}, {'time': 0.036862986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036873889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0902999999999607e-05, 'source_diff': 1.0902999999999607e-05}, {'time': 0.036874361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036882222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.860999999997897e-06, 'source_diff': 7.860999999997897e-06}, {'time': 0.036882694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036890167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.473000000000896e-06, 'source_diff': 7.473000000000896e-06}, {'time': 0.036890639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036901431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0791999999995583e-05, 'source_diff': 1.0791999999995583e-05}, {'time': 0.036901903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036909889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.986000000001492e-06, 'source_diff': 7.986000000001492e-06}, {'time': 0.036910361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036916264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.902999999994607e-06, 'source_diff': 5.902999999994607e-06}, {'time': 0.036916736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036921278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.54200000000321e-06, 'source_diff': 4.54200000000321e-06}, {'time': 0.03692175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036929208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.457999999994913e-06, 'source_diff': 7.457999999994913e-06}, {'time': 0.036929681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036937347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.666000000003392e-06, 'source_diff': 7.666000000003392e-06}, {'time': 0.036937819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036943292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.473000000005834e-06, 'source_diff': 5.473000000005834e-06}, {'time': 0.036943764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036952444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.680000000003962e-06, 'source_diff': 8.680000000003962e-06}, {'time': 0.036952986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036962611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.624999999999218e-06, 'source_diff': 9.624999999999218e-06}, {'time': 0.036963083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036968028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.9449999999992555e-06, 'source_diff': 4.9449999999992555e-06}, {'time': 0.0369685, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036977111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.610999999998648e-06, 'source_diff': 8.610999999998648e-06}, {'time': 0.036977583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036984514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.931000000001686e-06, 'source_diff': 6.931000000001686e-06}, {'time': 0.036984986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036995167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0181000000004936e-05, 'source_diff': 1.0181000000004936e-05}, {'time': 0.036995639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037006444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0805000000002618e-05, 'source_diff': 1.0805000000002618e-05}, {'time': 0.037006917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037017833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0915999999999704e-05, 'source_diff': 1.0915999999999704e-05}, {'time': 0.037018306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037029097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.079099999999611e-05, 'source_diff': 1.079099999999611e-05}, {'time': 0.037029569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037039319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.750000000002812e-06, 'source_diff': 9.750000000002812e-06}, {'time': 0.037039792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037047042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.250000000000312e-06, 'source_diff': 7.250000000000312e-06}, {'time': 0.037047514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037054764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.250000000000312e-06, 'source_diff': 7.250000000000312e-06}, {'time': 0.037055236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037065208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.972000000003922e-06, 'source_diff': 9.972000000003922e-06}, {'time': 0.037065681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037075125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.443999999997343e-06, 'source_diff': 9.443999999997343e-06}, {'time': 0.037075597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037084528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.930999999996747e-06, 'source_diff': 8.930999999996747e-06}, {'time': 0.037085, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037094958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.957999999997413e-06, 'source_diff': 9.957999999997413e-06}, {'time': 0.037095431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037103278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.847000000005266e-06, 'source_diff': 7.847000000005266e-06}, {'time': 0.037103819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.037110306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.486999999999465e-06, 'source_diff': 6.486999999999465e-06}, {'time': 0.037110778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037117125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.347000000003766e-06, 'source_diff': 6.347000000003766e-06}, {'time': 0.037117597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037126375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.778000000000952e-06, 'source_diff': 8.778000000000952e-06}, {'time': 0.037126847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037134458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.611000000004586e-06, 'source_diff': 7.611000000004586e-06}, {'time': 0.037134931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037142653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.721999999994733e-06, 'source_diff': 7.721999999994733e-06}, {'time': 0.037143125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037147444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.319000000002626e-06, 'source_diff': 4.319000000002626e-06}, {'time': 0.037147917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037152444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.526999999997228e-06, 'source_diff': 4.526999999997228e-06}, {'time': 0.037152917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037157708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.790999999997048e-06, 'source_diff': 4.790999999997048e-06}, {'time': 0.037158181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037163611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.430000000000712e-06, 'source_diff': 5.430000000000712e-06}, {'time': 0.037164083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037174486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0402999999999107e-05, 'source_diff': 1.0402999999999107e-05}, {'time': 0.037174958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037181569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.610999999996647e-06, 'source_diff': 6.610999999996647e-06}, {'time': 0.037182042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037186486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.443999999999282e-06, 'source_diff': 4.443999999999282e-06}, {'time': 0.037186958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037196917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.959000000003826e-06, 'source_diff': 9.959000000003826e-06}, {'time': 0.037197389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037205472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.083000000005947e-06, 'source_diff': 8.083000000005947e-06}, {'time': 0.037205944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037210375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.430999999999186e-06, 'source_diff': 4.430999999999186e-06}, {'time': 0.037210847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037215167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.3200000000021e-06, 'source_diff': 4.3200000000021e-06}, {'time': 0.037215639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037225917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0277999999995513e-05, 'source_diff': 1.0277999999995513e-05}, {'time': 0.037226389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037236264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.874999999999468e-06, 'source_diff': 9.874999999999468e-06}, {'time': 0.037236736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037244278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.5419999999992715e-06, 'source_diff': 7.5419999999992715e-06}, {'time': 0.03724475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037251597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8469999999973274e-06, 'source_diff': 6.8469999999973274e-06}, {'time': 0.037252069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201110 08:32:47.195" endtime="20201110 08:32:47.207"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:47.185" endtime="20201110 08:32:47.208"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:32:47.264" level="INFO">${debug-compressed} = {'time': [0.036841958, 0.036842431, 0.036853111, 0.036853583, 0.036862514, 0.036862986, 0.036873889, 0.036874361, 0.036882222, 0.036882694, 0.036890167, 0.036890639, 0.036901431, 0.036901903, 0.036909...</msg>
<status status="PASS" starttime="20201110 08:32:47.210" endtime="20201110 08:32:47.264"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:47.273" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:32:47.271" endtime="20201110 08:32:47.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:47.282" level="INFO">VALUE: {'time': [0.036841958, 0.036842431, 0.036853111, 0.036853583, 0.036862514, 0.036862986, 0.036873889, 0.036874361, 0.036882222, 0.036882694, 0.036890167, 0.036890639, 0.036901431, 0.036901903, 0.036909889, 0.036910361, 0.036916264, 0.036916736, 0.036921278, 0.03692175, 0.036929208, 0.036929681, 0.036937347, 0.036937819, 0.036943292, 0.036943764, 0.036952444, 0.036952986, 0.036962611, 0.036963083, 0.036968028, 0.0369685, 0.036977111, 0.036977583, 0.036984514, 0.036984986, 0.036995167, 0.036995639, 0.037006444, 0.037006917, 0.037017833, 0.037018306, 0.037029097, 0.037029569, 0.037039319, 0.037039792, 0.037047042, 0.037047514, 0.037054764, 0.037055236, 0.037065208, 0.037065681, 0.037075125, 0.037075597, 0.037084528, 0.037085, 0.037094958, 0.037095431, 0.037103278, 0.037103819, 0.037110306, 0.037110778, 0.037117125, 0.037117597, 0.037126375, 0.037126847, 0.037134458, 0.037134931, 0.037142653, 0.037143125, 0.037147444, 0.037147917, 0.037152444, 0.037152917, 0.037157708, 0.037158181, 0.037163611, 0.037164083, 0.037174486, 0.037174958, 0.037181569, 0.037182042, 0.037186486, 0.037186958, 0.037196917, 0.037197389, 0.037205472, 0.037205944, 0.037210375, 0.037210847, 0.037215167, 0.037215639, 0.037225917, 0.037226389, 0.037236264, 0.037236736, 0.037244278, 0.03724475, 0.037251597, 0.037252069], 'source_diff': [0, 4.7300000000083386e-07, 1.0679999999999024e-05, 4.720000000013602e-07, 8.930999999996747e-06, 4.720000000013602e-07, 1.0902999999999607e-05, 4.720000000013602e-07, 7.860999999997897e-06, 4.720000000013602e-07, 7.473000000000896e-06, 4.720000000013602e-07, 1.0791999999995583e-05, 4.720000000013602e-07, 7.986000000001492e-06, 4.720000000013602e-07, 5.902999999994607e-06, 4.720000000013602e-07, 4.54200000000321e-06, 4.720000000013602e-07, 7.457999999994913e-06, 4.7300000000083386e-07, 7.666000000003392e-06, 4.7199999999442133e-07, 5.473000000005834e-06, 4.7199999999442133e-07, 8.680000000003962e-06, 5.419999999992098e-07, 9.624999999999218e-06, 4.720000000013602e-07, 4.9449999999992555e-06, 4.720000000013602e-07, 8.610999999998648e-06, 4.720000000013602e-07, 6.931000000001686e-06, 4.7199999999442133e-07, 1.0181000000004936e-05, 4.7199999999442133e-07, 1.0805000000002618e-05, 4.7300000000083386e-07, 1.0915999999999704e-05, 4.7300000000083386e-07, 1.079099999999611e-05, 4.720000000013602e-07, 9.750000000002812e-06, 4.7300000000083386e-07, 7.250000000000312e-06, 4.7199999999442133e-07, 7.250000000000312e-06, 4.720000000013602e-07, 9.972000000003922e-06, 4.7300000000083386e-07, 9.443999999997343e-06, 4.720000000013602e-07, 8.930999999996747e-06, 4.720000000013602e-07, 9.957999999997413e-06, 4.7300000000083386e-07, 7.847000000005266e-06, 5.409999999997361e-07, 6.486999999999465e-06, 4.7199999999442133e-07, 6.347000000003766e-06, 4.720000000013602e-07, 8.778000000000952e-06, 4.7199999999442133e-07, 7.611000000004586e-06, 4.7300000000083386e-07, 7.721999999994733e-06, 4.720000000013602e-07, 4.319000000002626e-06, 4.7300000000083386e-07, 4.526999999997228e-06, 4.7300000000083386e-07, 4.790999999997048e-06, 4.7300000000083386e-07, 5.430000000000712e-06, 4.720000000013602e-07, 1.0402999999999107e-05, 4.720000000013602e-07, 6.610999999996647e-06, 4.7300000000083386e-07, 4.443999999999282e-06, 4.720000000013602e-07, 9.959000000003826e-06, 4.7199999999442133e-07, 8.083000000005947e-06, 4.7199999999442133e-07, 4.430999999999186e-06, 4.720000000013602e-07, 4.3200000000021e-06, 4.720000000013602e-07, 1.0277999999995513e-05, 4.720000000013602e-07, 9.874999999999468e-06, 4.720000000013602e-07, 7.5419999999992715e-06, 4.720000000013602e-07, 6.8469999999973274e-06, 4.720000000013602e-07], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'eventdiff': [0, 4.7300000000083386e-07, 1.0679999999999024e-05, 4.720000000013602e-07, 8.930999999996747e-06, 4.720000000013602e-07, 1.0902999999999607e-05, 4.720000000013602e-07, 7.860999999997897e-06, 4.720000000013602e-07, 7.473000000000896e-06, 4.720000000013602e-07, 1.0791999999995583e-05, 4.720000000013602e-07, 7.986000000001492e-06, 4.720000000013602e-07, 5.902999999994607e-06, 4.720000000013602e-07, 4.54200000000321e-06, 4.720000000013602e-07, 7.457999999994913e-06, 4.7300000000083386e-07, 7.666000000003392e-06, 4.7199999999442133e-07, 5.473000000005834e-06, 4.7199999999442133e-07, 8.680000000003962e-06, 5.419999999992098e-07, 9.624999999999218e-06, 4.720000000013602e-07, 4.9449999999992555e-06, 4.720000000013602e-07, 8.610999999998648e-06, 4.720000000013602e-07, 6.931000000001686e-06, 4.7199999999442133e-07, 1.0181000000004936e-05, 4.7199999999442133e-07, 1.0805000000002618e-05, 4.7300000000083386e-07, 1.0915999999999704e-05, 4.7300000000083386e-07, 1.079099999999611e-05, 4.720000000013602e-07, 9.750000000002812e-06, 4.7300000000083386e-07, 7.250000000000312e-06, 4.7199999999442133e-07, 7.250000000000312e-06, 4.720000000013602e-07, 9.972000000003922e-06, 4.7300000000083386e-07, 9.443999999997343e-06, 4.720000000013602e-07, 8.930999999996747e-06, 4.720000000013602e-07, 9.957999999997413e-06, 4.7300000000083386e-07, 7.847000000005266e-06, 5.409999999997361e-07, 6.486999999999465e-06, 4.7199999999442133e-07, 6.347000000003766e-06, 4.720000000013602e-07, 8.778000000000952e-06, 4.7199999999442133e-07, 7.611000000004586e-06, 4.7300000000083386e-07, 7.721999999994733e-06, 4.720000000013602e-07, 4.319000000002626e-06, 4.7300000000083386e-07, 4.526999999997228e-06, 4.7300000000083386e-07, 4.790999999997048e-06, 4.7300000000083386e-07, 5.430000000000712e-06, 4.720000000013602e-07, 1.0402999999999107e-05, 4.720000000013602e-07, 6.610999999996647e-06, 4.7300000000083386e-07, 4.443999999999282e-06, 4.720000000013602e-07, 9.959000000003826e-06, 4.7199999999442133e-07, 8.083000000005947e-06, 4.7199999999442133e-07, 4.430999999999186e-06, 4.720000000013602e-07, 4.3200000000021e-06, 4.720000000013602e-07, 1.0277999999995513e-05, 4.720000000013602e-07, 9.874999999999468e-06, 4.720000000013602e-07, 7.5419999999992715e-06, 4.720000000013602e-07, 6.8469999999973274e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201110 08:32:47.275" endtime="20201110 08:32:47.284"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:47.266" endtime="20201110 08:32:47.286"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:47.296" level="INFO">${RESULT} = [{'time': 0.036842431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036853583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:32:47.287" endtime="20201110 08:32:47.297"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:47.327" level="INFO">${GPIO_OVERHEAD} = {'time': [0.036842431, 0.036853583, 0.036862986, 0.036874361, 0.036882694, 0.036890639, 0.036901903, 0.036910361, 0.036916736, 0.03692175, 0.036929681, 0.036937819, 0.036943764, 0.036952986, 0.0369630...</msg>
<status status="PASS" starttime="20201110 08:32:47.298" endtime="20201110 08:32:47.328"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:47.337" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:32:47.335" endtime="20201110 08:32:47.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:47.343" level="INFO">VALUE: [4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 5.409999999997361e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201110 08:32:47.340" endtime="20201110 08:32:47.344"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:47.329" endtime="20201110 08:32:47.345"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:47.351" endtime="20201110 08:32:47.354"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:47.361" endtime="20201110 08:32:47.384"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:47.355" endtime="20201110 08:32:47.385"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:47.347" endtime="20201110 08:32:47.387"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:46.738" endtime="20201110 08:32:47.387"></status>
</kw>
<msg timestamp="20201110 08:32:47.388" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:47.407" endtime="20201110 08:32:47.419"></status>
</kw>
<msg timestamp="20201110 08:32:47.420" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:47.404" endtime="20201110 08:32:47.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:47.426" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:47.422" endtime="20201110 08:32:47.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:47.428" endtime="20201110 08:32:47.432"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:47.397" endtime="20201110 08:32:47.434"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:47.392" endtime="20201110 08:32:47.435"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:47.451" endtime="20201110 08:32:47.800"></status>
</kw>
<msg timestamp="20201110 08:32:47.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036804444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036804917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:47.448" endtime="20201110 08:32:47.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:47.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036804444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036804917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:47.809" endtime="20201110 08:32:47.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:47.828" endtime="20201110 08:32:47.832"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:47.441" endtime="20201110 08:32:47.833"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:47.436" endtime="20201110 08:32:47.835"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:47.844" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:32:47.842" endtime="20201110 08:32:47.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:47.855" level="INFO">VALUE: [{'time': 0.036804444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036804917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036813417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.500000000001562e-06, 'source_diff': 8.500000000001562e-06}, {'time': 0.036813889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036824069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0179999999998524e-05, 'source_diff': 1.0179999999998524e-05}, {'time': 0.036824542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036833472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.929999999997273e-06, 'source_diff': 8.929999999997273e-06}, {'time': 0.036833944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0368415, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.555999999998841e-06, 'source_diff': 7.555999999998841e-06}, {'time': 0.036841972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036847986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0139999999986316e-06, 'source_diff': 6.0139999999986316e-06}, {'time': 0.036848458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036858861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0402999999999107e-05, 'source_diff': 1.0402999999999107e-05}, {'time': 0.036859333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03687, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0666999999998927e-05, 'source_diff': 1.0666999999998927e-05}, {'time': 0.036870472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036876153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.681000000000436e-06, 'source_diff': 5.681000000000436e-06}, {'time': 0.036876625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036881167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.541999999996271e-06, 'source_diff': 4.541999999996271e-06}, {'time': 0.036881639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036887125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.485999999998992e-06, 'source_diff': 5.485999999998992e-06}, {'time': 0.036887597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036897972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0374999999999968e-05, 'source_diff': 1.0374999999999968e-05}, {'time': 0.036898444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036904653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2090000000000756e-06, 'source_diff': 6.2090000000000756e-06}, {'time': 0.036905125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036914778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.653000000005296e-06, 'source_diff': 9.653000000005296e-06}, {'time': 0.03691525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036922403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.153000000002796e-06, 'source_diff': 7.153000000002796e-06}, {'time': 0.036922875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036928764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.889000000001976e-06, 'source_diff': 5.889000000001976e-06}, {'time': 0.036929236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036934708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.036935181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036939625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.443999999999282e-06, 'source_diff': 4.443999999999282e-06}, {'time': 0.036940097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036947042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.945000000001256e-06, 'source_diff': 6.945000000001256e-06}, {'time': 0.036947514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036955014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.500000000000562e-06, 'source_diff': 7.500000000000562e-06}, {'time': 0.036955556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036961847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.290999999998548e-06, 'source_diff': 6.290999999998548e-06}, {'time': 0.036962319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036973125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0806000000002092e-05, 'source_diff': 1.0806000000002092e-05}, {'time': 0.036973597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036977917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.3200000000021e-06, 'source_diff': 4.3200000000021e-06}, {'time': 0.036978389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036986889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.500000000001562e-06, 'source_diff': 8.500000000001562e-06}, {'time': 0.036987361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036991792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.430999999999186e-06, 'source_diff': 4.430999999999186e-06}, {'time': 0.036992264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037002444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0180000000005462e-05, 'source_diff': 1.0180000000005462e-05}, {'time': 0.037002917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037007778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.860999999994897e-06, 'source_diff': 4.860999999994897e-06}, {'time': 0.03700825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037017389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.138999999998287e-06, 'source_diff': 9.138999999998287e-06}, {'time': 0.037017861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037023639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7779999999979514e-06, 'source_diff': 5.7779999999979514e-06}, {'time': 0.037024111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03702875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.037029222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037039625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0402999999999107e-05, 'source_diff': 1.0402999999999107e-05}, {'time': 0.037040097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037044931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.83400000000217e-06, 'source_diff': 4.83400000000217e-06}, {'time': 0.037045403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037052847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.444000000002282e-06, 'source_diff': 7.444000000002282e-06}, {'time': 0.037053319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037061931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.611999999998121e-06, 'source_diff': 8.611999999998121e-06}, {'time': 0.037062403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037067264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.861000000001836e-06, 'source_diff': 4.861000000001836e-06}, {'time': 0.037067736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037072583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.847000000002266e-06, 'source_diff': 4.847000000002266e-06}, {'time': 0.037073056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037082806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.750000000002812e-06, 'source_diff': 9.750000000002812e-06}, {'time': 0.037083278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037088028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.75000000000475e-06, 'source_diff': 4.75000000000475e-06}, {'time': 0.0370885, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037096792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.292000000000022e-06, 'source_diff': 8.292000000000022e-06}, {'time': 0.037097264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037107542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0278000000002452e-05, 'source_diff': 1.0278000000002452e-05}, {'time': 0.037108014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037114125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.110999999996147e-06, 'source_diff': 6.110999999996147e-06}, {'time': 0.037114597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037122472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.874999999997467e-06, 'source_diff': 7.874999999997467e-06}, {'time': 0.037122944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037130306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.36200000000381e-06, 'source_diff': 7.36200000000381e-06}, {'time': 0.037130778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037137319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.540999999998798e-06, 'source_diff': 6.540999999998798e-06}, {'time': 0.037137792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037144431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.638999999995787e-06, 'source_diff': 6.638999999995787e-06}, {'time': 0.037144903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037152222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.318999999998688e-06, 'source_diff': 7.318999999998688e-06}, {'time': 0.037152694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037159542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.847999999996801e-06, 'source_diff': 6.847999999996801e-06}, {'time': 0.037160014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037169486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.472000000003422e-06, 'source_diff': 9.472000000003422e-06}, {'time': 0.037169958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037176778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.819999999997661e-06, 'source_diff': 6.819999999997661e-06}, {'time': 0.03717725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037183333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0829999999970075e-06, 'source_diff': 6.0829999999970075e-06}, {'time': 0.037183806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}]</msg>
<status status="PASS" starttime="20201110 08:32:47.846" endtime="20201110 08:32:47.858"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:47.836" endtime="20201110 08:32:47.860"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:32:47.918" level="INFO">${debug-compressed} = {'time': [0.036804444, 0.036804917, 0.036813417, 0.036813889, 0.036824069, 0.036824542, 0.036833472, 0.036833944, 0.0368415, 0.036841972, 0.036847986, 0.036848458, 0.036858861, 0.036859333, 0.03687, 0...</msg>
<status status="PASS" starttime="20201110 08:32:47.861" endtime="20201110 08:32:47.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:47.927" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:32:47.925" endtime="20201110 08:32:47.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:47.937" level="INFO">VALUE: {'time': [0.036804444, 0.036804917, 0.036813417, 0.036813889, 0.036824069, 0.036824542, 0.036833472, 0.036833944, 0.0368415, 0.036841972, 0.036847986, 0.036848458, 0.036858861, 0.036859333, 0.03687, 0.036870472, 0.036876153, 0.036876625, 0.036881167, 0.036881639, 0.036887125, 0.036887597, 0.036897972, 0.036898444, 0.036904653, 0.036905125, 0.036914778, 0.03691525, 0.036922403, 0.036922875, 0.036928764, 0.036929236, 0.036934708, 0.036935181, 0.036939625, 0.036940097, 0.036947042, 0.036947514, 0.036955014, 0.036955556, 0.036961847, 0.036962319, 0.036973125, 0.036973597, 0.036977917, 0.036978389, 0.036986889, 0.036987361, 0.036991792, 0.036992264, 0.037002444, 0.037002917, 0.037007778, 0.03700825, 0.037017389, 0.037017861, 0.037023639, 0.037024111, 0.03702875, 0.037029222, 0.037039625, 0.037040097, 0.037044931, 0.037045403, 0.037052847, 0.037053319, 0.037061931, 0.037062403, 0.037067264, 0.037067736, 0.037072583, 0.037073056, 0.037082806, 0.037083278, 0.037088028, 0.0370885, 0.037096792, 0.037097264, 0.037107542, 0.037108014, 0.037114125, 0.037114597, 0.037122472, 0.037122944, 0.037130306, 0.037130778, 0.037137319, 0.037137792, 0.037144431, 0.037144903, 0.037152222, 0.037152694, 0.037159542, 0.037160014, 0.037169486, 0.037169958, 0.037176778, 0.03717725, 0.037183333, 0.037183806], 'source_diff': [0, 4.7300000000083386e-07, 8.500000000001562e-06, 4.720000000013602e-07, 1.0179999999998524e-05, 4.7300000000083386e-07, 8.929999999997273e-06, 4.720000000013602e-07, 7.555999999998841e-06, 4.720000000013602e-07, 6.0139999999986316e-06, 4.720000000013602e-07, 1.0402999999999107e-05, 4.720000000013602e-07, 1.0666999999998927e-05, 4.720000000013602e-07, 5.681000000000436e-06, 4.720000000013602e-07, 4.541999999996271e-06, 4.720000000013602e-07, 5.485999999998992e-06, 4.720000000013602e-07, 1.0374999999999968e-05, 4.720000000013602e-07, 6.2090000000000756e-06, 4.7199999999442133e-07, 9.653000000005296e-06, 4.7199999999442133e-07, 7.153000000002796e-06, 4.720000000013602e-07, 5.889000000001976e-06, 4.7199999999442133e-07, 5.471999999999422e-06, 4.7300000000083386e-07, 4.443999999999282e-06, 4.720000000013602e-07, 6.945000000001256e-06, 4.720000000013602e-07, 7.500000000000562e-06, 5.419999999992098e-07, 6.290999999998548e-06, 4.720000000013602e-07, 1.0806000000002092e-05, 4.7199999999442133e-07, 4.3200000000021e-06, 4.720000000013602e-07, 8.500000000001562e-06, 4.720000000013602e-07, 4.430999999999186e-06, 4.7199999999442133e-07, 1.0180000000005462e-05, 4.7300000000083386e-07, 4.860999999994897e-06, 4.720000000013602e-07, 9.138999999998287e-06, 4.720000000013602e-07, 5.7779999999979514e-06, 4.720000000013602e-07, 4.639000000000726e-06, 4.720000000013602e-07, 1.0402999999999107e-05, 4.720000000013602e-07, 4.83400000000217e-06, 4.7199999999442133e-07, 7.444000000002282e-06, 4.720000000013602e-07, 8.611999999998121e-06, 4.720000000013602e-07, 4.861000000001836e-06, 4.7199999999442133e-07, 4.847000000002266e-06, 4.7300000000083386e-07, 9.750000000002812e-06, 4.7199999999442133e-07, 4.75000000000475e-06, 4.720000000013602e-07, 8.292000000000022e-06, 4.7199999999442133e-07, 1.0278000000002452e-05, 4.720000000013602e-07, 6.110999999996147e-06, 4.720000000013602e-07, 7.874999999997467e-06, 4.720000000013602e-07, 7.36200000000381e-06, 4.720000000013602e-07, 6.540999999998798e-06, 4.7300000000083386e-07, 6.638999999995787e-06, 4.720000000013602e-07, 7.318999999998688e-06, 4.720000000013602e-07, 6.847999999996801e-06, 4.720000000013602e-07, 9.472000000003422e-06, 4.720000000013602e-07, 6.819999999997661e-06, 4.720000000013602e-07, 6.0829999999970075e-06, 4.7300000000083386e-07], 'sourceeventdiff': [0, 4.7300000000083386e-07, 8.500000000001562e-06, 4.720000000013602e-07, 1.0179999999998524e-05, 4.7300000000083386e-07, 8.929999999997273e-06, 4.720000000013602e-07, 7.555999999998841e-06, 4.720000000013602e-07, 6.0139999999986316e-06, 4.720000000013602e-07, 1.0402999999999107e-05, 4.720000000013602e-07, 1.0666999999998927e-05, 4.720000000013602e-07, 5.681000000000436e-06, 4.720000000013602e-07, 4.541999999996271e-06, 4.720000000013602e-07, 5.485999999998992e-06, 4.720000000013602e-07, 1.0374999999999968e-05, 4.720000000013602e-07, 6.2090000000000756e-06, 4.7199999999442133e-07, 9.653000000005296e-06, 4.7199999999442133e-07, 7.153000000002796e-06, 4.720000000013602e-07, 5.889000000001976e-06, 4.7199999999442133e-07, 5.471999999999422e-06, 4.7300000000083386e-07, 4.443999999999282e-06, 4.720000000013602e-07, 6.945000000001256e-06, 4.720000000013602e-07, 7.500000000000562e-06, 5.419999999992098e-07, 6.290999999998548e-06, 4.720000000013602e-07, 1.0806000000002092e-05, 4.7199999999442133e-07, 4.3200000000021e-06, 4.720000000013602e-07, 8.500000000001562e-06, 4.720000000013602e-07, 4.430999999999186e-06, 4.7199999999442133e-07, 1.0180000000005462e-05, 4.7300000000083386e-07, 4.860999999994897e-06, 4.720000000013602e-07, 9.138999999998287e-06, 4.720000000013602e-07, 5.7779999999979514e-06, 4.720000000013602e-07, 4.639000000000726e-06, 4.720000000013602e-07, 1.0402999999999107e-05, 4.720000000013602e-07, 4.83400000000217e-06, 4.7199999999442133e-07, 7.444000000002282e-06, 4.720000000013602e-07, 8.611999999998121e-06, 4.720000000013602e-07, 4.861000000001836e-06, 4.7199999999442133e-07, 4.847000000002266e-06, 4.7300000000083386e-07, 9.750000000002812e-06, 4.7199999999442133e-07, 4.75000000000475e-06, 4.720000000013602e-07, 8.292000000000022e-06, 4.7199999999442133e-07, 1.0278000000002452e-05, 4.720000000013602e-07, 6.110999999996147e-06, 4.720000000013602e-07, 7.874999999997467e-06, 4.720000000013602e-07, 7.36200000000381e-06, 4.720000000013602e-07, 6.540999999998798e-06, 4.7300000000083386e-07, 6.638999999995787e-06, 4.720000000013602e-07, 7.318999999998688e-06, 4.720000000013602e-07, 6.847999999996801e-06, 4.720000000013602e-07, 9.472000000003422e-06, 4.720000000013602e-07, 6.819999999997661e-06, 4.720000000013602e-07, 6.0829999999970075e-06, 4.7300000000083386e-07]}</msg>
<status status="PASS" starttime="20201110 08:32:47.930" endtime="20201110 08:32:47.939"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:47.920" endtime="20201110 08:32:47.941"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:47.951" level="INFO">${RESULT} = [{'time': 0.036804917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036813889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:32:47.942" endtime="20201110 08:32:47.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:47.982" level="INFO">${GPIO_OVERHEAD} = {'time': [0.036804917, 0.036813889, 0.036824542, 0.036833944, 0.036841972, 0.036848458, 0.036859333, 0.036870472, 0.036876625, 0.036881639, 0.036887597, 0.036898444, 0.036905125, 0.03691525, 0.0369228...</msg>
<status status="PASS" starttime="20201110 08:32:47.953" endtime="20201110 08:32:47.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:47.992" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:32:47.990" endtime="20201110 08:32:47.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:47.997" level="INFO">VALUE: [4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201110 08:32:47.994" endtime="20201110 08:32:47.998"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:47.984" endtime="20201110 08:32:48.000"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:48.006" endtime="20201110 08:32:48.009"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:48.014" endtime="20201110 08:32:48.036"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:48.010" endtime="20201110 08:32:48.038"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:48.002" endtime="20201110 08:32:48.039"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:47.389" endtime="20201110 08:32:48.040"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:34.897" endtime="20201110 08:32:48.040"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:48.050" endtime="20201110 08:32:48.073"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:48.046" endtime="20201110 08:32:48.077"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:48.043" endtime="20201110 08:32:48.077"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201110 08:32:34.710" endtime="20201110 08:32:48.078" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:48.100" endtime="20201110 08:32:48.122"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:48.094" endtime="20201110 08:32:48.124"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:48.159" endtime="20201110 08:32:48.174"></status>
</kw>
<msg timestamp="20201110 08:32:48.175" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:48.155" endtime="20201110 08:32:48.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:48.182" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:48.178" endtime="20201110 08:32:48.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:32:48.189" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:32:48.185" endtime="20201110 08:32:48.190"></status>
</kw>
<status status="FAIL" starttime="20201110 08:32:48.146" endtime="20201110 08:32:48.192"></status>
</kw>
<status status="FAIL" starttime="20201110 08:32:48.140" endtime="20201110 08:32:48.193"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:48.137" endtime="20201110 08:32:48.194"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:32:48.202" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:32:48.201" endtime="20201110 08:32:48.203"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:48.196" endtime="20201110 08:32:48.203"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:48.135" endtime="20201110 08:32:48.204"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:48.134" endtime="20201110 08:32:48.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:48.206" endtime="20201110 08:32:48.209"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:48.130" endtime="20201110 08:32:48.211"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:48.125" endtime="20201110 08:32:48.212"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:48.090" endtime="20201110 08:32:48.213"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201110 08:32:48.217" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:48.236" endtime="20201110 08:32:48.248"></status>
</kw>
<msg timestamp="20201110 08:32:48.250" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:48.233" endtime="20201110 08:32:48.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:48.256" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:48.252" endtime="20201110 08:32:48.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:48.258" endtime="20201110 08:32:48.262"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:48.226" endtime="20201110 08:32:48.264"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:48.221" endtime="20201110 08:32:48.265"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:48.282" endtime="20201110 08:32:48.651"></status>
</kw>
<msg timestamp="20201110 08:32:48.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.127046889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.127055722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:48.278" endtime="20201110 08:32:48.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:48.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.127046889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.127055722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:48.664" endtime="20201110 08:32:48.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:48.690" endtime="20201110 08:32:48.696"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:48.271" endtime="20201110 08:32:48.699"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:48.266" endtime="20201110 08:32:48.702"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:48.717" level="INFO">${RESULT} = [{'time': 0.127055722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.833000000013635e-06, 'source_diff': 8.833000000013635e-06}, {'time': 0.127069722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:32:48.704" endtime="20201110 08:32:48.718"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:48.765" level="INFO">${OVERHEAD} = {'time': [0.127055722, 0.127069722, 0.127084736, 0.127100736, 0.127114833, 0.127131917, 0.127145903, 0.127165917, 0.127183917, 0.127204014, 0.127222042, 0.127237986, 0.127257139, 0.127273083, 0.127288...</msg>
<status status="PASS" starttime="20201110 08:32:48.720" endtime="20201110 08:32:48.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:48.783" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:32:48.780" endtime="20201110 08:32:48.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:48.790" level="INFO">VALUE: [8.833000000013635e-06, 9.207999999982786e-06, 9.707999999997163e-06, 9.027999999994263e-06, 8.889000000011915e-06, 9.098000000012929e-06, 9.167000000004366e-06, 9.68099999998362e-06, 9.000000000009e-06, 9.291999999994083e-06, 9.708999999996637e-06, 9.138999999991348e-06, 9.346999999992889e-06, 9.680000000011901e-06, 8.83299999998588e-06, 9.597000000000078e-06, 9.694000000004532e-06, 9.027999999994263e-06, 9.36099999998552e-06, 8.861999999998371e-06, 9.167000000004366e-06, 9.014000000001632e-06, 9.499999999995623e-06, 9.195000000017384e-06, 9.513999999988254e-06, 9.347000000020644e-06, 9.513999999988254e-06, 9.542000000001272e-06, 9.526999999981411e-06, 9.51400000001601e-06, 8.84800000000574e-06, 9.499999999995623e-06, 9.193999999990154e-06, 9.221999999975417e-06, 9.346999999992889e-06, 9.457999999989974e-06, 8.860999999998898e-06, 9.179999999997523e-06, 9.124999999998717e-06, 9.180999999996997e-06, 8.860999999998898e-06, 9.179999999997523e-06, 9.208000000010541e-06, 8.847000000006267e-06, 9.68099999998362e-06, 9.346999999992889e-06, 9.513999999988254e-06, 9.540999999974042e-06, 9.541999999973516e-06, 9.014000000001632e-06]</msg>
<status status="PASS" starttime="20201110 08:32:48.786" endtime="20201110 08:32:48.790"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:48.769" endtime="20201110 08:32:48.792"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:48.798" endtime="20201110 08:32:48.801"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:48.807" endtime="20201110 08:32:48.829"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:48.803" endtime="20201110 08:32:48.831"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:48.794" endtime="20201110 08:32:48.832"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:48.218" endtime="20201110 08:32:48.833"></status>
</kw>
<msg timestamp="20201110 08:32:48.833" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:48.853" endtime="20201110 08:32:48.866"></status>
</kw>
<msg timestamp="20201110 08:32:48.867" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:48.850" endtime="20201110 08:32:48.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:48.874" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:48.870" endtime="20201110 08:32:48.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:48.876" endtime="20201110 08:32:48.880"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:48.842" endtime="20201110 08:32:48.881"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:48.838" endtime="20201110 08:32:48.883"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:48.900" endtime="20201110 08:32:49.243"></status>
</kw>
<msg timestamp="20201110 08:32:49.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037146458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037155986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:48.896" endtime="20201110 08:32:49.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:49.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037146458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037155986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:49.253" endtime="20201110 08:32:49.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:49.272" endtime="20201110 08:32:49.275"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:48.889" endtime="20201110 08:32:49.277"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:48.884" endtime="20201110 08:32:49.278"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:49.289" level="INFO">${RESULT} = [{'time': 0.037155986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.528000000001702e-06, 'source_diff': 9.528000000001702e-06}, {'time': 0.037174903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:32:49.280" endtime="20201110 08:32:49.289"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:49.322" level="INFO">${OVERHEAD} = {'time': [0.037155986, 0.037174903, 0.037188931, 0.037202931, 0.037221069, 0.037239139, 0.037258111, 0.037276097, 0.037290208, 0.037304222, 0.037324278, 0.037341278, 0.037359403, 0.037377389, 0.037393...</msg>
<status status="PASS" starttime="20201110 08:32:49.292" endtime="20201110 08:32:49.322"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:49.332" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:32:49.330" endtime="20201110 08:32:49.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:49.337" level="INFO">VALUE: [9.528000000001702e-06, 9.500000000002562e-06, 9.028000000001202e-06, 9.514000000002132e-06, 8.805000000000618e-06, 9.194999999996567e-06, 9.582999999993569e-06, 8.846999999999328e-06, 9.513999999995193e-06, 9.513999999995193e-06, 9.209000000003076e-06, 9.708999999996637e-06, 9.694999999997067e-06, 9.527999999994763e-06, 9.360999999999398e-06, 9.028000000001202e-06, 9.625000000006156e-06, 9.360999999999398e-06, 9.194000000004032e-06, 8.861999999998371e-06, 9.014000000001632e-06, 8.943999999996843e-06, 8.832999999999758e-06, 9.527999999994763e-06, 9.695000000004006e-06, 9.680000000004962e-06, 9.499999999995623e-06, 9.194000000004032e-06, 9.499999999995623e-06, 9.528000000001702e-06, 9.681000000004436e-06, 9.514000000002132e-06, 9.556000000000842e-06, 9.042000000000772e-06, 9.360999999999398e-06, 8.917000000004116e-06, 9.361000000006336e-06, 9.179999999997523e-06, 8.860999999998898e-06, 9.695000000004006e-06, 9.542000000001272e-06, 9.028000000001202e-06, 8.986000000002492e-06, 9.208000000003602e-06, 9.693999999997593e-06, 9.528000000001702e-06, 9.472000000003422e-06, 9.360999999999398e-06, 9.014000000001632e-06, 8.875000000005406e-06]</msg>
<status status="PASS" starttime="20201110 08:32:49.334" endtime="20201110 08:32:49.338"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:49.324" endtime="20201110 08:32:49.340"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:49.346" endtime="20201110 08:32:49.349"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:49.355" endtime="20201110 08:32:49.376"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:49.350" endtime="20201110 08:32:49.378"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:49.342" endtime="20201110 08:32:49.380"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:48.834" endtime="20201110 08:32:49.380"></status>
</kw>
<msg timestamp="20201110 08:32:49.381" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:49.401" endtime="20201110 08:32:49.413"></status>
</kw>
<msg timestamp="20201110 08:32:49.414" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:49.397" endtime="20201110 08:32:49.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:49.420" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:49.416" endtime="20201110 08:32:49.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:49.423" endtime="20201110 08:32:49.426"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:49.390" endtime="20201110 08:32:49.428"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:49.385" endtime="20201110 08:32:49.429"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:49.446" endtime="20201110 08:32:49.794"></status>
</kw>
<msg timestamp="20201110 08:32:49.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036928125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036937306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:49.442" endtime="20201110 08:32:49.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:49.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036928125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036937306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:49.804" endtime="20201110 08:32:49.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:49.823" endtime="20201110 08:32:49.826"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:49.435" endtime="20201110 08:32:49.828"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:49.431" endtime="20201110 08:32:49.829"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:49.841" level="INFO">${RESULT} = [{'time': 0.036937306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.181000000003936e-06, 'source_diff': 9.181000000003936e-06}, {'time': 0.036957403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:32:49.832" endtime="20201110 08:32:49.841"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:49.875" level="INFO">${OVERHEAD} = {'time': [0.036937306, 0.036957403, 0.036977389, 0.036993472, 0.037007417, 0.037022528, 0.037040528, 0.037059542, 0.037077597, 0.037091667, 0.037108611, 0.037123653, 0.037139694, 0.037157764, 0.037174...</msg>
<status status="PASS" starttime="20201110 08:32:49.843" endtime="20201110 08:32:49.875"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:49.885" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:32:49.883" endtime="20201110 08:32:49.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:49.891" level="INFO">VALUE: [9.181000000003936e-06, 9.346999999999828e-06, 9.333000000000258e-06, 8.888999999998037e-06, 9.069999999999911e-06, 9.735999999996303e-06, 8.778000000000952e-06, 8.888999999998037e-06, 8.915999999997704e-06, 9.445000000003756e-06, 9.193999999997093e-06, 9.500000000002562e-06, 9.360999999999398e-06, 9.417000000004616e-06, 9.528000000001702e-06, 9.708999999996637e-06, 9.304999999994179e-06, 9.638999999998787e-06, 9.528000000001702e-06, 9.680999999997497e-06, 9.680999999997497e-06, 9.472000000003422e-06, 9.000000000002062e-06, 9.347999999999301e-06, 9.193999999997093e-06, 9.360999999999398e-06, 9.360999999999398e-06, 9.346999999999828e-06, 9.166999999997427e-06, 9.180999999996997e-06, 9.681000000004436e-06, 9.51299999999572e-06, 8.846999999999328e-06, 8.860999999998898e-06, 9.014000000001632e-06, 9.056000000000342e-06, 9.500000000002562e-06, 9.667000000004866e-06, 9.514000000002132e-06, 9.528000000001702e-06, 9.027999999994263e-06, 9.014000000001632e-06, 9.193999999997093e-06, 9.514000000002132e-06, 9.361999999998871e-06, 9.360999999999398e-06, 9.680000000004962e-06, 9.681000000004436e-06, 9.651999999998884e-06, 9.193999999997093e-06]</msg>
<status status="PASS" starttime="20201110 08:32:49.887" endtime="20201110 08:32:49.891"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:49.877" endtime="20201110 08:32:49.893"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:49.899" endtime="20201110 08:32:49.902"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:49.908" endtime="20201110 08:32:49.930"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:49.903" endtime="20201110 08:32:49.931"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:49.895" endtime="20201110 08:32:49.933"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:49.382" endtime="20201110 08:32:49.934"></status>
</kw>
<msg timestamp="20201110 08:32:49.934" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:49.954" endtime="20201110 08:32:49.967"></status>
</kw>
<msg timestamp="20201110 08:32:49.969" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:49.951" endtime="20201110 08:32:49.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:49.975" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:49.971" endtime="20201110 08:32:49.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:49.978" endtime="20201110 08:32:49.982"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:49.943" endtime="20201110 08:32:49.983"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:49.939" endtime="20201110 08:32:49.985"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:50.002" endtime="20201110 08:32:50.347"></status>
</kw>
<msg timestamp="20201110 08:32:50.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037011625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037021153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:49.999" endtime="20201110 08:32:50.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:50.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037011625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037021153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:50.357" endtime="20201110 08:32:50.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:50.380" endtime="20201110 08:32:50.384"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:49.991" endtime="20201110 08:32:50.386"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:49.986" endtime="20201110 08:32:50.387"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:50.398" level="INFO">${RESULT} = [{'time': 0.037021153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.528000000001702e-06, 'source_diff': 9.528000000001702e-06}, {'time': 0.037035153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:32:50.389" endtime="20201110 08:32:50.398"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:50.429" level="INFO">${OVERHEAD} = {'time': [0.037021153, 0.037035153, 0.037049139, 0.037067167, 0.037083319, 0.037101264, 0.037115375, 0.037134431, 0.037151458, 0.037170458, 0.037189528, 0.037206569, 0.037224472, 0.0372385, 0.03725865...</msg>
<status status="PASS" starttime="20201110 08:32:50.400" endtime="20201110 08:32:50.430"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:50.441" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:32:50.437" endtime="20201110 08:32:50.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:50.446" level="INFO">VALUE: [9.528000000001702e-06, 9.514000000002132e-06, 9.500000000002562e-06, 9.374999999998967e-06, 8.846999999999328e-06, 9.195000000003506e-06, 8.902999999997607e-06, 9.181000000003936e-06, 9.52699999999529e-06, 9.180000000004462e-06, 9.694999999997067e-06, 9.430000000004712e-06, 9.514000000002132e-06, 9.042000000000772e-06, 9.528000000001702e-06, 9.597000000000078e-06, 8.832999999999758e-06, 9.000000000002062e-06, 9.514000000002132e-06, 9.194999999996567e-06, 9.513999999995193e-06, 9.528000000001702e-06, 9.166999999997427e-06, 9.486000000002992e-06, 9.513999999995193e-06, 9.028000000001202e-06, 9.528000000001702e-06, 8.999999999995123e-06, 9.679999999998024e-06, 9.708000000004102e-06, 9.694000000004532e-06, 9.694000000004532e-06, 9.027000000001728e-06, 9.722000000003672e-06, 8.860999999998898e-06, 9.195000000003506e-06, 9.193999999997093e-06, 9.195000000003506e-06, 8.860999999998898e-06, 9.013999999994693e-06, 9.693999999997593e-06, 9.360999999999398e-06, 9.014000000001632e-06, 9.514000000002132e-06, 9.708000000004102e-06, 9.541000000001798e-06, 9.527999999994763e-06, 9.513999999995193e-06, 9.679999999998024e-06, 8.833999999999231e-06]</msg>
<status status="PASS" starttime="20201110 08:32:50.443" endtime="20201110 08:32:50.447"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:50.431" endtime="20201110 08:32:50.449"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:50.455" endtime="20201110 08:32:50.458"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:50.464" endtime="20201110 08:32:50.485"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:50.459" endtime="20201110 08:32:50.487"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:50.451" endtime="20201110 08:32:50.488"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:49.935" endtime="20201110 08:32:50.489"></status>
</kw>
<msg timestamp="20201110 08:32:50.490" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:50.510" endtime="20201110 08:32:50.522"></status>
</kw>
<msg timestamp="20201110 08:32:50.523" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:50.506" endtime="20201110 08:32:50.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:50.529" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:50.525" endtime="20201110 08:32:50.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:50.531" endtime="20201110 08:32:50.535"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:50.499" endtime="20201110 08:32:50.537"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:50.494" endtime="20201110 08:32:50.538"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:50.555" endtime="20201110 08:32:50.892"></status>
</kw>
<msg timestamp="20201110 08:32:50.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036792514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036802208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:50.551" endtime="20201110 08:32:50.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:50.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036792514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036802208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:50.903" endtime="20201110 08:32:50.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:50.923" endtime="20201110 08:32:50.928"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:50.544" endtime="20201110 08:32:50.930"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:50.539" endtime="20201110 08:32:50.932"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:50.943" level="INFO">${RESULT} = [{'time': 0.036802208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.694000000004532e-06, 'source_diff': 9.694000000004532e-06}, {'time': 0.036818222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:32:50.933" endtime="20201110 08:32:50.944"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:50.975" level="INFO">${OVERHEAD} = {'time': [0.036802208, 0.036818222, 0.036838236, 0.036857333, 0.036877375, 0.036897444, 0.036913361, 0.036927375, 0.036946472, 0.036965583, 0.036983528, 0.0370035, 0.037021653, 0.037038736, 0.03705368...</msg>
<status status="PASS" starttime="20201110 08:32:50.946" endtime="20201110 08:32:50.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:50.985" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:32:50.983" endtime="20201110 08:32:50.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:50.991" level="INFO">VALUE: [9.694000000004532e-06, 9.346999999999828e-06, 9.375000000005906e-06, 9.707999999997163e-06, 9.193999999997093e-06, 9.541000000001798e-06, 9.346999999999828e-06, 9.513999999995193e-06, 9.180000000004462e-06, 9.180000000004462e-06, 9.181000000003936e-06, 8.958000000003352e-06, 9.374999999998967e-06, 9.694000000004532e-06, 9.208999999996137e-06, 9.180999999996997e-06, 9.055000000000868e-06, 9.249999999995373e-06, 9.707999999997163e-06, 9.375000000005906e-06, 9.222000000003172e-06, 9.165999999997954e-06, 9.528000000001702e-06, 9.014000000001632e-06, 9.014000000001632e-06, 9.166999999997427e-06, 9.166999999997427e-06, 8.860999999998898e-06, 9.181000000003936e-06, 8.805000000000618e-06, 8.846999999999328e-06, 9.069999999999911e-06, 9.500000000002562e-06, 9.195000000003506e-06, 9.514000000002132e-06, 8.860999999998898e-06, 9.027000000001728e-06, 9.665999999998454e-06, 9.179999999997523e-06, 8.861000000005836e-06, 8.86200000000531e-06, 8.846999999999328e-06, 9.513999999995193e-06, 9.028000000001202e-06, 9.694999999997067e-06, 8.958000000003352e-06, 9.181000000003936e-06, 9.221999999996233e-06, 9.360999999999398e-06, 9.360999999999398e-06]</msg>
<status status="PASS" starttime="20201110 08:32:50.988" endtime="20201110 08:32:50.992"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:50.977" endtime="20201110 08:32:50.993"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:51.001" endtime="20201110 08:32:51.004"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:51.011" endtime="20201110 08:32:51.033"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:51.006" endtime="20201110 08:32:51.034"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:50.995" endtime="20201110 08:32:51.036"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:50.491" endtime="20201110 08:32:51.037"></status>
</kw>
<msg timestamp="20201110 08:32:51.037" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:51.057" endtime="20201110 08:32:51.069"></status>
</kw>
<msg timestamp="20201110 08:32:51.071" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:51.054" endtime="20201110 08:32:51.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:51.077" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:51.073" endtime="20201110 08:32:51.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:51.079" endtime="20201110 08:32:51.083"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:51.046" endtime="20201110 08:32:51.084"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:51.042" endtime="20201110 08:32:51.086"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:51.103" endtime="20201110 08:32:51.439"></status>
</kw>
<msg timestamp="20201110 08:32:51.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037439194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037448056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:51.099" endtime="20201110 08:32:51.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:51.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037439194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037448056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:51.448" endtime="20201110 08:32:51.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:51.467" endtime="20201110 08:32:51.471"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:51.092" endtime="20201110 08:32:51.473"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:51.087" endtime="20201110 08:32:51.474"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:51.485" level="INFO">${RESULT} = [{'time': 0.037448056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.861999999998371e-06, 'source_diff': 8.861999999998371e-06}, {'time': 0.037467125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:32:51.476" endtime="20201110 08:32:51.485"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:51.516" level="INFO">${OVERHEAD} = {'time': [0.037448056, 0.037467125, 0.037486097, 0.037503125, 0.037518292, 0.037535278, 0.037553389, 0.037573319, 0.037590403, 0.037609417, 0.037626403, 0.037644389, 0.037663542, 0.037679611, 0.037693...</msg>
<status status="PASS" starttime="20201110 08:32:51.487" endtime="20201110 08:32:51.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:51.526" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:32:51.524" endtime="20201110 08:32:51.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:51.531" level="INFO">VALUE: [8.861999999998371e-06, 9.360999999999398e-06, 8.861000000005836e-06, 9.180999999996997e-06, 9.542000000001272e-06, 9.194999999996567e-06, 9.250000000002312e-06, 9.250000000002312e-06, 9.209000000003076e-06, 9.542000000001272e-06, 8.861000000005836e-06, 8.958000000003352e-06, 9.014000000001632e-06, 8.819000000000188e-06, 9.500000000002562e-06, 9.735999999996303e-06, 8.874999999998467e-06, 8.860999999998898e-06, 9.195000000003506e-06, 9.028000000001202e-06, 9.138999999998287e-06, 8.860999999998898e-06, 9.028000000001202e-06, 9.693999999997593e-06, 9.707999999997163e-06, 9.306000000000592e-06, 9.209000000003076e-06, 9.680000000004962e-06, 9.180000000004462e-06, 9.361000000006336e-06, 9.360999999999398e-06, 8.860999999998898e-06, 8.986000000002492e-06, 8.875000000005406e-06, 9.346999999999828e-06, 9.374999999998967e-06, 9.069999999999911e-06, 8.846999999999328e-06, 9.000000000002062e-06, 9.194000000004032e-06, 9.264000000001882e-06, 8.959000000002826e-06, 9.388999999998537e-06, 8.986000000002492e-06, 9.360999999999398e-06, 9.681000000004436e-06, 9.152999999997857e-06, 9.694999999997067e-06, 9.042000000000772e-06, 8.860999999998898e-06]</msg>
<status status="PASS" starttime="20201110 08:32:51.528" endtime="20201110 08:32:51.532"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:51.518" endtime="20201110 08:32:51.534"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:51.540" endtime="20201110 08:32:51.543"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:51.548" endtime="20201110 08:32:51.572"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:51.544" endtime="20201110 08:32:51.573"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:51.536" endtime="20201110 08:32:51.575"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:51.038" endtime="20201110 08:32:51.575"></status>
</kw>
<msg timestamp="20201110 08:32:51.576" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:51.596" endtime="20201110 08:32:51.608"></status>
</kw>
<msg timestamp="20201110 08:32:51.609" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:51.592" endtime="20201110 08:32:51.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:51.615" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:51.611" endtime="20201110 08:32:51.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:51.617" endtime="20201110 08:32:51.621"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:51.585" endtime="20201110 08:32:51.623"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:51.581" endtime="20201110 08:32:51.625"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:51.642" endtime="20201110 08:32:51.976"></status>
</kw>
<msg timestamp="20201110 08:32:51.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036648792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036657653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:51.638" endtime="20201110 08:32:51.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:52.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036648792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036657653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:51.986" endtime="20201110 08:32:52.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:52.005" endtime="20201110 08:32:52.008"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:51.631" endtime="20201110 08:32:52.010"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:51.626" endtime="20201110 08:32:52.012"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:52.022" level="INFO">${RESULT} = [{'time': 0.036657653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.860999999998898e-06, 'source_diff': 8.860999999998898e-06}, {'time': 0.036671819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:32:52.013" endtime="20201110 08:32:52.022"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:52.057" level="INFO">${OVERHEAD} = {'time': [0.036657653, 0.036671819, 0.036691792, 0.036709764, 0.036723806, 0.036739903, 0.036758944, 0.036774042, 0.036788, 0.036807958, 0.036828069, 0.036845069, 0.036862208, 0.036876194, 0.036890194...</msg>
<status status="PASS" starttime="20201110 08:32:52.024" endtime="20201110 08:32:52.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:52.068" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:32:52.065" endtime="20201110 08:32:52.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:52.073" level="INFO">VALUE: [8.860999999998898e-06, 9.597000000000078e-06, 9.166999999997427e-06, 9.528000000001702e-06, 9.013999999994693e-06, 9.527999999994763e-06, 9.027000000001728e-06, 9.360999999999398e-06, 8.860999999998898e-06, 9.527000000002228e-06, 9.360999999999398e-06, 8.874999999998467e-06, 9.027000000001728e-06, 9.194000000004032e-06, 9.527000000002228e-06, 9.513999999995193e-06, 9.361999999998871e-06, 9.513999999995193e-06, 9.042000000000772e-06, 8.874999999998467e-06, 9.013999999994693e-06, 9.707999999997163e-06, 9.208000000003602e-06, 9.02699999999479e-06, 9.528000000001702e-06, 9.360999999999398e-06, 9.027999999994263e-06, 9.054999999993929e-06, 9.527000000002228e-06, 9.360999999999398e-06, 9.513999999995193e-06, 9.166999999997427e-06, 9.528000000001702e-06, 9.347999999999301e-06, 9.179999999997523e-06, 9.042000000000772e-06, 9.013999999994693e-06, 9.735999999996303e-06, 9.208000000003602e-06, 9.360999999999398e-06, 9.514000000002132e-06, 8.986000000002492e-06, 9.347999999999301e-06, 8.847999999998801e-06, 9.666999999997927e-06, 9.014000000001632e-06, 9.360999999999398e-06, 9.374999999998967e-06, 9.707999999997163e-06, 9.542000000001272e-06]</msg>
<status status="PASS" starttime="20201110 08:32:52.070" endtime="20201110 08:32:52.074"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:52.059" endtime="20201110 08:32:52.076"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:52.082" endtime="20201110 08:32:52.085"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:52.090" endtime="20201110 08:32:52.113"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:52.086" endtime="20201110 08:32:52.115"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:52.077" endtime="20201110 08:32:52.116"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:51.577" endtime="20201110 08:32:52.117"></status>
</kw>
<msg timestamp="20201110 08:32:52.117" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:52.139" endtime="20201110 08:32:52.152"></status>
</kw>
<msg timestamp="20201110 08:32:52.153" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:52.135" endtime="20201110 08:32:52.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:52.160" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:52.155" endtime="20201110 08:32:52.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:52.163" endtime="20201110 08:32:52.166"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:52.128" endtime="20201110 08:32:52.168"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:52.122" endtime="20201110 08:32:52.169"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:52.186" endtime="20201110 08:32:52.533"></status>
</kw>
<msg timestamp="20201110 08:32:52.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038867708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038876889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:52.183" endtime="20201110 08:32:52.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:52.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038867708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038876889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:52.543" endtime="20201110 08:32:52.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:52.562" endtime="20201110 08:32:52.565"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:52.175" endtime="20201110 08:32:52.567"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:52.171" endtime="20201110 08:32:52.568"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:52.579" level="INFO">${RESULT} = [{'time': 0.038876889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.180999999996997e-06, 'source_diff': 9.180999999996997e-06}, {'time': 0.038890875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:32:52.570" endtime="20201110 08:32:52.580"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:52.610" level="INFO">${OVERHEAD} = {'time': [0.038876889, 0.038890875, 0.038907861, 0.038925875, 0.038945917, 0.038963, 0.038979958, 0.038995042, 0.039012083, 0.039027069, 0.039042097, 0.039057181, 0.03907125, 0.039090222, 0.03910425, ...</msg>
<status status="PASS" starttime="20201110 08:32:52.581" endtime="20201110 08:32:52.611"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:52.621" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:32:52.618" endtime="20201110 08:32:52.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:52.626" level="INFO">VALUE: [9.180999999996997e-06, 9.069000000000438e-06, 9.194000000004032e-06, 8.846999999999328e-06, 9.180999999996997e-06, 8.778000000000952e-06, 9.027000000001728e-06, 9.347999999999301e-06, 9.472000000003422e-06, 9.374999999998967e-06, 8.874999999998467e-06, 8.86200000000531e-06, 8.860999999998898e-06, 9.374999999998967e-06, 9.360999999999398e-06, 9.667000000004866e-06, 9.527999999994763e-06, 9.360999999999398e-06, 8.874999999998467e-06, 9.527000000002228e-06, 8.819999999999661e-06, 8.860999999998898e-06, 9.208999999996137e-06, 9.347000000006767e-06, 8.985999999995553e-06, 9.042000000000772e-06, 9.195000000003506e-06, 9.014000000001632e-06, 8.860999999998898e-06, 8.86200000000531e-06, 9.528000000001702e-06, 9.360999999999398e-06, 9.290999999994609e-06, 9.179999999997523e-06, 9.666000000005393e-06, 8.846999999999328e-06, 8.778000000000952e-06, 8.860999999998898e-06, 9.471999999996483e-06, 9.665999999998454e-06, 9.694999999997067e-06, 9.166999999997427e-06, 9.041999999993833e-06, 9.207999999996663e-06, 8.846999999999328e-06, 9.527000000002228e-06, 9.652999999998357e-06, 9.736000000003242e-06, 9.013999999994693e-06, 8.860999999998898e-06]</msg>
<status status="PASS" starttime="20201110 08:32:52.623" endtime="20201110 08:32:52.627"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:52.612" endtime="20201110 08:32:52.628"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:52.635" endtime="20201110 08:32:52.639"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:52.652" endtime="20201110 08:32:52.676"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:52.642" endtime="20201110 08:32:52.678"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:52.630" endtime="20201110 08:32:52.680"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:52.118" endtime="20201110 08:32:52.681"></status>
</kw>
<msg timestamp="20201110 08:32:52.681" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:52.708" endtime="20201110 08:32:52.722"></status>
</kw>
<msg timestamp="20201110 08:32:52.723" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:52.703" endtime="20201110 08:32:52.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:52.729" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:52.725" endtime="20201110 08:32:52.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:52.732" endtime="20201110 08:32:52.737"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:52.693" endtime="20201110 08:32:52.738"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:52.687" endtime="20201110 08:32:52.740"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:52.758" endtime="20201110 08:32:53.156"></status>
</kw>
<msg timestamp="20201110 08:32:53.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048288917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048298444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:52.755" endtime="20201110 08:32:53.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:53.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048288917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048298444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:53.166" endtime="20201110 08:32:53.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:53.184" endtime="20201110 08:32:53.188"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:52.746" endtime="20201110 08:32:53.190"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:52.741" endtime="20201110 08:32:53.191"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:53.201" level="INFO">${RESULT} = [{'time': 0.048298444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.527000000002228e-06, 'source_diff': 9.527000000002228e-06}, {'time': 0.048314389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:32:53.193" endtime="20201110 08:32:53.202"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:53.232" level="INFO">${OVERHEAD} = {'time': [0.048298444, 0.048314389, 0.048330444, 0.048346583, 0.048362556, 0.048377556, 0.048394583, 0.048411639, 0.048428792, 0.048445694, 0.048463667, 0.048481847, 0.048495722, 0.048510847, 0.048527...</msg>
<status status="PASS" starttime="20201110 08:32:53.203" endtime="20201110 08:32:53.232"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:53.242" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:32:53.240" endtime="20201110 08:32:53.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:53.247" level="INFO">VALUE: [9.527000000002228e-06, 9.694999999997067e-06, 9.151999999998384e-06, 9.249999999995373e-06, 9.347999999999301e-06, 9.695000000004006e-06, 9.207999999996663e-06, 9.360999999999398e-06, 9.444999999996817e-06, 9.679999999998024e-06, 9.514000000002132e-06, 9.402999999998107e-06, 9.360999999999398e-06, 9.694000000004532e-06, 8.874999999998467e-06, 9.167000000004366e-06, 9.361000000006336e-06, 9.542000000001272e-06, 9.514000000002132e-06, 8.888999999998037e-06, 9.499999999995623e-06, 9.693999999997593e-06, 9.166999999997427e-06, 9.555000000001368e-06, 8.860999999998898e-06, 8.860999999998898e-06, 8.846999999999328e-06, 9.195000000003506e-06, 9.528000000001702e-06, 8.861000000005836e-06, 8.832999999999758e-06, 9.194999999996567e-06, 9.347999999999301e-06, 9.431000000004186e-06, 8.846999999999328e-06, 9.693999999997593e-06, 9.360999999999398e-06, 9.193999999997093e-06, 9.52699999999529e-06, 9.041999999993833e-06, 9.028000000001202e-06, 9.013000000002158e-06, 9.180999999996997e-06, 9.693999999997593e-06, 8.888999999998037e-06, 8.959000000002826e-06, 9.541000000001798e-06, 9.166999999997427e-06, 9.499999999995623e-06, 9.180999999996997e-06]</msg>
<status status="PASS" starttime="20201110 08:32:53.244" endtime="20201110 08:32:53.248"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:53.234" endtime="20201110 08:32:53.250"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:53.256" endtime="20201110 08:32:53.259"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:53.264" endtime="20201110 08:32:53.286"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:53.260" endtime="20201110 08:32:53.288"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:53.252" endtime="20201110 08:32:53.289"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:52.683" endtime="20201110 08:32:53.290"></status>
</kw>
<msg timestamp="20201110 08:32:53.290" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:53.311" endtime="20201110 08:32:53.324"></status>
</kw>
<msg timestamp="20201110 08:32:53.325" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:53.307" endtime="20201110 08:32:53.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:53.331" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:53.327" endtime="20201110 08:32:53.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:53.333" endtime="20201110 08:32:53.337"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:53.300" endtime="20201110 08:32:53.338"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:53.295" endtime="20201110 08:32:53.340"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:53.358" endtime="20201110 08:32:53.702"></status>
</kw>
<msg timestamp="20201110 08:32:53.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037182125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037191639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:53.354" endtime="20201110 08:32:53.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:53.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037182125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037191639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:53.711" endtime="20201110 08:32:53.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:53.730" endtime="20201110 08:32:53.733"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:53.346" endtime="20201110 08:32:53.735"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:53.341" endtime="20201110 08:32:53.736"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:53.747" level="INFO">${RESULT} = [{'time': 0.037191639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.513999999995193e-06, 'source_diff': 9.513999999995193e-06}, {'time': 0.037205722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:32:53.738" endtime="20201110 08:32:53.747"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:53.777" level="INFO">${OVERHEAD} = {'time': [0.037191639, 0.037205722, 0.037223722, 0.03724075, 0.037255708, 0.037274736, 0.037293819, 0.037308917, 0.037322931, 0.037340889, 0.037360028, 0.037378181, 0.037397097, 0.037415125, 0.0374342...</msg>
<status status="PASS" starttime="20201110 08:32:53.749" endtime="20201110 08:32:53.777"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:53.789" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:32:53.786" endtime="20201110 08:32:53.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:53.795" level="INFO">VALUE: [9.513999999995193e-06, 8.846999999999328e-06, 9.528000000001702e-06, 9.528000000001702e-06, 9.541000000001798e-06, 9.028000000001202e-06, 9.679999999998024e-06, 9.360999999999398e-06, 9.013999999994693e-06, 9.708000000004102e-06, 9.028000000001202e-06, 9.59800000000649e-06, 9.693999999997593e-06, 8.860999999998898e-06, 9.194000000004032e-06, 9.292000000001022e-06, 9.709000000003576e-06, 9.027999999994263e-06, 9.708000000004102e-06, 9.555000000001368e-06, 9.360999999999398e-06, 9.528000000001702e-06, 9.429999999997773e-06, 9.680999999997497e-06, 8.860999999998898e-06, 9.499999999995623e-06, 9.360999999999398e-06, 9.236000000002742e-06, 8.917000000004116e-06, 9.193999999997093e-06, 8.846999999999328e-06, 8.860999999998898e-06, 9.528000000001702e-06, 9.374999999998967e-06, 9.333999999999731e-06, 9.708000000004102e-06, 9.360999999999398e-06, 9.542000000001272e-06, 8.986000000002492e-06, 9.541999999994333e-06, 9.179999999997523e-06, 9.207999999996663e-06, 9.152999999997857e-06, 9.527999999994763e-06, 9.208000000003602e-06, 9.528000000001702e-06, 8.999999999995123e-06, 9.347999999999301e-06, 9.152999999997857e-06, 9.361999999998871e-06]</msg>
<status status="PASS" starttime="20201110 08:32:53.792" endtime="20201110 08:32:53.797"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:53.779" endtime="20201110 08:32:53.798"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:53.807" endtime="20201110 08:32:53.810"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:53.817" endtime="20201110 08:32:53.841"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:53.812" endtime="20201110 08:32:53.843"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:53.801" endtime="20201110 08:32:53.845"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:53.291" endtime="20201110 08:32:53.846"></status>
</kw>
<msg timestamp="20201110 08:32:53.846" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:53.867" endtime="20201110 08:32:53.879"></status>
</kw>
<msg timestamp="20201110 08:32:53.880" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:53.863" endtime="20201110 08:32:53.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:53.886" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:53.882" endtime="20201110 08:32:53.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:53.888" endtime="20201110 08:32:53.892"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:53.856" endtime="20201110 08:32:53.894"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:53.851" endtime="20201110 08:32:53.895"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:53.912" endtime="20201110 08:32:54.245"></status>
</kw>
<msg timestamp="20201110 08:32:54.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039285181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039294028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:53.908" endtime="20201110 08:32:54.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:54.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039285181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039294028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:54.255" endtime="20201110 08:32:54.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:54.273" endtime="20201110 08:32:54.277"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:53.901" endtime="20201110 08:32:54.278"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:53.897" endtime="20201110 08:32:54.280"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:54.290" level="INFO">${RESULT} = [{'time': 0.039294028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.846999999999328e-06, 'source_diff': 8.846999999999328e-06}, {'time': 0.039310069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:32:54.282" endtime="20201110 08:32:54.291"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:54.323" level="INFO">${OVERHEAD} = {'time': [0.039294028, 0.039310069, 0.039330097, 0.039349125, 0.039366139, 0.039380153, 0.039397194, 0.039415292, 0.039433306, 0.039452347, 0.039466375, 0.039484458, 0.039502528, 0.039522542, 0.039539...</msg>
<status status="PASS" starttime="20201110 08:32:54.292" endtime="20201110 08:32:54.323"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:54.333" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:32:54.331" endtime="20201110 08:32:54.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:54.338" level="INFO">VALUE: [8.846999999999328e-06, 9.361000000006336e-06, 9.694000000004532e-06, 9.014000000001632e-06, 9.181000000003936e-06, 9.528000000001702e-06, 9.736000000003242e-06, 9.374999999998967e-06, 9.056000000000342e-06, 9.360999999999398e-06, 8.916999999997177e-06, 8.805000000000618e-06, 8.889000000004976e-06, 9.402999999998107e-06, 9.360999999999398e-06, 9.694000000004532e-06, 9.028000000001202e-06, 9.02699999999479e-06, 9.680999999997497e-06, 9.360999999999398e-06, 9.027999999994263e-06, 9.180999999996997e-06, 9.319000000000688e-06, 9.346999999999828e-06, 9.209000000003076e-06, 9.680999999997497e-06, 9.527000000002228e-06, 8.860999999998898e-06, 9.679999999998024e-06, 9.707999999997163e-06, 9.374999999998967e-06, 9.528000000001702e-06, 9.195000000003506e-06, 9.180000000004462e-06, 8.860999999998898e-06, 9.361999999998871e-06, 9.542000000001272e-06, 8.860999999998898e-06, 9.333000000000258e-06, 9.027999999994263e-06, 9.374999999998967e-06, 9.028000000001202e-06, 9.180000000004462e-06, 8.833999999999231e-06, 9.195000000003506e-06, 9.528000000001702e-06, 9.680000000004962e-06, 9.014000000001632e-06, 9.528000000001702e-06, 9.681000000004436e-06]</msg>
<status status="PASS" starttime="20201110 08:32:54.335" endtime="20201110 08:32:54.339"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:54.325" endtime="20201110 08:32:54.341"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:54.348" endtime="20201110 08:32:54.350"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:54.356" endtime="20201110 08:32:54.377"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:54.351" endtime="20201110 08:32:54.379"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:54.343" endtime="20201110 08:32:54.380"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:53.848" endtime="20201110 08:32:54.381"></status>
</kw>
<msg timestamp="20201110 08:32:54.381" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:54.401" endtime="20201110 08:32:54.413"></status>
</kw>
<msg timestamp="20201110 08:32:54.414" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:54.398" endtime="20201110 08:32:54.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:54.420" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:54.416" endtime="20201110 08:32:54.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:54.422" endtime="20201110 08:32:54.426"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:54.391" endtime="20201110 08:32:54.428"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:54.386" endtime="20201110 08:32:54.429"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:54.445" endtime="20201110 08:32:54.776"></status>
</kw>
<msg timestamp="20201110 08:32:54.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035994278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036003972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:54.442" endtime="20201110 08:32:54.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:54.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035994278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036003972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:54.785" endtime="20201110 08:32:54.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:54.804" endtime="20201110 08:32:54.808"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:54.435" endtime="20201110 08:32:54.809"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:54.430" endtime="20201110 08:32:54.811"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:54.821" level="INFO">${RESULT} = [{'time': 0.036003972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.694000000004532e-06, 'source_diff': 9.694000000004532e-06}, {'time': 0.036021972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:32:54.812" endtime="20201110 08:32:54.822"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:54.853" level="INFO">${OVERHEAD} = {'time': [0.036003972, 0.036021972, 0.036040083, 0.036056069, 0.036075139, 0.036090194, 0.036109125, 0.036126111, 0.036145097, 0.036160194, 0.036179236, 0.036194306, 0.036213319, 0.036229278, 0.036247...</msg>
<status status="PASS" starttime="20201110 08:32:54.823" endtime="20201110 08:32:54.853"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:54.863" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:32:54.860" endtime="20201110 08:32:54.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:54.868" level="INFO">VALUE: [9.694000000004532e-06, 8.874999999998467e-06, 9.374999999998967e-06, 8.888000000005503e-06, 9.528000000001702e-06, 9.749999999995873e-06, 8.860999999998898e-06, 9.708000000004102e-06, 9.458000000003852e-06, 9.277000000001978e-06, 8.902999999997607e-06, 9.500000000002562e-06, 9.500000000002562e-06, 9.180999999996997e-06, 9.542000000001272e-06, 9.361999999998871e-06, 9.083000000000008e-06, 9.347999999999301e-06, 9.041000000001298e-06, 9.013000000002158e-06, 9.513999999995193e-06, 8.860999999998898e-06, 9.306000000000592e-06, 9.681000000004436e-06, 9.278000000001452e-06, 8.833999999999231e-06, 9.556000000000842e-06, 8.86200000000531e-06, 9.208000000003602e-06, 9.167000000004366e-06, 9.179999999997523e-06, 9.499999999995623e-06, 9.680999999997497e-06, 9.360999999999398e-06, 9.679999999998024e-06, 9.236000000002742e-06, 9.138999999998287e-06, 8.846999999999328e-06, 9.360999999999398e-06, 9.459000000003326e-06, 8.791000000001048e-06, 9.500000000002562e-06, 9.527999999994763e-06, 9.694999999997067e-06, 9.000000000002062e-06, 8.860999999998898e-06, 8.861999999998371e-06, 9.679999999998024e-06, 9.346999999999828e-06, 9.694000000004532e-06]</msg>
<status status="PASS" starttime="20201110 08:32:54.865" endtime="20201110 08:32:54.869"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:54.854" endtime="20201110 08:32:54.871"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:54.877" endtime="20201110 08:32:54.880"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:54.885" endtime="20201110 08:32:54.907"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:54.881" endtime="20201110 08:32:54.909"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:54.873" endtime="20201110 08:32:54.910"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:54.383" endtime="20201110 08:32:54.911"></status>
</kw>
<msg timestamp="20201110 08:32:54.911" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:54.931" endtime="20201110 08:32:54.943"></status>
</kw>
<msg timestamp="20201110 08:32:54.944" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:54.927" endtime="20201110 08:32:54.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:54.950" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:54.946" endtime="20201110 08:32:54.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:54.952" endtime="20201110 08:32:54.956"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:54.920" endtime="20201110 08:32:54.957"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:54.916" endtime="20201110 08:32:54.959"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:54.975" endtime="20201110 08:32:55.311"></status>
</kw>
<msg timestamp="20201110 08:32:55.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036041181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036050806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:54.972" endtime="20201110 08:32:55.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:55.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036041181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036050806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:55.320" endtime="20201110 08:32:55.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:55.339" endtime="20201110 08:32:55.342"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:54.965" endtime="20201110 08:32:55.344"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:54.960" endtime="20201110 08:32:55.345"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:55.356" level="INFO">${RESULT} = [{'time': 0.036050806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.624999999999218e-06, 'source_diff': 9.624999999999218e-06}, {'time': 0.036065917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:32:55.347" endtime="20201110 08:32:55.356"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:55.388" level="INFO">${OVERHEAD} = {'time': [0.036050806, 0.036065917, 0.036081861, 0.036098875, 0.036112958, 0.036127028, 0.036144014, 0.036161097, 0.036181028, 0.036195097, 0.036213069, 0.036231153, 0.036250306, 0.036270361, 0.036287...</msg>
<status status="PASS" starttime="20201110 08:32:55.358" endtime="20201110 08:32:55.388"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:55.398" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:32:55.396" endtime="20201110 08:32:55.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:55.403" level="INFO">VALUE: [9.624999999999218e-06, 9.681000000004436e-06, 8.860999999998898e-06, 9.194000000004032e-06, 9.069000000000438e-06, 9.542000000001272e-06, 8.846999999999328e-06, 9.055000000000868e-06, 9.527999999994763e-06, 8.861000000005836e-06, 9.527000000002228e-06, 9.528000000001702e-06, 9.028000000001202e-06, 9.179999999997523e-06, 9.124999999998717e-06, 9.305000000001118e-06, 8.860999999998898e-06, 9.02699999999479e-06, 9.360999999999398e-06, 9.528000000001702e-06, 9.181000000003936e-06, 9.346999999999828e-06, 9.680999999997497e-06, 9.360999999999398e-06, 9.346999999999828e-06, 9.665999999998454e-06, 9.694000000004532e-06, 8.916999999997177e-06, 9.208999999996137e-06, 9.346999999999828e-06, 9.180000000004462e-06, 8.874999999998467e-06, 9.166999999997427e-06, 9.194000000004032e-06, 9.707999999997163e-06, 8.957999999996413e-06, 9.014000000001632e-06, 9.708999999996637e-06, 9.680000000004962e-06, 9.195000000003506e-06, 8.846999999999328e-06, 9.028000000001202e-06, 9.056000000000342e-06, 9.333999999999731e-06, 9.527000000002228e-06, 9.528000000001702e-06, 9.360999999999398e-06, 9.346999999999828e-06, 9.180999999996997e-06, 9.346999999999828e-06]</msg>
<status status="PASS" starttime="20201110 08:32:55.400" endtime="20201110 08:32:55.409"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.390" endtime="20201110 08:32:55.411"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:55.417" endtime="20201110 08:32:55.420"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:55.426" endtime="20201110 08:32:55.447"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.421" endtime="20201110 08:32:55.449"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.413" endtime="20201110 08:32:55.450"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:54.912" endtime="20201110 08:32:55.451"></status>
</kw>
<msg timestamp="20201110 08:32:55.451" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:55.471" endtime="20201110 08:32:55.484"></status>
</kw>
<msg timestamp="20201110 08:32:55.485" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:55.467" endtime="20201110 08:32:55.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:55.491" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:55.487" endtime="20201110 08:32:55.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:55.493" endtime="20201110 08:32:55.497"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.460" endtime="20201110 08:32:55.498"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.456" endtime="20201110 08:32:55.500"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:55.516" endtime="20201110 08:32:55.861"></status>
</kw>
<msg timestamp="20201110 08:32:55.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036077403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036086917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:55.513" endtime="20201110 08:32:55.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:55.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036077403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036086917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:55.871" endtime="20201110 08:32:55.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:55.889" endtime="20201110 08:32:55.893"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.506" endtime="20201110 08:32:55.894"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.501" endtime="20201110 08:32:55.896"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:55.906" level="INFO">${RESULT} = [{'time': 0.036086917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.514000000002132e-06, 'source_diff': 9.514000000002132e-06}, {'time': 0.036100931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:32:55.897" endtime="20201110 08:32:55.907"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:55.938" level="INFO">${OVERHEAD} = {'time': [0.036086917, 0.036100931, 0.036115903, 0.036134931, 0.036154028, 0.036171056, 0.036188042, 0.036202028, 0.036218042, 0.036233069, 0.036248208, 0.03626625, 0.036285194, 0.036304319, 0.0363183...</msg>
<status status="PASS" starttime="20201110 08:32:55.908" endtime="20201110 08:32:55.939"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:55.948" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:32:55.946" endtime="20201110 08:32:55.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:55.953" level="INFO">VALUE: [9.514000000002132e-06, 9.528000000001702e-06, 9.042000000000772e-06, 9.014000000001632e-06, 8.860999999998898e-06, 9.514000000002132e-06, 9.583999999999981e-06, 9.360999999999398e-06, 9.028000000001202e-06, 9.500000000002562e-06, 9.707999999997163e-06, 9.193999999997093e-06, 9.291000000001548e-06, 9.527000000002228e-06, 9.374999999998967e-06, 9.374999999998967e-06, 9.195000000003506e-06, 8.972000000002922e-06, 9.028000000001202e-06, 9.137999999998814e-06, 9.680000000004962e-06, 9.693999999997593e-06, 9.249999999995373e-06, 8.888000000005503e-06, 9.695000000004006e-06, 9.207999999996663e-06, 9.360999999999398e-06, 8.860999999998898e-06, 9.750000000002812e-06, 9.193999999997093e-06, 9.514000000002132e-06, 9.042000000000772e-06, 9.514000000002132e-06, 9.152999999997857e-06, 9.014000000001632e-06, 9.694000000004532e-06, 9.346999999999828e-06, 9.528000000001702e-06, 8.874999999998467e-06, 9.361000000006336e-06, 8.860999999998898e-06, 9.749999999995873e-06, 9.52699999999529e-06, 9.360999999999398e-06, 9.194000000004032e-06, 8.846999999999328e-06, 8.84800000000574e-06, 9.514000000002132e-06, 9.346999999999828e-06, 9.486000000002992e-06]</msg>
<status status="PASS" starttime="20201110 08:32:55.950" endtime="20201110 08:32:55.955"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.940" endtime="20201110 08:32:55.957"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:55.963" endtime="20201110 08:32:55.965"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:55.971" endtime="20201110 08:32:55.993"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.967" endtime="20201110 08:32:55.995"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.958" endtime="20201110 08:32:55.996"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.452" endtime="20201110 08:32:55.997"></status>
</kw>
<msg timestamp="20201110 08:32:55.997" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:56.017" endtime="20201110 08:32:56.030"></status>
</kw>
<msg timestamp="20201110 08:32:56.031" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:56.013" endtime="20201110 08:32:56.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:56.037" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:56.033" endtime="20201110 08:32:56.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:56.039" endtime="20201110 08:32:56.043"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:56.006" endtime="20201110 08:32:56.044"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:56.002" endtime="20201110 08:32:56.046"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:56.062" endtime="20201110 08:32:56.407"></status>
</kw>
<msg timestamp="20201110 08:32:56.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036455514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036464319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:56.059" endtime="20201110 08:32:56.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:56.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036455514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036464319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:56.416" endtime="20201110 08:32:56.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:56.435" endtime="20201110 08:32:56.438"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:56.052" endtime="20201110 08:32:56.440"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:56.047" endtime="20201110 08:32:56.441"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:56.452" level="INFO">${RESULT} = [{'time': 0.036464319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.805000000000618e-06, 'source_diff': 8.805000000000618e-06}, {'time': 0.036482444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:32:56.443" endtime="20201110 08:32:56.452"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:56.484" level="INFO">${OVERHEAD} = {'time': [0.036464319, 0.036482444, 0.036497444, 0.036514431, 0.036533528, 0.036549472, 0.036567583, 0.036583569, 0.036603667, 0.036622625, 0.036640639, 0.036655681, 0.03667475, 0.036693764, 0.0367129...</msg>
<status status="PASS" starttime="20201110 08:32:56.454" endtime="20201110 08:32:56.485"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:56.495" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:32:56.493" endtime="20201110 08:32:56.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:56.501" level="INFO">VALUE: [8.805000000000618e-06, 8.846999999999328e-06, 9.054999999993929e-06, 9.194999999996567e-06, 9.195000000003506e-06, 9.679999999998024e-06, 8.929999999997273e-06, 8.833000000006697e-06, 9.360999999999398e-06, 9.056000000000342e-06, 8.861000000005836e-06, 9.167000000004366e-06, 9.693999999997593e-06, 9.527999999994763e-06, 9.556000000000842e-06, 9.36200000000581e-06, 9.374999999998967e-06, 9.34800000000624e-06, 9.708000000004102e-06, 9.514000000002132e-06, 9.485999999996053e-06, 9.028000000001202e-06, 9.346999999999828e-06, 9.709000000003576e-06, 9.709000000003576e-06, 9.528000000001702e-06, 9.500000000002562e-06, 9.346999999999828e-06, 9.360999999999398e-06, 9.166999999997427e-06, 9.207999999996663e-06, 8.847999999998801e-06, 9.042000000000772e-06, 8.860999999998898e-06, 9.500000000002562e-06, 8.860999999998898e-06, 9.694999999997067e-06, 8.860999999998898e-06, 9.680999999997497e-06, 9.014000000001632e-06, 9.193999999997093e-06, 9.666999999997927e-06, 9.361999999998871e-06, 9.055000000000868e-06, 9.402999999998107e-06, 9.014000000001632e-06, 9.042000000000772e-06, 9.514000000002132e-06, 9.180000000004462e-06, 8.874999999998467e-06]</msg>
<status status="PASS" starttime="20201110 08:32:56.497" endtime="20201110 08:32:56.502"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:56.486" endtime="20201110 08:32:56.504"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:56.510" endtime="20201110 08:32:56.513"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:56.518" endtime="20201110 08:32:56.540"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:56.514" endtime="20201110 08:32:56.542"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:56.505" endtime="20201110 08:32:56.543"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.998" endtime="20201110 08:32:56.544"></status>
</kw>
<msg timestamp="20201110 08:32:56.544" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:56.563" endtime="20201110 08:32:56.576"></status>
</kw>
<msg timestamp="20201110 08:32:56.577" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:56.560" endtime="20201110 08:32:56.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:56.584" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:56.580" endtime="20201110 08:32:56.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:56.586" endtime="20201110 08:32:56.590"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:56.553" endtime="20201110 08:32:56.591"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:56.548" endtime="20201110 08:32:56.593"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:56.609" endtime="20201110 08:32:56.959"></status>
</kw>
<msg timestamp="20201110 08:32:56.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036029819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036038667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:56.605" endtime="20201110 08:32:56.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:56.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036029819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036038667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:56.969" endtime="20201110 08:32:56.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:56.987" endtime="20201110 08:32:56.991"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:56.598" endtime="20201110 08:32:56.993"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:56.594" endtime="20201110 08:32:56.994"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:57.005" level="INFO">${RESULT} = [{'time': 0.036038667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.84800000000574e-06, 'source_diff': 8.84800000000574e-06}, {'time': 0.036054639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:32:56.996" endtime="20201110 08:32:57.005"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:57.035" level="INFO">${OVERHEAD} = {'time': [0.036038667, 0.036054639, 0.036072792, 0.036086792, 0.036100736, 0.036117833, 0.036137861, 0.036156958, 0.036173972, 0.036187931, 0.036203042, 0.036218056, 0.036236958, 0.036252056, 0.036266...</msg>
<status status="PASS" starttime="20201110 08:32:57.007" endtime="20201110 08:32:57.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:57.046" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:32:57.043" endtime="20201110 08:32:57.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:57.052" level="INFO">VALUE: [8.84800000000574e-06, 8.860999999998898e-06, 9.722999999996207e-06, 9.028000000001202e-06, 9.360999999999398e-06, 9.638999999998787e-06, 9.652999999998357e-06, 9.194000000004032e-06, 9.193999999997093e-06, 9.388999999998537e-06, 9.194999999996567e-06, 9.194999999996567e-06, 9.500000000002562e-06, 9.249999999995373e-06, 9.096999999999578e-06, 9.360999999999398e-06, 8.875000000005406e-06, 9.179999999997523e-06, 9.500000000002562e-06, 9.042000000000772e-06, 9.014000000001632e-06, 8.860999999998898e-06, 9.333999999999731e-06, 9.693999999997593e-06, 8.973000000002396e-06, 8.986000000002492e-06, 9.736000000003242e-06, 9.694000000004532e-06, 9.652999999998357e-06, 9.680999999997497e-06, 9.193999999997093e-06, 9.249999999995373e-06, 9.347999999999301e-06, 9.179999999997523e-06, 9.361999999998871e-06, 9.528000000001702e-06, 9.236999999995277e-06, 9.651999999998884e-06, 8.860999999998898e-06, 8.846999999999328e-06, 9.597000000000078e-06, 9.360999999999398e-06, 8.860999999998898e-06, 9.679999999998024e-06, 9.361999999998871e-06, 8.847000000006267e-06, 8.832999999999758e-06, 8.874999999998467e-06, 9.291000000001548e-06, 9.193999999997093e-06]</msg>
<status status="PASS" starttime="20201110 08:32:57.048" endtime="20201110 08:32:57.054"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.037" endtime="20201110 08:32:57.055"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:57.062" endtime="20201110 08:32:57.064"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:57.070" endtime="20201110 08:32:57.092"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.065" endtime="20201110 08:32:57.093"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.057" endtime="20201110 08:32:57.095"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:56.545" endtime="20201110 08:32:57.095"></status>
</kw>
<msg timestamp="20201110 08:32:57.096" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:57.115" endtime="20201110 08:32:57.128"></status>
</kw>
<msg timestamp="20201110 08:32:57.129" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:57.112" endtime="20201110 08:32:57.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:57.135" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:57.132" endtime="20201110 08:32:57.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:57.138" endtime="20201110 08:32:57.142"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.105" endtime="20201110 08:32:57.144"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.100" endtime="20201110 08:32:57.145"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:57.162" endtime="20201110 08:32:57.510"></status>
</kw>
<msg timestamp="20201110 08:32:57.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036195611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036204458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:57.159" endtime="20201110 08:32:57.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:57.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036195611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036204458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:57.519" endtime="20201110 08:32:57.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:57.537" endtime="20201110 08:32:57.541"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.152" endtime="20201110 08:32:57.543"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.147" endtime="20201110 08:32:57.544"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:57.555" level="INFO">${RESULT} = [{'time': 0.036204458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.846999999999328e-06, 'source_diff': 8.846999999999328e-06}, {'time': 0.036219444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:32:57.546" endtime="20201110 08:32:57.555"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:57.585" level="INFO">${OVERHEAD} = {'time': [0.036204458, 0.036219444, 0.036234389, 0.036248417, 0.036267486, 0.036286611, 0.036304569, 0.036321583, 0.036337625, 0.036357667, 0.036376694, 0.036395722, 0.036411861, 0.036429847, 0.036444...</msg>
<status status="PASS" starttime="20201110 08:32:57.557" endtime="20201110 08:32:57.586"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:57.595" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:32:57.593" endtime="20201110 08:32:57.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:57.601" level="INFO">VALUE: [8.846999999999328e-06, 9.569000000000938e-06, 9.360999999999398e-06, 8.999999999995123e-06, 9.694000000004532e-06, 9.528000000001702e-06, 9.416000000005142e-06, 9.040999999994359e-06, 8.860999999998898e-06, 9.486000000002992e-06, 9.527000000002228e-06, 9.541000000001798e-06, 9.374999999998967e-06, 9.014000000001632e-06, 9.014000000001632e-06, 9.499999999995623e-06, 9.013000000002158e-06, 9.028000000001202e-06, 9.528000000001702e-06, 9.014000000001632e-06, 9.028000000001202e-06, 9.528000000001702e-06, 9.195000000003506e-06, 9.514000000002132e-06, 8.860999999998898e-06, 9.513999999995193e-06, 9.194999999996567e-06, 9.346999999999828e-06, 9.346999999999828e-06, 9.208000000003602e-06, 9.542000000001272e-06, 9.693999999997593e-06, 8.861000000005836e-06, 9.014000000001632e-06, 8.846999999999328e-06, 9.179999999997523e-06, 9.527999999994763e-06, 9.000000000002062e-06, 9.235999999995803e-06, 8.833999999999231e-06, 9.194000000004032e-06, 9.138999999998287e-06, 9.542000000001272e-06, 9.693999999997593e-06, 9.165999999997954e-06, 9.028000000001202e-06, 9.014000000001632e-06, 9.721999999996733e-06, 9.500000000002562e-06, 9.042000000000772e-06]</msg>
<status status="PASS" starttime="20201110 08:32:57.597" endtime="20201110 08:32:57.602"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.587" endtime="20201110 08:32:57.604"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:57.610" endtime="20201110 08:32:57.614"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:57.620" endtime="20201110 08:32:57.641"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.615" endtime="20201110 08:32:57.643"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.605" endtime="20201110 08:32:57.644"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.097" endtime="20201110 08:32:57.645"></status>
</kw>
<msg timestamp="20201110 08:32:57.646" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:57.665" endtime="20201110 08:32:57.678"></status>
</kw>
<msg timestamp="20201110 08:32:57.679" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:57.662" endtime="20201110 08:32:57.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:57.685" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:57.681" endtime="20201110 08:32:57.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:57.688" endtime="20201110 08:32:57.691"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.655" endtime="20201110 08:32:57.693"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.650" endtime="20201110 08:32:57.694"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:57.711" endtime="20201110 08:32:58.054"></status>
</kw>
<msg timestamp="20201110 08:32:58.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036315958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036324819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:57.707" endtime="20201110 08:32:58.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:58.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036315958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036324819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:58.064" endtime="20201110 08:32:58.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:58.082" endtime="20201110 08:32:58.086"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.700" endtime="20201110 08:32:58.087"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.696" endtime="20201110 08:32:58.089"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:58.099" level="INFO">${RESULT} = [{'time': 0.036324819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.860999999998898e-06, 'source_diff': 8.860999999998898e-06}, {'time': 0.036340833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:32:58.090" endtime="20201110 08:32:58.100"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:58.130" level="INFO">${OVERHEAD} = {'time': [0.036324819, 0.036340833, 0.036358986, 0.036378014, 0.036394139, 0.036414111, 0.036432056, 0.036451167, 0.036466181, 0.036486181, 0.036501167, 0.03652025, 0.036536208, 0.036556319, 0.0365703...</msg>
<status status="PASS" starttime="20201110 08:32:58.101" endtime="20201110 08:32:58.130"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:58.140" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:32:58.137" endtime="20201110 08:32:58.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:58.145" level="INFO">VALUE: [8.860999999998898e-06, 9.027000000001728e-06, 9.694000000004532e-06, 9.042000000000772e-06, 9.764000000002382e-06, 9.514000000002132e-06, 9.402999999998107e-06, 9.333999999999731e-06, 9.680999999997497e-06, 9.042000000000772e-06, 9.695000000004006e-06, 9.652999999998357e-06, 9.151999999998384e-06, 9.554999999994429e-06, 8.986999999995027e-06, 9.360999999999398e-06, 9.013999999994693e-06, 9.679999999998024e-06, 8.832999999999758e-06, 9.708999999996637e-06, 9.166000000004892e-06, 9.387999999999064e-06, 9.514000000002132e-06, 9.346999999999828e-06, 9.346999999999828e-06, 9.527999999994763e-06, 9.360999999999398e-06, 9.333999999999731e-06, 9.028000000001202e-06, 9.528000000001702e-06, 9.610999999999648e-06, 9.193999999997093e-06, 9.528000000001702e-06, 9.679999999998024e-06, 9.014000000001632e-06, 9.180999999996997e-06, 9.763000000002908e-06, 9.695000000004006e-06, 9.347999999999301e-06, 9.346999999999828e-06, 8.847999999998801e-06, 9.527999999994763e-06, 9.028000000001202e-06, 9.679999999998024e-06, 9.014000000001632e-06, 9.693999999997593e-06, 9.737000000002716e-06, 9.014000000001632e-06, 8.832999999999758e-06, 9.069000000000438e-06]</msg>
<status status="PASS" starttime="20201110 08:32:58.142" endtime="20201110 08:32:58.146"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.132" endtime="20201110 08:32:58.148"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:58.154" endtime="20201110 08:32:58.157"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:58.163" endtime="20201110 08:32:58.186"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.158" endtime="20201110 08:32:58.187"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.150" endtime="20201110 08:32:58.189"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.647" endtime="20201110 08:32:58.190"></status>
</kw>
<msg timestamp="20201110 08:32:58.190" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:58.210" endtime="20201110 08:32:58.223"></status>
</kw>
<msg timestamp="20201110 08:32:58.224" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:58.206" endtime="20201110 08:32:58.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:58.230" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:58.226" endtime="20201110 08:32:58.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:58.232" endtime="20201110 08:32:58.236"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.199" endtime="20201110 08:32:58.237"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.195" endtime="20201110 08:32:58.239"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:58.256" endtime="20201110 08:32:58.601"></status>
</kw>
<msg timestamp="20201110 08:32:58.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036484986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036494347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:58.253" endtime="20201110 08:32:58.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:58.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036484986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036494347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:58.610" endtime="20201110 08:32:58.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:58.629" endtime="20201110 08:32:58.632"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.245" endtime="20201110 08:32:58.634"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.240" endtime="20201110 08:32:58.635"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:58.646" level="INFO">${RESULT} = [{'time': 0.036494347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.361000000006336e-06, 'source_diff': 9.361000000006336e-06}, {'time': 0.036511458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:32:58.637" endtime="20201110 08:32:58.646"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:58.686" level="INFO">${OVERHEAD} = {'time': [0.036494347, 0.036511458, 0.036526375, 0.036542528, 0.036560542, 0.036576486, 0.036596597, 0.036616542, 0.036633625, 0.036649722, 0.036664625, 0.036680861, 0.036697819, 0.036715694, 0.036730...</msg>
<status status="PASS" starttime="20201110 08:32:58.648" endtime="20201110 08:32:58.687"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:58.701" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:32:58.698" endtime="20201110 08:32:58.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:58.708" level="INFO">VALUE: [9.361000000006336e-06, 9.707999999997163e-06, 9.528000000001702e-06, 8.833999999999231e-06, 9.360999999999398e-06, 9.069000000000438e-06, 9.194000000004032e-06, 9.514000000002132e-06, 8.847000000006267e-06, 9.528000000001702e-06, 8.860999999998898e-06, 8.944000000003782e-06, 9.541000000001798e-06, 9.027000000001728e-06, 9.374999999998967e-06, 9.693999999997593e-06, 9.028000000001202e-06, 9.556000000000842e-06, 9.750000000002812e-06, 8.861000000005836e-06, 9.180999999996997e-06, 9.527000000002228e-06, 9.528000000001702e-06, 9.361999999998871e-06, 9.430000000004712e-06, 9.264000000001882e-06, 9.527999999994763e-06, 9.027999999994263e-06, 9.528000000001702e-06, 9.028000000001202e-06, 9.194000000004032e-06, 9.221999999996233e-06, 9.709000000003576e-06, 9.679999999998024e-06, 9.346999999999828e-06, 9.347999999999301e-06, 8.860999999998898e-06, 9.179999999997523e-06, 9.708999999996637e-06, 9.694999999997067e-06, 9.528000000001702e-06, 8.860999999998898e-06, 9.541000000001798e-06, 9.014000000001632e-06, 9.360999999999398e-06, 9.194999999996567e-06, 9.485999999996053e-06, 9.514000000002132e-06, 9.374999999998967e-06, 8.874999999998467e-06]</msg>
<status status="PASS" starttime="20201110 08:32:58.703" endtime="20201110 08:32:58.709"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.689" endtime="20201110 08:32:58.711"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:58.717" endtime="20201110 08:32:58.720"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:58.725" endtime="20201110 08:32:58.747"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.721" endtime="20201110 08:32:58.749"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.713" endtime="20201110 08:32:58.750"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.191" endtime="20201110 08:32:58.751"></status>
</kw>
<msg timestamp="20201110 08:32:58.751" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:58.774" endtime="20201110 08:32:58.788"></status>
</kw>
<msg timestamp="20201110 08:32:58.789" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:58.770" endtime="20201110 08:32:58.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:58.795" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:58.791" endtime="20201110 08:32:58.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:58.797" endtime="20201110 08:32:58.801"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.762" endtime="20201110 08:32:58.803"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.756" endtime="20201110 08:32:58.804"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:58.821" endtime="20201110 08:32:59.165"></status>
</kw>
<msg timestamp="20201110 08:32:59.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040336958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040345986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:58.817" endtime="20201110 08:32:59.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:59.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040336958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040345986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:59.174" endtime="20201110 08:32:59.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:59.193" endtime="20201110 08:32:59.196"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.810" endtime="20201110 08:32:59.198"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.805" endtime="20201110 08:32:59.199"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:59.210" level="INFO">${RESULT} = [{'time': 0.040345986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.028000000001202e-06, 'source_diff': 9.028000000001202e-06}, {'time': 0.040363917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:32:59.201" endtime="20201110 08:32:59.210"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:59.240" level="INFO">${OVERHEAD} = {'time': [0.040345986, 0.040363917, 0.040379083, 0.040394056, 0.040413056, 0.040430083, 0.040449208, 0.040464153, 0.040479278, 0.040495306, 0.040510306, 0.040524333, 0.040544389, 0.040563431, 0.040578...</msg>
<status status="PASS" starttime="20201110 08:32:59.212" endtime="20201110 08:32:59.241"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:59.250" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:32:59.248" endtime="20201110 08:32:59.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:59.256" level="INFO">VALUE: [9.028000000001202e-06, 9.694999999997067e-06, 9.027000000001728e-06, 9.027999999994263e-06, 9.500000000002562e-06, 9.388999999998537e-06, 8.832999999999758e-06, 9.528000000001702e-06, 9.680999999997497e-06, 9.333999999999731e-06, 8.84800000000574e-06, 9.014000000001632e-06, 9.195000000003506e-06, 8.944999999996317e-06, 9.014000000001632e-06, 9.195000000003506e-06, 9.542000000001272e-06, 9.681000000004436e-06, 9.041000000001298e-06, 9.722000000003672e-06, 9.750000000002812e-06, 9.346999999999828e-06, 9.570000000000412e-06, 9.693999999997593e-06, 9.320000000000161e-06, 9.695000000004006e-06, 9.194000000004032e-06, 9.360999999999398e-06, 8.860999999998898e-06, 8.86200000000531e-06, 8.860999999998898e-06, 8.846999999999328e-06, 9.513999999995193e-06, 9.416999999997677e-06, 9.014000000001632e-06, 9.360999999999398e-06, 9.000000000002062e-06, 9.208999999996137e-06, 9.028000000001202e-06, 9.693999999997593e-06, 9.028000000001202e-06, 9.181000000003936e-06, 9.360999999999398e-06, 8.833999999999231e-06, 8.972000000002922e-06, 8.846999999999328e-06, 9.181000000003936e-06, 9.180999999996997e-06, 9.638999999998787e-06, 9.014000000001632e-06]</msg>
<status status="PASS" starttime="20201110 08:32:59.253" endtime="20201110 08:32:59.257"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.242" endtime="20201110 08:32:59.259"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:59.265" endtime="20201110 08:32:59.268"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:59.273" endtime="20201110 08:32:59.295"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.269" endtime="20201110 08:32:59.297"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.261" endtime="20201110 08:32:59.298"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.753" endtime="20201110 08:32:59.299"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:48.215" endtime="20201110 08:32:59.300"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:59.310" endtime="20201110 08:32:59.332"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.306" endtime="20201110 08:32:59.334"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.303" endtime="20201110 08:32:59.334"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201110 08:32:48.083" endtime="20201110 08:32:59.335" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:59.351" endtime="20201110 08:32:59.373"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.348" endtime="20201110 08:32:59.375"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:59.409" endtime="20201110 08:32:59.427"></status>
</kw>
<msg timestamp="20201110 08:32:59.428" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:59.406" endtime="20201110 08:32:59.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:59.434" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:59.430" endtime="20201110 08:32:59.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:32:59.441" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:32:59.437" endtime="20201110 08:32:59.442"></status>
</kw>
<status status="FAIL" starttime="20201110 08:32:59.399" endtime="20201110 08:32:59.443"></status>
</kw>
<status status="FAIL" starttime="20201110 08:32:59.392" endtime="20201110 08:32:59.445"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.390" endtime="20201110 08:32:59.446"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:32:59.453" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:32:59.452" endtime="20201110 08:32:59.454"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.447" endtime="20201110 08:32:59.454"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.388" endtime="20201110 08:32:59.455"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.386" endtime="20201110 08:32:59.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:59.457" endtime="20201110 08:32:59.460"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.381" endtime="20201110 08:32:59.462"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.376" endtime="20201110 08:32:59.463"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.345" endtime="20201110 08:32:59.464"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:59.485" endtime="20201110 08:32:59.510"></status>
</kw>
<msg timestamp="20201110 08:32:59.511" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:59.482" endtime="20201110 08:32:59.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:59.517" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:59.513" endtime="20201110 08:32:59.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:59.519" endtime="20201110 08:32:59.523"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.475" endtime="20201110 08:32:59.524"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.470" endtime="20201110 08:32:59.526"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:59.530" endtime="20201110 08:32:59.535"></status>
</kw>
<msg timestamp="20201110 08:32:59.536" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201110 08:32:59.528" endtime="20201110 08:32:59.536"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:59.546" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:32:59.544" endtime="20201110 08:32:59.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:59.550" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:32:59.548" endtime="20201110 08:32:59.551"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.538" endtime="20201110 08:32:59.553"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:59.564" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:32:59.560" endtime="20201110 08:32:59.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:59.568" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:32:59.566" endtime="20201110 08:32:59.569"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.554" endtime="20201110 08:32:59.571"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:59.587" endtime="20201110 08:32:59.941"></status>
</kw>
<msg timestamp="20201110 08:32:59.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.126517806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.126533472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:59.584" endtime="20201110 08:32:59.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:59.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.126517806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.126533472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:59.951" endtime="20201110 08:32:59.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:59.970" endtime="20201110 08:32:59.973"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.576" endtime="20201110 08:32:59.975"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.572" endtime="20201110 08:32:59.976"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:59.987" level="INFO">${RESULT} = [{'time': 0.126533472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5665999999997515e-05, 'source_diff': 1.5665999999997515e-05}, {'time': 0.126559528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:32:59.978" endtime="20201110 08:32:59.987"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:00.018" level="INFO">${OVERHEAD} = {'time': [0.126533472, 0.126559528, 0.126583444, 0.1266045, 0.126630611, 0.126657694, 0.126680625, 0.126701708, 0.126728681, 0.126755847, 0.126778792, 0.126805986, 0.126827014, 0.126850958, 0.12687398...</msg>
<status status="PASS" starttime="20201110 08:32:59.989" endtime="20201110 08:33:00.018"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:00.029" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201110 08:33:00.026" endtime="20201110 08:33:00.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:00.035" level="INFO">VALUE: [1.5665999999997515e-05, 1.5861000000005898e-05, 1.6276999999981223e-05, 1.593099999999681e-05, 1.661099999999971e-05, 1.6429999999983957e-05, 1.643099999998343e-05, 1.57769999999946e-05, 1.6125000000005718e-05, 1.6111000000013087e-05, 1.647299999998908e-05, 1.6457999999996975e-05, 1.6471999999989606e-05, 1.645800000002473e-05, 1.5943999999989966e-05, 1.659700000000708e-05, 1.629100000000161e-05, 1.6375000000012907e-05, 1.662499999999234e-05, 1.645800000002473e-05, 1.5972000000002984e-05, 1.613899999999835e-05, 1.5790999999987232e-05, 1.6125000000005718e-05, 1.6305999999993714e-05, 1.5944000000017722e-05, 1.5957999999982597e-05, 1.5999999999988246e-05, 1.615299999999098e-05, 1.5957999999982597e-05, 1.5819999999999723e-05, 1.6111999999984805e-05, 1.5764000000001444e-05, 1.5957999999982597e-05, 1.6125000000005718e-05, 1.6444000000004344e-05, 1.5958000000010353e-05, 1.644399999997659e-05, 1.5777999999994075e-05, 1.594499999998944e-05, 1.594499999998944e-05, 1.6292000000001083e-05, 1.611099999998533e-05, 1.598699999999509e-05, 1.5791999999986706e-05, 1.6111000000013087e-05, 1.630499999999424e-05, 1.6125000000005718e-05, 1.6137999999998875e-05, 1.5958000000010353e-05]</msg>
<status status="PASS" starttime="20201110 08:33:00.032" endtime="20201110 08:33:00.036"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.019" endtime="20201110 08:33:00.037"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:00.044" endtime="20201110 08:33:00.046"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:00.052" endtime="20201110 08:33:00.073"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.047" endtime="20201110 08:33:00.075"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.039" endtime="20201110 08:33:00.077"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.465" endtime="20201110 08:33:00.077"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201110 08:32:59.339" endtime="20201110 08:33:00.079" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:00.095" endtime="20201110 08:33:00.117"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.092" endtime="20201110 08:33:00.119"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:00.153" endtime="20201110 08:33:00.171"></status>
</kw>
<msg timestamp="20201110 08:33:00.172" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:00.150" endtime="20201110 08:33:00.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:00.178" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:00.174" endtime="20201110 08:33:00.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:33:00.185" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:33:00.181" endtime="20201110 08:33:00.185"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:00.142" endtime="20201110 08:33:00.187"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:00.134" endtime="20201110 08:33:00.189"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.132" endtime="20201110 08:33:00.189"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:33:00.197" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:33:00.196" endtime="20201110 08:33:00.198"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.191" endtime="20201110 08:33:00.198"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.130" endtime="20201110 08:33:00.199"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.128" endtime="20201110 08:33:00.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:00.201" endtime="20201110 08:33:00.204"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.125" endtime="20201110 08:33:00.206"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.120" endtime="20201110 08:33:00.207"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.089" endtime="20201110 08:33:00.208"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:00.230" endtime="20201110 08:33:00.343"></status>
</kw>
<msg timestamp="20201110 08:33:00.344" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:00.227" endtime="20201110 08:33:00.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:00.350" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:00.346" endtime="20201110 08:33:00.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:00.352" endtime="20201110 08:33:00.356"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.220" endtime="20201110 08:33:00.357"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.213" endtime="20201110 08:33:00.359"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:00.363" endtime="20201110 08:33:00.368"></status>
</kw>
<msg timestamp="20201110 08:33:00.369" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201110 08:33:00.361" endtime="20201110 08:33:00.369"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:00.379" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:33:00.376" endtime="20201110 08:33:00.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:00.383" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:33:00.381" endtime="20201110 08:33:00.384"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.371" endtime="20201110 08:33:00.385"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:00.395" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:33:00.393" endtime="20201110 08:33:00.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:00.399" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:33:00.397" endtime="20201110 08:33:00.400"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.387" endtime="20201110 08:33:00.401"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:00.420" endtime="20201110 08:33:00.775"></status>
</kw>
<msg timestamp="20201110 08:33:00.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.128474903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.128531181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:00.414" endtime="20201110 08:33:00.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:00.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.128474903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.128531181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:00.785" endtime="20201110 08:33:00.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:00.803" endtime="20201110 08:33:00.807"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.407" endtime="20201110 08:33:00.808"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.403" endtime="20201110 08:33:00.810"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:00.820" level="INFO">${RESULT} = [{'time': 0.128531181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6277999999992945e-05, 'source_diff': 5.6277999999992945e-05}, {'time': 0.130319431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:00.811" endtime="20201110 08:33:00.820"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:00.850" level="INFO">${OVERHEAD} = {'time': [0.128531181, 0.130319431, 0.132104708, 0.133893833, 0.135679903, 0.137467875, 0.139258014, 0.141046139, 0.142841333, 0.1446335, 0.1464205, 0.148211417, 0.150004403, 0.151798208, 0.153583403,...</msg>
<status status="PASS" starttime="20201110 08:33:00.822" endtime="20201110 08:33:00.857"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:00.868" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201110 08:33:00.866" endtime="20201110 08:33:00.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:00.874" level="INFO">VALUE: [5.6277999999992945e-05, 5.555600000001215e-05, 5.6221999999994665e-05, 5.588900000000341e-05, 5.56949999999945e-05, 5.5541999999991765e-05, 5.622200000002242e-05, 5.588899999997565e-05, 5.5707999999987656e-05, 5.604200000000614e-05, 5.588900000000341e-05, 5.554200000001952e-05, 5.607000000001916e-05, 5.619399999998165e-05, 5.588900000000341e-05, 5.587500000001078e-05, 5.591699999998867e-05, 5.604199999997839e-05, 5.588900000000341e-05, 5.622200000002242e-05, 5.63749999999974e-05, 5.5527999999999134e-05, 5.568100000000187e-05, 5.586099999999039e-05, 5.588900000000341e-05, 5.557000000000478e-05, 5.555600000001215e-05, 5.584699999999776e-05, 5.6181000000016246e-05, 5.60549999999993e-05, 5.619399999998165e-05, 5.587499999998302e-05, 5.63749999999974e-05, 5.6235999999987296e-05, 5.6264000000000314e-05, 5.570800000001541e-05, 5.604200000000614e-05, 5.5541000000020047e-05, 5.5861000000018146e-05, 5.6027999999985756e-05, 5.638899999999003e-05, 5.5541999999991765e-05, 5.616699999999586e-05, 5.60549999999993e-05, 5.572200000000804e-05, 5.638899999999003e-05, 5.641700000000305e-05, 5.565299999998885e-05, 5.608299999998456e-05, 5.604100000000667e-05]</msg>
<status status="PASS" starttime="20201110 08:33:00.870" endtime="20201110 08:33:00.874"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.859" endtime="20201110 08:33:00.876"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:00.882" endtime="20201110 08:33:00.885"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:00.890" endtime="20201110 08:33:00.912"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.886" endtime="20201110 08:33:00.914"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.878" endtime="20201110 08:33:00.915"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.209" endtime="20201110 08:33:00.916"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201110 08:33:00.083" endtime="20201110 08:33:00.917" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:00.936" endtime="20201110 08:33:00.963"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.931" endtime="20201110 08:33:00.966"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:01.005" endtime="20201110 08:33:01.021"></status>
</kw>
<msg timestamp="20201110 08:33:01.022" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:00.998" endtime="20201110 08:33:01.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:01.028" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:01.024" endtime="20201110 08:33:01.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:33:01.035" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:33:01.031" endtime="20201110 08:33:01.036"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:00.991" endtime="20201110 08:33:01.038"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:00.985" endtime="20201110 08:33:01.039"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.982" endtime="20201110 08:33:01.040"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:33:01.047" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:33:01.046" endtime="20201110 08:33:01.048"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:01.042" endtime="20201110 08:33:01.049"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.980" endtime="20201110 08:33:01.049"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.978" endtime="20201110 08:33:01.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:01.051" endtime="20201110 08:33:01.054"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.973" endtime="20201110 08:33:01.057"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.968" endtime="20201110 08:33:01.058"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.928" endtime="20201110 08:33:01.059"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:01.081" endtime="20201110 08:33:01.396"></status>
</kw>
<msg timestamp="20201110 08:33:01.398" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:01.077" endtime="20201110 08:33:01.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:01.404" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:01.400" endtime="20201110 08:33:01.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:01.406" endtime="20201110 08:33:01.410"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:01.070" endtime="20201110 08:33:01.411"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:01.064" endtime="20201110 08:33:01.413"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:01.417" endtime="20201110 08:33:01.422"></status>
</kw>
<msg timestamp="20201110 08:33:01.423" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201110 08:33:01.415" endtime="20201110 08:33:01.423"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:01.433" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:33:01.431" endtime="20201110 08:33:01.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:01.437" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:33:01.435" endtime="20201110 08:33:01.438"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:01.425" endtime="20201110 08:33:01.439"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:01.449" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:33:01.447" endtime="20201110 08:33:01.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:01.453" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:33:01.451" endtime="20201110 08:33:01.454"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:01.441" endtime="20201110 08:33:01.456"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:01.472" endtime="20201110 08:33:01.814"></status>
</kw>
<msg timestamp="20201110 08:33:01.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.140356486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.140455931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:01.468" endtime="20201110 08:33:01.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:01.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.140356486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.140455931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:01.823" endtime="20201110 08:33:01.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:01.841" endtime="20201110 08:33:01.844"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:01.461" endtime="20201110 08:33:01.846"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:01.457" endtime="20201110 08:33:01.847"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:01.858" level="INFO">${RESULT} = [{'time': 0.140455931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.944500000000356e-05, 'source_diff': 9.944500000000356e-05}, {'time': 0.146392639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:01.849" endtime="20201110 08:33:01.859"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:01.891" level="INFO">${OVERHEAD} = {'time': [0.140455931, 0.146392639, 0.152341139, 0.158278569, 0.164219069, 0.170169875, 0.176110472, 0.182053097, 0.187989472, 0.193942417, 0.199891458, 0.205830556, 0.211769361, 0.217717972, 0.223654...</msg>
<status status="PASS" starttime="20201110 08:33:01.861" endtime="20201110 08:33:01.891"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:01.902" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201110 08:33:01.900" endtime="20201110 08:33:01.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:01.907" level="INFO">VALUE: [9.944500000000356e-05, 9.856999999999227e-05, 9.855599999999964e-05, 9.883300000002038e-05, 9.940199999999844e-05, 9.936099999999226e-05, 9.941599999999107e-05, 9.887499999999827e-05, 9.855500000000017e-05, 9.856999999999227e-05, 9.87080000000029e-05, 9.890300000001129e-05, 9.920799999998953e-05, 9.905500000001455e-05, 9.88889999999909e-05, 9.855599999999964e-05, 9.891600000000444e-05, 9.924999999999518e-05, 9.907000000000665e-05, 9.908299999999981e-05, 9.866699999999673e-05, 9.872199999999554e-05, 9.890299999998353e-05, 9.8513999999994e-05, 9.905600000004178e-05, 9.944500000003131e-05, 9.945799999999672e-05, 9.88889999999909e-05, 9.941600000001882e-05, 9.89310000000243e-05, 9.91249999999777e-05, 9.905499999995904e-05, 9.90409999999664e-05, 9.924999999999518e-05, 9.868099999998936e-05, 9.858299999998543e-05, 9.859699999997806e-05, 9.904200000004915e-05, 9.886099999995013e-05, 9.923600000000254e-05, 9.872199999999554e-05, 9.886100000000564e-05, 9.920799999996177e-05, 9.855599999997189e-05, 9.887499999999827e-05, 9.920800000001728e-05, 9.883299999996487e-05, 9.919499999999637e-05, 9.919399999996914e-05, 9.897200000003048e-05]</msg>
<status status="PASS" starttime="20201110 08:33:01.904" endtime="20201110 08:33:01.908"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:01.893" endtime="20201110 08:33:01.910"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:01.916" endtime="20201110 08:33:01.918"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:01.924" endtime="20201110 08:33:01.946"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:01.920" endtime="20201110 08:33:01.947"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:01.911" endtime="20201110 08:33:01.949"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:01.060" endtime="20201110 08:33:01.949"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201110 08:33:00.922" endtime="20201110 08:33:01.951" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:01.967" endtime="20201110 08:33:01.990"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:01.964" endtime="20201110 08:33:01.991"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:02.034" endtime="20201110 08:33:02.053"></status>
</kw>
<msg timestamp="20201110 08:33:02.055" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:02.029" endtime="20201110 08:33:02.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:02.062" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:02.057" endtime="20201110 08:33:02.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:33:02.076" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:33:02.066" endtime="20201110 08:33:02.078"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:02.019" endtime="20201110 08:33:02.081"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:02.010" endtime="20201110 08:33:02.084"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.007" endtime="20201110 08:33:02.085"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:33:02.096" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:33:02.094" endtime="20201110 08:33:02.098"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.088" endtime="20201110 08:33:02.099"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.005" endtime="20201110 08:33:02.100"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.003" endtime="20201110 08:33:02.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:02.102" endtime="20201110 08:33:02.106"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:01.998" endtime="20201110 08:33:02.108"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:01.993" endtime="20201110 08:33:02.112"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:01.961" endtime="20201110 08:33:02.113"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:02.147" endtime="20201110 08:33:02.171"></status>
</kw>
<msg timestamp="20201110 08:33:02.172" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:02.143" endtime="20201110 08:33:02.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:02.180" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:02.175" endtime="20201110 08:33:02.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:02.183" endtime="20201110 08:33:02.187"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.133" endtime="20201110 08:33:02.190"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.122" endtime="20201110 08:33:02.192"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:02.197" endtime="20201110 08:33:02.203"></status>
</kw>
<msg timestamp="20201110 08:33:02.204" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201110 08:33:02.194" endtime="20201110 08:33:02.205"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:02.217" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:33:02.214" endtime="20201110 08:33:02.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:02.222" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:33:02.219" endtime="20201110 08:33:02.223"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.206" endtime="20201110 08:33:02.225"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:02.237" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:33:02.234" endtime="20201110 08:33:02.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:02.243" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:33:02.240" endtime="20201110 08:33:02.244"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.227" endtime="20201110 08:33:02.246"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:02.266" endtime="20201110 08:33:02.623"></status>
</kw>
<msg timestamp="20201110 08:33:02.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.173076125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.173078181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:02.262" endtime="20201110 08:33:02.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:02.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.173076125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.173078181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:02.633" endtime="20201110 08:33:02.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:02.651" endtime="20201110 08:33:02.655"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.253" endtime="20201110 08:33:02.656"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.248" endtime="20201110 08:33:02.658"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:02.669" level="INFO">${RESULT} = [{'time': 0.173078181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.05600000000028e-06, 'source_diff': 2.05600000000028e-06}, {'time': 0.173102708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:33:02.660" endtime="20201110 08:33:02.670"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:02.701" level="INFO">${OVERHEAD} = {'time': [0.173078181, 0.173102708, 0.173128347, 0.173151972, 0.173177986, 0.173203347, 0.173230361, 0.173255694, 0.173280958, 0.173307847, 0.173333847, 0.173362667, 0.173385625, 0.173413542, 0.173437...</msg>
<status status="PASS" starttime="20201110 08:33:02.671" endtime="20201110 08:33:02.702"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:02.714" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201110 08:33:02.712" endtime="20201110 08:33:02.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:02.722" level="INFO">VALUE: [2.05600000000028e-06, 2.0409999999804196e-06, 2.0829999999860682e-06, 1.9859999999816136e-06, 2.055000000000806e-06, 2.041000000008175e-06, 2.055000000000806e-06, 2.0409999999804196e-06, 2.041000000008175e-06, 2.055000000000806e-06, 2.028000000015018e-06, 2.042000000007649e-06, 2.05600000000028e-06, 2.042000000007649e-06, 2.055000000000806e-06, 2.055000000000806e-06, 2.05600000000028e-06, 2.0700000000206664e-06, 2.05600000000028e-06, 2.05600000000028e-06, 2.1390000000121034e-06, 2.042000000007649e-06, 2.097999999978173e-06, 2.068999999993437e-06, 2.041000000008175e-06, 2.110999999999086e-06, 2.0700000000206664e-06, 2.0419999999798932e-06, 2.05600000000028e-06, 2.05600000000028e-06, 1.9719999999889826e-06, 2.055000000000806e-06, 2.05600000000028e-06, 2.013999999994631e-06, 2.0419999999798932e-06, 2.042000000007649e-06, 2.083000000013824e-06, 2.0549999999730506e-06, 2.0269999999877886e-06, 2.042000000007649e-06, 2.0419999999798932e-06, 2.05600000000028e-06, 2.0840000000132974e-06, 2.0279999999872622e-06, 2.0279999999872622e-06, 2.0829999999860682e-06, 2.05600000000028e-06, 2.0840000000132974e-06, 2.0829999999860682e-06, 2.042000000007649e-06]</msg>
<status status="PASS" starttime="20201110 08:33:02.717" endtime="20201110 08:33:02.724"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.703" endtime="20201110 08:33:02.726"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:02.734" endtime="20201110 08:33:02.738"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:02.745" endtime="20201110 08:33:02.768"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.740" endtime="20201110 08:33:02.770"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.728" endtime="20201110 08:33:02.771"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.115" endtime="20201110 08:33:02.772"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201110 08:33:01.955" endtime="20201110 08:33:02.774" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:02.790" endtime="20201110 08:33:02.812"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.787" endtime="20201110 08:33:02.814"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:02.846" endtime="20201110 08:33:02.865"></status>
</kw>
<msg timestamp="20201110 08:33:02.867" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:02.843" endtime="20201110 08:33:02.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:02.873" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:02.869" endtime="20201110 08:33:02.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:33:02.880" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:33:02.875" endtime="20201110 08:33:02.880"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:02.836" endtime="20201110 08:33:02.882"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:02.830" endtime="20201110 08:33:02.884"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.827" endtime="20201110 08:33:02.884"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:33:02.893" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:33:02.891" endtime="20201110 08:33:02.894"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.887" endtime="20201110 08:33:02.894"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.825" endtime="20201110 08:33:02.894"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.824" endtime="20201110 08:33:02.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:02.896" endtime="20201110 08:33:02.900"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.820" endtime="20201110 08:33:02.901"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.815" endtime="20201110 08:33:02.903"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.784" endtime="20201110 08:33:02.903"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:02.925" endtime="20201110 08:33:03.038"></status>
</kw>
<msg timestamp="20201110 08:33:03.040" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:02.922" endtime="20201110 08:33:03.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:03.046" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:03.042" endtime="20201110 08:33:03.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:03.048" endtime="20201110 08:33:03.052"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.915" endtime="20201110 08:33:03.053"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.909" endtime="20201110 08:33:03.055"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:03.059" endtime="20201110 08:33:03.064"></status>
</kw>
<msg timestamp="20201110 08:33:03.065" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201110 08:33:03.056" endtime="20201110 08:33:03.065"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:03.075" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:33:03.072" endtime="20201110 08:33:03.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:03.079" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:33:03.077" endtime="20201110 08:33:03.080"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.066" endtime="20201110 08:33:03.081"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:03.091" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:33:03.088" endtime="20201110 08:33:03.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:03.095" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:33:03.093" endtime="20201110 08:33:03.096"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.083" endtime="20201110 08:33:03.097"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:03.114" endtime="20201110 08:33:03.482"></status>
</kw>
<msg timestamp="20201110 08:33:03.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.128641972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.128654278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:03.110" endtime="20201110 08:33:03.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:03.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.128641972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.128654278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:03.492" endtime="20201110 08:33:03.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:03.511" endtime="20201110 08:33:03.515"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.103" endtime="20201110 08:33:03.516"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.099" endtime="20201110 08:33:03.518"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:03.528" level="INFO">${RESULT} = [{'time': 0.128654278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.230600000001747e-05, 'source_diff': 1.230600000001747e-05}, {'time': 0.130450347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:03.519" endtime="20201110 08:33:03.529"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:03.559" level="INFO">${OVERHEAD} = {'time': [0.128654278, 0.130450347, 0.132250875, 0.134046528, 0.135843986, 0.137644125, 0.139445431, 0.141249931, 0.143051986, 0.144853472, 0.146654375, 0.148460542, 0.150265403, 0.152065611, 0.153866...</msg>
<status status="PASS" starttime="20201110 08:33:03.530" endtime="20201110 08:33:03.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:03.570" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201110 08:33:03.567" endtime="20201110 08:33:03.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:03.575" level="INFO">VALUE: [1.230600000001747e-05, 1.2333000000003258e-05, 1.2305999999989714e-05, 1.23200000000101e-05, 1.2333000000003258e-05, 1.2346999999995889e-05, 1.2334000000002732e-05, 1.2305999999989714e-05, 1.2333000000003258e-05, 1.2305000000017996e-05, 1.2319000000010627e-05, 1.23200000000101e-05, 1.2346999999995889e-05, 1.2318999999982871e-05, 1.2334000000002732e-05, 1.23200000000101e-05, 1.2319999999982345e-05, 1.230600000001747e-05, 1.2333000000003258e-05, 1.236099999998852e-05, 1.2333000000003258e-05, 1.2361000000016276e-05, 1.2361000000016276e-05, 1.230499999999024e-05, 1.2333000000003258e-05, 1.230499999999024e-05, 1.2249999999991434e-05, 1.2319000000010627e-05, 1.2305000000017996e-05, 1.2249999999991434e-05, 1.2319000000010627e-05, 1.2305999999989714e-05, 1.2277999999976696e-05, 1.23200000000101e-05, 1.23200000000101e-05, 1.2305000000017996e-05, 1.2361000000016276e-05, 1.2334000000002732e-05, 1.2319999999982345e-05, 1.2318999999982871e-05, 1.2319000000010627e-05, 1.23200000000101e-05, 1.230499999999024e-05, 1.225000000001919e-05, 1.2278000000004452e-05, 1.2333000000003258e-05, 1.2333000000003258e-05, 1.2318999999982871e-05, 1.2389000000001538e-05, 1.2389000000001538e-05]</msg>
<status status="PASS" starttime="20201110 08:33:03.572" endtime="20201110 08:33:03.576"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.560" endtime="20201110 08:33:03.577"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:03.584" endtime="20201110 08:33:03.586"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:03.592" endtime="20201110 08:33:03.614"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.588" endtime="20201110 08:33:03.615"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.579" endtime="20201110 08:33:03.617"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.904" endtime="20201110 08:33:03.617"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201110 08:33:02.778" endtime="20201110 08:33:03.619" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:03.636" endtime="20201110 08:33:03.657"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.632" endtime="20201110 08:33:03.659"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:03.696" endtime="20201110 08:33:03.715"></status>
</kw>
<msg timestamp="20201110 08:33:03.716" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:03.688" endtime="20201110 08:33:03.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:03.722" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:03.718" endtime="20201110 08:33:03.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:33:03.729" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:33:03.724" endtime="20201110 08:33:03.730"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:03.681" endtime="20201110 08:33:03.732"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:03.675" endtime="20201110 08:33:03.734"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.672" endtime="20201110 08:33:03.734"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:33:03.742" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:33:03.740" endtime="20201110 08:33:03.743"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.736" endtime="20201110 08:33:03.743"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.671" endtime="20201110 08:33:03.743"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.669" endtime="20201110 08:33:03.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:03.745" endtime="20201110 08:33:03.749"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.665" endtime="20201110 08:33:03.750"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.661" endtime="20201110 08:33:03.752"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.629" endtime="20201110 08:33:03.752"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:03.774" endtime="20201110 08:33:04.096"></status>
</kw>
<msg timestamp="20201110 08:33:04.097" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:03.771" endtime="20201110 08:33:04.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:04.105" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:04.100" endtime="20201110 08:33:04.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:04.108" endtime="20201110 08:33:04.114"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.764" endtime="20201110 08:33:04.116"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.758" endtime="20201110 08:33:04.117"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:04.124" endtime="20201110 08:33:04.130"></status>
</kw>
<msg timestamp="20201110 08:33:04.131" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201110 08:33:04.120" endtime="20201110 08:33:04.132"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:04.145" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:33:04.142" endtime="20201110 08:33:04.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:04.151" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:33:04.148" endtime="20201110 08:33:04.151"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:04.134" endtime="20201110 08:33:04.153"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:04.162" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:33:04.160" endtime="20201110 08:33:04.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:04.167" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:33:04.164" endtime="20201110 08:33:04.167"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:04.154" endtime="20201110 08:33:04.169"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:04.185" endtime="20201110 08:33:04.556"></status>
</kw>
<msg timestamp="20201110 08:33:04.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.135935181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.135957903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:04.182" endtime="20201110 08:33:04.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:04.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.135935181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.135957903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:04.569" endtime="20201110 08:33:04.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:04.593" endtime="20201110 08:33:04.599"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:04.175" endtime="20201110 08:33:04.602"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:04.170" endtime="20201110 08:33:04.604"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:04.622" level="INFO">${RESULT} = [{'time': 0.135957903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2722000000002796e-05, 'source_diff': 2.2722000000002796e-05}, {'time': 0.141903708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:04.607" endtime="20201110 08:33:04.624"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:04.676" level="INFO">${OVERHEAD} = {'time': [0.135957903, 0.141903708, 0.14786225, 0.153809069, 0.159766736, 0.165721792, 0.171681917, 0.177639306, 0.183595681, 0.189543833, 0.195501611, 0.201447153, 0.207391222, 0.213352361, 0.2193129...</msg>
<status status="PASS" starttime="20201110 08:33:04.627" endtime="20201110 08:33:04.677"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:04.688" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201110 08:33:04.686" endtime="20201110 08:33:04.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:04.694" level="INFO">VALUE: [2.2722000000002796e-05, 2.276399999998069e-05, 2.2749999999988058e-05, 2.27770000000016e-05, 2.276399999998069e-05, 2.2750000000015813e-05, 2.276399999998069e-05, 2.2749999999988058e-05, 2.2750000000015813e-05, 2.2749999999988058e-05, 2.2778000000001075e-05, 2.276399999998069e-05, 2.2749999999988058e-05, 2.2735999999995427e-05, 2.2735999999995427e-05, 2.27369999999949e-05, 2.2735999999995427e-05, 2.2762999999981215e-05, 2.272300000000227e-05, 2.276399999998069e-05, 2.2764000000008444e-05, 2.2778000000001075e-05, 2.2693999999989778e-05, 2.2764000000008444e-05, 2.2749999999960302e-05, 2.273599999996767e-05, 2.2762999999981215e-05, 2.2750000000015813e-05, 2.2750000000015813e-05, 2.272200000003055e-05, 2.2750000000015813e-05, 2.2763999999952933e-05, 2.2762999999981215e-05, 2.2763999999952933e-05, 2.2790999999966477e-05, 2.2764000000008444e-05, 2.2764000000008444e-05, 2.272199999997504e-05, 2.2776999999973846e-05, 2.2764000000008444e-05, 2.2764000000008444e-05, 2.2778000000001075e-05, 2.2764000000008444e-05, 2.2750000000015813e-05, 2.2764000000008444e-05, 2.2762999999981215e-05, 2.27369999999949e-05, 2.2750000000015813e-05, 2.273599999996767e-05, 2.2776999999973846e-05]</msg>
<status status="PASS" starttime="20201110 08:33:04.691" endtime="20201110 08:33:04.695"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:04.679" endtime="20201110 08:33:04.696"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:04.703" endtime="20201110 08:33:04.705"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:04.711" endtime="20201110 08:33:04.733"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:04.707" endtime="20201110 08:33:04.735"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:04.698" endtime="20201110 08:33:04.736"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.753" endtime="20201110 08:33:04.737"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201110 08:33:03.623" endtime="20201110 08:33:04.738" critical="yes"></status>
</test>
<status status="PASS" starttime="20201110 08:32:32.042" endtime="20201110 08:33:04.757"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201110 08:33:04.952" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201110 08:33:04.967" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201110 08:33:06.986" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201110 08:33:04.948" endtime="20201110 08:33:06.987"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201110 08:33:06.993" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201110 08:33:06.990" endtime="20201110 08:33:06.994"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:04.945" endtime="20201110 08:33:06.996"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:07.000" endtime="20201110 08:33:07.328"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:06.997" endtime="20201110 08:33:07.330"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:07.370" endtime="20201110 08:33:07.388"></status>
</kw>
<msg timestamp="20201110 08:33:07.390" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:07.365" endtime="20201110 08:33:07.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:07.397" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:07.392" endtime="20201110 08:33:07.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:33:07.403" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:33:07.399" endtime="20201110 08:33:07.404"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:07.357" endtime="20201110 08:33:07.406"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:07.349" endtime="20201110 08:33:07.407"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:07.346" endtime="20201110 08:33:07.408"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:33:07.416" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:33:07.415" endtime="20201110 08:33:07.417"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:07.410" endtime="20201110 08:33:07.417"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:07.343" endtime="20201110 08:33:07.418"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:07.340" endtime="20201110 08:33:07.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:07.420" endtime="20201110 08:33:07.423"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:07.336" endtime="20201110 08:33:07.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:07.426" endtime="20201110 08:33:07.430"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:07.332" endtime="20201110 08:33:07.432"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:04.942" endtime="20201110 08:33:07.432"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:07.449" endtime="20201110 08:33:07.470"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:07.445" endtime="20201110 08:33:07.472"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:07.505" endtime="20201110 08:33:07.520"></status>
</kw>
<msg timestamp="20201110 08:33:07.522" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:07.502" endtime="20201110 08:33:07.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:07.528" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:07.524" endtime="20201110 08:33:07.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:33:07.534" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:33:07.530" endtime="20201110 08:33:07.535"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:07.495" endtime="20201110 08:33:07.537"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:07.488" endtime="20201110 08:33:07.538"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:07.486" endtime="20201110 08:33:07.539"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:33:07.548" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:33:07.546" endtime="20201110 08:33:07.548"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:07.541" endtime="20201110 08:33:07.549"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:07.484" endtime="20201110 08:33:07.549"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:07.482" endtime="20201110 08:33:07.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:07.551" endtime="20201110 08:33:07.555"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:07.478" endtime="20201110 08:33:07.557"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:07.474" endtime="20201110 08:33:07.558"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:07.440" endtime="20201110 08:33:07.559"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:07.584" endtime="20201110 08:33:07.599"></status>
</kw>
<msg timestamp="20201110 08:33:07.600" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:07.581" endtime="20201110 08:33:07.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:07.606" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:07.603" endtime="20201110 08:33:07.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:07.609" endtime="20201110 08:33:07.612"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:07.573" endtime="20201110 08:33:07.614"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:07.567" endtime="20201110 08:33:07.615"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:07.634" endtime="20201110 08:33:07.983"></status>
</kw>
<msg timestamp="20201110 08:33:07.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.127511194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.127527653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:07.630" endtime="20201110 08:33:07.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:08.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.127511194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.127527653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:07.993" endtime="20201110 08:33:08.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:08.012" endtime="20201110 08:33:08.017"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:07.621" endtime="20201110 08:33:08.019"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:07.617" endtime="20201110 08:33:08.021"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:08.036" level="INFO">${RESULT} = [{'time': 0.127527653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.645899999999645e-05, 'source_diff': 1.645899999999645e-05}, {'time': 0.127554667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:08.025" endtime="20201110 08:33:08.037"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:08.087" level="INFO">${ACCURACY} = {'time': [0.127527653, 0.127554667, 0.127579625, 0.127604681, 0.12762875, 0.127651847, 0.127679833, 0.127706875, 0.127728875, 0.127756944, 0.127783, 0.127809042, 0.127837083, 0.127860194, 0.127884292,...</msg>
<status status="PASS" starttime="20201110 08:33:08.038" endtime="20201110 08:33:08.088"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:08.113" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201110 08:33:08.108" endtime="20201110 08:33:08.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:08.128" level="INFO">VALUE: [1.645899999999645e-05, 1.6820000000000723e-05, 1.713899999999935e-05, 1.7125000000006718e-05, 1.6958000000011353e-05, 1.6639000000012727e-05, 1.6749999999982057e-05, 1.715299999999198e-05, 1.6735999999989426e-05, 1.6486000000009993e-05, 1.6985999999996615e-05, 1.6473000000016835e-05, 1.6972000000003984e-05, 1.6652000000005884e-05, 1.6486000000009993e-05, 1.680500000000862e-05, 1.6278000000008452e-05, 1.6653000000005358e-05, 1.629100000000161e-05, 1.6806000000008092e-05, 1.6972000000003984e-05, 1.6820000000000723e-05, 1.6972000000003984e-05, 1.630499999999424e-05, 1.6972000000003984e-05, 1.7292000000002083e-05, 1.6806000000008092e-05, 1.7153000000019736e-05, 1.6777999999995075e-05, 1.6263999999988066e-05, 1.7125000000006718e-05, 1.7180000000005524e-05, 1.7125000000006718e-05, 1.6681000000018376e-05, 1.713899999999935e-05, 1.6985999999996615e-05, 1.6805999999980337e-05, 1.6791999999987706e-05, 1.7249999999996435e-05, 1.6806000000008092e-05, 1.6764000000002444e-05, 1.6457999999996975e-05, 1.698699999999609e-05, 1.6639000000012727e-05, 1.6639000000012727e-05, 1.636099999999252e-05, 1.6985999999996615e-05, 1.6485999999982237e-05, 1.7181000000004998e-05, 1.662499999999234e-05]</msg>
<status status="PASS" starttime="20201110 08:33:08.120" endtime="20201110 08:33:08.131"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.092" endtime="20201110 08:33:08.136"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:08.152" endtime="20201110 08:33:08.160"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:08.173" endtime="20201110 08:33:08.198"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.163" endtime="20201110 08:33:08.199"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.141" endtime="20201110 08:33:08.201"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:07.563" endtime="20201110 08:33:08.202"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:07.562" endtime="20201110 08:33:08.202"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:08.226" endtime="20201110 08:33:08.244"></status>
</kw>
<msg timestamp="20201110 08:33:08.245" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:08.222" endtime="20201110 08:33:08.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:08.251" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:08.247" endtime="20201110 08:33:08.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:08.254" endtime="20201110 08:33:08.258"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.215" endtime="20201110 08:33:08.259"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.209" endtime="20201110 08:33:08.261"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:08.278" endtime="20201110 08:33:08.648"></status>
</kw>
<msg timestamp="20201110 08:33:08.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041631069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041647667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:08.274" endtime="20201110 08:33:08.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:08.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041631069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041647667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:08.658" endtime="20201110 08:33:08.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:08.677" endtime="20201110 08:33:08.681"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.267" endtime="20201110 08:33:08.683"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.262" endtime="20201110 08:33:08.684"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:08.695" level="INFO">${RESULT} = [{'time': 0.041647667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6597999999999613e-05, 'source_diff': 1.6597999999999613e-05}, {'time': 0.041674722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:08.686" endtime="20201110 08:33:08.696"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:08.736" level="INFO">${ACCURACY} = {'time': [0.041647667, 0.041674722, 0.041702889, 0.041724819, 0.041751972, 0.041774903, 0.041796944, 0.041821986, 0.041844083, 0.041868042, 0.041896139, 0.041919264, 0.041945222, 0.041972361, 0.042000...</msg>
<status status="PASS" starttime="20201110 08:33:08.697" endtime="20201110 08:33:08.737"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:08.751" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201110 08:33:08.748" endtime="20201110 08:33:08.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:08.758" level="INFO">VALUE: [1.6597999999999613e-05, 1.713899999999935e-05, 1.733300000000132e-05, 1.6638000000006314e-05, 1.681900000000125e-05, 1.6472000000003484e-05, 1.681900000000125e-05, 1.713899999999935e-05, 1.6457999999996975e-05, 1.661099999999971e-05, 1.662499999999928e-05, 1.686099999999996e-05, 1.715299999999892e-05, 1.713899999999935e-05, 1.6959000000003888e-05, 1.6805999999994214e-05, 1.665299999999842e-05, 1.715299999999892e-05, 1.6693999999997655e-05, 1.6401999999998695e-05, 1.715299999999892e-05, 1.6806000000001153e-05, 1.6472000000003484e-05, 1.6292000000001083e-05, 1.6805999999994214e-05, 1.6333999999999793e-05, 1.7013999999995755e-05, 1.683300000000082e-05, 1.7334000000000793e-05, 1.6430000000004774e-05, 1.6471999999996545e-05, 1.698699999999609e-05, 1.6486000000003054e-05, 1.713899999999935e-05, 1.7000000000003124e-05, 1.6791999999994645e-05, 1.715299999999892e-05, 1.730500000000218e-05, 1.6459000000003388e-05, 1.6847999999999863e-05, 1.6667000000004928e-05, 1.630500000000118e-05, 1.645899999999645e-05, 1.636099999999946e-05, 1.6792000000001583e-05, 1.7125000000006718e-05, 1.7291999999995145e-05, 1.665299999999842e-05, 1.7319999999994284e-05, 1.6834000000000293e-05]</msg>
<status status="PASS" starttime="20201110 08:33:08.754" endtime="20201110 08:33:08.760"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.738" endtime="20201110 08:33:08.762"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:08.768" endtime="20201110 08:33:08.771"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:08.777" endtime="20201110 08:33:08.799"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.773" endtime="20201110 08:33:08.801"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.764" endtime="20201110 08:33:08.802"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.204" endtime="20201110 08:33:08.803"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.203" endtime="20201110 08:33:08.803"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:08.826" endtime="20201110 08:33:08.844"></status>
</kw>
<msg timestamp="20201110 08:33:08.846" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:08.823" endtime="20201110 08:33:08.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:08.852" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:08.848" endtime="20201110 08:33:08.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:08.854" endtime="20201110 08:33:08.858"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.816" endtime="20201110 08:33:08.860"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.810" endtime="20201110 08:33:08.861"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:08.878" endtime="20201110 08:33:09.237"></status>
</kw>
<msg timestamp="20201110 08:33:09.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040917389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040934208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:08.875" endtime="20201110 08:33:09.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:09.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040917389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040934208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:09.247" endtime="20201110 08:33:09.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:09.266" endtime="20201110 08:33:09.271"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.867" endtime="20201110 08:33:09.273"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.863" endtime="20201110 08:33:09.274"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:09.285" level="INFO">${RESULT} = [{'time': 0.040934208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.681900000000125e-05, 'source_diff': 1.681900000000125e-05}, {'time': 0.040960111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:09.276" endtime="20201110 08:33:09.286"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:09.317" level="INFO">${ACCURACY} = {'time': [0.040934208, 0.040960111, 0.040985181, 0.041010347, 0.041036375, 0.041063361, 0.041087486, 0.041114528, 0.041136611, 0.041164667, 0.041187681, 0.04121275, 0.041240764, 0.041265875, 0.0412889...</msg>
<status status="PASS" starttime="20201110 08:33:09.287" endtime="20201110 08:33:09.317"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:09.328" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201110 08:33:09.326" endtime="20201110 08:33:09.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:09.333" level="INFO">VALUE: [1.681900000000125e-05, 1.631900000000075e-05, 1.7153000000005858e-05, 1.681900000000125e-05, 1.6971999999997045e-05, 1.658300000000057e-05, 1.715299999999892e-05, 1.6820000000000723e-05, 1.6985999999996615e-05, 1.6431000000004248e-05, 1.6569999999993534e-05, 1.708300000000107e-05, 1.713899999999935e-05, 1.6986000000003554e-05, 1.6473000000002957e-05, 1.681900000000125e-05, 1.665299999999842e-05, 1.629100000000161e-05, 1.729099999999567e-05, 1.6292000000001083e-05, 1.713899999999935e-05, 1.665299999999842e-05, 1.661099999999971e-05, 1.7195000000004568e-05, 1.6458000000003914e-05, 1.6653000000005358e-05, 1.6485999999996115e-05, 1.683300000000082e-05, 1.662499999999928e-05, 1.6958000000004414e-05, 1.6653000000005358e-05, 1.6973000000003458e-05, 1.713899999999935e-05, 1.665299999999842e-05, 1.681900000000125e-05, 1.716699999999849e-05, 1.697299999999652e-05, 1.6457999999996975e-05, 1.6972000000003984e-05, 1.6971999999997045e-05, 1.7111999999999683e-05, 1.684700000000039e-05, 1.6986000000003554e-05, 1.713899999999935e-05, 1.665299999999842e-05, 1.663899999999885e-05, 1.6986000000003554e-05, 1.647299999999602e-05, 1.6472000000003484e-05, 1.711100000000021e-05]</msg>
<status status="PASS" starttime="20201110 08:33:09.330" endtime="20201110 08:33:09.335"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:09.319" endtime="20201110 08:33:09.337"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:09.343" endtime="20201110 08:33:09.346"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:09.352" endtime="20201110 08:33:09.373"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:09.347" endtime="20201110 08:33:09.375"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:09.338" endtime="20201110 08:33:09.377"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.805" endtime="20201110 08:33:09.377"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.804" endtime="20201110 08:33:09.378"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:09.401" endtime="20201110 08:33:09.418"></status>
</kw>
<msg timestamp="20201110 08:33:09.419" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:09.397" endtime="20201110 08:33:09.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:09.425" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:09.421" endtime="20201110 08:33:09.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:09.427" endtime="20201110 08:33:09.431"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:09.390" endtime="20201110 08:33:09.433"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:09.384" endtime="20201110 08:33:09.434"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:09.451" endtime="20201110 08:33:09.805"></status>
</kw>
<msg timestamp="20201110 08:33:09.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040840847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0408575, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:33:09.448" endtime="20201110 08:33:09.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:09.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040840847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0408575, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:33:09.815" endtime="20201110 08:33:09.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:09.834" endtime="20201110 08:33:09.839"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:09.440" endtime="20201110 08:33:09.841"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:09.435" endtime="20201110 08:33:09.843"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:09.853" level="INFO">${RESULT} = [{'time': 0.0408575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.665299999999842e-05, 'source_diff': 1.665299999999842e-05}, {'time': 0.040882569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:33:09.844" endtime="20201110 08:33:09.854"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:09.885" level="INFO">${ACCURACY} = {'time': [0.0408575, 0.040882569, 0.040905625, 0.040933736, 0.040957708, 0.040984778, 0.041012931, 0.041037889, 0.041065944, 0.041088986, 0.041114042, 0.041136986, 0.041165167, 0.041191194, 0.04121427...</msg>
<status status="PASS" starttime="20201110 08:33:09.855" endtime="20201110 08:33:09.885"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:09.896" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201110 08:33:09.894" endtime="20201110 08:33:09.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:09.901" level="INFO">VALUE: [1.665299999999842e-05, 1.662499999999928e-05, 1.6486000000003054e-05, 1.663899999999885e-05, 1.6986000000003554e-05, 1.665299999999842e-05, 1.7000000000003124e-05, 1.663899999999885e-05, 1.6472000000003484e-05, 1.6486000000003054e-05, 1.6486000000003054e-05, 1.705500000000193e-05, 1.6486000000003054e-05, 1.6957999999997475e-05, 1.713899999999935e-05, 1.6306000000000653e-05, 1.716699999999849e-05, 1.683300000000082e-05, 1.6485999999996115e-05, 1.681900000000125e-05, 1.6806000000001153e-05, 1.6806000000001153e-05, 1.6667000000004928e-05, 1.6973000000003458e-05, 1.6999999999996185e-05, 1.680500000000168e-05, 1.6306000000000653e-05, 1.6806000000001153e-05, 1.713899999999935e-05, 1.6764000000002444e-05, 1.6972000000003984e-05, 1.6639000000005788e-05, 1.663899999999885e-05, 1.6792000000001583e-05, 1.681900000000125e-05, 1.6778000000002014e-05, 1.633300000000032e-05, 1.6971999999997045e-05, 1.684700000000039e-05, 1.7013999999995755e-05, 1.6471999999996545e-05, 1.6971999999997045e-05, 1.663899999999885e-05, 1.6957999999997475e-05, 1.6985999999996615e-05, 1.6459000000003388e-05, 1.697299999999652e-05, 1.679100000000211e-05, 1.712499999999978e-05, 1.6693999999997655e-05]</msg>
<status status="PASS" starttime="20201110 08:33:09.898" endtime="20201110 08:33:09.903"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:09.887" endtime="20201110 08:33:09.905"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:09.911" endtime="20201110 08:33:09.914"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:09.920" endtime="20201110 08:33:09.942"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:09.915" endtime="20201110 08:33:09.943"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:09.906" endtime="20201110 08:33:09.945"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:09.380" endtime="20201110 08:33:09.945"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:09.379" endtime="20201110 08:33:09.946"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:09.969" endtime="20201110 08:33:09.986"></status>
</kw>
<msg timestamp="20201110 08:33:09.987" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:09.965" endtime="20201110 08:33:09.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:09.993" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:09.989" endtime="20201110 08:33:09.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:09.995" endtime="20201110 08:33:09.999"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:09.958" endtime="20201110 08:33:10.001"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:09.952" endtime="20201110 08:33:10.003"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:10.020" endtime="20201110 08:33:10.380"></status>
</kw>
<msg timestamp="20201110 08:33:10.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041096542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041113, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:33:10.016" endtime="20201110 08:33:10.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:10.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041096542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041113, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:33:10.390" endtime="20201110 08:33:10.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:10.408" endtime="20201110 08:33:10.414"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:10.009" endtime="20201110 08:33:10.416"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:10.004" endtime="20201110 08:33:10.417"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:10.428" level="INFO">${RESULT} = [{'time': 0.041113, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6457999999996975e-05, 'source_diff': 1.6457999999996975e-05}, {'time': 0.041136125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:33:10.419" endtime="20201110 08:33:10.428"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:10.459" level="INFO">${ACCURACY} = {'time': [0.041113, 0.041136125, 0.041161181, 0.041187306, 0.041212319, 0.041240292, 0.041266389, 0.041289444, 0.041311486, 0.041338611, 0.041361667, 0.041388722, 0.041414792, 0.041441708, 0.041465875...</msg>
<status status="PASS" starttime="20201110 08:33:10.430" endtime="20201110 08:33:10.460"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:10.470" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201110 08:33:10.468" endtime="20201110 08:33:10.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:10.476" level="INFO">VALUE: [1.6457999999996975e-05, 1.634699999999989e-05, 1.716699999999849e-05, 1.665299999999842e-05, 1.6957999999997475e-05, 1.6820000000000723e-05, 1.6806000000001153e-05, 1.677700000000254e-05, 1.680500000000168e-05, 1.6763999999995505e-05, 1.7320000000001223e-05, 1.683300000000082e-05, 1.647299999999602e-05, 1.681900000000125e-05, 1.659700000000014e-05, 1.6556000000000903e-05, 1.6986000000003554e-05, 1.701299999999628e-05, 1.6306000000000653e-05, 1.6486000000003054e-05, 1.680500000000168e-05, 1.731900000000175e-05, 1.6486000000003054e-05, 1.661099999999971e-05, 1.715299999999892e-05, 1.6500000000002624e-05, 1.6666000000005454e-05, 1.663899999999885e-05, 1.705500000000193e-05, 1.6805999999994214e-05, 1.6471999999996545e-05, 1.7305999999994714e-05, 1.6542000000001333e-05, 1.713899999999935e-05, 1.6971999999997045e-05, 1.730499999999524e-05, 1.6485999999996115e-05, 1.6985999999996615e-05, 1.6763999999995505e-05, 1.6473000000002957e-05, 1.6806000000001153e-05, 1.665299999999842e-05, 1.709700000000064e-05, 1.6306000000000653e-05, 1.6820000000000723e-05, 1.713899999999935e-05, 1.663899999999885e-05, 1.6457999999996975e-05, 1.6486000000003054e-05, 1.713899999999935e-05]</msg>
<status status="PASS" starttime="20201110 08:33:10.473" endtime="20201110 08:33:10.477"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:10.461" endtime="20201110 08:33:10.479"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:10.486" endtime="20201110 08:33:10.488"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:10.494" endtime="20201110 08:33:10.516"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:10.490" endtime="20201110 08:33:10.518"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:10.481" endtime="20201110 08:33:10.519"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:09.948" endtime="20201110 08:33:10.520"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:09.947" endtime="20201110 08:33:10.521"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:10.544" endtime="20201110 08:33:10.562"></status>
</kw>
<msg timestamp="20201110 08:33:10.563" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:10.540" endtime="20201110 08:33:10.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:10.569" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:10.565" endtime="20201110 08:33:10.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:10.572" endtime="20201110 08:33:10.575"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:10.533" endtime="20201110 08:33:10.577"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:10.527" endtime="20201110 08:33:10.579"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:10.595" endtime="20201110 08:33:10.968"></status>
</kw>
<msg timestamp="20201110 08:33:10.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041141972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041159125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:10.592" endtime="20201110 08:33:10.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:10.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041141972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041159125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:10.977" endtime="20201110 08:33:10.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:10.997" endtime="20201110 08:33:11.002"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:10.585" endtime="20201110 08:33:11.004"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:10.580" endtime="20201110 08:33:11.005"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:11.016" level="INFO">${RESULT} = [{'time': 0.041159125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.715299999999892e-05, 'source_diff': 1.715299999999892e-05}, {'time': 0.041182208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:11.007" endtime="20201110 08:33:11.017"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:11.050" level="INFO">${ACCURACY} = {'time': [0.041159125, 0.041182208, 0.041206333, 0.041232292, 0.041255431, 0.041281417, 0.041304569, 0.041326444, 0.041349639, 0.041374625, 0.041400681, 0.041422694, 0.041447792, 0.041473819, 0.041499...</msg>
<status status="PASS" starttime="20201110 08:33:11.018" endtime="20201110 08:33:11.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:11.061" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201110 08:33:11.059" endtime="20201110 08:33:11.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:11.067" level="INFO">VALUE: [1.715299999999892e-05, 1.7151999999999445e-05, 1.712499999999978e-05, 1.6985999999996615e-05, 1.7320000000001223e-05, 1.6806000000001153e-05, 1.6999999999996185e-05, 1.6457999999996975e-05, 1.713899999999935e-05, 1.663899999999885e-05, 1.665299999999842e-05, 1.6500000000002624e-05, 1.697299999999652e-05, 1.630500000000118e-05, 1.633300000000032e-05, 1.713899999999935e-05, 1.731900000000175e-05, 1.680500000000168e-05, 1.6973000000003458e-05, 1.7151999999999445e-05, 1.6999999999996185e-05, 1.62769999999951e-05, 1.7014000000002694e-05, 1.687499999999953e-05, 1.6486000000003054e-05, 1.7151999999999445e-05, 1.713899999999935e-05, 1.683300000000082e-05, 1.6972000000003984e-05, 1.6598000000006552e-05, 1.7151999999999445e-05, 1.6972000000003984e-05, 1.6973000000003458e-05, 1.681900000000125e-05, 1.712499999999978e-05, 1.6485999999996115e-05, 1.6250000000002374e-05, 1.6985999999996615e-05, 1.7306000000001653e-05, 1.6957999999997475e-05, 1.72089999999972e-05, 1.686099999999996e-05, 1.6778000000002014e-05, 1.662499999999928e-05, 1.663899999999885e-05, 1.713899999999935e-05, 1.6457999999996975e-05, 1.6973000000003458e-05, 1.6278000000001513e-05, 1.6291999999994144e-05]</msg>
<status status="PASS" starttime="20201110 08:33:11.064" endtime="20201110 08:33:11.068"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:11.052" endtime="20201110 08:33:11.070"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:11.076" endtime="20201110 08:33:11.079"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:11.085" endtime="20201110 08:33:11.107"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:11.080" endtime="20201110 08:33:11.108"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:11.072" endtime="20201110 08:33:11.110"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:10.523" endtime="20201110 08:33:11.111"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:10.521" endtime="20201110 08:33:11.111"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:11.134" endtime="20201110 08:33:11.152"></status>
</kw>
<msg timestamp="20201110 08:33:11.153" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:11.131" endtime="20201110 08:33:11.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:11.160" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:11.156" endtime="20201110 08:33:11.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:11.162" endtime="20201110 08:33:11.166"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:11.123" endtime="20201110 08:33:11.167"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:11.117" endtime="20201110 08:33:11.169"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:11.186" endtime="20201110 08:33:11.542"></status>
</kw>
<msg timestamp="20201110 08:33:11.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040959819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040976847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:11.182" endtime="20201110 08:33:11.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:11.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040959819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040976847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:11.552" endtime="20201110 08:33:11.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:11.571" endtime="20201110 08:33:11.574"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:11.175" endtime="20201110 08:33:11.576"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:11.170" endtime="20201110 08:33:11.578"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:11.588" level="INFO">${RESULT} = [{'time': 0.040976847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7027999999995325e-05, 'source_diff': 1.7027999999995325e-05}, {'time': 0.041004972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:11.579" endtime="20201110 08:33:11.589"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:11.621" level="INFO">${ACCURACY} = {'time': [0.040976847, 0.041004972, 0.041030042, 0.041054111, 0.041081069, 0.041103208, 0.04113025, 0.041156319, 0.041183319, 0.041209333, 0.041233389, 0.041255347, 0.041278458, 0.041302444, 0.0413275...</msg>
<status status="PASS" starttime="20201110 08:33:11.590" endtime="20201110 08:33:11.622"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:11.632" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201110 08:33:11.630" endtime="20201110 08:33:11.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:11.638" level="INFO">VALUE: [1.7027999999995325e-05, 1.6486000000003054e-05, 1.7153000000005858e-05, 1.6985999999996615e-05, 1.7151999999999445e-05, 1.681900000000125e-05, 1.713899999999935e-05, 1.72769999999961e-05, 1.730500000000218e-05, 1.7151999999999445e-05, 1.6958000000004414e-05, 1.663899999999885e-05, 1.663899999999885e-05, 1.6472000000003484e-05, 1.680500000000168e-05, 1.70690000000015e-05, 1.631900000000075e-05, 1.6943999999997905e-05, 1.6973000000003458e-05, 1.6472000000003484e-05, 1.655500000000143e-05, 1.690299999999867e-05, 1.6971999999997045e-05, 1.6292000000001083e-05, 1.7306000000001653e-05, 1.6709000000003638e-05, 1.6791999999994645e-05, 1.684700000000039e-05, 1.6292000000001083e-05, 1.697299999999652e-05, 1.681900000000125e-05, 1.6500000000002624e-05, 1.6943999999997905e-05, 1.680500000000168e-05, 1.6792000000001583e-05, 1.631900000000075e-05, 1.665299999999842e-05, 1.7292000000002083e-05, 1.7193999999998155e-05, 1.636099999999946e-05, 1.6597999999999613e-05, 1.6471999999996545e-05, 1.6653000000005358e-05, 1.6637999999999376e-05, 1.7139000000006288e-05, 1.663899999999885e-05, 1.666699999999799e-05, 1.665299999999842e-05, 1.6472000000003484e-05, 1.6806000000001153e-05]</msg>
<status status="PASS" starttime="20201110 08:33:11.634" endtime="20201110 08:33:11.639"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:11.623" endtime="20201110 08:33:11.641"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:11.651" endtime="20201110 08:33:11.654"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:11.663" endtime="20201110 08:33:11.688"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:11.655" endtime="20201110 08:33:11.690"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:11.645" endtime="20201110 08:33:11.693"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:11.113" endtime="20201110 08:33:11.693"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:11.112" endtime="20201110 08:33:11.694"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:11.718" endtime="20201110 08:33:11.737"></status>
</kw>
<msg timestamp="20201110 08:33:11.738" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:11.714" endtime="20201110 08:33:11.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:11.744" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:11.740" endtime="20201110 08:33:11.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:11.747" endtime="20201110 08:33:11.751"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:11.707" endtime="20201110 08:33:11.752"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:11.701" endtime="20201110 08:33:11.754"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:11.771" endtime="20201110 08:33:12.123"></status>
</kw>
<msg timestamp="20201110 08:33:12.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046273833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046297694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:11.767" endtime="20201110 08:33:12.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:12.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046273833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046297694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:12.133" endtime="20201110 08:33:12.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:12.152" endtime="20201110 08:33:12.156"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:11.760" endtime="20201110 08:33:12.158"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:11.755" endtime="20201110 08:33:12.159"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:12.170" level="INFO">${RESULT} = [{'time': 0.046297694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.386100000000002e-05, 'source_diff': 2.386100000000002e-05}, {'time': 0.046328847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:12.161" endtime="20201110 08:33:12.171"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:12.203" level="INFO">${ACCURACY} = {'time': [0.046297694, 0.046328847, 0.046360958, 0.046395986, 0.046427042, 0.046458014, 0.046487111, 0.046520208, 0.046555319, 0.046589389, 0.046621319, 0.046655417, 0.046686486, 0.046721639, 0.046751...</msg>
<status status="PASS" starttime="20201110 08:33:12.172" endtime="20201110 08:33:12.203"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:12.214" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201110 08:33:12.212" endtime="20201110 08:33:12.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:12.220" level="INFO">VALUE: [2.386100000000002e-05, 2.355500000000149e-05, 2.381900000000131e-05, 2.3292000000001145e-05, 2.3514000000002255e-05, 2.337499999999909e-05, 2.3693999999997717e-05, 2.3901999999999257e-05, 2.3693999999997717e-05, 2.437500000000009e-05, 2.3694000000004656e-05, 2.419499999999769e-05, 2.3792000000001645e-05, 2.3542000000001395e-05, 2.3722000000003796e-05, 2.436100000000052e-05, 2.4042000000001895e-05, 2.380500000000174e-05, 2.336099999999952e-05, 2.387499999999959e-05, 2.4207999999997787e-05, 2.386100000000002e-05, 2.368100000000456e-05, 2.4235999999996927e-05, 2.418100000000506e-05, 2.334699999999995e-05, 2.386100000000002e-05, 2.3847999999999925e-05, 2.369499999999719e-05, 2.3693999999997717e-05, 2.386100000000002e-05, 2.4042000000001895e-05, 2.4193999999998217e-05, 2.4056000000001465e-05, 2.386100000000002e-05, 2.4179999999998647e-05, 2.4028000000002325e-05, 2.4193999999998217e-05, 2.3806000000001215e-05, 2.3834000000000355e-05, 2.3542000000001395e-05, 2.4055999999994526e-05, 2.3320000000000285e-05, 2.333300000000038e-05, 2.3694000000004656e-05, 2.369500000000413e-05, 2.337500000000603e-05, 2.3707999999997287e-05, 2.3499999999995747e-05, 2.3693999999997717e-05]</msg>
<status status="PASS" starttime="20201110 08:33:12.217" endtime="20201110 08:33:12.222"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.205" endtime="20201110 08:33:12.223"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:12.230" endtime="20201110 08:33:12.232"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:12.238" endtime="20201110 08:33:12.260"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.234" endtime="20201110 08:33:12.262"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.225" endtime="20201110 08:33:12.263"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:11.696" endtime="20201110 08:33:12.264"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:11.695" endtime="20201110 08:33:12.264"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:12.287" endtime="20201110 08:33:12.304"></status>
</kw>
<msg timestamp="20201110 08:33:12.305" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:12.284" endtime="20201110 08:33:12.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:12.312" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:12.308" endtime="20201110 08:33:12.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:12.314" endtime="20201110 08:33:12.318"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.277" endtime="20201110 08:33:12.320"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.271" endtime="20201110 08:33:12.321"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:12.338" endtime="20201110 08:33:12.698"></status>
</kw>
<msg timestamp="20201110 08:33:12.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040816611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040839986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:12.334" endtime="20201110 08:33:12.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:12.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040816611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040839986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:12.708" endtime="20201110 08:33:12.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:12.727" endtime="20201110 08:33:12.731"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.327" endtime="20201110 08:33:12.733"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.322" endtime="20201110 08:33:12.734"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:12.745" level="INFO">${RESULT} = [{'time': 0.040839986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.337499999999909e-05, 'source_diff': 2.337499999999909e-05}, {'time': 0.040869111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:12.736" endtime="20201110 08:33:12.746"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:12.777" level="INFO">${ACCURACY} = {'time': [0.040839986, 0.040869111, 0.040904181, 0.040935167, 0.040969319, 0.041001403, 0.041033361, 0.041067472, 0.041102597, 0.041137722, 0.041167667, 0.041197736, 0.041229903, 0.041259903, 0.041293...</msg>
<status status="PASS" starttime="20201110 08:33:12.747" endtime="20201110 08:33:12.778"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:12.794" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201110 08:33:12.791" endtime="20201110 08:33:12.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:12.804" level="INFO">VALUE: [2.337499999999909e-05, 2.4042000000001895e-05, 2.3306000000000715e-05, 2.422300000000377e-05, 2.4221999999997357e-05, 2.337499999999909e-05, 2.4041999999994956e-05, 2.334699999999995e-05, 2.383300000000088e-05, 2.437500000000009e-05, 2.4013999999995816e-05, 2.365299999999848e-05, 2.3721999999996857e-05, 2.386100000000002e-05, 2.4026999999995913e-05, 2.4082999999994192e-05, 2.381900000000131e-05, 2.404100000000242e-05, 2.368099999999762e-05, 2.3693999999997717e-05, 2.336100000000646e-05, 2.4013999999995816e-05, 2.4194000000005156e-05, 2.4000000000003185e-05, 2.3556000000000965e-05, 2.436100000000052e-05, 2.4194000000005156e-05, 2.4014000000002755e-05, 2.3528000000001825e-05, 2.337499999999909e-05, 2.387499999999959e-05, 2.3457999999997037e-05, 2.3320000000000285e-05, 2.3554999999994553e-05, 2.3693999999997717e-05, 2.404100000000242e-05, 2.336099999999952e-05, 2.4026999999995913e-05, 2.336099999999952e-05, 2.3512999999995843e-05, 2.352700000000235e-05, 2.3693999999997717e-05, 2.422300000000377e-05, 2.3528000000001825e-05, 2.4041999999994956e-05, 2.386100000000002e-05, 2.4042000000001895e-05, 2.354100000000192e-05, 2.345900000000345e-05, 2.4028000000002325e-05]</msg>
<status status="PASS" starttime="20201110 08:33:12.799" endtime="20201110 08:33:12.810"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.780" endtime="20201110 08:33:12.812"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:12.822" endtime="20201110 08:33:12.827"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:12.836" endtime="20201110 08:33:12.861"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.829" endtime="20201110 08:33:12.863"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.815" endtime="20201110 08:33:12.866"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.266" endtime="20201110 08:33:12.867"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.265" endtime="20201110 08:33:12.867"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:12.895" endtime="20201110 08:33:12.911"></status>
</kw>
<msg timestamp="20201110 08:33:12.912" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:12.891" endtime="20201110 08:33:12.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:12.920" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:12.915" endtime="20201110 08:33:12.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:12.923" endtime="20201110 08:33:12.928"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.882" endtime="20201110 08:33:12.930"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.875" endtime="20201110 08:33:12.932"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:12.952" endtime="20201110 08:33:13.288"></status>
</kw>
<msg timestamp="20201110 08:33:13.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050078167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050101472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:12.947" endtime="20201110 08:33:13.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:13.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050078167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050101472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:13.297" endtime="20201110 08:33:13.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:13.316" endtime="20201110 08:33:13.320"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.939" endtime="20201110 08:33:13.321"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.933" endtime="20201110 08:33:13.323"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:13.333" level="INFO">${RESULT} = [{'time': 0.050101472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.330500000000124e-05, 'source_diff': 2.330500000000124e-05}, {'time': 0.050131542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:13.324" endtime="20201110 08:33:13.334"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:13.364" level="INFO">${ACCURACY} = {'time': [0.050101472, 0.050131542, 0.050163569, 0.050194667, 0.050226722, 0.050256764, 0.050289819, 0.050320917, 0.050353028, 0.050386, 0.050421, 0.050450097, 0.050483139, 0.050513167, 0.05054525, 0....</msg>
<status status="PASS" starttime="20201110 08:33:13.335" endtime="20201110 08:33:13.365"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:13.378" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201110 08:33:13.373" endtime="20201110 08:33:13.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:13.383" level="INFO">VALUE: [2.330500000000124e-05, 2.4014000000002755e-05, 2.4193999999998217e-05, 2.368099999999762e-05, 2.4014000000002755e-05, 2.4208000000004726e-05, 2.336099999999952e-05, 2.4014000000002755e-05, 2.3556000000000965e-05, 2.4235999999996927e-05, 2.336099999999952e-05, 2.337499999999909e-05, 2.419500000000463e-05, 2.419499999999769e-05, 2.3514000000002255e-05, 2.4027999999995386e-05, 2.383300000000088e-05, 2.3528000000001825e-05, 2.337500000000603e-05, 2.366699999999805e-05, 2.4054999999995053e-05, 2.4193999999998217e-05, 2.3528000000001825e-05, 2.3554999999994553e-05, 2.386100000000002e-05, 2.3680000000005086e-05, 2.404100000000242e-05, 2.336099999999952e-05, 2.366699999999805e-05, 2.369500000000413e-05, 2.419499999999769e-05, 2.386100000000002e-05, 2.404100000000242e-05, 2.3679999999998147e-05, 2.338899999999866e-05, 2.386100000000002e-05, 2.4056000000001465e-05, 2.3679999999998147e-05, 2.388899999999916e-05, 2.3707999999997287e-05, 2.3528000000001825e-05, 2.3514000000002255e-05, 2.4013999999995816e-05, 2.387499999999959e-05, 2.3570000000000535e-05, 2.418100000000506e-05, 2.337499999999909e-05, 2.3861999999999495e-05, 2.3513999999995316e-05, 2.336099999999952e-05]</msg>
<status status="PASS" starttime="20201110 08:33:13.380" endtime="20201110 08:33:13.385"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.366" endtime="20201110 08:33:13.387"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:13.393" endtime="20201110 08:33:13.395"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:13.401" endtime="20201110 08:33:13.423"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.397" endtime="20201110 08:33:13.424"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.388" endtime="20201110 08:33:13.426"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.870" endtime="20201110 08:33:13.426"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.868" endtime="20201110 08:33:13.427"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:13.449" endtime="20201110 08:33:13.464"></status>
</kw>
<msg timestamp="20201110 08:33:13.465" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:13.446" endtime="20201110 08:33:13.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:13.471" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:13.467" endtime="20201110 08:33:13.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:13.474" endtime="20201110 08:33:13.477"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.439" endtime="20201110 08:33:13.479"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.433" endtime="20201110 08:33:13.480"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:13.496" endtime="20201110 08:33:13.839"></status>
</kw>
<msg timestamp="20201110 08:33:13.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039836597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039860792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:13.493" endtime="20201110 08:33:13.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:13.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039836597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039860792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:13.848" endtime="20201110 08:33:13.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:13.867" endtime="20201110 08:33:13.871"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.486" endtime="20201110 08:33:13.873"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.482" endtime="20201110 08:33:13.874"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:13.885" level="INFO">${RESULT} = [{'time': 0.039860792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.419499999999769e-05, 'source_diff': 2.419499999999769e-05}, {'time': 0.039894903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:13.876" endtime="20201110 08:33:13.885"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:13.916" level="INFO">${ACCURACY} = {'time': [0.039860792, 0.039894903, 0.039927917, 0.039957972, 0.039988014, 0.040019222, 0.040050222, 0.040085278, 0.040120444, 0.040150403, 0.040181472, 0.040213611, 0.040245694, 0.040276764, 0.040305...</msg>
<status status="PASS" starttime="20201110 08:33:13.887" endtime="20201110 08:33:13.916"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:13.926" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201110 08:33:13.924" endtime="20201110 08:33:13.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:13.932" level="INFO">VALUE: [2.419499999999769e-05, 2.336099999999952e-05, 2.37090000000037e-05, 2.3679999999998147e-05, 2.388899999999916e-05, 2.3707999999997287e-05, 2.3694000000004656e-05, 2.42090000000042e-05, 2.4221999999997357e-05, 2.4028000000002325e-05, 2.383300000000088e-05, 2.330500000000124e-05, 2.4040999999995483e-05, 2.387499999999959e-05, 2.3528000000001825e-05, 2.4207999999997787e-05, 2.386100000000002e-05, 2.419499999999769e-05, 2.3582999999993692e-05, 2.368099999999762e-05, 2.3708000000004226e-05, 2.387499999999959e-05, 2.387499999999959e-05, 2.3943999999997967e-05, 2.3887999999999687e-05, 2.351300000000278e-05, 2.4276999999996163e-05, 2.42090000000042e-05, 2.336099999999952e-05, 2.4235999999996927e-05, 2.3514000000002255e-05, 2.354100000000192e-05, 2.3721999999996857e-05, 2.387499999999959e-05, 2.390299999999873e-05, 2.338899999999866e-05, 2.4056000000001465e-05, 2.368099999999762e-05, 2.337500000000603e-05, 2.415299999999898e-05, 2.387499999999959e-05, 2.3485999999996177e-05, 2.388899999999916e-05, 2.354100000000192e-05, 2.386100000000002e-05, 2.3528000000001825e-05, 2.3693999999997717e-05, 2.4056000000001465e-05, 2.3541999999994456e-05, 2.4040999999995483e-05]</msg>
<status status="PASS" starttime="20201110 08:33:13.929" endtime="20201110 08:33:13.933"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.917" endtime="20201110 08:33:13.935"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:13.941" endtime="20201110 08:33:13.944"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:13.951" endtime="20201110 08:33:13.973"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.945" endtime="20201110 08:33:13.974"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.937" endtime="20201110 08:33:13.976"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.429" endtime="20201110 08:33:13.976"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.428" endtime="20201110 08:33:13.977"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:13.999" endtime="20201110 08:33:14.014"></status>
</kw>
<msg timestamp="20201110 08:33:14.016" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:13.996" endtime="20201110 08:33:14.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:14.022" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:14.018" endtime="20201110 08:33:14.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:14.024" endtime="20201110 08:33:14.027"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.989" endtime="20201110 08:33:14.029"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.983" endtime="20201110 08:33:14.031"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:14.047" endtime="20201110 08:33:14.380"></status>
</kw>
<msg timestamp="20201110 08:33:14.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039960222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03998425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:33:14.043" endtime="20201110 08:33:14.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:14.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039960222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03998425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:33:14.389" endtime="20201110 08:33:14.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:14.408" endtime="20201110 08:33:14.411"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.036" endtime="20201110 08:33:14.413"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.032" endtime="20201110 08:33:14.415"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:14.425" level="INFO">${RESULT} = [{'time': 0.03998425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4028000000002325e-05, 'source_diff': 2.4028000000002325e-05}, {'time': 0.040017292, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201110 08:33:14.416" endtime="20201110 08:33:14.426"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:14.456" level="INFO">${ACCURACY} = {'time': [0.03998425, 0.040017292, 0.040050403, 0.040084472, 0.040118486, 0.040149625, 0.040184667, 0.040216806, 0.040247833, 0.040281986, 0.040314028, 0.040347, 0.040378111, 0.040413278, 0.040448319,...</msg>
<status status="PASS" starttime="20201110 08:33:14.427" endtime="20201110 08:33:14.456"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:14.467" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201110 08:33:14.464" endtime="20201110 08:33:14.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:14.472" level="INFO">VALUE: [2.4028000000002325e-05, 2.3528000000001825e-05, 2.3542000000001395e-05, 2.405500000000199e-05, 2.4194000000005156e-05, 2.4056000000001465e-05, 2.336099999999952e-05, 2.3861999999999495e-05, 2.4054999999995053e-05, 2.405500000000199e-05, 2.37090000000037e-05, 2.413899999999941e-05, 2.4236000000003866e-05, 2.370899999999676e-05, 2.3763000000003032e-05, 2.352700000000235e-05, 2.404100000000242e-05, 2.4041999999994956e-05, 2.4305999999994776e-05, 2.419499999999769e-05, 2.4320000000001285e-05, 2.3693999999997717e-05, 2.386100000000002e-05, 2.3693999999997717e-05, 2.4041999999994956e-05, 2.4207999999997787e-05, 2.4040999999995483e-05, 2.3707999999997287e-05, 2.3542000000001395e-05, 2.3861999999999495e-05, 2.386100000000002e-05, 2.334699999999995e-05, 2.4194000000005156e-05, 2.4221999999997357e-05, 2.4042000000001895e-05, 2.337499999999909e-05, 2.3542000000001395e-05, 2.3320000000000285e-05, 2.3693999999997717e-05, 2.405500000000199e-05, 2.37090000000037e-05, 2.3528000000001825e-05, 2.3693999999997717e-05, 2.4207999999997787e-05, 2.35970000000002e-05, 2.3528000000001825e-05, 2.369499999999719e-05, 2.355500000000149e-05, 2.386100000000002e-05, 2.402700000000285e-05]</msg>
<status status="PASS" starttime="20201110 08:33:14.469" endtime="20201110 08:33:14.473"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.457" endtime="20201110 08:33:14.475"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:14.481" endtime="20201110 08:33:14.484"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:14.490" endtime="20201110 08:33:14.513"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.485" endtime="20201110 08:33:14.514"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.477" endtime="20201110 08:33:14.516"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.979" endtime="20201110 08:33:14.516"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.978" endtime="20201110 08:33:14.517"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:14.539" endtime="20201110 08:33:14.554"></status>
</kw>
<msg timestamp="20201110 08:33:14.555" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:14.536" endtime="20201110 08:33:14.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:14.562" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:14.558" endtime="20201110 08:33:14.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:14.564" endtime="20201110 08:33:14.568"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.529" endtime="20201110 08:33:14.569"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.523" endtime="20201110 08:33:14.571"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:14.587" endtime="20201110 08:33:14.921"></status>
</kw>
<msg timestamp="20201110 08:33:14.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040118958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040142653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:14.584" endtime="20201110 08:33:14.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:14.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040118958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040142653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:14.931" endtime="20201110 08:33:14.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:14.949" endtime="20201110 08:33:14.953"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.577" endtime="20201110 08:33:14.955"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.572" endtime="20201110 08:33:14.956"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:14.967" level="INFO">${RESULT} = [{'time': 0.040142653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.369499999999719e-05, 'source_diff': 2.369499999999719e-05}, {'time': 0.040172694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:14.957" endtime="20201110 08:33:14.967"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:14.997" level="INFO">${ACCURACY} = {'time': [0.040142653, 0.040172694, 0.040204806, 0.040234889, 0.040266958, 0.040301931, 0.040333042, 0.040362153, 0.040392236, 0.040424333, 0.040457389, 0.040492361, 0.040524556, 0.040554514, 0.040587...</msg>
<status status="PASS" starttime="20201110 08:33:14.969" endtime="20201110 08:33:14.998"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:15.008" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201110 08:33:15.006" endtime="20201110 08:33:15.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:15.013" level="INFO">VALUE: [2.369499999999719e-05, 2.4194000000005156e-05, 2.3542000000001395e-05, 2.4056000000001465e-05, 2.354100000000192e-05, 2.366699999999805e-05, 2.370899999999676e-05, 2.337499999999909e-05, 2.3999999999996247e-05, 2.437500000000009e-05, 2.419500000000463e-05, 2.338899999999866e-05, 2.3542000000001395e-05, 2.4221999999997357e-05, 2.3721999999996857e-05, 2.387499999999959e-05, 2.387499999999959e-05, 2.386100000000002e-05, 2.337500000000603e-05, 2.4042000000001895e-05, 2.4028000000002325e-05, 2.3679999999998147e-05, 2.387499999999959e-05, 2.4221999999997357e-05, 2.3846999999993512e-05, 2.3763000000003032e-05, 2.4207999999997787e-05, 2.387499999999959e-05, 2.386100000000002e-05, 2.405500000000199e-05, 2.384700000000045e-05, 2.3777999999995136e-05, 2.4028000000002325e-05, 2.337499999999909e-05, 2.37090000000037e-05, 2.390299999999873e-05, 2.386100000000002e-05, 2.40970000000007e-05, 2.418100000000506e-05, 2.415300000000592e-05, 2.3915999999998827e-05, 2.3584000000000105e-05, 2.402700000000285e-05, 2.4056000000001465e-05, 2.338899999999866e-05, 2.388899999999916e-05, 2.3999999999996247e-05, 2.4207999999997787e-05, 2.4028000000002325e-05, 2.355500000000149e-05]</msg>
<status status="PASS" starttime="20201110 08:33:15.010" endtime="20201110 08:33:15.015"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.999" endtime="20201110 08:33:15.017"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:15.023" endtime="20201110 08:33:15.026"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:15.031" endtime="20201110 08:33:15.053"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.027" endtime="20201110 08:33:15.055"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.019" endtime="20201110 08:33:15.056"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.519" endtime="20201110 08:33:15.057"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.518" endtime="20201110 08:33:15.057"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:15.081" endtime="20201110 08:33:15.096"></status>
</kw>
<msg timestamp="20201110 08:33:15.098" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:15.078" endtime="20201110 08:33:15.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:15.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:15.100" endtime="20201110 08:33:15.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:15.106" endtime="20201110 08:33:15.110"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.071" endtime="20201110 08:33:15.112"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.064" endtime="20201110 08:33:15.113"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:15.131" endtime="20201110 08:33:15.473"></status>
</kw>
<msg timestamp="20201110 08:33:15.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04189875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041922236, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:33:15.127" endtime="20201110 08:33:15.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:15.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04189875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041922236, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:33:15.482" endtime="20201110 08:33:15.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:15.501" endtime="20201110 08:33:15.504"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.119" endtime="20201110 08:33:15.506"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.114" endtime="20201110 08:33:15.507"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:15.518" level="INFO">${RESULT} = [{'time': 0.041922236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3486000000003115e-05, 'source_diff': 2.3486000000003115e-05}, {'time': 0.041956208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:15.509" endtime="20201110 08:33:15.518"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:15.548" level="INFO">${ACCURACY} = {'time': [0.041922236, 0.041956208, 0.041987278, 0.042020444, 0.042051431, 0.042086583, 0.042119625, 0.042153736, 0.04218375, 0.042214819, 0.042248903, 0.042279819, 0.042309, 0.042343958, 0.042374056,...</msg>
<status status="PASS" starttime="20201110 08:33:15.520" endtime="20201110 08:33:15.549"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:15.559" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201110 08:33:15.557" endtime="20201110 08:33:15.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:15.565" level="INFO">VALUE: [2.3486000000003115e-05, 2.387499999999959e-05, 2.334699999999995e-05, 2.4193999999998217e-05, 2.420899999999726e-05, 2.3679999999998147e-05, 2.3528000000001825e-05, 2.413899999999941e-05, 2.387499999999959e-05, 2.4193999999998217e-05, 2.3805999999994276e-05, 2.402700000000285e-05, 2.386100000000002e-05, 2.3693999999997717e-05, 2.3542000000001395e-05, 2.336099999999952e-05, 2.336099999999952e-05, 2.336099999999952e-05, 2.4027999999995386e-05, 2.3528000000001825e-05, 2.42090000000042e-05, 2.3540999999994983e-05, 2.3986000000003616e-05, 2.4028000000002325e-05, 2.398699999999615e-05, 2.3526999999995413e-05, 2.3679999999998147e-05, 2.383300000000088e-05, 2.4028000000002325e-05, 2.369499999999719e-05, 2.386100000000002e-05, 2.3693999999997717e-05, 2.4027999999995386e-05, 2.387499999999959e-05, 2.4207999999997787e-05, 2.37090000000037e-05, 2.4042000000001895e-05, 2.4040999999995483e-05, 2.3708000000004226e-05, 2.437500000000009e-05, 2.369499999999719e-05, 2.3527999999994886e-05, 2.3528000000001825e-05, 2.3362000000005934e-05, 2.3361999999998995e-05, 2.3471999999996607e-05, 2.372299999999633e-05, 2.4207999999997787e-05, 2.386100000000002e-05, 2.438899999999966e-05]</msg>
<status status="PASS" starttime="20201110 08:33:15.562" endtime="20201110 08:33:15.566"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.550" endtime="20201110 08:33:15.568"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:15.574" endtime="20201110 08:33:15.577"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:15.582" endtime="20201110 08:33:15.604"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.578" endtime="20201110 08:33:15.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.570" endtime="20201110 08:33:15.607"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.059" endtime="20201110 08:33:15.608"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.058" endtime="20201110 08:33:15.608"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:15.631" endtime="20201110 08:33:15.648"></status>
</kw>
<msg timestamp="20201110 08:33:15.649" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:15.627" endtime="20201110 08:33:15.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:15.655" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:15.651" endtime="20201110 08:33:15.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:15.657" endtime="20201110 08:33:15.661"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.620" endtime="20201110 08:33:15.663"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.615" endtime="20201110 08:33:15.664"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:15.680" endtime="20201110 08:33:16.012"></status>
</kw>
<msg timestamp="20201110 08:33:16.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040029069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040059806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:15.677" endtime="20201110 08:33:16.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:16.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040029069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040059806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:16.022" endtime="20201110 08:33:16.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:16.041" endtime="20201110 08:33:16.044"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.670" endtime="20201110 08:33:16.046"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.665" endtime="20201110 08:33:16.047"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:16.058" level="INFO">${RESULT} = [{'time': 0.040059806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.07370000000029e-05, 'source_diff': 3.07370000000029e-05}, {'time': 0.040097792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:33:16.049" endtime="20201110 08:33:16.058"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:16.088" level="INFO">${ACCURACY} = {'time': [0.040059806, 0.040097792, 0.040137889, 0.040176014, 0.040213097, 0.040250194, 0.040288181, 0.040327333, 0.040369333, 0.040406458, 0.0404485, 0.040488653, 0.040528708, 0.040567778, 0.04060776...</msg>
<status status="PASS" starttime="20201110 08:33:16.060" endtime="20201110 08:33:16.089"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:16.099" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201110 08:33:16.097" endtime="20201110 08:33:16.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:16.104" level="INFO">VALUE: [3.07370000000029e-05, 3.1098000000000237e-05, 3.086100000000008e-05, 3.043100000000437e-05, 3.123600000000393e-05, 3.094400000000497e-05, 3.0597999999999737e-05, 3.059700000000026e-05, 3.042999999999796e-05, 3.077700000000266e-05, 3.058300000000069e-05, 3.108400000000067e-05, 3.1082999999994254e-05, 3.0416999999997862e-05, 3.090299999999879e-05, 3.126399999999613e-05, 3.0402999999998293e-05, 3.126399999999613e-05, 3.0278000000001637e-05, 3.1082999999994254e-05, 3.091599999999889e-05, 3.124999999999656e-05, 3.0278000000001637e-05, 3.0416999999997862e-05, 3.0416999999997862e-05, 3.123599999999699e-05, 3.0750000000003e-05, 3.124999999999656e-05, 3.126400000000307e-05, 3.063899999999897e-05, 3.073600000000343e-05, 3.041599999999839e-05, 3.111100000000033e-05, 3.072199999999692e-05, 3.108400000000067e-05, 3.088899999999922e-05, 3.077800000000214e-05, 3.09579999999976e-05, 3.0584000000000167e-05, 3.12500000000035e-05, 3.05700000000006e-05, 3.1098000000000237e-05, 3.058300000000069e-05, 3.042999999999796e-05, 3.052800000000189e-05, 3.093100000000487e-05, 3.091599999999889e-05, 3.0750000000003e-05, 3.059700000000026e-05, 3.092999999999846e-05]</msg>
<status status="PASS" starttime="20201110 08:33:16.101" endtime="20201110 08:33:16.106"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.090" endtime="20201110 08:33:16.107"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:16.114" endtime="20201110 08:33:16.116"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:16.122" endtime="20201110 08:33:16.144"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.118" endtime="20201110 08:33:16.146"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.109" endtime="20201110 08:33:16.147"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.610" endtime="20201110 08:33:16.148"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.609" endtime="20201110 08:33:16.148"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:16.171" endtime="20201110 08:33:16.186"></status>
</kw>
<msg timestamp="20201110 08:33:16.187" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:16.168" endtime="20201110 08:33:16.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:16.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:16.190" endtime="20201110 08:33:16.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:16.196" endtime="20201110 08:33:16.200"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.160" endtime="20201110 08:33:16.201"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.155" endtime="20201110 08:33:16.203"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:16.221" endtime="20201110 08:33:16.554"></status>
</kw>
<msg timestamp="20201110 08:33:16.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040670486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040701583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:16.217" endtime="20201110 08:33:16.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:16.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040670486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040701583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:16.564" endtime="20201110 08:33:16.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:16.582" endtime="20201110 08:33:16.586"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.209" endtime="20201110 08:33:16.588"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.204" endtime="20201110 08:33:16.589"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:16.600" level="INFO">${RESULT} = [{'time': 0.040701583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.109700000000076e-05, 'source_diff': 3.109700000000076e-05}, {'time': 0.040737694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:16.591" endtime="20201110 08:33:16.600"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:16.630" level="INFO">${ACCURACY} = {'time': [0.040701583, 0.040737694, 0.040776819, 0.040817917, 0.040858889, 0.040898069, 0.040938139, 0.040977125, 0.041017153, 0.041059292, 0.041096306, 0.041135375, 0.041172611, 0.041210611, 0.041249...</msg>
<status status="PASS" starttime="20201110 08:33:16.602" endtime="20201110 08:33:16.631"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:16.641" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201110 08:33:16.638" endtime="20201110 08:33:16.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:16.646" level="INFO">VALUE: [3.109700000000076e-05, 3.059700000000026e-05, 3.058300000000069e-05, 3.05700000000006e-05, 3.0750000000003e-05, 3.12500000000035e-05, 3.055600000000103e-05, 3.04170000000048e-05, 3.072200000000386e-05, 3.076399999999563e-05, 3.0264000000002067e-05, 3.04170000000048e-05, 3.129199999999527e-05, 3.120799999999785e-05, 3.076399999999563e-05, 3.109700000000076e-05, 3.093100000000487e-05, 3.118099999999818e-05, 3.09449999999975e-05, 3.058300000000069e-05, 3.0444999999997002e-05, 3.109700000000076e-05, 3.126399999999613e-05, 3.0444999999997002e-05, 3.108400000000067e-05, 3.1263000000003593e-05, 3.093099999999793e-05, 3.0763000000003093e-05, 3.092999999999846e-05, 3.108300000000119e-05, 3.108300000000119e-05, 3.12779999999957e-05, 3.09300000000054e-05, 3.108399999999373e-05, 3.076400000000257e-05, 3.044399999999753e-05, 3.0847999999999987e-05, 3.124999999999656e-05, 3.123600000000393e-05, 3.0402999999998293e-05, 3.055500000000155e-05, 3.076400000000257e-05, 3.11249999999999e-05, 3.076400000000257e-05, 3.0750000000003e-05, 3.058300000000069e-05, 3.124999999999656e-05, 3.126399999999613e-05, 3.073600000000343e-05, 3.0430000000004898e-05]</msg>
<status status="PASS" starttime="20201110 08:33:16.643" endtime="20201110 08:33:16.648"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.632" endtime="20201110 08:33:16.649"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:16.655" endtime="20201110 08:33:16.658"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:16.664" endtime="20201110 08:33:16.685"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.659" endtime="20201110 08:33:16.687"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.651" endtime="20201110 08:33:16.688"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.150" endtime="20201110 08:33:16.689"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.149" endtime="20201110 08:33:16.689"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:16.712" endtime="20201110 08:33:16.727"></status>
</kw>
<msg timestamp="20201110 08:33:16.728" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:16.708" endtime="20201110 08:33:16.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:16.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:16.730" endtime="20201110 08:33:16.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:16.739" endtime="20201110 08:33:16.744"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.701" endtime="20201110 08:33:16.746"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.696" endtime="20201110 08:33:16.748"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:16.770" endtime="20201110 08:33:17.114"></status>
</kw>
<msg timestamp="20201110 08:33:17.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039849069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039879681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:16.765" endtime="20201110 08:33:17.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:17.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039849069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039879681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:17.124" endtime="20201110 08:33:17.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:17.142" endtime="20201110 08:33:17.146"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.756" endtime="20201110 08:33:17.147"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.749" endtime="20201110 08:33:17.149"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:17.159" level="INFO">${RESULT} = [{'time': 0.039879681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0611999999999306e-05, 'source_diff': 3.0611999999999306e-05}, {'time': 0.039918778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:17.150" endtime="20201110 08:33:17.160"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:17.190" level="INFO">${ACCURACY} = {'time': [0.039879681, 0.039918778, 0.039960819, 0.039999917, 0.040038958, 0.04008, 0.040117, 0.040157167, 0.040195153, 0.040231306, 0.040270375, 0.040311528, 0.040351486, 0.040390583, 0.040428569, 0....</msg>
<status status="PASS" starttime="20201110 08:33:17.161" endtime="20201110 08:33:17.190"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:17.201" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201110 08:33:17.198" endtime="20201110 08:33:17.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:17.206" level="INFO">VALUE: [3.0611999999999306e-05, 3.111100000000033e-05, 3.056900000000112e-05, 3.0750000000003e-05, 3.091599999999889e-05, 3.088899999999922e-05, 3.073599999999649e-05, 3.05700000000006e-05, 3.0584000000000167e-05, 3.04170000000048e-05, 3.123599999999699e-05, 3.0499999999995808e-05, 3.076399999999563e-05, 3.129100000000273e-05, 3.040199999999882e-05, 3.0416999999997862e-05, 3.090300000000573e-05, 3.1068999999994684e-05, 3.056999999999366e-05, 3.123600000000393e-05, 3.056900000000112e-05, 3.124999999999656e-05, 3.105500000000205e-05, 3.074999999999606e-05, 3.108400000000067e-05, 3.1110999999993394e-05, 3.074999999999606e-05, 3.073599999999649e-05, 3.063900000000591e-05, 3.076400000000257e-05, 3.108400000000067e-05, 3.093099999999793e-05, 3.105600000000153e-05, 3.090299999999879e-05, 3.0750000000003e-05, 3.058300000000069e-05, 3.1082999999994254e-05, 3.059700000000026e-05, 3.12370000000034e-05, 3.040300000000523e-05, 3.074999999999606e-05, 3.0584000000000167e-05, 3.090199999999932e-05, 3.106900000000162e-05, 3.0264000000002067e-05, 3.093099999999793e-05, 3.109700000000076e-05, 3.076400000000257e-05, 3.123600000000393e-05, 3.087499999999965e-05]</msg>
<status status="PASS" starttime="20201110 08:33:17.203" endtime="20201110 08:33:17.207"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.192" endtime="20201110 08:33:17.209"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:17.216" endtime="20201110 08:33:17.218"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:17.224" endtime="20201110 08:33:17.246"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.220" endtime="20201110 08:33:17.247"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.211" endtime="20201110 08:33:17.249"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.692" endtime="20201110 08:33:17.250"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.690" endtime="20201110 08:33:17.250"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:17.272" endtime="20201110 08:33:17.288"></status>
</kw>
<msg timestamp="20201110 08:33:17.289" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:17.269" endtime="20201110 08:33:17.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:17.295" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:17.291" endtime="20201110 08:33:17.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:17.297" endtime="20201110 08:33:17.301"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.262" endtime="20201110 08:33:17.302"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.256" endtime="20201110 08:33:17.304"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:17.320" endtime="20201110 08:33:17.655"></status>
</kw>
<msg timestamp="20201110 08:33:17.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040024403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040055625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:17.317" endtime="20201110 08:33:17.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:17.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040024403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040055625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:17.665" endtime="20201110 08:33:17.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:17.683" endtime="20201110 08:33:17.687"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.310" endtime="20201110 08:33:17.688"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.305" endtime="20201110 08:33:17.690"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:17.700" level="INFO">${RESULT} = [{'time': 0.040055625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.122199999999742e-05, 'source_diff': 3.122199999999742e-05}, {'time': 0.040093764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:17.692" endtime="20201110 08:33:17.701"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:17.731" level="INFO">${ACCURACY} = {'time': [0.040055625, 0.040093764, 0.040132764, 0.040173792, 0.040212903, 0.040254972, 0.040294056, 0.040333097, 0.040370083, 0.040409181, 0.040449194, 0.040486361, 0.040525431, 0.040564389, 0.040601...</msg>
<status status="PASS" starttime="20201110 08:33:17.702" endtime="20201110 08:33:17.731"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:17.742" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201110 08:33:17.739" endtime="20201110 08:33:17.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:17.747" level="INFO">VALUE: [3.122199999999742e-05, 3.06249999999994e-05, 3.0402999999998293e-05, 3.0388999999998723e-05, 3.108400000000067e-05, 3.088899999999922e-05, 3.07370000000029e-05, 3.056900000000112e-05, 3.0750000000003e-05, 3.10700000000011e-05, 3.073600000000343e-05, 3.059700000000026e-05, 3.07370000000029e-05, 3.0402999999998293e-05, 3.047199999999667e-05, 3.109700000000076e-05, 3.058300000000069e-05, 3.073599999999649e-05, 3.059700000000026e-05, 3.081900000000137e-05, 3.0458000000004037e-05, 3.073599999999649e-05, 3.0416999999997862e-05, 3.074999999999606e-05, 3.1276999999996224e-05, 3.0763000000003093e-05, 3.0347999999999486e-05, 3.0236000000002927e-05, 3.0584000000000167e-05, 3.077800000000214e-05, 3.087499999999965e-05, 3.1098000000000237e-05, 3.0584000000000167e-05, 3.0584000000000167e-05, 3.126399999999613e-05, 3.0750000000003e-05, 3.066699999999811e-05, 3.124999999999656e-05, 3.0416000000005328e-05, 3.124999999999656e-05, 3.058300000000069e-05, 3.10700000000011e-05, 3.126399999999613e-05, 3.12370000000034e-05, 3.12500000000035e-05, 3.09579999999976e-05, 3.059700000000026e-05, 3.054100000000198e-05, 3.108300000000119e-05, 3.076400000000257e-05]</msg>
<status status="PASS" starttime="20201110 08:33:17.744" endtime="20201110 08:33:17.748"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.733" endtime="20201110 08:33:17.750"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:17.756" endtime="20201110 08:33:17.759"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:17.764" endtime="20201110 08:33:17.786"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.760" endtime="20201110 08:33:17.788"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.752" endtime="20201110 08:33:17.789"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.252" endtime="20201110 08:33:17.790"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.251" endtime="20201110 08:33:17.790"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:17.813" endtime="20201110 08:33:17.828"></status>
</kw>
<msg timestamp="20201110 08:33:17.829" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:17.809" endtime="20201110 08:33:17.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:17.835" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:17.831" endtime="20201110 08:33:17.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:17.837" endtime="20201110 08:33:17.841"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.802" endtime="20201110 08:33:17.843"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.796" endtime="20201110 08:33:17.844"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:17.860" endtime="20201110 08:33:18.195"></status>
</kw>
<msg timestamp="20201110 08:33:18.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039853458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039884194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:17.857" endtime="20201110 08:33:18.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:18.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039853458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039884194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:18.204" endtime="20201110 08:33:18.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:18.223" endtime="20201110 08:33:18.230"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.850" endtime="20201110 08:33:18.232"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.845" endtime="20201110 08:33:18.233"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:18.243" level="INFO">${RESULT} = [{'time': 0.039884194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.073599999999649e-05, 'source_diff': 3.073599999999649e-05}, {'time': 0.03992625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:33:18.235" endtime="20201110 08:33:18.244"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:18.274" level="INFO">${ACCURACY} = {'time': [0.039884194, 0.03992625, 0.039966375, 0.040008472, 0.040047556, 0.040086708, 0.040128694, 0.040167694, 0.040204792, 0.040240861, 0.040280028, 0.040319056, 0.040356056, 0.040396194, 0.0404373...</msg>
<status status="PASS" starttime="20201110 08:33:18.245" endtime="20201110 08:33:18.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:18.285" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201110 08:33:18.283" endtime="20201110 08:33:18.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:18.290" level="INFO">VALUE: [3.073599999999649e-05, 3.056900000000112e-05, 3.0416999999997862e-05, 3.036100000000652e-05, 3.0430999999997432e-05, 3.092999999999846e-05, 3.0374999999999153e-05, 3.023599999999599e-05, 3.043100000000437e-05, 3.076400000000257e-05, 3.090300000000573e-05, 3.0597999999999737e-05, 3.0750000000003e-05, 3.0750000000003e-05, 3.063899999999897e-05, 3.12500000000035e-05, 3.074999999999606e-05, 3.040199999999882e-05, 3.108300000000119e-05, 3.040199999999882e-05, 3.041599999999839e-05, 3.058300000000069e-05, 3.042999999999796e-05, 3.1098000000000237e-05, 3.108400000000067e-05, 3.0277000000002163e-05, 3.090300000000573e-05, 3.0360999999999583e-05, 3.124999999999656e-05, 3.0584000000000167e-05, 3.0582999999993754e-05, 3.108400000000067e-05, 3.042999999999796e-05, 3.073600000000343e-05, 3.05700000000006e-05, 3.097200000000411e-05, 3.073600000000343e-05, 3.056900000000112e-05, 3.068100000000462e-05, 3.091599999999889e-05, 3.0750000000003e-05, 3.079100000000223e-05, 3.0402999999998293e-05, 3.127800000000264e-05, 3.0750000000003e-05, 3.109700000000076e-05, 3.090199999999932e-05, 3.0416999999997862e-05, 3.073600000000343e-05, 3.040300000000523e-05]</msg>
<status status="PASS" starttime="20201110 08:33:18.287" endtime="20201110 08:33:18.292"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:18.276" endtime="20201110 08:33:18.293"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:18.300" endtime="20201110 08:33:18.302"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:18.308" endtime="20201110 08:33:18.329"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:18.303" endtime="20201110 08:33:18.331"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:18.295" endtime="20201110 08:33:18.332"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.792" endtime="20201110 08:33:18.333"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.791" endtime="20201110 08:33:18.333"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:18.355" endtime="20201110 08:33:18.371"></status>
</kw>
<msg timestamp="20201110 08:33:18.372" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:18.352" endtime="20201110 08:33:18.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:18.378" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:18.374" endtime="20201110 08:33:18.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:18.380" endtime="20201110 08:33:18.384"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:18.345" endtime="20201110 08:33:18.386"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:18.340" endtime="20201110 08:33:18.387"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:18.403" endtime="20201110 08:33:18.742"></status>
</kw>
<msg timestamp="20201110 08:33:18.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039637458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039668556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:18.400" endtime="20201110 08:33:18.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:18.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039637458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039668556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:18.752" endtime="20201110 08:33:18.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:18.770" endtime="20201110 08:33:18.775"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:18.393" endtime="20201110 08:33:18.777"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:18.388" endtime="20201110 08:33:18.778"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:18.789" level="INFO">${RESULT} = [{'time': 0.039668556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1098000000000237e-05, 'source_diff': 3.1098000000000237e-05}, {'time': 0.039708597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:18.780" endtime="20201110 08:33:18.789"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:18.820" level="INFO">${ACCURACY} = {'time': [0.039668556, 0.039708597, 0.039750625, 0.03979075, 0.039829833, 0.039867903, 0.039909972, 0.039952042, 0.039989083, 0.040025181, 0.040062333, 0.040104417, 0.0401425, 0.0401835, 0.040222681, ...</msg>
<status status="PASS" starttime="20201110 08:33:18.791" endtime="20201110 08:33:18.820"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:18.830" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201110 08:33:18.828" endtime="20201110 08:33:18.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:18.836" level="INFO">VALUE: [3.1098000000000237e-05, 3.076399999999563e-05, 3.108300000000119e-05, 3.0430999999997432e-05, 3.076400000000257e-05, 3.127800000000264e-05, 3.092999999999846e-05, 3.061099999999983e-05, 3.058300000000069e-05, 3.077800000000214e-05, 3.092999999999846e-05, 3.093100000000487e-05, 3.104199999999502e-05, 3.0582999999993754e-05, 3.122300000000383e-05, 3.0250000000002497e-05, 3.093099999999793e-05, 3.0750000000003e-05, 3.0430999999997432e-05, 3.091699999999836e-05, 3.073599999999649e-05, 3.0584000000000167e-05, 3.093099999999793e-05, 3.076400000000257e-05, 3.092999999999846e-05, 3.109700000000076e-05, 3.0402000000005758e-05, 3.124999999999656e-05, 3.038799999999925e-05, 3.074999999999606e-05, 3.094400000000497e-05, 3.040300000000523e-05, 3.073599999999649e-05, 3.0750000000003e-05, 3.042999999999796e-05, 3.040300000000523e-05, 3.058300000000069e-05, 3.065299999999854e-05, 3.088899999999922e-05, 3.1111999999999806e-05, 3.126399999999613e-05, 3.040199999999882e-05, 3.09170000000053e-05, 3.0776999999995724e-05, 3.0597999999999737e-05, 3.09579999999976e-05, 3.0584000000000167e-05, 3.0750000000003e-05, 3.058300000000069e-05, 3.108400000000067e-05]</msg>
<status status="PASS" starttime="20201110 08:33:18.833" endtime="20201110 08:33:18.837"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:18.821" endtime="20201110 08:33:18.839"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:18.845" endtime="20201110 08:33:18.848"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:18.853" endtime="20201110 08:33:18.875"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:18.849" endtime="20201110 08:33:18.877"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:18.841" endtime="20201110 08:33:18.878"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:18.335" endtime="20201110 08:33:18.879"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:18.334" endtime="20201110 08:33:18.879"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:18.902" endtime="20201110 08:33:18.917"></status>
</kw>
<msg timestamp="20201110 08:33:18.918" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:18.898" endtime="20201110 08:33:18.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:18.924" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:18.920" endtime="20201110 08:33:18.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:18.927" endtime="20201110 08:33:18.931"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:18.891" endtime="20201110 08:33:18.933"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:18.885" endtime="20201110 08:33:18.934"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:18.951" endtime="20201110 08:33:19.284"></status>
</kw>
<msg timestamp="20201110 08:33:19.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039977764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040008847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:18.948" endtime="20201110 08:33:19.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:19.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039977764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040008847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:19.293" endtime="20201110 08:33:19.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:19.312" endtime="20201110 08:33:19.317"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:18.940" endtime="20201110 08:33:19.319"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:18.935" endtime="20201110 08:33:19.320"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:19.331" level="INFO">${RESULT} = [{'time': 0.040008847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.108300000000119e-05, 'source_diff': 3.108300000000119e-05}, {'time': 0.040044806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:19.322" endtime="20201110 08:33:19.331"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:19.361" level="INFO">${ACCURACY} = {'time': [0.040008847, 0.040044806, 0.040081972, 0.040120056, 0.040157167, 0.040196181, 0.040232306, 0.040274292, 0.040314431, 0.040356486, 0.040396639, 0.040434583, 0.040475722, 0.040513778, 0.040551...</msg>
<status status="PASS" starttime="20201110 08:33:19.333" endtime="20201110 08:33:19.362"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:19.372" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201110 08:33:19.370" endtime="20201110 08:33:19.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:19.377" level="INFO">VALUE: [3.108300000000119e-05, 3.043100000000437e-05, 3.11249999999999e-05, 3.0416999999997862e-05, 3.1098000000000237e-05, 3.0402999999998293e-05, 3.0611999999999306e-05, 3.09170000000053e-05, 3.0444999999997002e-05, 3.059700000000026e-05, 3.10700000000011e-05, 3.0430000000004898e-05, 3.061099999999983e-05, 3.105600000000153e-05, 3.111100000000033e-05, 3.091699999999836e-05, 3.1098000000000237e-05, 3.12500000000035e-05, 3.058300000000069e-05, 3.044399999999753e-05, 3.0249999999995558e-05, 3.0416999999997862e-05, 3.076400000000257e-05, 3.059700000000026e-05, 3.091699999999836e-05, 3.058300000000069e-05, 3.073599999999649e-05, 3.092999999999846e-05, 3.090299999999879e-05, 3.074999999999606e-05, 3.120900000000426e-05, 3.073599999999649e-05, 3.059700000000026e-05, 3.042999999999796e-05, 3.077800000000214e-05, 3.091699999999836e-05, 3.108400000000067e-05, 3.0360999999999583e-05, 3.056999999999366e-05, 3.048599999999624e-05, 3.12779999999957e-05, 3.0333000000000443e-05, 3.059700000000026e-05, 3.126399999999613e-05, 3.074999999999606e-05, 3.090199999999932e-05, 3.0584000000000167e-05, 3.09170000000053e-05, 3.074999999999606e-05, 3.0416999999997862e-05]</msg>
<status status="PASS" starttime="20201110 08:33:19.374" endtime="20201110 08:33:19.379"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.363" endtime="20201110 08:33:19.380"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:19.387" endtime="20201110 08:33:19.389"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:19.395" endtime="20201110 08:33:19.416"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.391" endtime="20201110 08:33:19.418"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.382" endtime="20201110 08:33:19.420"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:18.881" endtime="20201110 08:33:19.420"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:18.880" endtime="20201110 08:33:19.421"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:19.443" endtime="20201110 08:33:19.459"></status>
</kw>
<msg timestamp="20201110 08:33:19.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:19.440" endtime="20201110 08:33:19.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:19.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:19.462" endtime="20201110 08:33:19.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:19.468" endtime="20201110 08:33:19.472"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.433" endtime="20201110 08:33:19.473"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.427" endtime="20201110 08:33:19.475"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:19.491" endtime="20201110 08:33:19.823"></status>
</kw>
<msg timestamp="20201110 08:33:19.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039986514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040024181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:19.488" endtime="20201110 08:33:19.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:19.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039986514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040024181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:19.832" endtime="20201110 08:33:19.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:19.852" endtime="20201110 08:33:19.858"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.481" endtime="20201110 08:33:19.860"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.476" endtime="20201110 08:33:19.861"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:19.872" level="INFO">${RESULT} = [{'time': 0.040024181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7666999999998174e-05, 'source_diff': 3.7666999999998174e-05}, {'time': 0.040072278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:19.863" endtime="20201110 08:33:19.872"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:19.902" level="INFO">${ACCURACY} = {'time': [0.040024181, 0.040072278, 0.040116333, 0.040159361, 0.0402075, 0.040254583, 0.040302681, 0.040350764, 0.040393861, 0.040436889, 0.040486111, 0.040532111, 0.040579278, 0.040626264, 0.04067147...</msg>
<status status="PASS" starttime="20201110 08:33:19.874" endtime="20201110 08:33:19.903"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:19.913" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201110 08:33:19.911" endtime="20201110 08:33:19.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:19.918" level="INFO">VALUE: [3.7666999999998174e-05, 3.800000000000331e-05, 3.8332999999994566e-05, 3.7818999999994496e-05, 3.8111000000000395e-05, 3.741599999999845e-05, 3.798700000000321e-05, 3.8166999999998674e-05, 3.773600000000349e-05, 3.78059999999944e-05, 3.7638999999999034e-05, 3.797200000000417e-05, 3.798600000000374e-05, 3.782000000000091e-05, 3.7819000000001435e-05, 3.8305000000002365e-05, 3.800000000000331e-05, 3.7569000000001185e-05, 3.75979999999998e-05, 3.8152999999999104e-05, 3.7319000000000935e-05, 3.74859999999963e-05, 3.8138999999999534e-05, 3.7805000000001865e-05, 3.799999999999637e-05, 3.813800000000006e-05, 3.776400000000263e-05, 3.730600000000084e-05, 3.802799999999551e-05, 3.7833000000001005e-05, 3.8138999999999534e-05, 3.7805000000001865e-05, 3.7819000000001435e-05, 3.748600000000324e-05, 3.766600000000564e-05, 3.813800000000006e-05, 3.7666999999998174e-05, 3.751399999999544e-05, 3.815199999999963e-05, 3.8166999999998674e-05, 3.781999999999397e-05, 3.747200000000367e-05, 3.8333000000001505e-05, 3.7333000000000505e-05, 3.8152999999999104e-05, 3.7861000000000145e-05, 3.797200000000417e-05, 3.748600000000324e-05, 3.7472999999996204e-05, 3.8138999999999534e-05]</msg>
<status status="PASS" starttime="20201110 08:33:19.915" endtime="20201110 08:33:19.920"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.904" endtime="20201110 08:33:19.921"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:19.928" endtime="20201110 08:33:19.930"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:19.936" endtime="20201110 08:33:19.958"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.932" endtime="20201110 08:33:19.960"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.923" endtime="20201110 08:33:19.961"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.423" endtime="20201110 08:33:19.962"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.422" endtime="20201110 08:33:19.962"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:19.986" endtime="20201110 08:33:20.002"></status>
</kw>
<msg timestamp="20201110 08:33:20.003" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:19.982" endtime="20201110 08:33:20.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:20.009" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:20.005" endtime="20201110 08:33:20.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:20.011" endtime="20201110 08:33:20.015"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.975" endtime="20201110 08:33:20.017"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.969" endtime="20201110 08:33:20.018"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:20.034" endtime="20201110 08:33:20.367"></status>
</kw>
<msg timestamp="20201110 08:33:20.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041756333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041794319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:20.031" endtime="20201110 08:33:20.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:20.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041756333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041794319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:20.376" endtime="20201110 08:33:20.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:20.395" endtime="20201110 08:33:20.402"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.024" endtime="20201110 08:33:20.404"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.019" endtime="20201110 08:33:20.405"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:20.415" level="INFO">${RESULT} = [{'time': 0.041794319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.798600000000374e-05, 'source_diff': 3.798600000000374e-05}, {'time': 0.041843444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:20.406" endtime="20201110 08:33:20.416"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:20.446" level="INFO">${ACCURACY} = {'time': [0.041794319, 0.041843444, 0.041892653, 0.041938722, 0.041981833, 0.042025778, 0.042074, 0.042123069, 0.042171236, 0.042214306, 0.042260333, 0.042304403, 0.042349472, 0.042396653, 0.042442708...</msg>
<status status="PASS" starttime="20201110 08:33:20.418" endtime="20201110 08:33:20.446"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:20.457" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201110 08:33:20.454" endtime="20201110 08:33:20.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:20.462" level="INFO">VALUE: [3.798600000000374e-05, 3.763799999999956e-05, 3.783400000000048e-05, 3.8152999999999104e-05, 3.747200000000367e-05, 3.779200000000177e-05, 3.830600000000184e-05, 3.819399999999834e-05, 3.8305000000002365e-05, 3.7652999999998604e-05, 3.74859999999963e-05, 3.78059999999944e-05, 3.7638999999999034e-05, 3.774999999999612e-05, 3.7777000000002725e-05, 3.797199999999723e-05, 3.7804999999994926e-05, 3.7819000000001435e-05, 3.7861000000000145e-05, 3.813900000000647e-05, 3.798600000000374e-05, 3.797200000000417e-05, 3.8124999999999964e-05, 3.7791000000002295e-05, 3.748700000000271e-05, 3.780600000000134e-05, 3.7638999999999034e-05, 3.7652999999998604e-05, 3.7638999999999034e-05, 3.747199999999673e-05, 3.797200000000417e-05, 3.7804999999994926e-05, 3.8388999999999784e-05, 3.7972999999996704e-05, 3.748600000000324e-05, 3.7304999999994426e-05, 3.791700000000536e-05, 3.7818999999994496e-05, 3.797200000000417e-05, 3.783400000000048e-05, 3.7486999999995774e-05, 3.8138999999999534e-05, 3.7638999999999034e-05, 3.7819000000001435e-05, 3.7819000000001435e-05, 3.747199999999673e-05, 3.8138999999999534e-05, 3.801399999999594e-05, 3.797200000000417e-05, 3.7652999999998604e-05]</msg>
<status status="PASS" starttime="20201110 08:33:20.459" endtime="20201110 08:33:20.464"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.448" endtime="20201110 08:33:20.465"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:20.471" endtime="20201110 08:33:20.474"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:20.480" endtime="20201110 08:33:20.501"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.475" endtime="20201110 08:33:20.503"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.467" endtime="20201110 08:33:20.504"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.964" endtime="20201110 08:33:20.505"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.963" endtime="20201110 08:33:20.505"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:20.528" endtime="20201110 08:33:20.544"></status>
</kw>
<msg timestamp="20201110 08:33:20.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:20.524" endtime="20201110 08:33:20.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:20.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:20.547" endtime="20201110 08:33:20.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:20.553" endtime="20201110 08:33:20.557"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.517" endtime="20201110 08:33:20.558"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.512" endtime="20201110 08:33:20.560"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:20.576" endtime="20201110 08:33:20.908"></status>
</kw>
<msg timestamp="20201110 08:33:20.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0398945, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039932319, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:33:20.573" endtime="20201110 08:33:20.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:20.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0398945, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039932319, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:33:20.918" endtime="20201110 08:33:20.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:20.936" endtime="20201110 08:33:20.943"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.566" endtime="20201110 08:33:20.945"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.561" endtime="20201110 08:33:20.947"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:20.960" level="INFO">${RESULT} = [{'time': 0.039932319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7819000000001435e-05, 'source_diff': 3.7819000000001435e-05}, {'time': 0.039975486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:20.950" endtime="20201110 08:33:20.961"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:20.994" level="INFO">${ACCURACY} = {'time': [0.039932319, 0.039975486, 0.040018542, 0.040065694, 0.040111694, 0.040158847, 0.040202917, 0.040251014, 0.040297056, 0.040345056, 0.040393125, 0.040439278, 0.040486417, 0.040530472, 0.040579...</msg>
<status status="PASS" starttime="20201110 08:33:20.963" endtime="20201110 08:33:20.995"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:21.006" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201110 08:33:21.003" endtime="20201110 08:33:21.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:21.011" level="INFO">VALUE: [3.7819000000001435e-05, 3.795799999999766e-05, 3.784800000000005e-05, 3.7805000000001865e-05, 3.79580000000046e-05, 3.7652999999998604e-05, 3.8152999999999104e-05, 3.7445000000004e-05, 3.774999999999612e-05, 3.7472999999996204e-05, 3.797200000000417e-05, 3.782000000000091e-05, 3.7958999999997134e-05, 3.8304999999995426e-05, 3.7638999999999034e-05, 3.7944999999997564e-05, 3.8138999999999534e-05, 3.730600000000084e-05, 3.797199999999723e-05, 3.7430999999997494e-05, 3.78059999999944e-05, 3.7805000000001865e-05, 3.7638999999999034e-05, 3.783400000000048e-05, 3.795799999999766e-05, 3.8097000000000825e-05, 3.795799999999766e-05, 3.729200000000127e-05, 3.820799999999791e-05, 3.800000000000331e-05, 3.795799999999766e-05, 3.797199999999723e-05, 3.8291000000002795e-05, 3.8152999999999104e-05, 3.8124999999999964e-05, 3.7416999999997924e-05, 3.7680999999997744e-05, 3.749999999999587e-05, 3.8097000000000825e-05, 3.729200000000127e-05, 3.8180999999998244e-05, 3.7610999999999895e-05, 3.833400000000098e-05, 3.782000000000091e-05, 3.800000000000331e-05, 3.780600000000134e-05, 3.79859999999968e-05, 3.7833000000001005e-05, 3.797200000000417e-05, 3.8304999999995426e-05]</msg>
<status status="PASS" starttime="20201110 08:33:21.008" endtime="20201110 08:33:21.013"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.996" endtime="20201110 08:33:21.015"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:21.022" endtime="20201110 08:33:21.024"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:21.030" endtime="20201110 08:33:21.052"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:21.026" endtime="20201110 08:33:21.054"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:21.017" endtime="20201110 08:33:21.055"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.507" endtime="20201110 08:33:21.056"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.506" endtime="20201110 08:33:21.056"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:21.078" endtime="20201110 08:33:21.094"></status>
</kw>
<msg timestamp="20201110 08:33:21.095" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:21.075" endtime="20201110 08:33:21.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:21.101" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:21.098" endtime="20201110 08:33:21.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:21.104" endtime="20201110 08:33:21.107"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:21.068" endtime="20201110 08:33:21.109"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:21.062" endtime="20201110 08:33:21.110"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:21.126" endtime="20201110 08:33:21.458"></status>
</kw>
<msg timestamp="20201110 08:33:21.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039939528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039977667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:21.123" endtime="20201110 08:33:21.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:21.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039939528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039977667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:21.468" endtime="20201110 08:33:21.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:21.486" endtime="20201110 08:33:21.492"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:21.116" endtime="20201110 08:33:21.493"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:21.112" endtime="20201110 08:33:21.495"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:21.505" level="INFO">${RESULT} = [{'time': 0.039977667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8138999999999534e-05, 'source_diff': 3.8138999999999534e-05}, {'time': 0.040022694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:21.496" endtime="20201110 08:33:21.505"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:21.535" level="INFO">${ACCURACY} = {'time': [0.039977667, 0.040022694, 0.040071917, 0.040120028, 0.040169, 0.040218083, 0.040263181, 0.040306222, 0.040354347, 0.040402417, 0.040449556, 0.040498542, 0.040545667, 0.040591792, 0.040635903...</msg>
<status status="PASS" starttime="20201110 08:33:21.507" endtime="20201110 08:33:21.536"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:21.546" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201110 08:33:21.544" endtime="20201110 08:33:21.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:21.551" level="INFO">VALUE: [3.8138999999999534e-05, 3.7624999999999464e-05, 3.784800000000005e-05, 3.798600000000374e-05, 3.74580000000041e-05, 3.776400000000263e-05, 3.780600000000134e-05, 3.7805000000001865e-05, 3.751399999999544e-05, 3.747300000000314e-05, 3.7638999999999034e-05, 3.730600000000084e-05, 3.7638999999999034e-05, 3.798600000000374e-05, 3.7638999999999034e-05, 3.748600000000324e-05, 3.8304999999995426e-05, 3.7444999999997064e-05, 3.822199999999748e-05, 3.7638999999999034e-05, 3.750000000000281e-05, 3.7402999999998354e-05, 3.7972999999996704e-05, 3.8333000000001505e-05, 3.7527000000002475e-05, 3.74859999999963e-05, 3.74580000000041e-05, 3.8180999999998244e-05, 3.748600000000324e-05, 3.8138999999999534e-05, 3.8305000000002365e-05, 3.732000000000041e-05, 3.780600000000134e-05, 3.748600000000324e-05, 3.782000000000091e-05, 3.832000000000141e-05, 3.7304999999994426e-05, 3.8166999999998674e-05, 3.730600000000084e-05, 3.829200000000227e-05, 3.817999999999877e-05, 3.8124999999999964e-05, 3.7833000000001005e-05, 3.745799999999716e-05, 3.817999999999877e-05, 3.83059999999949e-05, 3.745799999999716e-05, 3.747200000000367e-05, 3.7638999999999034e-05, 3.765199999999913e-05]</msg>
<status status="PASS" starttime="20201110 08:33:21.548" endtime="20201110 08:33:21.553"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:21.537" endtime="20201110 08:33:21.555"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:21.561" endtime="20201110 08:33:21.563"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:21.569" endtime="20201110 08:33:21.591"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:21.565" endtime="20201110 08:33:21.592"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:21.556" endtime="20201110 08:33:21.594"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:21.058" endtime="20201110 08:33:21.594"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:21.057" endtime="20201110 08:33:21.595"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:21.617" endtime="20201110 08:33:21.633"></status>
</kw>
<msg timestamp="20201110 08:33:21.634" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:21.614" endtime="20201110 08:33:21.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:21.641" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:21.637" endtime="20201110 08:33:21.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:21.643" endtime="20201110 08:33:21.646"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:21.607" endtime="20201110 08:33:21.648"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:21.601" endtime="20201110 08:33:21.650"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:21.666" endtime="20201110 08:33:22.004"></status>
</kw>
<msg timestamp="20201110 08:33:22.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040052361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040089986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:21.662" endtime="20201110 08:33:22.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:22.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040052361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040089986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:22.014" endtime="20201110 08:33:22.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:22.032" endtime="20201110 08:33:22.038"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:21.655" endtime="20201110 08:33:22.040"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:21.651" endtime="20201110 08:33:22.041"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:22.052" level="INFO">${RESULT} = [{'time': 0.040089986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7624999999999464e-05, 'source_diff': 3.7624999999999464e-05}, {'time': 0.04013825, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201110 08:33:22.043" endtime="20201110 08:33:22.053"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:22.083" level="INFO">${ACCURACY} = {'time': [0.040089986, 0.04013825, 0.040187208, 0.040233472, 0.040277431, 0.040323417, 0.040370653, 0.040419611, 0.04046575, 0.040513931, 0.040560931, 0.040608097, 0.040657083, 0.040703194, 0.04074643...</msg>
<status status="PASS" starttime="20201110 08:33:22.054" endtime="20201110 08:33:22.083"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:22.093" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201110 08:33:22.091" endtime="20201110 08:33:22.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:22.099" level="INFO">VALUE: [3.7624999999999464e-05, 3.7819000000001435e-05, 3.8124999999999964e-05, 3.767999999999827e-05, 3.766700000000511e-05, 3.745900000000357e-05, 3.7638999999999034e-05, 3.748600000000324e-05, 3.748600000000324e-05, 3.798700000000321e-05, 3.8152999999999104e-05, 3.747200000000367e-05, 3.815199999999963e-05, 3.817999999999877e-05, 3.805600000000159e-05, 3.8124999999999964e-05, 3.816700000000561e-05, 3.8138999999999534e-05, 3.748600000000324e-05, 3.732000000000041e-05, 3.745799999999716e-05, 3.8111000000000395e-05, 3.748600000000324e-05, 3.79450000000045e-05, 3.8124999999999964e-05, 3.74580000000041e-05, 3.7624999999999464e-05, 3.8124999999999964e-05, 3.732000000000041e-05, 3.779200000000177e-05, 3.7624999999999464e-05, 3.8124999999999964e-05, 3.7305000000001365e-05, 3.83059999999949e-05, 3.7624999999999464e-05, 3.765300000000554e-05, 3.736199999999912e-05, 3.8263000000003655e-05, 3.7319000000000935e-05, 3.7472999999996204e-05, 3.7486999999995774e-05, 3.747200000000367e-05, 3.763799999999956e-05, 3.8332999999994566e-05, 3.7666999999998174e-05, 3.8166999999998674e-05, 3.74859999999963e-05, 3.8152999999999104e-05, 3.8375000000000214e-05, 3.815199999999963e-05]</msg>
<status status="PASS" starttime="20201110 08:33:22.096" endtime="20201110 08:33:22.100"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.085" endtime="20201110 08:33:22.102"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:22.108" endtime="20201110 08:33:22.111"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:22.116" endtime="20201110 08:33:22.138"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.112" endtime="20201110 08:33:22.140"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.104" endtime="20201110 08:33:22.141"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:21.597" endtime="20201110 08:33:22.142"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:21.596" endtime="20201110 08:33:22.142"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:22.165" endtime="20201110 08:33:22.182"></status>
</kw>
<msg timestamp="20201110 08:33:22.183" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:22.161" endtime="20201110 08:33:22.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:22.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:22.185" endtime="20201110 08:33:22.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:22.191" endtime="20201110 08:33:22.195"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.154" endtime="20201110 08:33:22.196"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.148" endtime="20201110 08:33:22.198"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:22.214" endtime="20201110 08:33:22.559"></status>
</kw>
<msg timestamp="20201110 08:33:22.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03988125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039919042, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:33:22.211" endtime="20201110 08:33:22.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:22.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03988125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039919042, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:33:22.568" endtime="20201110 08:33:22.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:22.586" endtime="20201110 08:33:22.594"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.204" endtime="20201110 08:33:22.595"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.199" endtime="20201110 08:33:22.597"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:22.607" level="INFO">${RESULT} = [{'time': 0.039919042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.779200000000177e-05, 'source_diff': 3.779200000000177e-05}, {'time': 0.039962222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:22.598" endtime="20201110 08:33:22.608"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:22.638" level="INFO">${ACCURACY} = {'time': [0.039919042, 0.039962222, 0.040011222, 0.040058361, 0.040102389, 0.040147472, 0.0401955, 0.040239597, 0.04028375, 0.040332708, 0.040381819, 0.040429, 0.040476, 0.040519181, 0.040562222, 0.04...</msg>
<status status="PASS" starttime="20201110 08:33:22.609" endtime="20201110 08:33:22.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:22.648" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201110 08:33:22.646" endtime="20201110 08:33:22.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:22.654" level="INFO">VALUE: [3.779200000000177e-05, 3.7861000000000145e-05, 3.747199999999673e-05, 3.795799999999766e-05, 3.829200000000227e-05, 3.7790999999995356e-05, 3.72780000000017e-05, 3.7610999999999895e-05, 3.830600000000184e-05, 3.7805000000001865e-05, 3.763799999999956e-05, 3.826399999999619e-05, 3.8124999999999964e-05, 3.7652999999998604e-05, 3.7819000000001435e-05, 3.79859999999968e-05, 3.7638999999999034e-05, 3.780600000000134e-05, 3.8291000000002795e-05, 3.8304999999995426e-05, 3.829200000000227e-05, 3.797199999999723e-05, 3.752800000000195e-05, 3.74859999999963e-05, 3.7847000000000575e-05, 3.7610999999999895e-05, 3.8375000000000214e-05, 3.745900000000357e-05, 3.779200000000177e-05, 3.7624999999999464e-05, 3.777799999999526e-05, 3.747300000000314e-05, 3.797300000000364e-05, 3.768100000000468e-05, 3.7624999999999464e-05, 3.811199999999987e-05, 3.741700000000486e-05, 3.797199999999723e-05, 3.747200000000367e-05, 3.766700000000511e-05, 3.7958999999997134e-05, 3.830600000000184e-05, 3.7638999999999034e-05, 3.813800000000006e-05, 3.8166999999998674e-05, 3.730600000000084e-05, 3.782000000000091e-05, 3.7666999999998174e-05, 3.797199999999723e-05, 3.780600000000134e-05]</msg>
<status status="PASS" starttime="20201110 08:33:22.651" endtime="20201110 08:33:22.655"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.639" endtime="20201110 08:33:22.657"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:22.663" endtime="20201110 08:33:22.666"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:22.671" endtime="20201110 08:33:22.693"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.667" endtime="20201110 08:33:22.695"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.658" endtime="20201110 08:33:22.696"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.144" endtime="20201110 08:33:22.697"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.143" endtime="20201110 08:33:22.697"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:22.720" endtime="20201110 08:33:22.737"></status>
</kw>
<msg timestamp="20201110 08:33:22.738" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:22.716" endtime="20201110 08:33:22.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:22.744" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:22.740" endtime="20201110 08:33:22.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:22.746" endtime="20201110 08:33:22.750"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.709" endtime="20201110 08:33:22.752"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.704" endtime="20201110 08:33:22.753"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:22.769" endtime="20201110 08:33:23.115"></status>
</kw>
<msg timestamp="20201110 08:33:23.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040073125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040111431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:22.766" endtime="20201110 08:33:23.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:23.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040073125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040111431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:23.124" endtime="20201110 08:33:23.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:23.143" endtime="20201110 08:33:23.148"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.759" endtime="20201110 08:33:23.150"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.754" endtime="20201110 08:33:23.151"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:23.162" level="INFO">${RESULT} = [{'time': 0.040111431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.830600000000184e-05, 'source_diff': 3.830600000000184e-05}, {'time': 0.040154556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:23.153" endtime="20201110 08:33:23.162"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:23.192" level="INFO">${ACCURACY} = {'time': [0.040111431, 0.040154556, 0.040200611, 0.040248833, 0.040297944, 0.040345, 0.040390986, 0.040435097, 0.040481319, 0.040525319, 0.040570347, 0.040615472, 0.040659569, 0.04070775, 0.040750819,...</msg>
<status status="PASS" starttime="20201110 08:33:23.164" endtime="20201110 08:33:23.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:23.203" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201110 08:33:23.201" endtime="20201110 08:33:23.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:23.208" level="INFO">VALUE: [3.830600000000184e-05, 3.748700000000271e-05, 3.749999999999587e-05, 3.8318999999994996e-05, 3.7541000000002045e-05, 3.8138999999999534e-05, 3.7332999999993566e-05, 3.763900000000597e-05, 3.798600000000374e-05, 3.765199999999913e-05, 3.8124999999999964e-05, 3.8138999999999534e-05, 3.813800000000006e-05, 3.7819000000001435e-05, 3.76659999999987e-05, 3.799999999999637e-05, 3.783400000000048e-05, 3.780600000000134e-05, 3.815199999999963e-05, 3.7888999999999284e-05, 3.8332999999994566e-05, 3.813900000000647e-05, 3.749999999999587e-05, 3.7638999999999034e-05, 3.748600000000324e-05, 3.833400000000098e-05, 3.754200000000152e-05, 3.732000000000041e-05, 3.8152999999999104e-05, 3.823600000000399e-05, 3.7819000000001435e-05, 3.7624999999999464e-05, 3.7819000000001435e-05, 3.748600000000324e-05, 3.798700000000321e-05, 3.8152999999999104e-05, 3.8332999999994566e-05, 3.8166999999998674e-05, 3.7819000000001435e-05, 3.794399999999809e-05, 3.8138999999999534e-05, 3.748600000000324e-05, 3.830600000000184e-05, 3.769399999999784e-05, 3.797200000000417e-05, 3.797199999999723e-05, 3.79859999999968e-05, 3.813900000000647e-05, 3.8152999999999104e-05, 3.8319000000001935e-05]</msg>
<status status="PASS" starttime="20201110 08:33:23.205" endtime="20201110 08:33:23.210"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.194" endtime="20201110 08:33:23.211"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:23.218" endtime="20201110 08:33:23.220"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:23.226" endtime="20201110 08:33:23.248"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.222" endtime="20201110 08:33:23.249"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.213" endtime="20201110 08:33:23.251"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.699" endtime="20201110 08:33:23.251"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.698" endtime="20201110 08:33:23.252"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:23.274" endtime="20201110 08:33:23.292"></status>
</kw>
<msg timestamp="20201110 08:33:23.293" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:23.271" endtime="20201110 08:33:23.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:23.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:23.295" endtime="20201110 08:33:23.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:23.301" endtime="20201110 08:33:23.305"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.264" endtime="20201110 08:33:23.306"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.258" endtime="20201110 08:33:23.308"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:23.324" endtime="20201110 08:33:23.674"></status>
</kw>
<msg timestamp="20201110 08:33:23.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039946431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039991278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:23.321" endtime="20201110 08:33:23.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:23.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039946431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039991278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:23.687" endtime="20201110 08:33:23.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:23.709" endtime="20201110 08:33:23.715"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.314" endtime="20201110 08:33:23.716"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.309" endtime="20201110 08:33:23.718"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:23.728" level="INFO">${RESULT} = [{'time': 0.039991278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4847000000000636e-05, 'source_diff': 4.4847000000000636e-05}, {'time': 0.040043292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:23.719" endtime="20201110 08:33:23.729"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:23.760" level="INFO">${ACCURACY} = {'time': [0.039991278, 0.040043292, 0.040095458, 0.040147611, 0.040199736, 0.040250819, 0.040303903, 0.040357056, 0.040410194, 0.04046325, 0.040517292, 0.040571569, 0.040621514, 0.04067275, 0.04072677...</msg>
<status status="PASS" starttime="20201110 08:33:23.730" endtime="20201110 08:33:23.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:23.770" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201110 08:33:23.768" endtime="20201110 08:33:23.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:23.776" level="INFO">VALUE: [4.4847000000000636e-05, 4.502800000000251e-05, 4.4555000000001677e-05, 4.454200000000158e-05, 4.470799999999747e-05, 4.504100000000261e-05, 4.451400000000244e-05, 4.4723000000003454e-05, 4.469400000000484e-05, 4.5013999999996e-05, 4.4861000000000206e-05, 4.477700000000279e-05, 4.470799999999747e-05, 4.5083000000001316e-05, 4.522199999999754e-05, 4.455600000000115e-05, 4.477800000000226e-05, 4.490199999999944e-05, 4.4861000000000206e-05, 4.522200000000448e-05, 4.466599999999876e-05, 4.519400000000534e-05, 4.455499999999474e-05, 4.486199999999968e-05, 4.5208999999997446e-05, 4.520799999999797e-05, 4.520799999999797e-05, 4.4459000000003635e-05, 4.4874999999999776e-05, 4.520799999999797e-05, 4.520800000000491e-05, 4.448599999999636e-05, 4.4708999999996946e-05, 4.4694999999997376e-05, 4.526400000000319e-05, 4.504199999999514e-05, 4.4666999999998236e-05, 4.455600000000115e-05, 4.4861000000000206e-05, 4.522200000000448e-05, 4.454200000000158e-05, 4.4374999999999276e-05, 4.4555000000001677e-05, 4.4874999999999776e-05, 4.5388999999999846e-05, 4.5223000000003954e-05, 4.502799999999557e-05, 4.455600000000115e-05, 4.4861000000000206e-05, 4.451400000000244e-05]</msg>
<status status="PASS" starttime="20201110 08:33:23.773" endtime="20201110 08:33:23.781"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.761" endtime="20201110 08:33:23.783"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:23.790" endtime="20201110 08:33:23.792"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:23.798" endtime="20201110 08:33:23.819"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.793" endtime="20201110 08:33:23.821"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.785" endtime="20201110 08:33:23.823"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.254" endtime="20201110 08:33:23.823"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.253" endtime="20201110 08:33:23.824"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:23.846" endtime="20201110 08:33:23.865"></status>
</kw>
<msg timestamp="20201110 08:33:23.866" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:23.843" endtime="20201110 08:33:23.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:23.872" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:23.868" endtime="20201110 08:33:23.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:23.874" endtime="20201110 08:33:23.878"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.835" endtime="20201110 08:33:23.880"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.830" endtime="20201110 08:33:23.881"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:23.897" endtime="20201110 08:33:24.242"></status>
</kw>
<msg timestamp="20201110 08:33:24.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040028264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040076653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:23.894" endtime="20201110 08:33:24.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:24.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040028264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040076653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:24.254" endtime="20201110 08:33:24.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:24.272" endtime="20201110 08:33:24.278"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.887" endtime="20201110 08:33:24.279"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.882" endtime="20201110 08:33:24.281"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:24.291" level="INFO">${RESULT} = [{'time': 0.040076653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.838899999999591e-05, 'source_diff': 4.838899999999591e-05}, {'time': 0.040152764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:24.282" endtime="20201110 08:33:24.292"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:24.321" level="INFO">${ACCURACY} = {'time': [0.040076653, 0.040152764, 0.040231903, 0.04031, 0.040386139, 0.040467278, 0.040547389, 0.040624569, 0.040700667, 0.040779792, 0.040860931, 0.040940069, 0.041020194, 0.041100389, 0.041181472,...</msg>
<status status="PASS" starttime="20201110 08:33:24.293" endtime="20201110 08:33:24.322"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:24.332" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201110 08:33:24.330" endtime="20201110 08:33:24.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:24.338" level="INFO">VALUE: [4.838899999999591e-05, 4.831999999999753e-05, 4.823600000000011e-05, 4.823600000000011e-05, 4.834700000000414e-05, 4.875000000000018e-05, 4.8361000000003707e-05, 4.898600000000086e-05, 4.8653000000002666e-05, 4.848600000000036e-05, 4.8667000000002236e-05, 4.822200000000054e-05, 4.840200000000294e-05, 4.8625000000003527e-05, 4.886099999999727e-05, 4.826399999999925e-05, 4.830500000000543e-05, 4.876399999999975e-05, 4.834700000000414e-05, 4.833300000000457e-05, 4.9014e-05, 4.833300000000457e-05, 4.904199999999914e-05, 4.8403000000002416e-05, 4.870800000000147e-05, 4.81940000000014e-05, 4.8139000000002596e-05, 4.8889000000003346e-05, 4.8459000000000696e-05, 4.884700000000464e-05, 4.858400000000429e-05, 4.8667000000002236e-05, 4.815299999999523e-05, 4.811200000000293e-05, 4.8111000000003457e-05, 4.837499999999634e-05, 4.904100000000661e-05, 4.822200000000054e-05, 4.880499999999899e-05, 4.8139000000002596e-05, 4.8901999999996504e-05, 4.898600000000086e-05, 4.8903000000002916e-05, 4.8167000000001736e-05, 4.898600000000086e-05, 4.824999999999968e-05, 4.883299999999813e-05, 4.893099999999512e-05, 4.8903000000002916e-05, 4.904200000000608e-05]</msg>
<status status="PASS" starttime="20201110 08:33:24.334" endtime="20201110 08:33:24.339"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.323" endtime="20201110 08:33:24.341"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:24.347" endtime="20201110 08:33:24.350"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:24.356" endtime="20201110 08:33:24.377"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.351" endtime="20201110 08:33:24.379"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.343" endtime="20201110 08:33:24.381"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.826" endtime="20201110 08:33:24.381"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.824" endtime="20201110 08:33:24.382"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:24.404" endtime="20201110 08:33:24.423"></status>
</kw>
<msg timestamp="20201110 08:33:24.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:24.401" endtime="20201110 08:33:24.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:24.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:24.426" endtime="20201110 08:33:24.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:24.432" endtime="20201110 08:33:24.436"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.394" endtime="20201110 08:33:24.438"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.388" endtime="20201110 08:33:24.439"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:24.457" endtime="20201110 08:33:24.811"></status>
</kw>
<msg timestamp="20201110 08:33:24.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040011236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040060611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:24.453" endtime="20201110 08:33:24.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:24.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040011236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040060611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:24.821" endtime="20201110 08:33:24.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:24.839" endtime="20201110 08:33:24.846"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.445" endtime="20201110 08:33:24.848"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.440" endtime="20201110 08:33:24.850"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:24.860" level="INFO">${RESULT} = [{'time': 0.040060611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.9375000000004277e-05, 'source_diff': 4.9375000000004277e-05}, {'time': 0.040138764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:24.851" endtime="20201110 08:33:24.860"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:24.895" level="INFO">${ACCURACY} = {'time': [0.040060611, 0.040138764, 0.040220931, 0.040303097, 0.040383236, 0.040459417, 0.040538514, 0.040619694, 0.040700875, 0.040783028, 0.040860167, 0.040941306, 0.041022458, 0.041104625, 0.041183...</msg>
<status status="PASS" starttime="20201110 08:33:24.862" endtime="20201110 08:33:24.895"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:24.906" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201110 08:33:24.903" endtime="20201110 08:33:24.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:24.911" level="INFO">VALUE: [4.9375000000004277e-05, 4.909699999999795e-05, 4.9473000000001266e-05, 4.979100000000042e-05, 4.994400000000315e-05, 4.931999999999853e-05, 4.9457999999995284e-05, 5.004100000000067e-05, 4.977800000000032e-05, 5.002800000000057e-05, 4.9625000000004527e-05, 4.949999999999399e-05, 4.95270000000006e-05, 4.909699999999795e-05, 4.911099999999752e-05, 4.931999999999853e-05, 4.973600000000161e-05, 4.981899999999956e-05, 4.933299999999863e-05, 4.908299999999838e-05, 4.959699999999845e-05, 4.999999999999449e-05, 4.9959000000002196e-05, 4.908299999999838e-05, 5.005500000000024e-05, 4.9457999999995284e-05, 4.926400000000025e-05, 4.948600000000136e-05, 4.936200000000418e-05, 4.944400000000265e-05, 4.913899999999666e-05, 4.9125000000004027e-05, 4.994400000000315e-05, 4.908300000000532e-05, 4.945800000000222e-05, 5.004200000000014e-05, 4.925000000000068e-05, 4.945800000000222e-05, 5.002800000000057e-05, 4.98469999999987e-05, 4.987500000000478e-05, 4.975000000000118e-05, 4.9987000000001336e-05, 4.9625000000004527e-05, 4.9929999999996644e-05, 4.912499999999709e-05, 4.955499999999974e-05, 4.9679999999996394e-05, 4.915299999999623e-05, 4.931999999999853e-05]</msg>
<status status="PASS" starttime="20201110 08:33:24.908" endtime="20201110 08:33:24.912"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.897" endtime="20201110 08:33:24.914"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:24.920" endtime="20201110 08:33:24.923"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:24.928" endtime="20201110 08:33:24.950"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.924" endtime="20201110 08:33:24.952"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.916" endtime="20201110 08:33:24.953"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.384" endtime="20201110 08:33:24.954"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.382" endtime="20201110 08:33:24.954"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:24.977" endtime="20201110 08:33:24.996"></status>
</kw>
<msg timestamp="20201110 08:33:24.997" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:24.974" endtime="20201110 08:33:24.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:25.004" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:25.000" endtime="20201110 08:33:25.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:25.006" endtime="20201110 08:33:25.010"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.966" endtime="20201110 08:33:25.011"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.961" endtime="20201110 08:33:25.012"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:25.029" endtime="20201110 08:33:25.373"></status>
</kw>
<msg timestamp="20201110 08:33:25.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040320681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040371667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:25.026" endtime="20201110 08:33:25.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:25.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040320681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040371667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:25.383" endtime="20201110 08:33:25.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:25.401" endtime="20201110 08:33:25.407"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.018" endtime="20201110 08:33:25.408"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.014" endtime="20201110 08:33:25.410"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:25.420" level="INFO">${RESULT} = [{'time': 0.040371667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.098600000000286e-05, 'source_diff': 5.098600000000286e-05}, {'time': 0.040453833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:25.411" endtime="20201110 08:33:25.421"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:25.451" level="INFO">${ACCURACY} = {'time': [0.040371667, 0.040453833, 0.040535986, 0.040616139, 0.040698319, 0.040776472, 0.040859611, 0.040939764, 0.041021944, 0.041101083, 0.041184236, 0.041262389, 0.041344514, 0.041424681, 0.041505...</msg>
<status status="PASS" starttime="20201110 08:33:25.422" endtime="20201110 08:33:25.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:25.461" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201110 08:33:25.459" endtime="20201110 08:33:25.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:25.467" level="INFO">VALUE: [5.098600000000286e-05, 5.062499999999859e-05, 5.093000000000458e-05, 5.059699999999945e-05, 5.008299999999938e-05, 5.037499999999834e-05, 5.05419999999937e-05, 5.0485999999995423e-05, 5.029100000000092e-05, 5.0971999999996354e-05, 5.0679999999997394e-05, 5.018099999999637e-05, 5.029200000000039e-05, 5.094499999999669e-05, 5.015299999999723e-05, 5.1014000000002e-05, 5.080600000000046e-05, 5.098600000000286e-05, 5.08339999999996e-05, 5.079100000000142e-05, 5.0167000000003736e-05, 5.055600000000021e-05, 5.01669999999968e-05, 5.027800000000082e-05, 5.009699999999895e-05, 5.062499999999859e-05, 5.027799999999388e-05, 5.05140000000015e-05, 5.086099999999927e-05, 5.099999999999549e-05, 5.091699999999755e-05, 5.0417000000003986e-05, 5.027700000000135e-05, 5.008299999999938e-05, 5.025000000000168e-05, 5.0987000000002336e-05, 5.086099999999927e-05, 5.0653000000004667e-05, 5.095800000000372e-05, 5.020800000000297e-05, 5.0485999999995423e-05, 5.020899999999551e-05, 5.025000000000168e-05, 5.0457999999996284e-05, 5.077800000000132e-05, 5.061100000000596e-05, 5.0403000000004416e-05, 5.051399999999456e-05, 5.105500000000124e-05, 5.036100000000571e-05]</msg>
<status status="PASS" starttime="20201110 08:33:25.464" endtime="20201110 08:33:25.468"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.452" endtime="20201110 08:33:25.470"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:25.476" endtime="20201110 08:33:25.479"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:25.484" endtime="20201110 08:33:25.506"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.480" endtime="20201110 08:33:25.508"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.472" endtime="20201110 08:33:25.509"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.957" endtime="20201110 08:33:25.510"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.955" endtime="20201110 08:33:25.510"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:25.532" endtime="20201110 08:33:25.551"></status>
</kw>
<msg timestamp="20201110 08:33:25.553" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:25.529" endtime="20201110 08:33:25.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:25.559" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:25.555" endtime="20201110 08:33:25.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:25.562" endtime="20201110 08:33:25.565"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.522" endtime="20201110 08:33:25.567"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.516" endtime="20201110 08:33:25.568"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:25.585" endtime="20201110 08:33:25.929"></status>
</kw>
<msg timestamp="20201110 08:33:25.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039944389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039995625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:25.581" endtime="20201110 08:33:25.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:25.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039944389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039995625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:25.938" endtime="20201110 08:33:25.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:25.957" endtime="20201110 08:33:25.962"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.574" endtime="20201110 08:33:25.964"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.570" endtime="20201110 08:33:25.965"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:25.976" level="INFO">${RESULT} = [{'time': 0.039995625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.123600000000311e-05, 'source_diff': 5.123600000000311e-05}, {'time': 0.040074792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:25.967" endtime="20201110 08:33:25.976"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:26.006" level="INFO">${ACCURACY} = {'time': [0.039995625, 0.040074792, 0.040155931, 0.040238097, 0.040317264, 0.040395403, 0.040477556, 0.040559736, 0.040643889, 0.040723028, 0.040805181, 0.040887319, 0.040971556, 0.041056653, 0.041138...</msg>
<status status="PASS" starttime="20201110 08:33:25.978" endtime="20201110 08:33:26.007"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:26.017" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201110 08:33:26.015" endtime="20201110 08:33:26.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:26.023" level="INFO">VALUE: [5.123600000000311e-05, 5.137499999999934e-05, 5.165299999999873e-05, 5.1957999999997784e-05, 5.179200000000189e-05, 5.1181000000004306e-05, 5.165299999999873e-05, 5.1679999999998394e-05, 5.127800000000182e-05, 5.157000000000078e-05, 5.132000000000053e-05, 5.1151999999998754e-05, 5.16669999999983e-05, 5.194499999999769e-05, 5.205599999999477e-05, 5.109699999999995e-05, 5.154200000000164e-05, 5.177799999999538e-05, 5.108399999999985e-05, 5.129100000000192e-05, 5.1945000000004626e-05, 5.119499999999694e-05, 5.138899999999891e-05, 5.109699999999995e-05, 5.123600000000311e-05, 5.137499999999934e-05, 5.1485999999996424e-05, 5.1429999999998144e-05, 5.204200000000214e-05, 5.205500000000224e-05, 5.187499999999984e-05, 5.159700000000045e-05, 5.204200000000214e-05, 5.193000000000558e-05, 5.145800000000422e-05, 5.179100000000242e-05, 5.176399999999581e-05, 5.134799999999967e-05, 5.15270000000026e-05, 5.181899999999462e-05, 5.154200000000164e-05, 5.182000000000103e-05, 5.161100000000002e-05, 5.1221999999996604e-05, 5.129200000000139e-05, 5.118000000000483e-05, 5.118099999999737e-05, 5.197200000000429e-05, 5.177800000000232e-05, 5.127800000000182e-05]</msg>
<status status="PASS" starttime="20201110 08:33:26.020" endtime="20201110 08:33:26.024"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.008" endtime="20201110 08:33:26.026"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:26.032" endtime="20201110 08:33:26.035"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:26.040" endtime="20201110 08:33:26.062"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.036" endtime="20201110 08:33:26.064"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.028" endtime="20201110 08:33:26.065"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.512" endtime="20201110 08:33:26.066"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.511" endtime="20201110 08:33:26.066"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:26.089" endtime="20201110 08:33:26.106"></status>
</kw>
<msg timestamp="20201110 08:33:26.107" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:26.085" endtime="20201110 08:33:26.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:26.114" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:26.110" endtime="20201110 08:33:26.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:26.116" endtime="20201110 08:33:26.120"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.078" endtime="20201110 08:33:26.121"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.073" endtime="20201110 08:33:26.123"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:26.139" endtime="20201110 08:33:26.473"></status>
</kw>
<msg timestamp="20201110 08:33:26.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040137083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04019, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201110 08:33:26.135" endtime="20201110 08:33:26.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:26.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040137083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04019, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201110 08:33:26.483" endtime="20201110 08:33:26.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:26.501" endtime="20201110 08:33:26.507"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.128" endtime="20201110 08:33:26.508"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.124" endtime="20201110 08:33:26.510"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:26.520" level="INFO">${RESULT} = [{'time': 0.04019, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.291699999999955e-05, 'source_diff': 5.291699999999955e-05}, {'time': 0.040269153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5...</msg>
<status status="PASS" starttime="20201110 08:33:26.511" endtime="20201110 08:33:26.520"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:26.550" level="INFO">${ACCURACY} = {'time': [0.04019, 0.040269153, 0.040350319, 0.0404355, 0.040520667, 0.040602847, 0.040685, 0.040764167, 0.040846333, 0.040926486, 0.041006667, 0.041090819, 0.041174986, 0.041259139, 0.041338306, 0.04...</msg>
<status status="PASS" starttime="20201110 08:33:26.522" endtime="20201110 08:33:26.551"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:26.561" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201110 08:33:26.559" endtime="20201110 08:33:26.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:26.566" level="INFO">VALUE: [5.291699999999955e-05, 5.2209000000004446e-05, 5.279100000000342e-05, 5.2707999999998534e-05, 5.25140000000035e-05, 5.229099999999598e-05, 5.231900000000206e-05, 5.211099999999358e-05, 5.2721999999998104e-05, 5.2193999999998464e-05, 5.230599999999502e-05, 5.28470000000017e-05, 5.211099999999358e-05, 5.211100000000052e-05, 5.208400000000085e-05, 5.213899999999966e-05, 5.28470000000017e-05, 5.286200000000074e-05, 5.2679999999999394e-05, 5.288900000000041e-05, 5.233399999999416e-05, 5.236200000000024e-05, 5.2971999999998354e-05, 5.261100000000102e-05, 5.227800000000282e-05, 5.304100000000367e-05, 5.2971999999998354e-05, 5.269499999999844e-05, 5.248600000000436e-05, 5.284699999999476e-05, 5.2181000000005306e-05, 5.273600000000461e-05, 5.212500000000009e-05, 5.2916000000000074e-05, 5.273600000000461e-05, 5.236099999999383e-05, 5.302799999999663e-05, 5.223600000000411e-05, 5.258399999999441e-05, 5.2929999999999644e-05, 5.259699999999451e-05, 5.23749999999934e-05, 5.238899999999991e-05, 5.304200000000314e-05, 5.287500000000084e-05, 5.2445000000005126e-05, 5.273699999999715e-05, 5.2179999999998894e-05, 5.291699999999955e-05, 5.2235999999997174e-05]</msg>
<status status="PASS" starttime="20201110 08:33:26.563" endtime="20201110 08:33:26.568"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.552" endtime="20201110 08:33:26.570"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:26.576" endtime="20201110 08:33:26.578"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:26.584" endtime="20201110 08:33:26.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.580" endtime="20201110 08:33:26.607"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.571" endtime="20201110 08:33:26.609"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.068" endtime="20201110 08:33:26.609"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.067" endtime="20201110 08:33:26.610"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:26.632" endtime="20201110 08:33:26.650"></status>
</kw>
<msg timestamp="20201110 08:33:26.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:26.629" endtime="20201110 08:33:26.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:26.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:26.653" endtime="20201110 08:33:26.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:26.659" endtime="20201110 08:33:26.663"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.622" endtime="20201110 08:33:26.665"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.616" endtime="20201110 08:33:26.666"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:26.682" endtime="20201110 08:33:27.039"></status>
</kw>
<msg timestamp="20201110 08:33:27.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039826264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039879361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:26.679" endtime="20201110 08:33:27.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:27.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039826264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039879361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:27.052" endtime="20201110 08:33:27.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:27.073" endtime="20201110 08:33:27.081"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.672" endtime="20201110 08:33:27.084"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.667" endtime="20201110 08:33:27.086"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:27.098" level="INFO">${RESULT} = [{'time': 0.039879361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.309700000000195e-05, 'source_diff': 5.309700000000195e-05}, {'time': 0.039964514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:27.088" endtime="20201110 08:33:27.099"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:27.132" level="INFO">${ACCURACY} = {'time': [0.039879361, 0.039964514, 0.040046681, 0.040130819, 0.040216972, 0.040299167, 0.040384319, 0.0404675, 0.040554667, 0.040640861, 0.040726014, 0.040808167, 0.040893333, 0.0409785, 0.041063639,...</msg>
<status status="PASS" starttime="20201110 08:33:27.101" endtime="20201110 08:33:27.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:27.145" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201110 08:33:27.142" endtime="20201110 08:33:27.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:27.152" level="INFO">VALUE: [5.309700000000195e-05, 5.3513999999997564e-05, 5.387500000000184e-05, 5.3971999999999354e-05, 5.3777999999997383e-05, 5.347299999999833e-05, 5.358300000000288e-05, 5.361100000000202e-05, 5.405600000000371e-05, 5.386100000000227e-05, 5.361099999999508e-05, 5.394499999999969e-05, 5.33749999999944e-05, 5.3221999999998604e-05, 5.319499999999894e-05, 5.3179999999999894e-05, 5.3985999999998924e-05, 5.312500000000109e-05, 5.337500000000134e-05, 5.322200000000554e-05, 5.331900000000306e-05, 5.375000000000518e-05, 5.305600000000271e-05, 5.333300000000263e-05, 5.3457999999999284e-05, 5.313900000000066e-05, 5.340299999999354e-05, 5.391700000000055e-05, 5.3152000000000754e-05, 5.380499999999705e-05, 5.384699999999576e-05, 5.3443999999999714e-05, 5.377800000000432e-05, 5.359699999999551e-05, 5.330600000000296e-05, 5.3487000000004836e-05, 5.334800000000167e-05, 5.354099999999723e-05, 5.343099999999962e-05, 5.386100000000227e-05, 5.390300000000098e-05, 5.327800000000382e-05, 5.308300000000238e-05, 5.377800000000432e-05, 5.3137999999994245e-05, 5.3707999999999534e-05, 5.3777999999997383e-05, 5.3249999999997744e-05, 5.402699999999816e-05, 5.3471999999998854e-05]</msg>
<status status="PASS" starttime="20201110 08:33:27.148" endtime="20201110 08:33:27.154"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.134" endtime="20201110 08:33:27.156"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:27.164" endtime="20201110 08:33:27.168"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:27.175" endtime="20201110 08:33:27.203"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.170" endtime="20201110 08:33:27.205"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.159" endtime="20201110 08:33:27.206"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.612" endtime="20201110 08:33:27.207"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.611" endtime="20201110 08:33:27.208"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:27.232" endtime="20201110 08:33:27.252"></status>
</kw>
<msg timestamp="20201110 08:33:27.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:27.228" endtime="20201110 08:33:27.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:27.259" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:27.255" endtime="20201110 08:33:27.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:27.262" endtime="20201110 08:33:27.265"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.221" endtime="20201110 08:33:27.267"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.214" endtime="20201110 08:33:27.268"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:27.285" endtime="20201110 08:33:27.632"></status>
</kw>
<msg timestamp="20201110 08:33:27.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048181528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048236375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:27.282" endtime="20201110 08:33:27.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:27.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048181528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048236375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:27.642" endtime="20201110 08:33:27.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:27.661" endtime="20201110 08:33:27.667"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.275" endtime="20201110 08:33:27.668"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.270" endtime="20201110 08:33:27.670"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:27.681" level="INFO">${RESULT} = [{'time': 0.048236375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.484699999999676e-05, 'source_diff': 5.484699999999676e-05}, {'time': 0.048320542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:27.671" endtime="20201110 08:33:27.681"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:27.712" level="INFO">${ACCURACY} = {'time': [0.048236375, 0.048320542, 0.048405708, 0.048487875, 0.048569028, 0.048653194, 0.048740333, 0.048827486, 0.048912667, 0.048993903, 0.049077, 0.049160153, 0.049246333, 0.049329472, 0.049411625...</msg>
<status status="PASS" starttime="20201110 08:33:27.683" endtime="20201110 08:33:27.713"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:27.723" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201110 08:33:27.721" endtime="20201110 08:33:27.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:27.729" level="INFO">VALUE: [5.484699999999676e-05, 5.462500000000259e-05, 5.434699999999626e-05, 5.4722000000000104e-05, 5.412500000000209e-05, 5.4401999999995065e-05, 5.4457999999993345e-05, 5.487500000000284e-05, 5.494500000000069e-05, 5.4277999999997883e-05, 5.479200000000489e-05, 5.494500000000069e-05, 5.4402000000002004e-05, 5.4930000000001644e-05, 5.4749999999999244e-05, 5.409700000000295e-05, 5.461200000000249e-05, 5.48749999999959e-05, 5.43340000000031e-05, 5.4749999999999244e-05, 5.4693999999994025e-05, 5.458300000000388e-05, 5.409799999999548e-05, 5.4416000000001574e-05, 5.4708000000000534e-05, 5.463900000000216e-05, 5.459699999999651e-05, 5.4444000000000714e-05, 5.440299999999454e-05, 5.436099999999583e-05, 5.4958000000000784e-05, 5.48749999999959e-05, 5.408399999999591e-05, 5.4930000000001644e-05, 5.408299999999644e-05, 5.4179999999993955e-05, 5.4791999999997953e-05, 5.448600000000636e-05, 5.454099999999823e-05, 5.4471999999999854e-05, 5.4249999999998744e-05, 5.505599999999777e-05, 5.4541999999997703e-05, 5.440300000000148e-05, 5.411100000000252e-05, 5.4680000000001394e-05, 5.4499999999998994e-05, 5.4499999999998994e-05, 5.4943999999994275e-05, 5.4972000000000354e-05]</msg>
<status status="PASS" starttime="20201110 08:33:27.726" endtime="20201110 08:33:27.730"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.714" endtime="20201110 08:33:27.732"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:27.738" endtime="20201110 08:33:27.741"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:27.747" endtime="20201110 08:33:27.769"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.742" endtime="20201110 08:33:27.770"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.734" endtime="20201110 08:33:27.772"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.210" endtime="20201110 08:33:27.773"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.209" endtime="20201110 08:33:27.773"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:27.796" endtime="20201110 08:33:27.816"></status>
</kw>
<msg timestamp="20201110 08:33:27.817" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:27.793" endtime="20201110 08:33:27.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:27.823" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:27.819" endtime="20201110 08:33:27.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:27.826" endtime="20201110 08:33:27.830"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.785" endtime="20201110 08:33:27.831"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.779" endtime="20201110 08:33:27.833"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:27.850" endtime="20201110 08:33:28.195"></status>
</kw>
<msg timestamp="20201110 08:33:28.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040930417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040986389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:27.846" endtime="20201110 08:33:28.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:28.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040930417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040986389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:28.205" endtime="20201110 08:33:28.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:28.225" endtime="20201110 08:33:28.230"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.839" endtime="20201110 08:33:28.232"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.834" endtime="20201110 08:33:28.234"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:28.245" level="INFO">${RESULT} = [{'time': 0.040986389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5972000000001354e-05, 'source_diff': 5.5972000000001354e-05}, {'time': 0.041069556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:28.235" endtime="20201110 08:33:28.245"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:28.277" level="INFO">${ACCURACY} = {'time': [0.040986389, 0.041069556, 0.041152708, 0.041235875, 0.041323042, 0.041410208, 0.041496361, 0.041582542, 0.041667694, 0.041755903, 0.041843056, 0.041930236, 0.042015403, 0.042102569, 0.042186...</msg>
<status status="PASS" starttime="20201110 08:33:28.247" endtime="20201110 08:33:28.277"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:28.288" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201110 08:33:28.286" endtime="20201110 08:33:28.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:28.294" level="INFO">VALUE: [5.5972000000001354e-05, 5.534799999999673e-05, 5.5152000000002754e-05, 5.5791999999998954e-05, 5.531999999999759e-05, 5.5193999999994525e-05, 5.5222000000000604e-05, 5.569500000000144e-05, 5.558299999999794e-05, 5.5277999999998884e-05, 5.526400000000625e-05, 5.5236000000000174e-05, 5.595900000000126e-05, 5.5694000000001964e-05, 5.580499999999905e-05, 5.504200000000514e-05, 5.570900000000101e-05, 5.5750000000000244e-05, 5.520900000000051e-05, 5.5777999999999384e-05, 5.5777999999999384e-05, 5.529099999999898e-05, 5.586099999999733e-05, 5.5193999999994525e-05, 5.5527999999999134e-05, 5.51670000000018e-05, 5.5958000000001784e-05, 5.512499999999615e-05, 5.605600000000571e-05, 5.5887999999996996e-05, 5.530600000000496e-05, 5.536099999999683e-05, 5.559699999999751e-05, 5.5666000000002824e-05, 5.556900000000531e-05, 5.593100000000212e-05, 5.5249999999999744e-05, 5.5736000000000674e-05, 5.583399999999766e-05, 5.559699999999751e-05, 5.6055999999998773e-05, 5.584699999999776e-05, 5.513900000000266e-05, 5.5499999999999994e-05, 5.5777999999999384e-05, 5.5805999999998523e-05, 5.5736000000000674e-05, 5.533299999999769e-05, 5.537500000000334e-05, 5.583300000000513e-05]</msg>
<status status="PASS" starttime="20201110 08:33:28.291" endtime="20201110 08:33:28.295"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.279" endtime="20201110 08:33:28.297"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:28.304" endtime="20201110 08:33:28.306"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:28.312" endtime="20201110 08:33:28.334"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.308" endtime="20201110 08:33:28.336"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.299" endtime="20201110 08:33:28.337"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.775" endtime="20201110 08:33:28.338"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.774" endtime="20201110 08:33:28.338"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:28.361" endtime="20201110 08:33:28.381"></status>
</kw>
<msg timestamp="20201110 08:33:28.383" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:28.358" endtime="20201110 08:33:28.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:28.389" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:28.385" endtime="20201110 08:33:28.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:28.391" endtime="20201110 08:33:28.395"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.351" endtime="20201110 08:33:28.397"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.345" endtime="20201110 08:33:28.398"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:28.415" endtime="20201110 08:33:28.760"></status>
</kw>
<msg timestamp="20201110 08:33:28.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041124292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041181181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:28.412" endtime="20201110 08:33:28.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:28.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041124292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041181181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:28.770" endtime="20201110 08:33:28.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:28.789" endtime="20201110 08:33:28.794"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.404" endtime="20201110 08:33:28.796"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.400" endtime="20201110 08:33:28.797"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:28.808" level="INFO">${RESULT} = [{'time': 0.041181181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.688899999999747e-05, 'source_diff': 5.688899999999747e-05}, {'time': 0.041267417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:28.799" endtime="20201110 08:33:28.808"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:28.840" level="INFO">${ACCURACY} = {'time': [0.041181181, 0.041267417, 0.041354514, 0.041443694, 0.041528847, 0.041618028, 0.041705194, 0.041794389, 0.041878556, 0.041968722, 0.042052903, 0.042141069, 0.042227278, 0.042316444, 0.042400...</msg>
<status status="PASS" starttime="20201110 08:33:28.810" endtime="20201110 08:33:28.840"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:28.851" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201110 08:33:28.849" endtime="20201110 08:33:28.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:28.856" level="INFO">VALUE: [5.688899999999747e-05, 5.68749999999979e-05, 5.63470000000052e-05, 5.6722000000002104e-05, 5.6416000000003574e-05, 5.6264000000000314e-05, 5.6222000000001604e-05, 5.7014000000001064e-05, 5.633399999999816e-05, 5.683299999999919e-05, 5.640300000000348e-05, 5.6388000000004435e-05, 5.7028000000000634e-05, 5.6222000000001604e-05, 5.6778000000000384e-05, 5.708299999999944e-05, 5.6819999999999093e-05, 5.630499999999955e-05, 5.658300000000588e-05, 5.6541999999999704e-05, 5.7000000000001494e-05, 5.6972000000002354e-05, 5.616699999999586e-05, 5.60549999999993e-05, 5.7014000000001064e-05, 5.638899999999697e-05, 5.7014000000001064e-05, 5.609699999999801e-05, 5.686100000000527e-05, 5.613900000000366e-05, 5.6472000000001854e-05, 5.702699999999422e-05, 5.616699999999586e-05, 5.641699999999611e-05, 5.6750000000001244e-05, 5.6986000000001924e-05, 5.6305999999999023e-05, 5.6319999999998593e-05, 5.609699999999801e-05, 5.6180000000002894e-05, 5.6569999999998843e-05, 5.620900000000151e-05, 5.687500000000484e-05, 5.63749999999974e-05, 5.690300000000398e-05, 5.631899999999912e-05, 5.6443999999995775e-05, 5.6736000000001674e-05, 5.662499999999765e-05, 5.680500000000005e-05]</msg>
<status status="PASS" starttime="20201110 08:33:28.853" endtime="20201110 08:33:28.863"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.842" endtime="20201110 08:33:28.865"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:28.871" endtime="20201110 08:33:28.874"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:28.881" endtime="20201110 08:33:28.904"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.875" endtime="20201110 08:33:28.906"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.867" endtime="20201110 08:33:28.907"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.341" endtime="20201110 08:33:28.908"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.339" endtime="20201110 08:33:28.908"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:28.931" endtime="20201110 08:33:28.952"></status>
</kw>
<msg timestamp="20201110 08:33:28.953" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:28.928" endtime="20201110 08:33:28.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:28.959" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:28.955" endtime="20201110 08:33:28.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:28.961" endtime="20201110 08:33:28.965"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.921" endtime="20201110 08:33:28.967"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.915" endtime="20201110 08:33:28.968"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:28.985" endtime="20201110 08:33:29.334"></status>
</kw>
<msg timestamp="20201110 08:33:29.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041554403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041612236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:28.982" endtime="20201110 08:33:29.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:29.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041554403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041612236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:29.343" endtime="20201110 08:33:29.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:29.362" endtime="20201110 08:33:29.370"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.975" endtime="20201110 08:33:29.371"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.970" endtime="20201110 08:33:29.373"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:29.384" level="INFO">${RESULT} = [{'time': 0.041612236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.783300000000019e-05, 'source_diff': 5.783300000000019e-05}, {'time': 0.041699431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:29.375" endtime="20201110 08:33:29.384"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:29.415" level="INFO">${ACCURACY} = {'time': [0.041612236, 0.041699431, 0.041784569, 0.041871764, 0.041959931, 0.042047139, 0.042138306, 0.0422285, 0.042316681, 0.042402847, 0.042489028, 0.042576208, 0.042663375, 0.042752556, 0.04283873...</msg>
<status status="PASS" starttime="20201110 08:33:29.386" endtime="20201110 08:33:29.416"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:29.426" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201110 08:33:29.424" endtime="20201110 08:33:29.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:29.432" level="INFO">VALUE: [5.783300000000019e-05, 5.736200000000524e-05, 5.729100000000098e-05, 5.7514000000001564e-05, 5.713899999999772e-05, 5.793099999999718e-05, 5.784799999999923e-05, 5.736099999999883e-05, 5.747300000000233e-05, 5.7222000000002604e-05, 5.768099999999693e-05, 5.7513999999994625e-05, 5.7278000000000884e-05, 5.7820000000000094e-05, 5.7986000000002924e-05, 5.741699999999711e-05, 5.779100000000148e-05, 5.718099999999643e-05, 5.7514000000001564e-05, 5.756900000000037e-05, 5.7820000000000094e-05, 5.715299999999729e-05, 5.7250000000001744e-05, 5.715299999999729e-05, 5.8028000000001634e-05, 5.713899999999772e-05, 5.71670000000038e-05, 5.78749999999989e-05, 5.7194999999996e-05, 5.7778000000001384e-05, 5.7958000000003784e-05, 5.7820000000000094e-05, 5.754099999999429e-05, 5.733299999999969e-05, 5.709699999999901e-05, 5.8042000000001204e-05, 5.766699999999736e-05, 5.8056000000000774e-05, 5.734699999999926e-05, 5.736099999999883e-05, 5.720900000000251e-05, 5.756899999999343e-05, 5.7222000000002604e-05, 5.772300000000258e-05, 5.8028000000001634e-05, 5.790299999999804e-05, 5.734800000000567e-05, 5.7207999999996095e-05, 5.8028000000001634e-05, 5.772300000000258e-05]</msg>
<status status="PASS" starttime="20201110 08:33:29.428" endtime="20201110 08:33:29.433"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.417" endtime="20201110 08:33:29.435"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:29.441" endtime="20201110 08:33:29.444"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:29.450" endtime="20201110 08:33:29.472"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.445" endtime="20201110 08:33:29.473"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.437" endtime="20201110 08:33:29.475"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.910" endtime="20201110 08:33:29.476"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.909" endtime="20201110 08:33:29.476"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:29.499" endtime="20201110 08:33:29.519"></status>
</kw>
<msg timestamp="20201110 08:33:29.520" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:29.495" endtime="20201110 08:33:29.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:29.527" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:29.523" endtime="20201110 08:33:29.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:29.529" endtime="20201110 08:33:29.533"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.488" endtime="20201110 08:33:29.534"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.482" endtime="20201110 08:33:29.536"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:29.552" endtime="20201110 08:33:29.900"></status>
</kw>
<msg timestamp="20201110 08:33:29.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040860097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040918708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:29.549" endtime="20201110 08:33:29.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:29.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040860097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040918708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:29.910" endtime="20201110 08:33:29.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:29.929" endtime="20201110 08:33:29.935"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.542" endtime="20201110 08:33:29.937"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.537" endtime="20201110 08:33:29.938"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:29.949" level="INFO">${RESULT} = [{'time': 0.040918708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.861100000000008e-05, 'source_diff': 5.861100000000008e-05}, {'time': 0.041007847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:29.940" endtime="20201110 08:33:29.949"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:29.980" level="INFO">${ACCURACY} = {'time': [0.040918708, 0.041007847, 0.041095028, 0.041182208, 0.041272361, 0.041360556, 0.041451708, 0.041537889, 0.041624014, 0.041711153, 0.041798333, 0.041884486, 0.041976653, 0.042067833, 0.042155...</msg>
<status status="PASS" starttime="20201110 08:33:29.951" endtime="20201110 08:33:29.981"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:29.991" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201110 08:33:29.989" endtime="20201110 08:33:29.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:29.997" level="INFO">VALUE: [5.861100000000008e-05, 5.8415999999998636e-05, 5.8584000000000414e-05, 5.8707999999997595e-05, 5.830500000000155e-05, 5.811199999999905e-05, 5.8457999999997345e-05, 5.8320000000000594e-05, 5.834700000000026e-05, 5.811099999999958e-05, 5.863899999999922e-05, 5.866699999999836e-05, 5.894500000000469e-05, 5.8651999999999316e-05, 5.883299999999425e-05, 5.8915999999999136e-05, 5.8165999999998386e-05, 5.837500000000634e-05, 5.881900000000162e-05, 5.8485999999996485e-05, 5.838899999999897e-05, 5.818099999999743e-05, 5.8235999999996235e-05, 5.83749999999994e-05, 5.891699999999861e-05, 5.866699999999836e-05, 5.886100000000033e-05, 5.8194999999997e-05, 5.845900000000376e-05, 5.856900000000137e-05, 5.866699999999836e-05, 5.866699999999836e-05, 5.8070000000000344e-05, 5.8193999999997525e-05, 5.8820000000001094e-05, 5.8097999999999483e-05, 5.8651999999999316e-05, 5.891699999999861e-05, 5.890299999999904e-05, 5.820899999999657e-05, 5.877700000000291e-05, 5.8929999999998706e-05, 5.8264000000002314e-05, 5.8500000000002994e-05, 5.8834000000000664e-05, 5.858300000000094e-05, 5.8820000000001094e-05, 5.9014000000003064e-05, 5.8236000000003174e-05, 5.8791999999995015e-05]</msg>
<status status="PASS" starttime="20201110 08:33:29.994" endtime="20201110 08:33:29.998"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.982" endtime="20201110 08:33:30.000"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:30.007" endtime="20201110 08:33:30.010"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:30.015" endtime="20201110 08:33:30.037"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.011" endtime="20201110 08:33:30.039"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.002" endtime="20201110 08:33:30.040"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.478" endtime="20201110 08:33:30.041"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.477" endtime="20201110 08:33:30.041"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:30.064" endtime="20201110 08:33:30.084"></status>
</kw>
<msg timestamp="20201110 08:33:30.086" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:30.061" endtime="20201110 08:33:30.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:30.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:30.088" endtime="20201110 08:33:30.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:30.094" endtime="20201110 08:33:30.098"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.054" endtime="20201110 08:33:30.100"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.048" endtime="20201110 08:33:30.101"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:30.118" endtime="20201110 08:33:30.465"></status>
</kw>
<msg timestamp="20201110 08:33:30.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040861569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040920667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:30.115" endtime="20201110 08:33:30.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:30.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040861569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040920667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:30.475" endtime="20201110 08:33:30.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:30.494" endtime="20201110 08:33:30.500"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.107" endtime="20201110 08:33:30.502"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.103" endtime="20201110 08:33:30.503"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:30.514" level="INFO">${RESULT} = [{'time': 0.040920667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9098000000000483e-05, 'source_diff': 5.9098000000000483e-05}, {'time': 0.041012875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:30.505" endtime="20201110 08:33:30.514"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:30.545" level="INFO">${ACCURACY} = {'time': [0.040920667, 0.041012875, 0.041102139, 0.04118925, 0.041280444, 0.041372625, 0.041460819, 0.041548014, 0.041640194, 0.041733389, 0.041821611, 0.041913778, 0.041999944, 0.042089111, 0.0421783...</msg>
<status status="PASS" starttime="20201110 08:33:30.516" endtime="20201110 08:33:30.545"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:30.556" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201110 08:33:30.554" endtime="20201110 08:33:30.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:30.562" level="INFO">VALUE: [5.9098000000000483e-05, 5.9749999999997305e-05, 5.936100000000083e-05, 5.987499999999396e-05, 5.952699999999672e-05, 5.9278000000002884e-05, 5.95550000000028e-05, 5.962500000000065e-05, 5.9165999999999386e-05, 5.9972000000005354e-05, 5.956900000000237e-05, 5.9221999999997665e-05, 5.936100000000083e-05, 5.9429999999999206e-05, 5.9902000000000566e-05, 5.9500000000003994e-05, 5.9250000000003744e-05, 5.9249999999996805e-05, 5.961100000000108e-05, 5.9291999999995515e-05, 6.002700000000416e-05, 5.9194999999998e-05, 5.9763999999996875e-05, 6.006900000000287e-05, 5.9264000000003314e-05, 5.9958000000005784e-05, 5.9820000000002094e-05, 6.0042000000003204e-05, 6.0013999999997125e-05, 5.991700000000655e-05, 5.979100000000348e-05, 5.920899999999757e-05, 5.963900000000022e-05, 5.9888000000000996e-05, 5.915299999999929e-05, 5.943099999999868e-05, 5.9735999999997735e-05, 5.9429999999999206e-05, 5.9834000000001664e-05, 5.988900000000047e-05, 5.98750000000009e-05, 5.913899999999972e-05, 6.005499999999636e-05, 5.988900000000047e-05, 5.962500000000065e-05, 6.009699999999507e-05, 5.9221999999997665e-05, 5.916699999999886e-05, 6.012500000000115e-05, 5.991699999999961e-05]</msg>
<status status="PASS" starttime="20201110 08:33:30.558" endtime="20201110 08:33:30.563"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.547" endtime="20201110 08:33:30.565"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:30.571" endtime="20201110 08:33:30.574"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:30.580" endtime="20201110 08:33:30.602"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.575" endtime="20201110 08:33:30.603"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.567" endtime="20201110 08:33:30.605"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.043" endtime="20201110 08:33:30.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.042" endtime="20201110 08:33:30.606"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:30.629" endtime="20201110 08:33:30.649"></status>
</kw>
<msg timestamp="20201110 08:33:30.650" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:30.625" endtime="20201110 08:33:30.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:30.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:30.653" endtime="20201110 08:33:30.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:30.659" endtime="20201110 08:33:30.663"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.618" endtime="20201110 08:33:30.665"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.612" endtime="20201110 08:33:30.666"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:30.683" endtime="20201110 08:33:31.038"></status>
</kw>
<msg timestamp="20201110 08:33:31.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040958764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041019458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:30.679" endtime="20201110 08:33:31.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:31.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040958764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041019458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:31.047" endtime="20201110 08:33:31.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:31.066" endtime="20201110 08:33:31.071"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.672" endtime="20201110 08:33:31.072"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.667" endtime="20201110 08:33:31.074"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:31.084" level="INFO">${RESULT} = [{'time': 0.041019458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0694000000000026e-05, 'source_diff': 6.0694000000000026e-05}, {'time': 0.041112653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:31.075" endtime="20201110 08:33:31.085"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:31.115" level="INFO">${ACCURACY} = {'time': [0.041019458, 0.041112653, 0.041201847, 0.041289014, 0.041380222, 0.041473403, 0.041561625, 0.041653792, 0.041748, 0.041838208, 0.041929389, 0.042019556, 0.042110722, 0.042202931, 0.042292139...</msg>
<status status="PASS" starttime="20201110 08:33:31.086" endtime="20201110 08:33:31.115"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:31.125" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201110 08:33:31.123" endtime="20201110 08:33:31.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:31.131" level="INFO">VALUE: [6.0694000000000026e-05, 6.090300000000104e-05, 6.0471999999998916e-05, 6.012500000000115e-05, 6.104099999999779e-05, 6.090300000000104e-05, 6.041700000000011e-05, 6.0098000000001484e-05, 6.088900000000147e-05, 6.0166000000000386e-05, 6.016699999999986e-05, 6.0749999999998305e-05, 6.013900000000072e-05, 6.0527999999997195e-05, 6.0249999999997805e-05, 6.109799999999554e-05, 6.10550000000043e-05, 6.031899999999618e-05, 6.012499999999421e-05, 6.043099999999968e-05, 6.0777999999997445e-05, 6.0778000000004384e-05, 6.093100000000018e-05, 6.1013999999998125e-05, 6.009699999999507e-05, 6.0749999999998305e-05, 6.0721999999999166e-05, 6.0971999999999416e-05, 6.0499999999998055e-05, 6.0485999999998485e-05, 6.059699999999557e-05, 6.011099999999464e-05, 6.0680000000000456e-05, 6.0514000000004564e-05, 6.045900000000576e-05, 6.0944000000000276e-05, 6.0291999999996515e-05, 6.0848000000002234e-05, 6.0166000000000386e-05, 6.030500000000355e-05, 6.0527999999997195e-05, 6.090199999999463e-05, 6.0485999999998485e-05, 6.038900000000097e-05, 6.08750000000019e-05, 6.066700000000036e-05, 6.063900000000122e-05, 6.08750000000019e-05, 6.0291999999996515e-05, 6.020899999999857e-05]</msg>
<status status="PASS" starttime="20201110 08:33:31.128" endtime="20201110 08:33:31.132"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.116" endtime="20201110 08:33:31.134"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:31.140" endtime="20201110 08:33:31.143"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:31.148" endtime="20201110 08:33:31.170"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.144" endtime="20201110 08:33:31.172"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.136" endtime="20201110 08:33:31.173"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.608" endtime="20201110 08:33:31.174"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.607" endtime="20201110 08:33:31.174"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:31.196" endtime="20201110 08:33:31.216"></status>
</kw>
<msg timestamp="20201110 08:33:31.217" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:31.193" endtime="20201110 08:33:31.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:31.223" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:31.220" endtime="20201110 08:33:31.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:31.226" endtime="20201110 08:33:31.229"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.186" endtime="20201110 08:33:31.231"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.181" endtime="20201110 08:33:31.232"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:31.248" endtime="20201110 08:33:31.594"></status>
</kw>
<msg timestamp="20201110 08:33:31.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039921542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039982819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:31.245" endtime="20201110 08:33:31.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:31.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039921542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039982819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:31.603" endtime="20201110 08:33:31.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:31.622" endtime="20201110 08:33:31.629"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.238" endtime="20201110 08:33:31.631"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.234" endtime="20201110 08:33:31.632"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:31.642" level="INFO">${RESULT} = [{'time': 0.039982819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.127700000000541e-05, 'source_diff': 6.127700000000541e-05}, {'time': 0.040072014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:31.634" endtime="20201110 08:33:31.643"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:31.748" level="INFO">${ACCURACY} = {'time': [0.039982819, 0.040072014, 0.040162181, 0.040252361, 0.040344569, 0.04043575, 0.040527958, 0.040623181, 0.040712375, 0.040806556, 0.040896764, 0.040986931, 0.041077139, 0.041166333, 0.0412555...</msg>
<status status="PASS" starttime="20201110 08:33:31.645" endtime="20201110 08:33:31.749"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:31.759" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201110 08:33:31.757" endtime="20201110 08:33:31.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:31.764" level="INFO">VALUE: [6.127700000000541e-05, 6.18200000000041e-05, 6.17499999999993e-05, 6.195800000000085e-05, 6.156899999999743e-05, 6.161099999999614e-05, 6.15550000000048e-05, 6.208400000000391e-05, 6.172200000000017e-05, 6.173699999999921e-05, 6.209700000000401e-05, 6.112499999999521e-05, 6.143100000000068e-05, 6.138900000000197e-05, 6.205599999999784e-05, 6.166600000000189e-05, 6.20829999999975e-05, 6.141600000000164e-05, 6.126400000000531e-05, 6.12080000000001e-05, 6.18200000000041e-05, 6.180499999999811e-05, 6.208399999999697e-05, 6.172200000000017e-05, 6.12080000000001e-05, 6.138900000000197e-05, 6.161100000000308e-05, 6.207000000000434e-05, 6.159700000000351e-05, 6.206900000000487e-05, 6.118100000000043e-05, 6.1195e-05, 6.123599999999924e-05, 6.141699999999417e-05, 6.19300000000017e-05, 6.177799999999845e-05, 6.177699999999897e-05, 6.138899999999503e-05, 6.208300000000444e-05, 6.136100000000283e-05, 6.187499999999596e-05, 6.105499999999736e-05, 6.14029999999946e-05, 6.183299999999725e-05, 6.122299999999914e-05, 6.136100000000283e-05, 6.208399999999697e-05, 6.147199999999992e-05, 6.145899999999982e-05, 6.208300000000444e-05]</msg>
<status status="PASS" starttime="20201110 08:33:31.761" endtime="20201110 08:33:31.766"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.750" endtime="20201110 08:33:31.767"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:31.774" endtime="20201110 08:33:31.776"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:31.782" endtime="20201110 08:33:31.804"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.777" endtime="20201110 08:33:31.805"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.769" endtime="20201110 08:33:31.807"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.176" endtime="20201110 08:33:31.807"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.175" endtime="20201110 08:33:31.808"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:31.831" endtime="20201110 08:33:31.851"></status>
</kw>
<msg timestamp="20201110 08:33:31.852" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:31.827" endtime="20201110 08:33:31.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:31.858" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:31.854" endtime="20201110 08:33:31.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:31.860" endtime="20201110 08:33:31.864"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.820" endtime="20201110 08:33:31.866"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.814" endtime="20201110 08:33:31.867"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:31.883" endtime="20201110 08:33:32.230"></status>
</kw>
<msg timestamp="20201110 08:33:32.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041208611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041270972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:31.880" endtime="20201110 08:33:32.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:32.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041208611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041270972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:32.240" endtime="20201110 08:33:32.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:32.258" endtime="20201110 08:33:32.262"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.873" endtime="20201110 08:33:32.263"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.868" endtime="20201110 08:33:32.265"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:32.275" level="INFO">${RESULT} = [{'time': 0.041270972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.236100000000383e-05, 'source_diff': 6.236100000000383e-05}, {'time': 0.041362153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:32.266" endtime="20201110 08:33:32.276"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:32.305" level="INFO">${ACCURACY} = {'time': [0.041270972, 0.041362153, 0.041454347, 0.041544514, 0.041637736, 0.041729931, 0.041824153, 0.041917361, 0.042009569, 0.042103778, 0.042196972, 0.042292153, 0.042381347, 0.042476556, 0.042567...</msg>
<status status="PASS" starttime="20201110 08:33:32.277" endtime="20201110 08:33:32.306"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:32.316" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201110 08:33:32.314" endtime="20201110 08:33:32.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:32.321" level="INFO">VALUE: [6.236100000000383e-05, 6.276399999999988e-05, 6.227800000000588e-05, 6.251399999999963e-05, 6.258300000000494e-05, 6.23479999999968e-05, 6.244500000000125e-05, 6.309699999999807e-05, 6.283299999999825e-05, 6.30699999999984e-05, 6.30279999999997e-05, 6.226399999999938e-05, 6.219400000000153e-05, 6.243100000000168e-05, 6.30829999999985e-05, 6.22499999999998e-05, 6.272200000000117e-05, 6.237499999999646e-05, 6.295900000000132e-05, 6.261099999999714e-05, 6.220899999999363e-05, 6.298600000000099e-05, 6.23750000000034e-05, 6.279199999999902e-05, 6.223699999999971e-05, 6.298600000000099e-05, 6.252699999999972e-05, 6.300000000000056e-05, 6.28479999999973e-05, 6.284699999999782e-05, 6.291699999999567e-05, 6.273600000000074e-05, 6.266700000000236e-05, 6.311099999999764e-05, 6.305599999999884e-05, 6.286100000000433e-05, 6.237499999999646e-05, 6.300000000000056e-05, 6.245800000000135e-05, 6.215199999999588e-05, 6.212500000000315e-05, 6.283299999999825e-05, 6.23479999999968e-05, 6.244500000000125e-05, 6.30829999999985e-05, 6.25279999999992e-05, 6.223600000000024e-05, 6.269400000000203e-05, 6.27359999999938e-05, 6.238899999999603e-05]</msg>
<status status="PASS" starttime="20201110 08:33:32.318" endtime="20201110 08:33:32.323"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.307" endtime="20201110 08:33:32.325"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:32.331" endtime="20201110 08:33:32.333"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:32.339" endtime="20201110 08:33:32.361"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.335" endtime="20201110 08:33:32.363"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.326" endtime="20201110 08:33:32.364"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.810" endtime="20201110 08:33:32.365"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.809" endtime="20201110 08:33:32.365"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:32.389" endtime="20201110 08:33:32.410"></status>
</kw>
<msg timestamp="20201110 08:33:32.411" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:32.385" endtime="20201110 08:33:32.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:32.417" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:32.413" endtime="20201110 08:33:32.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:32.420" endtime="20201110 08:33:32.423"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.378" endtime="20201110 08:33:32.425"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.372" endtime="20201110 08:33:32.426"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:32.443" endtime="20201110 08:33:32.794"></status>
</kw>
<msg timestamp="20201110 08:33:32.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043208931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043272125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:32.439" endtime="20201110 08:33:32.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:32.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043208931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043272125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:32.804" endtime="20201110 08:33:32.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:32.823" endtime="20201110 08:33:32.826"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.432" endtime="20201110 08:33:32.828"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.428" endtime="20201110 08:33:32.829"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:32.840" level="INFO">${RESULT} = [{'time': 0.043272125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.319400000000253e-05, 'source_diff': 6.319400000000253e-05}, {'time': 0.043363319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:32.831" endtime="20201110 08:33:32.840"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:32.870" level="INFO">${ACCURACY} = {'time': [0.043272125, 0.043363319, 0.043460528, 0.043551722, 0.043644889, 0.043740111, 0.043831264, 0.043925431, 0.044018597, 0.044115819, 0.044207, 0.044304181, 0.044399431, 0.044494583, 0.04459175,...</msg>
<status status="PASS" starttime="20201110 08:33:32.842" endtime="20201110 08:33:32.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:32.881" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201110 08:33:32.879" endtime="20201110 08:33:32.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:32.886" level="INFO">VALUE: [6.319400000000253e-05, 6.337499999999746e-05, 6.397199999999548e-05, 6.369400000000303e-05, 6.368099999999599e-05, 6.313899999999678e-05, 6.318100000000243e-05, 6.329199999999952e-05, 6.39159999999972e-05, 6.390199999999763e-05, 6.340300000000354e-05, 6.38479999999983e-05, 6.380600000000652e-05, 6.344399999999584e-05, 6.376400000000088e-05, 6.348600000000149e-05, 6.379200000000002e-05, 6.355499999999986e-05, 6.395799999999591e-05, 6.311099999999764e-05, 6.351300000000115e-05, 6.401400000000113e-05, 6.409699999999907e-05, 6.318100000000243e-05, 6.359699999999857e-05, 6.30699999999984e-05, 6.405500000000036e-05, 6.394399999999634e-05, 6.329199999999952e-05, 6.333300000000569e-05, 6.359799999999804e-05, 6.40280000000007e-05, 6.345900000000182e-05, 6.372200000000217e-05, 6.373600000000174e-05, 6.381899999999968e-05, 6.35699999999989e-05, 6.322300000000114e-05, 6.386099999999839e-05, 6.394499999999581e-05, 6.319400000000253e-05, 6.354100000000029e-05, 6.313899999999678e-05, 6.333299999999875e-05, 6.330499999999961e-05, 6.345800000000235e-05, 6.376399999999394e-05, 6.323600000000124e-05, 6.317999999999602e-05, 6.398600000000199e-05]</msg>
<status status="PASS" starttime="20201110 08:33:32.883" endtime="20201110 08:33:32.888"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.872" endtime="20201110 08:33:32.890"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:32.896" endtime="20201110 08:33:32.898"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:32.904" endtime="20201110 08:33:32.926"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.900" endtime="20201110 08:33:32.927"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.891" endtime="20201110 08:33:32.929"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.367" endtime="20201110 08:33:32.929"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.366" endtime="20201110 08:33:32.930"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:32.952" endtime="20201110 08:33:32.972"></status>
</kw>
<msg timestamp="20201110 08:33:32.973" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:32.949" endtime="20201110 08:33:32.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:32.979" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:32.975" endtime="20201110 08:33:32.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:32.981" endtime="20201110 08:33:32.985"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.942" endtime="20201110 08:33:32.986"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.936" endtime="20201110 08:33:32.988"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:33.006" endtime="20201110 08:33:33.350"></status>
</kw>
<msg timestamp="20201110 08:33:33.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039990333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040054486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:33.003" endtime="20201110 08:33:33.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:33.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039990333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040054486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:33.359" endtime="20201110 08:33:33.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:33.378" endtime="20201110 08:33:33.382"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.994" endtime="20201110 08:33:33.383"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.989" endtime="20201110 08:33:33.385"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:33.395" level="INFO">${RESULT} = [{'time': 0.040054486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.415299999999735e-05, 'source_diff': 6.415299999999735e-05}, {'time': 0.040147653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:33.386" endtime="20201110 08:33:33.396"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:33.426" level="INFO">${ACCURACY} = {'time': [0.040054486, 0.040147653, 0.040241833, 0.040336042, 0.040430236, 0.040522361, 0.040619542, 0.040713736, 0.040806889, 0.040902083, 0.040997236, 0.041090486, 0.041182583, 0.041279764, 0.041377...</msg>
<status status="PASS" starttime="20201110 08:33:33.397" endtime="20201110 08:33:33.427"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:33.437" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201110 08:33:33.435" endtime="20201110 08:33:33.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:33.443" level="INFO">VALUE: [6.415299999999735e-05, 6.441699999999717e-05, 6.413899999999778e-05, 6.454200000000077e-05, 6.44300000000042e-05, 6.454200000000077e-05, 6.488899999999853e-05, 6.473600000000274e-05, 6.488899999999853e-05, 6.412499999999821e-05, 6.497199999999648e-05, 6.511099999999964e-05, 6.480500000000111e-05, 6.466699999999742e-05, 6.50830000000005e-05, 6.511099999999964e-05, 6.47080000000036e-05, 6.491700000000461e-05, 6.458399999999948e-05, 6.466599999999795e-05, 6.42500000000018e-05, 6.505500000000136e-05, 6.468100000000393e-05, 6.442999999999727e-05, 6.469399999999709e-05, 6.494499999999681e-05, 6.433299999999975e-05, 6.415299999999735e-05, 6.463899999999828e-05, 6.4195000000003e-05, 6.504200000000127e-05, 6.440199999999813e-05, 6.47359999999958e-05, 6.451300000000215e-05, 6.4583e-05, 6.491700000000461e-05, 6.422200000000267e-05, 6.472200000000317e-05, 6.463899999999828e-05, 6.466699999999742e-05, 6.490199999999863e-05, 6.430600000000009e-05, 6.501400000000213e-05, 6.423600000000224e-05, 6.42359999999953e-05, 6.509700000000007e-05, 6.500000000000256e-05, 6.473600000000274e-05, 6.419499999999606e-05, 6.487499999999896e-05]</msg>
<status status="PASS" starttime="20201110 08:33:33.440" endtime="20201110 08:33:33.444"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.428" endtime="20201110 08:33:33.446"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:33.452" endtime="20201110 08:33:33.455"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:33.461" endtime="20201110 08:33:33.482"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.456" endtime="20201110 08:33:33.484"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.448" endtime="20201110 08:33:33.486"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.932" endtime="20201110 08:33:33.486"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.931" endtime="20201110 08:33:33.487"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:33.509" endtime="20201110 08:33:33.529"></status>
</kw>
<msg timestamp="20201110 08:33:33.530" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:33.506" endtime="20201110 08:33:33.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:33.536" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:33.532" endtime="20201110 08:33:33.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:33.538" endtime="20201110 08:33:33.542"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.498" endtime="20201110 08:33:33.543"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.493" endtime="20201110 08:33:33.545"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:33.561" endtime="20201110 08:33:33.908"></status>
</kw>
<msg timestamp="20201110 08:33:33.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039980319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040046153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:33.558" endtime="20201110 08:33:33.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:33.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039980319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040046153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:33.917" endtime="20201110 08:33:33.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:33.936" endtime="20201110 08:33:33.940"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.551" endtime="20201110 08:33:33.941"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.546" endtime="20201110 08:33:33.943"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:33.953" level="INFO">${RESULT} = [{'time': 0.040046153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.583400000000073e-05, 'source_diff': 6.583400000000073e-05}, {'time': 0.040142333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:33.944" endtime="20201110 08:33:33.954"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:33.985" level="INFO">${ACCURACY} = {'time': [0.040046153, 0.040142333, 0.040234486, 0.040328667, 0.040422833, 0.040521042, 0.040614181, 0.040713389, 0.040806556, 0.04090275, 0.041000958, 0.041095139, 0.041188306, 0.041283486, 0.0413796...</msg>
<status status="PASS" starttime="20201110 08:33:33.955" endtime="20201110 08:33:33.986"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:33.996" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201110 08:33:33.994" endtime="20201110 08:33:33.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:34.002" level="INFO">VALUE: [6.583400000000073e-05, 6.602700000000322e-05, 6.541699999999817e-05, 6.566699999999842e-05, 6.57909999999956e-05, 6.595899999999738e-05, 6.583400000000073e-05, 6.60830000000015e-05, 6.529200000000152e-05, 6.516700000000486e-05, 6.590199999999963e-05, 6.609700000000107e-05, 6.593099999999824e-05, 6.517999999999802e-05, 6.579200000000202e-05, 6.518100000000443e-05, 6.548599999999655e-05, 6.568099999999799e-05, 6.544400000000478e-05, 6.55700000000009e-05, 6.536099999999989e-05, 6.5277999999995e-05, 6.531900000000118e-05, 6.593099999999824e-05, 6.52500000000028e-05, 6.572199999999723e-05, 6.572199999999723e-05, 6.599999999999662e-05, 6.59159999999992e-05, 6.55700000000009e-05, 6.523600000000324e-05, 6.577800000000245e-05, 6.517999999999802e-05, 6.513900000000572e-05, 6.54159999999987e-05, 6.531900000000118e-05, 6.550000000000306e-05, 6.581900000000168e-05, 6.536099999999989e-05, 6.586100000000039e-05, 6.551400000000263e-05, 6.59159999999992e-05, 6.601400000000313e-05, 6.563899999999928e-05, 6.516699999999792e-05, 6.598699999999652e-05, 6.59029999999991e-05, 6.534700000000032e-05, 6.57359999999968e-05, 6.576399999999594e-05]</msg>
<status status="PASS" starttime="20201110 08:33:33.999" endtime="20201110 08:33:34.009"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.987" endtime="20201110 08:33:34.011"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:34.017" endtime="20201110 08:33:34.020"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:34.025" endtime="20201110 08:33:34.047"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.021" endtime="20201110 08:33:34.049"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.013" endtime="20201110 08:33:34.050"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.489" endtime="20201110 08:33:34.051"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.487" endtime="20201110 08:33:34.051"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:34.074" endtime="20201110 08:33:34.093"></status>
</kw>
<msg timestamp="20201110 08:33:34.094" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:34.070" endtime="20201110 08:33:34.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:34.101" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:34.097" endtime="20201110 08:33:34.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:34.103" endtime="20201110 08:33:34.106"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.063" endtime="20201110 08:33:34.108"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.058" endtime="20201110 08:33:34.109"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:34.126" endtime="20201110 08:33:34.465"></status>
</kw>
<msg timestamp="20201110 08:33:34.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039880361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039947278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:34.122" endtime="20201110 08:33:34.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:34.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039880361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039947278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:34.475" endtime="20201110 08:33:34.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:34.493" endtime="20201110 08:33:34.497"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.115" endtime="20201110 08:33:34.499"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.111" endtime="20201110 08:33:34.500"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:34.511" level="INFO">${RESULT} = [{'time': 0.039947278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.691699999999967e-05, 'source_diff': 6.691699999999967e-05}, {'time': 0.040045458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:34.502" endtime="20201110 08:33:34.511"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:34.541" level="INFO">${ACCURACY} = {'time': [0.039947278, 0.040045458, 0.040143625, 0.040240806, 0.040336, 0.040434181, 0.040532375, 0.040626569, 0.040722736, 0.040817958, 0.040916111, 0.041015278, 0.041113472, 0.041207653, 0.041304875...</msg>
<status status="PASS" starttime="20201110 08:33:34.513" endtime="20201110 08:33:34.541"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:34.552" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201110 08:33:34.549" endtime="20201110 08:33:34.552"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:34.557" level="INFO">VALUE: [6.691699999999967e-05, 6.612500000000021e-05, 6.60280000000027e-05, 6.695899999999838e-05, 6.656899999999549e-05, 6.612500000000021e-05, 6.663900000000028e-05, 6.650000000000406e-05, 6.650000000000406e-05, 6.670799999999866e-05, 6.652799999999626e-05, 6.686100000000139e-05, 6.620799999999816e-05, 6.668099999999899e-05, 6.665299999999985e-05, 6.695799999999891e-05, 6.708400000000198e-05, 6.649999999999712e-05, 6.674999999999737e-05, 6.608299999999456e-05, 6.677800000000345e-05, 6.638900000000003e-05, 6.647199999999798e-05, 6.666599999999995e-05, 6.681899999999574e-05, 6.6277999999996e-05, 6.704200000000327e-05, 6.624999999999687e-05, 6.62909999999961e-05, 6.698599999999805e-05, 6.676400000000388e-05, 6.663900000000028e-05, 6.700000000000456e-05, 6.609700000000107e-05, 6.629200000000252e-05, 6.709700000000207e-05, 6.651399999999669e-05, 6.693100000000618e-05, 6.619399999999859e-05, 6.679200000000302e-05, 6.705499999999642e-05, 6.65280000000032e-05, 6.630499999999567e-05, 6.683299999999531e-05, 6.663900000000028e-05, 6.67080000000056e-05, 6.633400000000123e-05, 6.616699999999892e-05, 6.651399999999669e-05, 6.637500000000046e-05]</msg>
<status status="PASS" starttime="20201110 08:33:34.554" endtime="20201110 08:33:34.558"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.543" endtime="20201110 08:33:34.560"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:34.566" endtime="20201110 08:33:34.569"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:34.574" endtime="20201110 08:33:34.596"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.570" endtime="20201110 08:33:34.598"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.562" endtime="20201110 08:33:34.599"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.053" endtime="20201110 08:33:34.600"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.052" endtime="20201110 08:33:34.600"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:34.622" endtime="20201110 08:33:34.642"></status>
</kw>
<msg timestamp="20201110 08:33:34.643" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:34.619" endtime="20201110 08:33:34.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:34.650" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:34.646" endtime="20201110 08:33:34.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:34.652" endtime="20201110 08:33:34.655"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.612" endtime="20201110 08:33:34.657"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.606" endtime="20201110 08:33:34.658"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:34.675" endtime="20201110 08:33:35.018"></status>
</kw>
<msg timestamp="20201110 08:33:35.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039730472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039798444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:34.671" endtime="20201110 08:33:35.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:35.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039730472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039798444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:35.028" endtime="20201110 08:33:35.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:35.047" endtime="20201110 08:33:35.052"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.664" endtime="20201110 08:33:35.053"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.660" endtime="20201110 08:33:35.055"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:35.065" level="INFO">${RESULT} = [{'time': 0.039798444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.797199999999948e-05, 'source_diff': 6.797199999999948e-05}, {'time': 0.039896625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:35.056" endtime="20201110 08:33:35.066"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:35.096" level="INFO">${ACCURACY} = {'time': [0.039798444, 0.039896625, 0.039990806, 0.040087986, 0.040187181, 0.040285347, 0.040383625, 0.040480708, 0.040576903, 0.040675111, 0.040770236, 0.040866417, 0.040967611, 0.041064806, 0.041162...</msg>
<status status="PASS" starttime="20201110 08:33:35.067" endtime="20201110 08:33:35.096"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:35.106" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201110 08:33:35.104" endtime="20201110 08:33:35.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:35.112" level="INFO">VALUE: [6.797199999999948e-05, 6.716699999999992e-05, 6.70979999999946e-05, 6.722199999999873e-05, 6.797299999999895e-05, 6.801399999999819e-05, 6.763900000000128e-05, 6.722199999999873e-05, 6.801399999999819e-05, 6.770799999999966e-05, 6.784700000000282e-05, 6.780600000000359e-05, 6.799999999999862e-05, 6.716699999999992e-05, 6.802799999999776e-05, 6.754099999999735e-05, 6.734700000000232e-05, 6.793000000000077e-05, 6.787500000000196e-05, 6.782000000000316e-05, 6.786100000000239e-05, 6.765299999999391e-05, 6.752799999999726e-05, 6.762500000000171e-05, 6.736100000000189e-05, 6.798599999999905e-05, 6.768099999999999e-05, 6.780499999999717e-05, 6.712500000000121e-05, 6.738900000000103e-05, 6.754199999999683e-05, 6.719399999999959e-05, 6.780500000000411e-05, 6.72359999999983e-05, 6.756899999999649e-05, 6.806900000000393e-05, 6.78480000000023e-05, 6.780500000000411e-05, 6.809699999999613e-05, 6.779100000000454e-05, 6.738899999999409e-05, 6.73480000000018e-05, 6.709700000000207e-05, 6.731999999999572e-05, 6.729199999999658e-05, 6.734700000000232e-05, 6.752799999999726e-05, 6.737499999999452e-05, 6.730600000000309e-05, 6.741700000000017e-05]</msg>
<status status="PASS" starttime="20201110 08:33:35.109" endtime="20201110 08:33:35.113"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.098" endtime="20201110 08:33:35.115"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:35.121" endtime="20201110 08:33:35.124"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:35.129" endtime="20201110 08:33:35.151"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.125" endtime="20201110 08:33:35.153"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.117" endtime="20201110 08:33:35.154"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.602" endtime="20201110 08:33:35.155"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.601" endtime="20201110 08:33:35.155"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:35.177" endtime="20201110 08:33:35.197"></status>
</kw>
<msg timestamp="20201110 08:33:35.198" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:35.174" endtime="20201110 08:33:35.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:35.205" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:35.201" endtime="20201110 08:33:35.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:35.207" endtime="20201110 08:33:35.211"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.167" endtime="20201110 08:33:35.212"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.161" endtime="20201110 08:33:35.214"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:35.230" endtime="20201110 08:33:35.592"></status>
</kw>
<msg timestamp="20201110 08:33:35.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039749222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039817931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:35.227" endtime="20201110 08:33:35.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:35.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039749222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039817931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:35.602" endtime="20201110 08:33:35.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:35.621" endtime="20201110 08:33:35.626"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.220" endtime="20201110 08:33:35.628"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.215" endtime="20201110 08:33:35.629"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:35.640" level="INFO">${RESULT} = [{'time': 0.039817931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.870900000000013e-05, 'source_diff': 6.870900000000013e-05}, {'time': 0.039919111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:35.631" endtime="20201110 08:33:35.641"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:35.671" level="INFO">${ACCURACY} = {'time': [0.039817931, 0.039919111, 0.040018347, 0.0401145, 0.040212667, 0.040310833, 0.040408014, 0.040504181, 0.040604389, 0.040700597, 0.040797778, 0.040898972, 0.040999181, 0.041100375, 0.04119958...</msg>
<status status="PASS" starttime="20201110 08:33:35.642" endtime="20201110 08:33:35.672"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:35.682" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201110 08:33:35.680" endtime="20201110 08:33:35.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:35.688" level="INFO">VALUE: [6.870900000000013e-05, 6.848599999999955e-05, 6.87359999999998e-05, 6.859699999999663e-05, 6.829199999999758e-05, 6.851399999999869e-05, 6.812500000000221e-05, 6.844500000000031e-05, 6.829199999999758e-05, 6.874999999999937e-05, 6.908399999999704e-05, 6.82909999999981e-05, 6.90700000000044e-05, 6.880600000000459e-05, 6.895800000000091e-05, 6.844500000000031e-05, 6.819500000000006e-05, 6.852699999999878e-05, 6.891700000000167e-05, 6.870800000000066e-05, 6.877799999999851e-05, 6.866600000000195e-05, 6.827799999999801e-05, 6.82359999999993e-05, 6.834699999999638e-05, 6.823699999999877e-05, 6.85280000000052e-05, 6.852699999999878e-05, 6.855600000000434e-05, 6.844400000000084e-05, 6.854199999999783e-05, 6.85280000000052e-05, 6.902699999999928e-05, 6.898600000000005e-05, 6.868000000000152e-05, 6.816700000000092e-05, 6.894400000000134e-05, 6.815300000000135e-05, 6.837500000000246e-05, 6.886100000000339e-05, 6.843000000000127e-05, 6.830500000000461e-05, 6.859699999999663e-05, 6.812500000000221e-05, 6.900000000000656e-05, 6.830600000000409e-05, 6.829199999999758e-05, 6.880599999999765e-05, 6.897200000000048e-05, 6.836100000000289e-05]</msg>
<status status="PASS" starttime="20201110 08:33:35.685" endtime="20201110 08:33:35.689"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.673" endtime="20201110 08:33:35.691"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:35.698" endtime="20201110 08:33:35.700"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:35.706" endtime="20201110 08:33:35.728"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.702" endtime="20201110 08:33:35.730"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.693" endtime="20201110 08:33:35.731"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.157" endtime="20201110 08:33:35.732"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.156" endtime="20201110 08:33:35.732"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:35.755" endtime="20201110 08:33:35.776"></status>
</kw>
<msg timestamp="20201110 08:33:35.777" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:35.752" endtime="20201110 08:33:35.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:35.784" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:35.780" endtime="20201110 08:33:35.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:35.786" endtime="20201110 08:33:35.790"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.745" endtime="20201110 08:33:35.791"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.739" endtime="20201110 08:33:35.793"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:35.810" endtime="20201110 08:33:36.157"></status>
</kw>
<msg timestamp="20201110 08:33:36.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041015944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041085819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:35.806" endtime="20201110 08:33:36.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:36.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041015944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041085819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:36.167" endtime="20201110 08:33:36.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.186" endtime="20201110 08:33:36.191"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.799" endtime="20201110 08:33:36.193"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.794" endtime="20201110 08:33:36.194"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:36.205" level="INFO">${RESULT} = [{'time': 0.041085819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.987500000000396e-05, 'source_diff': 6.987500000000396e-05}, {'time': 0.041188042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:36.196" endtime="20201110 08:33:36.206"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:36.239" level="INFO">${ACCURACY} = {'time': [0.041085819, 0.041188042, 0.041288236, 0.041388444, 0.041490667, 0.041588861, 0.041691, 0.041789167, 0.041891389, 0.041991569, 0.042091778, 0.042188958, 0.042288139, 0.042385333, 0.042487528...</msg>
<status status="PASS" starttime="20201110 08:33:36.207" endtime="20201110 08:33:36.240"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:36.250" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201110 08:33:36.248" endtime="20201110 08:33:36.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:36.256" level="INFO">VALUE: [6.987500000000396e-05, 6.92360000000003e-05, 6.950000000000012e-05, 6.927700000000647e-05, 6.983400000000473e-05, 6.917999999999508e-05, 6.937499999999652e-05, 6.937500000000346e-05, 7.006999999999847e-05, 6.981899999999874e-05, 6.99030000000031e-05, 6.954099999999935e-05, 6.995800000000191e-05, 6.945799999999447e-05, 6.920899999999369e-05, 7.001400000000019e-05, 6.965299999999591e-05, 7.006899999999899e-05, 6.920900000000063e-05, 6.995900000000138e-05, 6.984799999999736e-05, 6.968100000000199e-05, 6.995800000000191e-05, 6.972200000000123e-05, 6.9583000000005e-05, 6.987499999999702e-05, 6.979200000000602e-05, 6.988900000000353e-05, 6.966600000000295e-05, 6.97230000000007e-05, 6.937500000000346e-05, 6.96109999999972e-05, 6.915300000000235e-05, 6.980599999999865e-05, 6.986099999999745e-05, 7.006899999999899e-05, 6.986099999999745e-05, 6.944499999999437e-05, 6.97360000000008e-05, 7.008399999999804e-05, 6.920800000000116e-05, 6.94160000000027e-05, 6.99309999999953e-05, 7.006999999999847e-05, 7.002799999999976e-05, 7.016700000000292e-05, 6.920900000000063e-05, 7.00559999999989e-05, 6.9583000000005e-05, 6.937499999999652e-05]</msg>
<status status="PASS" starttime="20201110 08:33:36.252" endtime="20201110 08:33:36.257"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.241" endtime="20201110 08:33:36.259"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.265" endtime="20201110 08:33:36.268"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:36.274" endtime="20201110 08:33:36.295"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.269" endtime="20201110 08:33:36.297"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.261" endtime="20201110 08:33:36.299"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.735" endtime="20201110 08:33:36.299"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.733" endtime="20201110 08:33:36.300"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.323" endtime="20201110 08:33:36.344"></status>
</kw>
<msg timestamp="20201110 08:33:36.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:36.319" endtime="20201110 08:33:36.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:36.351" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:36.347" endtime="20201110 08:33:36.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.353" endtime="20201110 08:33:36.357"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.312" endtime="20201110 08:33:36.359"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.306" endtime="20201110 08:33:36.360"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.377" endtime="20201110 08:33:36.716"></status>
</kw>
<msg timestamp="20201110 08:33:36.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040889875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040960458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:36.374" endtime="20201110 08:33:36.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:36.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040889875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040960458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:36.725" endtime="20201110 08:33:36.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.744" endtime="20201110 08:33:36.748"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.366" endtime="20201110 08:33:36.749"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.362" endtime="20201110 08:33:36.751"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:36.761" level="INFO">${RESULT} = [{'time': 0.040960458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.058299999999906e-05, 'source_diff': 7.058299999999906e-05}, {'time': 0.041064681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:36.752" endtime="20201110 08:33:36.762"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:36.793" level="INFO">${ACCURACY} = {'time': [0.040960458, 0.041064681, 0.041164903, 0.041268111, 0.041366306, 0.0414685, 0.041568722, 0.041667917, 0.041771111, 0.041875319, 0.041976528, 0.042078736, 0.042177958, 0.042282153, 0.04238145...</msg>
<status status="PASS" starttime="20201110 08:33:36.763" endtime="20201110 08:33:36.793"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:36.804" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201110 08:33:36.802" endtime="20201110 08:33:36.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:36.809" level="INFO">VALUE: [7.058299999999906e-05, 7.104200000000033e-05, 7.044500000000231e-05, 7.043000000000327e-05, 7.07230000000017e-05, 7.070799999999572e-05, 7.054100000000035e-05, 7.058399999999854e-05, 7.063899999999734e-05, 7.086099999999845e-05, 7.109699999999913e-05, 7.102800000000076e-05, 7.095800000000291e-05, 7.079200000000008e-05, 7.033299999999881e-05, 7.027700000000053e-05, 7.075000000000137e-05, 7.10830000000065e-05, 7.063899999999734e-05, 7.076400000000094e-05, 7.087499999999802e-05, 7.056999999999897e-05, 7.080500000000017e-05, 7.026300000000096e-05, 7.013899999999684e-05, 7.07360000000018e-05, 7.083299999999931e-05, 7.022200000000173e-05, 7.033299999999881e-05, 7.101399999999425e-05, 7.11109999999987e-05, 7.033300000000575e-05, 7.018099999999555e-05, 7.029199999999958e-05, 7.093100000000324e-05, 7.013900000000378e-05, 7.088899999999759e-05, 7.092999999999683e-05, 7.059700000000557e-05, 7.033299999999881e-05, 7.05979999999981e-05, 7.070800000000266e-05, 7.016600000000345e-05, 7.025000000000087e-05, 7.076400000000094e-05, 7.093000000000377e-05, 7.013899999999684e-05, 7.090200000000463e-05, 7.080599999999965e-05, 7.061100000000514e-05]</msg>
<status status="PASS" starttime="20201110 08:33:36.806" endtime="20201110 08:33:36.811"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.795" endtime="20201110 08:33:36.812"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.818" endtime="20201110 08:33:36.821"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:36.827" endtime="20201110 08:33:36.848"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.822" endtime="20201110 08:33:36.850"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.814" endtime="20201110 08:33:36.851"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.302" endtime="20201110 08:33:36.852"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.301" endtime="20201110 08:33:36.852"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.874" endtime="20201110 08:33:36.893"></status>
</kw>
<msg timestamp="20201110 08:33:36.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:36.871" endtime="20201110 08:33:36.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:36.900" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:36.896" endtime="20201110 08:33:36.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.902" endtime="20201110 08:33:36.906"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.864" endtime="20201110 08:33:36.908"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.858" endtime="20201110 08:33:36.909"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.925" endtime="20201110 08:33:37.259"></status>
</kw>
<msg timestamp="20201110 08:33:37.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039743861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039815056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:36.922" endtime="20201110 08:33:37.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:37.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039743861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039815056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:37.268" endtime="20201110 08:33:37.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:37.287" endtime="20201110 08:33:37.290"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.915" endtime="20201110 08:33:37.292"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.910" endtime="20201110 08:33:37.293"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:37.304" level="INFO">${RESULT} = [{'time': 0.039815056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.119500000000306e-05, 'source_diff': 7.119500000000306e-05}, {'time': 0.039914236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:37.295" endtime="20201110 08:33:37.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:37.336" level="INFO">${ACCURACY} = {'time': [0.039815056, 0.039914236, 0.040017444, 0.040119667, 0.040223875, 0.040327153, 0.040427292, 0.040530528, 0.040628694, 0.040728889, 0.040831111, 0.040931292, 0.041033486, 0.041137722, 0.041236...</msg>
<status status="PASS" starttime="20201110 08:33:37.306" endtime="20201110 08:33:37.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:37.346" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201110 08:33:37.344" endtime="20201110 08:33:37.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:37.352" level="INFO">VALUE: [7.119500000000306e-05, 7.16109999999992e-05, 7.195799999999697e-05, 7.12639999999945e-05, 7.191699999999773e-05, 7.177799999999457e-05, 7.127799999999407e-05, 7.207000000000047e-05, 7.145799999999647e-05, 7.145799999999647e-05, 7.137500000000546e-05, 7.170900000000313e-05, 7.122200000000273e-05, 7.177800000000151e-05, 7.16109999999992e-05, 7.145800000000341e-05, 7.180500000000117e-05, 7.127800000000101e-05, 7.144400000000384e-05, 7.147300000000245e-05, 7.208300000000056e-05, 7.163900000000528e-05, 7.129200000000058e-05, 7.176400000000194e-05, 7.172200000000323e-05, 7.162499999999877e-05, 7.184699999999988e-05, 7.14309999999968e-05, 7.19439999999974e-05, 7.169500000000356e-05, 7.195799999999697e-05, 7.168099999999705e-05, 7.140199999999819e-05, 7.182000000000022e-05, 7.216599999999851e-05, 7.112499999999827e-05, 7.151400000000169e-05, 7.21109999999997e-05, 7.197200000000348e-05, 7.144499999999637e-05, 7.168099999999705e-05, 7.137499999999852e-05, 7.156999999999997e-05, 7.122200000000273e-05, 7.158399999999954e-05, 7.180600000000065e-05, 7.191599999999826e-05, 7.20560000000009e-05, 7.122200000000273e-05, 7.183399999999979e-05]</msg>
<status status="PASS" starttime="20201110 08:33:37.349" endtime="20201110 08:33:37.353"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.337" endtime="20201110 08:33:37.355"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:37.361" endtime="20201110 08:33:37.364"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:37.369" endtime="20201110 08:33:37.391"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.365" endtime="20201110 08:33:37.393"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.357" endtime="20201110 08:33:37.394"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.854" endtime="20201110 08:33:37.395"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.853" endtime="20201110 08:33:37.395"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:37.417" endtime="20201110 08:33:37.436"></status>
</kw>
<msg timestamp="20201110 08:33:37.437" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:37.414" endtime="20201110 08:33:37.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:37.443" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:37.439" endtime="20201110 08:33:37.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:37.445" endtime="20201110 08:33:37.449"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.407" endtime="20201110 08:33:37.451"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.401" endtime="20201110 08:33:37.452"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:37.468" endtime="20201110 08:33:37.811"></status>
</kw>
<msg timestamp="20201110 08:33:37.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039875764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039948194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:37.465" endtime="20201110 08:33:37.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:37.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039875764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039948194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:37.821" endtime="20201110 08:33:37.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:37.839" endtime="20201110 08:33:37.843"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.458" endtime="20201110 08:33:37.845"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.453" endtime="20201110 08:33:37.846"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:37.856" level="INFO">${RESULT} = [{'time': 0.039948194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.242999999999833e-05, 'source_diff': 7.242999999999833e-05}, {'time': 0.040051347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:37.848" endtime="20201110 08:33:37.857"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:37.888" level="INFO">${ACCURACY} = {'time': [0.039948194, 0.040051347, 0.040157556, 0.04026275, 0.040361986, 0.040465139, 0.040570347, 0.040672542, 0.040772792, 0.040875944, 0.040981139, 0.041086347, 0.041186528, 0.041289764, 0.0413899...</msg>
<status status="PASS" starttime="20201110 08:33:37.858" endtime="20201110 08:33:37.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:37.899" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201110 08:33:37.897" endtime="20201110 08:33:37.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:37.904" level="INFO">VALUE: [7.242999999999833e-05, 7.215299999999841e-05, 7.295899999999744e-05, 7.24439999999979e-05, 7.216700000000492e-05, 7.290299999999916e-05, 7.220799999999722e-05, 7.262499999999977e-05, 7.238899999999909e-05, 7.217999999999808e-05, 7.280600000000165e-05, 7.275000000000337e-05, 7.229200000000158e-05, 7.290299999999916e-05, 7.242999999999833e-05, 7.251400000000269e-05, 7.306899999999505e-05, 7.291599999999926e-05, 7.226400000000244e-05, 7.238899999999909e-05, 7.29439999999984e-05, 7.261099999999326e-05, 7.212499999999927e-05, 7.266599999999901e-05, 7.298599999999711e-05, 7.277800000000251e-05, 7.293000000000577e-05, 7.262499999999977e-05, 7.21109999999997e-05, 7.297300000000395e-05, 7.231900000000124e-05, 7.283400000000079e-05, 7.262499999999977e-05, 7.311200000000018e-05, 7.212500000000621e-05, 7.290299999999916e-05, 7.287500000000002e-05, 7.284700000000088e-05, 7.227800000000201e-05, 7.291699999999873e-05, 7.254200000000183e-05, 7.248600000000355e-05, 7.281900000000174e-05, 7.293000000000577e-05, 7.283400000000079e-05, 7.309700000000113e-05, 7.250000000000312e-05, 7.27910000000026e-05, 7.241699999999823e-05, 7.245800000000441e-05]</msg>
<status status="PASS" starttime="20201110 08:33:37.901" endtime="20201110 08:33:37.906"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.890" endtime="20201110 08:33:37.908"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:37.916" endtime="20201110 08:33:37.919"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:37.925" endtime="20201110 08:33:37.946"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.920" endtime="20201110 08:33:37.948"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.910" endtime="20201110 08:33:37.950"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.397" endtime="20201110 08:33:37.950"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.396" endtime="20201110 08:33:37.951"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:37.973" endtime="20201110 08:33:37.993"></status>
</kw>
<msg timestamp="20201110 08:33:37.995" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:37.970" endtime="20201110 08:33:37.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:38.001" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:37.997" endtime="20201110 08:33:38.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:38.003" endtime="20201110 08:33:38.007"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.963" endtime="20201110 08:33:38.008"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.957" endtime="20201110 08:33:38.010"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:38.026" endtime="20201110 08:33:38.360"></status>
</kw>
<msg timestamp="20201110 08:33:38.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040196722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040269917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:38.023" endtime="20201110 08:33:38.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:38.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040196722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040269917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:38.370" endtime="20201110 08:33:38.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:38.388" endtime="20201110 08:33:38.392"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.016" endtime="20201110 08:33:38.393"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.011" endtime="20201110 08:33:38.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:38.405" level="INFO">${RESULT} = [{'time': 0.040269917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.319500000000506e-05, 'source_diff': 7.319500000000506e-05}, {'time': 0.040375083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:38.396" endtime="20201110 08:33:38.406"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:38.439" level="INFO">${ACCURACY} = {'time': [0.040269917, 0.040375083, 0.04047825, 0.040580458, 0.040681653, 0.040788847, 0.040892042, 0.040996236, 0.041101417, 0.041205653, 0.041310861, 0.041412028, 0.041515208, 0.041615389, 0.0417165...</msg>
<status status="PASS" starttime="20201110 08:33:38.407" endtime="20201110 08:33:38.439"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:38.450" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201110 08:33:38.447" endtime="20201110 08:33:38.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:38.455" level="INFO">VALUE: [7.319500000000506e-05, 7.367999999999958e-05, 7.384700000000188e-05, 7.380500000000317e-05, 7.351399999999675e-05, 7.4069000000003e-05, 7.395900000000538e-05, 7.390300000000016e-05, 7.304200000000233e-05, 7.413900000000084e-05, 7.347199999999804e-05, 7.35839999999946e-05, 7.342999999999933e-05, 7.336100000000095e-05, 7.347200000000498e-05, 7.370900000000513e-05, 7.340299999999966e-05, 7.383400000000179e-05, 7.330500000000267e-05, 7.402800000000376e-05, 7.319399999999865e-05, 7.316599999999951e-05, 7.370900000000513e-05, 7.351399999999675e-05, 7.354200000000283e-05, 7.334700000000138e-05, 7.354199999999589e-05, 7.338900000000009e-05, 7.340299999999966e-05, 7.398600000000505e-05, 7.412500000000127e-05, 7.331900000000224e-05, 7.336099999999401e-05, 7.334700000000138e-05, 7.331900000000224e-05, 7.377799999999657e-05, 7.36110000000012e-05, 7.343000000000627e-05, 7.324999999999693e-05, 7.408300000000256e-05, 7.351399999999675e-05, 7.344499999999837e-05, 7.312500000000027e-05, 7.36110000000012e-05, 7.332000000000172e-05, 7.372199999999829e-05, 7.369499999999862e-05, 7.381900000000274e-05, 7.332000000000172e-05, 7.391699999999973e-05]</msg>
<status status="PASS" starttime="20201110 08:33:38.452" endtime="20201110 08:33:38.456"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.441" endtime="20201110 08:33:38.458"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:38.464" endtime="20201110 08:33:38.467"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:38.472" endtime="20201110 08:33:38.494"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.468" endtime="20201110 08:33:38.496"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.460" endtime="20201110 08:33:38.497"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.953" endtime="20201110 08:33:38.498"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.952" endtime="20201110 08:33:38.498"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:38.520" endtime="20201110 08:33:38.539"></status>
</kw>
<msg timestamp="20201110 08:33:38.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:38.517" endtime="20201110 08:33:38.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:38.546" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:38.542" endtime="20201110 08:33:38.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:38.548" endtime="20201110 08:33:38.552"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.510" endtime="20201110 08:33:38.554"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.504" endtime="20201110 08:33:38.555"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:38.572" endtime="20201110 08:33:38.904"></status>
</kw>
<msg timestamp="20201110 08:33:38.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039760681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039834847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:38.568" endtime="20201110 08:33:38.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:38.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039760681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039834847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:38.914" endtime="20201110 08:33:38.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:38.933" endtime="20201110 08:33:38.936"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.561" endtime="20201110 08:33:38.938"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.556" endtime="20201110 08:33:38.940"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:38.950" level="INFO">${RESULT} = [{'time': 0.039834847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.416600000000051e-05, 'source_diff': 7.416600000000051e-05}, {'time': 0.039940056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:38.941" endtime="20201110 08:33:38.951"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:38.981" level="INFO">${ACCURACY} = {'time': [0.039834847, 0.039940056, 0.040046306, 0.040152431, 0.040254625, 0.040358806, 0.040464, 0.040567167, 0.040672361, 0.040777542, 0.040884736, 0.040987903, 0.041094111, 0.041201319, 0.0413025, ...</msg>
<status status="PASS" starttime="20201110 08:33:38.952" endtime="20201110 08:33:38.981"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:38.993" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201110 08:33:38.989" endtime="20201110 08:33:38.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:38.998" level="INFO">VALUE: [7.416600000000051e-05, 7.469499999999962e-05, 7.49169999999938e-05, 7.463900000000134e-05, 7.501400000000519e-05, 7.49169999999938e-05, 7.499999999999868e-05, 7.494499999999987e-05, 7.508299999999662e-05, 7.499999999999868e-05, 7.469400000000015e-05, 7.495899999999944e-05, 7.422200000000573e-05, 7.463800000000187e-05, 7.43189999999963e-05, 7.454200000000383e-05, 7.498599999999911e-05, 7.429099999999716e-05, 7.472199999999929e-05, 7.436100000000195e-05, 7.490300000000116e-05, 7.42360000000053e-05, 7.512500000000227e-05, 7.456999999999603e-05, 7.437500000000152e-05, 7.441600000000076e-05, 7.504200000000433e-05, 7.44439999999999e-05, 7.433300000000281e-05, 7.498600000000605e-05, 7.412500000000127e-05, 7.451400000000469e-05, 7.451399999999775e-05, 7.418000000000008e-05, 7.466700000000048e-05, 7.512499999999533e-05, 7.498599999999911e-05, 7.479200000000408e-05, 7.451399999999775e-05, 7.415300000000041e-05, 7.45969999999957e-05, 7.501299999999878e-05, 7.438900000000109e-05, 7.505499999999748e-05, 7.45560000000034e-05, 7.413900000000084e-05, 7.422200000000573e-05, 7.447200000000598e-05, 7.451399999999775e-05, 7.420799999999922e-05]</msg>
<status status="PASS" starttime="20201110 08:33:38.995" endtime="20201110 08:33:39.004"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.983" endtime="20201110 08:33:39.006"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:39.012" endtime="20201110 08:33:39.015"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:39.020" endtime="20201110 08:33:39.042"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.016" endtime="20201110 08:33:39.044"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.008" endtime="20201110 08:33:39.045"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.500" endtime="20201110 08:33:39.046"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.499" endtime="20201110 08:33:39.046"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:39.068" endtime="20201110 08:33:39.087"></status>
</kw>
<msg timestamp="20201110 08:33:39.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:39.065" endtime="20201110 08:33:39.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:39.095" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:39.091" endtime="20201110 08:33:39.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:39.097" endtime="20201110 08:33:39.100"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.058" endtime="20201110 08:33:39.102"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.052" endtime="20201110 08:33:39.103"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:39.120" endtime="20201110 08:33:39.451"></status>
</kw>
<msg timestamp="20201110 08:33:39.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039927694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040003528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:39.116" endtime="20201110 08:33:39.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:39.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039927694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040003528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:39.460" endtime="20201110 08:33:39.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:39.479" endtime="20201110 08:33:39.483"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.109" endtime="20201110 08:33:39.484"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.105" endtime="20201110 08:33:39.486"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:39.496" level="INFO">${RESULT} = [{'time': 0.040003528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.583399999999685e-05, 'source_diff': 7.583399999999685e-05}, {'time': 0.040112708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:39.487" endtime="20201110 08:33:39.497"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:39.527" level="INFO">${ACCURACY} = {'time': [0.040003528, 0.040112708, 0.040216875, 0.040321069, 0.04042825, 0.040535444, 0.040639653, 0.040748861, 0.040858056, 0.040961222, 0.041065417, 0.041173681, 0.041278847, 0.041383069, 0.0414892...</msg>
<status status="PASS" starttime="20201110 08:33:39.498" endtime="20201110 08:33:39.528"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:39.538" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201110 08:33:39.536" endtime="20201110 08:33:39.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:39.543" level="INFO">VALUE: [7.583399999999685e-05, 7.588899999999565e-05, 7.545800000000047e-05, 7.579099999999866e-05, 7.520800000000022e-05, 7.574999999999943e-05, 7.590299999999522e-05, 7.590299999999522e-05, 7.598699999999958e-05, 7.58189999999978e-05, 7.58890000000026e-05, 7.545899999999994e-05, 7.536100000000295e-05, 7.563800000000287e-05, 7.551399999999875e-05, 7.5763999999999e-05, 7.558299999999712e-05, 7.529099999999816e-05, 7.531999999999678e-05, 7.58189999999978e-05, 7.597300000000001e-05, 7.530499999999773e-05, 7.551399999999875e-05, 7.567999999999464e-05, 7.512500000000227e-05, 7.586099999999651e-05, 7.518000000000108e-05, 7.538899999999515e-05, 7.569499999999368e-05, 7.527800000000501e-05, 7.591700000000173e-05, 7.573599999999986e-05, 7.558300000000406e-05, 7.536100000000295e-05, 7.538899999999515e-05, 7.519500000000012e-05, 7.593000000000183e-05, 7.540200000000219e-05, 7.530599999999721e-05, 7.616700000000198e-05, 7.524999999999893e-05, 7.581900000000474e-05, 7.569499999999368e-05, 7.545800000000047e-05, 7.516600000000151e-05, 7.583299999999737e-05, 7.604200000000533e-05, 7.545800000000047e-05, 7.515300000000141e-05, 7.537500000000252e-05]</msg>
<status status="PASS" starttime="20201110 08:33:39.540" endtime="20201110 08:33:39.546"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.529" endtime="20201110 08:33:39.547"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:39.554" endtime="20201110 08:33:39.556"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:39.562" endtime="20201110 08:33:39.583"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.557" endtime="20201110 08:33:39.585"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.549" endtime="20201110 08:33:39.587"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.048" endtime="20201110 08:33:39.587"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.047" endtime="20201110 08:33:39.588"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:39.611" endtime="20201110 08:33:39.631"></status>
</kw>
<msg timestamp="20201110 08:33:39.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:39.607" endtime="20201110 08:33:39.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:39.639" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:39.635" endtime="20201110 08:33:39.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:39.641" endtime="20201110 08:33:39.645"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.600" endtime="20201110 08:33:39.646"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.594" endtime="20201110 08:33:39.648"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:39.664" endtime="20201110 08:33:40.008"></status>
</kw>
<msg timestamp="20201110 08:33:40.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040813514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040890069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:39.661" endtime="20201110 08:33:40.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:40.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040813514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040890069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:40.018" endtime="20201110 08:33:40.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.037" endtime="20201110 08:33:40.040"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.654" endtime="20201110 08:33:40.042"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.649" endtime="20201110 08:33:40.043"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:40.054" level="INFO">${RESULT} = [{'time': 0.040890069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.655499999999898e-05, 'source_diff': 7.655499999999898e-05}, {'time': 0.040998278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:40.045" endtime="20201110 08:33:40.054"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:40.084" level="INFO">${ACCURACY} = {'time': [0.040890069, 0.040998278, 0.041102472, 0.041209639, 0.041315819, 0.041422986, 0.041531208, 0.041634375, 0.041738583, 0.04184775, 0.041953917, 0.042058111, 0.042166306, 0.042276528, 0.0423837...</msg>
<status status="PASS" starttime="20201110 08:33:40.056" endtime="20201110 08:33:40.085"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:40.095" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201110 08:33:40.093" endtime="20201110 08:33:40.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:40.100" level="INFO">VALUE: [7.655499999999898e-05, 7.640299999999572e-05, 7.693000000000283e-05, 7.668100000000205e-05, 7.624999999999993e-05, 7.647200000000104e-05, 7.697200000000154e-05, 7.630599999999821e-05, 7.683300000000531e-05, 7.645800000000147e-05, 7.691700000000273e-05, 7.631900000000524e-05, 7.644500000000137e-05, 7.68890000000036e-05, 7.692999999999589e-05, 7.672300000000076e-05, 7.630499999999873e-05, 7.645900000000094e-05, 7.675000000000043e-05, 7.681999999999828e-05, 7.683299999999837e-05, 7.704099999999992e-05, 7.650000000000018e-05, 7.665300000000291e-05, 7.701400000000025e-05, 7.641600000000276e-05, 7.619400000000165e-05, 7.669400000000215e-05, 7.666700000000248e-05, 7.700000000000068e-05, 7.690300000000316e-05, 7.629099999999917e-05, 7.673600000000086e-05, 7.693099999999536e-05, 7.708299999999862e-05, 7.672300000000076e-05, 7.637500000000352e-05, 7.608299999999762e-05, 7.630500000000567e-05, 7.645800000000147e-05, 7.662500000000377e-05, 7.619399999999471e-05, 7.624999999999993e-05, 7.64719999999941e-05, 7.707000000000547e-05, 7.704199999999939e-05, 7.659799999999717e-05, 7.634699999999744e-05, 7.69310000000023e-05, 7.69719999999946e-05]</msg>
<status status="PASS" starttime="20201110 08:33:40.097" endtime="20201110 08:33:40.102"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.086" endtime="20201110 08:33:40.104"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.110" endtime="20201110 08:33:40.114"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:40.120" endtime="20201110 08:33:40.141"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.115" endtime="20201110 08:33:40.143"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.105" endtime="20201110 08:33:40.144"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.590" endtime="20201110 08:33:40.145"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.588" endtime="20201110 08:33:40.145"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.168" endtime="20201110 08:33:40.188"></status>
</kw>
<msg timestamp="20201110 08:33:40.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:40.164" endtime="20201110 08:33:40.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:40.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:40.191" endtime="20201110 08:33:40.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.197" endtime="20201110 08:33:40.201"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.157" endtime="20201110 08:33:40.203"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.152" endtime="20201110 08:33:40.204"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.221" endtime="20201110 08:33:40.565"></status>
</kw>
<msg timestamp="20201110 08:33:40.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039870625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039947764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:40.217" endtime="20201110 08:33:40.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:40.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039870625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039947764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:40.574" endtime="20201110 08:33:40.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.593" endtime="20201110 08:33:40.597"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.210" endtime="20201110 08:33:40.598"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.205" endtime="20201110 08:33:40.600"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:40.610" level="INFO">${RESULT} = [{'time': 0.039947764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.71389999999969e-05, 'source_diff': 7.71389999999969e-05}, {'time': 0.040054, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7....</msg>
<status status="PASS" starttime="20201110 08:33:40.601" endtime="20201110 08:33:40.611"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:40.643" level="INFO">${ACCURACY} = {'time': [0.039947764, 0.040054, 0.040163222, 0.040271431, 0.040381639, 0.040489847, 0.040594111, 0.04069925, 0.040807472, 0.040912667, 0.041022931, 0.041127125, 0.041234347, 0.041345625, 0.041452819,...</msg>
<status status="PASS" starttime="20201110 08:33:40.612" endtime="20201110 08:33:40.644"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:40.654" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201110 08:33:40.652" endtime="20201110 08:33:40.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:40.660" level="INFO">VALUE: [7.71389999999969e-05, 7.737499999999758e-05, 7.715299999999647e-05, 7.720900000000169e-05, 7.783299999999937e-05, 7.795800000000297e-05, 7.748600000000161e-05, 7.794399999999646e-05, 7.812499999999833e-05, 7.781999999999928e-05, 7.748700000000108e-05, 7.723600000000136e-05, 7.755499999999999e-05, 7.806900000000006e-05, 7.73189999999993e-05, 7.76519999999975e-05, 7.790299999999722e-05, 7.804100000000092e-05, 7.734799999999792e-05, 7.723600000000136e-05, 7.720900000000169e-05, 7.734700000000538e-05, 7.761099999999826e-05, 7.790299999999722e-05, 7.765300000000391e-05, 7.768100000000305e-05, 7.734700000000538e-05, 7.75839999999986e-05, 7.79719999999956e-05, 7.759799999999817e-05, 7.804200000000039e-05, 7.752800000000032e-05, 7.78890000000046e-05, 7.801400000000125e-05, 7.720800000000222e-05, 7.725000000000093e-05, 7.762499999999783e-05, 7.769399999999621e-05, 7.725000000000093e-05, 7.806900000000006e-05, 7.787499999999808e-05, 7.806999999999953e-05, 7.737500000000452e-05, 7.795800000000297e-05, 7.805599999999996e-05, 7.74310000000028e-05, 7.734800000000486e-05, 7.787499999999808e-05, 7.76519999999975e-05, 7.79310000000033e-05]</msg>
<status status="PASS" starttime="20201110 08:33:40.657" endtime="20201110 08:33:40.662"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.645" endtime="20201110 08:33:40.663"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.670" endtime="20201110 08:33:40.673"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:40.678" endtime="20201110 08:33:40.701"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.674" endtime="20201110 08:33:40.703"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.665" endtime="20201110 08:33:40.704"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.147" endtime="20201110 08:33:40.705"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.146" endtime="20201110 08:33:40.705"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.728" endtime="20201110 08:33:40.746"></status>
</kw>
<msg timestamp="20201110 08:33:40.748" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:40.724" endtime="20201110 08:33:40.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:40.754" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:40.750" endtime="20201110 08:33:40.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.756" endtime="20201110 08:33:40.760"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.717" endtime="20201110 08:33:40.761"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.712" endtime="20201110 08:33:40.763"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.779" endtime="20201110 08:33:41.121"></status>
</kw>
<msg timestamp="20201110 08:33:41.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041364833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041443333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:40.776" endtime="20201110 08:33:41.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041364833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041443333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:41.131" endtime="20201110 08:33:41.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:41.150" endtime="20201110 08:33:41.154"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.769" endtime="20201110 08:33:41.155"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.764" endtime="20201110 08:33:41.157"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:41.167" level="INFO">${RESULT} = [{'time': 0.041443333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.850000000000218e-05, 'source_diff': 7.850000000000218e-05}, {'time': 0.041550514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:41.158" endtime="20201110 08:33:41.168"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:41.198" level="INFO">${ACCURACY} = {'time': [0.041443333, 0.041550514, 0.041661722, 0.041768903, 0.041880097, 0.041986278, 0.042097458, 0.042207681, 0.042312819, 0.042419014, 0.042529236, 0.042634444, 0.042741625, 0.042849833, 0.042959...</msg>
<status status="PASS" starttime="20201110 08:33:41.170" endtime="20201110 08:33:41.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.209" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201110 08:33:41.207" endtime="20201110 08:33:41.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.215" level="INFO">VALUE: [7.850000000000218e-05, 7.899999999999574e-05, 7.823599999999542e-05, 7.88890000000056e-05, 7.892999999999789e-05, 7.829200000000064e-05, 7.869399999999721e-05, 7.826399999999456e-05, 7.837499999999858e-05, 7.869499999999668e-05, 7.834699999999944e-05, 7.838799999999868e-05, 7.902800000000182e-05, 7.884699999999994e-05, 7.870900000000319e-05, 7.895800000000397e-05, 7.827800000000107e-05, 7.829200000000064e-05, 7.875000000000243e-05, 7.827799999999413e-05, 7.867999999999764e-05, 7.904200000000139e-05, 7.902800000000182e-05, 7.893099999999736e-05, 7.815299999999747e-05, 7.898599999999617e-05, 7.8764000000002e-05, 7.902800000000182e-05, 7.823600000000236e-05, 7.833399999999935e-05, 7.875000000000243e-05, 7.815299999999747e-05, 7.90970000000002e-05, 7.865299999999797e-05, 7.82640000000015e-05, 7.862499999999883e-05, 7.880500000000124e-05, 7.892999999999789e-05, 7.862499999999883e-05, 7.848599999999567e-05, 7.823599999999542e-05, 7.830500000000074e-05, 7.818099999999661e-05, 7.901400000000225e-05, 7.883300000000037e-05, 7.841599999999782e-05, 7.849999999999524e-05, 7.817999999999714e-05, 7.844399999999696e-05, 7.883399999999985e-05]</msg>
<status status="PASS" starttime="20201110 08:33:41.212" endtime="20201110 08:33:41.216"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.200" endtime="20201110 08:33:41.218"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:41.224" endtime="20201110 08:33:41.227"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:41.233" endtime="20201110 08:33:41.254"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.228" endtime="20201110 08:33:41.256"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.220" endtime="20201110 08:33:41.258"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.707" endtime="20201110 08:33:41.258"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.706" endtime="20201110 08:33:41.259"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:41.283" endtime="20201110 08:33:41.302"></status>
</kw>
<msg timestamp="20201110 08:33:41.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:41.279" endtime="20201110 08:33:41.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.309" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:41.305" endtime="20201110 08:33:41.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:41.312" endtime="20201110 08:33:41.315"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.272" endtime="20201110 08:33:41.317"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.265" endtime="20201110 08:33:41.318"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:41.335" endtime="20201110 08:33:41.675"></status>
</kw>
<msg timestamp="20201110 08:33:41.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04184225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041922139, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:33:41.332" endtime="20201110 08:33:41.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04184225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041922139, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:33:41.684" endtime="20201110 08:33:41.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:41.704" endtime="20201110 08:33:41.708"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.324" endtime="20201110 08:33:41.709"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.320" endtime="20201110 08:33:41.711"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:41.721" level="INFO">${RESULT} = [{'time': 0.041922139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.988899999999965e-05, 'source_diff': 7.988899999999965e-05}, {'time': 0.042029319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:41.712" endtime="20201110 08:33:41.722"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:41.752" level="INFO">${ACCURACY} = {'time': [0.041922139, 0.042029319, 0.042138528, 0.042248708, 0.042360917, 0.042468111, 0.042577306, 0.042686542, 0.042799708, 0.042907861, 0.043019069, 0.043131292, 0.043240472, 0.043352667, 0.043465...</msg>
<status status="PASS" starttime="20201110 08:33:41.723" endtime="20201110 08:33:41.752"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.763" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201110 08:33:41.760" endtime="20201110 08:33:41.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.768" level="INFO">VALUE: [7.988899999999965e-05, 7.963799999999993e-05, 7.962499999999983e-05, 8.001400000000325e-05, 7.932000000000078e-05, 7.993000000000583e-05, 7.96389999999994e-05, 7.980600000000171e-05, 7.988899999999965e-05, 7.988899999999965e-05, 7.912499999999933e-05, 7.994500000000487e-05, 7.951400000000275e-05, 7.966699999999854e-05, 7.979200000000214e-05, 7.969400000000515e-05, 7.916700000000498e-05, 7.998599999999717e-05, 7.920800000000422e-05, 7.936100000000001e-05, 7.984700000000094e-05, 7.962499999999983e-05, 7.981999999999434e-05, 7.923600000000336e-05, 8.000000000000368e-05, 7.959800000000017e-05, 7.91389999999989e-05, 7.994399999999846e-05, 7.949999999999624e-05, 7.957000000000103e-05, 7.912499999999933e-05, 8.01389999999999e-05, 7.932000000000078e-05, 7.936100000000001e-05, 7.990299999999922e-05, 7.930599999999427e-05, 7.997200000000454e-05, 7.951399999999581e-05, 7.973599999999692e-05, 8.005499999999555e-05, 7.992999999999889e-05, 7.979200000000214e-05, 8.001399999999631e-05, 7.988800000000018e-05, 7.954200000000189e-05, 7.934700000000044e-05, 7.929099999999523e-05, 7.948599999999667e-05, 7.966700000000548e-05, 7.922299999999632e-05]</msg>
<status status="PASS" starttime="20201110 08:33:41.765" endtime="20201110 08:33:41.769"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.754" endtime="20201110 08:33:41.771"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:41.777" endtime="20201110 08:33:41.780"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:41.785" endtime="20201110 08:33:41.807"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.781" endtime="20201110 08:33:41.809"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.773" endtime="20201110 08:33:41.810"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.261" endtime="20201110 08:33:41.811"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.259" endtime="20201110 08:33:41.811"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:41.834" endtime="20201110 08:33:41.854"></status>
</kw>
<msg timestamp="20201110 08:33:41.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:41.830" endtime="20201110 08:33:41.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:41.858" endtime="20201110 08:33:41.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:41.864" endtime="20201110 08:33:41.869"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.823" endtime="20201110 08:33:41.871"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.818" endtime="20201110 08:33:41.872"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:41.888" endtime="20201110 08:33:42.228"></status>
</kw>
<msg timestamp="20201110 08:33:42.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040060417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040141111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:41.885" endtime="20201110 08:33:42.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:42.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040060417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040141111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:42.237" endtime="20201110 08:33:42.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:42.256" endtime="20201110 08:33:42.260"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.878" endtime="20201110 08:33:42.262"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.873" endtime="20201110 08:33:42.263"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:42.274" level="INFO">${RESULT} = [{'time': 0.040141111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.069399999999921e-05, 'source_diff': 8.069399999999921e-05}, {'time': 0.040249347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:42.265" endtime="20201110 08:33:42.274"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:42.304" level="INFO">${ACCURACY} = {'time': [0.040141111, 0.040249347, 0.040361569, 0.040474806, 0.040587, 0.040699292, 0.040813458, 0.040923653, 0.041035833, 0.041145028, 0.04125425, 0.041361444, 0.041474639, 0.041587819, 0.041698042,...</msg>
<status status="PASS" starttime="20201110 08:33:42.276" endtime="20201110 08:33:42.305"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:42.315" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201110 08:33:42.313" endtime="20201110 08:33:42.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:42.320" level="INFO">VALUE: [8.069399999999921e-05, 8.054099999999648e-05, 8.061100000000126e-05, 8.083400000000185e-05, 8.101399999999731e-05, 8.068099999999911e-05, 8.111099999999483e-05, 8.07919999999962e-05, 8.056900000000256e-05, 8.099999999999774e-05, 8.04169999999993e-05, 8.04719999999981e-05, 8.09169999999998e-05, 8.040200000000025e-05, 8.098599999999817e-05, 8.072199999999835e-05, 8.074999999999749e-05, 8.052800000000332e-05, 8.108399999999516e-05, 8.01389999999999e-05, 8.079099999999673e-05, 8.095799999999903e-05, 8.068099999999911e-05, 8.051400000000375e-05, 8.080500000000324e-05, 8.022199999999785e-05, 8.102799999999688e-05, 8.088900000000065e-05, 8.087500000000108e-05, 8.058299999999519e-05, 8.083400000000185e-05, 8.086100000000151e-05, 8.054099999999648e-05, 8.022200000000479e-05, 8.03469999999945e-05, 8.049999999999724e-05, 8.092999999999989e-05, 8.09589999999985e-05, 8.076399999999706e-05, 8.024999999999699e-05, 8.09169999999998e-05, 8.088900000000065e-05, 8.06520000000005e-05, 8.099999999999774e-05, 8.061100000000126e-05, 8.083299999999544e-05, 8.090300000000022e-05, 8.090300000000022e-05, 8.019399999999871e-05, 8.020799999999828e-05]</msg>
<status status="PASS" starttime="20201110 08:33:42.317" endtime="20201110 08:33:42.322"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.306" endtime="20201110 08:33:42.323"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:42.329" endtime="20201110 08:33:42.332"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:42.338" endtime="20201110 08:33:42.359"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.333" endtime="20201110 08:33:42.361"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.325" endtime="20201110 08:33:42.362"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.813" endtime="20201110 08:33:42.363"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.812" endtime="20201110 08:33:42.363"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:42.385" endtime="20201110 08:33:42.404"></status>
</kw>
<msg timestamp="20201110 08:33:42.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:42.382" endtime="20201110 08:33:42.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:42.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:42.408" endtime="20201110 08:33:42.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:42.414" endtime="20201110 08:33:42.417"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.375" endtime="20201110 08:33:42.419"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.370" endtime="20201110 08:33:42.421"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:42.438" endtime="20201110 08:33:42.771"></status>
</kw>
<msg timestamp="20201110 08:33:42.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039577556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039658861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:42.435" endtime="20201110 08:33:42.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:42.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039577556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039658861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:42.781" endtime="20201110 08:33:42.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:42.800" endtime="20201110 08:33:42.803"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.426" endtime="20201110 08:33:42.805"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.422" endtime="20201110 08:33:42.806"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:42.817" level="INFO">${RESULT} = [{'time': 0.039658861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.13049999999968e-05, 'source_diff': 8.13049999999968e-05}, {'time': 0.039768111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:33:42.808" endtime="20201110 08:33:42.817"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:42.849" level="INFO">${ACCURACY} = {'time': [0.039658861, 0.039768111, 0.039878319, 0.039993569, 0.040102778, 0.040214, 0.040327208, 0.040440444, 0.040551653, 0.040664861, 0.040778069, 0.040893292, 0.041003514, 0.041112708, 0.041225917...</msg>
<status status="PASS" starttime="20201110 08:33:42.819" endtime="20201110 08:33:42.850"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:42.860" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201110 08:33:42.858" endtime="20201110 08:33:42.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:42.865" level="INFO">VALUE: [8.13049999999968e-05, 8.206900000000406e-05, 8.184700000000295e-05, 8.20269999999984e-05, 8.194499999999993e-05, 8.122199999999885e-05, 8.204100000000492e-05, 8.155499999999705e-05, 8.199999999999874e-05, 8.177799999999763e-05, 8.187500000000208e-05, 8.202799999999788e-05, 8.188899999999472e-05, 8.208299999999669e-05, 8.134800000000192e-05, 8.144499999999943e-05, 8.148599999999867e-05, 8.177799999999763e-05, 8.183299999999644e-05, 8.194499999999993e-05, 8.206900000000406e-05, 8.169400000000021e-05, 8.138800000000168e-05, 8.151400000000475e-05, 8.118099999999961e-05, 8.186099999999558e-05, 8.207000000000353e-05, 8.19589999999995e-05, 8.199999999999874e-05, 8.19719999999996e-05, 8.191600000000132e-05, 8.162500000000183e-05, 8.122299999999832e-05, 8.173600000000586e-05, 8.158399999999566e-05, 8.174999999999849e-05, 8.125000000000493e-05, 8.126399999999756e-05, 8.169499999999968e-05, 8.195800000000003e-05, 8.129100000000417e-05, 8.207000000000353e-05, 8.170899999999925e-05, 8.208299999999669e-05, 8.106899999999612e-05, 8.140200000000125e-05, 8.186099999999558e-05, 8.127800000000407e-05, 8.194499999999993e-05, 8.183300000000338e-05]</msg>
<status status="PASS" starttime="20201110 08:33:42.862" endtime="20201110 08:33:42.867"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.851" endtime="20201110 08:33:42.868"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:42.875" endtime="20201110 08:33:42.877"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:42.883" endtime="20201110 08:33:42.904"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.878" endtime="20201110 08:33:42.906"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.870" endtime="20201110 08:33:42.908"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.365" endtime="20201110 08:33:42.908"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.364" endtime="20201110 08:33:42.909"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:42.931" endtime="20201110 08:33:42.950"></status>
</kw>
<msg timestamp="20201110 08:33:42.951" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:42.927" endtime="20201110 08:33:42.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:42.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:42.953" endtime="20201110 08:33:42.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:42.959" endtime="20201110 08:33:42.963"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.920" endtime="20201110 08:33:42.965"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.915" endtime="20201110 08:33:42.966"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:42.982" endtime="20201110 08:33:43.315"></status>
</kw>
<msg timestamp="20201110 08:33:43.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039692819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039775944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:42.979" endtime="20201110 08:33:43.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039692819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039775944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:43.325" endtime="20201110 08:33:43.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:43.343" endtime="20201110 08:33:43.347"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.972" endtime="20201110 08:33:43.349"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.967" endtime="20201110 08:33:43.350"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:43.361" level="INFO">${RESULT} = [{'time': 0.039775944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.312500000000334e-05, 'source_diff': 8.312500000000334e-05}, {'time': 0.039886153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:43.352" endtime="20201110 08:33:43.361"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:43.391" level="INFO">${ACCURACY} = {'time': [0.039775944, 0.039886153, 0.040000389, 0.040115639, 0.040227847, 0.040339069, 0.040449292, 0.040560514, 0.040673736, 0.040786972, 0.040897222, 0.041013431, 0.041125625, 0.041240889, 0.041352...</msg>
<status status="PASS" starttime="20201110 08:33:43.363" endtime="20201110 08:33:43.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.402" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201110 08:33:43.400" endtime="20201110 08:33:43.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.407" level="INFO">VALUE: [8.312500000000334e-05, 8.223599999999942e-05, 8.290299999999529e-05, 8.294500000000093e-05, 8.245800000000053e-05, 8.292999999999495e-05, 8.305599999999802e-05, 8.299999999999974e-05, 8.215300000000147e-05, 8.31249999999964e-05, 8.224999999999899e-05, 8.302800000000582e-05, 8.308299999999769e-05, 8.29170000000018e-05, 8.227799999999813e-05, 8.227800000000507e-05, 8.297300000000007e-05, 8.232000000000378e-05, 8.24720000000001e-05, 8.238899999999522e-05, 8.251399999999881e-05, 8.270900000000025e-05, 8.233300000000388e-05, 8.244400000000096e-05, 8.224999999999899e-05, 8.215300000000147e-05, 8.308399999999716e-05, 8.311099999999683e-05, 8.24720000000001e-05, 8.258299999999719e-05, 8.25840000000036e-05, 8.227799999999813e-05, 8.256900000000456e-05, 8.234799999999598e-05, 8.274999999999949e-05, 8.227799999999813e-05, 8.216600000000157e-05, 8.31249999999964e-05, 8.29720000000006e-05, 8.287499999999615e-05, 8.270900000000025e-05, 8.222199999999985e-05, 8.284700000000395e-05, 8.244500000000043e-05, 8.29720000000006e-05, 8.261099999999633e-05, 8.236100000000302e-05, 8.215299999999454e-05, 8.270800000000078e-05, 8.301399999999931e-05]</msg>
<status status="PASS" starttime="20201110 08:33:43.404" endtime="20201110 08:33:43.408"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.393" endtime="20201110 08:33:43.410"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:43.416" endtime="20201110 08:33:43.419"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:43.425" endtime="20201110 08:33:43.446"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.420" endtime="20201110 08:33:43.448"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.412" endtime="20201110 08:33:43.449"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.911" endtime="20201110 08:33:43.450"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.910" endtime="20201110 08:33:43.450"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:43.472" endtime="20201110 08:33:43.491"></status>
</kw>
<msg timestamp="20201110 08:33:43.493" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:43.469" endtime="20201110 08:33:43.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.499" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:43.495" endtime="20201110 08:33:43.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:43.501" endtime="20201110 08:33:43.505"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.462" endtime="20201110 08:33:43.506"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.456" endtime="20201110 08:33:43.507"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:43.524" endtime="20201110 08:33:43.858"></status>
</kw>
<msg timestamp="20201110 08:33:43.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039616694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039700819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:43.521" endtime="20201110 08:33:43.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039616694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039700819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:43.867" endtime="20201110 08:33:43.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:43.886" endtime="20201110 08:33:43.890"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.513" endtime="20201110 08:33:43.891"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.509" endtime="20201110 08:33:43.893"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:43.903" level="INFO">${RESULT} = [{'time': 0.039700819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.41249999999974e-05, 'source_diff': 8.41249999999974e-05}, {'time': 0.039815139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:33:43.894" endtime="20201110 08:33:43.904"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:43.935" level="INFO">${ACCURACY} = {'time': [0.039700819, 0.039815139, 0.039926347, 0.040039528, 0.040154819, 0.040266986, 0.040381194, 0.040497431, 0.040609667, 0.040720889, 0.040833125, 0.040944347, 0.041056569, 0.041169792, 0.041283...</msg>
<status status="PASS" starttime="20201110 08:33:43.905" endtime="20201110 08:33:43.935"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.946" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201110 08:33:43.944" endtime="20201110 08:33:43.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.952" level="INFO">VALUE: [8.41249999999974e-05, 8.39170000000028e-05, 8.390300000000323e-05, 8.387499999999715e-05, 8.366600000000307e-05, 8.331899999999837e-05, 8.350000000000024e-05, 8.333399999999741e-05, 8.336100000000402e-05, 8.373600000000092e-05, 8.390299999999629e-05, 8.341599999999588e-05, 8.340200000000325e-05, 8.386099999999758e-05, 8.322200000000085e-05, 8.33049999999988e-05, 8.343100000000186e-05, 8.376400000000006e-05, 8.402700000000041e-05, 8.397299999999414e-05, 8.404200000000639e-05, 8.340300000000272e-05, 8.356899999999862e-05, 8.319500000000118e-05, 8.413899999999697e-05, 8.32919999999987e-05, 8.379099999999973e-05, 8.402799999999988e-05, 8.322299999999339e-05, 8.356999999999809e-05, 8.408299999999869e-05, 8.381999999999834e-05, 8.373600000000092e-05, 8.388899999999672e-05, 8.35840000000046e-05, 8.337499999999665e-05, 8.381899999999887e-05, 8.348600000000067e-05, 8.405599999999902e-05, 8.404099999999998e-05, 8.351399999999981e-05, 8.393099999999543e-05, 8.323600000000042e-05, 8.394399999999552e-05, 8.343000000000239e-05, 8.391599999999638e-05, 8.36390000000034e-05, 8.390300000000323e-05, 8.36669999999956e-05, 8.381899999999887e-05]</msg>
<status status="PASS" starttime="20201110 08:33:43.949" endtime="20201110 08:33:43.953"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.937" endtime="20201110 08:33:43.955"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:43.961" endtime="20201110 08:33:43.964"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:43.969" endtime="20201110 08:33:43.991"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.965" endtime="20201110 08:33:43.993"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.957" endtime="20201110 08:33:43.994"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.452" endtime="20201110 08:33:43.995"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.451" endtime="20201110 08:33:43.995"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:44.018" endtime="20201110 08:33:44.037"></status>
</kw>
<msg timestamp="20201110 08:33:44.038" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:44.015" endtime="20201110 08:33:44.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:44.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:44.041" endtime="20201110 08:33:44.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:44.047" endtime="20201110 08:33:44.051"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.008" endtime="20201110 08:33:44.052"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.002" endtime="20201110 08:33:44.054"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:44.070" endtime="20201110 08:33:44.402"></status>
</kw>
<msg timestamp="20201110 08:33:44.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040365153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040449528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:44.067" endtime="20201110 08:33:44.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:44.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040365153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040449528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:44.411" endtime="20201110 08:33:44.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:44.430" endtime="20201110 08:33:44.435"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.060" endtime="20201110 08:33:44.437"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.055" endtime="20201110 08:33:44.438"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:44.449" level="INFO">${RESULT} = [{'time': 0.040449528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.437499999999765e-05, 'source_diff': 8.437499999999765e-05}, {'time': 0.040562736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:44.440" endtime="20201110 08:33:44.449"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:44.479" level="INFO">${ACCURACY} = {'time': [0.040449528, 0.040562736, 0.040679944, 0.040794153, 0.040907361, 0.041023583, 0.041141806, 0.041255042, 0.041369278, 0.041483486, 0.041597694, 0.041710889, 0.041826097, 0.041941389, 0.042055...</msg>
<status status="PASS" starttime="20201110 08:33:44.451" endtime="20201110 08:33:44.480"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:44.490" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201110 08:33:44.488" endtime="20201110 08:33:44.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:44.495" level="INFO">VALUE: [8.437499999999765e-05, 8.509699999999926e-05, 8.418000000000314e-05, 8.49590000000025e-05, 8.508300000000663e-05, 8.498600000000217e-05, 8.486200000000499e-05, 8.427800000000013e-05, 8.476400000000106e-05, 8.47920000000002e-05, 8.422199999999491e-05, 8.49170000000038e-05, 8.431899999999937e-05, 8.509699999999926e-05, 8.504200000000045e-05, 8.475000000000149e-05, 8.46390000000044e-05, 8.508299999999969e-05, 8.469499999999575e-05, 8.40970000000052e-05, 8.44449999999955e-05, 8.448600000000167e-05, 8.450000000000124e-05, 8.47920000000002e-05, 8.411099999999783e-05, 8.438899999999722e-05, 8.442999999999645e-05, 8.483399999999891e-05, 8.461099999999833e-05, 8.497199999999566e-05, 8.465299999999704e-05, 8.448599999999473e-05, 8.456899999999962e-05, 8.454199999999995e-05, 8.486100000000552e-05, 8.459799999999823e-05, 8.427800000000013e-05, 8.415299999999654e-05, 8.455500000000005e-05, 8.46390000000044e-05, 8.438899999999722e-05, 8.438899999999722e-05, 8.425000000000099e-05, 8.438899999999722e-05, 8.508299999999969e-05, 8.448600000000167e-05, 8.495799999999609e-05, 8.497199999999566e-05, 8.41799999999962e-05, 8.468100000000311e-05]</msg>
<status status="PASS" starttime="20201110 08:33:44.492" endtime="20201110 08:33:44.501"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.481" endtime="20201110 08:33:44.503"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:44.509" endtime="20201110 08:33:44.512"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:44.517" endtime="20201110 08:33:44.540"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.513" endtime="20201110 08:33:44.542"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.505" endtime="20201110 08:33:44.543"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.997" endtime="20201110 08:33:44.544"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.996" endtime="20201110 08:33:44.545"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:44.568" endtime="20201110 08:33:44.587"></status>
</kw>
<msg timestamp="20201110 08:33:44.588" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:44.564" endtime="20201110 08:33:44.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:44.594" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:44.591" endtime="20201110 08:33:44.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:44.597" endtime="20201110 08:33:44.602"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.557" endtime="20201110 08:33:44.603"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.551" endtime="20201110 08:33:44.605"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:44.621" endtime="20201110 08:33:44.956"></status>
</kw>
<msg timestamp="20201110 08:33:44.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041986556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042072667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:44.618" endtime="20201110 08:33:44.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:44.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041986556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042072667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:44.966" endtime="20201110 08:33:44.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:44.985" endtime="20201110 08:33:44.990"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.611" endtime="20201110 08:33:44.992"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.606" endtime="20201110 08:33:44.993"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:45.005" level="INFO">${RESULT} = [{'time': 0.042072667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.611099999999983e-05, 'source_diff': 8.611099999999983e-05}, {'time': 0.042190875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:44.995" endtime="20201110 08:33:45.005"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:45.038" level="INFO">${ACCURACY} = {'time': [0.042072667, 0.042190875, 0.042306069, 0.042422333, 0.042539528, 0.042655736, 0.042772944, 0.042886167, 0.043002347, 0.043119556, 0.043231778, 0.043345958, 0.043460208, 0.043576444, 0.043694...</msg>
<status status="PASS" starttime="20201110 08:33:45.007" endtime="20201110 08:33:45.038"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:45.049" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201110 08:33:45.046" endtime="20201110 08:33:45.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:45.054" level="INFO">VALUE: [8.611099999999983e-05, 8.522200000000285e-05, 8.541600000000482e-05, 8.522200000000285e-05, 8.568099999999718e-05, 8.541699999999736e-05, 8.523600000000242e-05, 8.52920000000007e-05, 8.534700000000645e-05, 8.543100000000386e-05, 8.526400000000156e-05, 8.570799999999684e-05, 8.573600000000292e-05, 8.569399999999727e-05, 8.584799999999948e-05, 8.53050000000008e-05, 8.547199999999616e-05, 8.5152000000005e-05, 8.552800000000138e-05, 8.556900000000062e-05, 8.529100000000123e-05, 8.541699999999736e-05, 8.54449999999965e-05, 8.548599999999573e-05, 8.5847e-05, 8.531999999999984e-05, 8.56249999999989e-05, 8.582000000000034e-05, 8.54999999999953e-05, 8.545899999999607e-05, 8.570799999999684e-05, 8.576400000000206e-05, 8.593100000000437e-05, 8.559799999999923e-05, 8.525000000000199e-05, 8.522199999999591e-05, 8.520899999999582e-05, 8.526400000000156e-05, 8.594399999999752e-05, 8.538899999999822e-05, 8.56249999999989e-05, 8.61669999999981e-05, 8.602800000000188e-05, 8.544399999999702e-05, 8.5459000000003e-05, 8.565299999999804e-05, 8.556900000000062e-05, 8.515199999999806e-05, 8.598599999999623e-05, 8.54999999999953e-05]</msg>
<status status="PASS" starttime="20201110 08:33:45.051" endtime="20201110 08:33:45.056"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.040" endtime="20201110 08:33:45.057"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:45.064" endtime="20201110 08:33:45.066"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:45.072" endtime="20201110 08:33:45.094"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.067" endtime="20201110 08:33:45.095"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.059" endtime="20201110 08:33:45.097"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.547" endtime="20201110 08:33:45.097"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.545" endtime="20201110 08:33:45.098"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:45.120" endtime="20201110 08:33:45.139"></status>
</kw>
<msg timestamp="20201110 08:33:45.140" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:45.117" endtime="20201110 08:33:45.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:45.146" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:45.143" endtime="20201110 08:33:45.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:45.149" endtime="20201110 08:33:45.152"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.110" endtime="20201110 08:33:45.154"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.104" endtime="20201110 08:33:45.155"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:45.172" endtime="20201110 08:33:45.518"></status>
</kw>
<msg timestamp="20201110 08:33:45.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039681181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039767556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:45.168" endtime="20201110 08:33:45.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:45.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039681181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039767556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:45.528" endtime="20201110 08:33:45.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:45.548" endtime="20201110 08:33:45.552"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.161" endtime="20201110 08:33:45.553"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.157" endtime="20201110 08:33:45.555"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:45.565" level="INFO">${RESULT} = [{'time': 0.039767556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.637499999999965e-05, 'source_diff': 8.637499999999965e-05}, {'time': 0.039886806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:45.556" endtime="20201110 08:33:45.566"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:45.598" level="INFO">${ACCURACY} = {'time': [0.039767556, 0.039886806, 0.040001056, 0.040116319, 0.040230542, 0.040347833, 0.040464042, 0.040579361, 0.040692528, 0.04080875, 0.040923056, 0.04103725, 0.0411535, 0.041271736, 0.041390986,...</msg>
<status status="PASS" starttime="20201110 08:33:45.567" endtime="20201110 08:33:45.599"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:45.609" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201110 08:33:45.607" endtime="20201110 08:33:45.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:45.615" level="INFO">VALUE: [8.637499999999965e-05, 8.674999999999655e-05, 8.69999999999968e-05, 8.702699999999647e-05, 8.643099999999793e-05, 8.687500000000015e-05, 8.655600000000152e-05, 8.658300000000119e-05, 8.636100000000008e-05, 8.676399999999612e-05, 8.680600000000177e-05, 8.636100000000008e-05, 8.673600000000392e-05, 8.637500000000659e-05, 8.697199999999766e-05, 8.669499999999775e-05, 8.652800000000238e-05, 8.673599999999698e-05, 8.622199999999691e-05, 8.658300000000119e-05, 8.704100000000298e-05, 8.704199999999551e-05, 8.680600000000177e-05, 8.629199999999476e-05, 8.64999999999963e-05, 8.661100000000033e-05, 8.705600000000202e-05, 8.66249999999999e-05, 8.61799999999982e-05, 8.675000000000349e-05, 8.63050000000018e-05, 8.655500000000205e-05, 8.659700000000076e-05, 8.619499999999725e-05, 8.626399999999562e-05, 8.680600000000177e-05, 8.622300000000332e-05, 8.669499999999775e-05, 8.644399999999802e-05, 8.663899999999947e-05, 8.636100000000008e-05, 8.640299999999879e-05, 8.638899999999922e-05, 8.69999999999968e-05, 8.622199999999691e-05, 8.669400000000521e-05, 8.679099999999579e-05, 8.707000000000159e-05, 8.669500000000468e-05, 8.663899999999947e-05]</msg>
<status status="PASS" starttime="20201110 08:33:45.612" endtime="20201110 08:33:45.616"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.600" endtime="20201110 08:33:45.618"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:45.625" endtime="20201110 08:33:45.627"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:45.633" endtime="20201110 08:33:45.655"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.628" endtime="20201110 08:33:45.657"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.620" endtime="20201110 08:33:45.658"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.100" endtime="20201110 08:33:45.659"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.099" endtime="20201110 08:33:45.659"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:45.682" endtime="20201110 08:33:45.704"></status>
</kw>
<msg timestamp="20201110 08:33:45.705" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:45.679" endtime="20201110 08:33:45.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:45.711" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:45.707" endtime="20201110 08:33:45.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:45.713" endtime="20201110 08:33:45.717"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.671" endtime="20201110 08:33:45.719"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.666" endtime="20201110 08:33:45.720"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:45.737" endtime="20201110 08:33:46.084"></status>
</kw>
<msg timestamp="20201110 08:33:46.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040778694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040866361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:45.734" endtime="20201110 08:33:46.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:46.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040778694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040866361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:46.094" endtime="20201110 08:33:46.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.113" endtime="20201110 08:33:46.117"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.726" endtime="20201110 08:33:46.118"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.721" endtime="20201110 08:33:46.120"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:46.131" level="INFO">${RESULT} = [{'time': 0.040866361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.76669999999996e-05, 'source_diff': 8.76669999999996e-05}, {'time': 0.040985611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:33:46.122" endtime="20201110 08:33:46.131"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:46.164" level="INFO">${ACCURACY} = {'time': [0.040866361, 0.040985611, 0.041102806, 0.041219083, 0.041337236, 0.041457486, 0.041574708, 0.041691944, 0.041813167, 0.041929403, 0.042045625, 0.042165861, 0.042286097, 0.042403306, 0.042518...</msg>
<status status="PASS" starttime="20201110 08:33:46.133" endtime="20201110 08:33:46.164"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:46.175" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201110 08:33:46.173" endtime="20201110 08:33:46.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:46.180" level="INFO">VALUE: [8.76669999999996e-05, 8.794399999999952e-05, 8.71120000000003e-05, 8.7332999999995e-05, 8.758300000000219e-05, 8.726400000000356e-05, 8.798600000000517e-05, 8.798599999999823e-05, 8.804199999999651e-05, 8.78199999999954e-05, 8.793100000000637e-05, 8.744399999999902e-05, 8.76799999999997e-05, 8.743099999999893e-05, 8.773599999999798e-05, 8.720799999999834e-05, 8.758299999999525e-05, 8.81250000000014e-05, 8.79999999999978e-05, 8.726399999999662e-05, 8.731899999999543e-05, 8.730499999999586e-05, 8.748599999999773e-05, 8.736200000000055e-05, 8.774999999999755e-05, 8.758299999999525e-05, 8.742999999999945e-05, 8.813899999999403e-05, 8.748599999999773e-05, 8.752799999999644e-05, 8.783300000000244e-05, 8.737499999999371e-05, 8.754199999999601e-05, 8.766600000000013e-05, 8.716700000000605e-05, 8.791699999999986e-05, 8.756900000000262e-05, 8.73470000000015e-05, 8.809699999999532e-05, 8.787500000000115e-05, 8.74449999999985e-05, 8.807000000000259e-05, 8.741599999999988e-05, 8.790300000000029e-05, 8.797199999999866e-05, 8.75129999999974e-05, 8.763899999999353e-05, 8.71669999999991e-05, 8.74449999999985e-05, 8.801399999999737e-05]</msg>
<status status="PASS" starttime="20201110 08:33:46.177" endtime="20201110 08:33:46.182"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.166" endtime="20201110 08:33:46.184"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.190" endtime="20201110 08:33:46.193"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:46.199" endtime="20201110 08:33:46.221"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.194" endtime="20201110 08:33:46.222"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.185" endtime="20201110 08:33:46.224"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.661" endtime="20201110 08:33:46.225"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.660" endtime="20201110 08:33:46.225"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.248" endtime="20201110 08:33:46.270"></status>
</kw>
<msg timestamp="20201110 08:33:46.271" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:46.244" endtime="20201110 08:33:46.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:46.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:46.273" endtime="20201110 08:33:46.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.279" endtime="20201110 08:33:46.283"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.237" endtime="20201110 08:33:46.285"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.231" endtime="20201110 08:33:46.286"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.303" endtime="20201110 08:33:46.648"></status>
</kw>
<msg timestamp="20201110 08:33:46.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040931819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041020764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:46.300" endtime="20201110 08:33:46.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:46.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040931819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041020764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:46.658" endtime="20201110 08:33:46.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.677" endtime="20201110 08:33:46.681"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.292" endtime="20201110 08:33:46.683"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.287" endtime="20201110 08:33:46.684"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:46.695" level="INFO">${RESULT} = [{'time': 0.041020764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.8945e-05, 'source_diff': 8.8945e-05}, {'time': 0.041138972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.823600000000542e-...</msg>
<status status="PASS" starttime="20201110 08:33:46.686" endtime="20201110 08:33:46.696"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:46.728" level="INFO">${ACCURACY} = {'time': [0.041020764, 0.041138972, 0.041259194, 0.041376444, 0.041495639, 0.041610861, 0.041728097, 0.041846319, 0.041963583, 0.042083847, 0.042200097, 0.042316264, 0.042432486, 0.042554694, 0.042673...</msg>
<status status="PASS" starttime="20201110 08:33:46.697" endtime="20201110 08:33:46.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:46.739" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201110 08:33:46.737" endtime="20201110 08:33:46.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:46.745" level="INFO">VALUE: [8.8945e-05, 8.823600000000542e-05, 8.887500000000215e-05, 8.897199999999966e-05, 8.901399999999837e-05, 8.81800000000002e-05, 8.870799999999984e-05, 8.813800000000149e-05, 8.912499999999546e-05, 8.880499999999736e-05, 8.888900000000172e-05, 8.820799999999934e-05, 8.847199999999916e-05, 8.890199999999487e-05, 8.883399999999597e-05, 8.876399999999812e-05, 8.872199999999941e-05, 8.905599999999708e-05, 8.848599999999873e-05, 8.851399999999787e-05, 8.841700000000036e-05, 8.843000000000045e-05, 8.815300000000054e-05, 8.824999999999805e-05, 8.908300000000369e-05, 8.86800000000007e-05, 8.877799999999769e-05, 8.815300000000054e-05, 8.848599999999873e-05, 8.905499999999761e-05, 8.85129999999984e-05, 8.836099999999514e-05, 8.879199999999726e-05, 8.894399999999358e-05, 8.822299999999839e-05, 8.898599999999923e-05, 8.874999999999855e-05, 8.823599999999848e-05, 8.909699999999632e-05, 8.838800000000174e-05, 8.884700000000301e-05, 8.893000000000095e-05, 8.823599999999848e-05, 8.855499999999711e-05, 8.872200000000635e-05, 8.904199999999751e-05, 8.861099999999539e-05, 8.868100000000018e-05, 8.883300000000344e-05, 8.820799999999934e-05]</msg>
<status status="PASS" starttime="20201110 08:33:46.742" endtime="20201110 08:33:46.746"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.730" endtime="20201110 08:33:46.748"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.754" endtime="20201110 08:33:46.757"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:46.763" endtime="20201110 08:33:46.785"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.758" endtime="20201110 08:33:46.786"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.750" endtime="20201110 08:33:46.788"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.227" endtime="20201110 08:33:46.789"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.226" endtime="20201110 08:33:46.789"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.812" endtime="20201110 08:33:46.835"></status>
</kw>
<msg timestamp="20201110 08:33:46.836" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:46.809" endtime="20201110 08:33:46.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:46.843" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:46.838" endtime="20201110 08:33:46.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.845" endtime="20201110 08:33:46.849"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.801" endtime="20201110 08:33:46.851"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.795" endtime="20201110 08:33:46.853"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.871" endtime="20201110 08:33:47.227"></status>
</kw>
<msg timestamp="20201110 08:33:47.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041019528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041108986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:46.867" endtime="20201110 08:33:47.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041019528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041108986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:47.237" endtime="20201110 08:33:47.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.256" endtime="20201110 08:33:47.260"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.859" endtime="20201110 08:33:47.262"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.854" endtime="20201110 08:33:47.264"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:47.274" level="INFO">${RESULT} = [{'time': 0.041108986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.945800000000059e-05, 'source_diff': 8.945800000000059e-05}, {'time': 0.04122725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:33:47.265" endtime="20201110 08:33:47.275"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:47.308" level="INFO">${ACCURACY} = {'time': [0.041108986, 0.04122725, 0.0413495, 0.04147075, 0.041587986, 0.041704236, 0.041821403, 0.041942639, 0.042060861, 0.042182097, 0.042299333, 0.042420583, 0.042541792, 0.042664042, 0.042785264,...</msg>
<status status="PASS" starttime="20201110 08:33:47.276" endtime="20201110 08:33:47.309"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.320" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201110 08:33:47.317" endtime="20201110 08:33:47.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.325" level="INFO">VALUE: [8.945800000000059e-05, 8.929199999999776e-05, 8.986099999999664e-05, 8.948599999999973e-05, 8.997200000000066e-05, 8.930499999999786e-05, 8.956999999999715e-05, 8.918099999999374e-05, 9.012499999999646e-05, 8.934700000000351e-05, 8.984700000000401e-05, 8.977699999999922e-05, 8.973599999999998e-05, 8.995900000000057e-05, 8.970800000000084e-05, 8.992999999999501e-05, 8.930499999999786e-05, 8.923599999999948e-05, 8.981899999999793e-05, 8.958299999999725e-05, 8.986099999999664e-05, 8.972299999999989e-05, 8.916699999999417e-05, 8.994400000000152e-05, 9.002799999999894e-05, 9.008299999999775e-05, 8.962499999999596e-05, 8.947200000000016e-05, 8.991700000000186e-05, 8.995799999999415e-05, 8.955499999999811e-05, 8.958400000000366e-05, 8.936100000000308e-05, 8.931899999999743e-05, 9.007000000000459e-05, 8.98329999999975e-05, 8.933300000000394e-05, 8.965300000000204e-05, 9.005599999999808e-05, 8.986099999999664e-05, 8.922199999999991e-05, 8.947200000000016e-05, 8.970800000000084e-05, 8.96250000000029e-05, 8.96670000000016e-05, 9.015300000000254e-05, 8.976400000000606e-05, 8.933300000000394e-05, 8.94869999999992e-05, 8.969500000000075e-05]</msg>
<status status="PASS" starttime="20201110 08:33:47.322" endtime="20201110 08:33:47.327"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.310" endtime="20201110 08:33:47.328"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.335" endtime="20201110 08:33:47.337"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:47.343" endtime="20201110 08:33:47.365"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.339" endtime="20201110 08:33:47.367"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.330" endtime="20201110 08:33:47.368"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.791" endtime="20201110 08:33:47.369"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.790" endtime="20201110 08:33:47.370"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.393" endtime="20201110 08:33:47.416"></status>
</kw>
<msg timestamp="20201110 08:33:47.417" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:47.389" endtime="20201110 08:33:47.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.423" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:47.419" endtime="20201110 08:33:47.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.425" endtime="20201110 08:33:47.429"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.382" endtime="20201110 08:33:47.431"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.376" endtime="20201110 08:33:47.432"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.449" endtime="20201110 08:33:47.809"></status>
</kw>
<msg timestamp="20201110 08:33:47.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041151361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041241639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:47.446" endtime="20201110 08:33:47.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041151361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041241639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:47.819" endtime="20201110 08:33:47.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.838" endtime="20201110 08:33:47.842"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.438" endtime="20201110 08:33:47.844"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.434" endtime="20201110 08:33:47.845"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:47.856" level="INFO">${RESULT} = [{'time': 0.041241639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.027799999999919e-05, 'source_diff': 9.027799999999919e-05}, {'time': 0.041364847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:47.847" endtime="20201110 08:33:47.856"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:47.888" level="INFO">${ACCURACY} = {'time': [0.041241639, 0.041364847, 0.041486069, 0.041608306, 0.041729528, 0.041850722, 0.041971958, 0.042094194, 0.042213431, 0.042331625, 0.042450847, 0.042570056, 0.042691306, 0.042813514, 0.042932...</msg>
<status status="PASS" starttime="20201110 08:33:47.858" endtime="20201110 08:33:47.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.901" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201110 08:33:47.898" endtime="20201110 08:33:47.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.907" level="INFO">VALUE: [9.027799999999919e-05, 9.105500000000655e-05, 9.070800000000184e-05, 9.047300000000064e-05, 9.075000000000055e-05, 9.05000000000003e-05, 9.042999999999551e-05, 9.066600000000313e-05, 9.073700000000046e-05, 9.07079999999949e-05, 9.037499999999671e-05, 9.108400000000516e-05, 9.058399999999772e-05, 9.08329999999985e-05, 9.088899999999678e-05, 9.059800000000423e-05, 9.086100000000458e-05, 9.113899999999703e-05, 9.112499999999746e-05, 9.051399999999987e-05, 9.052799999999944e-05, 9.037500000000365e-05, 9.047200000000116e-05, 9.111099999999789e-05, 9.023600000000048e-05, 9.094400000000252e-05, 9.084699999999807e-05, 9.06800000000027e-05, 9.061199999999686e-05, 9.04450000000015e-05, 9.059700000000476e-05, 9.055499999999911e-05, 9.072200000000141e-05, 9.034699999999757e-05, 9.048600000000073e-05, 9.040300000000279e-05, 9.019500000000125e-05, 9.101400000000037e-05, 9.027799999999919e-05, 9.023600000000048e-05, 9.081899999999893e-05, 9.075000000000055e-05, 9.10000000000008e-05, 9.041700000000236e-05, 9.095800000000209e-05, 9.104199999999951e-05, 9.088900000000372e-05, 9.112499999999746e-05, 9.041600000000288e-05, 9.091699999999592e-05]</msg>
<status status="PASS" starttime="20201110 08:33:47.904" endtime="20201110 08:33:47.908"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.890" endtime="20201110 08:33:47.910"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.917" endtime="20201110 08:33:47.919"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:47.925" endtime="20201110 08:33:47.947"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.921" endtime="20201110 08:33:47.949"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.912" endtime="20201110 08:33:47.950"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.372" endtime="20201110 08:33:47.951"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.371" endtime="20201110 08:33:47.951"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.974" endtime="20201110 08:33:47.996"></status>
</kw>
<msg timestamp="20201110 08:33:47.997" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:47.971" endtime="20201110 08:33:47.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:48.004" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:48.000" endtime="20201110 08:33:48.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.006" endtime="20201110 08:33:48.010"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.964" endtime="20201110 08:33:48.012"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.958" endtime="20201110 08:33:48.013"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.030" endtime="20201110 08:33:48.377"></status>
</kw>
<msg timestamp="20201110 08:33:48.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040882569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040974278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:48.026" endtime="20201110 08:33:48.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:48.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040882569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040974278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:48.387" endtime="20201110 08:33:48.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.406" endtime="20201110 08:33:48.410"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.019" endtime="20201110 08:33:48.411"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.014" endtime="20201110 08:33:48.413"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:48.424" level="INFO">${RESULT} = [{'time': 0.040974278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.170900000000232e-05, 'source_diff': 9.170900000000232e-05}, {'time': 0.0410945, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:33:48.414" endtime="20201110 08:33:48.424"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:48.456" level="INFO">${ACCURACY} = {'time': [0.040974278, 0.0410945, 0.041214778, 0.041333944, 0.041456222, 0.041580444, 0.041701653, 0.041823917, 0.041948097, 0.042069306, 0.042188514, 0.04231175, 0.042433958, 0.042555181, 0.042678403...</msg>
<status status="PASS" starttime="20201110 08:33:48.426" endtime="20201110 08:33:48.457"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:48.467" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201110 08:33:48.465" endtime="20201110 08:33:48.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:48.473" level="INFO">VALUE: [9.170900000000232e-05, 9.1332999999999e-05, 9.155599999999958e-05, 9.123599999999454e-05, 9.127800000000019e-05, 9.136099999999814e-05, 9.175000000000155e-05, 9.206999999999965e-05, 9.172199999999547e-05, 9.125000000000105e-05, 9.120800000000234e-05, 9.180599999999983e-05, 9.169400000000327e-05, 9.126400000000062e-05, 9.176399999999418e-05, 9.125000000000105e-05, 9.206900000000018e-05, 9.133400000000541e-05, 9.136099999999814e-05, 9.11670000000031e-05, 9.15000000000013e-05, 9.180599999999983e-05, 9.211099999999889e-05, 9.148600000000173e-05, 9.16659999999972e-05, 9.179100000000079e-05, 9.159699999999882e-05, 9.20000000000018e-05, 9.184699999999907e-05, 9.155500000000011e-05, 9.20130000000019e-05, 9.21529999999976e-05, 9.175000000000155e-05, 9.158399999999872e-05, 9.147199999999522e-05, 9.202800000000094e-05, 9.206899999999324e-05, 9.133300000000594e-05, 9.176300000000165e-05, 9.119499999999531e-05, 9.190300000000429e-05, 9.193000000000395e-05, 9.205500000000061e-05, 9.140300000000379e-05, 9.152800000000044e-05, 9.177800000000069e-05, 9.181899999999993e-05, 9.161099999999839e-05, 9.126400000000062e-05, 9.188899999999778e-05]</msg>
<status status="PASS" starttime="20201110 08:33:48.470" endtime="20201110 08:33:48.475"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.458" endtime="20201110 08:33:48.477"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.484" endtime="20201110 08:33:48.486"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:48.492" endtime="20201110 08:33:48.514"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.488" endtime="20201110 08:33:48.516"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.479" endtime="20201110 08:33:48.517"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.954" endtime="20201110 08:33:48.518"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.952" endtime="20201110 08:33:48.518"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.541" endtime="20201110 08:33:48.563"></status>
</kw>
<msg timestamp="20201110 08:33:48.564" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:48.538" endtime="20201110 08:33:48.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:48.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:48.566" endtime="20201110 08:33:48.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.573" endtime="20201110 08:33:48.577"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.531" endtime="20201110 08:33:48.578"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.525" endtime="20201110 08:33:48.580"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.596" endtime="20201110 08:33:48.946"></status>
</kw>
<msg timestamp="20201110 08:33:48.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041061722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041154111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:48.593" endtime="20201110 08:33:48.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:48.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041061722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041154111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:48.955" endtime="20201110 08:33:48.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.975" endtime="20201110 08:33:48.979"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.586" endtime="20201110 08:33:48.980"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.581" endtime="20201110 08:33:48.982"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:48.993" level="INFO">${RESULT} = [{'time': 0.041154111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.238899999999828e-05, 'source_diff': 9.238899999999828e-05}, {'time': 0.041280347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:48.983" endtime="20201110 08:33:48.993"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:49.024" level="INFO">${ACCURACY} = {'time': [0.041154111, 0.041280347, 0.041400569, 0.041524806, 0.041646014, 0.041765236, 0.041891444, 0.042014694, 0.042139944, 0.042259194, 0.042384431, 0.042507653, 0.042629917, 0.042750153, 0.042870...</msg>
<status status="PASS" starttime="20201110 08:33:48.995" endtime="20201110 08:33:49.025"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.035" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201110 08:33:49.033" endtime="20201110 08:33:49.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.041" level="INFO">VALUE: [9.238899999999828e-05, 9.30000000000028e-05, 9.236099999999914e-05, 9.266699999999767e-05, 9.2945000000004e-05, 9.219399999999683e-05, 9.309700000000032e-05, 9.245799999999665e-05, 9.259699999999982e-05, 9.252700000000197e-05, 9.268099999999724e-05, 9.222199999999597e-05, 9.268100000000418e-05, 9.268099999999724e-05, 9.280500000000136e-05, 9.272200000000341e-05, 9.215199999999812e-05, 9.213899999999803e-05, 9.302699999999553e-05, 9.215199999999812e-05, 9.247200000000316e-05, 9.309799999999979e-05, 9.311099999999989e-05, 9.247200000000316e-05, 9.244399999999708e-05, 9.277699999999528e-05, 9.254200000000101e-05, 9.279199999999432e-05, 9.287499999999921e-05, 9.256900000000068e-05, 9.288899999999878e-05, 9.2333e-05, 9.263899999999853e-05, 9.297199999999672e-05, 9.277800000000169e-05, 9.272199999999647e-05, 9.277800000000169e-05, 9.286099999999964e-05, 9.31529999999986e-05, 9.234699999999957e-05, 9.234699999999957e-05, 9.230600000000033e-05, 9.311099999999989e-05, 9.297200000000366e-05, 9.286099999999964e-05, 9.248600000000273e-05, 9.230500000000086e-05, 9.295899999999663e-05, 9.2945000000004e-05, 9.222300000000239e-05]</msg>
<status status="PASS" starttime="20201110 08:33:49.038" endtime="20201110 08:33:49.043"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.026" endtime="20201110 08:33:49.044"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.051" endtime="20201110 08:33:49.055"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:49.061" endtime="20201110 08:33:49.082"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.056" endtime="20201110 08:33:49.084"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.046" endtime="20201110 08:33:49.086"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.520" endtime="20201110 08:33:49.086"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.519" endtime="20201110 08:33:49.087"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.110" endtime="20201110 08:33:49.132"></status>
</kw>
<msg timestamp="20201110 08:33:49.133" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:49.106" endtime="20201110 08:33:49.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:49.135" endtime="20201110 08:33:49.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.141" endtime="20201110 08:33:49.145"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.099" endtime="20201110 08:33:49.147"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.093" endtime="20201110 08:33:49.148"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.165" endtime="20201110 08:33:49.510"></status>
</kw>
<msg timestamp="20201110 08:33:49.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040905125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040999194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:49.162" endtime="20201110 08:33:49.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040905125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040999194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:49.520" endtime="20201110 08:33:49.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.539" endtime="20201110 08:33:49.543"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.154" endtime="20201110 08:33:49.545"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.150" endtime="20201110 08:33:49.546"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:49.557" level="INFO">${RESULT} = [{'time': 0.040999194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.406900000000218e-05, 'source_diff': 9.406900000000218e-05}, {'time': 0.041121361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:49.548" endtime="20201110 08:33:49.557"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:49.589" level="INFO">${ACCURACY} = {'time': [0.040999194, 0.041121361, 0.041245583, 0.041367764, 0.041490958, 0.041612181, 0.041738361, 0.041858528, 0.041983736, 0.042107917, 0.042231097, 0.042355319, 0.0424765, 0.042598694, 0.04272390...</msg>
<status status="PASS" starttime="20201110 08:33:49.559" endtime="20201110 08:33:49.589"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.600" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201110 08:33:49.597" endtime="20201110 08:33:49.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.605" level="INFO">VALUE: [9.406900000000218e-05, 9.36529999999991e-05, 9.402700000000347e-05, 9.37079999999979e-05, 9.373600000000398e-05, 9.395899999999763e-05, 9.381900000000193e-05, 9.308400000000022e-05, 9.323600000000348e-05, 9.361100000000039e-05, 9.340299999999885e-05, 9.330500000000186e-05, 9.331900000000143e-05, 9.322199999999697e-05, 9.408400000000122e-05, 9.406900000000218e-05, 9.384700000000107e-05, 9.405600000000208e-05, 9.379099999999585e-05, 9.343100000000493e-05, 9.412500000000046e-05, 9.341699999999842e-05, 9.356900000000168e-05, 9.397300000000414e-05, 9.348600000000373e-05, 9.322199999999697e-05, 9.362499999999996e-05, 9.34450000000045e-05, 9.366699999999867e-05, 9.313899999999903e-05, 9.355499999999517e-05, 9.322300000000339e-05, 9.377800000000269e-05, 9.35409999999956e-05, 9.384800000000054e-05, 9.343099999999799e-05, 9.31659999999987e-05, 9.405499999999567e-05, 9.316699999999817e-05, 9.35279999999955e-05, 9.405600000000208e-05, 9.372200000000441e-05, 9.33200000000009e-05, 9.342999999999851e-05, 9.340299999999885e-05, 9.355500000000211e-05, 9.409700000000132e-05, 9.341599999999894e-05, 9.329199999999482e-05, 9.38330000000015e-05]</msg>
<status status="PASS" starttime="20201110 08:33:49.602" endtime="20201110 08:33:49.612"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.591" endtime="20201110 08:33:49.614"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.620" endtime="20201110 08:33:49.623"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:49.628" endtime="20201110 08:33:49.654"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.624" endtime="20201110 08:33:49.655"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.615" endtime="20201110 08:33:49.657"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.089" endtime="20201110 08:33:49.658"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.088" endtime="20201110 08:33:49.658"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.681" endtime="20201110 08:33:49.703"></status>
</kw>
<msg timestamp="20201110 08:33:49.704" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:49.677" endtime="20201110 08:33:49.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.710" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:49.706" endtime="20201110 08:33:49.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.713" endtime="20201110 08:33:49.717"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.670" endtime="20201110 08:33:49.718"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.664" endtime="20201110 08:33:49.720"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.736" endtime="20201110 08:33:50.084"></status>
</kw>
<msg timestamp="20201110 08:33:50.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041092903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041187819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:49.733" endtime="20201110 08:33:50.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:50.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041092903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041187819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:50.094" endtime="20201110 08:33:50.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.113" endtime="20201110 08:33:50.117"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.726" endtime="20201110 08:33:50.118"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.721" endtime="20201110 08:33:50.120"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:50.130" level="INFO">${RESULT} = [{'time': 0.041187819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.491600000000044e-05, 'source_diff': 9.491600000000044e-05}, {'time': 0.041311069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:50.121" endtime="20201110 08:33:50.131"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:50.162" level="INFO">${ACCURACY} = {'time': [0.041187819, 0.041311069, 0.041436278, 0.0415635, 0.041690736, 0.041814986, 0.041937236, 0.042061486, 0.042188708, 0.042315931, 0.042439208, 0.042562389, 0.042687667, 0.042811847, 0.04293813...</msg>
<status status="PASS" starttime="20201110 08:33:50.133" endtime="20201110 08:33:50.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:50.173" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201110 08:33:50.171" endtime="20201110 08:33:50.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:50.178" level="INFO">VALUE: [9.491600000000044e-05, 9.476299999999771e-05, 9.462500000000096e-05, 9.470800000000584e-05, 9.466699999999967e-05, 9.472199999999847e-05, 9.425000000000405e-05, 9.498600000000523e-05, 9.476399999999718e-05, 9.422300000000439e-05, 9.488900000000078e-05, 9.504199999999657e-05, 9.473599999999804e-05, 9.493000000000001e-05, 9.473599999999804e-05, 9.488900000000078e-05, 9.46530000000001e-05, 9.441699999999942e-05, 9.484700000000207e-05, 9.472199999999847e-05, 9.501399999999743e-05, 9.5027999999997e-05, 9.436100000000114e-05, 9.509699999999538e-05, 9.42079999999984e-05, 9.507000000000265e-05, 9.422199999999797e-05, 9.443099999999899e-05, 9.501400000000437e-05, 9.438900000000028e-05, 9.504200000000351e-05, 9.474999999999761e-05, 9.440299999999985e-05, 9.46530000000001e-05, 9.484700000000207e-05, 9.463900000000053e-05, 9.468099999999924e-05, 9.502699999999753e-05, 9.49859999999983e-05, 9.447199999999822e-05, 9.457000000000215e-05, 9.513900000000103e-05, 9.488900000000078e-05, 9.434699999999463e-05, 9.434699999999463e-05, 9.431900000000243e-05, 9.501299999999796e-05, 9.479199999999632e-05, 9.447199999999822e-05, 9.502800000000394e-05]</msg>
<status status="PASS" starttime="20201110 08:33:50.175" endtime="20201110 08:33:50.180"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.164" endtime="20201110 08:33:50.182"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.188" endtime="20201110 08:33:50.191"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:50.196" endtime="20201110 08:33:50.218"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.192" endtime="20201110 08:33:50.220"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.183" endtime="20201110 08:33:50.222"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.660" endtime="20201110 08:33:50.222"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.659" endtime="20201110 08:33:50.223"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.247" endtime="20201110 08:33:50.269"></status>
</kw>
<msg timestamp="20201110 08:33:50.270" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:50.244" endtime="20201110 08:33:50.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:50.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:50.273" endtime="20201110 08:33:50.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.279" endtime="20201110 08:33:50.283"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.237" endtime="20201110 08:33:50.284"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.229" endtime="20201110 08:33:50.286"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.303" endtime="20201110 08:33:50.649"></status>
</kw>
<msg timestamp="20201110 08:33:50.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042510292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042606, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:33:50.299" endtime="20201110 08:33:50.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:50.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042510292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042606, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:33:50.658" endtime="20201110 08:33:50.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.678" endtime="20201110 08:33:50.682"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.292" endtime="20201110 08:33:50.683"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.287" endtime="20201110 08:33:50.685"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:50.695" level="INFO">${RESULT} = [{'time': 0.042606, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.57079999999999e-05, 'source_diff': 9.57079999999999e-05}, {'time': 0.042731236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9....</msg>
<status status="PASS" starttime="20201110 08:33:50.686" endtime="20201110 08:33:50.696"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:50.727" level="INFO">${ACCURACY} = {'time': [0.042606, 0.042731236, 0.0428555, 0.042979736, 0.043103028, 0.043230264, 0.0433575, 0.043483764, 0.043612014, 0.043740278, 0.043867556, 0.043993792, 0.044121056, 0.044246333, 0.044375569, 0....</msg>
<status status="PASS" starttime="20201110 08:33:50.698" endtime="20201110 08:33:50.727"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:50.738" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201110 08:33:50.736" endtime="20201110 08:33:50.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:50.744" level="INFO">VALUE: [9.57079999999999e-05, 9.538900000000128e-05, 9.576399999999818e-05, 9.580499999999742e-05, 9.561100000000239e-05, 9.590299999999441e-05, 9.522199999999897e-05, 9.554200000000401e-05, 9.547199999999922e-05, 9.526399999999768e-05, 9.516700000000017e-05, 9.551399999999793e-05, 9.543099999999999e-05, 9.612499999999552e-05, 9.613799999999562e-05, 9.54859999999988e-05, 9.561100000000239e-05, 9.562499999999502e-05, 9.595899999999963e-05, 9.518099999999974e-05, 9.612499999999552e-05, 9.608400000000322e-05, 9.563899999999459e-05, 9.55279999999975e-05, 9.58200000000034e-05, 9.531999999999596e-05, 9.599999999999886e-05, 9.519399999999983e-05, 9.518000000000026e-05, 9.524999999999811e-05, 9.563799999999512e-05, 9.569400000000033e-05, 9.551299999999846e-05, 9.577799999999775e-05, 9.595800000000015e-05, 9.519499999999931e-05, 9.545899999999913e-05, 9.536100000000214e-05, 9.524999999999811e-05, 9.605599999999714e-05, 9.588900000000178e-05, 9.587499999999527e-05, 9.57079999999999e-05, 9.613800000000255e-05, 9.579199999999732e-05, 9.56530000000011e-05, 9.541700000000042e-05, 9.54859999999988e-05, 9.60000000000058e-05, 9.605499999999767e-05]</msg>
<status status="PASS" starttime="20201110 08:33:50.740" endtime="20201110 08:33:50.745"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.729" endtime="20201110 08:33:50.747"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.753" endtime="20201110 08:33:50.756"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:50.762" endtime="20201110 08:33:50.784"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.757" endtime="20201110 08:33:50.786"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.749" endtime="20201110 08:33:50.787"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.225" endtime="20201110 08:33:50.788"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.224" endtime="20201110 08:33:50.788"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.811" endtime="20201110 08:33:50.833"></status>
</kw>
<msg timestamp="20201110 08:33:50.835" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:50.808" endtime="20201110 08:33:50.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:50.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:50.837" endtime="20201110 08:33:50.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.843" endtime="20201110 08:33:50.849"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.800" endtime="20201110 08:33:50.850"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.794" endtime="20201110 08:33:50.852"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.868" endtime="20201110 08:33:51.216"></status>
</kw>
<msg timestamp="20201110 08:33:51.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040976903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041073278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:50.865" endtime="20201110 08:33:51.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040976903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041073278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:51.226" endtime="20201110 08:33:51.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.245" endtime="20201110 08:33:51.250"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.858" endtime="20201110 08:33:51.251"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.853" endtime="20201110 08:33:51.253"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:51.263" level="INFO">${RESULT} = [{'time': 0.041073278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.637499999999577e-05, 'source_diff': 9.637499999999577e-05}, {'time': 0.041201569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:51.254" endtime="20201110 08:33:51.264"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:51.295" level="INFO">${ACCURACY} = {'time': [0.041073278, 0.041201569, 0.041325819, 0.041455014, 0.041582264, 0.041711542, 0.041839778, 0.041970028, 0.042098278, 0.042226542, 0.042353764, 0.042483028, 0.042610292, 0.042737514, 0.042863...</msg>
<status status="PASS" starttime="20201110 08:33:51.266" endtime="20201110 08:33:51.295"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.306" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201110 08:33:51.304" endtime="20201110 08:33:51.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.312" level="INFO">VALUE: [9.637499999999577e-05, 9.713800000000355e-05, 9.629099999999835e-05, 9.633299999999706e-05, 9.694500000000106e-05, 9.687499999999627e-05, 9.649999999999936e-05, 9.693100000000149e-05, 9.690300000000235e-05, 9.649999999999936e-05, 9.67080000000009e-05, 9.65279999999985e-05, 9.677799999999875e-05, 9.684699999999713e-05, 9.626399999999868e-05, 9.644499999999362e-05, 9.688900000000278e-05, 9.655600000000458e-05, 9.641699999999448e-05, 9.631900000000443e-05, 9.666700000000167e-05, 9.683399999999703e-05, 9.641700000000142e-05, 9.69860000000003e-05, 9.688900000000278e-05, 9.622199999999997e-05, 9.659699999999688e-05, 9.641700000000142e-05, 9.71530000000026e-05, 9.638899999999534e-05, 9.688899999999584e-05, 9.688900000000278e-05, 9.640299999999491e-05, 9.656900000000468e-05, 9.634800000000304e-05, 9.627799999999825e-05, 9.676399999999918e-05, 9.674999999999961e-05, 9.651399999999893e-05, 9.694500000000106e-05, 9.633299999999706e-05, 9.622199999999997e-05, 9.634699999999663e-05, 9.674999999999961e-05, 9.673600000000004e-05, 9.69860000000003e-05, 9.613900000000203e-05, 9.713900000000303e-05, 9.697200000000072e-05, 9.699999999999986e-05]</msg>
<status status="PASS" starttime="20201110 08:33:51.308" endtime="20201110 08:33:51.313"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.297" endtime="20201110 08:33:51.315"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.321" endtime="20201110 08:33:51.324"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:51.330" endtime="20201110 08:33:51.352"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.325" endtime="20201110 08:33:51.353"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.317" endtime="20201110 08:33:51.355"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.790" endtime="20201110 08:33:51.355"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.789" endtime="20201110 08:33:51.356"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.379" endtime="20201110 08:33:51.401"></status>
</kw>
<msg timestamp="20201110 08:33:51.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:51.375" endtime="20201110 08:33:51.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.408" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:51.404" endtime="20201110 08:33:51.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.410" endtime="20201110 08:33:51.414"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.368" endtime="20201110 08:33:51.416"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.362" endtime="20201110 08:33:51.417"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.436" endtime="20201110 08:33:51.782"></status>
</kw>
<msg timestamp="20201110 08:33:51.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040841722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040939667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:51.433" endtime="20201110 08:33:51.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040841722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040939667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:51.792" endtime="20201110 08:33:51.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.811" endtime="20201110 08:33:51.815"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.423" endtime="20201110 08:33:51.816"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.419" endtime="20201110 08:33:51.818"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:51.829" level="INFO">${RESULT} = [{'time': 0.040939667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.794500000000206e-05, 'source_diff': 9.794500000000206e-05}, {'time': 0.041065931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:51.820" endtime="20201110 08:33:51.829"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:51.860" level="INFO">${ACCURACY} = {'time': [0.040939667, 0.041065931, 0.041192222, 0.041320528, 0.041450792, 0.041576042, 0.041701264, 0.041828542, 0.041957833, 0.042083111, 0.042210389, 0.042336639, 0.042462875, 0.042589111, 0.042715...</msg>
<status status="PASS" starttime="20201110 08:33:51.831" endtime="20201110 08:33:51.861"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.872" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201110 08:33:51.869" endtime="20201110 08:33:51.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.877" level="INFO">VALUE: [9.794500000000206e-05, 9.754199999999907e-05, 9.726399999999968e-05, 9.779199999999932e-05, 9.74730000000007e-05, 9.770900000000138e-05, 9.745800000000165e-05, 9.763900000000353e-05, 9.816599999999676e-05, 9.719400000000183e-05, 9.719500000000131e-05, 9.786100000000464e-05, 9.75279999999995e-05, 9.794399999999565e-05, 9.734699999999763e-05, 9.727799999999925e-05, 9.73059999999984e-05, 9.822200000000197e-05, 9.79159999999965e-05, 9.775000000000061e-05, 9.76530000000031e-05, 9.791600000000344e-05, 9.759699999999788e-05, 9.729099999999935e-05, 9.815199999999719e-05, 9.779099999999985e-05, 9.751399999999993e-05, 9.759799999999735e-05, 9.720799999999447e-05, 9.805599999999914e-05, 9.757000000000515e-05, 9.777799999999975e-05, 9.745900000000113e-05, 9.801400000000043e-05, 9.78059999999989e-05, 9.751399999999993e-05, 9.809799999999785e-05, 9.779199999999932e-05, 9.78609999999977e-05, 9.8028e-05, 9.798599999999436e-05, 9.769400000000233e-05, 9.750000000000036e-05, 9.729199999999882e-05, 9.783399999999803e-05, 9.731999999999796e-05, 9.725000000000011e-05, 9.809699999999838e-05, 9.806999999999871e-05, 9.756999999999821e-05]</msg>
<status status="PASS" starttime="20201110 08:33:51.874" endtime="20201110 08:33:51.879"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.862" endtime="20201110 08:33:51.880"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.887" endtime="20201110 08:33:51.890"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:51.895" endtime="20201110 08:33:51.917"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.891" endtime="20201110 08:33:51.919"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.882" endtime="20201110 08:33:51.920"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.358" endtime="20201110 08:33:51.921"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.357" endtime="20201110 08:33:51.921"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.944" endtime="20201110 08:33:51.967"></status>
</kw>
<msg timestamp="20201110 08:33:51.968" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:51.941" endtime="20201110 08:33:51.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:51.970" endtime="20201110 08:33:51.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.976" endtime="20201110 08:33:51.980"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.934" endtime="20201110 08:33:51.982"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.928" endtime="20201110 08:33:51.983"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.000" endtime="20201110 08:33:52.352"></status>
</kw>
<msg timestamp="20201110 08:33:52.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040954111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041053208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:51.996" endtime="20201110 08:33:52.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:52.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040954111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041053208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:52.362" endtime="20201110 08:33:52.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.381" endtime="20201110 08:33:52.385"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.989" endtime="20201110 08:33:52.387"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.984" endtime="20201110 08:33:52.388"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:52.399" level="INFO">${RESULT} = [{'time': 0.041053208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.909699999999938e-05, 'source_diff': 9.909699999999938e-05}, {'time': 0.041183444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:52.390" endtime="20201110 08:33:52.400"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:52.430" level="INFO">${ACCURACY} = {'time': [0.041053208, 0.041183444, 0.041309736, 0.041436917, 0.041563181, 0.041694472, 0.041821639, 0.041950875, 0.042076125, 0.042203319, 0.042331556, 0.042458833, 0.042589042, 0.042719306, 0.042849...</msg>
<status status="PASS" starttime="20201110 08:33:52.401" endtime="20201110 08:33:52.431"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:52.441" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201110 08:33:52.439" endtime="20201110 08:33:52.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:52.447" level="INFO">VALUE: [9.909699999999938e-05, 9.890199999999794e-05, 9.833299999999906e-05, 9.911099999999895e-05, 9.866699999999673e-05, 9.9028000000001e-05, 9.872200000000247e-05, 9.843099999999605e-05, 9.827800000000025e-05, 9.883299999999956e-05, 9.83059999999994e-05, 9.915199999999819e-05, 9.890299999999741e-05, 9.88479999999986e-05, 9.88609999999987e-05, 9.829199999999982e-05, 9.887499999999827e-05, 9.854200000000007e-05, 9.83609999999982e-05, 9.879099999999391e-05, 9.915299999999766e-05, 9.909699999999938e-05, 9.827799999999332e-05, 9.84860000000018e-05, 9.838899999999734e-05, 9.901299999999502e-05, 9.876400000000118e-05, 9.875000000000161e-05, 9.829199999999982e-05, 9.847200000000222e-05, 9.902799999999407e-05, 9.816699999999623e-05, 9.829199999999982e-05, 9.829199999999982e-05, 9.887499999999827e-05, 9.847199999999529e-05, 9.861099999999845e-05, 9.881899999999999e-05, 9.913899999999809e-05, 9.826399999999375e-05, 9.915299999999766e-05, 9.901400000000143e-05, 9.867999999999683e-05, 9.911099999999895e-05, 9.900000000000186e-05, 9.841699999999648e-05, 9.850000000000136e-05, 9.866699999999673e-05, 9.9028000000001e-05, 9.861200000000486e-05]</msg>
<status status="PASS" starttime="20201110 08:33:52.444" endtime="20201110 08:33:52.448"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.432" endtime="20201110 08:33:52.450"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.457" endtime="20201110 08:33:52.459"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:52.465" endtime="20201110 08:33:52.487"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.461" endtime="20201110 08:33:52.489"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.452" endtime="20201110 08:33:52.490"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.924" endtime="20201110 08:33:52.491"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.922" endtime="20201110 08:33:52.491"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.514" endtime="20201110 08:33:52.537"></status>
</kw>
<msg timestamp="20201110 08:33:52.538" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:52.511" endtime="20201110 08:33:52.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:52.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:52.540" endtime="20201110 08:33:52.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.546" endtime="20201110 08:33:52.550"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.503" endtime="20201110 08:33:52.552"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.498" endtime="20201110 08:33:52.553"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.570" endtime="20201110 08:33:52.918"></status>
</kw>
<msg timestamp="20201110 08:33:52.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041037181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041136639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:52.567" endtime="20201110 08:33:52.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:52.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041037181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041136639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:52.928" endtime="20201110 08:33:52.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.947" endtime="20201110 08:33:52.951"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.559" endtime="20201110 08:33:52.953"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.555" endtime="20201110 08:33:52.954"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:52.966" level="INFO">${RESULT} = [{'time': 0.041136639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.945800000000365e-05, 'source_diff': 9.945800000000365e-05}, {'time': 0.041265875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:52.956" endtime="20201110 08:33:52.967"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:52.999" level="INFO">${ACCURACY} = {'time': [0.041136639, 0.041265875, 0.041393125, 0.041524375, 0.041650611, 0.041777861, 0.041906153, 0.042037347, 0.042167569, 0.042296806, 0.042429028, 0.042558278, 0.042686486, 0.042819736, 0.042951...</msg>
<status status="PASS" starttime="20201110 08:33:52.969" endtime="20201110 08:33:53.000"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.011" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201110 08:33:53.008" endtime="20201110 08:33:53.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.016" level="INFO">VALUE: [9.945800000000365e-05, 9.934699999999963e-05, 9.941700000000442e-05, 9.973600000000304e-05, 9.927799999999432e-05, 9.916699999999723e-05, 9.94860000000028e-05, 9.933300000000006e-05, 9.913799999999862e-05, 9.998699999999583e-05, 9.975000000000261e-05, 9.969499999999687e-05, 9.980500000000142e-05, 0.00010002799999999507, 9.929200000000082e-05, 9.95410000000016e-05, 9.947200000000322e-05, 9.995800000000415e-05, 9.952700000000203e-05, 9.926400000000168e-05, 9.963899999999859e-05, 9.9513999999995e-05, 9.93060000000004e-05, 9.959699999999988e-05, 9.998599999999636e-05, 9.99860000000033e-05, 9.920799999999647e-05, 0.00010012499999999952, 9.997199999999679e-05, 9.93609999999992e-05, 9.945800000000365e-05, 0.00010005499999999473, 9.937499999999877e-05, 0.0001000410000000021, 9.917999999999733e-05, 9.959699999999988e-05, 0.0001000139999999955, 9.969400000000433e-05, 9.955600000000064e-05, 9.95280000000015e-05, 9.955500000000117e-05, 9.927800000000125e-05, 9.937499999999877e-05, 9.929099999999441e-05, 9.948599999999586e-05, 9.995799999999722e-05, 9.919400000000383e-05, 9.949999999999543e-05, 9.965299999999816e-05, 9.963899999999859e-05]</msg>
<status status="PASS" starttime="20201110 08:33:53.013" endtime="20201110 08:33:53.018"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.001" endtime="20201110 08:33:53.019"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.026" endtime="20201110 08:33:53.028"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:53.034" endtime="20201110 08:33:53.056"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.030" endtime="20201110 08:33:53.058"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.021" endtime="20201110 08:33:53.060"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.493" endtime="20201110 08:33:53.061"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.492" endtime="20201110 08:33:53.061"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.085" endtime="20201110 08:33:53.107"></status>
</kw>
<msg timestamp="20201110 08:33:53.108" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:53.081" endtime="20201110 08:33:53.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.115" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:53.111" endtime="20201110 08:33:53.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.117" endtime="20201110 08:33:53.121"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.074" endtime="20201110 08:33:53.122"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.068" endtime="20201110 08:33:53.124"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.141" endtime="20201110 08:33:53.478"></status>
</kw>
<msg timestamp="20201110 08:33:53.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042308708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042409125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:53.137" endtime="20201110 08:33:53.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042308708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042409125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:53.487" endtime="20201110 08:33:53.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.505" endtime="20201110 08:33:53.511"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.130" endtime="20201110 08:33:53.512"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.125" endtime="20201110 08:33:53.514"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:53.524" level="INFO">${RESULT} = [{'time': 0.042409125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010041699999999848, 'source_diff': 0.00010041699999999848}, {'time': 0.042541389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:53.515" endtime="20201110 08:33:53.525"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:53.554" level="INFO">${ACCURACY} = {'time': [0.042409125, 0.042541389, 0.042671653, 0.042798944, 0.042929208, 0.0430575, 0.043189764, 0.043324069, 0.043455403, 0.043586597, 0.043717847, 0.043850139, 0.043983431, 0.044117764, 0.04424597...</msg>
<status status="PASS" starttime="20201110 08:33:53.526" endtime="20201110 08:33:53.554"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.565" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201110 08:33:53.563" endtime="20201110 08:33:53.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.570" level="INFO">VALUE: [0.00010041699999999848, 0.00010044499999999762, 0.00010058399999999384, 0.00010031900000000149, 0.00010101400000000343, 0.00010061100000000045, 0.00010072199999999754, 0.00010109700000000138, 0.00010027799999999532, 0.00010095799999999822, 0.00010102799999999607, 0.00010075000000000361, 0.00010057000000000121, 0.00010104199999999564, 0.0001009159999999995, 0.00010091699999999898, 0.00010101400000000343, 0.00010111100000000095, 0.00010016699999999823, 0.0001003610000000002, 0.00010116599999999976, 0.0001001939999999979, 0.00010097199999999779, 0.0001003060000000014, 0.00010070900000000438, 0.00010047200000000422, 0.00010062500000000002, 0.00010020799999999747, 0.00010020899999999694, 0.00010076399999999625, 0.0001002359999999966, 0.00010047199999999729, 0.0001003610000000002, 0.00010104200000000257, 0.0001011809999999988, 0.00010076300000000371, 0.00010047199999999729, 0.00010081900000000199, 0.00010107000000000171, 0.00010077800000000275, 0.000101028000000003, 0.00010037499999999977, 0.0001009159999999995, 0.00010091699999999898, 0.00010034700000000063, 0.0001005559999999947, 0.00010115200000000019, 0.00010099999999999693, 0.00010072199999999754, 0.00010066699999999873]</msg>
<status status="PASS" starttime="20201110 08:33:53.567" endtime="20201110 08:33:53.572"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.556" endtime="20201110 08:33:53.573"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.580" endtime="20201110 08:33:53.582"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:53.588" endtime="20201110 08:33:53.610"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.584" endtime="20201110 08:33:53.611"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.575" endtime="20201110 08:33:53.613"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.063" endtime="20201110 08:33:53.613"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.062" endtime="20201110 08:33:53.614"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.636" endtime="20201110 08:33:53.656"></status>
</kw>
<msg timestamp="20201110 08:33:53.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:53.633" endtime="20201110 08:33:53.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:53.660" endtime="20201110 08:33:53.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.666" endtime="20201110 08:33:53.669"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.626" endtime="20201110 08:33:53.671"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.620" endtime="20201110 08:33:53.672"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.688" endtime="20201110 08:33:54.032"></status>
</kw>
<msg timestamp="20201110 08:33:54.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03990075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040002556, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:33:53.685" endtime="20201110 08:33:54.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03990075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040002556, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:33:54.042" endtime="20201110 08:33:54.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.061" endtime="20201110 08:33:54.066"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.678" endtime="20201110 08:33:54.068"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.674" endtime="20201110 08:33:54.069"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:54.080" level="INFO">${RESULT} = [{'time': 0.040002556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001018060000000029, 'source_diff': 0.0001018060000000029}, {'time': 0.040134792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:54.071" endtime="20201110 08:33:54.081"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:54.112" level="INFO">${ACCURACY} = {'time': [0.040002556, 0.040134792, 0.040266028, 0.040398278, 0.040532542, 0.040667806, 0.040802056, 0.040932306, 0.041060569, 0.041189806, 0.041320083, 0.041451347, 0.041582625, 0.041710875, 0.041844...</msg>
<status status="PASS" starttime="20201110 08:33:54.082" endtime="20201110 08:33:54.112"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.123" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201110 08:33:54.120" endtime="20201110 08:33:54.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.128" level="INFO">VALUE: [0.0001018060000000029, 0.00010193099999999955, 0.0001019860000000053, 0.00010183400000000203, 0.00010145899999999819, 0.00010205600000000314, 0.00010145900000000513, 0.00010150000000000436, 0.00010140200000000044, 0.00010133400000000153, 0.00010133300000000206, 0.0001020139999999975, 0.00010166699999999973, 0.00010140299999999991, 0.00010212500000000152, 0.00010122200000000497, 0.00010115299999999966, 0.00010169500000000581, 0.00010193000000000008, 0.0001015559999999957, 0.00010211099999999501, 0.00010208400000000228, 0.00010205600000000314, 0.00010190300000000041, 0.00010170899999999844, 0.00010161100000000145, 0.00010133299999999512, 0.00010199999999999793, 0.00010134700000000163, 0.00010215200000000119, 0.00010120799999999847, 0.00010159700000000188, 0.00010182000000000246, 0.0001019860000000053, 0.00010209699999999544, 0.0001016939999999994, 0.00010211100000000195, 0.00010206900000000324, 0.00010127699999999684, 0.00010126299999999727, 0.00010208400000000228, 0.00010119499999999837, 0.00010170799999999897, 0.00010188900000000084, 0.00010124999999999718, 0.00010129199999999589, 0.00010184700000000213, 0.00010216599999999382, 0.00010216600000000076, 0.00010190200000000094]</msg>
<status status="PASS" starttime="20201110 08:33:54.125" endtime="20201110 08:33:54.130"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.113" endtime="20201110 08:33:54.131"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.138" endtime="20201110 08:33:54.140"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:54.146" endtime="20201110 08:33:54.168"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.142" endtime="20201110 08:33:54.170"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.133" endtime="20201110 08:33:54.171"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.616" endtime="20201110 08:33:54.172"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.615" endtime="20201110 08:33:54.172"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.195" endtime="20201110 08:33:54.218"></status>
</kw>
<msg timestamp="20201110 08:33:54.219" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:54.192" endtime="20201110 08:33:54.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:54.222" endtime="20201110 08:33:54.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.228" endtime="20201110 08:33:54.232"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.185" endtime="20201110 08:33:54.234"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.179" endtime="20201110 08:33:54.235"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.252" endtime="20201110 08:33:54.597"></status>
</kw>
<msg timestamp="20201110 08:33:54.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041178986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041281403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:54.249" endtime="20201110 08:33:54.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041178986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041281403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:54.607" endtime="20201110 08:33:54.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.625" endtime="20201110 08:33:54.633"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.241" endtime="20201110 08:33:54.634"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.236" endtime="20201110 08:33:54.636"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:54.646" level="INFO">${RESULT} = [{'time': 0.041281403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010241700000000048, 'source_diff': 0.00010241700000000048}, {'time': 0.041416611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:54.637" endtime="20201110 08:33:54.647"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:54.677" level="INFO">${ACCURACY} = {'time': [0.041281403, 0.041416611, 0.041552819, 0.041685028, 0.041818278, 0.041953542, 0.042083694, 0.042218917, 0.042349125, 0.042483306, 0.042614528, 0.042748778, 0.042881, 0.043014264, 0.043147514...</msg>
<status status="PASS" starttime="20201110 08:33:54.648" endtime="20201110 08:33:54.678"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.688" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201110 08:33:54.686" endtime="20201110 08:33:54.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.694" level="INFO">VALUE: [0.00010241700000000048, 0.00010243000000000058, 0.00010302699999999859, 0.0001022359999999986, 0.00010284700000000313, 0.00010304200000000457, 0.00010220799999999947, 0.00010222299999999851, 0.00010220799999999947, 0.00010234799999999517, 0.00010227799999999732, 0.00010233400000000253, 0.00010277800000000475, 0.00010277800000000475, 0.00010237499999999483, 0.00010231899999999655, 0.00010299999999999893, 0.00010295800000000022, 0.00010229099999999741, 0.00010280499999999748, 0.00010291700000000098, 0.00010286099999999576, 0.00010276399999999825, 0.00010213899999999415, 0.00010247199999999929, 0.000102416000000001, 0.0001023339999999956, 0.00010286099999999576, 0.0001031810000000008, 0.00010302799999999807, 0.00010248599999999886, 0.00010295800000000022, 0.00010224999999999818, 0.00010243000000000058, 0.00010233300000000306, 0.00010254099999999766, 0.00010258399999999585, 0.00010261199999999499, 0.00010305500000000467, 0.00010301400000000543, 0.00010306900000000424, 0.00010270799999999997, 0.00010258399999999585, 0.00010252699999999809, 0.00010219499999999937, 0.00010313900000000209, 0.00010215300000000066, 0.0001026810000000003, 0.00010305600000000414, 0.00010241699999999354]</msg>
<status status="PASS" starttime="20201110 08:33:54.691" endtime="20201110 08:33:54.700"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.679" endtime="20201110 08:33:54.702"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.709" endtime="20201110 08:33:54.712"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:54.717" endtime="20201110 08:33:54.739"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.713" endtime="20201110 08:33:54.741"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.704" endtime="20201110 08:33:54.742"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.174" endtime="20201110 08:33:54.743"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.173" endtime="20201110 08:33:54.743"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.766" endtime="20201110 08:33:54.789"></status>
</kw>
<msg timestamp="20201110 08:33:54.790" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:54.763" endtime="20201110 08:33:54.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.796" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:54.792" endtime="20201110 08:33:54.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.799" endtime="20201110 08:33:54.803"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.756" endtime="20201110 08:33:54.804"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.750" endtime="20201110 08:33:54.806"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.823" endtime="20201110 08:33:55.170"></status>
</kw>
<msg timestamp="20201110 08:33:55.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041040903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041144639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:54.819" endtime="20201110 08:33:55.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041040903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041144639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:55.179" endtime="20201110 08:33:55.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.198" endtime="20201110 08:33:55.204"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.812" endtime="20201110 08:33:55.205"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.807" endtime="20201110 08:33:55.207"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:55.217" level="INFO">${RESULT} = [{'time': 0.041144639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001037360000000001, 'source_diff': 0.0001037360000000001}, {'time': 0.041280889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:55.208" endtime="20201110 08:33:55.218"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:55.248" level="INFO">${ACCURACY} = {'time': [0.041144639, 0.041280889, 0.041416083, 0.041548319, 0.041681569, 0.041815819, 0.041950069, 0.042085278, 0.042221514, 0.042356736, 0.042487972, 0.042622208, 0.042755431, 0.042891667, 0.043026...</msg>
<status status="PASS" starttime="20201110 08:33:55.220" endtime="20201110 08:33:55.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.259" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201110 08:33:55.257" endtime="20201110 08:33:55.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.265" level="INFO">VALUE: [0.0001037360000000001, 0.00010384700000000413, 0.00010408299999999787, 0.00010412500000000352, 0.00010377699999999934, 0.00010386099999999676, 0.00010386099999999676, 0.00010398599999999342, 0.00010352799999999857, 0.00010318000000000133, 0.0001040689999999983, 0.00010366600000000226, 0.00010377800000000575, 0.00010352799999999857, 0.00010379199999999839, 0.00010333300000000406, 0.00010326399999999875, 0.0001036940000000014, 0.000103513999999999, 0.00010343100000000105, 0.00010399999999999993, 0.00010381900000000499, 0.00010393000000000208, 0.00010349999999999943, 0.00010372300000000001, 0.00010372300000000001, 0.0001033060000000044, 0.00010413900000000309, 0.00010326399999999875, 0.00010395899999999375, 0.00010362500000000302, 0.00010383300000000456, 0.00010399999999999993, 0.0001040559999999982, 0.00010392999999999514, 0.00010377799999999882, 0.00010409799999999692, 0.00010377800000000575, 0.00010338900000000234, 0.00010343100000000105, 0.00010374999999999968, 0.0001031940000000009, 0.00010352699999999909, 0.00010347299999999976, 0.00010373699999999958, 0.00010366699999999479, 0.00010383299999999762, 0.00010345800000000072, 0.00010383300000000456, 0.0001032359999999996]</msg>
<status status="PASS" starttime="20201110 08:33:55.262" endtime="20201110 08:33:55.266"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.250" endtime="20201110 08:33:55.268"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.275" endtime="20201110 08:33:55.277"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:55.283" endtime="20201110 08:33:55.305"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.279" endtime="20201110 08:33:55.307"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.270" endtime="20201110 08:33:55.308"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.745" endtime="20201110 08:33:55.309"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.744" endtime="20201110 08:33:55.309"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.332" endtime="20201110 08:33:55.355"></status>
</kw>
<msg timestamp="20201110 08:33:55.356" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:55.329" endtime="20201110 08:33:55.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.362" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:55.358" endtime="20201110 08:33:55.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.365" endtime="20201110 08:33:55.368"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.322" endtime="20201110 08:33:55.370"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.316" endtime="20201110 08:33:55.372"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.388" endtime="20201110 08:33:55.736"></status>
</kw>
<msg timestamp="20201110 08:33:55.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041118528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041222875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:55.385" endtime="20201110 08:33:55.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041118528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041222875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:55.747" endtime="20201110 08:33:55.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.769" endtime="20201110 08:33:55.776"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.378" endtime="20201110 08:33:55.778"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.373" endtime="20201110 08:33:55.780"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:55.792" level="INFO">${RESULT} = [{'time': 0.041222875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010434699999999769, 'source_diff': 0.00010434699999999769}, {'time': 0.041358139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:55.782" endtime="20201110 08:33:55.792"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:55.823" level="INFO">${ACCURACY} = {'time': [0.041222875, 0.041358139, 0.041491319, 0.041623556, 0.041758792, 0.041891042, 0.042025319, 0.042158542, 0.042289833, 0.042427069, 0.042564306, 0.042701556, 0.042836806, 0.042973028, 0.043105...</msg>
<status status="PASS" starttime="20201110 08:33:55.794" endtime="20201110 08:33:55.823"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.834" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201110 08:33:55.832" endtime="20201110 08:33:55.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.840" level="INFO">VALUE: [0.00010434699999999769, 0.000104514, 0.00010427699999999984, 0.0001043339999999976, 0.00010425000000000018, 0.00010466700000000273, 0.00010475000000000068, 0.00010470900000000144, 0.00010454099999999966, 0.00010463799999999718, 0.00010441700000000248, 0.00010506999999999878, 0.00010443099999999511, 0.0001042360000000006, 0.00010454199999999914, 0.00010450000000000043, 0.00010430499999999898, 0.00010445800000000172, 0.00010477800000000675, 0.00010495900000000169, 0.00010420800000000147, 0.00010462499999999708, 0.00010505499999999973, 0.00010494500000000212, 0.0001050559999999992, 0.0001048610000000047, 0.00010465299999999622, 0.00010427699999999984, 0.00010483300000000556, 0.00010509699999999844, 0.00010472200000000154, 0.00010422200000000104, 0.00010422200000000104, 0.00010515300000000366, 0.00010462500000000402, 0.00010509699999999844, 0.00010430599999999846, 0.00010433299999999812, 0.00010483299999999862, 0.00010461099999999751, 0.00010430500000000592, 0.00010434699999999769, 0.00010508299999999887, 0.0001050559999999992, 0.00010487499999999733, 0.00010426399999999975, 0.00010494499999999518, 0.00010475000000000068, 0.00010416600000000276, 0.00010447200000000129]</msg>
<status status="PASS" starttime="20201110 08:33:55.837" endtime="20201110 08:33:55.841"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.825" endtime="20201110 08:33:55.843"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.850" endtime="20201110 08:33:55.852"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:55.858" endtime="20201110 08:33:55.880"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.853" endtime="20201110 08:33:55.882"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.845" endtime="20201110 08:33:55.883"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.311" endtime="20201110 08:33:55.884"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.310" endtime="20201110 08:33:55.884"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.907" endtime="20201110 08:33:55.929"></status>
</kw>
<msg timestamp="20201110 08:33:55.931" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:55.904" endtime="20201110 08:33:55.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.937" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:55.933" endtime="20201110 08:33:55.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.939" endtime="20201110 08:33:55.943"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.896" endtime="20201110 08:33:55.945"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.891" endtime="20201110 08:33:55.946"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.963" endtime="20201110 08:33:56.312"></status>
</kw>
<msg timestamp="20201110 08:33:56.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040825819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040931264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:55.960" endtime="20201110 08:33:56.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:56.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040825819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040931264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:56.321" endtime="20201110 08:33:56.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.340" endtime="20201110 08:33:56.345"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.952" endtime="20201110 08:33:56.347"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.947" endtime="20201110 08:33:56.348"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:56.359" level="INFO">${RESULT} = [{'time': 0.040931264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010544500000000262, 'source_diff': 0.00010544500000000262}, {'time': 0.041065486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:56.350" endtime="20201110 08:33:56.359"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:56.389" level="INFO">${ACCURACY} = {'time': [0.040931264, 0.041065486, 0.041199708, 0.041336931, 0.041475181, 0.041613431, 0.041748764, 0.041883944, 0.042020167, 0.042154389, 0.042290653, 0.042426861, 0.042563097, 0.042696417, 0.042829...</msg>
<status status="PASS" starttime="20201110 08:33:56.361" endtime="20201110 08:33:56.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:56.401" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201110 08:33:56.398" endtime="20201110 08:33:56.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:56.406" level="INFO">VALUE: [0.00010544500000000262, 0.00010595799999999628, 0.00010525000000000118, 0.00010554200000000014, 0.00010525000000000118, 0.0001055559999999997, 0.00010559699999999894, 0.00010575000000000168, 0.00010584799999999867, 0.00010600000000000193, 0.00010545899999999525, 0.0001051940000000029, 0.00010598600000000236, 0.00010597300000000226, 0.00010544399999999621, 0.00010527800000000032, 0.00010597200000000279, 0.00010584699999999919, 0.00010584699999999919, 0.00010608299999999987, 0.0001060690000000003, 0.00010527700000000084, 0.0001060560000000002, 0.0001053339999999986, 0.00010537499999999783, 0.00010595799999999628, 0.00010561099999999851, 0.0001053060000000064, 0.00010541699999999654, 0.00010520799999999553, 0.00010563900000000459, 0.00010593000000000408, 0.00010595799999999628, 0.00010563899999999765, 0.00010577800000000082, 0.0001055689999999998, 0.0001060560000000002, 0.000105514000000001, 0.00010526400000000075, 0.00010569399999999646, 0.00010575000000000168, 0.00010594500000000312, 0.00010552799999999363, 0.00010591700000000398, 0.00010579200000000039, 0.00010594500000000312, 0.00010541700000000348, 0.00010527800000000032, 0.00010527800000000032, 0.00010537499999999783]</msg>
<status status="PASS" starttime="20201110 08:33:56.403" endtime="20201110 08:33:56.408"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.391" endtime="20201110 08:33:56.409"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.416" endtime="20201110 08:33:56.418"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:56.424" endtime="20201110 08:33:56.446"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.420" endtime="20201110 08:33:56.448"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.411" endtime="20201110 08:33:56.449"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.886" endtime="20201110 08:33:56.450"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.885" endtime="20201110 08:33:56.450"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.473" endtime="20201110 08:33:56.496"></status>
</kw>
<msg timestamp="20201110 08:33:56.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:56.470" endtime="20201110 08:33:56.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:56.503" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:56.499" endtime="20201110 08:33:56.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.506" endtime="20201110 08:33:56.509"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.463" endtime="20201110 08:33:56.511"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.457" endtime="20201110 08:33:56.512"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.529" endtime="20201110 08:33:56.875"></status>
</kw>
<msg timestamp="20201110 08:33:56.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040814694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040921208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:56.526" endtime="20201110 08:33:56.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:56.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040814694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040921208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:56.884" endtime="20201110 08:33:56.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.903" endtime="20201110 08:33:56.911"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.519" endtime="20201110 08:33:56.912"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.514" endtime="20201110 08:33:56.914"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:56.924" level="INFO">${RESULT} = [{'time': 0.040921208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000106514000000002, 'source_diff': 0.000106514000000002}, {'time': 0.041055403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:33:56.915" endtime="20201110 08:33:56.925"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:56.956" level="INFO">${ACCURACY} = {'time': [0.040921208, 0.041055403, 0.041190681, 0.041327847, 0.041466042, 0.041604264, 0.0417415, 0.041880694, 0.042014861, 0.042149069, 0.042283292, 0.042422542, 0.042561778, 0.042700986, 0.04283419...</msg>
<status status="PASS" starttime="20201110 08:33:56.927" endtime="20201110 08:33:56.956"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:56.967" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201110 08:33:56.964" endtime="20201110 08:33:56.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:56.972" level="INFO">VALUE: [0.000106514000000002, 0.00010694499999999718, 0.0001065560000000007, 0.00010713899999999915, 0.00010675000000000268, 0.00010615300000000466, 0.00010704200000000164, 0.00010683300000000062, 0.0001070140000000025, 0.00010683300000000062, 0.0001067360000000031, 0.00010647300000000276, 0.0001070560000000012, 0.00010695800000000422, 0.00010613799999999868, 0.00010637499999999883, 0.0001067360000000031, 0.00010626400000000175, 0.00010629200000000089, 0.00010637499999999883, 0.00010677800000000182, 0.00010709700000000044, 0.00010663900000000559, 0.0001067360000000031, 0.0001062219999999961, 0.00010676400000000225, 0.00010648700000000233, 0.00010705599999999427, 0.00010680500000000148, 0.00010618000000000433, 0.00010668099999999736, 0.0001063889999999984, 0.0001061810000000038, 0.00010629100000000141, 0.00010709799999999992, 0.00010711100000000001, 0.00010651300000000252, 0.00010715199999999925, 0.00010648600000000286, 0.00010630499999999404, 0.00010687499999999933, 0.00010642999999999764, 0.00010711100000000001, 0.00010648600000000286, 0.00010659699999999994, 0.0001066940000000044, 0.00010640299999999797, 0.00010694400000000465, 0.00010637499999999883, 0.00010626399999999481]</msg>
<status status="PASS" starttime="20201110 08:33:56.969" endtime="20201110 08:33:56.974"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.957" endtime="20201110 08:33:56.975"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.982" endtime="20201110 08:33:56.985"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:56.990" endtime="20201110 08:33:57.013"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.986" endtime="20201110 08:33:57.014"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.977" endtime="20201110 08:33:57.016"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.452" endtime="20201110 08:33:57.016"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.451" endtime="20201110 08:33:57.017"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:57.040" endtime="20201110 08:33:57.062"></status>
</kw>
<msg timestamp="20201110 08:33:57.064" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:57.036" endtime="20201110 08:33:57.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:57.070" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:57.066" endtime="20201110 08:33:57.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:57.072" endtime="20201110 08:33:57.076"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.029" endtime="20201110 08:33:57.078"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.023" endtime="20201110 08:33:57.079"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:57.096" endtime="20201110 08:33:57.442"></status>
</kw>
<msg timestamp="20201110 08:33:57.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041088347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041195958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:57.092" endtime="20201110 08:33:57.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:57.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041088347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041195958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:57.452" endtime="20201110 08:33:57.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:57.471" endtime="20201110 08:33:57.476"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.085" endtime="20201110 08:33:57.478"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.080" endtime="20201110 08:33:57.479"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:57.490" level="INFO">${RESULT} = [{'time': 0.041195958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010761100000000051, 'source_diff': 0.00010761100000000051}, {'time': 0.041333194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:57.481" endtime="20201110 08:33:57.490"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:57.520" level="INFO">${ACCURACY} = {'time': [0.041195958, 0.041333194, 0.041472486, 0.041606694, 0.041746903, 0.041882167, 0.042021375, 0.042156625, 0.042292861, 0.042429083, 0.042566333, 0.042704556, 0.042839792, 0.042978, 0.043118222...</msg>
<status status="PASS" starttime="20201110 08:33:57.492" endtime="20201110 08:33:57.521"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:57.531" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201110 08:33:57.529" endtime="20201110 08:33:57.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:57.537" level="INFO">VALUE: [0.00010761100000000051, 0.00010797199999999785, 0.00010776400000000325, 0.00010719399999999796, 0.00010732000000000103, 0.00010793099999999861, 0.00010787500000000033, 0.00010808300000000187, 0.00010734700000000069, 0.00010780500000000248, 0.00010745799999999778, 0.00010777799999999588, 0.00010795900000000469, 0.00010813900000000015, 0.00010765299999999922, 0.00010740299999999897, 0.00010772200000000454, 0.00010798699999999689, 0.0001072219999999971, 0.00010747199999999735, 0.00010766699999999879, 0.00010727700000000284, 0.00010712499999999958, 0.00010808299999999493, 0.00010773699999999664, 0.00010795899999999775, 0.00010730600000000146, 0.0001078889999999999, 0.00010750000000000343, 0.00010791700000000598, 0.00010801399999999656, 0.0001078889999999999, 0.00010726399999999581, 0.00010745800000000472, 0.00010758299999999443, 0.00010755500000000223, 0.00010802799999999613, 0.00010729200000000189, 0.00010813900000000015, 0.00010762500000000008, 0.00010761100000000051, 0.00010795800000000522, 0.0001080419999999957, 0.00010808299999999493, 0.00010752799999999563, 0.00010723599999999667, 0.00010729199999999495, 0.00010722200000000404, 0.00010794399999999871, 0.00010733300000000112]</msg>
<status status="PASS" starttime="20201110 08:33:57.534" endtime="20201110 08:33:57.538"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.522" endtime="20201110 08:33:57.540"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:57.546" endtime="20201110 08:33:57.549"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:57.555" endtime="20201110 08:33:57.577"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.550" endtime="20201110 08:33:57.578"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.542" endtime="20201110 08:33:57.580"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.019" endtime="20201110 08:33:57.581"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.018" endtime="20201110 08:33:57.581"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:57.604" endtime="20201110 08:33:57.627"></status>
</kw>
<msg timestamp="20201110 08:33:57.628" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:57.601" endtime="20201110 08:33:57.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:57.634" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:57.630" endtime="20201110 08:33:57.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:57.637" endtime="20201110 08:33:57.640"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.593" endtime="20201110 08:33:57.642"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.587" endtime="20201110 08:33:57.643"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:57.660" endtime="20201110 08:33:58.013"></status>
</kw>
<msg timestamp="20201110 08:33:58.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040924819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041033694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:57.657" endtime="20201110 08:33:58.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:58.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040924819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041033694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:58.022" endtime="20201110 08:33:58.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.041" endtime="20201110 08:33:58.046"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.650" endtime="20201110 08:33:58.048"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.645" endtime="20201110 08:33:58.049"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:58.060" level="INFO">${RESULT} = [{'time': 0.041033694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010887500000000133, 'source_diff': 0.00010887500000000133}, {'time': 0.041171917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:58.051" endtime="20201110 08:33:58.060"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:58.091" level="INFO">${ACCURACY} = {'time': [0.041033694, 0.041171917, 0.041308153, 0.041445389, 0.041586639, 0.041722833, 0.041861069, 0.041997319, 0.042136556, 0.042274764, 0.042414986, 0.042556208, 0.042695431, 0.042837653, 0.042973...</msg>
<status status="PASS" starttime="20201110 08:33:58.062" endtime="20201110 08:33:58.091"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:58.102" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201110 08:33:58.100" endtime="20201110 08:33:58.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:58.107" level="INFO">VALUE: [0.00010887500000000133, 0.00010834800000000117, 0.00010865300000000022, 0.00010841699999999954, 0.00010833300000000212, 0.00010895799999999928, 0.00010908300000000287, 0.00010854099999999672, 0.00010861200000000099, 0.00010848599999999792, 0.00010850000000000443, 0.00010863900000000065, 0.00010827799999999638, 0.00010891700000000004, 0.00010880600000000296, 0.00010842999999999964, 0.0001087219999999986, 0.00010863899999999371, 0.00010845799999999878, 0.00010883299999999568, 0.00010858300000000237, 0.00010906899999999636, 0.00010899999999999799, 0.00010841700000000648, 0.00010918099999999986, 0.00010895799999999928, 0.00010838800000000093, 0.00010819399999999896, 0.00010867999999999989, 0.00010818000000000633, 0.00010905500000000373, 0.00010901399999999756, 0.00010865300000000022, 0.00010915300000000072, 0.0001088890000000009, 0.00010894499999999918, 0.00010891600000000057, 0.00010894499999999918, 0.00010830599999999552, 0.0001090549999999968, 0.00010867999999999989, 0.00010837500000000083, 0.00010907000000000278, 0.00010868099999999936, 0.00010894399999999971, 0.00010862499999999414, 0.00010901399999999756, 0.00010898599999999842, 0.00010842999999999964, 0.00010905500000000373]</msg>
<status status="PASS" starttime="20201110 08:33:58.104" endtime="20201110 08:33:58.109"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.093" endtime="20201110 08:33:58.110"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.117" endtime="20201110 08:33:58.120"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:58.125" endtime="20201110 08:33:58.147"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.121" endtime="20201110 08:33:58.149"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.112" endtime="20201110 08:33:58.151"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.583" endtime="20201110 08:33:58.151"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.582" endtime="20201110 08:33:58.152"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.175" endtime="20201110 08:33:58.198"></status>
</kw>
<msg timestamp="20201110 08:33:58.200" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:58.171" endtime="20201110 08:33:58.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:58.206" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:58.202" endtime="20201110 08:33:58.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.209" endtime="20201110 08:33:58.213"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.164" endtime="20201110 08:33:58.215"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.158" endtime="20201110 08:33:58.216"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.234" endtime="20201110 08:33:58.591"></status>
</kw>
<msg timestamp="20201110 08:33:58.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041067611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041177556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:58.230" endtime="20201110 08:33:58.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:58.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041067611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041177556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:58.601" endtime="20201110 08:33:58.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.620" endtime="20201110 08:33:58.625"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.223" endtime="20201110 08:33:58.627"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.217" endtime="20201110 08:33:58.628"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:58.639" level="INFO">${RESULT} = [{'time': 0.041177556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010994500000000018, 'source_diff': 0.00010994500000000018}, {'time': 0.041316778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:58.630" endtime="20201110 08:33:58.639"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:58.670" level="INFO">${ACCURACY} = {'time': [0.041177556, 0.041316778, 0.041453056, 0.041591264, 0.041729514, 0.041869736, 0.042008972, 0.042151236, 0.0422915, 0.042433736, 0.042575014, 0.042713278, 0.0428495, 0.042991806, 0.043131014,...</msg>
<status status="PASS" starttime="20201110 08:33:58.641" endtime="20201110 08:33:58.670"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:58.681" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201110 08:33:58.679" endtime="20201110 08:33:58.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:58.686" level="INFO">VALUE: [0.00010994500000000018, 0.00010969499999999993, 0.00010932000000000303, 0.00010986100000000276, 0.00010962500000000208, 0.00010991700000000104, 0.00010956899999999686, 0.00010966700000000079, 0.00010954200000000414, 0.00010997199999999985, 0.00010982000000000353, 0.00010944499999999968, 0.00010927799999999738, 0.00010932000000000303, 0.00010920799999999953, 0.0001100969999999965, 0.00011012499999999564, 0.00010926399999999781, 0.00010919499999999943, 0.00010926399999999781, 0.00010994500000000018, 0.00010966700000000079, 0.00010936100000000226, 0.00010970800000000003, 0.00010995800000000028, 0.00011006899999999736, 0.00010986099999999582, 0.00010990300000000147, 0.0001095560000000037, 0.00010976399999999831, 0.00010951399999999806, 0.00010999999999999899, 0.00010920800000000647, 0.00010977799999999788, 0.00010943100000000011, 0.00010924999999999824, 0.00010912499999999464, 0.00011016700000000129, 0.00010947299999999882, 0.0001097360000000061, 0.00010938800000000193, 0.00010947299999999882, 0.00011002800000000507, 0.00010987500000000233, 0.000109208999999999, 0.00010923599999999867, 0.00010944400000000021, 0.00010938899999999446, 0.00010965200000000175, 0.00010943100000000011]</msg>
<status status="PASS" starttime="20201110 08:33:58.683" endtime="20201110 08:33:58.688"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.672" endtime="20201110 08:33:58.690"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.696" endtime="20201110 08:33:58.699"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:58.704" endtime="20201110 08:33:58.726"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.700" endtime="20201110 08:33:58.728"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.691" endtime="20201110 08:33:58.730"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.154" endtime="20201110 08:33:58.730"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.153" endtime="20201110 08:33:58.731"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.754" endtime="20201110 08:33:58.777"></status>
</kw>
<msg timestamp="20201110 08:33:58.779" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:58.750" endtime="20201110 08:33:58.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:58.785" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:58.781" endtime="20201110 08:33:58.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.787" endtime="20201110 08:33:58.791"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.743" endtime="20201110 08:33:58.793"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.737" endtime="20201110 08:33:58.794"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.811" endtime="20201110 08:33:59.164"></status>
</kw>
<msg timestamp="20201110 08:33:59.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041048833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041159542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:58.807" endtime="20201110 08:33:59.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:59.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041048833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041159542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:59.174" endtime="20201110 08:33:59.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.192" endtime="20201110 08:33:59.200"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.800" endtime="20201110 08:33:59.201"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.795" endtime="20201110 08:33:59.203"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:59.213" level="INFO">${RESULT} = [{'time': 0.041159542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001107090000000005, 'source_diff': 0.0001107090000000005}, {'time': 0.041300764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:59.204" endtime="20201110 08:33:59.214"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:59.245" level="INFO">${ACCURACY} = {'time': [0.041159542, 0.041300764, 0.041443028, 0.041584306, 0.041727569, 0.041869847, 0.042012111, 0.042149389, 0.042289639, 0.042428903, 0.042568236, 0.042711431, 0.042851694, 0.042993986, 0.043134...</msg>
<status status="PASS" starttime="20201110 08:33:59.216" endtime="20201110 08:33:59.245"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:59.256" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201110 08:33:59.254" endtime="20201110 08:33:59.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:59.262" level="INFO">VALUE: [0.0001107090000000005, 0.00011062499999999614, 0.00011049999999999949, 0.00011107000000000478, 0.00011081899999999811, 0.00011073600000000017, 0.00011040299999999503, 0.00011052800000000557, 0.00011069499999999399, 0.00011052799999999863, 0.00011098600000000042, 0.00011073699999999964, 0.00011102699999999965, 0.00011030499999999804, 0.00011029199999999795, 0.00011041700000000154, 0.00011024999999999924, 0.0001110549999999988, 0.00011063799999999624, 0.00011047200000000035, 0.00011106999999999784, 0.00011091700000000204, 0.00011093100000000161, 0.00011047200000000035, 0.000110209, 0.00011098600000000042, 0.00011070800000000103, 0.00011076399999999931, 0.00011068100000000136, 0.00011086099999999682, 0.00011052799999999863, 0.00011112499999999664, 0.00011079100000000591, 0.00011088899999999596, 0.00011018100000000086, 0.0001105419999999982, 0.00011095800000000128, 0.00011095800000000128, 0.00011087500000000333, 0.00011037500000000283, 0.00011012499999999564, 0.00011104099999999922, 0.00011058299999999743, 0.00011030500000000498, 0.00011105599999999827, 0.0001104169999999946, 0.00011074999999999974, 0.00011032000000000403, 0.00011059800000000342, 0.00011049999999999949]</msg>
<status status="PASS" starttime="20201110 08:33:59.259" endtime="20201110 08:33:59.264"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.247" endtime="20201110 08:33:59.265"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.272" endtime="20201110 08:33:59.275"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:59.281" endtime="20201110 08:33:59.303"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.276" endtime="20201110 08:33:59.305"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.267" endtime="20201110 08:33:59.306"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.733" endtime="20201110 08:33:59.307"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.732" endtime="20201110 08:33:59.307"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.330" endtime="20201110 08:33:59.353"></status>
</kw>
<msg timestamp="20201110 08:33:59.354" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:59.327" endtime="20201110 08:33:59.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:59.361" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:59.357" endtime="20201110 08:33:59.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.363" endtime="20201110 08:33:59.367"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.319" endtime="20201110 08:33:59.368"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.314" endtime="20201110 08:33:59.370"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.387" endtime="20201110 08:33:59.734"></status>
</kw>
<msg timestamp="20201110 08:33:59.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041149681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041261403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:59.383" endtime="20201110 08:33:59.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:59.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041149681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041261403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:59.744" endtime="20201110 08:33:59.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.763" endtime="20201110 08:33:59.768"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.376" endtime="20201110 08:33:59.770"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.371" endtime="20201110 08:33:59.771"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:59.782" level="INFO">${RESULT} = [{'time': 0.041261403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001117220000000016, 'source_diff': 0.0001117220000000016}, {'time': 0.041405653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:59.773" endtime="20201110 08:33:59.782"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:59.813" level="INFO">${ACCURACY} = {'time': [0.041261403, 0.041405653, 0.041546958, 0.041688153, 0.041827389, 0.041966611, 0.042109889, 0.042249111, 0.042391361, 0.042533583, 0.042672833, 0.042817083, 0.042956306, 0.043100583, 0.043243...</msg>
<status status="PASS" starttime="20201110 08:33:59.784" endtime="20201110 08:33:59.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:59.824" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201110 08:33:59.821" endtime="20201110 08:33:59.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:59.829" level="INFO">VALUE: [0.0001117220000000016, 0.00011180599999999902, 0.00011165200000000375, 0.00011213899999999721, 0.00011148600000000092, 0.00011176400000000031, 0.00011143099999999517, 0.00011169399999999552, 0.0001115419999999992, 0.00011161099999999757, 0.00011168000000000289, 0.00011208299999999893, 0.00011168100000000236, 0.00011179099999999997, 0.00011216600000000382, 0.00011204100000000022, 0.00011158299999999843, 0.0001120549999999998, 0.00011131899999999861, 0.00011201400000000056, 0.00011158399999999791, 0.00011179199999999945, 0.00011211099999999807, 0.00011162500000000408, 0.00011131899999999861, 0.0001112220000000011, 0.00011169500000000193, 0.00011199999999999405, 0.00011197200000000185, 0.0001118340000000051, 0.00011197200000000185, 0.00011177800000000682, 0.00011123600000000067, 0.00011126399999999981, 0.00011191700000000304, 0.00011166700000000279, 0.00011211100000000501, 0.00011134799999999723, 0.0001114169999999956, 0.00011183299999999868, 0.00011175000000000074, 0.00011138899999999646, 0.00011152799999999963, 0.00011112499999999664, 0.00011154099999999972, 0.00011197200000000185, 0.00011200000000000099, 0.0001113890000000034, 0.00011194400000000271, 0.00011199999999999405]</msg>
<status status="PASS" starttime="20201110 08:33:59.826" endtime="20201110 08:33:59.837"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.814" endtime="20201110 08:33:59.839"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.845" endtime="20201110 08:33:59.848"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:59.854" endtime="20201110 08:33:59.876"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.849" endtime="20201110 08:33:59.877"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.841" endtime="20201110 08:33:59.879"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.309" endtime="20201110 08:33:59.880"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.308" endtime="20201110 08:33:59.880"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.903" endtime="20201110 08:33:59.926"></status>
</kw>
<msg timestamp="20201110 08:33:59.927" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:59.900" endtime="20201110 08:33:59.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:59.933" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:59.929" endtime="20201110 08:33:59.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.935" endtime="20201110 08:33:59.939"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.892" endtime="20201110 08:33:59.941"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.886" endtime="20201110 08:33:59.942"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.959" endtime="20201110 08:34:00.307"></status>
</kw>
<msg timestamp="20201110 08:34:00.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041034181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04114675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:33:59.956" endtime="20201110 08:34:00.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:00.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041034181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04114675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:00.317" endtime="20201110 08:34:00.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.336" endtime="20201110 08:34:00.341"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.948" endtime="20201110 08:34:00.343"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.944" endtime="20201110 08:34:00.345"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:00.355" level="INFO">${RESULT} = [{'time': 0.04114675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011256899999999986, 'source_diff': 0.00011256899999999986}, {'time': 0.041289028, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201110 08:34:00.346" endtime="20201110 08:34:00.356"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:00.386" level="INFO">${ACCURACY} = {'time': [0.04114675, 0.041289028, 0.041435292, 0.041577528, 0.041720778, 0.041866042, 0.04200525, 0.0421455, 0.04229075, 0.042435014, 0.042576319, 0.0427215, 0.042865722, 0.043005986, 0.043146236, 0....</msg>
<status status="PASS" starttime="20201110 08:34:00.357" endtime="20201110 08:34:00.386"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:00.397" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201110 08:34:00.395" endtime="20201110 08:34:00.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:00.402" level="INFO">VALUE: [0.00011256899999999986, 0.0001129169999999971, 0.00011305600000000027, 0.0001123890000000044, 0.00011234699999999875, 0.00011229199999999995, 0.00011227800000000038, 0.00011281900000000011, 0.00011300000000000199, 0.00011220800000000253, 0.00011251300000000158, 0.00011279200000000045, 0.00011302800000000113, 0.0001127220000000026, 0.00011219399999999602, 0.00011241700000000354, 0.00011286099999999882, 0.0001125420000000002, 0.0001123890000000044, 0.00011277800000000088, 0.00011295899999999581, 0.00011312499999999864, 0.00011247200000000235, 0.00011241599999999713, 0.00011316700000000429, 0.00011291700000000404, 0.00011266700000000379, 0.00011299999999999505, 0.00011302800000000113, 0.00011231899999999961, 0.0001122499999999943, 0.00011269399999999652, 0.00011284699999999925, 0.00011293000000000414, 0.00011297199999999591, 0.00011248600000000192, 0.0001130969999999995, 0.00011295899999999581, 0.0001130420000000007, 0.00011229199999999995, 0.00011301400000000156, 0.00011284699999999925, 0.00011240299999999703, 0.00011245900000000225, 0.00011301300000000208, 0.00011286099999999882, 0.00011241599999999713, 0.00011263899999999771, 0.00011225000000000124, 0.00011283299999999968]</msg>
<status status="PASS" starttime="20201110 08:34:00.399" endtime="20201110 08:34:00.404"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.388" endtime="20201110 08:34:00.406"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.412" endtime="20201110 08:34:00.415"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:00.421" endtime="20201110 08:34:00.442"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.416" endtime="20201110 08:34:00.444"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.407" endtime="20201110 08:34:00.446"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.882" endtime="20201110 08:34:00.446"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.881" endtime="20201110 08:34:00.447"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.470" endtime="20201110 08:34:00.493"></status>
</kw>
<msg timestamp="20201110 08:34:00.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:00.466" endtime="20201110 08:34:00.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:00.500" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:00.496" endtime="20201110 08:34:00.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.502" endtime="20201110 08:34:00.506"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.459" endtime="20201110 08:34:00.508"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.453" endtime="20201110 08:34:00.509"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.526" endtime="20201110 08:34:00.873"></status>
</kw>
<msg timestamp="20201110 08:34:00.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040920417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04103375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:00.522" endtime="20201110 08:34:00.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:00.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040920417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04103375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:00.882" endtime="20201110 08:34:00.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.901" endtime="20201110 08:34:00.906"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.515" endtime="20201110 08:34:00.908"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.511" endtime="20201110 08:34:00.910"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:00.920" level="INFO">${RESULT} = [{'time': 0.04103375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011333300000000018, 'source_diff': 0.00011333300000000018}, {'time': 0.041179056, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201110 08:34:00.911" endtime="20201110 08:34:00.921"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:00.951" level="INFO">${ACCURACY} = {'time': [0.04103375, 0.041179056, 0.041323361, 0.041463653, 0.041606917, 0.041748167, 0.041890417, 0.042034722, 0.042179986, 0.042321278, 0.042461528, 0.042603778, 0.042748069, 0.042889347, 0.0430306...</msg>
<status status="PASS" starttime="20201110 08:34:00.922" endtime="20201110 08:34:00.952"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:00.962" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201110 08:34:00.960" endtime="20201110 08:34:00.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:00.967" level="INFO">VALUE: [0.00011333300000000018, 0.00011384799999999973, 0.00011327800000000138, 0.00011348600000000292, 0.00011338899999999846, 0.00011358399999999991, 0.00011416699999999835, 0.00011323599999999573, 0.00011373600000000317, 0.00011363899999999871, 0.00011340299999999803, 0.00011351400000000206, 0.00011365199999999881, 0.00011369400000000446, 0.00011370800000000403, 0.00011329200000000095, 0.00011416699999999835, 0.00011337500000000583, 0.0001132220000000031, 0.00011327799999999444, 0.00011358300000000043, 0.00011377799999999494, 0.00011350000000000249, 0.00011322199999999616, 0.00011347200000000335, 0.00011384700000000025, 0.00011384700000000025, 0.00011416599999999888, 0.00011393099999999767, 0.00011338899999999846, 0.00011351399999999512, 0.00011402700000000265, 0.00011395800000000428, 0.00011363900000000565, 0.00011349999999999555, 0.00011334699999999975, 0.00011381899999999417, 0.00011356900000000086, 0.00011397200000000385, 0.00011320899999999606, 0.0001140550000000018, 0.00011415299999999878, 0.00011326400000000181, 0.00011334799999999923, 0.00011362499999999914, 0.0001135550000000013, 0.00011340299999999803, 0.0001139169999999981, 0.00011330600000000052, 0.00011330600000000052]</msg>
<status status="PASS" starttime="20201110 08:34:00.964" endtime="20201110 08:34:00.969"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.953" endtime="20201110 08:34:00.971"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.977" endtime="20201110 08:34:00.980"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:00.986" endtime="20201110 08:34:01.008"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.981" endtime="20201110 08:34:01.010"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.973" endtime="20201110 08:34:01.011"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.449" endtime="20201110 08:34:01.012"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.448" endtime="20201110 08:34:01.012"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:01.035" endtime="20201110 08:34:01.058"></status>
</kw>
<msg timestamp="20201110 08:34:01.059" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:01.032" endtime="20201110 08:34:01.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:01.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:01.061" endtime="20201110 08:34:01.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:01.068" endtime="20201110 08:34:01.072"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.024" endtime="20201110 08:34:01.073"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.018" endtime="20201110 08:34:01.075"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:01.092" endtime="20201110 08:34:01.449"></status>
</kw>
<msg timestamp="20201110 08:34:01.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041182528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041297292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:01.088" endtime="20201110 08:34:01.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:01.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041182528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041297292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:01.458" endtime="20201110 08:34:01.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:01.477" endtime="20201110 08:34:01.484"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.081" endtime="20201110 08:34:01.486"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.076" endtime="20201110 08:34:01.487"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:01.497" level="INFO">${RESULT} = [{'time': 0.041297292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011476399999999637, 'source_diff': 0.00011476399999999637}, {'time': 0.041438597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:01.489" endtime="20201110 08:34:01.498"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:01.527" level="INFO">${ACCURACY} = {'time': [0.041297292, 0.041438597, 0.041584889, 0.041732194, 0.041877486, 0.042020778, 0.042165056, 0.042306333, 0.042448611, 0.042593889, 0.042738208, 0.042883528, 0.043030833, 0.043176125, 0.043323...</msg>
<status status="PASS" starttime="20201110 08:34:01.499" endtime="20201110 08:34:01.527"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:01.538" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201110 08:34:01.536" endtime="20201110 08:34:01.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:01.543" level="INFO">VALUE: [0.00011476399999999637, 0.00011456900000000186, 0.00011458300000000143, 0.00011461100000000057, 0.0001143749999999999, 0.00011508400000000141, 0.00011448699999999645, 0.00011441599999999913, 0.00011426399999999587, 0.00011498600000000442, 0.00011488899999999996, 0.00011470899999999756, 0.00011426399999999587, 0.00011519400000000596, 0.00011447200000000435, 0.00011448599999999698, 0.00011438799999999999, 0.00011497199999999791, 0.00011448599999999698, 0.00011497199999999791, 0.00011433300000000118, 0.00011431900000000161, 0.00011519399999999902, 0.00011505600000000227, 0.00011518099999999892, 0.00011430500000000204, 0.00011419399999999802, 0.00011434800000000023, 0.00011472300000000407, 0.00011415199999999931, 0.00011497199999999791, 0.00011497199999999791, 0.00011438899999999946, 0.00011427800000000238, 0.0001148620000000003, 0.0001143749999999999, 0.00011497200000000485, 0.00011490299999999953, 0.00011494399999999877, 0.00011434700000000075, 0.0001150420000000027, 0.00011490299999999953, 0.00011498700000000389, 0.00011459800000000048, 0.00011416699999999835, 0.00011433300000000118, 0.00011420799999999759, 0.00011475000000000374, 0.0001145829999999945, 0.00011501400000000356]</msg>
<status status="PASS" starttime="20201110 08:34:01.540" endtime="20201110 08:34:01.545"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.529" endtime="20201110 08:34:01.546"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:01.553" endtime="20201110 08:34:01.555"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:01.561" endtime="20201110 08:34:01.583"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.556" endtime="20201110 08:34:01.584"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.548" endtime="20201110 08:34:01.586"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.014" endtime="20201110 08:34:01.586"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.013" endtime="20201110 08:34:01.587"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:01.610" endtime="20201110 08:34:01.632"></status>
</kw>
<msg timestamp="20201110 08:34:01.634" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:01.607" endtime="20201110 08:34:01.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:01.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:01.636" endtime="20201110 08:34:01.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:01.642" endtime="20201110 08:34:01.645"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.600" endtime="20201110 08:34:01.647"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.593" endtime="20201110 08:34:01.648"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:01.665" endtime="20201110 08:34:02.014"></status>
</kw>
<msg timestamp="20201110 08:34:02.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041112236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041228125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:01.661" endtime="20201110 08:34:02.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041112236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041228125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:02.023" endtime="20201110 08:34:02.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.041" endtime="20201110 08:34:02.047"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.654" endtime="20201110 08:34:02.048"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.650" endtime="20201110 08:34:02.050"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:02.060" level="INFO">${RESULT} = [{'time': 0.041228125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011588899999999402, 'source_diff': 0.00011588899999999402}, {'time': 0.041375403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:02.051" endtime="20201110 08:34:02.061"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:02.090" level="INFO">${ACCURACY} = {'time': [0.041228125, 0.041375403, 0.041520639, 0.041664889, 0.041809139, 0.041951417, 0.042097667, 0.042242917, 0.042386167, 0.042532431, 0.042677639, 0.042822889, 0.042968139, 0.043113403, 0.043256...</msg>
<status status="PASS" starttime="20201110 08:34:02.062" endtime="20201110 08:34:02.090"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.101" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201110 08:34:02.098" endtime="20201110 08:34:02.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.106" level="INFO">VALUE: [0.00011588899999999402, 0.00011540300000000003, 0.00011568099999999942, 0.0001154169999999996, 0.00011569499999999899, 0.0001152499999999973, 0.00011568099999999942, 0.0001161249999999947, 0.00011607000000000284, 0.00011563900000000071, 0.00011612500000000164, 0.0001158750000000014, 0.00011530600000000252, 0.00011602800000000413, 0.00011533300000000218, 0.0001153750000000009, 0.00011543099999999917, 0.00011606899999999643, 0.00011540200000000056, 0.00011573599999999823, 0.00011545899999999831, 0.00011544499999999874, 0.0001155699999999954, 0.00011561099999999463, 0.00011570899999999856, 0.00011582000000000259, 0.0001161249999999947, 0.00011520800000000553, 0.00011525000000000424, 0.00011527699999999697, 0.00011573600000000517, 0.00011580500000000354, 0.00011572299999999813, 0.0001159170000000001, 0.0001159170000000001, 0.00011604099999999729, 0.00011565200000000081, 0.00011593099999999967, 0.00011616600000000088, 0.00011604199999999676, 0.00011516699999999935, 0.00011598599999999848, 0.00011604100000000422, 0.00011519399999999902, 0.00011595799999999934, 0.00011523599999999773, 0.00011594499999999924, 0.00011552800000000363, 0.00011611100000000207, 0.00011533300000000218]</msg>
<status status="PASS" starttime="20201110 08:34:02.103" endtime="20201110 08:34:02.108"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.092" endtime="20201110 08:34:02.109"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.115" endtime="20201110 08:34:02.118"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:02.124" endtime="20201110 08:34:02.145"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.119" endtime="20201110 08:34:02.147"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.111" endtime="20201110 08:34:02.148"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.589" endtime="20201110 08:34:02.149"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.588" endtime="20201110 08:34:02.149"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.172" endtime="20201110 08:34:02.194"></status>
</kw>
<msg timestamp="20201110 08:34:02.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:02.168" endtime="20201110 08:34:02.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.202" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:02.198" endtime="20201110 08:34:02.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.204" endtime="20201110 08:34:02.208"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.161" endtime="20201110 08:34:02.210"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.156" endtime="20201110 08:34:02.211"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.228" endtime="20201110 08:34:02.572"></status>
</kw>
<msg timestamp="20201110 08:34:02.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039817986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039934208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:02.224" endtime="20201110 08:34:02.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039817986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039934208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:02.581" endtime="20201110 08:34:02.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.600" endtime="20201110 08:34:02.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.217" endtime="20201110 08:34:02.607"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.213" endtime="20201110 08:34:02.609"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:02.619" level="INFO">${RESULT} = [{'time': 0.039934208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011622199999999916, 'source_diff': 0.00011622199999999916}, {'time': 0.040083444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:02.610" endtime="20201110 08:34:02.619"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:02.649" level="INFO">${ACCURACY} = {'time': [0.039934208, 0.040083444, 0.040231764, 0.040375986, 0.040519236, 0.040668486, 0.040816764, 0.040964028, 0.041110264, 0.041258514, 0.041405833, 0.041556097, 0.041705361, 0.041852667, 0.042002...</msg>
<status status="PASS" starttime="20201110 08:34:02.621" endtime="20201110 08:34:02.649"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.660" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201110 08:34:02.657" endtime="20201110 08:34:02.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.665" level="INFO">VALUE: [0.00011622199999999916, 0.00011676300000000583, 0.00011712500000000264, 0.0001163750000000019, 0.00011619400000000002, 0.0001162499999999983, 0.00011643100000000017, 0.00011705599999999733, 0.000116597000000003, 0.00011705600000000427, 0.00011690200000000206, 0.00011706899999999743, 0.00011697199999999991, 0.00011636100000000232, 0.000117082999999997, 0.00011654100000000472, 0.00011715299999999484, 0.00011644499999999974, 0.00011695899999999981, 0.00011629099999999754, 0.00011715200000000231, 0.0001163750000000019, 0.00011665299999999434, 0.00011686100000000282, 0.00011640300000000103, 0.00011669400000000052, 0.000117082999999997, 0.00011644499999999974, 0.00011659800000000248, 0.00011719400000000102, 0.00011673599999999923, 0.00011644400000000027, 0.00011629199999999701, 0.00011699999999999905, 0.00011676400000000531, 0.00011665299999999434, 0.00011698599999999948, 0.00011713899999999527, 0.00011695899999999981, 0.00011662500000000214, 0.00011697299999999938, 0.00011644400000000027, 0.00011643100000000017, 0.00011712500000000264, 0.0001164170000000006, 0.00011680600000000402, 0.00011673600000000617, 0.00011681999999999665, 0.00011634800000000223, 0.00011632000000000309]</msg>
<status status="PASS" starttime="20201110 08:34:02.662" endtime="20201110 08:34:02.666"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.651" endtime="20201110 08:34:02.668"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.674" endtime="20201110 08:34:02.677"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:02.682" endtime="20201110 08:34:02.704"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.678" endtime="20201110 08:34:02.706"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.670" endtime="20201110 08:34:02.707"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.152" endtime="20201110 08:34:02.708"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.150" endtime="20201110 08:34:02.708"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.731" endtime="20201110 08:34:02.753"></status>
</kw>
<msg timestamp="20201110 08:34:02.754" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:02.727" endtime="20201110 08:34:02.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.760" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:02.756" endtime="20201110 08:34:02.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.762" endtime="20201110 08:34:02.766"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.720" endtime="20201110 08:34:02.768"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.715" endtime="20201110 08:34:02.769"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.785" endtime="20201110 08:34:03.132"></status>
</kw>
<msg timestamp="20201110 08:34:03.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039955111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040072472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:02.782" endtime="20201110 08:34:03.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:03.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039955111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040072472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:03.141" endtime="20201110 08:34:03.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.159" endtime="20201110 08:34:03.164"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.775" endtime="20201110 08:34:03.166"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.770" endtime="20201110 08:34:03.167"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:03.177" level="INFO">${RESULT} = [{'time': 0.040072472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011736099999999638, 'source_diff': 0.00011736099999999638}, {'time': 0.040221778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:03.169" endtime="20201110 08:34:03.178"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:03.208" level="INFO">${ACCURACY} = {'time': [0.040072472, 0.040221778, 0.040370069, 0.040515347, 0.040665639, 0.040812931, 0.040961222, 0.041110542, 0.041260847, 0.041412153, 0.041558403, 0.041707694, 0.041855972, 0.042001264, 0.042147...</msg>
<status status="PASS" starttime="20201110 08:34:03.179" endtime="20201110 08:34:03.209"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:03.219" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201110 08:34:03.217" endtime="20201110 08:34:03.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:03.224" level="INFO">VALUE: [0.00011736099999999638, 0.00011734699999999681, 0.0001179300000000022, 0.00011768000000000195, 0.00011790300000000253, 0.0001177499999999998, 0.00011819399999999508, 0.00011754199999999826, 0.00011738900000000246, 0.00011822200000000116, 0.00011794500000000124, 0.00011740199999999562, 0.0001177499999999998, 0.00011802800000000613, 0.00011738900000000246, 0.00011726399999999887, 0.00011787499999999645, 0.00011743100000000117, 0.00011734699999999681, 0.00011733400000000366, 0.00011751399999999912, 0.0001176249999999962, 0.0001181249999999967, 0.00011776399999999937, 0.00011772200000000066, 0.00011770900000000056, 0.00011715200000000231, 0.0001174579999999939, 0.00011766699999999491, 0.00011734799999999629, 0.0001181249999999967, 0.00011754199999999826, 0.00011784699999999732, 0.00011765300000000228, 0.00011801399999999962, 0.00011806899999999843, 0.00011788900000000296, 0.00011734699999999681, 0.0001177229999999932, 0.00011752799999999869, 0.00011727800000000538, 0.00011783400000000416, 0.00011786199999999636, 0.00011779099999999904, 0.00011749999999999955, 0.00011726399999999887, 0.00011727699999999897, 0.00011791699999999516, 0.00011755599999999783, 0.00011749999999999955]</msg>
<status status="PASS" starttime="20201110 08:34:03.222" endtime="20201110 08:34:03.226"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.210" endtime="20201110 08:34:03.228"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.234" endtime="20201110 08:34:03.237"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:03.242" endtime="20201110 08:34:03.264"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.238" endtime="20201110 08:34:03.266"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.229" endtime="20201110 08:34:03.267"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.710" endtime="20201110 08:34:03.268"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.709" endtime="20201110 08:34:03.268"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.290" endtime="20201110 08:34:03.313"></status>
</kw>
<msg timestamp="20201110 08:34:03.314" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:03.287" endtime="20201110 08:34:03.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:03.320" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:03.316" endtime="20201110 08:34:03.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.322" endtime="20201110 08:34:03.326"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.280" endtime="20201110 08:34:03.328"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.274" endtime="20201110 08:34:03.329"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.345" endtime="20201110 08:34:03.691"></status>
</kw>
<msg timestamp="20201110 08:34:03.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040066458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04018475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:03.342" endtime="20201110 08:34:03.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:03.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040066458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04018475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:03.701" endtime="20201110 08:34:03.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.719" endtime="20201110 08:34:03.726"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.335" endtime="20201110 08:34:03.727"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.330" endtime="20201110 08:34:03.729"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:03.739" level="INFO">${RESULT} = [{'time': 0.04018475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011829199999999901, 'source_diff': 0.00011829199999999901}, {'time': 0.040337, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:34:03.731" endtime="20201110 08:34:03.740"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:03.769" level="INFO">${ACCURACY} = {'time': [0.04018475, 0.040337, 0.040486208, 0.040633486, 0.04077975, 0.040926014, 0.041077208, 0.041223472, 0.041373722, 0.041522986, 0.041672236, 0.041817486, 0.041964736, 0.042110958, 0.042256208, ...</msg>
<status status="PASS" starttime="20201110 08:34:03.741" endtime="20201110 08:34:03.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:03.780" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201110 08:34:03.777" endtime="20201110 08:34:03.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:03.785" level="INFO">VALUE: [0.00011829199999999901, 0.00011905599999999933, 0.00011904100000000029, 0.0001188750000000044, 0.00011834699999999782, 0.0001189029999999966, 0.00011833299999999825, 0.00011867999999999601, 0.00011879100000000004, 0.00011836099999999738, 0.00011916700000000335, 0.00011844400000000227, 0.00011873600000000123, 0.0001182500000000003, 0.00011836100000000432, 0.00011906899999999943, 0.00011834699999999782, 0.00011822300000000063, 0.00011886100000000482, 0.00011880599999999908, 0.00011909699999999857, 0.00011865300000000328, 0.00011841599999999619, 0.00011897199999999497, 0.00011834699999999782, 0.00011862500000000414, 0.00011901400000000062, 0.00011877799999999994, 0.00011906899999999943, 0.0001182500000000003, 0.00011891699999999616, 0.00011816699999999541, 0.00011897199999999497, 0.00011830599999999858, 0.00011909699999999857, 0.00011829099999999954, 0.0001191249999999977, 0.00011823600000000073, 0.00011829099999999954, 0.00011854199999999926, 0.00011886100000000482, 0.00011854099999999979, 0.00011915300000000378, 0.00011844500000000174, 0.00011847199999999447, 0.0001184300000000027, 0.00011833300000000518, 0.00011900000000000105, 0.00011848600000000098, 0.00011886099999999789]</msg>
<status status="PASS" starttime="20201110 08:34:03.782" endtime="20201110 08:34:03.786"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.771" endtime="20201110 08:34:03.788"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.795" endtime="20201110 08:34:03.798"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:03.804" endtime="20201110 08:34:03.825"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.799" endtime="20201110 08:34:03.827"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.790" endtime="20201110 08:34:03.829"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.270" endtime="20201110 08:34:03.829"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.269" endtime="20201110 08:34:03.830"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:07.560" endtime="20201110 08:34:03.830"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:03.840" endtime="20201110 08:34:03.861"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.835" endtime="20201110 08:34:03.863"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.833" endtime="20201110 08:34:03.864"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201110 08:33:07.433" endtime="20201110 08:34:03.864" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:03.881" endtime="20201110 08:34:03.903"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.877" endtime="20201110 08:34:03.904"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.938" endtime="20201110 08:34:03.954"></status>
</kw>
<msg timestamp="20201110 08:34:03.955" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:03.933" endtime="20201110 08:34:03.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:03.961" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:03.957" endtime="20201110 08:34:03.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:34:03.967" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:34:03.963" endtime="20201110 08:34:03.968"></status>
</kw>
<status status="FAIL" starttime="20201110 08:34:03.926" endtime="20201110 08:34:03.970"></status>
</kw>
<status status="FAIL" starttime="20201110 08:34:03.920" endtime="20201110 08:34:03.972"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.917" endtime="20201110 08:34:03.972"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:34:03.980" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:34:03.978" endtime="20201110 08:34:03.981"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.974" endtime="20201110 08:34:03.981"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.916" endtime="20201110 08:34:03.981"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.914" endtime="20201110 08:34:03.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.983" endtime="20201110 08:34:03.987"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.910" endtime="20201110 08:34:03.988"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.906" endtime="20201110 08:34:03.990"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.874" endtime="20201110 08:34:03.990"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.016" endtime="20201110 08:34:04.031"></status>
</kw>
<msg timestamp="20201110 08:34:04.033" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:04.012" endtime="20201110 08:34:04.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:04.035" endtime="20201110 08:34:04.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.041" endtime="20201110 08:34:04.045"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.005" endtime="20201110 08:34:04.046"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.999" endtime="20201110 08:34:04.048"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.064" endtime="20201110 08:34:04.410"></status>
</kw>
<msg timestamp="20201110 08:34:04.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.127777569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.127799375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:04.061" endtime="20201110 08:34:04.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.127777569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.127799375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:04.420" endtime="20201110 08:34:04.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.440" endtime="20201110 08:34:04.444"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.054" endtime="20201110 08:34:04.445"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.049" endtime="20201110 08:34:04.447"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:04.457" level="INFO">${RESULT} = [{'time': 0.127799375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1805999999985337e-05, 'source_diff': 2.1805999999985337e-05}, {'time': 0.12782925, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201110 08:34:04.448" endtime="20201110 08:34:04.458"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:04.490" level="INFO">${ACCURACY} = {'time': [0.127799375, 0.12782925, 0.127860375, 0.127887431, 0.1279195, 0.127950444, 0.127979514, 0.128008611, 0.128035597, 0.128063736, 0.128091708, 0.128122792, 0.128153806, 0.128182889, 0.128209972...</msg>
<status status="PASS" starttime="20201110 08:34:04.460" endtime="20201110 08:34:04.490"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.501" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201110 08:34:04.498" endtime="20201110 08:34:04.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.506" level="INFO">VALUE: [2.1805999999985337e-05, 2.1582999999991692e-05, 2.1068999999984683e-05, 2.1097999999997175e-05, 2.1305999999998715e-05, 2.1068999999984683e-05, 2.170799999998141e-05, 2.1250000000000435e-05, 2.1750000000014813e-05, 2.1750000000014813e-05, 2.159700000001208e-05, 2.1473000000021836e-05, 2.1750000000014813e-05, 2.0860999999983143e-05, 2.0916000000009705e-05, 2.1014000000013633e-05, 2.14169999999958e-05, 2.1596999999984323e-05, 2.1749999999987057e-05, 2.143099999998843e-05, 2.108300000000507e-05, 2.1764000000007444e-05, 2.1250000000000435e-05, 2.1402000000003696e-05, 2.1764000000007444e-05, 2.140300000000317e-05, 2.1582999999991692e-05, 2.1762999999980215e-05, 2.140300000000317e-05, 2.1596999999984323e-05, 2.17369999999939e-05, 2.14169999999958e-05, 2.1263999999993066e-05, 2.1429999999988958e-05, 2.10969999999977e-05, 2.1764000000007444e-05, 2.1263999999993066e-05, 2.1582999999991692e-05, 2.1014000000013633e-05, 2.1916999999982423e-05, 2.1930000000003336e-05, 2.1583000000019448e-05, 2.1250000000000435e-05, 2.108300000000507e-05, 2.1083999999976788e-05, 2.159700000001208e-05, 2.109800000002493e-05, 2.134700000000489e-05, 2.0930000000002336e-05, 2.0916000000009705e-05]</msg>
<status status="PASS" starttime="20201110 08:34:04.503" endtime="20201110 08:34:04.507"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.492" endtime="20201110 08:34:04.509"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.515" endtime="20201110 08:34:04.518"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:04.523" endtime="20201110 08:34:04.545"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.519" endtime="20201110 08:34:04.547"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.511" endtime="20201110 08:34:04.548"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.994" endtime="20201110 08:34:04.549"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.993" endtime="20201110 08:34:04.550"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.572" endtime="20201110 08:34:04.588"></status>
</kw>
<msg timestamp="20201110 08:34:04.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:04.569" endtime="20201110 08:34:04.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.595" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:04.591" endtime="20201110 08:34:04.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.598" endtime="20201110 08:34:04.602"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.562" endtime="20201110 08:34:04.604"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.556" endtime="20201110 08:34:04.605"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.625" endtime="20201110 08:34:04.963"></status>
</kw>
<msg timestamp="20201110 08:34:04.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041069639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041091056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:04.621" endtime="20201110 08:34:04.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041069639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041091056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:04.973" endtime="20201110 08:34:04.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.992" endtime="20201110 08:34:04.996"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.613" endtime="20201110 08:34:04.997"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.606" endtime="20201110 08:34:04.999"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:05.012" level="INFO">${RESULT} = [{'time': 0.041091056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.141700000000274e-05, 'source_diff': 2.141700000000274e-05}, {'time': 0.041120153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:05.001" endtime="20201110 08:34:05.013"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:05.045" level="INFO">${ACCURACY} = {'time': [0.041091056, 0.041120153, 0.041151208, 0.041177264, 0.041208347, 0.041234306, 0.041262431, 0.041288389, 0.041315444, 0.041341514, 0.041367639, 0.041393611, 0.04142375, 0.041451819, 0.0414788...</msg>
<status status="PASS" starttime="20201110 08:34:05.014" endtime="20201110 08:34:05.046"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:05.056" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201110 08:34:05.054" endtime="20201110 08:34:05.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:05.062" level="INFO">VALUE: [2.141700000000274e-05, 2.1264000000000005e-05, 2.0916000000002766e-05, 2.1236000000000865e-05, 2.1208000000001725e-05, 2.122300000000077e-05, 2.144500000000188e-05, 2.1264000000000005e-05, 2.108299999999813e-05, 2.1250000000000435e-05, 2.140299999999623e-05, 2.1249999999993496e-05, 2.1472000000001545e-05, 2.1416000000003266e-05, 2.194499999999544e-05, 2.090300000000267e-05, 2.093100000000181e-05, 2.0916000000002766e-05, 2.126300000000053e-05, 2.1764000000000505e-05, 2.10969999999977e-05, 2.1235999999993926e-05, 2.1429999999995897e-05, 2.1611999999997245e-05, 2.1791999999999645e-05, 2.158299999999863e-05, 2.1598000000004614e-05, 2.158299999999863e-05, 2.1264000000000005e-05, 2.176300000000103e-05, 2.1444000000002406e-05, 2.109700000000464e-05, 2.109700000000464e-05, 2.1083999999997605e-05, 2.143100000000231e-05, 2.181899999999931e-05, 2.1250000000000435e-05, 2.14169999999958e-05, 2.191700000000324e-05, 2.14169999999958e-05, 2.111099999999727e-05, 2.111099999999727e-05, 2.131900000000575e-05, 2.15969999999982e-05, 2.1443999999995467e-05, 2.158299999999863e-05, 2.0943999999994967e-05, 2.1722000000001795e-05, 2.0915999999995827e-05, 2.1236000000000865e-05]</msg>
<status status="PASS" starttime="20201110 08:34:05.058" endtime="20201110 08:34:05.062"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.047" endtime="20201110 08:34:05.064"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:05.071" endtime="20201110 08:34:05.074"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:05.080" endtime="20201110 08:34:05.102"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.075" endtime="20201110 08:34:05.103"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.066" endtime="20201110 08:34:05.105"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.552" endtime="20201110 08:34:05.105"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.551" endtime="20201110 08:34:05.106"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:05.128" endtime="20201110 08:34:05.144"></status>
</kw>
<msg timestamp="20201110 08:34:05.145" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:05.125" endtime="20201110 08:34:05.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:05.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:05.147" endtime="20201110 08:34:05.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:05.153" endtime="20201110 08:34:05.157"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.118" endtime="20201110 08:34:05.159"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.112" endtime="20201110 08:34:05.160"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:05.177" endtime="20201110 08:34:05.530"></status>
</kw>
<msg timestamp="20201110 08:34:05.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040563028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040584792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:05.173" endtime="20201110 08:34:05.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:05.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040563028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040584792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:05.540" endtime="20201110 08:34:05.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:05.559" endtime="20201110 08:34:05.563"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.166" endtime="20201110 08:34:05.564"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.161" endtime="20201110 08:34:05.566"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:05.576" level="INFO">${RESULT} = [{'time': 0.040584792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1764000000000505e-05, 'source_diff': 2.1764000000000505e-05}, {'time': 0.040612986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:05.567" endtime="20201110 08:34:05.577"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:05.608" level="INFO">${ACCURACY} = {'time': [0.040584792, 0.040612986, 0.040642931, 0.040671972, 0.040704028, 0.040734069, 0.040766181, 0.040797236, 0.040825361, 0.040857472, 0.040887472, 0.040918431, 0.0409505, 0.040976639, 0.04100869...</msg>
<status status="PASS" starttime="20201110 08:34:05.578" endtime="20201110 08:34:05.609"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:05.623" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201110 08:34:05.617" endtime="20201110 08:34:05.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:05.629" level="INFO">VALUE: [2.1764000000000505e-05, 2.1499999999993746e-05, 2.144500000000188e-05, 2.1430000000002836e-05, 2.109700000000464e-05, 2.0915999999995827e-05, 2.1264000000000005e-05, 2.1736000000001365e-05, 2.1429999999995897e-05, 2.113899999999641e-05, 2.158299999999863e-05, 2.093099999999487e-05, 2.108299999999813e-05, 2.1750000000000935e-05, 2.106899999999856e-05, 2.1430000000002836e-05, 2.1264000000000005e-05, 2.1583999999998105e-05, 2.1415999999996327e-05, 2.1250000000000435e-05, 2.108299999999813e-05, 2.161099999999777e-05, 2.188899999999716e-05, 2.108300000000507e-05, 2.1264000000000005e-05, 2.1750000000000935e-05, 2.1069999999998035e-05, 2.176300000000103e-05, 2.140299999999623e-05, 2.1750000000000935e-05, 2.15969999999982e-05, 2.1791999999999645e-05, 2.1291999999999145e-05, 2.106899999999856e-05, 2.1750000000000935e-05, 2.1583999999998105e-05, 2.1208000000001725e-05, 2.1264000000000005e-05, 2.1250000000000435e-05, 2.10969999999977e-05, 2.159700000000514e-05, 2.0972000000001045e-05, 2.1208000000001725e-05, 2.1652000000003946e-05, 2.095900000000095e-05, 2.0944000000001906e-05, 2.1084000000004544e-05, 2.176300000000103e-05, 2.17770000000006e-05, 2.1055999999998465e-05]</msg>
<status status="PASS" starttime="20201110 08:34:05.626" endtime="20201110 08:34:05.631"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.610" endtime="20201110 08:34:05.632"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:05.639" endtime="20201110 08:34:05.641"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:05.647" endtime="20201110 08:34:05.670"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.643" endtime="20201110 08:34:05.673"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.634" endtime="20201110 08:34:05.675"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.108" endtime="20201110 08:34:05.676"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.107" endtime="20201110 08:34:05.676"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:05.721" endtime="20201110 08:34:05.738"></status>
</kw>
<msg timestamp="20201110 08:34:05.739" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:05.717" endtime="20201110 08:34:05.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:05.745" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:05.741" endtime="20201110 08:34:05.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:05.748" endtime="20201110 08:34:05.752"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.703" endtime="20201110 08:34:05.753"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.685" endtime="20201110 08:34:05.755"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:05.771" endtime="20201110 08:34:06.169"></status>
</kw>
<msg timestamp="20201110 08:34:06.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065465042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065486111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:05.768" endtime="20201110 08:34:06.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065465042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065486111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:06.179" endtime="20201110 08:34:06.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.198" endtime="20201110 08:34:06.202"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.761" endtime="20201110 08:34:06.204"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.756" endtime="20201110 08:34:06.205"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:06.216" level="INFO">${RESULT} = [{'time': 0.065486111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.106899999999856e-05, 'source_diff': 2.106899999999856e-05}, {'time': 0.065513, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201110 08:34:06.207" endtime="20201110 08:34:06.216"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:06.248" level="INFO">${ACCURACY} = {'time': [0.065486111, 0.065513, 0.065543125, 0.065570139, 0.065596167, 0.065624208, 0.065651306, 0.065680403, 0.065706514, 0.065732486, 0.065762569, 0.065789556, 0.065818681, 0.065847639, 0.065877833...</msg>
<status status="PASS" starttime="20201110 08:34:06.218" endtime="20201110 08:34:06.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.259" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201110 08:34:06.257" endtime="20201110 08:34:06.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.265" level="INFO">VALUE: [2.106899999999856e-05, 2.1250000000000435e-05, 2.1763999999993566e-05, 2.1263999999993066e-05, 2.144499999999494e-05, 2.1264000000006944e-05, 2.093100000000181e-05, 2.1763999999993566e-05, 2.1374999999990152e-05, 2.1264000000006944e-05, 2.131900000000575e-05, 2.1514000000000255e-05, 2.1597999999997675e-05, 2.086099999999702e-05, 2.1930000000003336e-05, 2.143100000000231e-05, 2.1763999999993566e-05, 2.144499999999494e-05, 2.1264000000006944e-05, 2.0986000000000615e-05, 2.1430000000002836e-05, 2.090299999998879e-05, 2.09169999999953e-05, 2.1250000000000435e-05, 2.1264000000006944e-05, 2.111100000000421e-05, 2.19169999999963e-05, 2.1250000000000435e-05, 2.09169999999953e-05, 2.09169999999953e-05, 2.191700000001018e-05, 2.1277999999999575e-05, 2.1263999999993066e-05, 2.176300000000797e-05, 2.0917000000009178e-05, 2.1250000000000435e-05, 2.1750000000000935e-05, 2.1069999999998035e-05, 2.1430000000002836e-05, 2.1763999999993566e-05, 2.14169999999958e-05, 2.10969999999977e-05, 2.14169999999958e-05, 2.156899999999906e-05, 2.17770000000006e-05, 2.090300000000267e-05, 2.108300000000507e-05, 2.144499999999494e-05, 2.1764000000007444e-05, 2.1263999999993066e-05]</msg>
<status status="PASS" starttime="20201110 08:34:06.262" endtime="20201110 08:34:06.266"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.250" endtime="20201110 08:34:06.268"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.275" endtime="20201110 08:34:06.277"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:06.284" endtime="20201110 08:34:06.306"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.279" endtime="20201110 08:34:06.308"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.270" endtime="20201110 08:34:06.310"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.679" endtime="20201110 08:34:06.310"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.678" endtime="20201110 08:34:06.311"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.333" endtime="20201110 08:34:06.351"></status>
</kw>
<msg timestamp="20201110 08:34:06.352" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:06.330" endtime="20201110 08:34:06.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.358" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:06.354" endtime="20201110 08:34:06.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.360" endtime="20201110 08:34:06.364"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.323" endtime="20201110 08:34:06.366"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.317" endtime="20201110 08:34:06.367"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.384" endtime="20201110 08:34:06.735"></status>
</kw>
<msg timestamp="20201110 08:34:06.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041052764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041074014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:06.381" endtime="20201110 08:34:06.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041052764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041074014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:06.745" endtime="20201110 08:34:06.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.764" endtime="20201110 08:34:06.768"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.373" endtime="20201110 08:34:06.770"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.369" endtime="20201110 08:34:06.771"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:06.782" level="INFO">${RESULT} = [{'time': 0.041074014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1250000000000435e-05, 'source_diff': 2.1250000000000435e-05}, {'time': 0.041101208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:06.773" endtime="20201110 08:34:06.782"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:06.814" level="INFO">${ACCURACY} = {'time': [0.041074014, 0.041101208, 0.041128222, 0.041159181, 0.041186333, 0.04121225, 0.041243417, 0.0412735, 0.041301486, 0.041331528, 0.041360597, 0.041387722, 0.041416778, 0.041443722, 0.041470847...</msg>
<status status="PASS" starttime="20201110 08:34:06.784" endtime="20201110 08:34:06.814"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.825" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201110 08:34:06.823" endtime="20201110 08:34:06.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.830" level="INFO">VALUE: [2.1250000000000435e-05, 2.1416000000003266e-05, 2.158299999999863e-05, 2.144500000000188e-05, 2.138899999999666e-05, 2.137499999999709e-05, 2.1735999999994426e-05, 2.108299999999813e-05, 2.106899999999856e-05, 2.1264000000000005e-05, 2.090299999999573e-05, 2.1250000000000435e-05, 2.143100000000231e-05, 2.108300000000507e-05, 2.0929999999995397e-05, 2.1500000000000685e-05, 2.10969999999977e-05, 2.14169999999958e-05, 2.1764000000000505e-05, 2.193099999999587e-05, 2.122300000000077e-05, 2.193099999999587e-05, 2.161100000000471e-05, 2.10969999999977e-05, 2.141700000000274e-05, 2.1250000000000435e-05, 2.1764000000000505e-05, 2.193099999999587e-05, 2.1084000000004544e-05, 2.184699999999845e-05, 2.1415999999996327e-05, 2.1277999999999575e-05, 2.1415999999996327e-05, 2.090300000000267e-05, 2.1305999999998715e-05, 2.143099999999537e-05, 2.190299999999673e-05, 2.1916000000003766e-05, 2.158299999999863e-05, 2.109700000000464e-05, 2.0930000000002336e-05, 2.1750000000000935e-05, 2.1416000000003266e-05, 2.10969999999977e-05, 2.10969999999977e-05, 2.143100000000231e-05, 2.1249999999993496e-05, 2.093100000000181e-05, 2.1764000000000505e-05, 2.158299999999863e-05]</msg>
<status status="PASS" starttime="20201110 08:34:06.827" endtime="20201110 08:34:06.832"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.816" endtime="20201110 08:34:06.833"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.840" endtime="20201110 08:34:06.843"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:06.849" endtime="20201110 08:34:06.871"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.844" endtime="20201110 08:34:06.872"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.835" endtime="20201110 08:34:06.874"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.313" endtime="20201110 08:34:06.875"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.311" endtime="20201110 08:34:06.875"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.900" endtime="20201110 08:34:06.917"></status>
</kw>
<msg timestamp="20201110 08:34:06.918" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:06.896" endtime="20201110 08:34:06.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.924" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:06.920" endtime="20201110 08:34:06.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.927" endtime="20201110 08:34:06.931"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.889" endtime="20201110 08:34:06.932"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.881" endtime="20201110 08:34:06.934"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.953" endtime="20201110 08:34:07.305"></status>
</kw>
<msg timestamp="20201110 08:34:07.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04292175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042942847, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:06.948" endtime="20201110 08:34:07.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:07.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04292175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042942847, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:07.314" endtime="20201110 08:34:07.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.333" endtime="20201110 08:34:07.337"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.940" endtime="20201110 08:34:07.339"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.935" endtime="20201110 08:34:07.340"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:07.352" level="INFO">${RESULT} = [{'time': 0.042942847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.10969999999977e-05, 'source_diff': 2.10969999999977e-05}, {'time': 0.042970986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:34:07.342" endtime="20201110 08:34:07.352"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:07.383" level="INFO">${ACCURACY} = {'time': [0.042942847, 0.042970986, 0.043003042, 0.043032, 0.043058014, 0.043086208, 0.043115194, 0.043143236, 0.043170278, 0.043196389, 0.043225417, 0.043253556, 0.0432805, 0.043310458, 0.043340653, ...</msg>
<status status="PASS" starttime="20201110 08:34:07.354" endtime="20201110 08:34:07.384"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:07.394" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201110 08:34:07.392" endtime="20201110 08:34:07.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:07.400" level="INFO">VALUE: [2.10969999999977e-05, 2.1736000000001365e-05, 2.19169999999963e-05, 2.111100000000421e-05, 2.137499999999709e-05, 2.1930000000003336e-05, 2.0902000000003196e-05, 2.1264000000000005e-05, 2.1083999999997605e-05, 2.109700000000464e-05, 2.193100000000281e-05, 2.197300000000152e-05, 2.091700000000224e-05, 2.108300000000507e-05, 2.193100000000281e-05, 2.173700000000084e-05, 2.1776999999993663e-05, 2.15969999999982e-05, 2.1430000000002836e-05, 2.0915999999995827e-05, 2.1222000000001295e-05, 2.1264000000000005e-05, 2.0915999999995827e-05, 2.0916000000002766e-05, 2.155499999999949e-05, 2.1736000000001365e-05, 2.106899999999856e-05, 2.1750000000000935e-05, 2.1250000000000435e-05, 2.1250000000000435e-05, 2.1458000000001975e-05, 2.1097999999997175e-05, 2.156899999999906e-05, 2.1763999999993566e-05, 2.158299999999863e-05, 2.10969999999977e-05, 2.158299999999863e-05, 2.0929999999995397e-05, 2.115300000000292e-05, 2.143100000000231e-05, 2.1750000000000935e-05, 2.140300000000317e-05, 2.1778000000000075e-05, 2.109700000000464e-05, 2.1750000000000935e-05, 2.194500000000238e-05, 2.1000000000000185e-05, 2.0915999999995827e-05, 2.091700000000224e-05, 2.0930000000002336e-05]</msg>
<status status="PASS" starttime="20201110 08:34:07.397" endtime="20201110 08:34:07.402"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.385" endtime="20201110 08:34:07.403"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.410" endtime="20201110 08:34:07.412"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:07.418" endtime="20201110 08:34:07.440"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.414" endtime="20201110 08:34:07.442"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.405" endtime="20201110 08:34:07.443"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.877" endtime="20201110 08:34:07.444"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.876" endtime="20201110 08:34:07.444"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.467" endtime="20201110 08:34:07.486"></status>
</kw>
<msg timestamp="20201110 08:34:07.487" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:07.464" endtime="20201110 08:34:07.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:07.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:07.490" endtime="20201110 08:34:07.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.496" endtime="20201110 08:34:07.500"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.457" endtime="20201110 08:34:07.502"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.451" endtime="20201110 08:34:07.503"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.521" endtime="20201110 08:34:07.876"></status>
</kw>
<msg timestamp="20201110 08:34:07.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042765472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042786389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:07.517" endtime="20201110 08:34:07.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:07.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042765472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042786389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:07.885" endtime="20201110 08:34:07.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.906" endtime="20201110 08:34:07.910"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.509" endtime="20201110 08:34:07.911"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.505" endtime="20201110 08:34:07.913"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:07.924" level="INFO">${RESULT} = [{'time': 0.042786389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.091700000000224e-05, 'source_diff': 2.091700000000224e-05}, {'time': 0.042816542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:07.915" endtime="20201110 08:34:07.925"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:07.956" level="INFO">${ACCURACY} = {'time': [0.042786389, 0.042816542, 0.042843611, 0.042874556, 0.042900653, 0.042928639, 0.042960694, 0.042989903, 0.043015875, 0.043046958, 0.043075986, 0.043108125, 0.043140181, 0.043170111, 0.043197...</msg>
<status status="PASS" starttime="20201110 08:34:07.927" endtime="20201110 08:34:07.957"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:07.967" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201110 08:34:07.965" endtime="20201110 08:34:07.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:07.973" level="INFO">VALUE: [2.091700000000224e-05, 2.1583999999998105e-05, 2.1929999999996397e-05, 2.1764000000000505e-05, 2.15969999999982e-05, 2.161099999999777e-05, 2.104099999999942e-05, 2.1264000000000005e-05, 2.1486000000001115e-05, 2.1416000000003266e-05, 2.108299999999813e-05, 2.1235999999993926e-05, 2.187499999999759e-05, 2.0943999999994967e-05, 2.08890000000031e-05, 2.090300000000267e-05, 2.108299999999813e-05, 2.156899999999906e-05, 2.1722000000001795e-05, 2.1764000000000505e-05, 2.1764000000000505e-05, 2.108299999999813e-05, 2.156899999999906e-05, 2.1250000000000435e-05, 2.145900000000145e-05, 2.1763999999993566e-05, 2.1750000000000935e-05, 2.190300000000367e-05, 2.10969999999977e-05, 2.15969999999982e-05, 2.1000000000000185e-05, 2.1264000000000005e-05, 2.190300000000367e-05, 2.1277999999999575e-05, 2.143099999999537e-05, 2.1736000000001365e-05, 2.1693999999995717e-05, 2.158299999999863e-05, 2.10969999999977e-05, 2.1778000000000075e-05, 2.1277999999999575e-05, 2.1750000000000935e-05, 2.158299999999863e-05, 2.1444000000002406e-05, 2.1583999999998105e-05, 2.1305999999998715e-05, 2.111099999999727e-05, 2.10969999999977e-05, 2.140300000000317e-05, 2.1250000000000435e-05]</msg>
<status status="PASS" starttime="20201110 08:34:07.970" endtime="20201110 08:34:07.974"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.958" endtime="20201110 08:34:07.976"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.983" endtime="20201110 08:34:07.985"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:07.991" endtime="20201110 08:34:08.014"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.986" endtime="20201110 08:34:08.016"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.978" endtime="20201110 08:34:08.018"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.447" endtime="20201110 08:34:08.020"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.445" endtime="20201110 08:34:08.020"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.044" endtime="20201110 08:34:08.063"></status>
</kw>
<msg timestamp="20201110 08:34:08.064" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:08.040" endtime="20201110 08:34:08.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.070" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:08.066" endtime="20201110 08:34:08.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.072" endtime="20201110 08:34:08.076"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.033" endtime="20201110 08:34:08.078"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.027" endtime="20201110 08:34:08.079"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.100" endtime="20201110 08:34:08.453"></status>
</kw>
<msg timestamp="20201110 08:34:08.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045998736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046026903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:08.096" endtime="20201110 08:34:08.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045998736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046026903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:08.463" endtime="20201110 08:34:08.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.482" endtime="20201110 08:34:08.486"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.085" endtime="20201110 08:34:08.487"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.081" endtime="20201110 08:34:08.489"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:08.500" level="INFO">${RESULT} = [{'time': 0.046026903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.816700000000255e-05, 'source_diff': 2.816700000000255e-05}, {'time': 0.046064903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:08.491" endtime="20201110 08:34:08.501"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:08.532" level="INFO">${ACCURACY} = {'time': [0.046026903, 0.046064903, 0.046102083, 0.046140056, 0.046174194, 0.046210222, 0.046249417, 0.046285347, 0.046321431, 0.046355611, 0.046389611, 0.046423681, 0.046461722, 0.046500778, 0.046539...</msg>
<status status="PASS" starttime="20201110 08:34:08.502" endtime="20201110 08:34:08.532"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.543" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201110 08:34:08.540" endtime="20201110 08:34:08.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.548" level="INFO">VALUE: [2.816700000000255e-05, 2.8819999999998847e-05, 2.8304999999999303e-05, 2.8611999999997306e-05, 2.8804999999999803e-05, 2.8818999999999373e-05, 2.8833999999998416e-05, 2.8304999999999303e-05, 2.865300000000348e-05, 2.8318999999998873e-05, 2.8152999999996042e-05, 2.8013999999999817e-05, 2.8138999999996472e-05, 2.8500000000000747e-05, 2.8304999999999303e-05, 2.8652999999996542e-05, 2.8472999999994142e-05, 2.8152999999996042e-05, 2.7986000000000677e-05, 2.8138999999996472e-05, 2.8610999999997833e-05, 2.861100000000477e-05, 2.8291999999999207e-05, 2.8805999999999277e-05, 2.7986000000000677e-05, 2.7986000000000677e-05, 2.8486000000001177e-05, 2.8304999999999303e-05, 2.8500000000000747e-05, 2.815300000000298e-05, 2.8124999999996902e-05, 2.7986000000000677e-05, 2.8318999999998873e-05, 2.8791999999999707e-05, 2.8320000000005285e-05, 2.819500000000169e-05, 2.8832999999998943e-05, 2.8486000000001177e-05, 2.848700000000065e-05, 2.8306000000005715e-05, 2.841599999999639e-05, 2.8152999999996042e-05, 2.8666999999996112e-05, 2.8818999999999373e-05, 2.8486000000001177e-05, 2.7986000000000677e-05, 2.8680000000003147e-05, 2.815300000000298e-05, 2.7972000000001107e-05, 2.8638999999996972e-05]</msg>
<status status="PASS" starttime="20201110 08:34:08.545" endtime="20201110 08:34:08.550"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.533" endtime="20201110 08:34:08.552"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.559" endtime="20201110 08:34:08.562"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:08.568" endtime="20201110 08:34:08.590"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.563" endtime="20201110 08:34:08.592"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.554" endtime="20201110 08:34:08.593"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.023" endtime="20201110 08:34:08.594"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.021" endtime="20201110 08:34:08.594"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.617" endtime="20201110 08:34:08.635"></status>
</kw>
<msg timestamp="20201110 08:34:08.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:08.614" endtime="20201110 08:34:08.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.643" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:08.638" endtime="20201110 08:34:08.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.645" endtime="20201110 08:34:08.649"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.607" endtime="20201110 08:34:08.650"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.601" endtime="20201110 08:34:08.652"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.669" endtime="20201110 08:34:09.019"></status>
</kw>
<msg timestamp="20201110 08:34:09.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041498875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041527653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:08.665" endtime="20201110 08:34:09.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041498875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041527653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:09.030" endtime="20201110 08:34:09.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.052" endtime="20201110 08:34:09.057"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.658" endtime="20201110 08:34:09.059"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.653" endtime="20201110 08:34:09.060"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:09.071" level="INFO">${RESULT} = [{'time': 0.041527653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8778000000000137e-05, 'source_diff': 2.8778000000000137e-05}, {'time': 0.041560653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:09.062" endtime="20201110 08:34:09.071"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:09.103" level="INFO">${ACCURACY} = {'time': [0.041527653, 0.041560653, 0.041597667, 0.041632833, 0.041667875, 0.041705917, 0.041741972, 0.041779125, 0.041816125, 0.041850236, 0.041883319, 0.041920403, 0.041954514, 0.041989458, 0.042028...</msg>
<status status="PASS" starttime="20201110 08:34:09.073" endtime="20201110 08:34:09.103"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.114" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201110 08:34:09.112" endtime="20201110 08:34:09.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.119" level="INFO">VALUE: [2.8778000000000137e-05, 2.795900000000101e-05, 2.8652999999996542e-05, 2.8166000000003077e-05, 2.865300000000348e-05, 2.861100000000477e-05, 2.8318999999998873e-05, 2.8458000000002037e-05, 2.8319000000005812e-05, 2.8152999999996042e-05, 2.8166000000003077e-05, 2.863900000000391e-05, 2.8152999999996042e-05, 2.8096999999997763e-05, 2.8638999999996972e-05, 2.8499999999993808e-05, 2.79170000000023e-05, 2.8472000000001607e-05, 2.8318999999998873e-05, 2.865300000000348e-05, 2.8486000000001177e-05, 2.848700000000065e-05, 2.8458000000002037e-05, 2.7986000000000677e-05, 2.8819999999998847e-05, 2.8804999999999803e-05, 2.8318999999998873e-05, 2.7958000000001537e-05, 2.798700000000015e-05, 2.8026999999999913e-05, 2.8305999999998777e-05, 2.8486000000001177e-05, 2.813900000000341e-05, 2.815300000000298e-05, 2.7971999999994168e-05, 2.8652999999996542e-05, 2.8319999999998346e-05, 2.7986000000000677e-05, 2.865300000000348e-05, 2.8819000000006312e-05, 2.8180000000002647e-05, 2.8638999999996972e-05, 2.816700000000255e-05, 2.8819999999998847e-05, 2.8305000000006242e-05, 2.8318999999998873e-05, 2.8318999999998873e-05, 2.8555999999999027e-05, 2.8318999999998873e-05, 2.7958000000001537e-05]</msg>
<status status="PASS" starttime="20201110 08:34:09.116" endtime="20201110 08:34:09.121"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.105" endtime="20201110 08:34:09.123"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.129" endtime="20201110 08:34:09.132"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:09.137" endtime="20201110 08:34:09.159"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.133" endtime="20201110 08:34:09.161"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.124" endtime="20201110 08:34:09.162"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.596" endtime="20201110 08:34:09.163"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.595" endtime="20201110 08:34:09.163"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.186" endtime="20201110 08:34:09.204"></status>
</kw>
<msg timestamp="20201110 08:34:09.205" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:09.183" endtime="20201110 08:34:09.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:09.208" endtime="20201110 08:34:09.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.214" endtime="20201110 08:34:09.218"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.176" endtime="20201110 08:34:09.220"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.170" endtime="20201110 08:34:09.221"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.238" endtime="20201110 08:34:09.586"></status>
</kw>
<msg timestamp="20201110 08:34:09.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041103694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041131986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:09.235" endtime="20201110 08:34:09.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041103694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041131986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:09.597" endtime="20201110 08:34:09.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.617" endtime="20201110 08:34:09.621"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.227" endtime="20201110 08:34:09.623"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.222" endtime="20201110 08:34:09.624"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:09.635" level="INFO">${RESULT} = [{'time': 0.041131986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8291999999999207e-05, 'source_diff': 2.8291999999999207e-05}, {'time': 0.041168028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:09.626" endtime="20201110 08:34:09.635"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:09.667" level="INFO">${ACCURACY} = {'time': [0.041131986, 0.041168028, 0.041206083, 0.041240181, 0.041277306, 0.041315292, 0.0413545, 0.041387583, 0.041420569, 0.041455556, 0.041494722, 0.041532778, 0.041567875, 0.041602958, 0.04163704...</msg>
<status status="PASS" starttime="20201110 08:34:09.637" endtime="20201110 08:34:09.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.678" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201110 08:34:09.675" endtime="20201110 08:34:09.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.683" level="INFO">VALUE: [2.8291999999999207e-05, 2.7972000000001107e-05, 2.8138999999996472e-05, 2.813900000000341e-05, 2.8652999999996542e-05, 2.845900000000151e-05, 2.8958000000002537e-05, 2.816599999999614e-05, 2.794399999999503e-05, 2.797300000000058e-05, 2.8818999999999373e-05, 2.8138999999996472e-05, 2.8818999999999373e-05, 2.8500000000000747e-05, 2.8124999999996902e-05, 2.865199999999707e-05, 2.8652000000004008e-05, 2.7986000000000677e-05, 2.7958000000001537e-05, 2.865199999999707e-05, 2.8485999999994238e-05, 2.8624999999997403e-05, 2.8624999999997403e-05, 2.8138999999996472e-05, 2.7986000000000677e-05, 2.8027999999999387e-05, 2.8708000000002287e-05, 2.8152000000003508e-05, 2.865300000000348e-05, 2.812500000000384e-05, 2.8638999999996972e-05, 2.813900000000341e-05, 2.8138999999996472e-05, 2.863900000000391e-05, 2.813900000000341e-05, 2.8138999999996472e-05, 2.8291999999999207e-05, 2.8138999999996472e-05, 2.8458999999994572e-05, 2.848700000000065e-05, 2.8777000000000663e-05, 2.8458000000002037e-05, 2.8124999999996902e-05, 2.8083999999997666e-05, 2.815300000000298e-05, 2.863900000000391e-05, 2.8666999999996112e-05, 2.863900000000391e-05, 2.8820000000005785e-05, 2.813900000000341e-05]</msg>
<status status="PASS" starttime="20201110 08:34:09.680" endtime="20201110 08:34:09.685"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.668" endtime="20201110 08:34:09.686"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.693" endtime="20201110 08:34:09.696"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:09.702" endtime="20201110 08:34:09.724"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.697" endtime="20201110 08:34:09.725"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.688" endtime="20201110 08:34:09.727"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.166" endtime="20201110 08:34:09.728"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.164" endtime="20201110 08:34:09.728"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.751" endtime="20201110 08:34:09.769"></status>
</kw>
<msg timestamp="20201110 08:34:09.770" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:09.748" endtime="20201110 08:34:09.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.776" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:09.772" endtime="20201110 08:34:09.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.779" endtime="20201110 08:34:09.782"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.740" endtime="20201110 08:34:09.784"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.734" endtime="20201110 08:34:09.786"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.803" endtime="20201110 08:34:10.156"></status>
</kw>
<msg timestamp="20201110 08:34:10.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041482653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041510792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:09.799" endtime="20201110 08:34:10.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041482653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041510792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:10.166" endtime="20201110 08:34:10.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.185" endtime="20201110 08:34:10.190"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.792" endtime="20201110 08:34:10.192"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.787" endtime="20201110 08:34:10.193"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:10.204" level="INFO">${RESULT} = [{'time': 0.041510792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8138999999996472e-05, 'source_diff': 2.8138999999996472e-05}, {'time': 0.041544847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:10.195" endtime="20201110 08:34:10.205"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:10.236" level="INFO">${ACCURACY} = {'time': [0.041510792, 0.041544847, 0.041581028, 0.041619069, 0.041652153, 0.041687208, 0.041721278, 0.041759389, 0.041793458, 0.041828542, 0.041867681, 0.041901681, 0.041936667, 0.041972736, 0.042007...</msg>
<status status="PASS" starttime="20201110 08:34:10.207" endtime="20201110 08:34:10.236"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.247" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201110 08:34:10.245" endtime="20201110 08:34:10.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.253" level="INFO">VALUE: [2.8138999999996472e-05, 2.8833000000005882e-05, 2.8652999999996542e-05, 2.7986000000000677e-05, 2.7986000000000677e-05, 2.80970000000047e-05, 2.8305999999998777e-05, 2.7972000000001107e-05, 2.8304999999999303e-05, 2.8778000000000137e-05, 2.8638999999996972e-05, 2.8791999999999707e-05, 2.8499999999993808e-05, 2.8666999999996112e-05, 2.865300000000348e-05, 2.8319000000005812e-05, 2.8138999999996472e-05, 2.813900000000341e-05, 2.8832999999998943e-05, 2.816700000000255e-05, 2.8305999999998777e-05, 2.8624999999997403e-05, 2.8804999999999803e-05, 2.8124999999996902e-05, 2.8152999999996042e-05, 2.8291999999999207e-05, 2.8486000000001177e-05, 2.8638999999996972e-05, 2.8138999999996472e-05, 2.865300000000348e-05, 2.813900000000341e-05, 2.866700000000305e-05, 2.8277999999999637e-05, 2.866700000000305e-05, 2.8472000000001607e-05, 2.8804999999999803e-05, 2.865300000000348e-05, 2.865300000000348e-05, 2.8820000000005785e-05, 2.795900000000101e-05, 2.8819999999998847e-05, 2.8805999999999277e-05, 2.8318999999998873e-05, 2.813900000000341e-05, 2.7916999999995362e-05, 2.8485999999994238e-05, 2.8360999999997583e-05, 2.8666000000003578e-05, 2.7972000000001107e-05, 2.8818999999999373e-05]</msg>
<status status="PASS" starttime="20201110 08:34:10.250" endtime="20201110 08:34:10.260"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.238" endtime="20201110 08:34:10.261"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.268" endtime="20201110 08:34:10.271"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:10.276" endtime="20201110 08:34:10.298"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.272" endtime="20201110 08:34:10.300"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.263" endtime="20201110 08:34:10.301"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.730" endtime="20201110 08:34:10.302"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.729" endtime="20201110 08:34:10.302"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.326" endtime="20201110 08:34:10.343"></status>
</kw>
<msg timestamp="20201110 08:34:10.344" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:10.322" endtime="20201110 08:34:10.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.351" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:10.347" endtime="20201110 08:34:10.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.353" endtime="20201110 08:34:10.357"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.315" endtime="20201110 08:34:10.359"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.309" endtime="20201110 08:34:10.360"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.377" endtime="20201110 08:34:10.725"></status>
</kw>
<msg timestamp="20201110 08:34:10.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041230986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041259333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:10.374" endtime="20201110 08:34:10.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041230986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041259333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:10.734" endtime="20201110 08:34:10.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.753" endtime="20201110 08:34:10.761"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.366" endtime="20201110 08:34:10.763"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.361" endtime="20201110 08:34:10.764"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:10.775" level="INFO">${RESULT} = [{'time': 0.041259333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.834700000000495e-05, 'source_diff': 2.834700000000495e-05}, {'time': 0.041295417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:10.766" endtime="20201110 08:34:10.775"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:10.806" level="INFO">${ACCURACY} = {'time': [0.041259333, 0.041295417, 0.0413335, 0.041367597, 0.041403653, 0.041440639, 0.041474681, 0.041509861, 0.041542944, 0.041577986, 0.041615, 0.041648111, 0.041685194, 0.041721319, 0.041757389, ...</msg>
<status status="PASS" starttime="20201110 08:34:10.777" endtime="20201110 08:34:10.807"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.818" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201110 08:34:10.815" endtime="20201110 08:34:10.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.823" level="INFO">VALUE: [2.834700000000495e-05, 2.795900000000101e-05, 2.813900000000341e-05, 2.8874999999997653e-05, 2.8486000000001177e-05, 2.8819999999998847e-05, 2.8791999999999707e-05, 2.8486000000001177e-05, 2.84579999999951e-05, 2.8666999999996112e-05, 2.8846999999998513e-05, 2.813900000000341e-05, 2.8513000000000843e-05, 2.8818999999999373e-05, 2.8332999999998443e-05, 2.8999999999994308e-05, 2.798700000000015e-05, 2.865300000000348e-05, 2.8138999999996472e-05, 2.811100000000427e-05, 2.866700000000305e-05, 2.8652999999996542e-05, 2.7986000000000677e-05, 2.847300000000108e-05, 2.8166000000003077e-05, 2.815300000000298e-05, 2.8500000000000747e-05, 2.8818999999999373e-05, 2.8499999999993808e-05, 2.8818999999999373e-05, 2.8805999999999277e-05, 2.8194000000002217e-05, 2.8291000000006672e-05, 2.9000000000001247e-05, 2.815300000000298e-05, 2.816599999999614e-05, 2.8304999999999303e-05, 2.8486000000001177e-05, 2.8819999999998847e-05, 2.8000000000000247e-05, 2.813900000000341e-05, 2.8596999999998263e-05, 2.8305999999998777e-05, 2.847300000000108e-05, 2.8624999999997403e-05, 2.8860999999998083e-05, 2.844399999999553e-05, 2.8804999999999803e-05, 2.8833999999998416e-05, 2.848700000000065e-05]</msg>
<status status="PASS" starttime="20201110 08:34:10.820" endtime="20201110 08:34:10.825"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.808" endtime="20201110 08:34:10.826"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.833" endtime="20201110 08:34:10.836"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:10.841" endtime="20201110 08:34:10.863"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.837" endtime="20201110 08:34:10.865"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.828" endtime="20201110 08:34:10.866"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.305" endtime="20201110 08:34:10.867"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.304" endtime="20201110 08:34:10.867"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.890" endtime="20201110 08:34:10.908"></status>
</kw>
<msg timestamp="20201110 08:34:10.909" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:10.887" endtime="20201110 08:34:10.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.916" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:10.912" endtime="20201110 08:34:10.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.918" endtime="20201110 08:34:10.922"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.880" endtime="20201110 08:34:10.923"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.874" endtime="20201110 08:34:10.925"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.942" endtime="20201110 08:34:11.332"></status>
</kw>
<msg timestamp="20201110 08:34:11.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041214806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041243472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:10.938" endtime="20201110 08:34:11.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041214806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041243472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:11.342" endtime="20201110 08:34:11.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.361" endtime="20201110 08:34:11.367"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.931" endtime="20201110 08:34:11.368"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.926" endtime="20201110 08:34:11.370"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:11.380" level="INFO">${RESULT} = [{'time': 0.041243472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8666000000003578e-05, 'source_diff': 2.8666000000003578e-05}, {'time': 0.041282611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:11.371" endtime="20201110 08:34:11.381"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:11.412" level="INFO">${ACCURACY} = {'time': [0.041243472, 0.041282611, 0.041321722, 0.04136075, 0.041394917, 0.041429861, 0.041465972, 0.041505042, 0.041542097, 0.041580181, 0.041614347, 0.041649389, 0.041688389, 0.041724514, 0.0417585...</msg>
<status status="PASS" starttime="20201110 08:34:11.383" endtime="20201110 08:34:11.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.423" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201110 08:34:11.421" endtime="20201110 08:34:11.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.429" level="INFO">VALUE: [2.8666000000003578e-05, 2.8152999999996042e-05, 2.8152999999996042e-05, 2.815300000000298e-05, 2.8514000000000317e-05, 2.8764000000000567e-05, 2.8152999999996042e-05, 2.8833999999998416e-05, 2.8486000000001177e-05, 2.813900000000341e-05, 2.8277999999999637e-05, 2.866700000000305e-05, 2.8596999999998263e-05, 2.8499999999993808e-05, 2.8304999999999303e-05, 2.8374999999997152e-05, 2.8318999999998873e-05, 2.8000000000000247e-05, 2.8306000000005715e-05, 2.8860999999998083e-05, 2.7986000000000677e-05, 2.8819000000006312e-05, 2.8166999999995612e-05, 2.8819999999998847e-05, 2.815300000000298e-05, 2.8318999999998873e-05, 2.8332999999998443e-05, 2.816599999999614e-05, 2.8486000000001177e-05, 2.8888999999997222e-05, 2.7986000000000677e-05, 2.8000000000000247e-05, 2.8318999999998873e-05, 2.8819999999998847e-05, 2.8069999999998096e-05, 2.8319999999998346e-05, 2.8833999999998416e-05, 2.8180999999995182e-05, 2.8471999999994668e-05, 2.8332999999998443e-05, 2.815300000000298e-05, 2.8152999999996042e-05, 2.8485999999994238e-05, 2.815300000000298e-05, 2.8806000000006216e-05, 2.8818999999999373e-05, 2.8138999999996472e-05, 2.8332999999998443e-05, 2.8778000000000137e-05, 2.8486000000001177e-05]</msg>
<status status="PASS" starttime="20201110 08:34:11.426" endtime="20201110 08:34:11.430"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.414" endtime="20201110 08:34:11.432"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.439" endtime="20201110 08:34:11.441"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:11.447" endtime="20201110 08:34:11.469"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.443" endtime="20201110 08:34:11.471"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.434" endtime="20201110 08:34:11.472"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.870" endtime="20201110 08:34:11.473"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.868" endtime="20201110 08:34:11.473"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.496" endtime="20201110 08:34:11.514"></status>
</kw>
<msg timestamp="20201110 08:34:11.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:11.493" endtime="20201110 08:34:11.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.522" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:11.517" endtime="20201110 08:34:11.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.524" endtime="20201110 08:34:11.528"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.485" endtime="20201110 08:34:11.529"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.480" endtime="20201110 08:34:11.531"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.548" endtime="20201110 08:34:11.895"></status>
</kw>
<msg timestamp="20201110 08:34:11.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041136875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041165181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:11.544" endtime="20201110 08:34:11.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041136875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041165181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:11.905" endtime="20201110 08:34:11.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.925" endtime="20201110 08:34:11.930"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.537" endtime="20201110 08:34:11.932"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.532" endtime="20201110 08:34:11.933"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:11.944" level="INFO">${RESULT} = [{'time': 0.041165181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8305999999998777e-05, 'source_diff': 2.8305999999998777e-05}, {'time': 0.041201278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:11.935" endtime="20201110 08:34:11.944"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:11.975" level="INFO">${ACCURACY} = {'time': [0.041165181, 0.041201278, 0.04123625, 0.041273417, 0.0413105, 0.041344486, 0.041382583, 0.041417611, 0.041454736, 0.041490792, 0.041528806, 0.041565903, 0.041598944, 0.041633014, 0.041670083...</msg>
<status status="PASS" starttime="20201110 08:34:11.946" endtime="20201110 08:34:11.976"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.986" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201110 08:34:11.984" endtime="20201110 08:34:11.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.992" level="INFO">VALUE: [2.8305999999998777e-05, 2.8096999999997763e-05, 2.7958000000001537e-05, 2.8486000000001177e-05, 2.8264000000000067e-05, 2.8638999999996972e-05, 2.8346999999998013e-05, 2.8818999999999373e-05, 2.8138999999996472e-05, 2.8264000000000067e-05, 2.798700000000015e-05, 2.863900000000391e-05, 2.866599999999664e-05, 2.8320000000005285e-05, 2.8624999999997403e-05, 2.8638999999996972e-05, 2.8138999999996472e-05, 2.816700000000255e-05, 2.8638999999996972e-05, 2.8152000000003508e-05, 2.833300000000538e-05, 2.8000000000000247e-05, 2.8500000000000747e-05, 2.8820000000005785e-05, 2.8500000000000747e-05, 2.8152999999996042e-05, 2.7958000000001537e-05, 2.8346999999998013e-05, 2.8652999999996542e-05, 2.8736000000001427e-05, 2.8638999999996972e-05, 2.8485999999994238e-05, 2.8430999999995432e-05, 2.8652999999996542e-05, 2.8819999999998847e-05, 2.793100000000187e-05, 2.8332999999998443e-05, 2.813900000000341e-05, 2.8500000000000747e-05, 2.865300000000348e-05, 2.865300000000348e-05, 2.8346999999998013e-05, 2.8318999999998873e-05, 2.8541999999999457e-05, 2.8138999999996472e-05, 2.816700000000255e-05, 2.8972000000002107e-05, 2.8166999999995612e-05, 2.7944000000001967e-05, 2.8166000000003077e-05]</msg>
<status status="PASS" starttime="20201110 08:34:11.989" endtime="20201110 08:34:11.993"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.977" endtime="20201110 08:34:11.995"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.002" endtime="20201110 08:34:12.005"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:12.010" endtime="20201110 08:34:12.032"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.006" endtime="20201110 08:34:12.034"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.997" endtime="20201110 08:34:12.036"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.475" endtime="20201110 08:34:12.036"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.474" endtime="20201110 08:34:12.037"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.060" endtime="20201110 08:34:12.078"></status>
</kw>
<msg timestamp="20201110 08:34:12.079" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:12.056" endtime="20201110 08:34:12.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.086" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:12.082" endtime="20201110 08:34:12.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.088" endtime="20201110 08:34:12.092"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.049" endtime="20201110 08:34:12.093"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.043" endtime="20201110 08:34:12.095"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.112" endtime="20201110 08:34:12.464"></status>
</kw>
<msg timestamp="20201110 08:34:12.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041647403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041682569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:12.108" endtime="20201110 08:34:12.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041647403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041682569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:12.475" endtime="20201110 08:34:12.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.496" endtime="20201110 08:34:12.501"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.101" endtime="20201110 08:34:12.503"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.096" endtime="20201110 08:34:12.504"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:12.515" level="INFO">${RESULT} = [{'time': 0.041682569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.516600000000314e-05, 'source_diff': 3.516600000000314e-05}, {'time': 0.041722611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:12.506" endtime="20201110 08:34:12.516"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:12.547" level="INFO">${ACCURACY} = {'time': [0.041682569, 0.041722611, 0.041765625, 0.041806833, 0.041850944, 0.041892986, 0.041935014, 0.041975069, 0.042019153, 0.042065389, 0.042109417, 0.042152556, 0.042198611, 0.042240694, 0.042283...</msg>
<status status="PASS" starttime="20201110 08:34:12.517" endtime="20201110 08:34:12.547"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.558" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201110 08:34:12.556" endtime="20201110 08:34:12.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.564" level="INFO">VALUE: [3.516600000000314e-05, 3.500000000000031e-05, 3.4818999999998435e-05, 3.587500000000465e-05, 3.520800000000185e-05, 3.5888999999997284e-05, 3.554199999999952e-05, 3.567999999999627e-05, 3.5194999999994814e-05, 3.556999999999866e-05, 3.538900000000372e-05, 3.520900000000132e-05, 3.5388999999996784e-05, 3.570800000000235e-05, 3.5374999999997214e-05, 3.5888999999997284e-05, 3.504200000000596e-05, 3.554199999999952e-05, 3.587500000000465e-05, 3.584700000000551e-05, 3.570800000000235e-05, 3.522200000000142e-05, 3.548600000000124e-05, 3.5138999999996534e-05, 3.522200000000142e-05, 3.537500000000415e-05, 3.5860999999998144e-05, 3.502800000000639e-05, 3.551400000000038e-05, 3.555599999999909e-05, 3.5582999999998755e-05, 3.5360999999997644e-05, 3.584799999999805e-05, 3.552799999999995e-05, 3.501399999999988e-05, 3.5360999999997644e-05, 3.552799999999995e-05, 3.5374999999997214e-05, 3.5874999999997714e-05, 3.5388999999996784e-05, 3.5360999999997644e-05, 3.518100000000218e-05, 3.576400000000063e-05, 3.586100000000508e-05, 3.540200000000382e-05, 3.5527000000000475e-05, 3.523600000000099e-05, 3.4860999999997144e-05, 3.551400000000038e-05, 3.519399999999534e-05]</msg>
<status status="PASS" starttime="20201110 08:34:12.561" endtime="20201110 08:34:12.565"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.549" endtime="20201110 08:34:12.567"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.574" endtime="20201110 08:34:12.576"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:12.582" endtime="20201110 08:34:12.604"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.578" endtime="20201110 08:34:12.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.569" endtime="20201110 08:34:12.607"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.039" endtime="20201110 08:34:12.608"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.038" endtime="20201110 08:34:12.608"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.631" endtime="20201110 08:34:12.649"></status>
</kw>
<msg timestamp="20201110 08:34:12.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:12.628" endtime="20201110 08:34:12.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:12.653" endtime="20201110 08:34:12.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.659" endtime="20201110 08:34:12.663"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.621" endtime="20201110 08:34:12.665"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.615" endtime="20201110 08:34:12.666"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.684" endtime="20201110 08:34:13.032"></status>
</kw>
<msg timestamp="20201110 08:34:13.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041524625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041560514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:12.680" endtime="20201110 08:34:13.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041524625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041560514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:13.042" endtime="20201110 08:34:13.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.060" endtime="20201110 08:34:13.068"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.672" endtime="20201110 08:34:13.070"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.668" endtime="20201110 08:34:13.071"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:13.082" level="INFO">${RESULT} = [{'time': 0.041560514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5888999999997284e-05, 'source_diff': 3.5888999999997284e-05}, {'time': 0.041605611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:13.073" endtime="20201110 08:34:13.083"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:13.114" level="INFO">${ACCURACY} = {'time': [0.041560514, 0.041605611, 0.041646819, 0.041687806, 0.041727903, 0.041768889, 0.041811056, 0.041853097, 0.041899333, 0.041942417, 0.041986556, 0.042027556, 0.042069764, 0.042111764, 0.042156...</msg>
<status status="PASS" starttime="20201110 08:34:13.084" endtime="20201110 08:34:13.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.125" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201110 08:34:13.123" endtime="20201110 08:34:13.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.130" level="INFO">VALUE: [3.5888999999997284e-05, 3.538900000000372e-05, 3.5138000000004e-05, 3.520900000000132e-05, 3.572199999999498e-05, 3.554199999999952e-05, 3.556999999999866e-05, 3.5040999999999545e-05, 3.5888999999997284e-05, 3.550000000000081e-05, 3.586200000000456e-05, 3.498700000000021e-05, 3.561100000000483e-05, 3.504200000000596e-05, 3.554199999999952e-05, 3.522200000000142e-05, 3.5777000000000725e-05, 3.5568999999999185e-05, 3.505599999999859e-05, 3.572200000000192e-05, 3.5874999999997714e-05, 3.505599999999859e-05, 3.555599999999909e-05, 3.5054999999999115e-05, 3.552799999999995e-05, 3.537500000000415e-05, 3.586100000000508e-05, 3.518100000000218e-05, 3.588900000000422e-05, 3.572200000000192e-05, 3.588900000000422e-05, 3.5374999999997214e-05, 3.5041000000006484e-05, 3.568100000000268e-05, 3.587500000000465e-05, 3.5846999999998574e-05, 3.5541000000000045e-05, 3.5888999999997284e-05, 3.525000000000056e-05, 3.515300000000304e-05, 3.5374999999997214e-05, 3.5388999999996784e-05, 3.555599999999909e-05, 3.5874999999997714e-05, 3.488900000000322e-05, 3.520799999999491e-05, 3.572199999999498e-05, 3.5068999999998685e-05, 3.538900000000372e-05, 3.520800000000185e-05]</msg>
<status status="PASS" starttime="20201110 08:34:13.127" endtime="20201110 08:34:13.132"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.116" endtime="20201110 08:34:13.134"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.140" endtime="20201110 08:34:13.143"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:13.148" endtime="20201110 08:34:13.170"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.144" endtime="20201110 08:34:13.172"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.135" endtime="20201110 08:34:13.173"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.611" endtime="20201110 08:34:13.174"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.609" endtime="20201110 08:34:13.174"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.197" endtime="20201110 08:34:13.216"></status>
</kw>
<msg timestamp="20201110 08:34:13.217" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:13.194" endtime="20201110 08:34:13.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.223" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:13.219" endtime="20201110 08:34:13.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.226" endtime="20201110 08:34:13.229"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.187" endtime="20201110 08:34:13.231"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.181" endtime="20201110 08:34:13.232"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.249" endtime="20201110 08:34:13.597"></status>
</kw>
<msg timestamp="20201110 08:34:13.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041297444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041332472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:13.246" endtime="20201110 08:34:13.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041297444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041332472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:13.607" endtime="20201110 08:34:13.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.626" endtime="20201110 08:34:13.632"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.239" endtime="20201110 08:34:13.634"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.234" endtime="20201110 08:34:13.635"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:13.646" level="INFO">${RESULT} = [{'time': 0.041332472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.502799999999945e-05, 'source_diff': 3.502799999999945e-05}, {'time': 0.041375597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:13.637" endtime="20201110 08:34:13.646"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:13.677" level="INFO">${ACCURACY} = {'time': [0.041332472, 0.041375597, 0.041418639, 0.041458819, 0.041503792, 0.041545903, 0.041590111, 0.041633139, 0.041675194, 0.041718306, 0.041761431, 0.0418015, 0.041846583, 0.041888583, 0.04193168...</msg>
<status status="PASS" starttime="20201110 08:34:13.648" endtime="20201110 08:34:13.678"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.688" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201110 08:34:13.686" endtime="20201110 08:34:13.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.694" level="INFO">VALUE: [3.502799999999945e-05, 3.568000000000321e-05, 3.569500000000225e-05, 3.537500000000415e-05, 3.502799999999945e-05, 3.572200000000192e-05, 3.554199999999952e-05, 3.570800000000235e-05, 3.5874999999997714e-05, 3.536199999999712e-05, 3.572300000000139e-05, 3.5360999999997644e-05, 3.5026999999999975e-05, 3.520800000000185e-05, 3.504199999999902e-05, 3.522300000000089e-05, 3.5054999999999115e-05, 3.5360999999997644e-05, 3.504199999999902e-05, 3.5874999999997714e-05, 3.587500000000465e-05, 3.525000000000056e-05, 3.555599999999909e-05, 3.5874999999997714e-05, 3.501399999999988e-05, 3.540300000000329e-05, 3.536100000000458e-05, 3.5041000000006484e-05, 3.5374999999997214e-05, 3.5360999999997644e-05, 3.504199999999902e-05, 3.555599999999909e-05, 3.519400000000228e-05, 3.4846999999997574e-05, 3.5833000000005943e-05, 3.536100000000458e-05, 3.505599999999859e-05, 3.569500000000225e-05, 3.5638999999997034e-05, 3.519400000000228e-05, 3.502799999999945e-05, 3.569400000000278e-05, 3.5332999999998504e-05, 3.5040999999999545e-05, 3.565300000000354e-05, 3.5346999999998074e-05, 3.541599999999645e-05, 3.5138999999996534e-05, 3.5332999999998504e-05, 3.572200000000192e-05]</msg>
<status status="PASS" starttime="20201110 08:34:13.691" endtime="20201110 08:34:13.695"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.679" endtime="20201110 08:34:13.697"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.704" endtime="20201110 08:34:13.706"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:13.712" endtime="20201110 08:34:13.735"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.708" endtime="20201110 08:34:13.736"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.699" endtime="20201110 08:34:13.738"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.177" endtime="20201110 08:34:13.739"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.175" endtime="20201110 08:34:13.739"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.763" endtime="20201110 08:34:13.782"></status>
</kw>
<msg timestamp="20201110 08:34:13.783" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:13.760" endtime="20201110 08:34:13.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.789" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:13.785" endtime="20201110 08:34:13.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.791" endtime="20201110 08:34:13.795"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.752" endtime="20201110 08:34:13.797"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.746" endtime="20201110 08:34:13.798"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.815" endtime="20201110 08:34:14.168"></status>
</kw>
<msg timestamp="20201110 08:34:14.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042981153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043016889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:13.812" endtime="20201110 08:34:14.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:14.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042981153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043016889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:14.178" endtime="20201110 08:34:14.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.197" endtime="20201110 08:34:14.203"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.804" endtime="20201110 08:34:14.205"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.800" endtime="20201110 08:34:14.206"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:14.217" level="INFO">${RESULT} = [{'time': 0.043016889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.573600000000149e-05, 'source_diff': 3.573600000000149e-05}, {'time': 0.043059903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:14.208" endtime="20201110 08:34:14.218"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:14.248" level="INFO">${ACCURACY} = {'time': [0.043016889, 0.043059903, 0.043105944, 0.043146125, 0.043191139, 0.043233208, 0.043278361, 0.043321431, 0.043367486, 0.043410681, 0.043456792, 0.043498792, 0.043538875, 0.043578875, 0.043625...</msg>
<status status="PASS" starttime="20201110 08:34:14.219" endtime="20201110 08:34:14.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:14.260" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201110 08:34:14.257" endtime="20201110 08:34:14.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:14.265" level="INFO">VALUE: [3.573600000000149e-05, 3.5666999999996174e-05, 3.5124999999996964e-05, 3.505599999999859e-05, 3.518100000000218e-05, 3.5054999999999115e-05, 3.501399999999988e-05, 3.554199999999952e-05, 3.5152999999996104e-05, 3.555599999999909e-05, 3.554199999999952e-05, 3.501399999999988e-05, 3.570799999999541e-05, 3.487500000000365e-05, 3.5541000000000045e-05, 3.522199999999448e-05, 3.519400000000228e-05, 3.5374999999997214e-05, 3.5694999999995314e-05, 3.5374999999997214e-05, 3.504199999999902e-05, 3.502799999999945e-05, 3.523600000000099e-05, 3.5360999999997644e-05, 3.498600000000074e-05, 3.520800000000185e-05, 3.504199999999902e-05, 3.502800000000639e-05, 3.5374999999997214e-05, 3.505600000000553e-05, 3.520900000000132e-05, 3.552799999999995e-05, 3.586199999999762e-05, 3.5513000000000905e-05, 3.586200000000456e-05, 3.569399999999584e-05, 3.572300000000139e-05, 3.5541000000000045e-05, 3.504199999999902e-05, 3.537500000000415e-05, 3.517999999999577e-05, 3.522200000000142e-05, 3.5152999999996104e-05, 3.5888999999997284e-05, 3.5360999999997644e-05, 3.5860999999998144e-05, 3.540300000000329e-05, 3.504200000000596e-05, 3.584700000000551e-05, 3.5874999999997714e-05]</msg>
<status status="PASS" starttime="20201110 08:34:14.262" endtime="20201110 08:34:14.267"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.250" endtime="20201110 08:34:14.269"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.275" endtime="20201110 08:34:14.278"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:14.284" endtime="20201110 08:34:14.306"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.279" endtime="20201110 08:34:14.307"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.271" endtime="20201110 08:34:14.309"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.741" endtime="20201110 08:34:14.309"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.740" endtime="20201110 08:34:14.310"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.333" endtime="20201110 08:34:14.351"></status>
</kw>
<msg timestamp="20201110 08:34:14.352" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:14.330" endtime="20201110 08:34:14.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:14.358" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:14.355" endtime="20201110 08:34:14.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.361" endtime="20201110 08:34:14.365"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.322" endtime="20201110 08:34:14.367"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.316" endtime="20201110 08:34:14.368"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.385" endtime="20201110 08:34:14.734"></status>
</kw>
<msg timestamp="20201110 08:34:14.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041460403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041495597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:14.381" endtime="20201110 08:34:14.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:14.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041460403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041495597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:14.744" endtime="20201110 08:34:14.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.763" endtime="20201110 08:34:14.769"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.374" endtime="20201110 08:34:14.771"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.369" endtime="20201110 08:34:14.772"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:14.784" level="INFO">${RESULT} = [{'time': 0.041495597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.519400000000228e-05, 'source_diff': 3.519400000000228e-05}, {'time': 0.041541764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:14.774" endtime="20201110 08:34:14.784"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:14.815" level="INFO">${ACCURACY} = {'time': [0.041495597, 0.041541764, 0.041581792, 0.041623847, 0.041668972, 0.041714139, 0.041756181, 0.041802306, 0.041843417, 0.041889375, 0.041933486, 0.041978667, 0.042022694, 0.042068847, 0.042113...</msg>
<status status="PASS" starttime="20201110 08:34:14.786" endtime="20201110 08:34:14.816"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:14.827" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201110 08:34:14.824" endtime="20201110 08:34:14.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:14.832" level="INFO">VALUE: [3.519400000000228e-05, 3.570800000000235e-05, 3.520900000000132e-05, 3.5040999999999545e-05, 3.572200000000192e-05, 3.5860999999998144e-05, 3.587500000000465e-05, 3.533399999999798e-05, 3.576400000000063e-05, 3.5902999999996854e-05, 3.504199999999902e-05, 3.5860999999998144e-05, 3.5874999999997714e-05, 3.570800000000235e-05, 3.552799999999995e-05, 3.552799999999995e-05, 3.5860999999998144e-05, 3.5666999999996174e-05, 3.538900000000372e-05, 3.533399999999798e-05, 3.537500000000415e-05, 3.520900000000132e-05, 3.570900000000182e-05, 3.523700000000046e-05, 3.5874999999997714e-05, 3.513900000000347e-05, 3.569500000000225e-05, 3.504199999999902e-05, 3.537500000000415e-05, 3.5360999999997644e-05, 3.5346999999998074e-05, 3.520799999999491e-05, 3.554199999999952e-05, 3.504199999999902e-05, 3.554199999999952e-05, 3.500000000000031e-05, 3.508300000000519e-05, 3.572199999999498e-05, 3.572200000000192e-05, 3.554199999999952e-05, 3.554200000000646e-05, 3.586100000000508e-05, 3.573600000000149e-05, 3.554199999999952e-05, 3.552799999999995e-05, 3.587500000000465e-05, 3.504199999999902e-05, 3.520799999999491e-05, 3.588900000000422e-05, 3.5860999999998144e-05]</msg>
<status status="PASS" starttime="20201110 08:34:14.829" endtime="20201110 08:34:14.834"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.818" endtime="20201110 08:34:14.836"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.842" endtime="20201110 08:34:14.845"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:14.850" endtime="20201110 08:34:14.872"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.846" endtime="20201110 08:34:14.874"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.837" endtime="20201110 08:34:14.876"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.312" endtime="20201110 08:34:14.876"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.311" endtime="20201110 08:34:14.877"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.900" endtime="20201110 08:34:14.918"></status>
</kw>
<msg timestamp="20201110 08:34:14.919" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:14.896" endtime="20201110 08:34:14.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:14.925" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:14.921" endtime="20201110 08:34:14.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.928" endtime="20201110 08:34:14.932"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.889" endtime="20201110 08:34:14.933"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.883" endtime="20201110 08:34:14.935"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.951" endtime="20201110 08:34:15.299"></status>
</kw>
<msg timestamp="20201110 08:34:15.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041451472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041486833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:14.948" endtime="20201110 08:34:15.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:15.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041451472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041486833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:15.309" endtime="20201110 08:34:15.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.328" endtime="20201110 08:34:15.335"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.941" endtime="20201110 08:34:15.337"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.936" endtime="20201110 08:34:15.338"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:15.349" level="INFO">${RESULT} = [{'time': 0.041486833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5360999999997644e-05, 'source_diff': 3.5360999999997644e-05}, {'time': 0.041526917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:15.340" endtime="20201110 08:34:15.350"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:15.380" level="INFO">${ACCURACY} = {'time': [0.041486833, 0.041526917, 0.041568069, 0.041610181, 0.041652208, 0.041695347, 0.041740361, 0.041780403, 0.041823472, 0.041867653, 0.041911667, 0.04195475, 0.041996847, 0.042041028, 0.0420841...</msg>
<status status="PASS" starttime="20201110 08:34:15.351" endtime="20201110 08:34:15.381"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:15.392" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201110 08:34:15.389" endtime="20201110 08:34:15.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:15.397" level="INFO">VALUE: [3.5360999999997644e-05, 3.537500000000415e-05, 3.570800000000235e-05, 3.552799999999995e-05, 3.5541000000000045e-05, 3.513900000000347e-05, 3.517999999999577e-05, 3.552799999999995e-05, 3.551400000000038e-05, 3.5194999999994814e-05, 3.502799999999945e-05, 3.5860999999998144e-05, 3.572199999999498e-05, 3.520900000000132e-05, 3.5818999999999435e-05, 3.570800000000235e-05, 3.519500000000175e-05, 3.572200000000192e-05, 3.501399999999988e-05, 3.5346999999998074e-05, 3.552799999999995e-05, 3.5180999999995244e-05, 3.554199999999952e-05, 3.5874999999997714e-05, 3.551400000000038e-05, 3.5888999999997284e-05, 3.586100000000508e-05, 3.5541000000000045e-05, 3.5708999999994884e-05, 3.5388999999996784e-05, 3.5874999999997714e-05, 3.5360999999997644e-05, 3.5874999999997714e-05, 3.552799999999995e-05, 3.57780000000002e-05, 3.555599999999909e-05, 3.534799999999755e-05, 3.570800000000235e-05, 3.570799999999541e-05, 3.501399999999988e-05, 3.5846999999998574e-05, 3.549999999999387e-05, 3.504200000000596e-05, 3.505599999999859e-05, 3.55700000000056e-05, 3.5040999999999545e-05, 3.5346999999998074e-05, 3.552799999999995e-05, 3.550000000000081e-05, 3.537500000000415e-05]</msg>
<status status="PASS" starttime="20201110 08:34:15.394" endtime="20201110 08:34:15.403"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.382" endtime="20201110 08:34:15.405"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.411" endtime="20201110 08:34:15.414"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:15.420" endtime="20201110 08:34:15.442"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.415" endtime="20201110 08:34:15.444"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.407" endtime="20201110 08:34:15.445"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.879" endtime="20201110 08:34:15.446"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.878" endtime="20201110 08:34:15.446"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.469" endtime="20201110 08:34:15.488"></status>
</kw>
<msg timestamp="20201110 08:34:15.489" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:15.466" endtime="20201110 08:34:15.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:15.495" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:15.491" endtime="20201110 08:34:15.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.497" endtime="20201110 08:34:15.501"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.458" endtime="20201110 08:34:15.503"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.453" endtime="20201110 08:34:15.504"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.521" endtime="20201110 08:34:15.869"></status>
</kw>
<msg timestamp="20201110 08:34:15.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041463319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041499194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:15.518" endtime="20201110 08:34:15.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:15.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041463319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041499194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:15.879" endtime="20201110 08:34:15.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.898" endtime="20201110 08:34:15.904"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.510" endtime="20201110 08:34:15.906"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.506" endtime="20201110 08:34:15.907"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:15.918" level="INFO">${RESULT} = [{'time': 0.041499194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.587500000000465e-05, 'source_diff': 3.587500000000465e-05}, {'time': 0.041544264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:15.909" endtime="20201110 08:34:15.918"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:15.951" level="INFO">${ACCURACY} = {'time': [0.041499194, 0.041544264, 0.041585403, 0.041629417, 0.041672486, 0.041712556, 0.041754722, 0.04179775, 0.041843861, 0.041886028, 0.041926042, 0.041969194, 0.042011181, 0.042056319, 0.0420964...</msg>
<status status="PASS" starttime="20201110 08:34:15.920" endtime="20201110 08:34:15.952"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:15.965" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201110 08:34:15.962" endtime="20201110 08:34:15.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:15.972" level="INFO">VALUE: [3.587500000000465e-05, 3.5874999999997714e-05, 3.569500000000225e-05, 3.552799999999995e-05, 3.554199999999952e-05, 3.536199999999712e-05, 3.537500000000415e-05, 3.569400000000278e-05, 3.587500000000465e-05, 3.5874999999997714e-05, 3.5222999999993954e-05, 3.520800000000185e-05, 3.543100000000243e-05, 3.569400000000278e-05, 3.5388999999996784e-05, 3.588900000000422e-05, 3.504199999999902e-05, 3.519500000000175e-05, 3.520799999999491e-05, 3.5110999999997394e-05, 3.5860999999998144e-05, 3.519400000000228e-05, 3.520900000000132e-05, 3.519400000000228e-05, 3.567999999999627e-05, 3.586100000000508e-05, 3.519500000000175e-05, 3.552799999999995e-05, 3.486100000000408e-05, 3.502799999999945e-05, 3.5846999999998574e-05, 3.501399999999988e-05, 3.502799999999945e-05, 3.5541000000000045e-05, 3.568100000000268e-05, 3.519500000000175e-05, 3.536200000000406e-05, 3.554199999999952e-05, 3.504199999999902e-05, 3.4916999999995424e-05, 3.550000000000081e-05, 3.500000000000031e-05, 3.550000000000081e-05, 3.568000000000321e-05, 3.540199999999688e-05, 3.533300000000544e-05, 3.49580000000016e-05, 3.5054999999999115e-05, 3.5874999999997714e-05, 3.500000000000031e-05]</msg>
<status status="PASS" starttime="20201110 08:34:15.968" endtime="20201110 08:34:15.974"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.953" endtime="20201110 08:34:15.976"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.985" endtime="20201110 08:34:15.988"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:15.995" endtime="20201110 08:34:16.017"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.990" endtime="20201110 08:34:16.019"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.978" endtime="20201110 08:34:16.021"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.448" endtime="20201110 08:34:16.021"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.447" endtime="20201110 08:34:16.022"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.045" endtime="20201110 08:34:16.063"></status>
</kw>
<msg timestamp="20201110 08:34:16.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:16.041" endtime="20201110 08:34:16.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:16.071" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:16.067" endtime="20201110 08:34:16.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.073" endtime="20201110 08:34:16.077"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.034" endtime="20201110 08:34:16.079"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.028" endtime="20201110 08:34:16.080"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.097" endtime="20201110 08:34:16.442"></status>
</kw>
<msg timestamp="20201110 08:34:16.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041741125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041783208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:16.093" endtime="20201110 08:34:16.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:16.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041741125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041783208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:16.452" endtime="20201110 08:34:16.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.471" endtime="20201110 08:34:16.476"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.086" endtime="20201110 08:34:16.478"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.081" endtime="20201110 08:34:16.479"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:16.490" level="INFO">${RESULT} = [{'time': 0.041783208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2083000000005255e-05, 'source_diff': 4.2083000000005255e-05}, {'time': 0.041832319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:16.481" endtime="20201110 08:34:16.491"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:16.522" level="INFO">${ACCURACY} = {'time': [0.041783208, 0.041832319, 0.041882514, 0.041932542, 0.041981681, 0.042029667, 0.042082875, 0.042134014, 0.042182014, 0.042235167, 0.042284222, 0.042333222, 0.042382389, 0.042432556, 0.042482...</msg>
<status status="PASS" starttime="20201110 08:34:16.492" endtime="20201110 08:34:16.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:16.533" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201110 08:34:16.531" endtime="20201110 08:34:16.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:16.538" level="INFO">VALUE: [4.2083000000005255e-05, 4.272200000000198e-05, 4.276400000000069e-05, 4.2917000000003425e-05, 4.2209000000001384e-05, 4.2431000000002494e-05, 4.276400000000069e-05, 4.277800000000026e-05, 4.2582999999998816e-05, 4.256999999999872e-05, 4.2903000000003855e-05, 4.2596999999998386e-05, 4.2596999999998386e-05, 4.236200000000412e-05, 4.277800000000026e-05, 4.2082999999998316e-05, 4.273600000000155e-05, 4.2082999999998316e-05, 4.234800000000455e-05, 4.1902999999995916e-05, 4.226400000000019e-05, 4.2068999999998746e-05, 4.226400000000019e-05, 4.1931000000001994e-05, 4.1889000000003285e-05, 4.244399999999565e-05, 4.247200000000173e-05, 4.243000000000302e-05, 4.258400000000523e-05, 4.1917000000002425e-05, 4.225000000000062e-05, 4.273600000000155e-05, 4.213800000000406e-05, 4.224999999999368e-05, 4.2054999999999176e-05, 4.225000000000062e-05, 4.2417000000002925e-05, 4.206999999999822e-05, 4.274999999999418e-05, 4.274999999999418e-05, 4.2416999999995986e-05, 4.224999999999368e-05, 4.273599999999461e-05, 4.2610999999997956e-05, 4.2388999999996846e-05, 4.292999999999658e-05, 4.240200000000388e-05, 4.184800000000405e-05, 4.2082999999998316e-05, 4.229199999999933e-05]</msg>
<status status="PASS" starttime="20201110 08:34:16.535" endtime="20201110 08:34:16.540"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.524" endtime="20201110 08:34:16.542"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.548" endtime="20201110 08:34:16.551"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:16.556" endtime="20201110 08:34:16.578"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.552" endtime="20201110 08:34:16.580"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.543" endtime="20201110 08:34:16.582"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.024" endtime="20201110 08:34:16.582"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.023" endtime="20201110 08:34:16.583"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.605" endtime="20201110 08:34:16.624"></status>
</kw>
<msg timestamp="20201110 08:34:16.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:16.602" endtime="20201110 08:34:16.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:16.631" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:16.627" endtime="20201110 08:34:16.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.634" endtime="20201110 08:34:16.637"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.595" endtime="20201110 08:34:16.639"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.589" endtime="20201110 08:34:16.641"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.657" endtime="20201110 08:34:17.005"></status>
</kw>
<msg timestamp="20201110 08:34:17.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041095222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041137986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:16.654" endtime="20201110 08:34:17.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041095222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041137986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:17.014" endtime="20201110 08:34:17.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.034" endtime="20201110 08:34:17.039"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.647" endtime="20201110 08:34:17.041"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.642" endtime="20201110 08:34:17.042"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:17.054" level="INFO">${RESULT} = [{'time': 0.041137986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.276400000000069e-05, 'source_diff': 4.276400000000069e-05}, {'time': 0.041186, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201110 08:34:17.044" endtime="20201110 08:34:17.055"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:17.087" level="INFO">${ACCURACY} = {'time': [0.041137986, 0.041186, 0.041239111, 0.041292167, 0.041340306, 0.041387333, 0.041436542, 0.041487611, 0.041539611, 0.041591653, 0.041639903, 0.041691972, 0.041742986, 0.041796167, 0.04184425,...</msg>
<status status="PASS" starttime="20201110 08:34:17.057" endtime="20201110 08:34:17.087"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.098" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201110 08:34:17.096" endtime="20201110 08:34:17.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.104" level="INFO">VALUE: [4.276400000000069e-05, 4.277800000000026e-05, 4.2582999999998816e-05, 4.2416999999995986e-05, 4.2902999999996916e-05, 4.242999999999608e-05, 4.2945000000002564e-05, 4.2417000000002925e-05, 4.204199999999908e-05, 4.1874999999996776e-05, 4.2596999999998386e-05, 4.277800000000026e-05, 4.226400000000019e-05, 4.2431000000002494e-05, 4.2431000000002494e-05, 4.226400000000019e-05, 4.2068999999998746e-05, 4.2416999999995986e-05, 4.225000000000062e-05, 4.275000000000112e-05, 4.225000000000062e-05, 4.2610999999997956e-05, 4.2611000000004895e-05, 4.255599999999915e-05, 4.2290999999999856e-05, 4.2082999999998316e-05, 4.222199999999454e-05, 4.206999999999822e-05, 4.225000000000062e-05, 4.291600000000395e-05, 4.275000000000112e-05, 4.2124999999997026e-05, 4.223599999999411e-05, 4.233399999999804e-05, 4.2096999999997886e-05, 4.275000000000112e-05, 4.241599999999651e-05, 4.2416999999995986e-05, 4.2223000000000954e-05, 4.2082999999998316e-05, 4.2430999999995556e-05, 4.2403000000003355e-05, 4.223600000000105e-05, 4.26660000000037e-05, 4.243000000000302e-05, 4.258399999999829e-05, 4.2596999999998386e-05, 4.2888999999997346e-05, 4.256999999999872e-05, 4.275000000000112e-05]</msg>
<status status="PASS" starttime="20201110 08:34:17.100" endtime="20201110 08:34:17.105"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.089" endtime="20201110 08:34:17.107"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.114" endtime="20201110 08:34:17.116"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:17.122" endtime="20201110 08:34:17.144"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.117" endtime="20201110 08:34:17.146"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.109" endtime="20201110 08:34:17.147"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.585" endtime="20201110 08:34:17.148"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.583" endtime="20201110 08:34:17.148"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.171" endtime="20201110 08:34:17.190"></status>
</kw>
<msg timestamp="20201110 08:34:17.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:17.168" endtime="20201110 08:34:17.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.197" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:17.193" endtime="20201110 08:34:17.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.200" endtime="20201110 08:34:17.203"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.161" endtime="20201110 08:34:17.205"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.155" endtime="20201110 08:34:17.207"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.223" endtime="20201110 08:34:17.569"></status>
</kw>
<msg timestamp="20201110 08:34:17.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041407625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041450556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:17.220" endtime="20201110 08:34:17.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041407625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041450556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:17.579" endtime="20201110 08:34:17.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.598" endtime="20201110 08:34:17.605"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.213" endtime="20201110 08:34:17.607"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.208" endtime="20201110 08:34:17.608"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:17.619" level="INFO">${RESULT} = [{'time': 0.041450556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2930999999996056e-05, 'source_diff': 4.2930999999996056e-05}, {'time': 0.041498528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:17.610" endtime="20201110 08:34:17.620"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:17.650" level="INFO">${ACCURACY} = {'time': [0.041450556, 0.041498528, 0.041550625, 0.041600694, 0.041650819, 0.041698972, 0.041748083, 0.041798153, 0.041849194, 0.041900292, 0.041951389, 0.042003569, 0.042054542, 0.042101694, 0.042149...</msg>
<status status="PASS" starttime="20201110 08:34:17.621" endtime="20201110 08:34:17.651"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.661" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201110 08:34:17.659" endtime="20201110 08:34:17.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.667" level="INFO">VALUE: [4.2930999999996056e-05, 4.2695000000002314e-05, 4.2903000000003855e-05, 4.188800000000381e-05, 4.291599999999701e-05, 4.291600000000395e-05, 4.291599999999701e-05, 4.226400000000019e-05, 4.2082999999998316e-05, 4.2374999999997276e-05, 4.2082999999998316e-05, 4.245799999999522e-05, 4.275000000000112e-05, 4.241600000000345e-05, 4.2417000000002925e-05, 4.295800000000266e-05, 4.2597000000005325e-05, 4.2902999999996916e-05, 4.281999999999897e-05, 4.222200000000148e-05, 4.2082999999998316e-05, 4.276400000000069e-05, 4.2445000000002064e-05, 4.276400000000069e-05, 4.276399999999375e-05, 4.2445000000002064e-05, 4.2610999999997956e-05, 4.2431000000002494e-05, 4.204199999999908e-05, 4.2416999999995986e-05, 4.220799999999497e-05, 4.226400000000019e-05, 4.2902999999996916e-05, 4.242999999999608e-05, 4.20980000000043e-05, 4.2917000000003425e-05, 4.2403000000003355e-05, 4.277800000000026e-05, 4.204199999999908e-05, 4.225000000000062e-05, 4.2582999999998816e-05, 4.259799999999786e-05, 4.245800000000216e-05, 4.2374999999997276e-05, 4.225000000000062e-05, 4.2582999999998816e-05, 4.2416999999995986e-05, 4.276400000000069e-05, 4.2917000000003425e-05, 4.2445000000002064e-05]</msg>
<status status="PASS" starttime="20201110 08:34:17.664" endtime="20201110 08:34:17.668"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.652" endtime="20201110 08:34:17.670"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.677" endtime="20201110 08:34:17.679"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:17.685" endtime="20201110 08:34:17.707"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.681" endtime="20201110 08:34:17.708"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.672" endtime="20201110 08:34:17.710"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.150" endtime="20201110 08:34:17.711"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.149" endtime="20201110 08:34:17.711"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.734" endtime="20201110 08:34:17.753"></status>
</kw>
<msg timestamp="20201110 08:34:17.754" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:17.731" endtime="20201110 08:34:17.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.760" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:17.756" endtime="20201110 08:34:17.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.762" endtime="20201110 08:34:17.766"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.723" endtime="20201110 08:34:17.768"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.718" endtime="20201110 08:34:17.769"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.786" endtime="20201110 08:34:18.135"></status>
</kw>
<msg timestamp="20201110 08:34:18.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041332944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041375556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:17.783" endtime="20201110 08:34:18.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:18.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041332944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041375556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:18.145" endtime="20201110 08:34:18.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.164" endtime="20201110 08:34:18.169"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.775" endtime="20201110 08:34:18.171"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.771" endtime="20201110 08:34:18.172"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:18.183" level="INFO">${RESULT} = [{'time': 0.041375556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.261199999999743e-05, 'source_diff': 4.261199999999743e-05}, {'time': 0.041428764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:18.174" endtime="20201110 08:34:18.184"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:18.215" level="INFO">${ACCURACY} = {'time': [0.041375556, 0.041428764, 0.041477778, 0.041525944, 0.041575986, 0.041623125, 0.041674153, 0.041726306, 0.041779389, 0.041826403, 0.041878569, 0.041930708, 0.041978792, 0.042026861, 0.042074...</msg>
<status status="PASS" starttime="20201110 08:34:18.185" endtime="20201110 08:34:18.215"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:18.230" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201110 08:34:18.227" endtime="20201110 08:34:18.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:18.239" level="INFO">VALUE: [4.261199999999743e-05, 4.225000000000062e-05, 4.2431000000002494e-05, 4.243000000000302e-05, 4.2417000000002925e-05, 4.276399999999375e-05, 4.225000000000062e-05, 4.275000000000112e-05, 4.2431000000002494e-05, 4.2430999999995556e-05, 4.274999999999418e-05, 4.294399999999615e-05, 4.225000000000062e-05, 4.200000000000037e-05, 4.241600000000345e-05, 4.226400000000019e-05, 4.273600000000155e-05, 4.2096999999997886e-05, 4.256999999999872e-05, 4.2097000000004825e-05, 4.245800000000216e-05, 4.223600000000105e-05, 4.193000000000252e-05, 4.224999999999368e-05, 4.2417000000002925e-05, 4.2596999999998386e-05, 4.241599999999651e-05, 4.244400000000259e-05, 4.225000000000062e-05, 4.2388999999996846e-05, 4.241599999999651e-05, 4.274999999999418e-05, 4.2096999999997886e-05, 4.1917000000002425e-05, 4.294400000000309e-05, 4.225000000000062e-05, 4.225000000000062e-05, 4.2945000000002564e-05, 4.2917000000003425e-05, 4.2596999999998386e-05, 4.206999999999822e-05, 4.2596999999998386e-05, 4.276400000000069e-05, 4.209799999999736e-05, 4.2917000000003425e-05, 4.208399999999779e-05, 4.29860000000018e-05, 4.295800000000266e-05, 4.240200000000388e-05, 4.2430999999995556e-05]</msg>
<status status="PASS" starttime="20201110 08:34:18.233" endtime="20201110 08:34:18.241"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.217" endtime="20201110 08:34:18.243"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.251" endtime="20201110 08:34:18.255"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:18.262" endtime="20201110 08:34:18.285"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.256" endtime="20201110 08:34:18.287"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.245" endtime="20201110 08:34:18.288"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.713" endtime="20201110 08:34:18.289"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.712" endtime="20201110 08:34:18.289"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.312" endtime="20201110 08:34:18.331"></status>
</kw>
<msg timestamp="20201110 08:34:18.332" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:18.309" endtime="20201110 08:34:18.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:18.338" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:18.334" endtime="20201110 08:34:18.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.341" endtime="20201110 08:34:18.344"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.301" endtime="20201110 08:34:18.346"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.296" endtime="20201110 08:34:18.347"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.364" endtime="20201110 08:34:18.711"></status>
</kw>
<msg timestamp="20201110 08:34:18.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041613319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041655583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:18.361" endtime="20201110 08:34:18.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:18.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041613319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041655583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:18.721" endtime="20201110 08:34:18.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.740" endtime="20201110 08:34:18.745"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.354" endtime="20201110 08:34:18.747"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.349" endtime="20201110 08:34:18.748"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:18.759" level="INFO">${RESULT} = [{'time': 0.041655583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.226400000000019e-05, 'source_diff': 4.226400000000019e-05}, {'time': 0.041708722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:18.750" endtime="20201110 08:34:18.760"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:18.791" level="INFO">${ACCURACY} = {'time': [0.041655583, 0.041708722, 0.041761917, 0.041814903, 0.041868069, 0.041915153, 0.041964264, 0.042011167, 0.042058306, 0.042105431, 0.0421565, 0.042205569, 0.042254611, 0.042302847, 0.04234979...</msg>
<status status="PASS" starttime="20201110 08:34:18.761" endtime="20201110 08:34:18.791"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:18.802" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201110 08:34:18.800" endtime="20201110 08:34:18.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:18.807" level="INFO">VALUE: [4.226400000000019e-05, 4.2582999999998816e-05, 4.2639000000004035e-05, 4.256999999999872e-05, 4.2874999999997776e-05, 4.258399999999829e-05, 4.2639000000004035e-05, 4.223600000000105e-05, 4.2416999999995986e-05, 4.275000000000112e-05, 4.2931000000002995e-05, 4.2804999999999926e-05, 4.2402999999996416e-05, 4.227799999999976e-05, 4.258399999999829e-05, 4.279199999999983e-05, 4.265199999999719e-05, 4.2096999999997886e-05, 4.256999999999872e-05, 4.2930999999996056e-05, 4.193000000000252e-05, 4.223600000000105e-05, 4.273600000000155e-05, 4.277800000000026e-05, 4.2068999999998746e-05, 4.2388999999996846e-05, 4.276400000000069e-05, 4.2430999999995556e-05, 4.2403000000003355e-05, 4.220800000000191e-05, 4.2082999999998316e-05, 4.1903000000002855e-05, 4.258400000000523e-05, 4.2610999999997956e-05, 4.242999999999608e-05, 4.225000000000062e-05, 4.2082999999998316e-05, 4.206999999999822e-05, 4.2430999999995556e-05, 4.2569000000006185e-05, 4.2416999999995986e-05, 4.2596999999998386e-05, 4.276400000000069e-05, 4.2068999999998746e-05, 4.225000000000062e-05, 4.2903000000003855e-05, 4.272200000000198e-05, 4.240199999999694e-05, 4.225000000000062e-05, 4.2431000000002494e-05]</msg>
<status status="PASS" starttime="20201110 08:34:18.804" endtime="20201110 08:34:18.809"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.793" endtime="20201110 08:34:18.811"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.817" endtime="20201110 08:34:18.820"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:18.826" endtime="20201110 08:34:18.848"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.821" endtime="20201110 08:34:18.849"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.813" endtime="20201110 08:34:18.851"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.291" endtime="20201110 08:34:18.852"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.290" endtime="20201110 08:34:18.852"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.875" endtime="20201110 08:34:18.894"></status>
</kw>
<msg timestamp="20201110 08:34:18.895" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:18.872" endtime="20201110 08:34:18.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:18.902" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:18.897" endtime="20201110 08:34:18.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.904" endtime="20201110 08:34:18.908"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.864" endtime="20201110 08:34:18.910"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.858" endtime="20201110 08:34:18.912"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.929" endtime="20201110 08:34:19.276"></status>
</kw>
<msg timestamp="20201110 08:34:19.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041284597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041326542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:18.926" endtime="20201110 08:34:19.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041284597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041326542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:19.286" endtime="20201110 08:34:19.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.305" endtime="20201110 08:34:19.310"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.918" endtime="20201110 08:34:19.312"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.913" endtime="20201110 08:34:19.313"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:19.324" level="INFO">${RESULT} = [{'time': 0.041326542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1945000000001564e-05, 'source_diff': 4.1945000000001564e-05}, {'time': 0.041377653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:19.315" endtime="20201110 08:34:19.324"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:19.355" level="INFO">${ACCURACY} = {'time': [0.041326542, 0.041377653, 0.041426806, 0.041477944, 0.041530986, 0.041580125, 0.041633181, 0.041685319, 0.041736292, 0.041789486, 0.041841611, 0.041893722, 0.041946833, 0.041996903, 0.042046...</msg>
<status status="PASS" starttime="20201110 08:34:19.326" endtime="20201110 08:34:19.356"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.366" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201110 08:34:19.364" endtime="20201110 08:34:19.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.372" level="INFO">VALUE: [4.1945000000001564e-05, 4.225000000000062e-05, 4.224999999999368e-05, 4.219400000000234e-05, 4.2596999999998386e-05, 4.276400000000069e-05, 4.2930999999996056e-05, 4.294399999999615e-05, 4.2417000000002925e-05, 4.2417000000002925e-05, 4.2082999999998316e-05, 4.291600000000395e-05, 4.273600000000155e-05, 4.273600000000155e-05, 4.258400000000523e-05, 4.2068999999998746e-05, 4.2237000000000524e-05, 4.276400000000069e-05, 4.220800000000191e-05, 4.2568999999999246e-05, 4.2596999999998386e-05, 4.2569000000006185e-05, 4.205599999999865e-05, 4.2417000000002925e-05, 4.226400000000019e-05, 4.225000000000062e-05, 4.2096999999997886e-05, 4.2068999999998746e-05, 4.2611000000004895e-05, 4.274999999999418e-05, 4.2096999999997886e-05, 4.293000000000352e-05, 4.2430999999995556e-05, 4.2610999999997956e-05, 4.206999999999822e-05, 4.225000000000062e-05, 4.275000000000112e-05, 4.226400000000019e-05, 4.276400000000069e-05, 4.2431000000002494e-05, 4.226400000000019e-05, 4.276400000000069e-05, 4.275000000000112e-05, 4.273599999999461e-05, 4.2403000000003355e-05, 4.2181000000002244e-05, 4.2097000000004825e-05, 4.2611000000004895e-05, 4.2096999999997886e-05, 4.2444999999995126e-05]</msg>
<status status="PASS" starttime="20201110 08:34:19.369" endtime="20201110 08:34:19.374"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.357" endtime="20201110 08:34:19.375"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.382" endtime="20201110 08:34:19.385"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:19.390" endtime="20201110 08:34:19.412"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.386" endtime="20201110 08:34:19.414"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.377" endtime="20201110 08:34:19.415"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.854" endtime="20201110 08:34:19.416"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.853" endtime="20201110 08:34:19.416"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.440" endtime="20201110 08:34:19.458"></status>
</kw>
<msg timestamp="20201110 08:34:19.459" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:19.436" endtime="20201110 08:34:19.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.465" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:19.462" endtime="20201110 08:34:19.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.468" endtime="20201110 08:34:19.472"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.429" endtime="20201110 08:34:19.473"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.423" endtime="20201110 08:34:19.475"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.492" endtime="20201110 08:34:19.837"></status>
</kw>
<msg timestamp="20201110 08:34:19.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041292333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041335056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:19.488" endtime="20201110 08:34:19.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041292333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041335056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:19.847" endtime="20201110 08:34:19.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.866" endtime="20201110 08:34:19.874"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.481" endtime="20201110 08:34:19.875"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.476" endtime="20201110 08:34:19.877"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:19.887" level="INFO">${RESULT} = [{'time': 0.041335056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2723000000001454e-05, 'source_diff': 4.2723000000001454e-05}, {'time': 0.041385125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:19.878" endtime="20201110 08:34:19.888"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:19.919" level="INFO">${ACCURACY} = {'time': [0.041335056, 0.041385125, 0.041436278, 0.041487375, 0.041537486, 0.041590458, 0.041642569, 0.041694736, 0.041747722, 0.041794806, 0.041844875, 0.041894083, 0.041942083, 0.041990167, 0.042038...</msg>
<status status="PASS" starttime="20201110 08:34:19.890" endtime="20201110 08:34:19.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.931" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201110 08:34:19.928" endtime="20201110 08:34:19.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.936" level="INFO">VALUE: [4.2723000000001454e-05, 4.1903000000002855e-05, 4.2874999999997776e-05, 4.2931000000002995e-05, 4.292999999999658e-05, 4.273599999999461e-05, 4.2068999999998746e-05, 4.245800000000216e-05, 4.225000000000062e-05, 4.254199999999958e-05, 4.222199999999454e-05, 4.2374999999997276e-05, 4.223600000000105e-05, 4.1903000000002855e-05, 4.1931000000001994e-05, 4.238799999999737e-05, 4.2082999999998316e-05, 4.2403000000003355e-05, 4.256999999999872e-05, 4.2596999999998386e-05, 4.273600000000155e-05, 4.276299999999428e-05, 4.242999999999608e-05, 4.1888999999996346e-05, 4.275000000000112e-05, 4.2139000000003535e-05, 4.225000000000062e-05, 4.191599999999601e-05, 4.2360999999997706e-05, 4.223600000000105e-05, 4.206999999999822e-05, 4.276400000000069e-05, 4.2903000000003855e-05, 4.243000000000302e-05, 4.2416999999995986e-05, 4.225000000000062e-05, 4.290199999999744e-05, 4.2568999999999246e-05, 4.2402999999996416e-05, 4.204199999999908e-05, 4.275000000000112e-05, 4.2068999999998746e-05, 4.274999999999418e-05, 4.276400000000069e-05, 4.245800000000216e-05, 4.1931000000001994e-05, 4.1945000000001564e-05, 4.222200000000148e-05, 4.225000000000062e-05, 4.2054999999999176e-05]</msg>
<status status="PASS" starttime="20201110 08:34:19.933" endtime="20201110 08:34:19.938"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.921" endtime="20201110 08:34:19.940"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.947" endtime="20201110 08:34:19.950"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:19.956" endtime="20201110 08:34:19.978"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.951" endtime="20201110 08:34:19.979"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.942" endtime="20201110 08:34:19.981"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.419" endtime="20201110 08:34:19.982"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.417" endtime="20201110 08:34:19.982"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.005" endtime="20201110 08:34:20.024"></status>
</kw>
<msg timestamp="20201110 08:34:20.025" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:20.002" endtime="20201110 08:34:20.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:20.031" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:20.027" endtime="20201110 08:34:20.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.034" endtime="20201110 08:34:20.038"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.994" endtime="20201110 08:34:20.039"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.988" endtime="20201110 08:34:20.041"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.057" endtime="20201110 08:34:20.406"></status>
</kw>
<msg timestamp="20201110 08:34:20.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041364097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041413069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:20.054" endtime="20201110 08:34:20.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:20.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041364097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041413069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:20.416" endtime="20201110 08:34:20.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.435" endtime="20201110 08:34:20.440"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.047" endtime="20201110 08:34:20.442"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.042" endtime="20201110 08:34:20.443"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:20.454" level="INFO">${RESULT} = [{'time': 0.041413069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.897199999999435e-05, 'source_diff': 4.897199999999435e-05}, {'time': 0.041468083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:20.445" endtime="20201110 08:34:20.455"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:20.486" level="INFO">${ACCURACY} = {'time': [0.041413069, 0.041468083, 0.041523333, 0.041579403, 0.041639472, 0.041697722, 0.041752764, 0.041808875, 0.041863917, 0.041922069, 0.041981194, 0.042041333, 0.042095347, 0.042154583, 0.042212...</msg>
<status status="PASS" starttime="20201110 08:34:20.456" endtime="20201110 08:34:20.486"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:20.497" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201110 08:34:20.494" endtime="20201110 08:34:20.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:20.502" level="INFO">VALUE: [4.897199999999435e-05, 4.948600000000136e-05, 4.948600000000136e-05, 4.947200000000179e-05, 4.981899999999956e-05, 4.915299999999623e-05, 4.977800000000032e-05, 4.931899999999906e-05, 4.8931000000002056e-05, 4.9401999999997004e-05, 4.929099999999992e-05, 4.947200000000179e-05, 4.930499999999949e-05, 4.918000000000283e-05, 4.981899999999956e-05, 4.98339999999986e-05, 4.9137999999997184e-05, 4.93060000000059e-05, 4.947200000000179e-05, 4.962499999999759e-05, 4.9653000000003666e-05, 4.9139000000003596e-05, 4.906900000000575e-05, 4.931899999999906e-05, 4.948600000000136e-05, 4.965299999999673e-05, 4.943000000000308e-05, 4.95140000000005e-05, 4.898600000000086e-05, 4.9223000000001016e-05, 4.95140000000005e-05, 4.933299999999863e-05, 4.9137999999997184e-05, 4.900000000000043e-05, 4.965200000000419e-05, 4.9665999999996824e-05, 4.998600000000186e-05, 4.9167000000002736e-05, 4.948600000000136e-05, 4.931899999999906e-05, 4.981899999999956e-05, 4.998599999999492e-05, 4.8931000000002056e-05, 4.98339999999986e-05, 4.9667000000003236e-05, 4.962499999999759e-05, 4.936199999999724e-05, 4.900000000000043e-05, 4.980499999999999e-05, 5.000000000000143e-05]</msg>
<status status="PASS" starttime="20201110 08:34:20.499" endtime="20201110 08:34:20.508"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.488" endtime="20201110 08:34:20.510"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.517" endtime="20201110 08:34:20.519"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:20.525" endtime="20201110 08:34:20.547"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.521" endtime="20201110 08:34:20.549"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.512" endtime="20201110 08:34:20.550"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.984" endtime="20201110 08:34:20.551"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.983" endtime="20201110 08:34:20.551"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.574" endtime="20201110 08:34:20.595"></status>
</kw>
<msg timestamp="20201110 08:34:20.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:20.571" endtime="20201110 08:34:20.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:20.602" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:20.598" endtime="20201110 08:34:20.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.605" endtime="20201110 08:34:20.609"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.564" endtime="20201110 08:34:20.610"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.558" endtime="20201110 08:34:20.612"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.628" endtime="20201110 08:34:20.981"></status>
</kw>
<msg timestamp="20201110 08:34:20.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041301569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041389986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:20.625" endtime="20201110 08:34:20.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041301569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041389986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:20.992" endtime="20201110 08:34:21.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.012" endtime="20201110 08:34:21.018"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.618" endtime="20201110 08:34:21.019"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.613" endtime="20201110 08:34:21.021"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:21.032" level="INFO">${RESULT} = [{'time': 0.041389986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.841699999999342e-05, 'source_diff': 8.841699999999342e-05}, {'time': 0.041488194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:21.023" endtime="20201110 08:34:21.032"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:21.063" level="INFO">${ACCURACY} = {'time': [0.041389986, 0.041488194, 0.041584431, 0.041682569, 0.041781764, 0.041877931, 0.041977139, 0.042070333, 0.042166514, 0.042263694, 0.042358931, 0.042457056, 0.042550264, 0.0426495, 0.04274770...</msg>
<status status="PASS" starttime="20201110 08:34:21.034" endtime="20201110 08:34:21.064"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.075" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201110 08:34:21.072" endtime="20201110 08:34:21.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.080" level="INFO">VALUE: [8.841699999999342e-05, 8.909699999999632e-05, 8.901399999999837e-05, 8.895800000000009e-05, 8.8945e-05, 8.905599999999708e-05, 8.843099999999993e-05, 8.86800000000007e-05, 8.907000000000359e-05, 8.836099999999514e-05, 8.888900000000172e-05, 8.908400000000316e-05, 8.84999999999983e-05, 8.868100000000018e-05, 8.900000000000574e-05, 8.901400000000531e-05, 8.82370000000049e-05, 8.836099999999514e-05, 8.832000000000284e-05, 8.874999999999855e-05, 8.82370000000049e-05, 8.84449999999995e-05, 8.836100000000208e-05, 8.836099999999514e-05, 8.851399999999787e-05, 8.84999999999983e-05, 8.837500000000165e-05, 8.855600000000352e-05, 8.823599999999848e-05, 8.880600000000377e-05, 8.854200000000395e-05, 8.919400000000077e-05, 8.893100000000043e-05, 8.854200000000395e-05, 8.869400000000027e-05, 8.838900000000122e-05, 8.844400000000002e-05, 8.838899999999428e-05, 8.873600000000592e-05, 8.874999999999855e-05, 8.897199999999966e-05, 8.920800000000034e-05, 8.836100000000208e-05, 8.851400000000481e-05, 8.89869999999987e-05, 8.857000000000309e-05, 8.924999999999905e-05, 8.911100000000283e-05, 8.854199999999701e-05, 8.879099999999779e-05]</msg>
<status status="PASS" starttime="20201110 08:34:21.077" endtime="20201110 08:34:21.082"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.065" endtime="20201110 08:34:21.084"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.090" endtime="20201110 08:34:21.093"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:21.098" endtime="20201110 08:34:21.120"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.094" endtime="20201110 08:34:21.122"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.085" endtime="20201110 08:34:21.124"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.553" endtime="20201110 08:34:21.124"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.552" endtime="20201110 08:34:21.125"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.148" endtime="20201110 08:34:21.169"></status>
</kw>
<msg timestamp="20201110 08:34:21.170" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:21.144" endtime="20201110 08:34:21.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:21.172" endtime="20201110 08:34:21.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.178" endtime="20201110 08:34:21.182"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.137" endtime="20201110 08:34:21.184"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.131" endtime="20201110 08:34:21.185"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.202" endtime="20201110 08:34:21.551"></status>
</kw>
<msg timestamp="20201110 08:34:21.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041285181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041374875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:21.199" endtime="20201110 08:34:21.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041285181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041374875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:21.560" endtime="20201110 08:34:21.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.579" endtime="20201110 08:34:21.585"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.191" endtime="20201110 08:34:21.586"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.187" endtime="20201110 08:34:21.588"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:21.599" level="INFO">${RESULT} = [{'time': 0.041374875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.969400000000127e-05, 'source_diff': 8.969400000000127e-05}, {'time': 0.041473097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:21.590" endtime="20201110 08:34:21.599"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:21.630" level="INFO">${ACCURACY} = {'time': [0.041374875, 0.041473097, 0.041569278, 0.041665431, 0.041760653, 0.041857889, 0.041955125, 0.042054236, 0.042149556, 0.042248681, 0.042345903, 0.042442083, 0.042538306, 0.042632431, 0.042727...</msg>
<status status="PASS" starttime="20201110 08:34:21.601" endtime="20201110 08:34:21.630"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.641" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201110 08:34:21.639" endtime="20201110 08:34:21.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.647" level="INFO">VALUE: [8.969400000000127e-05, 8.940300000000179e-05, 8.929199999999776e-05, 8.934800000000298e-05, 8.998600000000023e-05, 9.023600000000048e-05, 8.954200000000495e-05, 8.952799999999844e-05, 8.986199999999611e-05, 8.925000000000599e-05, 8.990299999999535e-05, 9.001399999999937e-05, 8.973699999999946e-05, 8.920899999999982e-05, 8.938900000000222e-05, 9.005499999999861e-05, 8.995900000000057e-05, 9.016699999999517e-05, 9.019399999999483e-05, 8.958399999999672e-05, 8.948599999999973e-05, 8.997200000000066e-05, 8.948600000000667e-05, 9.023599999999354e-05, 9.01800000000022e-05, 8.943100000000093e-05, 8.934800000000298e-05, 8.934699999999657e-05, 9.01800000000022e-05, 9.006999999999765e-05, 9.020800000000134e-05, 8.95129999999994e-05, 8.954200000000495e-05, 9.026399999999962e-05, 8.954200000000495e-05, 8.947200000000016e-05, 8.926400000000556e-05, 8.958400000000366e-05, 8.991700000000186e-05, 8.997200000000066e-05, 8.998600000000023e-05, 8.968100000000118e-05, 8.965300000000204e-05, 8.934700000000351e-05, 9.018100000000168e-05, 8.970800000000084e-05, 8.97920000000052e-05, 8.98329999999975e-05, 8.988900000000272e-05, 8.926399999999862e-05]</msg>
<status status="PASS" starttime="20201110 08:34:21.643" endtime="20201110 08:34:21.648"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.632" endtime="20201110 08:34:21.650"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.656" endtime="20201110 08:34:21.659"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:21.665" endtime="20201110 08:34:21.686"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.660" endtime="20201110 08:34:21.688"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.652" endtime="20201110 08:34:21.690"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.127" endtime="20201110 08:34:21.691"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.126" endtime="20201110 08:34:21.691"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.714" endtime="20201110 08:34:21.735"></status>
</kw>
<msg timestamp="20201110 08:34:21.736" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:21.711" endtime="20201110 08:34:21.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.742" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:21.738" endtime="20201110 08:34:21.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.745" endtime="20201110 08:34:21.748"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.703" endtime="20201110 08:34:21.750"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.697" endtime="20201110 08:34:21.752"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.768" endtime="20201110 08:34:22.113"></status>
</kw>
<msg timestamp="20201110 08:34:22.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041419917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041510264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:21.765" endtime="20201110 08:34:22.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:22.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041419917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041510264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:22.122" endtime="20201110 08:34:22.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.141" endtime="20201110 08:34:22.148"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.758" endtime="20201110 08:34:22.150"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.753" endtime="20201110 08:34:22.151"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:22.162" level="INFO">${RESULT} = [{'time': 0.041510264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.034699999999757e-05, 'source_diff': 9.034699999999757e-05}, {'time': 0.041607444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:22.153" endtime="20201110 08:34:22.162"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:22.192" level="INFO">${ACCURACY} = {'time': [0.041510264, 0.041607444, 0.041708681, 0.041805903, 0.041901097, 0.041997292, 0.042096486, 0.042196694, 0.042294889, 0.042397139, 0.042495319, 0.042595528, 0.04269475, 0.042793944, 0.0428911...</msg>
<status status="PASS" starttime="20201110 08:34:22.164" endtime="20201110 08:34:22.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:22.203" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201110 08:34:22.201" endtime="20201110 08:34:22.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:22.208" level="INFO">VALUE: [9.034699999999757e-05, 9.056899999999868e-05, 9.109799999999779e-05, 9.070900000000132e-05, 9.048600000000073e-05, 9.033399999999747e-05, 9.072200000000141e-05, 9.03879999999968e-05, 9.087500000000415e-05, 9.125000000000105e-05, 9.08879999999973e-05, 9.03199999999979e-05, 9.055599999999858e-05, 9.029099999999929e-05, 9.102799999999994e-05, 9.073600000000098e-05, 9.034700000000451e-05, 9.079199999999926e-05, 9.108299999999875e-05, 9.087500000000415e-05, 9.123600000000148e-05, 9.116699999999617e-05, 9.111100000000483e-05, 9.075000000000055e-05, 9.113899999999703e-05, 9.037499999999671e-05, 9.075000000000055e-05, 9.104199999999951e-05, 9.080499999999936e-05, 9.105599999999908e-05, 9.025000000000005e-05, 9.059800000000423e-05, 9.112499999999746e-05, 9.054200000000595e-05, 9.037500000000365e-05, 9.062499999999696e-05, 9.063900000000347e-05, 9.047200000000116e-05, 9.084699999999807e-05, 9.06250000000039e-05, 9.054199999999901e-05, 9.075000000000055e-05, 9.101400000000037e-05, 9.054199999999901e-05, 9.072200000000141e-05, 9.08329999999985e-05, 9.102799999999994e-05, 9.048600000000073e-05, 9.120800000000234e-05, 9.044399999999508e-05]</msg>
<status status="PASS" starttime="20201110 08:34:22.205" endtime="20201110 08:34:22.210"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.194" endtime="20201110 08:34:22.211"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.218" endtime="20201110 08:34:22.220"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:22.226" endtime="20201110 08:34:22.247"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.221" endtime="20201110 08:34:22.249"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.213" endtime="20201110 08:34:22.250"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.693" endtime="20201110 08:34:22.251"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.692" endtime="20201110 08:34:22.251"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.274" endtime="20201110 08:34:22.292"></status>
</kw>
<msg timestamp="20201110 08:34:22.293" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:22.270" endtime="20201110 08:34:22.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:22.300" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:22.296" endtime="20201110 08:34:22.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.302" endtime="20201110 08:34:22.305"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.263" endtime="20201110 08:34:22.307"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.258" endtime="20201110 08:34:22.308"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.325" endtime="20201110 08:34:22.657"></status>
</kw>
<msg timestamp="20201110 08:34:22.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039988986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040080333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:22.321" endtime="20201110 08:34:22.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:22.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039988986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040080333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:22.667" endtime="20201110 08:34:22.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.686" endtime="20201110 08:34:22.691"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.314" endtime="20201110 08:34:22.693"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.310" endtime="20201110 08:34:22.694"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:22.704" level="INFO">${RESULT} = [{'time': 0.040080333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.134700000000551e-05, 'source_diff': 9.134700000000551e-05}, {'time': 0.040176542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:22.696" endtime="20201110 08:34:22.705"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:22.735" level="INFO">${ACCURACY} = {'time': [0.040080333, 0.040176542, 0.040273889, 0.040372083, 0.040471153, 0.040567347, 0.040667514, 0.040765708, 0.040861917, 0.04096125, 0.041061319, 0.041163528, 0.041264889, 0.041361958, 0.0414623...</msg>
<status status="PASS" starttime="20201110 08:34:22.706" endtime="20201110 08:34:22.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:22.746" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201110 08:34:22.743" endtime="20201110 08:34:22.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:22.751" level="INFO">VALUE: [9.134700000000551e-05, 9.170900000000232e-05, 9.170800000000284e-05, 9.215200000000506e-05, 9.206999999999965e-05, 9.126399999999368e-05, 9.138900000000422e-05, 9.212499999999846e-05, 9.14859999999948e-05, 9.168099999999624e-05, 9.180500000000036e-05, 9.162499999999796e-05, 9.173600000000198e-05, 9.1332999999999e-05, 9.136199999999761e-05, 9.118099999999574e-05, 9.159699999999882e-05, 9.170900000000232e-05, 9.161099999999839e-05, 9.16250000000049e-05, 9.19870000000017e-05, 9.141600000000388e-05, 9.218100000000368e-05, 9.168100000000318e-05, 9.220900000000282e-05, 9.162499999999796e-05, 9.165199999999762e-05, 9.119500000000225e-05, 9.138900000000422e-05, 9.17079999999959e-05, 9.174999999999461e-05, 9.176400000000112e-05, 9.136099999999814e-05, 9.175000000000155e-05, 9.138800000000474e-05, 9.206999999999965e-05, 9.152700000000097e-05, 9.180500000000036e-05, 9.201400000000137e-05, 9.16250000000049e-05, 9.190199999999787e-05, 9.140300000000379e-05, 9.14870000000012e-05, 9.170800000000284e-05, 9.154200000000001e-05, 9.208399999999922e-05, 9.145800000000259e-05, 9.138899999999728e-05, 9.147200000000216e-05, 9.154200000000001e-05]</msg>
<status status="PASS" starttime="20201110 08:34:22.748" endtime="20201110 08:34:22.752"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.737" endtime="20201110 08:34:22.754"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.760" endtime="20201110 08:34:22.763"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:22.769" endtime="20201110 08:34:22.790"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.764" endtime="20201110 08:34:22.792"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.756" endtime="20201110 08:34:22.794"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.254" endtime="20201110 08:34:22.794"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.252" endtime="20201110 08:34:22.794"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.817" endtime="20201110 08:34:22.835"></status>
</kw>
<msg timestamp="20201110 08:34:22.837" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:22.813" endtime="20201110 08:34:22.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:22.843" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:22.839" endtime="20201110 08:34:22.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.845" endtime="20201110 08:34:22.849"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.806" endtime="20201110 08:34:22.850"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.801" endtime="20201110 08:34:22.852"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.868" endtime="20201110 08:34:23.203"></status>
</kw>
<msg timestamp="20201110 08:34:23.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040048611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040140792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:22.865" endtime="20201110 08:34:23.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040048611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040140792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:23.212" endtime="20201110 08:34:23.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.231" endtime="20201110 08:34:23.236"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.858" endtime="20201110 08:34:23.238"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.853" endtime="20201110 08:34:23.239"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:23.250" level="INFO">${RESULT} = [{'time': 0.040140792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.218100000000368e-05, 'source_diff': 9.218100000000368e-05}, {'time': 0.040238944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:23.241" endtime="20201110 08:34:23.250"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:23.280" level="INFO">${ACCURACY} = {'time': [0.040140792, 0.040238944, 0.040336181, 0.040436347, 0.040534569, 0.040632722, 0.040729917, 0.040832125, 0.040933347, 0.041034556, 0.041134708, 0.041231931, 0.041335111, 0.041432319, 0.041532...</msg>
<status status="PASS" starttime="20201110 08:34:23.252" endtime="20201110 08:34:23.280"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.291" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201110 08:34:23.289" endtime="20201110 08:34:23.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.296" level="INFO">VALUE: [9.218100000000368e-05, 9.222199999999597e-05, 9.284799999999954e-05, 9.28330000000005e-05, 9.255500000000111e-05, 9.276400000000212e-05, 9.244499999999656e-05, 9.259699999999982e-05, 9.277800000000169e-05, 9.316699999999817e-05, 9.273599999999604e-05, 9.262499999999896e-05, 9.230500000000086e-05, 9.284700000000007e-05, 9.270899999999638e-05, 9.26529999999981e-05, 9.279200000000126e-05, 9.247200000000316e-05, 9.252699999999503e-05, 9.262499999999896e-05, 9.291699999999792e-05, 9.251399999999493e-05, 9.276400000000212e-05, 9.284799999999954e-05, 9.225000000000205e-05, 9.308400000000022e-05, 9.231900000000043e-05, 9.290199999999887e-05, 9.270899999999638e-05, 9.224999999999511e-05, 9.297200000000366e-05, 9.293099999999749e-05, 9.255600000000058e-05, 9.312499999999946e-05, 9.270800000000384e-05, 9.261099999999939e-05, 9.230500000000086e-05, 9.304200000000151e-05, 9.243099999999699e-05, 9.290199999999887e-05, 9.274999999999561e-05, 9.222200000000291e-05, 9.31529999999986e-05, 9.234699999999957e-05, 9.290299999999835e-05, 9.236199999999861e-05, 9.276399999999518e-05, 9.241599999999794e-05, 9.313900000000597e-05, 9.28330000000005e-05]</msg>
<status status="PASS" starttime="20201110 08:34:23.293" endtime="20201110 08:34:23.298"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.282" endtime="20201110 08:34:23.299"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.306" endtime="20201110 08:34:23.308"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:23.314" endtime="20201110 08:34:23.335"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.309" endtime="20201110 08:34:23.337"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.301" endtime="20201110 08:34:23.339"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.797" endtime="20201110 08:34:23.339"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.795" endtime="20201110 08:34:23.340"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.362" endtime="20201110 08:34:23.381"></status>
</kw>
<msg timestamp="20201110 08:34:23.382" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:23.359" endtime="20201110 08:34:23.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.388" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:23.384" endtime="20201110 08:34:23.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.390" endtime="20201110 08:34:23.394"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.352" endtime="20201110 08:34:23.396"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.346" endtime="20201110 08:34:23.397"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.414" endtime="20201110 08:34:23.747"></status>
</kw>
<msg timestamp="20201110 08:34:23.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040228528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040322444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:23.410" endtime="20201110 08:34:23.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040228528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040322444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:23.756" endtime="20201110 08:34:23.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.774" endtime="20201110 08:34:23.780"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.403" endtime="20201110 08:34:23.782"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.398" endtime="20201110 08:34:23.783"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:23.794" level="INFO">${RESULT} = [{'time': 0.040322444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.391599999999944e-05, 'source_diff': 9.391599999999944e-05}, {'time': 0.040421653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:23.784" endtime="20201110 08:34:23.794"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:23.824" level="INFO">${ACCURACY} = {'time': [0.040322444, 0.040421653, 0.040524875, 0.040627028, 0.040728292, 0.040832333, 0.040932583, 0.041035764, 0.041137903, 0.041241153, 0.041341347, 0.041444472, 0.041544722, 0.041646917, 0.041748...</msg>
<status status="PASS" starttime="20201110 08:34:23.796" endtime="20201110 08:34:23.824"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.835" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201110 08:34:23.833" endtime="20201110 08:34:23.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.840" level="INFO">VALUE: [9.391599999999944e-05, 9.376400000000312e-05, 9.359700000000082e-05, 9.362499999999996e-05, 9.36529999999991e-05, 9.377699999999628e-05, 9.417999999999926e-05, 9.398600000000423e-05, 9.348600000000373e-05, 9.3945000000005e-05, 9.361100000000039e-05, 9.361100000000039e-05, 9.387500000000021e-05, 9.404199999999557e-05, 9.397199999999772e-05, 9.319399999999783e-05, 9.344399999999808e-05, 9.323600000000348e-05, 9.374999999999661e-05, 9.397200000000466e-05, 9.39859999999973e-05, 9.358300000000125e-05, 9.377799999999575e-05, 9.401400000000337e-05, 9.359700000000082e-05, 9.352800000000244e-05, 9.319399999999783e-05, 9.323599999999654e-05, 9.370900000000432e-05, 9.367999999999876e-05, 9.345799999999765e-05, 9.359700000000082e-05, 9.316700000000511e-05, 9.380499999999542e-05, 9.354100000000254e-05, 9.379100000000279e-05, 9.38330000000015e-05, 9.327800000000219e-05, 9.406900000000218e-05, 9.342999999999851e-05, 9.406999999999471e-05, 9.320800000000434e-05, 9.34859999999968e-05, 9.41659999999997e-05, 9.36529999999991e-05, 9.399999999999686e-05, 9.404100000000304e-05, 9.376400000000312e-05, 9.352699999999603e-05, 9.362499999999996e-05]</msg>
<status status="PASS" starttime="20201110 08:34:23.837" endtime="20201110 08:34:23.842"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.826" endtime="20201110 08:34:23.843"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.850" endtime="20201110 08:34:23.852"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:23.858" endtime="20201110 08:34:23.880"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.854" endtime="20201110 08:34:23.881"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.845" endtime="20201110 08:34:23.883"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.342" endtime="20201110 08:34:23.883"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.341" endtime="20201110 08:34:23.884"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.906" endtime="20201110 08:34:23.925"></status>
</kw>
<msg timestamp="20201110 08:34:23.926" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:23.903" endtime="20201110 08:34:23.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:23.928" endtime="20201110 08:34:23.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.934" endtime="20201110 08:34:23.938"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.896" endtime="20201110 08:34:23.940"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.890" endtime="20201110 08:34:23.941"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.958" endtime="20201110 08:34:24.304"></status>
</kw>
<msg timestamp="20201110 08:34:24.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040186944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040281542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:23.954" endtime="20201110 08:34:24.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:24.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040186944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040281542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:24.314" endtime="20201110 08:34:24.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.332" endtime="20201110 08:34:24.340"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.947" endtime="20201110 08:34:24.341"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.943" endtime="20201110 08:34:24.343"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:24.353" level="INFO">${RESULT} = [{'time': 0.040281542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.459799999999435e-05, 'source_diff': 9.459799999999435e-05}, {'time': 0.040386694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:24.344" endtime="20201110 08:34:24.354"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:24.383" level="INFO">${ACCURACY} = {'time': [0.040281542, 0.040386694, 0.040485875, 0.040590083, 0.040694236, 0.040795458, 0.040900653, 0.041001875, 0.041106083, 0.041211236, 0.041311444, 0.041416667, 0.041517861, 0.041617028, 0.041722...</msg>
<status status="PASS" starttime="20201110 08:34:24.355" endtime="20201110 08:34:24.384"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:24.394" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201110 08:34:24.392" endtime="20201110 08:34:24.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:24.400" level="INFO">VALUE: [9.459799999999435e-05, 9.480500000000336e-05, 9.426399999999668e-05, 9.467999999999976e-05, 9.495799999999915e-05, 9.462500000000096e-05, 9.433400000000147e-05, 9.423599999999754e-05, 9.511100000000189e-05, 9.47079999999989e-05, 9.444400000000602e-05, 9.516700000000017e-05, 9.45000000000043e-05, 9.444499999999856e-05, 9.422200000000491e-05, 9.507000000000265e-05, 9.473699999999752e-05, 9.46530000000001e-05, 9.444399999999908e-05, 9.419499999999831e-05, 9.426399999999668e-05, 9.426400000000362e-05, 9.486200000000111e-05, 9.519499999999931e-05, 9.45000000000043e-05, 9.447199999999822e-05, 9.427800000000319e-05, 9.516700000000017e-05, 9.444499999999856e-05, 9.45000000000043e-05, 9.431899999999549e-05, 9.458300000000225e-05, 9.4333000000002e-05, 9.447199999999822e-05, 9.499999999999786e-05, 9.44450000000055e-05, 9.506899999999624e-05, 9.459700000000182e-05, 9.476399999999718e-05, 9.512500000000146e-05, 9.444499999999856e-05, 9.473599999999804e-05, 9.472199999999847e-05, 9.440299999999985e-05, 9.507000000000265e-05, 9.511100000000189e-05, 9.495899999999863e-05, 9.440299999999985e-05, 9.516700000000017e-05, 9.501399999999743e-05]</msg>
<status status="PASS" starttime="20201110 08:34:24.397" endtime="20201110 08:34:24.401"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.385" endtime="20201110 08:34:24.403"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.409" endtime="20201110 08:34:24.412"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:24.417" endtime="20201110 08:34:24.439"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.413" endtime="20201110 08:34:24.441"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.404" endtime="20201110 08:34:24.442"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.886" endtime="20201110 08:34:24.443"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.885" endtime="20201110 08:34:24.443"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.468" endtime="20201110 08:34:24.492"></status>
</kw>
<msg timestamp="20201110 08:34:24.493" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:24.462" endtime="20201110 08:34:24.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:24.499" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:24.495" endtime="20201110 08:34:24.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.501" endtime="20201110 08:34:24.505"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.455" endtime="20201110 08:34:24.507"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.449" endtime="20201110 08:34:24.508"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.524" endtime="20201110 08:34:24.866"></status>
</kw>
<msg timestamp="20201110 08:34:24.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047429917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047525819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:24.521" endtime="20201110 08:34:24.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:24.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047429917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047525819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:24.877" endtime="20201110 08:34:24.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.897" endtime="20201110 08:34:24.902"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.514" endtime="20201110 08:34:24.904"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.509" endtime="20201110 08:34:24.905"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:24.916" level="INFO">${RESULT} = [{'time': 0.047525819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.590199999999494e-05, 'source_diff': 9.590199999999494e-05}, {'time': 0.047627958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:24.907" endtime="20201110 08:34:24.917"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:24.948" level="INFO">${ACCURACY} = {'time': [0.047525819, 0.047627958, 0.047730194, 0.047831319, 0.047932542, 0.048033722, 0.048138889, 0.048240139, 0.048342278, 0.048443458, 0.048548681, 0.048653931, 0.048760125, 0.048864319, 0.048965...</msg>
<status status="PASS" starttime="20201110 08:34:24.918" endtime="20201110 08:34:24.948"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:24.959" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201110 08:34:24.956" endtime="20201110 08:34:24.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:24.964" level="INFO">VALUE: [9.590199999999494e-05, 9.594400000000058e-05, 9.616599999999476e-05, 9.519399999999983e-05, 9.523599999999854e-05, 9.55409999999976e-05, 9.606999999999671e-05, 9.569499999999981e-05, 9.545899999999913e-05, 9.604100000000504e-05, 9.587500000000221e-05, 9.541700000000042e-05, 9.595800000000015e-05, 9.609700000000332e-05, 9.551400000000487e-05, 9.609699999999638e-05, 9.595800000000015e-05, 9.522199999999897e-05, 9.609700000000332e-05, 9.616700000000117e-05, 9.54859999999988e-05, 9.549999999999836e-05, 9.588900000000178e-05, 9.544499999999956e-05, 9.577800000000469e-05, 9.566699999999373e-05, 9.526400000000462e-05, 9.573599999999904e-05, 9.612499999999552e-05, 9.540300000000085e-05, 9.59159999999945e-05, 9.58330000000035e-05, 9.547200000000616e-05, 9.580499999999742e-05, 9.551399999999793e-05, 9.56530000000011e-05, 9.538900000000128e-05, 9.574999999999861e-05, 9.523599999999854e-05, 9.558299999999631e-05, 9.529199999999682e-05, 9.595899999999963e-05, 9.53609999999952e-05, 9.615200000000212e-05, 9.557000000000315e-05, 9.58200000000034e-05, 9.537500000000171e-05, 9.558300000000325e-05, 9.608399999999628e-05, 9.598699999999877e-05]</msg>
<status status="PASS" starttime="20201110 08:34:24.961" endtime="20201110 08:34:24.966"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.949" endtime="20201110 08:34:24.967"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.974" endtime="20201110 08:34:24.977"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:24.983" endtime="20201110 08:34:25.005"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.978" endtime="20201110 08:34:25.007"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.969" endtime="20201110 08:34:25.008"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.445" endtime="20201110 08:34:25.009"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.444" endtime="20201110 08:34:25.009"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.032" endtime="20201110 08:34:25.053"></status>
</kw>
<msg timestamp="20201110 08:34:25.055" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:25.029" endtime="20201110 08:34:25.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:25.061" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:25.057" endtime="20201110 08:34:25.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.063" endtime="20201110 08:34:25.067"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.022" endtime="20201110 08:34:25.069"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.016" endtime="20201110 08:34:25.070"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.087" endtime="20201110 08:34:25.435"></status>
</kw>
<msg timestamp="20201110 08:34:25.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041455778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041552347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:25.084" endtime="20201110 08:34:25.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:25.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041455778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041552347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:25.445" endtime="20201110 08:34:25.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.464" endtime="20201110 08:34:25.470"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.076" endtime="20201110 08:34:25.471"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.072" endtime="20201110 08:34:25.473"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:25.484" level="INFO">${RESULT} = [{'time': 0.041552347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.656900000000468e-05, 'source_diff': 9.656900000000468e-05}, {'time': 0.041653625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:25.474" endtime="20201110 08:34:25.484"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:25.515" level="INFO">${ACCURACY} = {'time': [0.041552347, 0.041653625, 0.041757847, 0.041863014, 0.041966208, 0.042071417, 0.042177681, 0.042279875, 0.042386042, 0.042489264, 0.042591403, 0.042693653, 0.042798861, 0.042904056, 0.043006...</msg>
<status status="PASS" starttime="20201110 08:34:25.486" endtime="20201110 08:34:25.515"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:25.526" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201110 08:34:25.524" endtime="20201110 08:34:25.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:25.532" level="INFO">VALUE: [9.656900000000468e-05, 9.677799999999875e-05, 9.629099999999835e-05, 9.709699999999738e-05, 9.680499999999842e-05, 9.631999999999696e-05, 9.638900000000228e-05, 9.64859999999998e-05, 9.676399999999918e-05, 9.715299999999566e-05, 9.659699999999688e-05, 9.701399999999943e-05, 9.695800000000115e-05, 9.68200000000044e-05, 9.637500000000271e-05, 9.624999999999911e-05, 9.704199999999857e-05, 9.66530000000021e-05, 9.65279999999985e-05, 9.68609999999967e-05, 9.65279999999985e-05, 9.71939999999949e-05, 9.630499999999792e-05, 9.634700000000357e-05, 9.670900000000038e-05, 9.69860000000003e-05, 9.672299999999995e-05, 9.733299999999806e-05, 9.699999999999986e-05, 9.636100000000314e-05, 9.64870000000062e-05, 9.693100000000149e-05, 9.640300000000185e-05, 9.674999999999961e-05, 9.636100000000314e-05, 9.693099999999455e-05, 9.718100000000174e-05, 9.641700000000142e-05, 9.637499999999577e-05, 9.647200000000022e-05, 9.701400000000637e-05, 9.706999999999771e-05, 9.669500000000081e-05, 9.702699999999953e-05, 9.627800000000519e-05, 9.712499999999652e-05, 9.693000000000201e-05, 9.666700000000167e-05, 9.659699999999688e-05, 9.665299999999516e-05]</msg>
<status status="PASS" starttime="20201110 08:34:25.528" endtime="20201110 08:34:25.538"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.517" endtime="20201110 08:34:25.540"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.546" endtime="20201110 08:34:25.549"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:25.555" endtime="20201110 08:34:25.576"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.550" endtime="20201110 08:34:25.578"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.542" endtime="20201110 08:34:25.580"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.011" endtime="20201110 08:34:25.581"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.010" endtime="20201110 08:34:25.581"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.604" endtime="20201110 08:34:25.625"></status>
</kw>
<msg timestamp="20201110 08:34:25.626" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:25.601" endtime="20201110 08:34:25.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:25.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:25.629" endtime="20201110 08:34:25.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.635" endtime="20201110 08:34:25.639"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.593" endtime="20201110 08:34:25.640"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.587" endtime="20201110 08:34:25.642"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.659" endtime="20201110 08:34:26.006"></status>
</kw>
<msg timestamp="20201110 08:34:26.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041196611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041294458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:25.655" endtime="20201110 08:34:26.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:26.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041196611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041294458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:26.016" endtime="20201110 08:34:26.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.035" endtime="20201110 08:34:26.040"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.648" endtime="20201110 08:34:26.042"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.643" endtime="20201110 08:34:26.043"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:26.054" level="INFO">${RESULT} = [{'time': 0.041294458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.784699999999813e-05, 'source_diff': 9.784699999999813e-05}, {'time': 0.041402681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:26.045" endtime="20201110 08:34:26.055"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:26.087" level="INFO">${ACCURACY} = {'time': [0.041294458, 0.041402681, 0.041508889, 0.041615111, 0.041721278, 0.041823542, 0.041928764, 0.042036083, 0.042142208, 0.042246472, 0.042353667, 0.042456875, 0.042565069, 0.042667278, 0.042771...</msg>
<status status="PASS" starttime="20201110 08:34:26.056" endtime="20201110 08:34:26.088"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:26.100" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201110 08:34:26.098" endtime="20201110 08:34:26.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:26.106" level="INFO">VALUE: [9.784699999999813e-05, 9.806999999999871e-05, 9.816700000000317e-05, 9.806900000000618e-05, 9.759699999999788e-05, 9.765299999999616e-05, 9.812499999999752e-05, 9.780499999999942e-05, 9.788900000000378e-05, 9.745800000000165e-05, 9.73609999999972e-05, 9.806899999999924e-05, 9.76939999999954e-05, 9.729200000000576e-05, 9.815299999999666e-05, 9.790199999999694e-05, 9.757000000000515e-05, 9.815299999999666e-05, 9.781899999999899e-05, 9.730499999999892e-05, 9.777700000000028e-05, 9.747200000000122e-05, 9.816599999999676e-05, 9.808299999999881e-05, 9.819499999999537e-05, 9.773600000000104e-05, 9.808299999999881e-05, 9.816599999999676e-05, 9.772299999999401e-05, 9.777799999999975e-05, 9.779099999999985e-05, 9.766699999999573e-05, 9.786199999999717e-05, 9.756999999999821e-05, 9.783299999999856e-05, 9.809699999999838e-05, 9.801400000000043e-05, 9.759800000000429e-05, 9.747200000000122e-05, 9.809799999999785e-05, 9.779099999999985e-05, 9.787500000000421e-05, 9.786100000000464e-05, 9.759700000000482e-05, 9.733299999999806e-05, 9.811099999999795e-05, 9.730600000000533e-05, 9.795799999999522e-05, 9.776400000000018e-05, 9.783299999999856e-05]</msg>
<status status="PASS" starttime="20201110 08:34:26.103" endtime="20201110 08:34:26.107"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.090" endtime="20201110 08:34:26.109"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.116" endtime="20201110 08:34:26.118"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:26.124" endtime="20201110 08:34:26.147"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.120" endtime="20201110 08:34:26.148"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.111" endtime="20201110 08:34:26.150"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.583" endtime="20201110 08:34:26.151"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.582" endtime="20201110 08:34:26.151"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.175" endtime="20201110 08:34:26.196"></status>
</kw>
<msg timestamp="20201110 08:34:26.198" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:26.172" endtime="20201110 08:34:26.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:26.204" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:26.200" endtime="20201110 08:34:26.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.206" endtime="20201110 08:34:26.210"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.164" endtime="20201110 08:34:26.212"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.158" endtime="20201110 08:34:26.213"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.230" endtime="20201110 08:34:26.577"></status>
</kw>
<msg timestamp="20201110 08:34:26.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042949583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043048264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:26.227" endtime="20201110 08:34:26.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:26.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042949583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043048264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:26.587" endtime="20201110 08:34:26.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.606" endtime="20201110 08:34:26.613"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.219" endtime="20201110 08:34:26.615"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.215" endtime="20201110 08:34:26.616"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:26.627" level="INFO">${RESULT} = [{'time': 0.043048264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.868100000000324e-05, 'source_diff': 9.868100000000324e-05}, {'time': 0.043157458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:26.618" endtime="20201110 08:34:26.628"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:26.658" level="INFO">${ACCURACY} = {'time': [0.043048264, 0.043157458, 0.043261667, 0.043365861, 0.043470056, 0.043576222, 0.043679431, 0.043785667, 0.043892819, 0.043996014, 0.044100236, 0.044205417, 0.044309597, 0.044413806, 0.044517...</msg>
<status status="PASS" starttime="20201110 08:34:26.629" endtime="20201110 08:34:26.659"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:26.669" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201110 08:34:26.667" endtime="20201110 08:34:26.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:26.675" level="INFO">VALUE: [9.868100000000324e-05, 9.875000000000161e-05, 9.887499999999827e-05, 9.834699999999863e-05, 9.83059999999994e-05, 9.831899999999949e-05, 9.838899999999734e-05, 9.891699999999698e-05, 9.888799999999837e-05, 9.859699999999888e-05, 9.919400000000383e-05, 9.911099999999895e-05, 9.865299999999716e-05, 9.91809999999968e-05, 9.838900000000428e-05, 9.915199999999819e-05, 9.904200000000057e-05, 9.851400000000093e-05, 9.888899999999784e-05, 9.887499999999827e-05, 9.909799999999885e-05, 9.88609999999987e-05, 9.851400000000093e-05, 9.837499999999777e-05, 9.845800000000265e-05, 9.908299999999981e-05, 9.890299999999741e-05, 9.869500000000281e-05, 9.847200000000222e-05, 9.833299999999906e-05, 9.883299999999956e-05, 9.923600000000254e-05, 9.854200000000007e-05, 9.89159999999975e-05, 9.842999999999658e-05, 9.877800000000075e-05, 9.90410000000011e-05, 9.920900000000288e-05, 9.83609999999982e-05, 9.85280000000005e-05, 9.852700000000103e-05, 9.837499999999777e-05, 9.902700000000153e-05, 9.840300000000385e-05, 9.925000000000211e-05, 9.877800000000075e-05, 9.84860000000018e-05, 9.855599999999964e-05, 9.869400000000333e-05, 9.833299999999906e-05]</msg>
<status status="PASS" starttime="20201110 08:34:26.672" endtime="20201110 08:34:26.676"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.660" endtime="20201110 08:34:26.678"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.685" endtime="20201110 08:34:26.687"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:26.693" endtime="20201110 08:34:26.715"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.688" endtime="20201110 08:34:26.717"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.680" endtime="20201110 08:34:26.718"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.154" endtime="20201110 08:34:26.719"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.152" endtime="20201110 08:34:26.719"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.742" endtime="20201110 08:34:26.763"></status>
</kw>
<msg timestamp="20201110 08:34:26.765" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:26.739" endtime="20201110 08:34:26.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:26.771" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:26.767" endtime="20201110 08:34:26.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.773" endtime="20201110 08:34:26.777"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.731" endtime="20201110 08:34:26.778"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.725" endtime="20201110 08:34:26.780"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.797" endtime="20201110 08:34:27.143"></status>
</kw>
<msg timestamp="20201110 08:34:27.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041045125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041144778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:26.793" endtime="20201110 08:34:27.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:27.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041045125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041144778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:27.153" endtime="20201110 08:34:27.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.172" endtime="20201110 08:34:27.178"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.786" endtime="20201110 08:34:27.180"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.781" endtime="20201110 08:34:27.181"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:27.192" level="INFO">${RESULT} = [{'time': 0.041144778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.965299999999816e-05, 'source_diff': 9.965299999999816e-05}, {'time': 0.041255028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:27.183" endtime="20201110 08:34:27.193"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:27.224" level="INFO">${ACCURACY} = {'time': [0.041144778, 0.041255028, 0.041363222, 0.041470472, 0.041578708, 0.041684972, 0.041795194, 0.041900444, 0.042007639, 0.042113903, 0.042221111, 0.042328375, 0.042438556, 0.042543847, 0.042649...</msg>
<status status="PASS" starttime="20201110 08:34:27.195" endtime="20201110 08:34:27.224"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:27.235" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201110 08:34:27.233" endtime="20201110 08:34:27.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:27.241" level="INFO">VALUE: [9.965299999999816e-05, 9.991699999999798e-05, 9.963899999999859e-05, 9.972200000000347e-05, 0.00010015199999999919, 0.0001001939999999979, 9.934699999999963e-05, 0.00010023600000000354, 9.955600000000064e-05, 9.93609999999992e-05, 0.00010022199999999704, 9.941700000000442e-05, 9.998700000000277e-05, 0.0001001660000000057, 0.00010027799999999532, 9.983400000000003e-05, 9.95280000000015e-05, 9.9513999999995e-05, 9.98609999999997e-05, 0.00010022200000000397, 0.00010008400000000028, 9.961100000000639e-05, 9.95280000000015e-05, 9.961199999999892e-05, 9.988899999999884e-05, 0.00010000000000000286, 9.937499999999877e-05, 9.984700000000013e-05, 9.943099999999705e-05, 9.97359999999961e-05, 0.00010024999999999618, 9.993099999999755e-05, 0.00010011099999999995, 9.958300000000031e-05, 9.96939999999974e-05, 9.947299999999576e-05, 9.944499999999662e-05, 0.00010007000000000071, 9.959699999999988e-05, 9.956900000000074e-05, 0.00010011099999999995, 0.00010020799999999747, 9.98609999999997e-05, 9.961199999999892e-05, 0.00010005600000000114, 9.966700000000467e-05, 9.981900000000099e-05, 9.98609999999997e-05, 9.945799999999672e-05, 0.00010008400000000028]</msg>
<status status="PASS" starttime="20201110 08:34:27.237" endtime="20201110 08:34:27.242"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.226" endtime="20201110 08:34:27.244"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.250" endtime="20201110 08:34:27.253"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:27.259" endtime="20201110 08:34:27.281"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.254" endtime="20201110 08:34:27.282"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.246" endtime="20201110 08:34:27.284"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.721" endtime="20201110 08:34:27.285"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.720" endtime="20201110 08:34:27.285"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.308" endtime="20201110 08:34:27.330"></status>
</kw>
<msg timestamp="20201110 08:34:27.331" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:27.305" endtime="20201110 08:34:27.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:27.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:27.333" endtime="20201110 08:34:27.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.339" endtime="20201110 08:34:27.343"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.297" endtime="20201110 08:34:27.345"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.291" endtime="20201110 08:34:27.346"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.363" endtime="20201110 08:34:27.709"></status>
</kw>
<msg timestamp="20201110 08:34:27.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041393778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041494806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:27.360" endtime="20201110 08:34:27.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:27.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041393778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041494806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:27.718" endtime="20201110 08:34:27.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.737" endtime="20201110 08:34:27.743"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.352" endtime="20201110 08:34:27.745"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.347" endtime="20201110 08:34:27.746"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:27.756" level="INFO">${RESULT} = [{'time': 0.041494806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000101028000000003, 'source_diff': 0.000101028000000003}, {'time': 0.041602042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:34:27.748" endtime="20201110 08:34:27.757"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:27.787" level="INFO">${ACCURACY} = {'time': [0.041494806, 0.041602042, 0.041708292, 0.041819528, 0.041927764, 0.042037986, 0.042144278, 0.042250458, 0.042357694, 0.042467931, 0.042577194, 0.042683403, 0.042788639, 0.042899861, 0.043007...</msg>
<status status="PASS" starttime="20201110 08:34:27.759" endtime="20201110 08:34:27.788"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:27.798" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201110 08:34:27.796" endtime="20201110 08:34:27.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:27.804" level="INFO">VALUE: [0.000101028000000003, 0.00010105600000000214, 0.00010038899999999934, 0.00010088899999999984, 0.00010112500000000052, 0.00010040299999999891, 0.00010075000000000361, 0.0001010689999999953, 0.00010038799999999987, 0.00010082000000000146, 0.0001006939999999984, 0.00010057000000000121, 0.00010069500000000481, 0.00010065299999999916, 0.00010075000000000361, 0.00010118100000000574, 0.00010112500000000052, 0.00010042999999999858, 0.00010116700000000617, 0.00010090199999999994, 0.00010056900000000174, 0.00010059700000000088, 0.00010055500000000217, 0.00010051400000000293, 0.0001003480000000001, 0.00010090299999999941, 0.00010093099999999855, 0.00010045799999999772, 0.00010079200000000232, 0.0001008480000000006, 0.0001008480000000006, 0.00010029200000000182, 0.000101028000000003, 0.0001005410000000026, 0.00010113900000000009, 0.00010124999999999718, 0.00010040199999999944, 0.00010031900000000149, 0.00010037499999999977, 0.0001008610000000007, 0.0001003610000000002, 0.0001007080000000049, 0.00010088899999999984, 0.0001008480000000006, 0.00010095799999999822, 0.0001006809999999983, 0.0001005280000000025, 0.0001003610000000002, 0.00010101400000000343, 0.00010108300000000181]</msg>
<status status="PASS" starttime="20201110 08:34:27.801" endtime="20201110 08:34:27.805"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.789" endtime="20201110 08:34:27.807"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.814" endtime="20201110 08:34:27.816"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:27.822" endtime="20201110 08:34:27.844"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.818" endtime="20201110 08:34:27.846"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.809" endtime="20201110 08:34:27.847"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.287" endtime="20201110 08:34:27.848"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.286" endtime="20201110 08:34:27.848"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.871" endtime="20201110 08:34:27.893"></status>
</kw>
<msg timestamp="20201110 08:34:27.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:27.868" endtime="20201110 08:34:27.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:27.900" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:27.896" endtime="20201110 08:34:27.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.903" endtime="20201110 08:34:27.907"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.861" endtime="20201110 08:34:27.908"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.855" endtime="20201110 08:34:27.910"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.926" endtime="20201110 08:34:28.313"></status>
</kw>
<msg timestamp="20201110 08:34:28.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041410417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041512556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:27.923" endtime="20201110 08:34:28.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041410417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041512556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:28.325" endtime="20201110 08:34:28.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.351" endtime="20201110 08:34:28.359"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.916" endtime="20201110 08:34:28.361"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.911" endtime="20201110 08:34:28.364"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:28.377" level="INFO">${RESULT} = [{'time': 0.041512556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010213900000000109, 'source_diff': 0.00010213900000000109}, {'time': 0.041618778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:28.366" endtime="20201110 08:34:28.378"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:28.415" level="INFO">${ACCURACY} = {'time': [0.041512556, 0.041618778, 0.041728958, 0.041835069, 0.041944403, 0.042054639, 0.042164806, 0.042273903, 0.042383236, 0.042492444, 0.042601625, 0.042709806, 0.042818917, 0.042931278, 0.043043...</msg>
<status status="PASS" starttime="20201110 08:34:28.380" endtime="20201110 08:34:28.416"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.429" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201110 08:34:28.427" endtime="20201110 08:34:28.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.435" level="INFO">VALUE: [0.00010213900000000109, 0.00010172200000000547, 0.00010167999999999983, 0.00010140200000000044, 0.00010181999999999553, 0.00010194499999999912, 0.00010220899999999894, 0.00010145899999999819, 0.00010191699999999998, 0.00010211099999999501, 0.00010124999999999718, 0.00010169500000000581, 0.00010115299999999966, 0.00010212500000000152, 0.00010144399999999915, 0.00010197299999999826, 0.00010215300000000066, 0.00010140200000000044, 0.00010180599999999596, 0.0001016809999999993, 0.00010187500000000127, 0.00010161100000000145, 0.00010194499999999912, 0.00010169499999999887, 0.00010133299999999512, 0.00010194499999999912, 0.00010209800000000185, 0.00010181999999999553, 0.00010211100000000195, 0.0001021809999999998, 0.00010197199999999879, 0.0001019860000000053, 0.00010197199999999879, 0.00010120799999999847, 0.00010222299999999851, 0.00010161100000000145, 0.0001014860000000048, 0.00010137500000000077, 0.00010116699999999923, 0.00010190300000000041, 0.00010225000000000511, 0.00010166699999999973, 0.00010166600000000026, 0.0001017359999999981, 0.00010195799999999922, 0.00010162500000000102, 0.0001013610000000012, 0.00010181899999999605, 0.00010155600000000264, 0.00010209700000000238]</msg>
<status status="PASS" starttime="20201110 08:34:28.432" endtime="20201110 08:34:28.436"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.418" endtime="20201110 08:34:28.438"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.445" endtime="20201110 08:34:28.447"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:28.453" endtime="20201110 08:34:28.475"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.449" endtime="20201110 08:34:28.477"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.440" endtime="20201110 08:34:28.478"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.851" endtime="20201110 08:34:28.479"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.849" endtime="20201110 08:34:28.479"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.502" endtime="20201110 08:34:28.524"></status>
</kw>
<msg timestamp="20201110 08:34:28.525" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:28.499" endtime="20201110 08:34:28.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.531" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:28.527" endtime="20201110 08:34:28.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.533" endtime="20201110 08:34:28.537"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.492" endtime="20201110 08:34:28.539"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.486" endtime="20201110 08:34:28.540"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.557" endtime="20201110 08:34:28.901"></status>
</kw>
<msg timestamp="20201110 08:34:28.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041198917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041302083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:28.554" endtime="20201110 08:34:28.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041198917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041302083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:28.911" endtime="20201110 08:34:28.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.929" endtime="20201110 08:34:28.937"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.546" endtime="20201110 08:34:28.938"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.542" endtime="20201110 08:34:28.940"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:28.950" level="INFO">${RESULT} = [{'time': 0.041302083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010316600000000176, 'source_diff': 0.00010316600000000176}, {'time': 0.041411292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:28.942" endtime="20201110 08:34:28.951"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:28.981" level="INFO">${ACCURACY} = {'time': [0.041302083, 0.041411292, 0.041521486, 0.041632667, 0.041745875, 0.041856083, 0.041965264, 0.042074514, 0.042186764, 0.042297861, 0.042410069, 0.042522236, 0.042634431, 0.042746722, 0.042858...</msg>
<status status="PASS" starttime="20201110 08:34:28.953" endtime="20201110 08:34:28.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.992" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201110 08:34:28.990" endtime="20201110 08:34:28.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.998" level="INFO">VALUE: [0.00010316600000000176, 0.00010272299999999901, 0.00010258300000000331, 0.000102513999999998, 0.00010295800000000022, 0.00010288900000000184, 0.00010269499999999987, 0.00010297199999999979, 0.00010263900000000159, 0.00010312500000000252, 0.00010238800000000187, 0.00010276399999999825, 0.00010247299999999876, 0.00010288900000000184, 0.00010224999999999818, 0.00010245899999999919, 0.00010222199999999904, 0.0001028610000000027, 0.00010266600000000126, 0.00010230599999999646, 0.00010255500000000417, 0.00010237499999999483, 0.00010320899999999994, 0.00010306999999999678, 0.00010309700000000338, 0.00010274999999999868, 0.00010247199999999929, 0.00010311200000000242, 0.00010312499999999558, 0.00010227699999999784, 0.00010297199999999979, 0.00010329199999999789, 0.00010263900000000159, 0.00010257000000000321, 0.00010259700000000288, 0.00010266700000000073, 0.00010305600000000414, 0.00010259700000000288, 0.00010313900000000209, 0.00010236099999999526, 0.00010322300000000645, 0.0001028610000000027, 0.00010234700000000263, 0.00010320800000000047, 0.00010261100000000245, 0.00010307000000000371, 0.00010259699999999594, 0.00010327799999999832, 0.00010283299999999662, 0.00010279200000000432]</msg>
<status status="PASS" starttime="20201110 08:34:28.995" endtime="20201110 08:34:28.999"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.983" endtime="20201110 08:34:29.001"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.008" endtime="20201110 08:34:29.010"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:29.016" endtime="20201110 08:34:29.038"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.012" endtime="20201110 08:34:29.040"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.003" endtime="20201110 08:34:29.041"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.481" endtime="20201110 08:34:29.042"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.480" endtime="20201110 08:34:29.042"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.065" endtime="20201110 08:34:29.086"></status>
</kw>
<msg timestamp="20201110 08:34:29.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:29.062" endtime="20201110 08:34:29.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:29.094" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:29.090" endtime="20201110 08:34:29.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.097" endtime="20201110 08:34:29.102"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.054" endtime="20201110 08:34:29.104"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.048" endtime="20201110 08:34:29.106"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.123" endtime="20201110 08:34:29.469"></status>
</kw>
<msg timestamp="20201110 08:34:29.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041269472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041372847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:29.119" endtime="20201110 08:34:29.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:29.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041269472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041372847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:29.478" endtime="20201110 08:34:29.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.497" endtime="20201110 08:34:29.502"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.112" endtime="20201110 08:34:29.504"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.107" endtime="20201110 08:34:29.506"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:29.516" level="INFO">${RESULT} = [{'time': 0.041372847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010337499999999583, 'source_diff': 0.00010337499999999583}, {'time': 0.041486111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:29.507" endtime="20201110 08:34:29.516"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:29.546" level="INFO">${ACCURACY} = {'time': [0.041372847, 0.041486111, 0.041596292, 0.041707528, 0.041817778, 0.041929, 0.042043083, 0.042154472, 0.042266556, 0.042378903, 0.042493028, 0.042606375, 0.042716583, 0.042827833, 0.042939917...</msg>
<status status="PASS" starttime="20201110 08:34:29.518" endtime="20201110 08:34:29.547"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:29.558" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201110 08:34:29.555" endtime="20201110 08:34:29.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:29.563" level="INFO">VALUE: [0.00010337499999999583, 0.00010354199999999814, 0.00010361100000000345, 0.00010340300000000191, 0.00010398600000000036, 0.00010412500000000352, 0.00010322200000000004, 0.00010363899999999565, 0.00010330599999999746, 0.00010377800000000575, 0.00010377799999999882, 0.00010384700000000413, 0.00010395800000000122, 0.000103416000000002, 0.00010332000000000396, 0.00010397200000000079, 0.00010401400000000643, 0.00010404200000000557, 0.00010325000000000611, 0.00010384699999999719, 0.00010347200000000029, 0.00010383300000000456, 0.00010357000000000421, 0.0001032359999999996, 0.00010374999999999968, 0.00010388800000000337, 0.00010359699999999694, 0.00010348599999999986, 0.00010377699999999934, 0.00010413900000000309, 0.00010395899999999375, 0.00010399999999999993, 0.00010347200000000029, 0.00010404199999999864, 0.00010359700000000388, 0.00010363900000000259, 0.00010355600000000464, 0.00010340299999999497, 0.00010358299999999737, 0.00010416700000000223, 0.00010340200000000244, 0.00010326399999999875, 0.00010356999999999728, 0.00010372200000000054, 0.0001037360000000001, 0.00010369399999999446, 0.00010354199999999814, 0.00010383299999999762, 0.00010348599999999986, 0.00010347200000000029]</msg>
<status status="PASS" starttime="20201110 08:34:29.560" endtime="20201110 08:34:29.565"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.548" endtime="20201110 08:34:29.566"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.573" endtime="20201110 08:34:29.575"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:29.581" endtime="20201110 08:34:29.603"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.577" endtime="20201110 08:34:29.605"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.568" endtime="20201110 08:34:29.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.044" endtime="20201110 08:34:29.607"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.043" endtime="20201110 08:34:29.607"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.631" endtime="20201110 08:34:29.652"></status>
</kw>
<msg timestamp="20201110 08:34:29.654" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:29.627" endtime="20201110 08:34:29.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:29.660" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:29.656" endtime="20201110 08:34:29.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.662" endtime="20201110 08:34:29.666"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.620" endtime="20201110 08:34:29.668"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.614" endtime="20201110 08:34:29.669"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.686" endtime="20201110 08:34:30.034"></status>
</kw>
<msg timestamp="20201110 08:34:30.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041493306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041598014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:29.682" endtime="20201110 08:34:30.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:30.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041493306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041598014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:30.043" endtime="20201110 08:34:30.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.061" endtime="20201110 08:34:30.067"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.675" endtime="20201110 08:34:30.068"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.670" endtime="20201110 08:34:30.070"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:30.081" level="INFO">${RESULT} = [{'time': 0.041598014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010470800000000197, 'source_diff': 0.00010470800000000197}, {'time': 0.041711264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:30.072" endtime="20201110 08:34:30.081"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:30.111" level="INFO">${ACCURACY} = {'time': [0.041598014, 0.041711264, 0.041822514, 0.041931875, 0.042041097, 0.042151333, 0.042263625, 0.042377792, 0.042490972, 0.04260425, 0.042717486, 0.042828597, 0.042939958, 0.043055222, 0.0431675...</msg>
<status status="PASS" starttime="20201110 08:34:30.083" endtime="20201110 08:34:30.112"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:30.122" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201110 08:34:30.120" endtime="20201110 08:34:30.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:30.128" level="INFO">VALUE: [0.00010470800000000197, 0.00010445799999999478, 0.00010466699999999579, 0.00010465300000000316, 0.00010470800000000197, 0.0001048889999999969, 0.00010527800000000032, 0.0001047089999999945, 0.00010461100000000445, 0.00010448600000000086, 0.00010519399999999596, 0.00010480500000000642, 0.0001047360000000011, 0.00010480499999999948, 0.00010445799999999478, 0.00010466699999999579, 0.00010500000000000093, 0.00010526400000000075, 0.00010457000000000521, 0.00010491700000000298, 0.00010469399999999546, 0.00010513899999999715, 0.00010487500000000427, 0.00010481999999999853, 0.000104514, 0.00010477799999999982, 0.00010452799999999957, 0.00010479199999999939, 0.0001050140000000005, 0.00010440299999999597, 0.00010465299999999622, 0.00010479199999999939, 0.00010512500000000452, 0.00010483299999999862, 0.00010462500000000402, 0.00010458299999999837, 0.00010479199999999939, 0.00010430599999999846, 0.00010448600000000086, 0.00010437500000000377, 0.00010490300000000341, 0.0001045689999999988, 0.00010430499999999898, 0.00010480599999999896, 0.0001047360000000011, 0.0001048889999999969, 0.00010462499999999708, 0.0001050689999999993, 0.00010456999999999828, 0.0001043339999999976]</msg>
<status status="PASS" starttime="20201110 08:34:30.125" endtime="20201110 08:34:30.129"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.113" endtime="20201110 08:34:30.131"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.138" endtime="20201110 08:34:30.140"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:30.146" endtime="20201110 08:34:30.168"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.142" endtime="20201110 08:34:30.170"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.133" endtime="20201110 08:34:30.171"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.610" endtime="20201110 08:34:30.172"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.608" endtime="20201110 08:34:30.172"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.195" endtime="20201110 08:34:30.219"></status>
</kw>
<msg timestamp="20201110 08:34:30.220" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:30.192" endtime="20201110 08:34:30.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:30.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:30.222" endtime="20201110 08:34:30.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.229" endtime="20201110 08:34:30.232"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.185" endtime="20201110 08:34:30.234"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.179" endtime="20201110 08:34:30.236"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.253" endtime="20201110 08:34:30.598"></status>
</kw>
<msg timestamp="20201110 08:34:30.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041114764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041220653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:30.249" endtime="20201110 08:34:30.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:30.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041114764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041220653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:30.608" endtime="20201110 08:34:30.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.626" endtime="20201110 08:34:30.632"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.242" endtime="20201110 08:34:30.633"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.237" endtime="20201110 08:34:30.635"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:30.645" level="INFO">${RESULT} = [{'time': 0.041220653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010588900000000484, 'source_diff': 0.00010588900000000484}, {'time': 0.041336889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:30.637" endtime="20201110 08:34:30.646"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:30.676" level="INFO">${ACCURACY} = {'time': [0.041220653, 0.041336889, 0.041451111, 0.041562333, 0.041677597, 0.041789, 0.041904208, 0.042016556, 0.042130583, 0.042240986, 0.042352069, 0.042463472, 0.042576681, 0.042688903, 0.042802014...</msg>
<status status="PASS" starttime="20201110 08:34:30.648" endtime="20201110 08:34:30.677"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:30.687" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201110 08:34:30.685" endtime="20201110 08:34:30.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:30.693" level="INFO">VALUE: [0.00010588900000000484, 0.00010537500000000477, 0.00010605500000000073, 0.00010567999999999689, 0.00010605499999999379, 0.00010575000000000168, 0.0001058889999999979, 0.00010627799999999438, 0.00010513899999999715, 0.00010577800000000082, 0.00010542999999999664, 0.0001060690000000003, 0.00010612499999999858, 0.000105514000000001, 0.00010556999999999928, 0.00010549999999999449, 0.0001058889999999979, 0.00010555600000000664, 0.0001055559999999997, 0.0001057089999999955, 0.00010602800000000107, 0.00010602800000000107, 0.00010545800000000272, 0.00010541699999999654, 0.00010531899999999955, 0.00010616599999999782, 0.0001060690000000003, 0.00010530499999999998, 0.0001062360000000026, 0.00010576400000000125, 0.000105901999999998, 0.00010604100000000116, 0.00010611099999999901, 0.000105514000000001, 0.00010622200000000304, 0.00010622200000000304, 0.0001057219999999956, 0.00010558299999999937, 0.0001058889999999979, 0.0001053610000000052, 0.0001058610000000057, 0.0001061940000000039, 0.00010605500000000073, 0.00010545800000000272, 0.00010587499999999833, 0.00010579200000000039, 0.00010593100000000355, 0.00010559700000000588, 0.00010594500000000312, 0.00010522200000000204]</msg>
<status status="PASS" starttime="20201110 08:34:30.690" endtime="20201110 08:34:30.699"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.678" endtime="20201110 08:34:30.701"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.708" endtime="20201110 08:34:30.710"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:30.716" endtime="20201110 08:34:30.738"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.712" endtime="20201110 08:34:30.740"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.703" endtime="20201110 08:34:30.741"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.174" endtime="20201110 08:34:30.742"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.173" endtime="20201110 08:34:30.742"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.765" endtime="20201110 08:34:30.787"></status>
</kw>
<msg timestamp="20201110 08:34:30.788" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:30.762" endtime="20201110 08:34:30.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:30.794" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:30.791" endtime="20201110 08:34:30.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.797" endtime="20201110 08:34:30.801"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.755" endtime="20201110 08:34:30.802"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.749" endtime="20201110 08:34:30.804"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.820" endtime="20201110 08:34:31.171"></status>
</kw>
<msg timestamp="20201110 08:34:31.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041342958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041450014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:30.817" endtime="20201110 08:34:31.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:31.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041342958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041450014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:31.180" endtime="20201110 08:34:31.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.198" endtime="20201110 08:34:31.206"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.810" endtime="20201110 08:34:31.208"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.805" endtime="20201110 08:34:31.209"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:31.220" level="INFO">${RESULT} = [{'time': 0.041450014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001070560000000012, 'source_diff': 0.0001070560000000012}, {'time': 0.041567306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:31.211" endtime="20201110 08:34:31.220"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:31.250" level="INFO">${ACCURACY} = {'time': [0.041450014, 0.041567306, 0.041682486, 0.041796722, 0.041907778, 0.042024167, 0.042140292, 0.0422565, 0.042373736, 0.042489972, 0.042605194, 0.042720444, 0.042834792, 0.042946, 0.043061222, ...</msg>
<status status="PASS" starttime="20201110 08:34:31.222" endtime="20201110 08:34:31.251"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:31.261" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201110 08:34:31.259" endtime="20201110 08:34:31.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:31.267" level="INFO">VALUE: [0.0001070560000000012, 0.00010652800000000157, 0.00010636099999999926, 0.00010712499999999958, 0.00010645899999999625, 0.00010645900000000319, 0.00010702800000000207, 0.00010715300000000566, 0.00010666700000000473, 0.00010672200000000354, 0.00010631900000000055, 0.0001062360000000026, 0.00010693099999999761, 0.00010649999999999549, 0.00010716600000000576, 0.000106514000000002, 0.00010698600000000336, 0.0001067219999999966, 0.00010637499999999883, 0.00010670800000000397, 0.00010702800000000207, 0.00010694399999999771, 0.00010665299999999822, 0.00010652799999999463, 0.00010716699999999829, 0.00010709799999999992, 0.00010669499999999693, 0.00010636099999999926, 0.00010693100000000455, 0.0001070690000000013, 0.00010642999999999764, 0.00010641700000000448, 0.00010627800000000132, 0.00010698600000000336, 0.0001063889999999984, 0.00010680500000000148, 0.00010645799999999678, 0.00010623700000000208, 0.00010619500000000337, 0.00010642999999999764, 0.00010679099999999497, 0.0001072219999999971, 0.00010655500000000123, 0.00010627799999999438, 0.00010666599999999832, 0.00010694399999999771, 0.00010663899999999865, 0.00010632000000000003, 0.000106514000000002, 0.00010647199999999635]</msg>
<status status="PASS" starttime="20201110 08:34:31.264" endtime="20201110 08:34:31.268"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.252" endtime="20201110 08:34:31.270"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.276" endtime="20201110 08:34:31.279"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:31.285" endtime="20201110 08:34:31.307"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.280" endtime="20201110 08:34:31.309"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.272" endtime="20201110 08:34:31.311"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.744" endtime="20201110 08:34:31.311"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.743" endtime="20201110 08:34:31.312"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.336" endtime="20201110 08:34:31.357"></status>
</kw>
<msg timestamp="20201110 08:34:31.359" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:31.332" endtime="20201110 08:34:31.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:31.365" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:31.361" endtime="20201110 08:34:31.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.367" endtime="20201110 08:34:31.371"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.325" endtime="20201110 08:34:31.373"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.318" endtime="20201110 08:34:31.374"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.391" endtime="20201110 08:34:31.738"></status>
</kw>
<msg timestamp="20201110 08:34:31.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042951458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043058708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:31.388" endtime="20201110 08:34:31.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:31.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042951458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043058708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:31.747" endtime="20201110 08:34:31.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.766" endtime="20201110 08:34:31.771"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.380" endtime="20201110 08:34:31.773"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.376" endtime="20201110 08:34:31.774"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:31.785" level="INFO">${RESULT} = [{'time': 0.043058708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010725000000000318, 'source_diff': 0.00010725000000000318}, {'time': 0.043174931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:31.776" endtime="20201110 08:34:31.785"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:31.815" level="INFO">${ACCURACY} = {'time': [0.043058708, 0.043174931, 0.043287153, 0.043401486, 0.043514542, 0.043628764, 0.043741028, 0.043856347, 0.043970458, 0.044085736, 0.044200083, 0.044312333, 0.044426556, 0.044542653, 0.044656...</msg>
<status status="PASS" starttime="20201110 08:34:31.787" endtime="20201110 08:34:31.816"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:31.827" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201110 08:34:31.824" endtime="20201110 08:34:31.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:31.832" level="INFO">VALUE: [0.00010725000000000318, 0.0001073889999999994, 0.00010732000000000103, 0.00010755500000000223, 0.00010769500000000487, 0.00010802800000000307, 0.0001072360000000036, 0.000107596999999994, 0.00010770799999999803, 0.0001072360000000036, 0.00010734700000000069, 0.00010755500000000223, 0.00010794499999999818, 0.0001073889999999994, 0.00010734800000000017, 0.00010781899999999511, 0.00010772200000000454, 0.00010787500000000033, 0.00010777800000000282, 0.00010787500000000033, 0.00010729200000000189, 0.0001078889999999999, 0.00010797199999999785, 0.0001075690000000018, 0.00010747200000000429, 0.00010827799999999638, 0.00010762500000000008, 0.00010794399999999871, 0.00010780500000000248, 0.00010763899999999965, 0.00010723599999999667, 0.00010727800000000232, 0.00010776399999999631, 0.00010759800000000042, 0.00010794399999999871, 0.00010808400000000135, 0.0001078340000000011, 0.00010818099999999886, 0.0001082219999999981, 0.0001078889999999999, 0.00010736100000000026, 0.0001080839999999944, 0.00010762500000000008, 0.00010734700000000069, 0.00010737499999999983, 0.00010729199999999495, 0.00010769499999999793, 0.00010745799999999778, 0.00010777800000000282, 0.00010781900000000205]</msg>
<status status="PASS" starttime="20201110 08:34:31.829" endtime="20201110 08:34:31.834"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.817" endtime="20201110 08:34:31.835"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.842" endtime="20201110 08:34:31.844"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:31.850" endtime="20201110 08:34:31.872"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.846" endtime="20201110 08:34:31.874"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.837" endtime="20201110 08:34:31.875"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.314" endtime="20201110 08:34:31.876"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.313" endtime="20201110 08:34:31.876"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.899" endtime="20201110 08:34:31.921"></status>
</kw>
<msg timestamp="20201110 08:34:31.922" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:31.896" endtime="20201110 08:34:31.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:31.929" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:31.925" endtime="20201110 08:34:31.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.931" endtime="20201110 08:34:31.935"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.889" endtime="20201110 08:34:31.936"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.883" endtime="20201110 08:34:31.938"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.955" endtime="20201110 08:34:32.303"></status>
</kw>
<msg timestamp="20201110 08:34:32.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041305, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041413181, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:34:31.951" endtime="20201110 08:34:32.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:32.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041305, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041413181, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:34:32.312" endtime="20201110 08:34:32.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.331" endtime="20201110 08:34:32.337"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.944" endtime="20201110 08:34:32.339"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.939" endtime="20201110 08:34:32.340"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:32.351" level="INFO">${RESULT} = [{'time': 0.041413181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010818099999999886, 'source_diff': 0.00010818099999999886}, {'time': 0.041531444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:32.342" endtime="20201110 08:34:32.352"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:32.382" level="INFO">${ACCURACY} = {'time': [0.041413181, 0.041531444, 0.041646792, 0.041759903, 0.041875236, 0.041994375, 0.042107639, 0.042220833, 0.042337125, 0.042455458, 0.042568556, 0.042687792, 0.042807056, 0.042920264, 0.043039...</msg>
<status status="PASS" starttime="20201110 08:34:32.353" endtime="20201110 08:34:32.383"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:32.394" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201110 08:34:32.391" endtime="20201110 08:34:32.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:32.399" level="INFO">VALUE: [0.00010818099999999886, 0.00010870799999999903, 0.0001083340000000016, 0.00010819499999999843, 0.00010845800000000572, 0.00010823599999999767, 0.00010887500000000133, 0.00010819399999999896, 0.00010854200000000314, 0.00010915200000000125, 0.00010847299999999782, 0.0001090140000000045, 0.00010869500000000587, 0.00010824999999999724, 0.00010890300000000047, 0.00010852799999999663, 0.00010929200000000389, 0.00010901300000000502, 0.00010843099999999911, 0.00010876299999999783, 0.00010913900000000115, 0.00010819499999999843, 0.00010897199999999885, 0.0001082219999999981, 0.00010904100000000416, 0.0001090690000000033, 0.00010906899999999636, 0.00010848600000000486, 0.00010891700000000004, 0.00010869399999999946, 0.0001083340000000016, 0.00010902799999999713, 0.00010834700000000169, 0.00010830499999999604, 0.00010894500000000612, 0.00010849999999999749, 0.00010893000000000014, 0.00010893000000000014, 0.00010850000000000443, 0.00010880500000000348, 0.00010820800000000547, 0.00010868099999999936, 0.00010893099999999961, 0.00010904099999999722, 0.00010842999999999964, 0.00010844399999999921, 0.00010837499999999389, 0.00010894399999999971, 0.00010858399999999491, 0.00010906999999999584]</msg>
<status status="PASS" starttime="20201110 08:34:32.396" endtime="20201110 08:34:32.401"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.384" endtime="20201110 08:34:32.402"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.409" endtime="20201110 08:34:32.412"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:32.417" endtime="20201110 08:34:32.439"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.413" endtime="20201110 08:34:32.441"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.404" endtime="20201110 08:34:32.443"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.878" endtime="20201110 08:34:32.443"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.877" endtime="20201110 08:34:32.444"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.467" endtime="20201110 08:34:32.488"></status>
</kw>
<msg timestamp="20201110 08:34:32.490" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:32.463" endtime="20201110 08:34:32.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:32.496" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:32.492" endtime="20201110 08:34:32.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.498" endtime="20201110 08:34:32.502"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.456" endtime="20201110 08:34:32.504"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.450" endtime="20201110 08:34:32.505"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.522" endtime="20201110 08:34:32.873"></status>
</kw>
<msg timestamp="20201110 08:34:32.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041294069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041403833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:32.519" endtime="20201110 08:34:32.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:32.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041294069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041403833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:32.882" endtime="20201110 08:34:32.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.901" endtime="20201110 08:34:32.907"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.511" endtime="20201110 08:34:32.908"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.507" endtime="20201110 08:34:32.910"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:32.920" level="INFO">${RESULT} = [{'time': 0.041403833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010976399999999831, 'source_diff': 0.00010976399999999831}, {'time': 0.041521014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:32.911" endtime="20201110 08:34:32.921"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:32.951" level="INFO">${ACCURACY} = {'time': [0.041403833, 0.041521014, 0.041640236, 0.041755528, 0.041872694, 0.041988944, 0.042107167, 0.042223361, 0.042343514, 0.042461764, 0.042577986, 0.042695208, 0.042810444, 0.042930681, 0.043046...</msg>
<status status="PASS" starttime="20201110 08:34:32.922" endtime="20201110 08:34:32.952"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:32.962" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201110 08:34:32.960" endtime="20201110 08:34:32.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:32.967" level="INFO">VALUE: [0.00010976399999999831, 0.00010987500000000233, 0.0001099299999999942, 0.00010955599999999677, 0.00010929100000000441, 0.00011018000000000139, 0.0001095560000000037, 0.00011008300000000387, 0.00011002799999999813, 0.00010943100000000011, 0.00010968000000000089, 0.00010963900000000165, 0.000109902000000002, 0.00010947299999999882, 0.00010993100000000061, 0.00010943000000000064, 0.00010973699999999864, 0.00010930500000000398, 0.00010963899999999471, 0.0001097360000000061, 0.00010954099999999772, 0.0001092360000000056, 0.00010926400000000475, 0.00010958300000000337, 0.00011018000000000139, 0.00010926399999999781, 0.00010944400000000021, 0.00010984699999999625, 0.00010976400000000525, 0.00010990299999999453, 0.00011013900000000215, 0.00010916700000000029, 0.00010983300000000362, 0.00010966599999999438, 0.00010995800000000028, 0.00010981999999999659, 0.00010988899999999496, 0.00010947199999999935, 0.00010980499999999754, 0.00011012500000000258, 0.00011015299999999478, 0.00010994500000000018, 0.00011012499999999564, 0.0001097219999999996, 0.0001094020000000015, 0.00010984699999999625, 0.00010968000000000089, 0.00010943000000000064, 0.00010937500000000183, 0.00011022299999999957]</msg>
<status status="PASS" starttime="20201110 08:34:32.964" endtime="20201110 08:34:32.969"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.953" endtime="20201110 08:34:32.971"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.977" endtime="20201110 08:34:32.980"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:32.986" endtime="20201110 08:34:33.008"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.981" endtime="20201110 08:34:33.010"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.973" endtime="20201110 08:34:33.011"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.446" endtime="20201110 08:34:33.012"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.444" endtime="20201110 08:34:33.012"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:33.035" endtime="20201110 08:34:33.057"></status>
</kw>
<msg timestamp="20201110 08:34:33.058" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:33.032" endtime="20201110 08:34:33.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:33.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:33.061" endtime="20201110 08:34:33.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:33.067" endtime="20201110 08:34:33.071"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.024" endtime="20201110 08:34:33.073"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.018" endtime="20201110 08:34:33.074"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:33.091" endtime="20201110 08:34:33.427"></status>
</kw>
<msg timestamp="20201110 08:34:33.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041233806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041344764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:33.088" endtime="20201110 08:34:33.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:33.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041233806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041344764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:33.437" endtime="20201110 08:34:33.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:33.455" endtime="20201110 08:34:33.462"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.081" endtime="20201110 08:34:33.464"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.076" endtime="20201110 08:34:33.465"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:33.475" level="INFO">${RESULT} = [{'time': 0.041344764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011095800000000128, 'source_diff': 0.00011095800000000128}, {'time': 0.041463972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:33.467" endtime="20201110 08:34:33.476"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:33.505" level="INFO">${ACCURACY} = {'time': [0.041344764, 0.041463972, 0.041582236, 0.041702431, 0.041818708, 0.041936889, 0.042056125, 0.042172444, 0.042291625, 0.042409847, 0.042531097, 0.042649278, 0.042768528, 0.042883722, 0.043000...</msg>
<status status="PASS" starttime="20201110 08:34:33.477" endtime="20201110 08:34:33.505"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:33.516" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201110 08:34:33.513" endtime="20201110 08:34:33.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:33.521" level="INFO">VALUE: [0.00011095800000000128, 0.00011070800000000103, 0.00011094400000000171, 0.00011098699999999989, 0.00011041600000000207, 0.00011098600000000042, 0.00011033299999999718, 0.00011119400000000196, 0.00011098600000000042, 0.00011111099999999707, 0.00011091599999999563, 0.00011044500000000068, 0.00011036100000000326, 0.00011058299999999743, 0.0001105549999999983, 0.00011087500000000333, 0.00011097200000000085, 0.0001104020000000025, 0.00011084800000000367, 0.00011063900000000265, 0.000110596999999997, 0.0001110560000000052, 0.00011054099999999872, 0.00011077799999999888, 0.00011066600000000232, 0.00011065299999999528, 0.00011058299999999743, 0.00011029099999999847, 0.00011026299999999933, 0.00011069400000000146, 0.00011048599999999992, 0.00011030499999999804, 0.00011073600000000017, 0.00011058300000000437, 0.00011052699999999915, 0.00011023599999999967, 0.0001108619999999963, 0.00011099999999999999, 0.00011043000000000164, 0.0001107090000000005, 0.00011070800000000103, 0.00011043100000000111, 0.00011037499999999589, 0.00011087500000000333, 0.00011061099999999657, 0.00011112499999999664, 0.0001102220000000001, 0.00011024999999999924, 0.00011023599999999967, 0.00011097200000000085]</msg>
<status status="PASS" starttime="20201110 08:34:33.518" endtime="20201110 08:34:33.523"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.507" endtime="20201110 08:34:33.524"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:33.531" endtime="20201110 08:34:33.533"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:33.539" endtime="20201110 08:34:33.560"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.534" endtime="20201110 08:34:33.562"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.526" endtime="20201110 08:34:33.563"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.014" endtime="20201110 08:34:33.564"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.013" endtime="20201110 08:34:33.565"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:33.587" endtime="20201110 08:34:33.606"></status>
</kw>
<msg timestamp="20201110 08:34:33.607" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:33.584" endtime="20201110 08:34:33.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:33.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:33.610" endtime="20201110 08:34:33.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:33.616" endtime="20201110 08:34:33.620"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.576" endtime="20201110 08:34:33.621"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.571" endtime="20201110 08:34:33.623"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:33.639" endtime="20201110 08:34:33.970"></status>
</kw>
<msg timestamp="20201110 08:34:33.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040160278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040272472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:33.636" endtime="20201110 08:34:33.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:33.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040160278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040272472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:33.979" endtime="20201110 08:34:33.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:33.997" endtime="20201110 08:34:34.003"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.629" endtime="20201110 08:34:34.004"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.624" endtime="20201110 08:34:34.006"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:34.016" level="INFO">${RESULT} = [{'time': 0.040272472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011219399999999602, 'source_diff': 0.00011219399999999602}, {'time': 0.040390736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:34.007" endtime="20201110 08:34:34.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:34.046" level="INFO">${ACCURACY} = {'time': [0.040272472, 0.040390736, 0.040508958, 0.04062725, 0.040744653, 0.040861722, 0.040978931, 0.041101194, 0.041218444, 0.041336722, 0.041455944, 0.041574236, 0.041691444, 0.041813764, 0.041933,...</msg>
<status status="PASS" starttime="20201110 08:34:34.018" endtime="20201110 08:34:34.046"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:34.057" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201110 08:34:34.054" endtime="20201110 08:34:34.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:34.062" level="INFO">VALUE: [0.00011219399999999602, 0.00011179200000000639, 0.00011123600000000067, 0.00011163899999999671, 0.00011163899999999671, 0.00011197200000000185, 0.00011163900000000365, 0.00011180499999999954, 0.00011150000000000049, 0.00011167999999999595, 0.00011166600000000332, 0.00011191700000000304, 0.00011179099999999997, 0.0001115560000000057, 0.00011143099999999517, 0.00011119399999999502, 0.00011155500000000623, 0.00011166600000000332, 0.00011149999999999355, 0.00011130600000000546, 0.00011133299999999818, 0.00011186099999999782, 0.00011125000000000024, 0.00011151400000000006, 0.00011144400000000221, 0.00011201400000000056, 0.00011154099999999972, 0.00011201400000000056, 0.00011125000000000024, 0.00011201400000000056, 0.00011181899999999911, 0.00011144399999999527, 0.0001117220000000016, 0.00011172199999999466, 0.00011170799999999509, 0.00011168099999999542, 0.00011137500000000383, 0.00011144500000000168, 0.0001112769999999999, 0.00011143100000000211, 0.00011177799999999988, 0.0001113890000000034, 0.00011137499999999689, 0.00011156899999999886, 0.00011169400000000246, 0.00011123600000000067, 0.00011137499999999689, 0.00011183300000000562, 0.00011131899999999861, 0.00011187499999999739]</msg>
<status status="PASS" starttime="20201110 08:34:34.059" endtime="20201110 08:34:34.063"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.048" endtime="20201110 08:34:34.065"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:34.072" endtime="20201110 08:34:34.074"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:34.080" endtime="20201110 08:34:34.101"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.075" endtime="20201110 08:34:34.103"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.067" endtime="20201110 08:34:34.105"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.567" endtime="20201110 08:34:34.105"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.565" endtime="20201110 08:34:34.106"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:34.128" endtime="20201110 08:34:34.148"></status>
</kw>
<msg timestamp="20201110 08:34:34.149" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:34.125" endtime="20201110 08:34:34.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:34.155" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:34.151" endtime="20201110 08:34:34.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:34.157" endtime="20201110 08:34:34.161"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.118" endtime="20201110 08:34:34.162"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.112" endtime="20201110 08:34:34.164"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:34.180" endtime="20201110 08:34:34.512"></status>
</kw>
<msg timestamp="20201110 08:34:34.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040409583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040522292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:34.177" endtime="20201110 08:34:34.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:34.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040409583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040522292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:34.522" endtime="20201110 08:34:34.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:34.540" endtime="20201110 08:34:34.545"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.170" endtime="20201110 08:34:34.547"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.165" endtime="20201110 08:34:34.548"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:34.558" level="INFO">${RESULT} = [{'time': 0.040522292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001127090000000025, 'source_diff': 0.0001127090000000025}, {'time': 0.040644514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:34.550" endtime="20201110 08:34:34.559"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:34.588" level="INFO">${ACCURACY} = {'time': [0.040522292, 0.040644514, 0.040766792, 0.040888069, 0.041010306, 0.041131528, 0.041248806, 0.041367028, 0.041488292, 0.041611583, 0.041731806, 0.041853056, 0.041971264, 0.042091569, 0.042213...</msg>
<status status="PASS" starttime="20201110 08:34:34.560" endtime="20201110 08:34:34.589"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:34.599" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201110 08:34:34.597" endtime="20201110 08:34:34.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:34.604" level="INFO">VALUE: [0.0001127090000000025, 0.00011311099999999907, 0.00011265300000000422, 0.00011248600000000192, 0.00011252800000000063, 0.00011268100000000336, 0.00011243099999999617, 0.00011248600000000192, 0.0001127090000000025, 0.00011284699999999925, 0.00011316700000000429, 0.00011279200000000045, 0.0001128749999999984, 0.00011256899999999986, 0.00011236099999999832, 0.00011227699999999396, 0.00011277800000000088, 0.00011240299999999703, 0.00011250000000000149, 0.0001124020000000045, 0.00011288899999999796, 0.00011237500000000483, 0.00011268100000000336, 0.00011268100000000336, 0.0001123749999999979, 0.00011273600000000217, 0.00011243000000000364, 0.00011240300000000397, 0.00011261199999999805, 0.00011309799999999898, 0.00011291600000000457, 0.000112596999999999, 0.00011281900000000011, 0.00011280600000000002, 0.00011254100000000072, 0.00011263900000000465, 0.00011220800000000253, 0.00011315199999999831, 0.00011262500000000508, 0.00011255599999999977, 0.00011236099999999832, 0.00011319399999999702, 0.00011261099999999857, 0.00011295800000000328, 0.00011234800000000517, 0.00011227800000000038, 0.00011262499999999814, 0.00011256999999999934, 0.00011317999999999745, 0.00011286099999999882]</msg>
<status status="PASS" starttime="20201110 08:34:34.601" endtime="20201110 08:34:34.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.590" endtime="20201110 08:34:34.607"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:34.614" endtime="20201110 08:34:34.616"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:34.622" endtime="20201110 08:34:34.644"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.618" endtime="20201110 08:34:34.645"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.609" endtime="20201110 08:34:34.647"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.108" endtime="20201110 08:34:34.648"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.106" endtime="20201110 08:34:34.648"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:34.670" endtime="20201110 08:34:34.690"></status>
</kw>
<msg timestamp="20201110 08:34:34.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:34.667" endtime="20201110 08:34:34.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:34.697" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:34.694" endtime="20201110 08:34:34.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:34.700" endtime="20201110 08:34:34.703"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.660" endtime="20201110 08:34:34.705"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.654" endtime="20201110 08:34:34.706"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:34.723" endtime="20201110 08:34:35.055"></status>
</kw>
<msg timestamp="20201110 08:34:35.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040339236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040452722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:34.720" endtime="20201110 08:34:35.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:35.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040339236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040452722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:35.065" endtime="20201110 08:34:35.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:35.083" endtime="20201110 08:34:35.088"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.712" endtime="20201110 08:34:35.090"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.708" endtime="20201110 08:34:35.091"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:35.101" level="INFO">${RESULT} = [{'time': 0.040452722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011348600000000292, 'source_diff': 0.00011348600000000292}, {'time': 0.040577, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:34:35.093" endtime="20201110 08:34:35.102"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:35.133" level="INFO">${ACCURACY} = {'time': [0.040452722, 0.040577, 0.040700222, 0.040820528, 0.040941722, 0.041060014, 0.041183236, 0.041306472, 0.041428708, 0.041549, 0.041671208, 0.0417915, 0.041915764, 0.042040042, 0.04216425, 0.04...</msg>
<status status="PASS" starttime="20201110 08:34:35.103" endtime="20201110 08:34:35.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:35.144" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201110 08:34:35.142" endtime="20201110 08:34:35.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:35.149" level="INFO">VALUE: [0.00011348600000000292, 0.0001137220000000036, 0.00011351400000000206, 0.00011338899999999846, 0.00011391599999999863, 0.00011393099999999767, 0.0001139299999999982, 0.00011381899999999417, 0.00011384700000000025, 0.00011370800000000403, 0.00011376400000000231, 0.00011327800000000138, 0.00011411100000000007, 0.0001140420000000017, 0.0001140970000000005, 0.00011394400000000471, 0.00011404199999999476, 0.00011379200000000145, 0.00011382000000000059, 0.0001138749999999994, 0.00011327799999999444, 0.00011325000000000224, 0.00011418100000000486, 0.0001134299999999977, 0.00011323599999999573, 0.00011332000000000009, 0.00011397200000000385, 0.00011330500000000104, 0.00011345800000000378, 0.000113597, 0.0001133749999999989, 0.00011329200000000095, 0.00011334699999999975, 0.0001140420000000017, 0.0001138749999999994, 0.0001140420000000017, 0.00011419499999999749, 0.00011330600000000052, 0.00011357000000000034, 0.0001138749999999994, 0.00011326400000000181, 0.00011388899999999896, 0.00011401400000000256, 0.00011400000000000299, 0.00011415299999999878, 0.00011362499999999914, 0.0001139299999999982, 0.00011415299999999878, 0.00011418100000000486, 0.00011373599999999623]</msg>
<status status="PASS" starttime="20201110 08:34:35.146" endtime="20201110 08:34:35.150"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.135" endtime="20201110 08:34:35.152"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:35.158" endtime="20201110 08:34:35.161"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:35.167" endtime="20201110 08:34:35.188"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.162" endtime="20201110 08:34:35.190"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.154" endtime="20201110 08:34:35.191"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.650" endtime="20201110 08:34:35.192"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.649" endtime="20201110 08:34:35.192"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:35.215" endtime="20201110 08:34:35.235"></status>
</kw>
<msg timestamp="20201110 08:34:35.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:35.212" endtime="20201110 08:34:35.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:35.242" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:35.238" endtime="20201110 08:34:35.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:35.244" endtime="20201110 08:34:35.248"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.204" endtime="20201110 08:34:35.249"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.199" endtime="20201110 08:34:35.251"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:35.267" endtime="20201110 08:34:35.601"></status>
</kw>
<msg timestamp="20201110 08:34:35.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040203528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040318514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:35.264" endtime="20201110 08:34:35.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:35.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040203528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040318514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:35.610" endtime="20201110 08:34:35.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:35.628" endtime="20201110 08:34:35.635"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.257" endtime="20201110 08:34:35.637"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.252" endtime="20201110 08:34:35.638"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:35.648" level="INFO">${RESULT} = [{'time': 0.040318514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011498599999999748, 'source_diff': 0.00011498599999999748}, {'time': 0.040443736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:35.640" endtime="20201110 08:34:35.649"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:35.678" level="INFO">${ACCURACY} = {'time': [0.040318514, 0.040443736, 0.040568, 0.040692264, 0.040815458, 0.040938708, 0.041062944, 0.041187208, 0.041306417, 0.041429736, 0.041553903, 0.041675153, 0.041800431, 0.041924708, 0.042046917...</msg>
<status status="PASS" starttime="20201110 08:34:35.651" endtime="20201110 08:34:35.679"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:35.689" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201110 08:34:35.687" endtime="20201110 08:34:35.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:35.694" level="INFO">VALUE: [0.00011498599999999748, 0.00011425000000000324, 0.00011484700000000125, 0.00011497199999999791, 0.00011476399999999637, 0.00011502699999999672, 0.0001151379999999938, 0.00011473600000000417, 0.00011419499999999749, 0.00011475000000000374, 0.0001147220000000046, 0.00011495899999999781, 0.00011438899999999946, 0.00011455499999999535, 0.00011469500000000493, 0.00011488899999999996, 0.0001143749999999999, 0.00011429200000000195, 0.00011467999999999895, 0.0001142220000000041, 0.00011486100000000082, 0.00011430500000000204, 0.00011451400000000306, 0.00011447199999999741, 0.00011508399999999447, 0.0001148620000000003, 0.00011449999999999655, 0.00011491599999999963, 0.00011498599999999748, 0.0001143749999999999, 0.0001148750000000004, 0.00011511100000000107, 0.00011469399999999852, 0.00011508300000000193, 0.00011465199999999981, 0.00011419499999999749, 0.0001148750000000004, 0.00011506899999999542, 0.00011459800000000048, 0.00011493099999999867, 0.00011495899999999781, 0.00011427800000000238, 0.00011451400000000306, 0.00011469400000000546, 0.0001145420000000022, 0.00011444399999999827, 0.00011473599999999723, 0.00011438899999999946, 0.00011434800000000023, 0.00011483299999999474]</msg>
<status status="PASS" starttime="20201110 08:34:35.692" endtime="20201110 08:34:35.700"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.680" endtime="20201110 08:34:35.702"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:35.708" endtime="20201110 08:34:35.711"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:35.716" endtime="20201110 08:34:35.738"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.712" endtime="20201110 08:34:35.740"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.704" endtime="20201110 08:34:35.741"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.194" endtime="20201110 08:34:35.742"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.193" endtime="20201110 08:34:35.742"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:35.764" endtime="20201110 08:34:35.784"></status>
</kw>
<msg timestamp="20201110 08:34:35.785" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:35.761" endtime="20201110 08:34:35.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:35.791" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:35.787" endtime="20201110 08:34:35.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:35.794" endtime="20201110 08:34:35.797"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.754" endtime="20201110 08:34:35.799"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.748" endtime="20201110 08:34:35.800"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:35.816" endtime="20201110 08:34:36.150"></status>
</kw>
<msg timestamp="20201110 08:34:36.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039914333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040029694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:35.813" endtime="20201110 08:34:36.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039914333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040029694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:36.159" endtime="20201110 08:34:36.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.177" endtime="20201110 08:34:36.182"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.806" endtime="20201110 08:34:36.184"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.802" endtime="20201110 08:34:36.185"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:36.195" level="INFO">${RESULT} = [{'time': 0.040029694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011536099999999438, 'source_diff': 0.00011536099999999438}, {'time': 0.040154972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:36.187" endtime="20201110 08:34:36.196"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:36.226" level="INFO">${ACCURACY} = {'time': [0.040029694, 0.040154972, 0.040281236, 0.040402486, 0.040522708, 0.040649014, 0.040772264, 0.040896528, 0.041020819, 0.041143014, 0.041264319, 0.041389583, 0.041511847, 0.041633056, 0.041756...</msg>
<status status="PASS" starttime="20201110 08:34:36.197" endtime="20201110 08:34:36.227"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.237" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201110 08:34:36.235" endtime="20201110 08:34:36.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.242" level="INFO">VALUE: [0.00011536099999999438, 0.00011618000000000045, 0.00011601399999999762, 0.00011601400000000456, 0.00011561099999999463, 0.00011569499999999899, 0.00011529200000000295, 0.0001160970000000025, 0.00011572199999999866, 0.00011611099999999513, 0.0001155550000000033, 0.00011595799999999934, 0.00011567999999999995, 0.0001153620000000008, 0.00011597199999999891, 0.00011580600000000302, 0.0001160970000000025, 0.00011608400000000241, 0.00011559800000000148, 0.000115597000000002, 0.0001157499999999978, 0.000116082999999996, 0.00011534800000000123, 0.00011551300000000458, 0.0001156249999999942, 0.000115597000000002, 0.0001154169999999996, 0.00011531900000000261, 0.00011523599999999773, 0.00011557000000000234, 0.00011558300000000243, 0.00011536099999999438, 0.0001160699999999959, 0.00011543099999999917, 0.00011606900000000336, 0.00011569499999999899, 0.0001152220000000051, 0.00011533400000000166, 0.00011526399999999687, 0.00011572199999999866, 0.00011572199999999866, 0.00011580599999999608, 0.00011606899999999643, 0.00011588900000000096, 0.00011581999999999565, 0.0001158750000000014, 0.00011588900000000096, 0.00011577800000000388, 0.00011608400000000241, 0.00011548600000000492]</msg>
<status status="PASS" starttime="20201110 08:34:36.239" endtime="20201110 08:34:36.244"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.228" endtime="20201110 08:34:36.245"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.252" endtime="20201110 08:34:36.254"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:36.260" endtime="20201110 08:34:36.282"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.255" endtime="20201110 08:34:36.283"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.247" endtime="20201110 08:34:36.285"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.744" endtime="20201110 08:34:36.285"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.743" endtime="20201110 08:34:36.286"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.308" endtime="20201110 08:34:36.330"></status>
</kw>
<msg timestamp="20201110 08:34:36.331" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:36.305" endtime="20201110 08:34:36.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:36.333" endtime="20201110 08:34:36.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.339" endtime="20201110 08:34:36.343"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.298" endtime="20201110 08:34:36.344"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.292" endtime="20201110 08:34:36.346"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.362" endtime="20201110 08:34:36.708"></status>
</kw>
<msg timestamp="20201110 08:34:36.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040134361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04025125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:36.359" endtime="20201110 08:34:36.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040134361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04025125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:36.717" endtime="20201110 08:34:36.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.735" endtime="20201110 08:34:36.741"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.352" endtime="20201110 08:34:36.742"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.347" endtime="20201110 08:34:36.744"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:36.754" level="INFO">${RESULT} = [{'time': 0.04025125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011688900000000196, 'source_diff': 0.00011688900000000196}, {'time': 0.040372569, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201110 08:34:36.745" endtime="20201110 08:34:36.754"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:36.784" level="INFO">${ACCURACY} = {'time': [0.04025125, 0.040372569, 0.040497806, 0.040623069, 0.040749306, 0.040871583, 0.040994861, 0.041116181, 0.041239431, 0.041366694, 0.041491042, 0.041618222, 0.041745569, 0.041866847, 0.0419890...</msg>
<status status="PASS" starttime="20201110 08:34:36.756" endtime="20201110 08:34:36.784"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.795" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201110 08:34:36.792" endtime="20201110 08:34:36.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.800" level="INFO">VALUE: [0.00011688900000000196, 0.00011649999999999855, 0.00011720900000000006, 0.00011645799999999984, 0.00011683399999999622, 0.0001169300000000012, 0.0001163750000000019, 0.0001163750000000019, 0.00011659800000000248, 0.00011651300000000558, 0.0001171249999999957, 0.00011640300000000103, 0.00011647200000000635, 0.00011636099999999538, 0.00011626400000000481, 0.00011634700000000275, 0.000116597000000003, 0.0001169170000000011, 0.00011690300000000153, 0.00011702800000000513, 0.0001169300000000012, 0.00011686099999999588, 0.00011641600000000113, 0.00011644499999999974, 0.00011705599999999733, 0.00011683300000000368, 0.00011698599999999948, 0.00011629200000000395, 0.00011666700000000085, 0.00011702800000000513, 0.00011662500000000214, 0.00011665300000000128, 0.00011716700000000135, 0.00011694400000000077, 0.00011649999999999855, 0.0001165420000000042, 0.00011691699999999416, 0.00011640300000000103, 0.0001170970000000035, 0.00011699999999999905, 0.00011697199999999991, 0.00011702799999999819, 0.00011699999999999905, 0.00011702799999999819, 0.00011633300000000318, 0.00011654100000000472, 0.00011702799999999819, 0.00011708400000000341, 0.00011644499999999974, 0.00011704099999999829]</msg>
<status status="PASS" starttime="20201110 08:34:36.797" endtime="20201110 08:34:36.801"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.786" endtime="20201110 08:34:36.803"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.809" endtime="20201110 08:34:36.812"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:36.817" endtime="20201110 08:34:36.839"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.813" endtime="20201110 08:34:36.841"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.805" endtime="20201110 08:34:36.842"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.288" endtime="20201110 08:34:36.843"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.287" endtime="20201110 08:34:36.843"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.866" endtime="20201110 08:34:36.887"></status>
</kw>
<msg timestamp="20201110 08:34:36.888" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:36.862" endtime="20201110 08:34:36.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:36.890" endtime="20201110 08:34:36.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.896" endtime="20201110 08:34:36.900"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.855" endtime="20201110 08:34:36.902"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.850" endtime="20201110 08:34:36.903"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.920" endtime="20201110 08:34:37.265"></status>
</kw>
<msg timestamp="20201110 08:34:37.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040063444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040181611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:36.916" endtime="20201110 08:34:37.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:37.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040063444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040181611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:37.274" endtime="20201110 08:34:37.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:37.292" endtime="20201110 08:34:37.297"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.909" endtime="20201110 08:34:37.299"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.904" endtime="20201110 08:34:37.300"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:37.311" level="INFO">${RESULT} = [{'time': 0.040181611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011816700000000235, 'source_diff': 0.00011816700000000235}, {'time': 0.040305847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:37.302" endtime="20201110 08:34:37.311"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:37.340" level="INFO">${ACCURACY} = {'time': [0.040181611, 0.040305847, 0.040428056, 0.040553347, 0.040675611, 0.040802861, 0.040927083, 0.041055333, 0.041182569, 0.041305819, 0.041429111, 0.041553319, 0.041679542, 0.041806806, 0.041931...</msg>
<status status="PASS" starttime="20201110 08:34:37.313" endtime="20201110 08:34:37.341"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:37.351" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201110 08:34:37.349" endtime="20201110 08:34:37.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:37.356" level="INFO">VALUE: [0.00011816700000000235, 0.00011797200000000091, 0.00011751399999999912, 0.000118082999999998, 0.00011723599999999973, 0.00011731900000000461, 0.00011772200000000066, 0.0001175829999999975, 0.00011770800000000109, 0.00011738800000000299, 0.00011742999999999476, 0.00011816599999999594, 0.00011744500000000074, 0.00011805600000000527, 0.00011754199999999826, 0.00011755499999999836, 0.00011729099999999854, 0.00011734699999999681, 0.00011793100000000167, 0.00011815200000000331, 0.00011751399999999912, 0.00011743100000000117, 0.00011766700000000185, 0.00011772200000000066, 0.0001178750000000034, 0.00011769400000000152, 0.00011743100000000117, 0.00011811199999999661, 0.00011793100000000167, 0.0001173049999999981, 0.00011822199999999422, 0.00011782000000000459, 0.00011755499999999836, 0.00011786100000000382, 0.00011722200000000016, 0.0001172629999999994, 0.00011818100000000192, 0.00011748599999999998, 0.0001173750000000029, 0.00011772200000000066, 0.00011743100000000117, 0.00011731899999999768, 0.0001174170000000016, 0.00011740300000000203, 0.00011731899999999768, 0.0001178750000000034, 0.00011790199999999612, 0.00011751399999999912, 0.00011756899999999793, 0.00011794400000000177]</msg>
<status status="PASS" starttime="20201110 08:34:37.354" endtime="20201110 08:34:37.358"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.342" endtime="20201110 08:34:37.360"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:37.366" endtime="20201110 08:34:37.368"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:37.374" endtime="20201110 08:34:37.396"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.370" endtime="20201110 08:34:37.397"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.361" endtime="20201110 08:34:37.399"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.845" endtime="20201110 08:34:37.400"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.844" endtime="20201110 08:34:37.400"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:37.422" endtime="20201110 08:34:37.442"></status>
</kw>
<msg timestamp="20201110 08:34:37.444" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:37.419" endtime="20201110 08:34:37.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:37.450" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:37.446" endtime="20201110 08:34:37.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:37.452" endtime="20201110 08:34:37.456"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.412" endtime="20201110 08:34:37.457"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.406" endtime="20201110 08:34:37.459"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:37.475" endtime="20201110 08:34:37.809"></status>
</kw>
<msg timestamp="20201110 08:34:37.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040211069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040329889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:37.472" endtime="20201110 08:34:37.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:37.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040211069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040329889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:37.818" endtime="20201110 08:34:37.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:37.837" endtime="20201110 08:34:37.844"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.465" endtime="20201110 08:34:37.846"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.460" endtime="20201110 08:34:37.847"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:37.857" level="INFO">${RESULT} = [{'time': 0.040329889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011881999999999865, 'source_diff': 0.00011881999999999865}, {'time': 0.040458083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:37.848" endtime="20201110 08:34:37.858"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:37.887" level="INFO">${ACCURACY} = {'time': [0.040329889, 0.040458083, 0.040582319, 0.040706542, 0.04083075, 0.040959986, 0.041083306, 0.041207472, 0.041331667, 0.041460903, 0.041585181, 0.041711417, 0.041836639, 0.041963861, 0.0420901...</msg>
<status status="PASS" starttime="20201110 08:34:37.859" endtime="20201110 08:34:37.888"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:37.898" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201110 08:34:37.896" endtime="20201110 08:34:37.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:37.903" level="INFO">VALUE: [0.00011881999999999865, 0.00011911099999999814, 0.00011901300000000115, 0.00011848600000000098, 0.00011834699999999782, 0.00011826399999999987, 0.00011868100000000242, 0.00011848600000000098, 0.00011854199999999926, 0.0001187500000000008, 0.00011872300000000113, 0.0001187500000000008, 0.00011854199999999926, 0.00011854199999999926, 0.00011865299999999634, 0.00011888900000000396, 0.00011822200000000116, 0.00011840200000000356, 0.00011852700000000022, 0.00011858300000000543, 0.00011873600000000123, 0.00011873600000000123, 0.00011898600000000148, 0.00011912500000000464, 0.00011841699999999566, 0.00011854199999999926, 0.00011880599999999908, 0.00011872300000000113, 0.0001182500000000003, 0.00011859699999999807, 0.00011916599999999694, 0.00011822200000000116, 0.00011826399999999987, 0.00011847199999999447, 0.00011888900000000396, 0.00011900000000000105, 0.000118597000000005, 0.00011848600000000098, 0.00011870800000000209, 0.00011901400000000062, 0.00011886099999999789, 0.00011891699999999616, 0.00011827799999999944, 0.00011830599999999858, 0.00011854099999999979, 0.00011833299999999825, 0.00011823600000000073, 0.0001189300000000032, 0.0001189029999999966, 0.00011844400000000227]</msg>
<status status="PASS" starttime="20201110 08:34:37.900" endtime="20201110 08:34:37.905"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.889" endtime="20201110 08:34:37.906"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:37.913" endtime="20201110 08:34:37.915"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:37.921" endtime="20201110 08:34:37.942"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.916" endtime="20201110 08:34:37.944"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.908" endtime="20201110 08:34:37.946"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.402" endtime="20201110 08:34:37.946"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.401" endtime="20201110 08:34:37.947"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:37.969" endtime="20201110 08:34:37.989"></status>
</kw>
<msg timestamp="20201110 08:34:37.990" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:37.966" endtime="20201110 08:34:37.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:37.996" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:37.992" endtime="20201110 08:34:37.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:37.998" endtime="20201110 08:34:38.002"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.958" endtime="20201110 08:34:38.004"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.953" endtime="20201110 08:34:38.005"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.021" endtime="20201110 08:34:38.362"></status>
</kw>
<msg timestamp="20201110 08:34:38.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040086347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040205917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:38.018" endtime="20201110 08:34:38.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:38.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040086347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040205917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:38.373" endtime="20201110 08:34:38.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.392" endtime="20201110 08:34:38.398"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.011" endtime="20201110 08:34:38.399"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.006" endtime="20201110 08:34:38.401"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:38.411" level="INFO">${RESULT} = [{'time': 0.040205917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001195699999999994, 'source_diff': 0.0001195699999999994}, {'time': 0.040331097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:38.402" endtime="20201110 08:34:38.412"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:38.442" level="INFO">${ACCURACY} = {'time': [0.040205917, 0.040331097, 0.040458403, 0.040586625, 0.040716931, 0.040847125, 0.040973431, 0.041099653, 0.041227903, 0.041352167, 0.041479458, 0.041609653, 0.041738931, 0.041863194, 0.041993...</msg>
<status status="PASS" starttime="20201110 08:34:38.413" endtime="20201110 08:34:38.442"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:38.453" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201110 08:34:38.450" endtime="20201110 08:34:38.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:38.458" level="INFO">VALUE: [0.0001195699999999994, 0.00011933300000000618, 0.00011936099999999839, 0.00012015299999999784, 0.00012018099999999698, 0.00011923599999999479, 0.00011927800000000044, 0.00011954200000000026, 0.00011980600000000008, 0.00011954200000000026, 0.00011970799999999615, 0.000119597000000006, 0.00011954200000000026, 0.00011947200000000241, 0.00011948599999999504, 0.0001193050000000001, 0.0001198050000000006, 0.00011961099999999864, 0.00011952799999999375, 0.00011950000000000155, 0.00012016599999999794, 0.00011949999999999461, 0.00011981900000000018, 0.00011944500000000274, 0.00011930599999999958, 0.00011944399999999633, 0.00011918100000000292, 0.00011929200000000001, 0.00011950000000000155, 0.00011997200000000291, 0.00011979100000000104, 0.00011954200000000026, 0.0001195829999999995, 0.0001194449999999958, 0.00012018100000000392, 0.00012002800000000119, 0.00012000000000000205, 0.00011948599999999504, 0.00011944500000000274, 0.00011981900000000018, 0.00011968000000000395, 0.00011988800000000549, 0.00012015299999999784, 0.00011995800000000334, 0.00011934799999999829, 0.00011998600000000248, 0.00011926400000000087, 0.00011926400000000087, 0.00011943099999999623, 0.00011938900000000446]</msg>
<status status="PASS" starttime="20201110 08:34:38.455" endtime="20201110 08:34:38.459"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.443" endtime="20201110 08:34:38.461"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.467" endtime="20201110 08:34:38.470"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:38.476" endtime="20201110 08:34:38.497"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.471" endtime="20201110 08:34:38.499"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.463" endtime="20201110 08:34:38.501"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.949" endtime="20201110 08:34:38.501"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.947" endtime="20201110 08:34:38.502"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.524" endtime="20201110 08:34:38.548"></status>
</kw>
<msg timestamp="20201110 08:34:38.549" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:38.521" endtime="20201110 08:34:38.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:38.555" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:38.551" endtime="20201110 08:34:38.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.558" endtime="20201110 08:34:38.562"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.514" endtime="20201110 08:34:38.563"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.508" endtime="20201110 08:34:38.565"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.582" endtime="20201110 08:34:38.926"></status>
</kw>
<msg timestamp="20201110 08:34:38.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040494431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040615181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:38.578" endtime="20201110 08:34:38.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:38.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040494431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040615181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:38.935" endtime="20201110 08:34:38.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.953" endtime="20201110 08:34:38.959"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.571" endtime="20201110 08:34:38.960"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.566" endtime="20201110 08:34:38.962"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:38.972" level="INFO">${RESULT} = [{'time': 0.040615181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001207500000000028, 'source_diff': 0.0001207500000000028}, {'time': 0.040740403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:38.963" endtime="20201110 08:34:38.972"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:39.002" level="INFO">${ACCURACY} = {'time': [0.040615181, 0.040740403, 0.040870694, 0.041000028, 0.041129333, 0.041260667, 0.041390986, 0.04151725, 0.041642569, 0.041773819, 0.041904125, 0.042034403, 0.042165722, 0.042293014, 0.0424213...</msg>
<status status="PASS" starttime="20201110 08:34:38.974" endtime="20201110 08:34:39.002"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:39.013" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201110 08:34:39.011" endtime="20201110 08:34:39.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:39.018" level="INFO">VALUE: [0.0001207500000000028, 0.00012052800000000169, 0.00012087499999999946, 0.00012095900000000381, 0.00012051399999999518, 0.00012113899999999928, 0.00012115299999999884, 0.00012052800000000169, 0.00012048599999999604, 0.00012061099999999964, 0.0001209029999999986, 0.00012024999999999536, 0.00012031900000000068, 0.0001211249999999997, 0.00012073599999999629, 0.00012084700000000032, 0.00012084700000000032, 0.00012118099999999798, 0.00012048600000000298, 0.00012038899999999852, 0.00012086099999999989, 0.00012041699999999766, 0.0001202630000000024, 0.00012113900000000621, 0.0001202500000000023, 0.00012124999999999636, 0.00012119399999999808, 0.00012072200000000366, 0.00012120900000000406, 0.00012038799999999905, 0.00012040300000000503, 0.0001204449999999968, 0.00012029200000000101, 0.00012073600000000323, 0.00012037499999999896, 0.00012104100000000229, 0.00012097199999999697, 0.00012087499999999946, 0.00012094400000000477, 0.00012072200000000366, 0.00012101399999999568, 0.0001205700000000004, 0.00012106900000000143, 0.00012030499999999417, 0.00012023599999999579, 0.00012099999999999611, 0.0001207229999999962, 0.00012038899999999852, 0.0001204029999999981, 0.00012043099999999723]</msg>
<status status="PASS" starttime="20201110 08:34:39.015" endtime="20201110 08:34:39.019"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.004" endtime="20201110 08:34:39.021"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:39.027" endtime="20201110 08:34:39.030"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:39.036" endtime="20201110 08:34:39.058"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.032" endtime="20201110 08:34:39.059"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.023" endtime="20201110 08:34:39.061"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.504" endtime="20201110 08:34:39.061"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.502" endtime="20201110 08:34:39.062"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:39.084" endtime="20201110 08:34:39.106"></status>
</kw>
<msg timestamp="20201110 08:34:39.107" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:39.081" endtime="20201110 08:34:39.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:39.113" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:39.109" endtime="20201110 08:34:39.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:39.115" endtime="20201110 08:34:39.119"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.074" endtime="20201110 08:34:39.121"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.068" endtime="20201110 08:34:39.122"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:39.138" endtime="20201110 08:34:39.483"></status>
</kw>
<msg timestamp="20201110 08:34:39.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040408667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040530361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:39.135" endtime="20201110 08:34:39.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:39.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040408667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040530361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:39.492" endtime="20201110 08:34:39.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:39.510" endtime="20201110 08:34:39.515"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.128" endtime="20201110 08:34:39.517"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.123" endtime="20201110 08:34:39.518"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:39.528" level="INFO">${RESULT} = [{'time': 0.040530361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012169399999999858, 'source_diff': 0.00012169399999999858}, {'time': 0.040657583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:39.520" endtime="20201110 08:34:39.529"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:39.558" level="INFO">${ACCURACY} = {'time': [0.040530361, 0.040657583, 0.040784875, 0.040913125, 0.041042417, 0.041173736, 0.0413, 0.041428278, 0.041557569, 0.041686917, 0.041815181, 0.041943486, 0.042072736, 0.042199056, 0.042327319, ...</msg>
<status status="PASS" starttime="20201110 08:34:39.530" endtime="20201110 08:34:39.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:39.570" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201110 08:34:39.567" endtime="20201110 08:34:39.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:39.575" level="INFO">VALUE: [0.00012169399999999858, 0.00012181899999999524, 0.00012184700000000132, 0.00012219399999999908, 0.00012132000000000115, 0.00012129200000000201, 0.00012183300000000175, 0.00012219499999999855, 0.000122083000000002, 0.0001222229999999977, 0.00012220899999999812, 0.0001219029999999996, 0.00012183300000000175, 0.00012149999999999661, 0.00012187500000000046, 0.0001213050000000021, 0.00012195800000000534, 0.00012216699999999941, 0.00012152799999999575, 0.00012199999999999711, 0.00012187500000000046, 0.00012161100000000064, 0.00012163899999999978, 0.00012136100000000039, 0.0001214029999999991, 0.00012161100000000064, 0.00012187500000000046, 0.00012184700000000132, 0.00012193099999999873, 0.0001221799999999995, 0.0001213050000000021, 0.00012166599999999944, 0.00012129200000000201, 0.00012141599999999919, 0.00012204099999999635, 0.00012155499999999542, 0.00012151399999999618, 0.00012147199999999747, 0.00012132000000000115, 0.00012180499999999567, 0.00012173600000000423, 0.00012126399999999593, 0.00012188900000000003, 0.00012129199999999507, 0.00012211100000000114, 0.00012195899999999787, 0.00012211100000000114, 0.00012209700000000157, 0.00012143099999999823, 0.00012132000000000115]</msg>
<status status="PASS" starttime="20201110 08:34:39.572" endtime="20201110 08:34:39.577"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.560" endtime="20201110 08:34:39.579"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:39.585" endtime="20201110 08:34:39.588"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:39.594" endtime="20201110 08:34:39.616"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.590" endtime="20201110 08:34:39.618"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.581" endtime="20201110 08:34:39.619"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.064" endtime="20201110 08:34:39.620"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.063" endtime="20201110 08:34:39.620"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:39.643" endtime="20201110 08:34:39.665"></status>
</kw>
<msg timestamp="20201110 08:34:39.666" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:39.640" endtime="20201110 08:34:39.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:39.672" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:39.668" endtime="20201110 08:34:39.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:39.674" endtime="20201110 08:34:39.678"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.633" endtime="20201110 08:34:39.679"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.627" endtime="20201110 08:34:39.681"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:39.697" endtime="20201110 08:34:40.043"></status>
</kw>
<msg timestamp="20201110 08:34:40.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04076275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040885153, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:39.694" endtime="20201110 08:34:40.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:40.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04076275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040885153, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:40.052" endtime="20201110 08:34:40.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:40.070" endtime="20201110 08:34:40.077"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.687" endtime="20201110 08:34:40.079"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.682" endtime="20201110 08:34:40.080"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:40.091" level="INFO">${RESULT} = [{'time': 0.040885153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001224030000000001, 'source_diff': 0.0001224030000000001}, {'time': 0.041014375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:40.082" endtime="20201110 08:34:40.091"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:40.120" level="INFO">${ACCURACY} = {'time': [0.040885153, 0.041014375, 0.041143667, 0.041276944, 0.041406208, 0.041533472, 0.041663764, 0.041797056, 0.041924306, 0.042057653, 0.042184903, 0.042315194, 0.0424475, 0.04257675, 0.042705028...</msg>
<status status="PASS" starttime="20201110 08:34:40.093" endtime="20201110 08:34:40.121"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:40.131" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201110 08:34:40.129" endtime="20201110 08:34:40.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:40.137" level="INFO">VALUE: [0.0001224030000000001, 0.0001223329999999953, 0.0001227920000000035, 0.00012302700000000472, 0.00012268, 0.00012233300000000225, 0.00012265300000000035, 0.00012304199999999682, 0.00012263900000000078, 0.00012268099999999948, 0.0001226250000000012, 0.00012306900000000343, 0.00012261100000000164, 0.00012236099999999445, 0.0001229449999999993, 0.00012222199999999822, 0.00012262499999999427, 0.0001231109999999952, 0.00012227800000000344, 0.00012244399999999933, 0.00012270799999999915, 0.00012308399999999553, 0.0001228050000000036, 0.0001224449999999988, 0.00012316600000000094, 0.00012287500000000146, 0.00012313900000000128, 0.00012291700000000017, 0.0001224030000000001, 0.00012261100000000164, 0.00012250000000000455, 0.00012301399999999768, 0.00012226400000000387, 0.0001223329999999953, 0.00012234799999999435, 0.00012237500000000096, 0.00012226399999999693, 0.000123165999999994, 0.00012248699999999751, 0.00012290200000000112, 0.00012245800000000584, 0.00012294399999999983, 0.00012259800000000154, 0.00012319400000000008, 0.0001232779999999975, 0.0001231250000000017, 0.00012298599999999854, 0.00012245899999999837, 0.0001225830000000025, 0.00012238900000000053]</msg>
<status status="PASS" starttime="20201110 08:34:40.134" endtime="20201110 08:34:40.138"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.122" endtime="20201110 08:34:40.140"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:40.146" endtime="20201110 08:34:40.149"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:40.154" endtime="20201110 08:34:40.176"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.150" endtime="20201110 08:34:40.178"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.142" endtime="20201110 08:34:40.179"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.623" endtime="20201110 08:34:40.180"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.621" endtime="20201110 08:34:40.180"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:40.203" endtime="20201110 08:34:40.223"></status>
</kw>
<msg timestamp="20201110 08:34:40.224" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:40.200" endtime="20201110 08:34:40.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:40.230" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:40.226" endtime="20201110 08:34:40.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:40.233" endtime="20201110 08:34:40.236"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.193" endtime="20201110 08:34:40.238"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.187" endtime="20201110 08:34:40.240"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:40.256" endtime="20201110 08:34:40.588"></status>
</kw>
<msg timestamp="20201110 08:34:40.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040456861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040580667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:40.252" endtime="20201110 08:34:40.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:40.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040456861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040580667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:40.597" endtime="20201110 08:34:40.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:40.616" endtime="20201110 08:34:40.622"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.245" endtime="20201110 08:34:40.623"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.241" endtime="20201110 08:34:40.625"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:40.636" level="INFO">${RESULT} = [{'time': 0.040580667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012380600000000408, 'source_diff': 0.00012380600000000408}, {'time': 0.040711903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:40.627" endtime="20201110 08:34:40.636"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:40.666" level="INFO">${ACCURACY} = {'time': [0.040580667, 0.040711903, 0.040840167, 0.040969431, 0.041098708, 0.041233014, 0.041361306, 0.041495583, 0.041624847, 0.041756208, 0.041885597, 0.042019819, 0.042154139, 0.042285389, 0.042416...</msg>
<status status="PASS" starttime="20201110 08:34:40.638" endtime="20201110 08:34:40.666"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:40.677" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201110 08:34:40.674" endtime="20201110 08:34:40.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:40.682" level="INFO">VALUE: [0.00012380600000000408, 0.0001239450000000003, 0.00012376399999999843, 0.0001237229999999992, 0.00012394400000000083, 0.00012352799999999775, 0.00012347299999999894, 0.00012351400000000512, 0.00012402799999999825, 0.00012351400000000512, 0.0001241529999999949, 0.00012384700000000332, 0.00012334700000000282, 0.0001237359999999993, 0.00012334699999999588, 0.00012397199999999997, 0.00012391700000000117, 0.0001239580000000004, 0.00012362499999999527, 0.00012406900000000443, 0.00012355600000000383, 0.00012369400000000058, 0.0001240129999999992, 0.00012372199999999972, 0.00012391700000000117, 0.00012362499999999527, 0.00012354199999999732, 0.00012386200000000236, 0.00012413900000000228, 0.0001235700000000034, 0.00012404199999999782, 0.00012404099999999835, 0.00012376399999999843, 0.00012418100000000099, 0.0001237359999999993, 0.00012382000000000365, 0.00012391699999999423, 0.000123777999999998, 0.0001235830000000035, 0.00012343100000000023, 0.0001238199999999967, 0.00012380499999999767, 0.00012347199999999947, 0.00012384700000000332, 0.00012336100000000239, 0.00012376399999999843, 0.00012401399999999868, 0.00012338900000000153, 0.0001237359999999993, 0.0001240979999999961]</msg>
<status status="PASS" starttime="20201110 08:34:40.679" endtime="20201110 08:34:40.683"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.668" endtime="20201110 08:34:40.685"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:40.692" endtime="20201110 08:34:40.694"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:40.700" endtime="20201110 08:34:40.721"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.695" endtime="20201110 08:34:40.723"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.687" endtime="20201110 08:34:40.724"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.182" endtime="20201110 08:34:40.725"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.181" endtime="20201110 08:34:40.725"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:40.748" endtime="20201110 08:34:40.768"></status>
</kw>
<msg timestamp="20201110 08:34:40.770" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:40.745" endtime="20201110 08:34:40.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:40.776" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:40.772" endtime="20201110 08:34:40.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:40.778" endtime="20201110 08:34:40.782"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.738" endtime="20201110 08:34:40.783"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.732" endtime="20201110 08:34:40.785"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:40.801" endtime="20201110 08:34:41.135"></status>
</kw>
<msg timestamp="20201110 08:34:41.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040243208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040368056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:40.798" endtime="20201110 08:34:41.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:41.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040243208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040368056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:41.146" endtime="20201110 08:34:41.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:41.165" endtime="20201110 08:34:41.170"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.791" endtime="20201110 08:34:41.172"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.786" endtime="20201110 08:34:41.173"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:41.183" level="INFO">${RESULT} = [{'time': 0.040368056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012484799999999685, 'source_diff': 0.00012484799999999685}, {'time': 0.040503389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:41.174" endtime="20201110 08:34:41.184"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:41.213" level="INFO">${ACCURACY} = {'time': [0.040368056, 0.040503389, 0.040638611, 0.040767889, 0.040901222, 0.041035514, 0.041167764, 0.041300139, 0.041432403, 0.041563653, 0.041697944, 0.041830292, 0.041963486, 0.042093764, 0.042222...</msg>
<status status="PASS" starttime="20201110 08:34:41.185" endtime="20201110 08:34:41.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:41.224" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201110 08:34:41.222" endtime="20201110 08:34:41.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:41.230" level="INFO">VALUE: [0.00012484799999999685, 0.0001246250000000032, 0.00012476399999999943, 0.00012434700000000382, 0.00012484700000000432, 0.00012520800000000165, 0.0001246250000000032, 0.00012525000000000036, 0.00012459699999999713, 0.00012479199999999857, 0.00012519400000000208, 0.00012440299999999516, 0.00012426399999999893, 0.0001249450000000013, 0.00012429199999999807, 0.0001242779999999985, 0.00012476299999999996, 0.00012491700000000217, 0.00012501399999999968, 0.00012472200000000072, 0.00012495799999999446, 0.00012525000000000036, 0.00012484699999999738, 0.00012508299999999806, 0.0001244999999999996, 0.00012436099999999645, 0.00012465300000000235, 0.00012505500000000586, 0.0001251800000000025, 0.00012444400000000133, 0.00012469400000000158, 0.00012487500000000346, 0.00012512499999999677, 0.00012512499999999677, 0.0001246250000000032, 0.00012483399999999728, 0.00012486099999999695, 0.00012454199999999832, 0.00012452799999999875, 0.00012482000000000465, 0.00012469500000000105, 0.00012437499999999602, 0.00012466600000000244, 0.0001249160000000027, 0.00012529199999999907, 0.00012474999999999986, 0.00012483399999999728, 0.00012486099999999695, 0.00012448699999999951, 0.00012480599999999814]</msg>
<status status="PASS" starttime="20201110 08:34:41.227" endtime="20201110 08:34:41.231"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.215" endtime="20201110 08:34:41.233"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:41.239" endtime="20201110 08:34:41.242"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:41.248" endtime="20201110 08:34:41.269"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.243" endtime="20201110 08:34:41.271"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.235" endtime="20201110 08:34:41.272"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.727" endtime="20201110 08:34:41.273"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.726" endtime="20201110 08:34:41.273"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:41.296" endtime="20201110 08:34:41.316"></status>
</kw>
<msg timestamp="20201110 08:34:41.317" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:41.293" endtime="20201110 08:34:41.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:41.323" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:41.319" endtime="20201110 08:34:41.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:41.326" endtime="20201110 08:34:41.329"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.285" endtime="20201110 08:34:41.331"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.280" endtime="20201110 08:34:41.332"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:41.349" endtime="20201110 08:34:41.683"></status>
</kw>
<msg timestamp="20201110 08:34:41.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040163417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040289208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:41.346" endtime="20201110 08:34:41.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:41.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040163417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040289208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:41.692" endtime="20201110 08:34:41.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:41.710" endtime="20201110 08:34:41.715"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.338" endtime="20201110 08:34:41.717"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.334" endtime="20201110 08:34:41.718"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:41.728" level="INFO">${RESULT} = [{'time': 0.040289208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001257910000000001, 'source_diff': 0.0001257910000000001}, {'time': 0.040423583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:41.720" endtime="20201110 08:34:41.729"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:41.758" level="INFO">${ACCURACY} = {'time': [0.040289208, 0.040423583, 0.040559833, 0.040690153, 0.040824458, 0.040956736, 0.041089042, 0.041224306, 0.041357639, 0.041492972, 0.041623264, 0.041758597, 0.041892917, 0.042026181, 0.042161...</msg>
<status status="PASS" starttime="20201110 08:34:41.731" endtime="20201110 08:34:41.759"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:41.769" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201110 08:34:41.767" endtime="20201110 08:34:41.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:41.775" level="INFO">VALUE: [0.0001257910000000001, 0.00012558299999999856, 0.00012543000000000276, 0.00012593100000000274, 0.0001258329999999988, 0.0001258889999999971, 0.0001255000000000006, 0.00012565300000000335, 0.0001259030000000036, 0.00012561100000000464, 0.00012556999999999846, 0.0001255000000000006, 0.00012537500000000396, 0.000125778, 0.00012613899999999734, 0.00012613900000000428, 0.0001256380000000043, 0.00012555499999999942, 0.000125778, 0.0001257360000000013, 0.00012529199999999907, 0.00012601399999999374, 0.00012536099999999745, 0.00012536099999999745, 0.00012591699999999623, 0.00012562499999999727, 0.0001256529999999964, 0.0001253889999999966, 0.000125680000000003, 0.00012537500000000396, 0.0001262780000000005, 0.00012547200000000147, 0.0001260000000000011, 0.00012568100000000249, 0.0001254580000000019, 0.00012541699999999573, 0.00012602800000000025, 0.00012583400000000522, 0.00012544400000000233, 0.00012531899999999874, 0.00012556999999999846, 0.00012604100000000035, 0.00012584699999999838, 0.00012575000000000086, 0.00012556999999999846, 0.0001260559999999994, 0.00012547200000000147, 0.00012631899999999974, 0.0001258329999999988, 0.0001260559999999994]</msg>
<status status="PASS" starttime="20201110 08:34:41.772" endtime="20201110 08:34:41.776"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.760" endtime="20201110 08:34:41.778"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:41.784" endtime="20201110 08:34:41.787"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:41.792" endtime="20201110 08:34:41.814"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.788" endtime="20201110 08:34:41.816"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.780" endtime="20201110 08:34:41.817"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.275" endtime="20201110 08:34:41.818"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.274" endtime="20201110 08:34:41.818"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:41.841" endtime="20201110 08:34:41.861"></status>
</kw>
<msg timestamp="20201110 08:34:41.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:41.837" endtime="20201110 08:34:41.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:41.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:41.865" endtime="20201110 08:34:41.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:41.871" endtime="20201110 08:34:41.875"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.830" endtime="20201110 08:34:41.876"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.825" endtime="20201110 08:34:41.877"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:41.894" endtime="20201110 08:34:42.226"></status>
</kw>
<msg timestamp="20201110 08:34:42.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040482778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040609597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:41.891" endtime="20201110 08:34:42.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:42.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040482778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040609597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:42.235" endtime="20201110 08:34:42.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:42.254" endtime="20201110 08:34:42.261"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.884" endtime="20201110 08:34:42.263"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.879" endtime="20201110 08:34:42.264"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:42.274" level="INFO">${RESULT} = [{'time': 0.040609597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012681900000000024, 'source_diff': 0.00012681900000000024}, {'time': 0.040745875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:42.266" endtime="20201110 08:34:42.275"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:42.304" level="INFO">${ACCURACY} = {'time': [0.040609597, 0.040745875, 0.040882167, 0.041016514, 0.041150722, 0.041282972, 0.041419222, 0.041554514, 0.041687833, 0.041825083, 0.041957333, 0.042091639, 0.042228903, 0.042362194, 0.042496...</msg>
<status status="PASS" starttime="20201110 08:34:42.276" endtime="20201110 08:34:42.304"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:42.315" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201110 08:34:42.312" endtime="20201110 08:34:42.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:42.320" level="INFO">VALUE: [0.00012681900000000024, 0.0001269580000000034, 0.000126472999999995, 0.00012724999999999542, 0.0001262910000000006, 0.0001262910000000006, 0.0001263329999999993, 0.00012693100000000374, 0.00012725000000000236, 0.00012630500000000017, 0.00012680500000000067, 0.00012634699999999888, 0.00012640299999999716, 0.00012627700000000103, 0.0001269580000000034, 0.00012662499999999827, 0.00012641699999999673, 0.00012625000000000136, 0.00012709699999999963, 0.00012684700000000632, 0.00012719500000000356, 0.00012691699999999723, 0.00012718099999999705, 0.00012715199999999843, 0.00012651400000000118, 0.0001262780000000005, 0.0001267639999999945, 0.0001263199999999992, 0.00012634799999999835, 0.00012636200000000486, 0.00012679200000000057, 0.00012637499999999802, 0.00012722199999999628, 0.0001265559999999999, 0.00012640299999999716, 0.00012719400000000408, 0.00012690299999999766, 0.0001263889999999976, 0.00012667999999999707, 0.00012724999999999542, 0.0001268480000000058, 0.00012651400000000118, 0.00012701400000000168, 0.00012655500000000042, 0.0001265000000000016, 0.00012683399999999928, 0.00012634699999999888, 0.00012724999999999542, 0.0001264859999999951, 0.00012713899999999834]</msg>
<status status="PASS" starttime="20201110 08:34:42.317" endtime="20201110 08:34:42.321"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.306" endtime="20201110 08:34:42.323"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:42.329" endtime="20201110 08:34:42.332"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:42.337" endtime="20201110 08:34:42.359"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.333" endtime="20201110 08:34:42.361"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.325" endtime="20201110 08:34:42.362"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.820" endtime="20201110 08:34:42.363"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.819" endtime="20201110 08:34:42.363"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:42.385" endtime="20201110 08:34:42.406"></status>
</kw>
<msg timestamp="20201110 08:34:42.407" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:42.382" endtime="20201110 08:34:42.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:42.413" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:42.409" endtime="20201110 08:34:42.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:42.415" endtime="20201110 08:34:42.419"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.375" endtime="20201110 08:34:42.420"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.369" endtime="20201110 08:34:42.422"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:42.438" endtime="20201110 08:34:42.772"></status>
</kw>
<msg timestamp="20201110 08:34:42.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039850472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039978111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:42.435" endtime="20201110 08:34:42.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:42.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039850472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039978111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:42.782" endtime="20201110 08:34:42.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:42.800" endtime="20201110 08:34:42.805"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.428" endtime="20201110 08:34:42.807"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.423" endtime="20201110 08:34:42.808"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:42.818" level="INFO">${RESULT} = [{'time': 0.039978111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012763899999999884, 'source_diff': 0.00012763899999999884}, {'time': 0.040116417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:42.810" endtime="20201110 08:34:42.819"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:42.849" level="INFO">${ACCURACY} = {'time': [0.039978111, 0.040116417, 0.04025275, 0.040389056, 0.040521319, 0.040656681, 0.040790986, 0.040924319, 0.041062625, 0.041197028, 0.041331389, 0.041467667, 0.041599931, 0.041734222, 0.0418685...</msg>
<status status="PASS" starttime="20201110 08:34:42.821" endtime="20201110 08:34:42.849"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:42.859" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201110 08:34:42.857" endtime="20201110 08:34:42.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:42.865" level="INFO">VALUE: [0.00012763899999999884, 0.0001279450000000043, 0.00012756899999999405, 0.00012823699999999633, 0.0001279439999999979, 0.00012740299999999816, 0.0001282360000000038, 0.00012808300000000106, 0.0001280690000000015, 0.00012770899999999669, 0.00012829200000000207, 0.00012776400000000243, 0.00012744499999999687, 0.00012801400000000268, 0.00012752800000000175, 0.00012816699999999848, 0.00012817999999999857, 0.00012801400000000268, 0.00012775000000000286, 0.00012745799999999696, 0.00012808299999999412, 0.00012784700000000038, 0.0001273330000000003, 0.00012736099999999945, 0.00012822199999999728, 0.00012765200000000587, 0.00012751400000000218, 0.00012823599999999685, 0.0001276109999999997, 0.00012741699999999773, 0.00012736099999999945, 0.00012762499999999927, 0.00012830500000000217, 0.00012807000000000096, 0.00012784700000000038, 0.0001282079999999977, 0.00012736099999999945, 0.00012797300000000345, 0.00012762499999999927, 0.00012749999999999567, 0.0001282079999999977, 0.00012777799999999506, 0.00012747200000000347, 0.0001278200000000007, 0.00012780499999999473, 0.00012798600000000354, 0.00012775000000000286, 0.00012820899999999719, 0.00012790200000000612, 0.00012741599999999825]</msg>
<status status="PASS" starttime="20201110 08:34:42.862" endtime="20201110 08:34:42.866"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.850" endtime="20201110 08:34:42.868"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:42.874" endtime="20201110 08:34:42.877"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:42.882" endtime="20201110 08:34:42.904"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.878" endtime="20201110 08:34:42.906"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.870" endtime="20201110 08:34:42.907"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.365" endtime="20201110 08:34:42.908"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.364" endtime="20201110 08:34:42.908"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:42.930" endtime="20201110 08:34:42.951"></status>
</kw>
<msg timestamp="20201110 08:34:42.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:42.927" endtime="20201110 08:34:42.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:42.958" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:42.954" endtime="20201110 08:34:42.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:42.961" endtime="20201110 08:34:42.964"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.920" endtime="20201110 08:34:42.966"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.914" endtime="20201110 08:34:42.967"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:42.983" endtime="20201110 08:34:43.317"></status>
</kw>
<msg timestamp="20201110 08:34:43.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040191708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040320792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:42.980" endtime="20201110 08:34:43.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:43.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040191708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040320792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:43.326" endtime="20201110 08:34:43.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:43.345" endtime="20201110 08:34:43.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.973" endtime="20201110 08:34:43.352"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.968" endtime="20201110 08:34:43.353"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:43.363" level="INFO">${RESULT} = [{'time': 0.040320792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012908400000000153, 'source_diff': 0.00012908400000000153}, {'time': 0.040460097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:43.355" endtime="20201110 08:34:43.364"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:43.393" level="INFO">${ACCURACY} = {'time': [0.040320792, 0.040460097, 0.040595403, 0.040732694, 0.040871028, 0.041010347, 0.041148625, 0.041285917, 0.041420222, 0.041553486, 0.041690806, 0.041826042, 0.041960361, 0.042099653, 0.042238...</msg>
<status status="PASS" starttime="20201110 08:34:43.365" endtime="20201110 08:34:43.393"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:43.404" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201110 08:34:43.402" endtime="20201110 08:34:43.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:43.409" level="INFO">VALUE: [0.00012908400000000153, 0.00012831900000000174, 0.0001286529999999994, 0.00012873599999999735, 0.0001285969999999942, 0.00012837500000000002, 0.00012890299999999966, 0.0001288200000000017, 0.00012855500000000242, 0.00012834700000000088, 0.000128472999999997, 0.00012907000000000196, 0.0001284580000000049, 0.00012926400000000393, 0.00012887500000000052, 0.00012868099999999855, 0.00012842999999999882, 0.000128778000000003, 0.0001291110000000012, 0.0001292079999999987, 0.0001283889999999996, 0.00012858400000000103, 0.000128860999999994, 0.00012916699999999948, 0.0001289859999999976, 0.0001290000000000041, 0.00012923599999999785, 0.0001292079999999987, 0.0001291529999999999, 0.00012827799999999556, 0.0001285000000000036, 0.00012909700000000163, 0.00012902700000000378, 0.0001289859999999976, 0.00012876400000000343, 0.0001284859999999971, 0.00012908300000000206, 0.0001284439999999984, 0.00012890200000000018, 0.00012897199999999803, 0.0001282780000000025, 0.0001283880000000001, 0.00012907000000000196, 0.00012917999999999957, 0.00012855500000000242, 0.00012905500000000292, 0.00012874999999999692, 0.00012858300000000156, 0.00012894499999999837, 0.00012891699999999923]</msg>
<status status="PASS" starttime="20201110 08:34:43.406" endtime="20201110 08:34:43.410"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.395" endtime="20201110 08:34:43.412"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:43.418" endtime="20201110 08:34:43.421"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:43.427" endtime="20201110 08:34:43.448"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.422" endtime="20201110 08:34:43.450"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.414" endtime="20201110 08:34:43.451"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.910" endtime="20201110 08:34:43.452"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.909" endtime="20201110 08:34:43.452"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:43.475" endtime="20201110 08:34:43.495"></status>
</kw>
<msg timestamp="20201110 08:34:43.496" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:43.471" endtime="20201110 08:34:43.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:43.503" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:43.499" endtime="20201110 08:34:43.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:43.505" endtime="20201110 08:34:43.508"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.464" endtime="20201110 08:34:43.510"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.459" endtime="20201110 08:34:43.511"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:43.528" endtime="20201110 08:34:43.862"></status>
</kw>
<msg timestamp="20201110 08:34:43.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040053542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040182972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:43.524" endtime="20201110 08:34:43.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:43.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040053542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040182972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:43.871" endtime="20201110 08:34:43.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:43.889" endtime="20201110 08:34:43.894"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.517" endtime="20201110 08:34:43.896"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.513" endtime="20201110 08:34:43.897"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:43.907" level="INFO">${RESULT} = [{'time': 0.040182972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012942999999999982, 'source_diff': 0.00012942999999999982}, {'time': 0.040319208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:43.899" endtime="20201110 08:34:43.908"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:43.937" level="INFO">${ACCURACY} = {'time': [0.040182972, 0.040319208, 0.040455542, 0.040594903, 0.040734194, 0.040874556, 0.041011833, 0.041151111, 0.041289431, 0.041428736, 0.041567056, 0.041702361, 0.041838708, 0.041979097, 0.042116...</msg>
<status status="PASS" starttime="20201110 08:34:43.909" endtime="20201110 08:34:43.938"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:43.948" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201110 08:34:43.946" endtime="20201110 08:34:43.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:43.954" level="INFO">VALUE: [0.00012942999999999982, 0.00012934700000000188, 0.00012931999999999527, 0.00013007000000000296, 0.00012968000000000007, 0.00012940300000000016, 0.0001302769999999981, 0.0001299439999999999, 0.00012954200000000332, 0.00012958300000000256, 0.0001301530000000009, 0.00012931900000000274, 0.0001294439999999994, 0.0001295279999999968, 0.0001293330000000023, 0.0001301110000000022, 0.0001296530000000004, 0.00012999999999999817, 0.00012979099999999716, 0.00012941699999999973, 0.00013023699999999833, 0.00013005499999999698, 0.0001294859999999981, 0.00012984800000000185, 0.00012929199999999613, 0.00012997200000000597, 0.00012949999999999767, 0.00013013900000000134, 0.0001295969999999952, 0.0001301530000000009, 0.00012972199999999878, 0.00013008299999999612, 0.00013022199999999928, 0.00012984699999999544, 0.0001295000000000046, 0.00013005599999999645, 0.000130263999999998, 0.00012969500000000606, 0.00012942999999999982, 0.00012963900000000084, 0.00013024999999999842, 0.00012936100000000145, 0.00013006999999999602, 0.0001293330000000023, 0.00012969499999999912, 0.0001296110000000017, 0.00013008400000000253, 0.0001300980000000021, 0.00013024999999999842, 0.0001294309999999993]</msg>
<status status="PASS" starttime="20201110 08:34:43.951" endtime="20201110 08:34:43.955"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.939" endtime="20201110 08:34:43.957"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:43.963" endtime="20201110 08:34:43.966"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:43.971" endtime="20201110 08:34:43.993"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.967" endtime="20201110 08:34:43.995"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.958" endtime="20201110 08:34:43.996"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.454" endtime="20201110 08:34:43.997"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.453" endtime="20201110 08:34:43.997"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:44.020" endtime="20201110 08:34:44.041"></status>
</kw>
<msg timestamp="20201110 08:34:44.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:44.017" endtime="20201110 08:34:44.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:44.048" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:44.044" endtime="20201110 08:34:44.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:44.050" endtime="20201110 08:34:44.054"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.010" endtime="20201110 08:34:44.055"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.004" endtime="20201110 08:34:44.057"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:44.073" endtime="20201110 08:34:44.408"></status>
</kw>
<msg timestamp="20201110 08:34:44.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040659611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040790903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:44.070" endtime="20201110 08:34:44.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:44.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040659611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040790903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:44.417" endtime="20201110 08:34:44.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:44.435" endtime="20201110 08:34:44.443"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.063" endtime="20201110 08:34:44.444"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.058" endtime="20201110 08:34:44.446"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:44.456" level="INFO">${RESULT} = [{'time': 0.040790903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013129200000000507, 'source_diff': 0.00013129200000000507}, {'time': 0.04093225, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201110 08:34:44.447" endtime="20201110 08:34:44.456"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:44.562" level="INFO">${ACCURACY} = {'time': [0.040790903, 0.04093225, 0.041073556, 0.041212875, 0.041352208, 0.041488486, 0.041629778, 0.041769125, 0.0419075, 0.042044778, 0.042184125, 0.042321458, 0.042458806, 0.042598125, 0.042737444...</msg>
<status status="PASS" starttime="20201110 08:34:44.458" endtime="20201110 08:34:44.562"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:44.573" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201110 08:34:44.570" endtime="20201110 08:34:44.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:44.578" level="INFO">VALUE: [0.00013129200000000507, 0.00013036100000000245, 0.000131263999999999, 0.00013054200000000432, 0.00013095800000000046, 0.0001303189999999968, 0.00013094500000000037, 0.00013066699999999404, 0.00013106899999999755, 0.0001306389999999949, 0.00013058300000000356, 0.00013105499999999798, 0.00013108400000000353, 0.0001308330000000038, 0.000131166000000002, 0.00013106999999999702, 0.00013108299999999712, 0.0001308059999999972, 0.0001305279999999978, 0.00013104199999999788, 0.00013093000000000132, 0.00013062500000000227, 0.00013080499999999773, 0.00013081999999999677, 0.00013070799999999327, 0.00013058300000000356, 0.00013122200000000028, 0.00013031999999999627, 0.0001308189999999973, 0.0001306530000000014, 0.00013104199999999788, 0.00013119400000000114, 0.00013029099999999766, 0.00013069400000000064, 0.00013063900000000184, 0.00013077799999999806, 0.00013052800000000475, 0.00013105500000000492, 0.0001303200000000032, 0.00013049999999999867, 0.0001307080000000002, 0.00013047199999999953, 0.00013041700000000073, 0.00013072199999999978, 0.00013102800000000525, 0.00013074999999999892, 0.00013073599999999935, 0.00013062500000000227, 0.00013087500000000252, 0.0001307089999999997]</msg>
<status status="PASS" starttime="20201110 08:34:44.575" endtime="20201110 08:34:44.579"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.564" endtime="20201110 08:34:44.581"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:44.587" endtime="20201110 08:34:44.590"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:44.596" endtime="20201110 08:34:44.617"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.591" endtime="20201110 08:34:44.619"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.583" endtime="20201110 08:34:44.620"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.000" endtime="20201110 08:34:44.621"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.998" endtime="20201110 08:34:44.621"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:44.645" endtime="20201110 08:34:44.666"></status>
</kw>
<msg timestamp="20201110 08:34:44.667" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:44.641" endtime="20201110 08:34:44.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:44.674" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:44.670" endtime="20201110 08:34:44.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:44.676" endtime="20201110 08:34:44.680"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.633" endtime="20201110 08:34:44.681"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.628" endtime="20201110 08:34:44.683"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:44.699" endtime="20201110 08:34:45.045"></status>
</kw>
<msg timestamp="20201110 08:34:45.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041843083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041974986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:44.696" endtime="20201110 08:34:45.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:45.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041843083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041974986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:45.056" endtime="20201110 08:34:45.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:45.080" endtime="20201110 08:34:45.086"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.688" endtime="20201110 08:34:45.088"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.684" endtime="20201110 08:34:45.089"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:45.100" level="INFO">${RESULT} = [{'time': 0.041974986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013190299999999572, 'source_diff': 0.00013190299999999572}, {'time': 0.042114292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:45.091" endtime="20201110 08:34:45.100"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:45.131" level="INFO">${ACCURACY} = {'time': [0.041974986, 0.042114292, 0.042250556, 0.042391847, 0.042533222, 0.042674542, 0.042816889, 0.042958236, 0.043100569, 0.043237889, 0.043380222, 0.043517569, 0.043656931, 0.043797181, 0.043935...</msg>
<status status="PASS" starttime="20201110 08:34:45.102" endtime="20201110 08:34:45.131"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:45.142" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201110 08:34:45.139" endtime="20201110 08:34:45.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:45.148" level="INFO">VALUE: [0.00013190299999999572, 0.00013145900000000044, 0.00013145900000000044, 0.0001316660000000025, 0.00013187500000000352, 0.00013134800000000335, 0.0001318059999999982, 0.00013205499999999898, 0.0001314860000000001, 0.0001322080000000017, 0.00013134700000000388, 0.00013169400000000164, 0.00013145900000000044, 0.00013129199999999813, 0.00013213900000000334, 0.0001315980000000036, 0.00013151399999999924, 0.00013191700000000223, 0.00013141700000000173, 0.00013168100000000155, 0.0001313880000000031, 0.00013141700000000173, 0.00013205599999999845, 0.00013157000000000446, 0.00013179199999999863, 0.00013216699999999554, 0.00013145900000000044, 0.00013129199999999813, 0.00013173600000000035, 0.000131778000000006, 0.00013215299999999597, 0.0001318479999999969, 0.0001318890000000031, 0.00013183299999999787, 0.00013168100000000155, 0.00013134700000000388, 0.0001317080000000012, 0.000131473, 0.00013223600000000085, 0.0001321939999999952, 0.00013179200000000557, 0.00013172200000000078, 0.0001319860000000006, 0.00013163900000000284, 0.00013163799999999642, 0.00013181999999999777, 0.00013169400000000164, 0.00013195800000000146, 0.0001315279999999988, 0.00013154199999999838]</msg>
<status status="PASS" starttime="20201110 08:34:45.144" endtime="20201110 08:34:45.150"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.132" endtime="20201110 08:34:45.152"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:45.159" endtime="20201110 08:34:45.162"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:45.168" endtime="20201110 08:34:45.190"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.163" endtime="20201110 08:34:45.192"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.154" endtime="20201110 08:34:45.193"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.624" endtime="20201110 08:34:45.194"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.622" endtime="20201110 08:34:45.194"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:45.217" endtime="20201110 08:34:45.242"></status>
</kw>
<msg timestamp="20201110 08:34:45.243" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:45.214" endtime="20201110 08:34:45.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:45.250" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:45.245" endtime="20201110 08:34:45.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:45.252" endtime="20201110 08:34:45.256"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.207" endtime="20201110 08:34:45.257"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.201" endtime="20201110 08:34:45.259"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:45.276" endtime="20201110 08:34:45.623"></status>
</kw>
<msg timestamp="20201110 08:34:45.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043116333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043249472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:45.272" endtime="20201110 08:34:45.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:45.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043116333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043249472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:45.632" endtime="20201110 08:34:45.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:45.651" endtime="20201110 08:34:45.655"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.265" endtime="20201110 08:34:45.656"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.260" endtime="20201110 08:34:45.658"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:45.668" level="INFO">${RESULT} = [{'time': 0.043249472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001331389999999974, 'source_diff': 0.0001331389999999974}, {'time': 0.043389667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:45.659" endtime="20201110 08:34:45.669"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:45.699" level="INFO">${ACCURACY} = {'time': [0.043249472, 0.043389667, 0.043526931, 0.043665236, 0.043802486, 0.043940833, 0.044080097, 0.044222431, 0.04436275, 0.044501056, 0.044641389, 0.044780569, 0.044923861, 0.045066125, 0.0452084...</msg>
<status status="PASS" starttime="20201110 08:34:45.670" endtime="20201110 08:34:45.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:45.710" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201110 08:34:45.708" endtime="20201110 08:34:45.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:45.716" level="INFO">VALUE: [0.0001331389999999974, 0.0001325279999999998, 0.00013275000000000092, 0.00013255500000000642, 0.00013286100000000495, 0.0001325969999999982, 0.00013295799999999552, 0.00013311199999999773, 0.00013279199999999963, 0.00013231999999999827, 0.00013256999999999852, 0.0001325409999999999, 0.00013243000000000282, 0.00013255599999999895, 0.0001331389999999974, 0.00013306899999999955, 0.0001330280000000003, 0.0001324310000000023, 0.0001327640000000005, 0.00013265299999999647, 0.00013233400000000478, 0.00013250000000000067, 0.00013240300000000316, 0.00013269400000000264, 0.00013251400000000024, 0.0001325969999999982, 0.00013294500000000237, 0.000132958999999995, 0.00013234699999999794, 0.000133264000000001, 0.0001331530000000039, 0.00013245800000000196, 0.0001325969999999982, 0.0001324169999999958, 0.0001324310000000023, 0.0001330269999999939, 0.00013237500000000402, 0.00013306899999999955, 0.00013298700000000108, 0.00013288899999999715, 0.0001323609999999975, 0.0001329310000000028, 0.00013247200000000153, 0.00013272199999999484, 0.0001324860000000011, 0.00013286200000000442, 0.00013308299999999912, 0.0001329730000000015, 0.00013230600000000564, 0.00013270899999999475]</msg>
<status status="PASS" starttime="20201110 08:34:45.713" endtime="20201110 08:34:45.717"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.701" endtime="20201110 08:34:45.719"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:45.725" endtime="20201110 08:34:45.728"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:45.734" endtime="20201110 08:34:45.755"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.729" endtime="20201110 08:34:45.757"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.721" endtime="20201110 08:34:45.759"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.196" endtime="20201110 08:34:45.760"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.195" endtime="20201110 08:34:45.760"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:45.784" endtime="20201110 08:34:45.807"></status>
</kw>
<msg timestamp="20201110 08:34:45.808" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:45.780" endtime="20201110 08:34:45.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:45.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:45.811" endtime="20201110 08:34:45.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:45.817" endtime="20201110 08:34:45.821"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.773" endtime="20201110 08:34:45.823"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.766" endtime="20201110 08:34:45.824"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:45.843" endtime="20201110 08:34:46.189"></status>
</kw>
<msg timestamp="20201110 08:34:46.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042420903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042555042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:45.839" endtime="20201110 08:34:46.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:46.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042420903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042555042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:46.198" endtime="20201110 08:34:46.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:46.217" endtime="20201110 08:34:46.221"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.830" endtime="20201110 08:34:46.223"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.825" endtime="20201110 08:34:46.224"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:46.235" level="INFO">${RESULT} = [{'time': 0.042555042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001341389999999984, 'source_diff': 0.0001341389999999984}, {'time': 0.042694375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:46.226" endtime="20201110 08:34:46.235"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:46.265" level="INFO">${ACCURACY} = {'time': [0.042555042, 0.042694375, 0.042832667, 0.042975069, 0.043114292, 0.043252569, 0.043393861, 0.043533153, 0.043677458, 0.043817792, 0.043959111, 0.044097389, 0.044237778, 0.044379042, 0.044523...</msg>
<status status="PASS" starttime="20201110 08:34:46.237" endtime="20201110 08:34:46.266"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:46.277" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201110 08:34:46.274" endtime="20201110 08:34:46.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:46.282" level="INFO">VALUE: [0.0001341389999999984, 0.00013397200000000303, 0.00013359799999999866, 0.00013412499999999883, 0.00013354200000000038, 0.00013356900000000005, 0.00013387499999999858, 0.0001335280000000008, 0.00013343000000000382, 0.00013405600000000045, 0.00013380500000000073, 0.00013390299999999772, 0.00013348599999999516, 0.000133860999999999, 0.0001336809999999966, 0.00013344399999999645, 0.00013429200000000113, 0.0001335969999999992, 0.00013334699999999894, 0.000133651999999998, 0.0001337640000000015, 0.00013375000000000192, 0.00013341700000000373, 0.0001337090000000027, 0.0001333609999999985, 0.00013387499999999858, 0.00013365299999999747, 0.00013361199999999823, 0.00013394500000000337, 0.00013411099999999926, 0.00013329099999999372, 0.0001334169999999968, 0.00013413799999999892, 0.0001338060000000002, 0.00013419400000000414, 0.0001335280000000008, 0.00013380500000000073, 0.00013376399999999455, 0.00013400000000000217, 0.00013379200000000063, 0.00013347200000000253, 0.0001335969999999992, 0.00013390299999999772, 0.00013400000000000217, 0.00013411099999999926, 0.00013356999999999952, 0.00013375000000000192, 0.00013405600000000045, 0.00013347200000000253, 0.00013362499999999833]</msg>
<status status="PASS" starttime="20201110 08:34:46.279" endtime="20201110 08:34:46.288"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.267" endtime="20201110 08:34:46.290"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:46.297" endtime="20201110 08:34:46.299"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:46.305" endtime="20201110 08:34:46.327"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.301" endtime="20201110 08:34:46.329"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.292" endtime="20201110 08:34:46.330"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.762" endtime="20201110 08:34:46.331"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.761" endtime="20201110 08:34:46.331"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:46.354" endtime="20201110 08:34:46.377"></status>
</kw>
<msg timestamp="20201110 08:34:46.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:46.351" endtime="20201110 08:34:46.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:46.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:46.381" endtime="20201110 08:34:46.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:46.387" endtime="20201110 08:34:46.391"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.344" endtime="20201110 08:34:46.393"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.338" endtime="20201110 08:34:46.394"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:46.411" endtime="20201110 08:34:46.761"></status>
</kw>
<msg timestamp="20201110 08:34:46.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041113819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041248694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:46.407" endtime="20201110 08:34:46.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:46.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041113819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041248694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:46.770" endtime="20201110 08:34:46.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:46.789" endtime="20201110 08:34:46.793"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.400" endtime="20201110 08:34:46.794"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.395" endtime="20201110 08:34:46.796"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:46.807" level="INFO">${RESULT} = [{'time': 0.041248694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013487499999999958, 'source_diff': 0.00013487499999999958}, {'time': 0.041390111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:46.797" endtime="20201110 08:34:46.807"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:46.840" level="INFO">${ACCURACY} = {'time': [0.041248694, 0.041390111, 0.041534375, 0.04167675, 0.041816097, 0.041960444, 0.042103806, 0.042246153, 0.042389528, 0.042534903, 0.042680306, 0.042824597, 0.042968958, 0.043111278, 0.0432536...</msg>
<status status="PASS" starttime="20201110 08:34:46.809" endtime="20201110 08:34:46.841"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:46.851" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201110 08:34:46.849" endtime="20201110 08:34:46.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:46.857" level="INFO">VALUE: [0.00013487499999999958, 0.00013533300000000137, 0.00013438899999999865, 0.00013504200000000188, 0.00013462500000000627, 0.00013473599999999641, 0.00013532000000000127, 0.0001352090000000042, 0.00013479200000000163, 0.00013515299999999897, 0.00013495900000000394, 0.00013465299999999847, 0.00013525000000000342, 0.00013511100000000026, 0.00013507000000000102, 0.0001345139999999953, 0.00013466599999999856, 0.0001347640000000025, 0.0001344310000000043, 0.00013447299999999607, 0.0001348190000000013, 0.00013461099999999976, 0.00013494399999999795, 0.0001350410000000024, 0.00013467999999999813, 0.00013455600000000095, 0.00013523599999999691, 0.00013488899999999915, 0.00013437499999999908, 0.0001348469999999935, 0.00013431899999999386, 0.00013519500000000462, 0.00013483300000000087, 0.00013533300000000137, 0.0001350139999999958, 0.00013519499999999768, 0.00013443000000000482, 0.00013447299999999607, 0.0001350840000000006, 0.0001350139999999958, 0.0001344719999999966, 0.00013437499999999908, 0.00013508300000000112, 0.00013517999999999863, 0.00013437500000000602, 0.00013477800000000206, 0.0001347640000000025, 0.00013522200000000428, 0.00013459799999999966, 0.0001344169999999978]</msg>
<status status="PASS" starttime="20201110 08:34:46.854" endtime="20201110 08:34:46.858"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.842" endtime="20201110 08:34:46.860"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:46.867" endtime="20201110 08:34:46.869"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:46.875" endtime="20201110 08:34:46.897"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.871" endtime="20201110 08:34:46.899"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.862" endtime="20201110 08:34:46.900"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.333" endtime="20201110 08:34:46.901"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.332" endtime="20201110 08:34:46.901"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:46.924" endtime="20201110 08:34:46.949"></status>
</kw>
<msg timestamp="20201110 08:34:46.950" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:46.921" endtime="20201110 08:34:46.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:46.956" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:46.952" endtime="20201110 08:34:46.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:46.958" endtime="20201110 08:34:46.962"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.913" endtime="20201110 08:34:46.964"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.908" endtime="20201110 08:34:46.965"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:46.982" endtime="20201110 08:34:47.338"></status>
</kw>
<msg timestamp="20201110 08:34:47.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041154333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04128975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:46.979" endtime="20201110 08:34:47.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:47.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041154333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04128975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:47.348" endtime="20201110 08:34:47.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:47.367" endtime="20201110 08:34:47.371"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.971" endtime="20201110 08:34:47.372"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.967" endtime="20201110 08:34:47.374"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:47.384" level="INFO">${RESULT} = [{'time': 0.04128975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001354169999999988, 'source_diff': 0.0001354169999999988}, {'time': 0.041433056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:34:47.375" endtime="20201110 08:34:47.385"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:47.415" level="INFO">${ACCURACY} = {'time': [0.04128975, 0.041433056, 0.041575444, 0.041717764, 0.041863111, 0.042004431, 0.042145736, 0.042287042, 0.042429347, 0.042569639, 0.042712, 0.042857306, 0.043001611, 0.043146972, 0.043291222,...</msg>
<status status="PASS" starttime="20201110 08:34:47.386" endtime="20201110 08:34:47.415"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:47.426" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201110 08:34:47.424" endtime="20201110 08:34:47.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:47.431" level="INFO">VALUE: [0.0001354169999999988, 0.00013533400000000084, 0.0001363190000000028, 0.00013583299999999493, 0.0001360280000000033, 0.0001357640000000035, 0.00013537500000000008, 0.00013611099999999432, 0.0001358190000000023, 0.0001353610000000005, 0.00013629200000000313, 0.0001356809999999986, 0.00013592999999999938, 0.00013542999999999888, 0.00013594399999999895, 0.00013537500000000008, 0.00013565299999999947, 0.0001357919999999957, 0.00013543099999999836, 0.00013542999999999888, 0.00013588800000000067, 0.00013565299999999947, 0.00013605599999999551, 0.00013561100000000076, 0.0001355139999999963, 0.0001356389999999999, 0.0001353610000000005, 0.0001353049999999953, 0.00013556900000000205, 0.00013587500000000058, 0.00013583300000000187, 0.00013537500000000008, 0.00013544399999999845, 0.00013592999999999938, 0.00013609699999999475, 0.00013590299999999972, 0.0001354169999999988, 0.00013604200000000288, 0.00013598599999999766, 0.0001355280000000028, 0.00013608300000000212, 0.00013619499999999868, 0.0001360139999999968, 0.0001358190000000023, 0.000135264000000003, 0.00013573600000000435, 0.00013591599999999981, 0.0001353049999999953, 0.00013573600000000435, 0.000135861000000001]</msg>
<status status="PASS" starttime="20201110 08:34:47.428" endtime="20201110 08:34:47.433"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.417" endtime="20201110 08:34:47.435"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:47.441" endtime="20201110 08:34:47.444"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:47.449" endtime="20201110 08:34:47.471"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.445" endtime="20201110 08:34:47.473"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.436" endtime="20201110 08:34:47.475"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.903" endtime="20201110 08:34:47.475"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.902" endtime="20201110 08:34:47.476"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:47.499" endtime="20201110 08:34:47.522"></status>
</kw>
<msg timestamp="20201110 08:34:47.523" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:47.495" endtime="20201110 08:34:47.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:47.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:47.525" endtime="20201110 08:34:47.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:47.532" endtime="20201110 08:34:47.535"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.488" endtime="20201110 08:34:47.537"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.482" endtime="20201110 08:34:47.538"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:47.556" endtime="20201110 08:34:47.901"></status>
</kw>
<msg timestamp="20201110 08:34:47.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041217389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041354583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:47.552" endtime="20201110 08:34:47.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:47.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041217389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041354583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:47.911" endtime="20201110 08:34:47.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:47.930" endtime="20201110 08:34:47.935"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.545" endtime="20201110 08:34:47.937"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.540" endtime="20201110 08:34:47.938"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:47.949" level="INFO">${RESULT} = [{'time': 0.041354583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001371940000000002, 'source_diff': 0.0001371940000000002}, {'time': 0.041496903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:47.940" endtime="20201110 08:34:47.949"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:47.980" level="INFO">${ACCURACY} = {'time': [0.041354583, 0.041496903, 0.041643236, 0.041787542, 0.041934875, 0.042080194, 0.042224458, 0.042371792, 0.042518125, 0.042661444, 0.04280675, 0.042953083, 0.043097431, 0.043242778, 0.0433850...</msg>
<status status="PASS" starttime="20201110 08:34:47.951" endtime="20201110 08:34:47.980"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:47.991" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201110 08:34:47.988" endtime="20201110 08:34:47.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:47.996" level="INFO">VALUE: [0.0001371940000000002, 0.00013650000000000467, 0.00013724999999999848, 0.00013694499999999943, 0.00013687500000000158, 0.000136652000000001, 0.0001366390000000009, 0.00013688900000000115, 0.00013711099999999532, 0.00013655499999999654, 0.00013631899999999586, 0.00013650000000000467, 0.0001364169999999998, 0.0001371810000000001, 0.00013726399999999805, 0.0001366119999999943, 0.00013665300000000047, 0.0001370410000000044, 0.00013680500000000373, 0.00013673599999999841, 0.000136861000000002, 0.00013730599999999676, 0.00013661100000000176, 0.00013711100000000226, 0.00013673700000000483, 0.00013636099999999457, 0.0001368049999999968, 0.00013726399999999805, 0.00013673599999999841, 0.00013693099999999986, 0.00013673600000000535, 0.00013695799999999952, 0.00013718000000000063, 0.0001369719999999991, 0.00013722200000000628, 0.00013724999999999848, 0.00013652799999999687, 0.00013690300000000072, 0.00013725000000000542, 0.0001366939999999997, 0.00013727799999999762, 0.0001371390000000014, 0.00013711099999999532, 0.0001366390000000009, 0.0001364169999999998, 0.00013654099999999697, 0.00013649999999999773, 0.00013730599999999676, 0.00013711100000000226, 0.00013650000000000467]</msg>
<status status="PASS" starttime="20201110 08:34:47.993" endtime="20201110 08:34:47.997"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.981" endtime="20201110 08:34:47.999"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:48.006" endtime="20201110 08:34:48.009"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:48.014" endtime="20201110 08:34:48.036"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.010" endtime="20201110 08:34:48.038"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.001" endtime="20201110 08:34:48.040"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.478" endtime="20201110 08:34:48.040"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.477" endtime="20201110 08:34:48.041"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:48.064" endtime="20201110 08:34:48.087"></status>
</kw>
<msg timestamp="20201110 08:34:48.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:48.060" endtime="20201110 08:34:48.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:48.094" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:48.090" endtime="20201110 08:34:48.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:48.097" endtime="20201110 08:34:48.100"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.053" endtime="20201110 08:34:48.102"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.047" endtime="20201110 08:34:48.103"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:48.120" endtime="20201110 08:34:48.466"></status>
</kw>
<msg timestamp="20201110 08:34:48.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041410167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041548319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:48.117" endtime="20201110 08:34:48.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:48.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041410167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041548319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:48.475" endtime="20201110 08:34:48.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:48.494" endtime="20201110 08:34:48.499"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.110" endtime="20201110 08:34:48.501"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.105" endtime="20201110 08:34:48.502"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:48.513" level="INFO">${RESULT} = [{'time': 0.041548319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001381520000000025, 'source_diff': 0.0001381520000000025}, {'time': 0.041696611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:48.504" endtime="20201110 08:34:48.513"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:48.543" level="INFO">${ACCURACY} = {'time': [0.041548319, 0.041696611, 0.041839958, 0.041984222, 0.042129528, 0.042275861, 0.042420167, 0.042568486, 0.042716819, 0.042865125, 0.043010389, 0.043154667, 0.0433, 0.043445319, 0.043591611, ...</msg>
<status status="PASS" starttime="20201110 08:34:48.515" endtime="20201110 08:34:48.544"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:48.555" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201110 08:34:48.552" endtime="20201110 08:34:48.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:48.560" level="INFO">VALUE: [0.0001381520000000025, 0.0001375280000000048, 0.00013831899999999786, 0.0001375970000000032, 0.00013788900000000215, 0.00013755499999999754, 0.00013740300000000122, 0.00013765300000000147, 0.00013779100000000516, 0.0001378469999999965, 0.00013775000000000592, 0.0001375840000000031, 0.00013780599999999726, 0.0001377770000000056, 0.000137264000000005, 0.00013806900000000455, 0.00013737500000000208, 0.00013826399999999905, 0.0001383049999999983, 0.00013755499999999754, 0.0001381390000000024, 0.00013790200000000225, 0.00013733400000000284, 0.0001375269999999984, 0.00013756900000000405, 0.00013826399999999905, 0.00013794500000000043, 0.00013741600000000131, 0.0001379720000000001, 0.00013761099999999582, 0.0001379720000000001, 0.00013799999999999923, 0.00013747299999999907, 0.00013813799999999599, 0.00013790299999999478, 0.00013773600000000635, 0.00013743100000000036, 0.00013802799999999837, 0.0001375970000000032, 0.00013755599999999701, 0.00013770799999999334, 0.00013800000000000617, 0.00013743000000000088, 0.00013738800000000218, 0.00013797299999999957, 0.00013787500000000258, 0.0001379720000000001, 0.0001375840000000031, 0.00013740300000000122, 0.00013744499999999993]</msg>
<status status="PASS" starttime="20201110 08:34:48.557" endtime="20201110 08:34:48.562"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.545" endtime="20201110 08:34:48.563"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:48.570" endtime="20201110 08:34:48.572"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:48.578" endtime="20201110 08:34:48.600"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.574" endtime="20201110 08:34:48.602"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.565" endtime="20201110 08:34:48.603"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.043" endtime="20201110 08:34:48.604"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.042" endtime="20201110 08:34:48.604"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:48.628" endtime="20201110 08:34:48.651"></status>
</kw>
<msg timestamp="20201110 08:34:48.652" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:48.624" endtime="20201110 08:34:48.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:48.658" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:48.654" endtime="20201110 08:34:48.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:48.661" endtime="20201110 08:34:48.664"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.617" endtime="20201110 08:34:48.666"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.611" endtime="20201110 08:34:48.667"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:48.684" endtime="20201110 08:34:49.036"></status>
</kw>
<msg timestamp="20201110 08:34:49.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041411472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041550278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:48.681" endtime="20201110 08:34:49.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:49.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041411472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041550278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:49.046" endtime="20201110 08:34:49.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:49.064" endtime="20201110 08:34:49.070"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.673" endtime="20201110 08:34:49.071"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.669" endtime="20201110 08:34:49.073"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:49.083" level="INFO">${RESULT} = [{'time': 0.041550278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001388060000000052, 'source_diff': 0.0001388060000000052}, {'time': 0.041699611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:49.074" endtime="20201110 08:34:49.084"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:49.116" level="INFO">${ACCURACY} = {'time': [0.041550278, 0.041699611, 0.041844889, 0.041993208, 0.042137542, 0.042281875, 0.042426167, 0.042572444, 0.042716722, 0.042863042, 0.043010347, 0.043154625, 0.043299958, 0.043445236, 0.043592...</msg>
<status status="PASS" starttime="20201110 08:34:49.085" endtime="20201110 08:34:49.117"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:49.128" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201110 08:34:49.125" endtime="20201110 08:34:49.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:49.133" level="INFO">VALUE: [0.0001388060000000052, 0.0001384720000000006, 0.00013907000000000502, 0.0001391799999999957, 0.0001386810000000016, 0.00013924999999999355, 0.00013897300000000057, 0.00013887500000000358, 0.00013852799999999887, 0.00013877799999999912, 0.00013883299999999793, 0.0001384170000000018, 0.00013843000000000188, 0.00013836099999999657, 0.00013859699999999725, 0.000138346999999997, 0.00013856900000000505, 0.00013909800000000416, 0.0001388480000000039, 0.0001390269999999999, 0.00013900000000000023, 0.0001392370000000004, 0.00013837500000000308, 0.00013874999999999998, 0.00013845799999999409, 0.00013863899999999596, 0.00013874999999999998, 0.00013888900000000315, 0.00013865300000000247, 0.00013852799999999887, 0.00013918000000000263, 0.0001383610000000035, 0.00013902799999999937, 0.00013870900000000075, 0.00013873600000000041, 0.00013866700000000204, 0.00013927799999999962, 0.00013852799999999887, 0.00013837499999999614, 0.00013854099999999897, 0.00013838900000000265, 0.00013920799999999484, 0.00013883400000000434, 0.00013933400000000484, 0.00013830500000000523, 0.00013872300000000032, 0.000138652000000003, 0.00013859800000000366, 0.00013841600000000231, 0.0001391799999999957]</msg>
<status status="PASS" starttime="20201110 08:34:49.130" endtime="20201110 08:34:49.135"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.118" endtime="20201110 08:34:49.136"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:49.143" endtime="20201110 08:34:49.146"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:49.151" endtime="20201110 08:34:49.174"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.147" endtime="20201110 08:34:49.175"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.138" endtime="20201110 08:34:49.177"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.607" endtime="20201110 08:34:49.177"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.605" endtime="20201110 08:34:49.178"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:49.201" endtime="20201110 08:34:49.223"></status>
</kw>
<msg timestamp="20201110 08:34:49.225" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:49.197" endtime="20201110 08:34:49.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:49.231" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:49.227" endtime="20201110 08:34:49.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:49.233" endtime="20201110 08:34:49.237"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.190" endtime="20201110 08:34:49.238"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.184" endtime="20201110 08:34:49.240"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:49.256" endtime="20201110 08:34:49.601"></status>
</kw>
<msg timestamp="20201110 08:34:49.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041302083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041441611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:49.253" endtime="20201110 08:34:49.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:49.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041302083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041441611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:49.611" endtime="20201110 08:34:49.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:49.629" endtime="20201110 08:34:49.633"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.246" endtime="20201110 08:34:49.634"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.241" endtime="20201110 08:34:49.636"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:49.646" level="INFO">${RESULT} = [{'time': 0.041441611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013952799999999987, 'source_diff': 0.00013952799999999987}, {'time': 0.041588972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:49.637" endtime="20201110 08:34:49.646"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:49.677" level="INFO">${ACCURACY} = {'time': [0.041441611, 0.041588972, 0.041735278, 0.041882556, 0.042032875, 0.042183167, 0.042332583, 0.042479847, 0.042627194, 0.042774514, 0.042923833, 0.043074167, 0.0432245, 0.043368819, 0.04351415...</msg>
<status status="PASS" starttime="20201110 08:34:49.648" endtime="20201110 08:34:49.678"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:49.688" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201110 08:34:49.686" endtime="20201110 08:34:49.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:49.693" level="INFO">VALUE: [0.00013952799999999987, 0.00014025000000000148, 0.00013937500000000408, 0.000139959000000002, 0.00013995799999999559, 0.00014016700000000354, 0.0001396940000000027, 0.00014029100000000072, 0.00014000000000000123, 0.00014031999999999933, 0.00013994400000000295, 0.00014030599999999976, 0.00013936099999999757, 0.00013951300000000083, 0.00013958399999999815, 0.00013975000000000098, 0.00013998600000000166, 0.00013931899999999886, 0.00013954199999999944, 0.0001399170000000033, 0.00013937499999999714, 0.00013933299999999843, 0.00013995799999999559, 0.0001401249999999979, 0.00013983299999999893, 0.00013954199999999944, 0.0001393889999999967, 0.00014027700000000115, 0.00013995800000000252, 0.00013975000000000098, 0.00013988900000000415, 0.0001399170000000033, 0.00013948600000000116, 0.0001401249999999979, 0.00013984799999999797, 0.00013972200000000184, 0.0001393889999999967, 0.00013979100000000022, 0.00013990299999999678, 0.00014025000000000148, 0.00013969499999999524, 0.00013950000000000073, 0.00013961099999999782, 0.0001393339999999979, 0.0001394170000000028, 0.00013981899999999936, 0.00013943099999999542, 0.00013938799999999724, 0.00014023600000000191, 0.00014008299999999918]</msg>
<status status="PASS" starttime="20201110 08:34:49.690" endtime="20201110 08:34:49.695"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.679" endtime="20201110 08:34:49.697"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:49.703" endtime="20201110 08:34:49.706"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:49.711" endtime="20201110 08:34:49.733"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.707" endtime="20201110 08:34:49.735"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.698" endtime="20201110 08:34:49.736"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.180" endtime="20201110 08:34:49.737"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.179" endtime="20201110 08:34:49.737"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:49.760" endtime="20201110 08:34:49.783"></status>
</kw>
<msg timestamp="20201110 08:34:49.784" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:49.756" endtime="20201110 08:34:49.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:49.790" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:49.786" endtime="20201110 08:34:49.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:49.792" endtime="20201110 08:34:49.796"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.749" endtime="20201110 08:34:49.797"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.744" endtime="20201110 08:34:49.799"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:49.815" endtime="20201110 08:34:50.158"></status>
</kw>
<msg timestamp="20201110 08:34:50.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040478583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040619167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:49.812" endtime="20201110 08:34:50.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:50.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040478583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040619167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:50.168" endtime="20201110 08:34:50.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:50.187" endtime="20201110 08:34:50.191"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.805" endtime="20201110 08:34:50.193"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.800" endtime="20201110 08:34:50.194"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:50.204" level="INFO">${RESULT} = [{'time': 0.040619167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014058399999999915, 'source_diff': 0.00014058399999999915}, {'time': 0.040768486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:50.196" endtime="20201110 08:34:50.205"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:50.236" level="INFO">${ACCURACY} = {'time': [0.040619167, 0.040768486, 0.040916806, 0.041064139, 0.041215486, 0.041365819, 0.041517208, 0.041664486, 0.041811806, 0.041961069, 0.042112417, 0.042257722, 0.042409028, 0.042558319, 0.042705...</msg>
<status status="PASS" starttime="20201110 08:34:50.207" endtime="20201110 08:34:50.237"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:50.247" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201110 08:34:50.245" endtime="20201110 08:34:50.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:50.252" level="INFO">VALUE: [0.00014058399999999915, 0.00014086099999999907, 0.00014100000000000223, 0.00014040299999999728, 0.00014109699999999975, 0.00014104100000000147, 0.0001405140000000013, 0.000140346999999999, 0.00014102800000000137, 0.0001407769999999947, 0.00014118099999999717, 0.0001403889999999977, 0.00014038900000000465, 0.00014074999999999505, 0.0001406249999999984, 0.00014031899999999986, 0.00014111099999999932, 0.00014108399999999965, 0.00014126399999999512, 0.00014044500000000293, 0.00014044400000000345, 0.00014065299999999753, 0.00014097199999999616, 0.00014054100000000097, 0.00014098600000000266, 0.0001406390000000049, 0.00014081900000000036, 0.00014065299999999753, 0.00014130499999999435, 0.00014066599999999763, 0.00014075000000000198, 0.000141137999999999, 0.00014113899999999846, 0.00014122200000000334, 0.00014086199999999854, 0.00014107000000000008, 0.00014038900000000465, 0.0001405690000000001, 0.00014075000000000198, 0.00014050000000000173, 0.00014054200000000044, 0.00014131900000000086, 0.0001411249999999989, 0.0001408889999999982, 0.00014058299999999968, 0.00014066599999999763, 0.0001404720000000026, 0.00014056999999999958, 0.00014084700000000644, 0.0001409720000000031]</msg>
<status status="PASS" starttime="20201110 08:34:50.249" endtime="20201110 08:34:50.254"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.238" endtime="20201110 08:34:50.255"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:50.262" endtime="20201110 08:34:50.264"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:50.270" endtime="20201110 08:34:50.291"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.265" endtime="20201110 08:34:50.293"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.257" endtime="20201110 08:34:50.295"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.739" endtime="20201110 08:34:50.295"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.738" endtime="20201110 08:34:50.295"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:50.318" endtime="20201110 08:34:50.339"></status>
</kw>
<msg timestamp="20201110 08:34:50.340" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:50.314" endtime="20201110 08:34:50.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:50.346" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:50.342" endtime="20201110 08:34:50.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:50.348" endtime="20201110 08:34:50.352"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.307" endtime="20201110 08:34:50.354"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.302" endtime="20201110 08:34:50.355"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:50.371" endtime="20201110 08:34:50.704"></status>
</kw>
<msg timestamp="20201110 08:34:50.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040047056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040189167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:50.368" endtime="20201110 08:34:50.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:50.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040047056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040189167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:50.714" endtime="20201110 08:34:50.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:50.732" endtime="20201110 08:34:50.735"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.361" endtime="20201110 08:34:50.737"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.356" endtime="20201110 08:34:50.738"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:50.749" level="INFO">${RESULT} = [{'time': 0.040189167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014211100000000032, 'source_diff': 0.00014211100000000032}, {'time': 0.040336514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:50.740" endtime="20201110 08:34:50.749"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:50.780" level="INFO">${ACCURACY} = {'time': [0.040189167, 0.040336514, 0.040485792, 0.040633069, 0.040785403, 0.040932722, 0.041081056, 0.041233347, 0.041385708, 0.041533, 0.041682319, 0.041831653, 0.041980917, 0.042133292, 0.042279569...</msg>
<status status="PASS" starttime="20201110 08:34:50.751" endtime="20201110 08:34:50.781"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:50.791" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201110 08:34:50.789" endtime="20201110 08:34:50.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:50.796" level="INFO">VALUE: [0.00014211100000000032, 0.00014137499999999914, 0.00014190299999999878, 0.00014204100000000247, 0.00014218099999999817, 0.0001414999999999958, 0.00014163899999999896, 0.00014176399999999562, 0.00014165199999999906, 0.00014159700000000025, 0.0001416940000000047, 0.0001420140000000028, 0.00014157000000000058, 0.00014193100000000486, 0.00014191600000000582, 0.0001421249999999999, 0.00014220799999999784, 0.00014137499999999914, 0.00014143100000000436, 0.0001419869999999962, 0.00014180600000000126, 0.00014140300000000522, 0.00014161099999999982, 0.000141444999999997, 0.00014175000000000298, 0.00014131900000000086, 0.00014197199999999716, 0.00014191599999999888, 0.00014134799999999947, 0.00014213899999999946, 0.00014184799999999997, 0.00014140299999999828, 0.0001420690000000016, 0.00014165300000000547, 0.0001414019999999988, 0.0001413610000000065, 0.00014144399999999752, 0.00014161099999999982, 0.00014133300000000043, 0.00014141699999999785, 0.00014169399999999777, 0.00014173599999999648, 0.00014186199999999954, 0.00014168099999999767, 0.0001421249999999999, 0.00014136099999999957, 0.00014175000000000298, 0.00014194500000000443, 0.0001423340000000009, 0.0001416249999999994]</msg>
<status status="PASS" starttime="20201110 08:34:50.793" endtime="20201110 08:34:50.798"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.782" endtime="20201110 08:34:50.799"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:50.805" endtime="20201110 08:34:50.808"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:50.814" endtime="20201110 08:34:50.835"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.809" endtime="20201110 08:34:50.837"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.801" endtime="20201110 08:34:50.838"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.298" endtime="20201110 08:34:50.839"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.296" endtime="20201110 08:34:50.839"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:50.862" endtime="20201110 08:34:50.883"></status>
</kw>
<msg timestamp="20201110 08:34:50.884" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:50.858" endtime="20201110 08:34:50.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:50.890" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:50.886" endtime="20201110 08:34:50.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:50.892" endtime="20201110 08:34:50.896"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.851" endtime="20201110 08:34:50.898"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.846" endtime="20201110 08:34:50.899"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:50.915" endtime="20201110 08:34:51.248"></status>
</kw>
<msg timestamp="20201110 08:34:51.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039926028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040069111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:50.912" endtime="20201110 08:34:51.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039926028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040069111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:51.257" endtime="20201110 08:34:51.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:51.275" endtime="20201110 08:34:51.279"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.905" endtime="20201110 08:34:51.281"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.900" endtime="20201110 08:34:51.282"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:51.292" level="INFO">${RESULT} = [{'time': 0.040069111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014308299999999524, 'source_diff': 0.00014308299999999524}, {'time': 0.040219375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:51.284" endtime="20201110 08:34:51.293"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:51.325" level="INFO">${ACCURACY} = {'time': [0.040069111, 0.040219375, 0.040366639, 0.040519903, 0.040667208, 0.040818528, 0.040968792, 0.041120111, 0.041273403, 0.041425667, 0.041576972, 0.041727264, 0.041878528, 0.042031819, 0.042182...</msg>
<status status="PASS" starttime="20201110 08:34:51.294" endtime="20201110 08:34:51.325"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.336" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201110 08:34:51.333" endtime="20201110 08:34:51.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.341" level="INFO">VALUE: [0.00014308299999999524, 0.00014277800000000312, 0.00014255600000000201, 0.00014240300000000622, 0.00014268000000000614, 0.00014243099999999842, 0.00014240299999999928, 0.00014231900000000186, 0.0001428890000000002, 0.00014243099999999842, 0.00014292999999999945, 0.000142347000000001, 0.00014311100000000132, 0.00014304099999999653, 0.00014251399999999637, 0.00014311100000000132, 0.0001424019999999998, 0.000142444999999998, 0.00014298599999999773, 0.0001424999999999968, 0.00014254200000000244, 0.00014247299999999713, 0.0001426799999999992, 0.00014279099999999628, 0.0001430140000000038, 0.00014287500000000064, 0.00014291699999999935, 0.00014323699999999745, 0.00014323599999999798, 0.00014237500000000014, 0.00014322200000000535, 0.0001426810000000056, 0.0001423050000000023, 0.00014291699999999935, 0.00014270800000000528, 0.00014229199999999526, 0.00014293099999999892, 0.00014291599999999988, 0.00014308299999999524, 0.00014258400000000115, 0.0001430549999999961, 0.00014315300000000003, 0.0001431250000000009, 0.00014265200000000006, 0.00014326400000000405, 0.00014319499999999874, 0.00014304200000000294, 0.00014281900000000236, 0.00014244399999999852, 0.00014279099999999628]</msg>
<status status="PASS" starttime="20201110 08:34:51.338" endtime="20201110 08:34:51.347"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.327" endtime="20201110 08:34:51.348"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:51.355" endtime="20201110 08:34:51.357"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:51.363" endtime="20201110 08:34:51.385"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.359" endtime="20201110 08:34:51.386"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.350" endtime="20201110 08:34:51.388"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.841" endtime="20201110 08:34:51.388"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.840" endtime="20201110 08:34:51.389"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:51.411" endtime="20201110 08:34:51.432"></status>
</kw>
<msg timestamp="20201110 08:34:51.433" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:51.408" endtime="20201110 08:34:51.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.439" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:51.435" endtime="20201110 08:34:51.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:51.442" endtime="20201110 08:34:51.445"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.401" endtime="20201110 08:34:51.447"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.395" endtime="20201110 08:34:51.448"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:51.465" endtime="20201110 08:34:51.797"></status>
</kw>
<msg timestamp="20201110 08:34:51.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039957333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040100736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:51.462" endtime="20201110 08:34:51.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039957333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040100736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:51.806" endtime="20201110 08:34:51.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:51.824" endtime="20201110 08:34:51.828"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.454" endtime="20201110 08:34:51.830"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.450" endtime="20201110 08:34:51.831"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:51.841" level="INFO">${RESULT} = [{'time': 0.040100736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014340300000000028, 'source_diff': 0.00014340300000000028}, {'time': 0.040252014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:51.833" endtime="20201110 08:34:51.842"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:51.872" level="INFO">${ACCURACY} = {'time': [0.040100736, 0.040252014, 0.040403361, 0.040556694, 0.040707014, 0.040861361, 0.041010625, 0.041159903, 0.041308208, 0.041457458, 0.04160875, 0.041760042, 0.041913347, 0.042067667, 0.0422219...</msg>
<status status="PASS" starttime="20201110 08:34:51.843" endtime="20201110 08:34:51.872"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.884" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201110 08:34:51.880" endtime="20201110 08:34:51.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.889" level="INFO">VALUE: [0.00014340300000000028, 0.00014430600000000376, 0.00014381899999999642, 0.00014404099999999753, 0.00014341699999999985, 0.00014345799999999909, 0.00014426400000000505, 0.00014330599999999583, 0.0001434999999999978, 0.00014381900000000336, 0.000143347000000002, 0.00014340300000000028, 0.00014398599999999873, 0.00014427800000000462, 0.00014372200000000585, 0.00014411100000000232, 0.00014345799999999909, 0.0001434999999999978, 0.00014341699999999985, 0.00014369399999999977, 0.00014359700000000225, 0.00014333399999999497, 0.00014342999999999995, 0.00014361100000000182, 0.00014393099999999992, 0.00014358300000000268, 0.0001440270000000049, 0.0001441250000000019, 0.0001439999999999983, 0.00014383300000000293, 0.00014359700000000225, 0.000144041999999997, 0.00014409700000000275, 0.00014358300000000268, 0.00014381899999999642, 0.00014368099999999967, 0.0001433340000000019, 0.000144041999999997, 0.00014430600000000376, 0.0001437219999999989, 0.00014390300000000078, 0.00014355600000000301, 0.000144041999999997, 0.00014390300000000078, 0.00014345799999999909, 0.00014424999999999855, 0.00014386100000000207, 0.00014380599999999633, 0.00014415300000000103, 0.0001439999999999983]</msg>
<status status="PASS" starttime="20201110 08:34:51.886" endtime="20201110 08:34:51.891"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.874" endtime="20201110 08:34:51.892"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:51.898" endtime="20201110 08:34:51.901"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:51.906" endtime="20201110 08:34:51.928"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.902" endtime="20201110 08:34:51.930"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.894" endtime="20201110 08:34:51.931"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.391" endtime="20201110 08:34:51.932"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.390" endtime="20201110 08:34:51.932"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:51.954" endtime="20201110 08:34:51.976"></status>
</kw>
<msg timestamp="20201110 08:34:51.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:51.951" endtime="20201110 08:34:51.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.984" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:51.980" endtime="20201110 08:34:51.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:51.986" endtime="20201110 08:34:51.990"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.944" endtime="20201110 08:34:51.992"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.938" endtime="20201110 08:34:51.993"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:52.011" endtime="20201110 08:34:52.342"></status>
</kw>
<msg timestamp="20201110 08:34:52.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039888681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040033903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:52.007" endtime="20201110 08:34:52.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:52.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039888681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040033903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:52.351" endtime="20201110 08:34:52.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:52.369" endtime="20201110 08:34:52.373"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.000" endtime="20201110 08:34:52.374"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.995" endtime="20201110 08:34:52.376"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:52.386" level="INFO">${RESULT} = [{'time': 0.040033903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001452220000000004, 'source_diff': 0.0001452220000000004}, {'time': 0.040188125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:52.377" endtime="20201110 08:34:52.387"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:52.416" level="INFO">${ACCURACY} = {'time': [0.040033903, 0.040188125, 0.040343431, 0.040495736, 0.040645028, 0.040798333, 0.040950639, 0.041101972, 0.041256278, 0.041407597, 0.041556903, 0.041710208, 0.041864528, 0.042017861, 0.042171...</msg>
<status status="PASS" starttime="20201110 08:34:52.388" endtime="20201110 08:34:52.417"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:52.427" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201110 08:34:52.425" endtime="20201110 08:34:52.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:52.433" level="INFO">VALUE: [0.0001452220000000004, 0.00014456899999999717, 0.0001445419999999975, 0.00014456899999999717, 0.00014479199999999776, 0.00014513900000000246, 0.00014476399999999862, 0.00014443000000000095, 0.0001443890000000017, 0.00014451399999999837, 0.0001443890000000017, 0.00014461099999999588, 0.00014491700000000135, 0.00014463899999999502, 0.0001451250000000029, 0.0001449999999999993, 0.00014441700000000085, 0.00014441600000000138, 0.00014441700000000085, 0.00014436200000000204, 0.00014465300000000153, 0.0001450969999999968, 0.00014520800000000084, 0.00014432000000000333, 0.00014430599999999683, 0.00014486099999999613, 0.00014479099999999828, 0.0001445969999999963, 0.00014490199999999537, 0.00014500000000000624, 0.0001448890000000022, 0.00014455599999999708, 0.00014443100000000042, 0.00014434800000000247, 0.00014473599999999948, 0.00014455599999999708, 0.00014461100000000282, 0.00014505599999999758, 0.00014508399999999672, 0.00014469400000000077, 0.00014451399999999837, 0.0001447219999999999, 0.00014473699999999895, 0.0001448890000000022, 0.00014481900000000436, 0.00014481900000000436, 0.00014444400000000052, 0.00014502799999999844, 0.00014470800000000034, 0.00014469500000000024]</msg>
<status status="PASS" starttime="20201110 08:34:52.430" endtime="20201110 08:34:52.435"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.418" endtime="20201110 08:34:52.437"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:52.443" endtime="20201110 08:34:52.446"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:52.451" endtime="20201110 08:34:52.473"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.447" endtime="20201110 08:34:52.475"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.439" endtime="20201110 08:34:52.476"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.934" endtime="20201110 08:34:52.477"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.933" endtime="20201110 08:34:52.477"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:52.499" endtime="20201110 08:34:52.521"></status>
</kw>
<msg timestamp="20201110 08:34:52.522" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:52.496" endtime="20201110 08:34:52.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:52.528" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:52.524" endtime="20201110 08:34:52.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:52.530" endtime="20201110 08:34:52.534"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.489" endtime="20201110 08:34:52.535"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.483" endtime="20201110 08:34:52.537"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:52.553" endtime="20201110 08:34:52.886"></status>
</kw>
<msg timestamp="20201110 08:34:52.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039972778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040118153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:52.550" endtime="20201110 08:34:52.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:52.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039972778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040118153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:52.896" endtime="20201110 08:34:52.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:52.914" endtime="20201110 08:34:52.917"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.543" endtime="20201110 08:34:52.919"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.538" endtime="20201110 08:34:52.921"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:52.931" level="INFO">${RESULT} = [{'time': 0.040118153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001453749999999962, 'source_diff': 0.0001453749999999962}, {'time': 0.040271528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:52.922" endtime="20201110 08:34:52.931"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:52.961" level="INFO">${ACCURACY} = {'time': [0.040118153, 0.040271528, 0.040421847, 0.040574153, 0.040725514, 0.040880861, 0.04103625, 0.041186542, 0.041340889, 0.041493181, 0.041647514, 0.041799903, 0.041952194, 0.042105458, 0.0422588...</msg>
<status status="PASS" starttime="20201110 08:34:52.933" endtime="20201110 08:34:52.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:52.972" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201110 08:34:52.969" endtime="20201110 08:34:52.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:52.977" level="INFO">VALUE: [0.0001453749999999962, 0.000146041999999999, 0.000145832999999998, 0.0001453340000000039, 0.00014538899999999577, 0.00014616699999999566, 0.00014618100000000217, 0.0001453749999999962, 0.00014629199999999926, 0.00014602799999999944, 0.00014543099999999448, 0.0001453890000000027, 0.0001461659999999962, 0.0001462770000000002, 0.00014602799999999944, 0.00014544400000000152, 0.00014568100000000167, 0.00014575000000000005, 0.00014554200000000544, 0.00014631899999999892, 0.00014591700000000235, 0.00014601399999999987, 0.00014625000000000055, 0.0001455969999999973, 0.00014559700000000425, 0.00014612499999999695, 0.00014561099999999688, 0.00014583300000000493, 0.0001460000000000003, 0.00014575000000000005, 0.00014598600000000073, 0.00014531900000000486, 0.00014606999999999815, 0.00014537500000000314, 0.00014575000000000005, 0.00014623600000000098, 0.00014555599999999808, 0.00014561100000000382, 0.00014565300000000253, 0.0001462920000000062, 0.00014608299999999824, 0.00014629199999999926, 0.00014533399999999697, 0.00014623600000000098, 0.00014626300000000064, 0.00014597200000000116, 0.00014563900000000296, 0.00014576399999999962, 0.00014561099999999688, 0.00014626300000000064]</msg>
<status status="PASS" starttime="20201110 08:34:52.974" endtime="20201110 08:34:52.978"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.963" endtime="20201110 08:34:52.980"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:52.986" endtime="20201110 08:34:52.990"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:52.996" endtime="20201110 08:34:53.018"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.992" endtime="20201110 08:34:53.019"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.982" endtime="20201110 08:34:53.021"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.479" endtime="20201110 08:34:53.022"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.478" endtime="20201110 08:34:53.022"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:53.052" endtime="20201110 08:34:53.076"></status>
</kw>
<msg timestamp="20201110 08:34:53.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:53.044" endtime="20201110 08:34:53.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:53.086" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:53.081" endtime="20201110 08:34:53.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:53.089" endtime="20201110 08:34:53.093"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.035" endtime="20201110 08:34:53.095"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.029" endtime="20201110 08:34:53.096"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:53.113" endtime="20201110 08:34:53.446"></status>
</kw>
<msg timestamp="20201110 08:34:53.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048132181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048279208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:53.109" endtime="20201110 08:34:53.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:53.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048132181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048279208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:53.456" endtime="20201110 08:34:53.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:53.474" endtime="20201110 08:34:53.478"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.102" endtime="20201110 08:34:53.480"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.098" endtime="20201110 08:34:53.481"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:53.491" level="INFO">${RESULT} = [{'time': 0.048279208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014702699999999402, 'source_diff': 0.00014702699999999402}, {'time': 0.048431486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:53.482" endtime="20201110 08:34:53.492"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:53.523" level="INFO">${ACCURACY} = {'time': [0.048279208, 0.048431486, 0.048584806, 0.048740097, 0.048896389, 0.049052722, 0.049204028, 0.049360403, 0.049512681, 0.04967, 0.049824306, 0.049980611, 0.050134903, 0.050289306, 0.050446556,...</msg>
<status status="PASS" starttime="20201110 08:34:53.493" endtime="20201110 08:34:53.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:53.534" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201110 08:34:53.532" endtime="20201110 08:34:53.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:53.539" level="INFO">VALUE: [0.00014702699999999402, 0.0001472220000000024, 0.00014705599999999958, 0.00014716600000000413, 0.00014722199999999547, 0.0001472220000000024, 0.00014693099999999598, 0.00014676399999999368, 0.0001471250000000049, 0.00014656899999999917, 0.00014655599999999908, 0.0001470000000000013, 0.00014730599999999983, 0.00014718099999999623, 0.00014726399999999418, 0.0001466529999999966, 0.00014673600000000148, 0.00014723600000000198, 0.0001467220000000019, 0.00014697200000000216, 0.00014723600000000198, 0.00014718100000000317, 0.00014726400000000112, 0.00014672199999999497, 0.0001470550000000001, 0.00014697300000000163, 0.00014688899999999727, 0.00014676400000000062, 0.00014684699999999856, 0.00014697300000000163, 0.0001466250000000044, 0.00014651399999999343, 0.00014725000000000155, 0.00014679199999999976, 0.00014640300000000328, 0.00014718099999999623, 0.0001465000000000008, 0.00014719500000000274, 0.00014675000000000105, 0.00014697300000000163, 0.00014723600000000198, 0.00014691599999999694, 0.00014680499999999985, 0.0001466250000000044, 0.00014695900000000206, 0.00014647300000000113, 0.00014666699999999616, 0.00014636100000000457, 0.000146832999999999, 0.00014681899999999942]</msg>
<status status="PASS" starttime="20201110 08:34:53.536" endtime="20201110 08:34:53.541"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.525" endtime="20201110 08:34:53.542"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:53.548" endtime="20201110 08:34:53.551"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:53.557" endtime="20201110 08:34:53.579"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.552" endtime="20201110 08:34:53.581"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.544" endtime="20201110 08:34:53.583"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.024" endtime="20201110 08:34:53.583"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.023" endtime="20201110 08:34:53.584"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:53.606" endtime="20201110 08:34:53.627"></status>
</kw>
<msg timestamp="20201110 08:34:53.628" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:53.603" endtime="20201110 08:34:53.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:53.635" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:53.631" endtime="20201110 08:34:53.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:53.637" endtime="20201110 08:34:53.641"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.595" endtime="20201110 08:34:53.642"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.590" endtime="20201110 08:34:53.644"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:53.660" endtime="20201110 08:34:53.994"></status>
</kw>
<msg timestamp="20201110 08:34:54.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041229292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041377278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:53.656" endtime="20201110 08:34:54.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:54.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041229292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041377278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:54.003" endtime="20201110 08:34:54.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:54.021" endtime="20201110 08:34:54.025"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.649" endtime="20201110 08:34:54.027"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.645" endtime="20201110 08:34:54.028"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:54.039" level="INFO">${RESULT} = [{'time': 0.041377278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014798600000000273, 'source_diff': 0.00014798600000000273}, {'time': 0.041533639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:54.030" endtime="20201110 08:34:54.039"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:54.069" level="INFO">${ACCURACY} = {'time': [0.041377278, 0.041533639, 0.041686972, 0.04184525, 0.042000583, 0.042153806, 0.042312139, 0.042466458, 0.042623792, 0.042779083, 0.042935361, 0.043087681, 0.043243986, 0.043402292, 0.0435585...</msg>
<status status="PASS" starttime="20201110 08:34:54.041" endtime="20201110 08:34:54.070"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:54.080" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201110 08:34:54.078" endtime="20201110 08:34:54.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:54.085" level="INFO">VALUE: [0.00014798600000000273, 0.0001483059999999939, 0.00014780500000000085, 0.00014788899999999827, 0.000147833, 0.00014769500000000324, 0.00014745799999999615, 0.00014763899999999802, 0.00014802800000000144, 0.0001481800000000047, 0.00014769399999999683, 0.0001477090000000028, 0.00014795799999999665, 0.00014827800000000169, 0.00014773599999999554, 0.00014737500000000514, 0.0001475000000000018, 0.0001475969999999993, 0.00014756999999999965, 0.00014794400000000402, 0.00014773600000000248, 0.00014777800000000119, 0.00014762499999999845, 0.00014807000000000015, 0.00014761099999999888, 0.00014723599999999504, 0.00014736100000000557, 0.00014763900000000496, 0.00014830600000000083, 0.00014737500000000514, 0.00014811099999999938, 0.00014827799999999475, 0.00014823599999999604, 0.00014773600000000248, 0.00014737500000000514, 0.0001473329999999995, 0.0001481670000000046, 0.00014772199999999597, 0.00014762499999999845, 0.00014761099999999888, 0.00014802800000000144, 0.0001472220000000024, 0.00014730500000000035, 0.00014786099999999913, 0.00014827799999999475, 0.00014813899999999852, 0.0001478749999999987, 0.0001473749999999982, 0.00014798600000000273, 0.00014786099999999913]</msg>
<status status="PASS" starttime="20201110 08:34:54.082" endtime="20201110 08:34:54.087"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.071" endtime="20201110 08:34:54.088"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:54.095" endtime="20201110 08:34:54.097"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:54.103" endtime="20201110 08:34:54.125"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.098" endtime="20201110 08:34:54.126"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.090" endtime="20201110 08:34:54.128"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.586" endtime="20201110 08:34:54.128"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.584" endtime="20201110 08:34:54.129"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:54.153" endtime="20201110 08:34:54.174"></status>
</kw>
<msg timestamp="20201110 08:34:54.175" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:54.149" endtime="20201110 08:34:54.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:54.181" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:54.177" endtime="20201110 08:34:54.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:54.184" endtime="20201110 08:34:54.187"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.142" endtime="20201110 08:34:54.189"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.135" endtime="20201110 08:34:54.190"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:54.207" endtime="20201110 08:34:54.539"></status>
</kw>
<msg timestamp="20201110 08:34:54.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041689194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041837764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:54.203" endtime="20201110 08:34:54.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:54.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041689194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041837764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:54.548" endtime="20201110 08:34:54.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:54.566" endtime="20201110 08:34:54.570"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.196" endtime="20201110 08:34:54.571"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.192" endtime="20201110 08:34:54.573"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:54.583" level="INFO">${RESULT} = [{'time': 0.041837764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014857000000000065, 'source_diff': 0.00014857000000000065}, {'time': 0.041993097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:54.574" endtime="20201110 08:34:54.584"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:54.613" level="INFO">${ACCURACY} = {'time': [0.041837764, 0.041993097, 0.042147444, 0.042304722, 0.042460014, 0.042613347, 0.042769694, 0.042925014, 0.043084375, 0.043238764, 0.043393056, 0.043548458, 0.043707736, 0.043864056, 0.044017...</msg>
<status status="PASS" starttime="20201110 08:34:54.585" endtime="20201110 08:34:54.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:54.624" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201110 08:34:54.622" endtime="20201110 08:34:54.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:54.629" level="INFO">VALUE: [0.00014857000000000065, 0.0001486529999999986, 0.00014849999999999586, 0.0001484580000000041, 0.00014911100000000038, 0.00014870800000000434, 0.0001490409999999956, 0.00014893099999999798, 0.00014879200000000176, 0.0001493750000000002, 0.0001483619999999991, 0.0001487079999999974, 0.00014930499999999541, 0.0001484729999999962, 0.00014863899999999902, 0.00014913899999999952, 0.00014927799999999575, 0.0001486529999999986, 0.00014890199999999937, 0.00014913899999999952, 0.0001484729999999962, 0.00014911100000000038, 0.00014863899999999902, 0.0001484580000000041, 0.00014875000000000305, 0.00014930500000000235, 0.00014865300000000553, 0.00014861099999999988, 0.00014869500000000424, 0.0001486529999999986, 0.0001484859999999963, 0.0001489299999999985, 0.00014919399999999833, 0.00014856899999999423, 0.00014854100000000203, 0.00014857000000000065, 0.00014883400000000047, 0.00014876400000000262, 0.0001490970000000008, 0.00014933400000000097, 0.00014905600000000158, 0.00014852800000000194, 0.0001492369999999965, 0.00014869500000000424, 0.00014923599999999704, 0.0001492499999999966, 0.00014897300000000363, 0.000148445000000004, 0.00014912499999999995, 0.00014845799999999715]</msg>
<status status="PASS" starttime="20201110 08:34:54.626" endtime="20201110 08:34:54.631"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.615" endtime="20201110 08:34:54.632"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:54.639" endtime="20201110 08:34:54.641"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:54.647" endtime="20201110 08:34:54.668"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.643" endtime="20201110 08:34:54.670"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.634" endtime="20201110 08:34:54.672"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.131" endtime="20201110 08:34:54.672"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.130" endtime="20201110 08:34:54.673"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:54.695" endtime="20201110 08:34:54.716"></status>
</kw>
<msg timestamp="20201110 08:34:54.718" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:54.692" endtime="20201110 08:34:54.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:54.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:54.720" endtime="20201110 08:34:54.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:54.726" endtime="20201110 08:34:54.731"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.684" endtime="20201110 08:34:54.733"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.679" endtime="20201110 08:34:54.734"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:54.751" endtime="20201110 08:34:55.084"></status>
</kw>
<msg timestamp="20201110 08:34:55.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039979403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040129389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:54.747" endtime="20201110 08:34:55.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:55.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039979403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040129389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:55.094" endtime="20201110 08:34:55.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:55.112" endtime="20201110 08:34:55.116"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.740" endtime="20201110 08:34:55.118"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.736" endtime="20201110 08:34:55.119"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:55.129" level="INFO">${RESULT} = [{'time': 0.040129389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014998600000000473, 'source_diff': 0.00014998600000000473}, {'time': 0.040284653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:55.121" endtime="20201110 08:34:55.130"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:55.159" level="INFO">${ACCURACY} = {'time': [0.040129389, 0.040284653, 0.040439986, 0.040599264, 0.040759556, 0.040918861, 0.041078125, 0.041237403, 0.04139775, 0.041558014, 0.041717292, 0.041877667, 0.042037944, 0.042193208, 0.0423535...</msg>
<status status="PASS" starttime="20201110 08:34:55.131" endtime="20201110 08:34:55.160"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:55.170" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201110 08:34:55.168" endtime="20201110 08:34:55.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:55.176" level="INFO">VALUE: [0.00014998600000000473, 0.0001501530000000001, 0.00014984699999999462, 0.00015011100000000138, 0.00014952800000000294, 0.00014958300000000174, 0.00014934700000000106, 0.00014955600000000208, 0.00014999999999999736, 0.00014963900000000002, 0.00014927800000000269, 0.0001499169999999994, 0.0001497770000000037, 0.0001501660000000002, 0.00014973600000000448, 0.00014977699999999677, 0.00014938899999999977, 0.00014967999999999926, 0.0001497499999999971, 0.00015025000000000455, 0.00014954199999999557, 0.00014940199999999987, 0.00015005599999999564, 0.00014957000000000165, 0.0001498200000000019, 0.00014980600000000233, 0.00014972199999999797, 0.00015022300000000488, 0.00015029099999999684, 0.0001496800000000062, 0.00014969399999999883, 0.0001501949999999988, 0.0001497220000000049, 0.00015029200000000326, 0.00015026399999999718, 0.00014933400000000097, 0.00015029199999999632, 0.00015015199999999368, 0.00014977799999999625, 0.00015016699999999966, 0.0001497079999999984, 0.0001494169999999989, 0.00014976399999999668, 0.00015023600000000498, 0.00015026399999999718, 0.00014980600000000233, 0.0001497079999999984, 0.0001499729999999977, 0.0001495420000000025, 0.00014959800000000079]</msg>
<status status="PASS" starttime="20201110 08:34:55.173" endtime="20201110 08:34:55.177"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.161" endtime="20201110 08:34:55.179"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:55.185" endtime="20201110 08:34:55.187"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:55.193" endtime="20201110 08:34:55.215"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.189" endtime="20201110 08:34:55.216"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.180" endtime="20201110 08:34:55.218"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.675" endtime="20201110 08:34:55.218"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.673" endtime="20201110 08:34:55.219"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:55.241" endtime="20201110 08:34:55.264"></status>
</kw>
<msg timestamp="20201110 08:34:55.266" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:55.238" endtime="20201110 08:34:55.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:55.272" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:55.268" endtime="20201110 08:34:55.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:55.274" endtime="20201110 08:34:55.278"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.231" endtime="20201110 08:34:55.279"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.225" endtime="20201110 08:34:55.281"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:55.298" endtime="20201110 08:34:55.644"></status>
</kw>
<msg timestamp="20201110 08:34:55.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0401425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040293778, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:34:55.295" endtime="20201110 08:34:55.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:55.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0401425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040293778, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:34:55.653" endtime="20201110 08:34:55.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:55.671" endtime="20201110 08:34:55.675"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.286" endtime="20201110 08:34:55.677"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.282" endtime="20201110 08:34:55.678"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:55.688" level="INFO">${RESULT} = [{'time': 0.040293778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001512780000000047, 'source_diff': 0.0001512780000000047}, {'time': 0.040451167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:55.680" endtime="20201110 08:34:55.689"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:55.720" level="INFO">${ACCURACY} = {'time': [0.040293778, 0.040451167, 0.040608472, 0.040763764, 0.040922125, 0.041083417, 0.041242819, 0.041402097, 0.041563444, 0.041718792, 0.041877111, 0.042033458, 0.042189792, 0.042346125, 0.042504...</msg>
<status status="PASS" starttime="20201110 08:34:55.691" endtime="20201110 08:34:55.721"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:55.731" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201110 08:34:55.729" endtime="20201110 08:34:55.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:55.737" level="INFO">VALUE: [0.0001512780000000047, 0.00015101400000000487, 0.00015055499999999666, 0.00015038900000000077, 0.00015083299999999605, 0.00015095899999999912, 0.00015113800000000205, 0.00015083299999999605, 0.0001509859999999988, 0.0001504169999999999, 0.00015131900000000392, 0.00015101400000000487, 0.00015044499999999905, 0.00015079199999999682, 0.00015118100000000023, 0.0001504859999999983, 0.00015062500000000145, 0.000150527999999997, 0.0001505829999999958, 0.0001511949999999998, 0.0001509859999999988, 0.0001513330000000035, 0.00015108400000000272, 0.00015105600000000358, 0.00015069399999999983, 0.0001503750000000012, 0.00015097199999999922, 0.00015052800000000394, 0.00015061099999999494, 0.00015119400000000033, 0.00015094499999999955, 0.0001513059999999969, 0.0001503750000000012, 0.0001507079999999994, 0.00015116700000000066, 0.00015079199999999682, 0.000150736999999998, 0.00015056900000000317, 0.00015079100000000428, 0.000150445000000006, 0.00015105600000000358, 0.00015118000000000076, 0.00015090199999999443, 0.00015138900000000177, 0.00015130500000000435, 0.0001509300000000005, 0.0001511530000000011, 0.00015126399999999818, 0.00015045799999999915, 0.0001507079999999994]</msg>
<status status="PASS" starttime="20201110 08:34:55.734" endtime="20201110 08:34:55.738"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.722" endtime="20201110 08:34:55.740"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:55.746" endtime="20201110 08:34:55.749"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:55.754" endtime="20201110 08:34:55.776"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.750" endtime="20201110 08:34:55.778"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.742" endtime="20201110 08:34:55.779"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.221" endtime="20201110 08:34:55.780"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.220" endtime="20201110 08:34:55.780"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:55.802" endtime="20201110 08:34:55.825"></status>
</kw>
<msg timestamp="20201110 08:34:55.827" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:55.799" endtime="20201110 08:34:55.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:55.833" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:55.829" endtime="20201110 08:34:55.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:55.835" endtime="20201110 08:34:55.838"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.792" endtime="20201110 08:34:55.840"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.786" endtime="20201110 08:34:55.842"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:55.858" endtime="20201110 08:34:56.207"></status>
</kw>
<msg timestamp="20201110 08:34:56.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040133097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040285069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:55.854" endtime="20201110 08:34:56.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:56.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040133097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040285069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:56.217" endtime="20201110 08:34:56.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:56.235" endtime="20201110 08:34:56.239"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.847" endtime="20201110 08:34:56.240"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.843" endtime="20201110 08:34:56.242"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:56.252" level="INFO">${RESULT} = [{'time': 0.040285069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015197200000000022, 'source_diff': 0.00015197200000000022}, {'time': 0.040444347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:56.243" endtime="20201110 08:34:56.252"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:56.282" level="INFO">${ACCURACY} = {'time': [0.040285069, 0.040444347, 0.040603722, 0.040760972, 0.040919306, 0.041077611, 0.041237903, 0.041394264, 0.041554611, 0.041714903, 0.041877208, 0.042036514, 0.042195889, 0.042353167, 0.042511...</msg>
<status status="PASS" starttime="20201110 08:34:56.254" endtime="20201110 08:34:56.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:56.293" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201110 08:34:56.291" endtime="20201110 08:34:56.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:56.298" level="INFO">VALUE: [0.00015197200000000022, 0.00015173599999999954, 0.000151430000000001, 0.00015172199999999997, 0.00015173700000000595, 0.00015162500000000245, 0.0001519170000000014, 0.0001517499999999991, 0.00015211099999999644, 0.00015155599999999714, 0.00015145800000000015, 0.00015147199999999972, 0.00015205599999999764, 0.0001518059999999974, 0.00015163900000000202, 0.0001513479999999956, 0.00015129099999999784, 0.0001518059999999974, 0.0001517499999999991, 0.00015218000000000176, 0.00015138899999999483, 0.0001521530000000021, 0.00015179200000000476, 0.00015219400000000133, 0.000152042000000005, 0.00015209800000000329, 0.00015227799999999875, 0.000151833000000004, 0.00015137499999999526, 0.00015173599999999954, 0.0001520699999999972, 0.00015162500000000245, 0.0001519029999999949, 0.0001518620000000026, 0.00015145899999999962, 0.00015205499999999816, 0.000151833000000004, 0.000151915999999995, 0.00015188900000000227, 0.00015134699999999612, 0.00015230499999999841, 0.00015212500000000295, 0.00015212500000000295, 0.00015201399999999893, 0.00015165200000000212, 0.00015188899999999533, 0.00015209699999999687, 0.00015222200000000047, 0.00015158300000000374, 0.00015194400000000108]</msg>
<status status="PASS" starttime="20201110 08:34:56.295" endtime="20201110 08:34:56.300"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.284" endtime="20201110 08:34:56.301"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:56.307" endtime="20201110 08:34:56.310"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:56.316" endtime="20201110 08:34:56.337"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.311" endtime="20201110 08:34:56.339"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.303" endtime="20201110 08:34:56.341"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.782" endtime="20201110 08:34:56.341"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.781" endtime="20201110 08:34:56.342"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:56.364" endtime="20201110 08:34:56.387"></status>
</kw>
<msg timestamp="20201110 08:34:56.388" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:56.360" endtime="20201110 08:34:56.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:56.394" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:56.390" endtime="20201110 08:34:56.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:56.396" endtime="20201110 08:34:56.400"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.353" endtime="20201110 08:34:56.402"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.348" endtime="20201110 08:34:56.403"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:56.419" endtime="20201110 08:34:56.766"></status>
</kw>
<msg timestamp="20201110 08:34:56.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040090958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040243944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:56.416" endtime="20201110 08:34:56.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:56.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040090958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040243944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:56.775" endtime="20201110 08:34:56.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:56.794" endtime="20201110 08:34:56.797"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.409" endtime="20201110 08:34:56.799"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.404" endtime="20201110 08:34:56.800"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:56.811" level="INFO">${RESULT} = [{'time': 0.040243944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015298599999999385, 'source_diff': 0.00015298599999999385}, {'time': 0.040404222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:56.802" endtime="20201110 08:34:56.811"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:56.840" level="INFO">${ACCURACY} = {'time': [0.040243944, 0.040404222, 0.040562542, 0.040725889, 0.040884181, 0.041043542, 0.041203847, 0.041367139, 0.041528458, 0.041686806, 0.041849083, 0.042008403, 0.042169722, 0.042332083, 0.042494...</msg>
<status status="PASS" starttime="20201110 08:34:56.813" endtime="20201110 08:34:56.841"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:56.851" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201110 08:34:56.849" endtime="20201110 08:34:56.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:56.856" level="INFO">VALUE: [0.00015298599999999385, 0.00015230499999999841, 0.00015255599999999814, 0.00015301399999999993, 0.00015263899999999608, 0.00015244500000000105, 0.0001525970000000043, 0.0001528609999999972, 0.00015233299999999755, 0.00015268100000000173, 0.00015312500000000395, 0.00015273600000000054, 0.0001532500000000006, 0.00015322200000000147, 0.00015297200000000122, 0.0001527080000000014, 0.00015233299999999755, 0.00015293100000000198, 0.00015233400000000397, 0.00015331899999999898, 0.00015309699999999787, 0.00015251299999999995, 0.00015262500000000345, 0.00015261099999999694, 0.00015336100000000463, 0.00015249999999999986, 0.0001533330000000055, 0.00015297200000000122, 0.00015331899999999898, 0.00015287499999999676, 0.00015259699999999737, 0.00015306900000000567, 0.00015283399999999753, 0.00015320900000000137, 0.0001533059999999989, 0.00015300000000000036, 0.00015244400000000158, 0.0001523880000000033, 0.00015320799999999496, 0.00015287499999999676, 0.0001530279999999995, 0.0001526950000000013, 0.00015272199999999403, 0.00015276399999999968, 0.00015290300000000284, 0.0001527080000000014, 0.00015305499999999916, 0.00015309699999999787, 0.0001527080000000014, 0.00015297200000000122]</msg>
<status status="PASS" starttime="20201110 08:34:56.854" endtime="20201110 08:34:56.862"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.842" endtime="20201110 08:34:56.864"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:56.870" endtime="20201110 08:34:56.873"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:56.878" endtime="20201110 08:34:56.900"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.874" endtime="20201110 08:34:56.902"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.866" endtime="20201110 08:34:56.904"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.344" endtime="20201110 08:34:56.904"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.342" endtime="20201110 08:34:56.905"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:56.927" endtime="20201110 08:34:56.949"></status>
</kw>
<msg timestamp="20201110 08:34:56.950" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:56.924" endtime="20201110 08:34:56.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:56.956" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:56.952" endtime="20201110 08:34:56.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:56.958" endtime="20201110 08:34:56.962"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.916" endtime="20201110 08:34:56.964"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.911" endtime="20201110 08:34:56.965"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:56.981" endtime="20201110 08:34:57.314"></status>
</kw>
<msg timestamp="20201110 08:34:57.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040306486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040460111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:56.978" endtime="20201110 08:34:57.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:57.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040306486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040460111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:57.323" endtime="20201110 08:34:57.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:57.341" endtime="20201110 08:34:57.346"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.971" endtime="20201110 08:34:57.348"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.966" endtime="20201110 08:34:57.349"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:57.359" level="INFO">${RESULT} = [{'time': 0.040460111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001536249999999975, 'source_diff': 0.0001536249999999975}, {'time': 0.040619431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:57.351" endtime="20201110 08:34:57.360"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:57.389" level="INFO">${ACCURACY} = {'time': [0.040460111, 0.040619431, 0.040783778, 0.040943153, 0.041103444, 0.041266847, 0.04143025, 0.041592542, 0.041753875, 0.041916208, 0.042076583, 0.042235903, 0.042395264, 0.042556583, 0.0427188...</msg>
<status status="PASS" starttime="20201110 08:34:57.362" endtime="20201110 08:34:57.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:57.400" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201110 08:34:57.398" endtime="20201110 08:34:57.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:57.405" level="INFO">VALUE: [0.0001536249999999975, 0.00015348700000000076, 0.00015409699999999887, 0.0001542500000000016, 0.00015365200000000412, 0.00015397200000000222, 0.00015390300000000384, 0.0001534730000000012, 0.00015433299999999955, 0.00015345800000000215, 0.00015397200000000222, 0.00015379199999999982, 0.00015334700000000506, 0.00015431899999999998, 0.00015372200000000197, 0.0001542080000000029, 0.00015395800000000265, 0.00015393100000000298, 0.00015343099999999554, 0.00015367999999999632, 0.00015412499999999801, 0.00015401400000000093, 0.00015423600000000204, 0.00015363900000000402, 0.0001536939999999959, 0.00015411099999999844, 0.0001537500000000011, 0.0001542500000000016, 0.0001540410000000006, 0.0001533620000000041, 0.0001538750000000047, 0.00015374999999999417, 0.00015347199999999478, 0.0001540699999999992, 0.00015345900000000162, 0.00015338899999999683, 0.00015430500000000041, 0.00015359799999999785, 0.0001535410000000001, 0.00015433299999999955, 0.00015411199999999792, 0.0001535829999999988, 0.00015384699999999862, 0.00015347200000000172, 0.0001538609999999982, 0.00015400000000000136, 0.0001539579999999957, 0.00015416599999999725, 0.00015431999999999946, 0.00015405599999999964]</msg>
<status status="PASS" starttime="20201110 08:34:57.402" endtime="20201110 08:34:57.407"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.391" endtime="20201110 08:34:57.408"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:57.415" endtime="20201110 08:34:57.417"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:57.423" endtime="20201110 08:34:57.444"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.418" endtime="20201110 08:34:57.446"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.410" endtime="20201110 08:34:57.448"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.907" endtime="20201110 08:34:57.448"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.905" endtime="20201110 08:34:57.449"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:57.471" endtime="20201110 08:34:57.493"></status>
</kw>
<msg timestamp="20201110 08:34:57.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:57.468" endtime="20201110 08:34:57.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:57.500" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:57.496" endtime="20201110 08:34:57.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:57.502" endtime="20201110 08:34:57.506"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.461" endtime="20201110 08:34:57.507"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.455" endtime="20201110 08:34:57.509"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:57.525" endtime="20201110 08:34:57.858"></status>
</kw>
<msg timestamp="20201110 08:34:57.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040030611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040185389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:57.522" endtime="20201110 08:34:57.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:57.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040030611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040185389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:57.867" endtime="20201110 08:34:57.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:57.885" endtime="20201110 08:34:57.890"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.515" endtime="20201110 08:34:57.892"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.510" endtime="20201110 08:34:57.893"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:57.904" level="INFO">${RESULT} = [{'time': 0.040185389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015477800000000125, 'source_diff': 0.00015477800000000125}, {'time': 0.040344667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:57.895" endtime="20201110 08:34:57.904"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:57.936" level="INFO">${ACCURACY} = {'time': [0.040185389, 0.040344667, 0.040508056, 0.040672333, 0.040837694, 0.041003, 0.041165319, 0.041326639, 0.041488, 0.041650361, 0.041811569, 0.041973875, 0.042137167, 0.042301486, 0.04246375, 0....</msg>
<status status="PASS" starttime="20201110 08:34:57.906" endtime="20201110 08:34:57.936"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:57.947" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201110 08:34:57.944" endtime="20201110 08:34:57.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:57.952" level="INFO">VALUE: [0.00015477800000000125, 0.0001544730000000022, 0.0001550280000000015, 0.00015502699999999509, 0.00015479100000000134, 0.0001548609999999992, 0.00015447199999999578, 0.0001549579999999967, 0.00015487499999999876, 0.00015494399999999714, 0.00015490199999999843, 0.00015456900000000023, 0.00015462500000000545, 0.00015522199999999653, 0.00015494400000000408, 0.000154430000000004, 0.00015463899999999808, 0.0001550700000000002, 0.00015494500000000355, 0.00015466599999999775, 0.00015488899999999833, 0.00015437499999999826, 0.00015465200000000512, 0.0001549579999999967, 0.00015462499999999851, 0.0001547500000000021, 0.00015493099999999704, 0.00015459699999999937, 0.0001544860000000023, 0.00015491699999999747, 0.0001547500000000021, 0.00015499999999999542, 0.00015451400000000143, 0.00015451300000000195, 0.0001549029999999979, 0.00015495800000000365, 0.00015512499999999901, 0.0001552500000000026, 0.00015462500000000545, 0.00015522199999999653, 0.00015433399999999903, 0.00015506900000000073, 0.00015461099999999894, 0.00015488900000000527, 0.00015452700000000152, 0.0001552359999999961, 0.00015493099999999704, 0.00015491699999999747, 0.00015529100000000184, 0.000154528000000001]</msg>
<status status="PASS" starttime="20201110 08:34:57.949" endtime="20201110 08:34:57.953"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.938" endtime="20201110 08:34:57.955"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:57.961" endtime="20201110 08:34:57.964"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:57.969" endtime="20201110 08:34:57.991"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.965" endtime="20201110 08:34:57.993"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.957" endtime="20201110 08:34:57.994"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.451" endtime="20201110 08:34:57.995"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.449" endtime="20201110 08:34:57.995"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:58.018" endtime="20201110 08:34:58.039"></status>
</kw>
<msg timestamp="20201110 08:34:58.041" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:58.014" endtime="20201110 08:34:58.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:58.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:58.043" endtime="20201110 08:34:58.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:58.049" endtime="20201110 08:34:58.053"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.007" endtime="20201110 08:34:58.054"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.002" endtime="20201110 08:34:58.056"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:58.072" endtime="20201110 08:34:58.406"></status>
</kw>
<msg timestamp="20201110 08:34:58.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040094319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040250167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:58.068" endtime="20201110 08:34:58.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:58.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040094319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040250167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:58.415" endtime="20201110 08:34:58.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:58.433" endtime="20201110 08:34:58.437"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.062" endtime="20201110 08:34:58.438"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.057" endtime="20201110 08:34:58.440"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:58.450" level="INFO">${RESULT} = [{'time': 0.040250167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001558480000000001, 'source_diff': 0.0001558480000000001}, {'time': 0.0404115, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:34:58.442" endtime="20201110 08:34:58.451"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:58.482" level="INFO">${ACCURACY} = {'time': [0.040250167, 0.0404115, 0.040572819, 0.040736181, 0.040901514, 0.041063847, 0.041224194, 0.041384514, 0.041545931, 0.04171125, 0.041876556, 0.042037917, 0.042199181, 0.042364542, 0.042526958...</msg>
<status status="PASS" starttime="20201110 08:34:58.452" endtime="20201110 08:34:58.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:58.492" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201110 08:34:58.490" endtime="20201110 08:34:58.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:58.498" level="INFO">VALUE: [0.0001558480000000001, 0.0001555830000000008, 0.00015587499999999976, 0.00015636200000000017, 0.0001557359999999966, 0.0001559579999999977, 0.00015584700000000062, 0.0001559449999999976, 0.00015545900000000362, 0.00015541699999999797, 0.0001559170000000054, 0.00015570900000000387, 0.0001558480000000001, 0.00015563899999999908, 0.00015561099999999994, 0.00015594399999999814, 0.00015574999999999617, 0.00015555500000000166, 0.00015630500000000241, 0.0001556939999999979, 0.00015613899999999958, 0.00015626399999999624, 0.00015584700000000062, 0.0001554860000000033, 0.00015615299999999915, 0.0001560280000000025, 0.00015630500000000241, 0.00015608399999999384, 0.00015544399999999764, 0.00015565299999999865, 0.0001555410000000021, 0.00015541699999999797, 0.00015534700000000012, 0.00015572200000000397, 0.00015633300000000155, 0.0001562359999999971, 0.00015555600000000114, 0.00015604199999999513, 0.00015540300000000534, 0.00015597200000000422, 0.00015630599999999495, 0.00015562499999999951, 0.00015611199999999992, 0.00015582000000000096, 0.00015555499999999473, 0.00015620900000000437, 0.0001555139999999955, 0.0001559170000000054, 0.00015545900000000362, 0.0001561950000000048]</msg>
<status status="PASS" starttime="20201110 08:34:58.495" endtime="20201110 08:34:58.499"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.483" endtime="20201110 08:34:58.501"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:58.507" endtime="20201110 08:34:58.510"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:58.515" endtime="20201110 08:34:58.537"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.511" endtime="20201110 08:34:58.538"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.503" endtime="20201110 08:34:58.540"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.997" endtime="20201110 08:34:58.540"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.996" endtime="20201110 08:34:58.541"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:58.563" endtime="20201110 08:34:58.585"></status>
</kw>
<msg timestamp="20201110 08:34:58.586" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:58.560" endtime="20201110 08:34:58.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:58.592" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:58.588" endtime="20201110 08:34:58.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:58.595" endtime="20201110 08:34:58.598"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.553" endtime="20201110 08:34:58.600"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.547" endtime="20201110 08:34:58.601"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:58.617" endtime="20201110 08:34:58.951"></status>
</kw>
<msg timestamp="20201110 08:34:58.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04008225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040238597, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:58.614" endtime="20201110 08:34:58.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:58.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04008225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040238597, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:58.960" endtime="20201110 08:34:58.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:58.978" endtime="20201110 08:34:58.982"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.607" endtime="20201110 08:34:58.984"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.603" endtime="20201110 08:34:58.985"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:58.995" level="INFO">${RESULT} = [{'time': 0.040238597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015634700000000112, 'source_diff': 0.00015634700000000112}, {'time': 0.040401931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:58.987" endtime="20201110 08:34:58.996"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:59.027" level="INFO">${ACCURACY} = {'time': [0.040238597, 0.040401931, 0.040567333, 0.040734708, 0.040900097, 0.0410625, 0.041228819, 0.041395208, 0.041561569, 0.041724972, 0.041892361, 0.042053736, 0.042219097, 0.042385528, 0.04254786...</msg>
<status status="PASS" starttime="20201110 08:34:58.997" endtime="20201110 08:34:59.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.038" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201110 08:34:59.035" endtime="20201110 08:34:59.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.043" level="INFO">VALUE: [0.00015634700000000112, 0.00015704200000000307, 0.000156916, 0.00015650000000000386, 0.0001567080000000054, 0.0001571939999999994, 0.00015665200000000018, 0.00015644400000000558, 0.0001569579999999987, 0.00015670799999999846, 0.00015672200000000497, 0.00015644399999999864, 0.0001571939999999994, 0.00015734700000000212, 0.00015661100000000094, 0.0001567779999999963, 0.00015647199999999778, 0.00015638899999999983, 0.00015692999999999957, 0.0001564159999999995, 0.00015645800000000515, 0.00015666699999999922, 0.00015687500000000076, 0.00015656999999999477, 0.00015680599999999545, 0.00015726399999999724, 0.00015702799999999656, 0.00015723600000000504, 0.00015684700000000162, 0.00015640199999999993, 0.00015690200000000043, 0.00015661100000000094, 0.00015692999999999957, 0.00015649999999999692, 0.0001567630000000042, 0.00015702799999999656, 0.00015687500000000076, 0.00015649999999999692, 0.00015672200000000497, 0.00015720799999999896, 0.00015641699999999897, 0.00015698599999999785, 0.00015688800000000086, 0.00015670900000000487, 0.00015655500000000266, 0.0001567500000000041, 0.00015667999999999932, 0.00015698599999999785, 0.00015711100000000144, 0.0001563610000000007]</msg>
<status status="PASS" starttime="20201110 08:34:59.040" endtime="20201110 08:34:59.044"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.029" endtime="20201110 08:34:59.046"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:59.052" endtime="20201110 08:34:59.055"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:59.060" endtime="20201110 08:34:59.082"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.056" endtime="20201110 08:34:59.084"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.048" endtime="20201110 08:34:59.085"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.543" endtime="20201110 08:34:59.086"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.542" endtime="20201110 08:34:59.086"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:59.108" endtime="20201110 08:34:59.131"></status>
</kw>
<msg timestamp="20201110 08:34:59.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:59.105" endtime="20201110 08:34:59.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.138" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:59.134" endtime="20201110 08:34:59.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:59.140" endtime="20201110 08:34:59.144"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.098" endtime="20201110 08:34:59.145"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.092" endtime="20201110 08:34:59.147"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:59.163" endtime="20201110 08:34:59.499"></status>
</kw>
<msg timestamp="20201110 08:34:59.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040097611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040255972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:59.160" endtime="20201110 08:34:59.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040097611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040255972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:59.509" endtime="20201110 08:34:59.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:59.527" endtime="20201110 08:34:59.531"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.153" endtime="20201110 08:34:59.532"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.148" endtime="20201110 08:34:59.534"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:59.544" level="INFO">${RESULT} = [{'time': 0.040255972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001583610000000027, 'source_diff': 0.0001583610000000027}, {'time': 0.040424333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:59.535" endtime="20201110 08:34:59.544"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:59.575" level="INFO">${ACCURACY} = {'time': [0.040255972, 0.040424333, 0.040591736, 0.040756097, 0.040924472, 0.041089833, 0.041257222, 0.041422625, 0.041588958, 0.041755306, 0.041920694, 0.042088069, 0.042250458, 0.042418819, 0.042582...</msg>
<status status="PASS" starttime="20201110 08:34:59.546" endtime="20201110 08:34:59.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.586" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201110 08:34:59.584" endtime="20201110 08:34:59.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.591" level="INFO">VALUE: [0.0001583610000000027, 0.0001573610000000017, 0.00015761100000000194, 0.00015820799999999996, 0.00015833300000000355, 0.00015761100000000194, 0.0001580410000000046, 0.00015743099999999954, 0.0001580830000000033, 0.00015809800000000235, 0.00015806900000000373, 0.00015818000000000082, 0.00015787499999999483, 0.00015759700000000237, 0.00015791699999999353, 0.00015826399999999824, 0.00015788900000000133, 0.00015743099999999954, 0.00015737500000000126, 0.00015774999999999817, 0.0001578060000000034, 0.00015786099999999526, 0.00015759800000000185, 0.00015781899999999655, 0.00015770799999999946, 0.0001583060000000039, 0.00015769499999999936, 0.00015734700000000212, 0.00015829199999999738, 0.00015788900000000133, 0.00015776399999999774, 0.00015776299999999827, 0.00015748599999999835, 0.00015804200000000407, 0.0001579579999999997, 0.00015831900000000398, 0.0001579449999999996, 0.00015830599999999695, 0.0001577779999999973, 0.0001576939999999999, 0.00015755500000000366, 0.00015806900000000373, 0.00015762500000000151, 0.0001575139999999975, 0.00015772199999999903, 0.00015834699999999619, 0.00015738900000000083, 0.00015794400000000014, 0.00015770899999999893, 0.00015772199999999903]</msg>
<status status="PASS" starttime="20201110 08:34:59.588" endtime="20201110 08:34:59.593"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.577" endtime="20201110 08:34:59.594"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:59.601" endtime="20201110 08:34:59.603"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:59.609" endtime="20201110 08:34:59.631"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.605" endtime="20201110 08:34:59.632"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.596" endtime="20201110 08:34:59.634"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.088" endtime="20201110 08:34:59.635"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.087" endtime="20201110 08:34:59.635"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:59.657" endtime="20201110 08:34:59.681"></status>
</kw>
<msg timestamp="20201110 08:34:59.682" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:59.654" endtime="20201110 08:34:59.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.688" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:59.684" endtime="20201110 08:34:59.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:59.691" endtime="20201110 08:34:59.694"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.647" endtime="20201110 08:34:59.696"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.641" endtime="20201110 08:34:59.697"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:59.713" endtime="20201110 08:35:00.059"></status>
</kw>
<msg timestamp="20201110 08:35:00.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040464569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040623292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:59.710" endtime="20201110 08:35:00.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:00.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040464569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040623292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:00.068" endtime="20201110 08:35:00.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:00.087" endtime="20201110 08:35:00.090"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.703" endtime="20201110 08:35:00.092"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.698" endtime="20201110 08:35:00.093"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:00.104" level="INFO">${RESULT} = [{'time': 0.040623292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001587229999999995, 'source_diff': 0.0001587229999999995}, {'time': 0.040790653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:00.095" endtime="20201110 08:35:00.104"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:00.136" level="INFO">${ACCURACY} = {'time': [0.040623292, 0.040790653, 0.040959028, 0.041127403, 0.041293736, 0.041461069, 0.041625431, 0.041789764, 0.041958069, 0.042125431, 0.04229475, 0.042461097, 0.042630431, 0.042798833, 0.0429671...</msg>
<status status="PASS" starttime="20201110 08:35:00.106" endtime="20201110 08:35:00.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:00.147" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201110 08:35:00.145" endtime="20201110 08:35:00.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:00.152" level="INFO">VALUE: [0.0001587229999999995, 0.0001588610000000032, 0.00015916700000000172, 0.00015866700000000122, 0.00015892999999999463, 0.00015926299999999977, 0.00015881999999999702, 0.00015858299999999687, 0.0001590689999999978, 0.00015836199999999523, 0.00015847199999999978, 0.00015861100000000294, 0.00015858400000000328, 0.00015868000000000132, 0.00015902799999999856, 0.00015866700000000122, 0.00015865300000000165, 0.00015849999999999892, 0.0001593339999999971, 0.00015894400000000114, 0.00015876399999999874, 0.0001587779999999983, 0.00015868000000000132, 0.00015901400000000593, 0.0001587909999999984, 0.00015843000000000107, 0.00015894500000000061, 0.00015863900000000208, 0.00015874999999999917, 0.00015851400000000543, 0.0001593610000000037, 0.00015863899999999515, 0.00015918000000000182, 0.00015908299999999737, 0.0001590280000000055, 0.00015872200000000003, 0.0001588610000000032, 0.00015852799999999806, 0.00015886099999999626, 0.00015911100000000344, 0.0001588610000000032, 0.00015936099999999676, 0.00015915300000000215, 0.00015852799999999806, 0.00015854199999999763, 0.00015893000000000157, 0.00015880499999999798, 0.00015855500000000466, 0.00015852799999999806, 0.00015897200000000028]</msg>
<status status="PASS" starttime="20201110 08:35:00.149" endtime="20201110 08:35:00.154"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.138" endtime="20201110 08:35:00.155"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:00.162" endtime="20201110 08:35:00.164"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:00.170" endtime="20201110 08:35:00.192"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.166" endtime="20201110 08:35:00.193"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.157" endtime="20201110 08:35:00.195"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.637" endtime="20201110 08:35:00.195"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.636" endtime="20201110 08:35:00.196"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.991" endtime="20201110 08:35:00.196"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:00.205" endtime="20201110 08:35:00.227"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.201" endtime="20201110 08:35:00.229"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.199" endtime="20201110 08:35:00.229"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201110 08:34:03.868" endtime="20201110 08:35:00.230" critical="yes"></status>
</test>
<status status="PASS" starttime="20201110 08:33:04.813" endtime="20201110 08:35:00.239"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201110 08:35:00.377" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201110 08:35:00.393" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201110 08:35:02.358" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201110 08:35:00.373" endtime="20201110 08:35:02.360"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201110 08:35:02.365" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201110 08:35:02.362" endtime="20201110 08:35:02.366"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.371" endtime="20201110 08:35:02.367"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:02.372" endtime="20201110 08:35:02.709"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.369" endtime="20201110 08:35:02.710"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:02.740" endtime="20201110 08:35:02.755"></status>
</kw>
<msg timestamp="20201110 08:35:02.756" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:02.736" endtime="20201110 08:35:02.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:02.763" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:02.759" endtime="20201110 08:35:02.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:35:02.769" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:35:02.765" endtime="20201110 08:35:02.770"></status>
</kw>
<status status="FAIL" starttime="20201110 08:35:02.730" endtime="20201110 08:35:02.772"></status>
</kw>
<status status="FAIL" starttime="20201110 08:35:02.725" endtime="20201110 08:35:02.774"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.722" endtime="20201110 08:35:02.774"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:35:02.782" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:35:02.781" endtime="20201110 08:35:02.783"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.776" endtime="20201110 08:35:02.783"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.720" endtime="20201110 08:35:02.785"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.718" endtime="20201110 08:35:02.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:02.787" endtime="20201110 08:35:02.792"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.715" endtime="20201110 08:35:02.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:02.795" endtime="20201110 08:35:02.798"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.712" endtime="20201110 08:35:02.800"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.368" endtime="20201110 08:35:02.801"></status>
</kw>
<test id="s1-s4-t1" name="Measure Sleep Jitter With Increasing Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:02.815" endtime="20201110 08:35:02.836"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.811" endtime="20201110 08:35:02.838"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:02.871" endtime="20201110 08:35:02.887"></status>
</kw>
<msg timestamp="20201110 08:35:02.888" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:02.867" endtime="20201110 08:35:02.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:02.894" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:02.890" endtime="20201110 08:35:02.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:35:02.901" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:35:02.897" endtime="20201110 08:35:02.902"></status>
</kw>
<status status="FAIL" starttime="20201110 08:35:02.860" endtime="20201110 08:35:02.903"></status>
</kw>
<status status="FAIL" starttime="20201110 08:35:02.854" endtime="20201110 08:35:02.905"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.851" endtime="20201110 08:35:02.906"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:35:02.913" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:35:02.912" endtime="20201110 08:35:02.914"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.907" endtime="20201110 08:35:02.915"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.850" endtime="20201110 08:35:02.915"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.848" endtime="20201110 08:35:02.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:02.917" endtime="20201110 08:35:02.920"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.844" endtime="20201110 08:35:02.922"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.840" endtime="20201110 08:35:02.923"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.808" endtime="20201110 08:35:02.924"></status>
</kw>
<kw name="${n} IN RANGE [ 10 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:35:02.931" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:02.955" endtime="20201110 08:35:05.068"></status>
</kw>
<msg timestamp="20201110 08:35:05.070" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 668426, 'start-iter': 1, 'wakeups': [678464, 688464, 698464, 708464, 7...</msg>
<status status="PASS" starttime="20201110 08:35:02.950" endtime="20201110 08:35:05.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:05.077" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 668426, 'start-iter': 1, 'wakeups': [678464, 688464, 698464, 708464, 7...</msg>
<status status="PASS" starttime="20201110 08:35:05.072" endtime="20201110 08:35:05.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:05.080" endtime="20201110 08:35:05.085"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.941" endtime="20201110 08:35:05.087"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.936" endtime="20201110 08:35:05.089"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:05.096" level="INFO">${RESULT} = {'timer-count': 1, 'timer-interval': 10000, 'wakeups': [678464, 688464, 698464, 708464, 718464, 728464, 738464, 748464, 758464, 768464, 778464, 788464, 798464, 808464, 818464, 828464, 838464, 848464, ...</msg>
<status status="PASS" starttime="20201110 08:35:05.091" endtime="20201110 08:35:05.097"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:05.109" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:05.106" endtime="20201110 08:35:05.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:05.115" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:05.112" endtime="20201110 08:35:05.116"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.099" endtime="20201110 08:35:05.118"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:05.130" level="INFO">NAME: 1-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:05.127" endtime="20201110 08:35:05.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:05.136" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:05.133" endtime="20201110 08:35:05.137"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.120" endtime="20201110 08:35:05.139"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:05.149" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201110 08:35:05.147" endtime="20201110 08:35:05.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:05.154" level="INFO">VALUE: 668426</msg>
<status status="PASS" starttime="20201110 08:35:05.151" endtime="20201110 08:35:05.154"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.140" endtime="20201110 08:35:05.156"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:05.166" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:05.163" endtime="20201110 08:35:05.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:05.170" level="INFO">VALUE: [678464, 688464, 698464, 708464, 718464, 728464, 738464, 748464, 758464, 768464, 778464, 788464, 798464, 808464, 818464, 828464, 838464, 848464, 858464, 868464, 878464, 888464, 898464, 908464, 918464, 928464, 938464, 948464, 958464, 968464, 978464, 988464, 998464, 1008464, 1018464, 1028464, 1038464, 1048464, 1058464, 1068464, 1078464, 1088464, 1098464, 1108464, 1118464, 1128464, 1138464, 1148464, 1158464, 1168464, 1178464, 1188464, 1198464, 1208464, 1218464, 1228464, 1238464, 1248464, 1258464, 1268464, 1278464, 1288464, 1298464, 1308464, 1318464, 1328464, 1338464, 1348464, 1358464, 1368464, 1378464, 1388464, 1398464, 1408464, 1418464, 1428464, 1438464, 1448464, 1458464, 1468464, 1478464, 1488464, 1498464, 1508464, 1518464, 1528464, 1538464, 1548464, 1558464, 1568464, 1578464, 1588464, 1598464, 1608464, 1618464, 1628464, 1638464, 1648464, 1658464, 1668464]</msg>
<status status="PASS" starttime="20201110 08:35:05.168" endtime="20201110 08:35:05.171"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.157" endtime="20201110 08:35:05.173"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:05.189" endtime="20201110 08:35:05.563"></status>
</kw>
<msg timestamp="20201110 08:35:05.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.131585028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.141647222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:05.186" endtime="20201110 08:35:05.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:05.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.131585028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.141647222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:05.572" endtime="20201110 08:35:05.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:05.590" endtime="20201110 08:35:05.594"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.179" endtime="20201110 08:35:05.596"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.174" endtime="20201110 08:35:05.597"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:05.655" level="INFO">${RESULT} = {'time': [0.131585028, 0.141647222, 0.151670667, 0.161694847, 0.171717972, 0.181741569, 0.191765069, 0.201789319, 0.211813236, 0.221837444, 0.231861472, 0.241885056, 0.251908389, 0.261932958, 0.271956...</msg>
<status status="PASS" starttime="20201110 08:35:05.599" endtime="20201110 08:35:05.656"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:05.666" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201110 08:35:05.664" endtime="20201110 08:35:05.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:05.671" level="INFO">VALUE: 0.131585028</msg>
<status status="PASS" starttime="20201110 08:35:05.668" endtime="20201110 08:35:05.671"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.657" endtime="20201110 08:35:05.673"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:05.684" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:05.682" endtime="20201110 08:35:05.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:05.689" level="INFO">VALUE: [0.141647222, 0.151670667, 0.161694847, 0.171717972, 0.181741569, 0.191765069, 0.201789319, 0.211813236, 0.221837444, 0.231861472, 0.241885056, 0.251908389, 0.261932958, 0.271956458, 0.281980708, 0.29200675, 0.302032944, 0.312058958, 0.322084736, 0.332108458, 0.342133194, 0.352156403, 0.362180014, 0.372203306, 0.382225764, 0.392248528, 0.402271486, 0.41229425, 0.422317, 0.432338458, 0.442360542, 0.452384653, 0.462408792, 0.472432056, 0.482455931, 0.492479111, 0.502503333, 0.512526639, 0.522550347, 0.532573597, 0.542597431, 0.552622181, 0.562646722, 0.572671222, 0.58269575, 0.592718375, 0.602741403, 0.612764361, 0.622787972, 0.632810861, 0.642835667, 0.65285925, 0.662882958, 0.672906403, 0.682930736, 0.692954014, 0.702977681, 0.713000486, 0.723023639, 0.733045889, 0.743068611, 0.753092361, 0.763116375, 0.773139639, 0.783163194, 0.793185014, 0.803208153, 0.813231, 0.823254333, 0.833277125, 0.843299722, 0.85332275, 0.863347069, 0.873371542, 0.883396347, 0.8934205, 0.903445653, 0.913470319, 0.923495833, 0.933520653, 0.9435465, 0.953571917, 0.963596389, 0.973621028, 0.983645556, 0.993668944, 1.003693014, 1.013717556, 1.023741625, 1.033765333, 1.04379, 1.053814847, 1.063839528, 1.073864778, 1.083889625, 1.093914264, 1.103939708, 1.113964458, 1.123988597, 1.134013278] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:05.686" endtime="20201110 08:35:05.690"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.674" endtime="20201110 08:35:05.691"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:05.698" endtime="20201110 08:35:05.701"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:05.706" endtime="20201110 08:35:05.728"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.702" endtime="20201110 08:35:05.730"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.693" endtime="20201110 08:35:05.732"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.932" endtime="20201110 08:35:05.732"></status>
</kw>
<msg timestamp="20201110 08:35:05.733" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:05.754" endtime="20201110 08:35:07.903"></status>
</kw>
<msg timestamp="20201110 08:35:07.905" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 3460584, 'start-iter': 1, 'wakeups': [3470622, 3480622, 3490622, 35006...</msg>
<status status="PASS" starttime="20201110 08:35:05.751" endtime="20201110 08:35:07.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:07.912" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 3460584, 'start-iter': 1, 'wakeups': [3470622, 3480622, 3490622, 35006...</msg>
<status status="PASS" starttime="20201110 08:35:07.907" endtime="20201110 08:35:07.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:07.914" endtime="20201110 08:35:07.918"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.743" endtime="20201110 08:35:07.920"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.738" endtime="20201110 08:35:07.921"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:07.927" level="INFO">${RESULT} = {'timer-count': 1, 'timer-interval': 10000, 'wakeups': [3470622, 3480622, 3490622, 3500622, 3510622, 3520622, 3530622, 3540622, 3550622, 3560622, 3570622, 3580622, 3590622, 3600622, 3610622, 3620622, ...</msg>
<status status="PASS" starttime="20201110 08:35:07.923" endtime="20201110 08:35:07.928"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:07.944" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:07.935" endtime="20201110 08:35:07.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:07.949" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:07.946" endtime="20201110 08:35:07.949"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.929" endtime="20201110 08:35:07.951"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:07.963" level="INFO">NAME: 1-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:07.959" endtime="20201110 08:35:07.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:07.968" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:07.966" endtime="20201110 08:35:07.968"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.952" endtime="20201110 08:35:07.970"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:07.980" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201110 08:35:07.978" endtime="20201110 08:35:07.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:07.985" level="INFO">VALUE: 3460584</msg>
<status status="PASS" starttime="20201110 08:35:07.983" endtime="20201110 08:35:07.986"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.971" endtime="20201110 08:35:07.987"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:07.997" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:07.995" endtime="20201110 08:35:07.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:08.002" level="INFO">VALUE: [3470622, 3480622, 3490622, 3500622, 3510622, 3520622, 3530622, 3540622, 3550622, 3560622, 3570622, 3580622, 3590622, 3600622, 3610622, 3620622, 3630622, 3640622, 3650622, 3660622, 3670622, 3680622, 3690622, 3700622, 3710622, 3720622, 3730622, 3740622, 3750622, 3760622, 3770622, 3780622, 3790622, 3800622, 3810622, 3820622, 3830622, 3840622, 3850622, 3860622, 3870622, 3880622, 3890622, 3900622, 3910622, 3920622, 3930622, 3940622, 3950622, 3960622, 3970622, 3980622, 3990622, 4000622, 4010622, 4020622, 4030622, 4040622, 4050622, 4060622, 4070622, 4080622, 4090622, 4100622, 4110622, 4120622, 4130622, 4140622, 4150622, 4160622, 4170622, 4180622, 4190622, 4200622, 4210622, 4220622, 4230622, 4240622, 4250622, 4260622, 4270622, 4280622, 4290622, 4300622, 4310622, 4320622, 4330622, 4340622, 4350622, 4360622, 4370622, 4380622, 4390622, 4400622, 4410622, 4420622, 4430622, 4440622, 4450622, 4460622]</msg>
<status status="PASS" starttime="20201110 08:35:08.000" endtime="20201110 08:35:08.003"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.988" endtime="20201110 08:35:08.005"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:08.022" endtime="20201110 08:35:08.381"></status>
</kw>
<msg timestamp="20201110 08:35:08.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038546, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04860875, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201110 08:35:08.018" endtime="20201110 08:35:08.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:08.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038546, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04860875, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201110 08:35:08.390" endtime="20201110 08:35:08.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:08.408" endtime="20201110 08:35:08.412"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.011" endtime="20201110 08:35:08.413"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.006" endtime="20201110 08:35:08.415"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:08.472" level="INFO">${RESULT} = {'time': [0.038546, 0.04860875, 0.058633139, 0.068657792, 0.078682139, 0.088707694, 0.098733014, 0.108757903, 0.118780861, 0.128804972, 0.138827972, 0.148850472, 0.158873111, 0.168896292, 0.178919861,...</msg>
<status status="PASS" starttime="20201110 08:35:08.416" endtime="20201110 08:35:08.473"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:08.483" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201110 08:35:08.481" endtime="20201110 08:35:08.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:08.488" level="INFO">VALUE: 0.038546</msg>
<status status="PASS" starttime="20201110 08:35:08.485" endtime="20201110 08:35:08.488"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.474" endtime="20201110 08:35:08.490"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:08.504" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:08.501" endtime="20201110 08:35:08.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:08.508" level="INFO">VALUE: [0.04860875, 0.058633139, 0.068657792, 0.078682139, 0.088707694, 0.098733014, 0.108757903, 0.118780861, 0.128804972, 0.138827972, 0.148850472, 0.158873111, 0.168896292, 0.178919861, 0.188943333, 0.198965653, 0.208988181, 0.219011736, 0.229035111, 0.239057403, 0.249079875, 0.259102639, 0.269125875, 0.279148889, 0.289171389, 0.299194569, 0.309216556, 0.319239764, 0.329263139, 0.339285097, 0.349307944, 0.359330889, 0.369353819, 0.379377306, 0.389400889, 0.399422903, 0.409445889, 0.419468875, 0.429492528, 0.439516292, 0.449542556, 0.459568056, 0.469594264, 0.479620208, 0.489647708, 0.499673819, 0.509700389, 0.519725278, 0.529750903, 0.539776319, 0.549801361, 0.559825639, 0.569849111, 0.579872958, 0.589895583, 0.599917694, 0.609941347, 0.619966889, 0.629991708, 0.640016917, 0.650043681, 0.660070111, 0.670097153, 0.680122528, 0.690146861, 0.700170597, 0.710194792, 0.720218542, 0.730243194, 0.740267528, 0.750291722, 0.760314806, 0.770338125, 0.780362069, 0.790386528, 0.800411056, 0.810435306, 0.820459444, 0.830483, 0.840505569, 0.850529, 0.860551875, 0.870575375, 0.880599125, 0.890622889, 0.900645931, 0.910669194, 0.92069225, 0.930715208, 0.940739097, 0.950762958, 0.960786944, 0.970810944, 0.980835111, 0.990860528, 1.000885806, 1.010910792, 1.0209355, 1.030959778, 1.040984139] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:08.506" endtime="20201110 08:35:08.510"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.492" endtime="20201110 08:35:08.511"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:08.518" endtime="20201110 08:35:08.521"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:08.527" endtime="20201110 08:35:08.549"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.522" endtime="20201110 08:35:08.551"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.513" endtime="20201110 08:35:08.553"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.734" endtime="20201110 08:35:08.553"></status>
</kw>
<msg timestamp="20201110 08:35:08.554" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:08.575" endtime="20201110 08:35:10.697"></status>
</kw>
<msg timestamp="20201110 08:35:10.698" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 6274917, 'start-iter': 1, 'wakeups': [6284955, 6294955, 6304955, 63149...</msg>
<status status="PASS" starttime="20201110 08:35:08.572" endtime="20201110 08:35:10.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:10.705" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 6274917, 'start-iter': 1, 'wakeups': [6284955, 6294955, 6304955, 63149...</msg>
<status status="PASS" starttime="20201110 08:35:10.700" endtime="20201110 08:35:10.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:10.707" endtime="20201110 08:35:10.711"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.564" endtime="20201110 08:35:10.713"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.559" endtime="20201110 08:35:10.714"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:10.720" level="INFO">${RESULT} = {'timer-count': 1, 'timer-interval': 10000, 'wakeups': [6284955, 6294955, 6304955, 6314955, 6324955, 6334955, 6344955, 6354955, 6364955, 6374955, 6384955, 6394955, 6404955, 6414955, 6424955, 6434955, ...</msg>
<status status="PASS" starttime="20201110 08:35:10.715" endtime="20201110 08:35:10.721"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:10.730" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:10.728" endtime="20201110 08:35:10.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:10.735" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:10.733" endtime="20201110 08:35:10.736"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.722" endtime="20201110 08:35:10.737"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:10.747" level="INFO">NAME: 1-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:10.745" endtime="20201110 08:35:10.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:10.752" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:10.749" endtime="20201110 08:35:10.752"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.738" endtime="20201110 08:35:10.754"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:10.765" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201110 08:35:10.763" endtime="20201110 08:35:10.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:10.769" level="INFO">VALUE: 6274917</msg>
<status status="PASS" starttime="20201110 08:35:10.767" endtime="20201110 08:35:10.770"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.756" endtime="20201110 08:35:10.772"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:10.782" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:10.779" endtime="20201110 08:35:10.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:10.786" level="INFO">VALUE: [6284955, 6294955, 6304955, 6314955, 6324955, 6334955, 6344955, 6354955, 6364955, 6374955, 6384955, 6394955, 6404955, 6414955, 6424955, 6434955, 6444955, 6454955, 6464955, 6474955, 6484955, 6494955, 6504955, 6514955, 6524955, 6534955, 6544955, 6554955, 6564955, 6574955, 6584955, 6594955, 6604955, 6614955, 6624955, 6634955, 6644955, 6654955, 6664955, 6674955, 6684955, 6694955, 6704955, 6714955, 6724955, 6734955, 6744955, 6754955, 6764955, 6774955, 6784955, 6794955, 6804955, 6814955, 6824955, 6834955, 6844955, 6854955, 6864955, 6874955, 6884955, 6894955, 6904955, 6914955, 6924955, 6934955, 6944955, 6954955, 6964955, 6974955, 6984955, 6994955, 7004955, 7014955, 7024955, 7034955, 7044955, 7054955, 7064955, 7074955, 7084955, 7094955, 7104955, 7114955, 7124955, 7134955, 7144955, 7154955, 7164955, 7174955, 7184955, 7194955, 7204955, 7214955, 7224955, 7234955, 7244955, 7254955, 7264955, 7274955]</msg>
<status status="PASS" starttime="20201110 08:35:10.784" endtime="20201110 08:35:10.787"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.773" endtime="20201110 08:35:10.789"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:10.807" endtime="20201110 08:35:11.154"></status>
</kw>
<msg timestamp="20201110 08:35:11.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03869775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048761181, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:35:10.802" endtime="20201110 08:35:11.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:11.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03869775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048761181, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:35:11.163" endtime="20201110 08:35:11.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:11.180" endtime="20201110 08:35:11.184"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.795" endtime="20201110 08:35:11.185"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.790" endtime="20201110 08:35:11.187"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:11.243" level="INFO">${RESULT} = {'time': [0.03869775, 0.048761181, 0.0587855, 0.068810639, 0.078835847, 0.088860694, 0.098884931, 0.108910806, 0.118936042, 0.128960611, 0.138985194, 0.149009819, 0.159033875, 0.169058153, 0.179083208...</msg>
<status status="PASS" starttime="20201110 08:35:11.188" endtime="20201110 08:35:11.243"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:11.254" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201110 08:35:11.252" endtime="20201110 08:35:11.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:11.259" level="INFO">VALUE: 0.03869775</msg>
<status status="PASS" starttime="20201110 08:35:11.257" endtime="20201110 08:35:11.260"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.245" endtime="20201110 08:35:11.261"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:11.272" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:11.270" endtime="20201110 08:35:11.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:11.277" level="INFO">VALUE: [0.048761181, 0.0587855, 0.068810639, 0.078835847, 0.088860694, 0.098884931, 0.108910806, 0.118936042, 0.128960611, 0.138985194, 0.149009819, 0.159033875, 0.169058153, 0.179083208, 0.189109903, 0.199133403, 0.209157972, 0.219182306, 0.229206444, 0.239232639, 0.249260097, 0.259286597, 0.269312458, 0.279336333, 0.289360667, 0.299384806, 0.309409264, 0.319433722, 0.329459514, 0.339485611, 0.349512444, 0.359538403, 0.369564972, 0.379591278, 0.389619556, 0.399647236, 0.409675319, 0.419702042, 0.429728042, 0.439752806, 0.449778194, 0.459803917, 0.469828847, 0.479852667, 0.489876875, 0.499899167, 0.509922319, 0.519945931, 0.529970694, 0.539995514, 0.550020833, 0.560046944, 0.570071972, 0.58009625, 0.590122042, 0.600147014, 0.610172, 0.620197472, 0.630223667, 0.640248917, 0.650275264, 0.660301917, 0.670327861, 0.680353736, 0.690378917, 0.700404264, 0.710429222, 0.720454431, 0.730478361, 0.740503444, 0.750527806, 0.760553389, 0.770579056, 0.780605264, 0.790631403, 0.800656931, 0.810683361, 0.820710292, 0.830736889, 0.8407625, 0.850788528, 0.8608135, 0.870836917, 0.880860639, 0.890885528, 0.900910222, 0.910935542, 0.920961736, 0.930987597, 0.941013, 0.951037097, 0.961060222, 0.971085417, 0.981109667, 0.991135417, 1.001161042, 1.011188042, 1.02121475, 1.031241347, 1.041268208] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:11.275" endtime="20201110 08:35:11.278"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.263" endtime="20201110 08:35:11.280"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:11.287" endtime="20201110 08:35:11.289"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:11.295" endtime="20201110 08:35:11.317"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.291" endtime="20201110 08:35:11.318"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.282" endtime="20201110 08:35:11.320"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.555" endtime="20201110 08:35:11.321"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.928" endtime="20201110 08:35:11.321"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.926" endtime="20201110 08:35:11.322"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:35:11.327" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:11.350" endtime="20201110 08:35:13.469"></status>
</kw>
<msg timestamp="20201110 08:35:13.471" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 9043027, 'start-iter': 1, 'wakeups': [9053098, 9063097, 9073097, 90830...</msg>
<status status="PASS" starttime="20201110 08:35:11.345" endtime="20201110 08:35:13.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:13.477" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 9043027, 'start-iter': 1, 'wakeups': [9053098, 9063097, 9073097, 90830...</msg>
<status status="PASS" starttime="20201110 08:35:13.473" endtime="20201110 08:35:13.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:13.480" endtime="20201110 08:35:13.484"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.337" endtime="20201110 08:35:13.485"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.332" endtime="20201110 08:35:13.487"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:13.493" level="INFO">${RESULT} = {'timer-count': 2, 'timer-interval': 10000, 'wakeups': [9053098, 9063097, 9073097, 9083097, 9093097, 9103097, 9113097, 9123097, 9133097, 9143097, 9153097, 9163097, 9173097, 9183097, 9193097, 9203097, ...</msg>
<status status="PASS" starttime="20201110 08:35:13.488" endtime="20201110 08:35:13.493"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:13.503" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:13.501" endtime="20201110 08:35:13.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:13.507" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:13.505" endtime="20201110 08:35:13.508"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.495" endtime="20201110 08:35:13.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:13.520" level="INFO">NAME: 2-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:13.517" endtime="20201110 08:35:13.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:13.524" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:13.522" endtime="20201110 08:35:13.525"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.511" endtime="20201110 08:35:13.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:13.536" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201110 08:35:13.534" endtime="20201110 08:35:13.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:13.541" level="INFO">VALUE: 9043027</msg>
<status status="PASS" starttime="20201110 08:35:13.539" endtime="20201110 08:35:13.542"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.528" endtime="20201110 08:35:13.543"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:13.553" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:13.551" endtime="20201110 08:35:13.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:13.564" level="INFO">VALUE: [9053098, 9063097, 9073097, 9083097, 9093097, 9103097, 9113097, 9123097, 9133097, 9143097, 9153097, 9163097, 9173097, 9183097, 9193097, 9203097, 9213097, 9223097, 9233097, 9243097, 9253097, 9263097, 9273097, 9283097, 9293097, 9303097, 9313097, 9323097, 9333097, 9343097, 9353097, 9363097, 9373097, 9383097, 9393097, 9403097, 9413097, 9423097, 9433097, 9443097, 9453097, 9463097, 9473097, 9483097, 9493097, 9503097, 9513097, 9523097, 9533097, 9543097, 9553097, 9563097, 9573097, 9583097, 9593097, 9603097, 9613097, 9623097, 9633097, 9643097, 9653097, 9663097, 9673097, 9683097, 9693097, 9703097, 9713097, 9723097, 9733097, 9743097, 9753097, 9763097, 9773097, 9783097, 9793097, 9803097, 9813097, 9823097, 9833097, 9843097, 9853097, 9863097, 9873097, 9883097, 9893097, 9903097, 9913097, 9923097, 9933097, 9943097, 9953097, 9963097, 9973097, 9983097, 9993097, 10003097, 10013097, 10023097, 10033097, 10043097]</msg>
<status status="PASS" starttime="20201110 08:35:13.556" endtime="20201110 08:35:13.565"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.545" endtime="20201110 08:35:13.568"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:13.592" endtime="20201110 08:35:13.937"></status>
</kw>
<msg timestamp="20201110 08:35:13.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045619931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055715417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:13.587" endtime="20201110 08:35:13.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:13.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045619931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055715417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:13.945" endtime="20201110 08:35:13.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:13.962" endtime="20201110 08:35:13.966"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.577" endtime="20201110 08:35:13.968"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.570" endtime="20201110 08:35:13.969"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:14.027" level="INFO">${RESULT} = {'time': [0.045619931, 0.055715417, 0.065737861, 0.075761736, 0.085785153, 0.095808208, 0.105831111, 0.115855778, 0.125880042, 0.135905028, 0.145930028, 0.155954569, 0.165979778, 0.176004167, 0.186028...</msg>
<status status="PASS" starttime="20201110 08:35:13.971" endtime="20201110 08:35:14.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:14.037" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201110 08:35:14.035" endtime="20201110 08:35:14.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:14.042" level="INFO">VALUE: 0.045619931</msg>
<status status="PASS" starttime="20201110 08:35:14.039" endtime="20201110 08:35:14.042"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.028" endtime="20201110 08:35:14.044"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:14.055" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:14.052" endtime="20201110 08:35:14.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:14.059" level="INFO">VALUE: [0.055715417, 0.065737861, 0.075761736, 0.085785153, 0.095808208, 0.105831111, 0.115855778, 0.125880042, 0.135905028, 0.145930028, 0.155954569, 0.165979778, 0.176004167, 0.186028736, 0.196054528, 0.206079653, 0.216104681, 0.226130722, 0.236157944, 0.246184222, 0.256211681, 0.266236917, 0.276261431, 0.286285278, 0.296310861, 0.306334778, 0.316359222, 0.326383681, 0.336408264, 0.346432139, 0.356456847, 0.366480611, 0.376507875, 0.386533639, 0.396558139, 0.406582458, 0.416606222, 0.426630764, 0.436656056, 0.446680917, 0.456706583, 0.466730361, 0.476755278, 0.486780097, 0.496804917, 0.506829792, 0.516854375, 0.526877889, 0.536903458, 0.546929375, 0.556955, 0.566977361, 0.577001, 0.587024097, 0.597046111, 0.607070083, 0.617095417, 0.627119764, 0.637144319, 0.647170097, 0.657195097, 0.667219306, 0.677243875, 0.687268222, 0.69729275, 0.707317306, 0.717341917, 0.727366139, 0.737390875, 0.747415569, 0.757438944, 0.767461556, 0.777485, 0.787508972, 0.797533819, 0.807558111, 0.817582181, 0.827605667, 0.8376295, 0.847652889, 0.857677222, 0.867700931, 0.877725333, 0.887749806, 0.897775403, 0.90780025, 0.917825875, 0.927851694, 0.937877444, 0.947903167, 0.957928292, 0.967952389, 0.977978694, 0.988003361, 0.998029042, 1.008053875, 1.018078542, 1.028103, 1.038127042, 1.0481505] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:14.057" endtime="20201110 08:35:14.060"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.045" endtime="20201110 08:35:14.062"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:14.068" endtime="20201110 08:35:14.071"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:14.076" endtime="20201110 08:35:14.098"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.072" endtime="20201110 08:35:14.099"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.063" endtime="20201110 08:35:14.101"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.328" endtime="20201110 08:35:14.102"></status>
</kw>
<msg timestamp="20201110 08:35:14.102" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:14.123" endtime="20201110 08:35:16.235"></status>
</kw>
<msg timestamp="20201110 08:35:16.236" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 11809878, 'start-iter': 1, 'wakeups': [11819949, 11829948, 11839948, 1...</msg>
<status status="PASS" starttime="20201110 08:35:14.120" endtime="20201110 08:35:16.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:16.243" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 11809878, 'start-iter': 1, 'wakeups': [11819949, 11829948, 11839948, 1...</msg>
<status status="PASS" starttime="20201110 08:35:16.238" endtime="20201110 08:35:16.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:16.245" endtime="20201110 08:35:16.249"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.113" endtime="20201110 08:35:16.250"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.107" endtime="20201110 08:35:16.252"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:16.258" level="INFO">${RESULT} = {'timer-count': 2, 'timer-interval': 10000, 'wakeups': [11819949, 11829948, 11839948, 11849948, 11859948, 11869948, 11879948, 11889948, 11899948, 11909948, 11919948, 11929948, 11939948, 11949948, 1195...</msg>
<status status="PASS" starttime="20201110 08:35:16.253" endtime="20201110 08:35:16.258"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:16.268" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:16.266" endtime="20201110 08:35:16.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:16.273" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:16.270" endtime="20201110 08:35:16.273"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.260" endtime="20201110 08:35:16.275"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:16.285" level="INFO">NAME: 2-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:16.283" endtime="20201110 08:35:16.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:16.291" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:16.287" endtime="20201110 08:35:16.292"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.276" endtime="20201110 08:35:16.293"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:16.303" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201110 08:35:16.301" endtime="20201110 08:35:16.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:16.308" level="INFO">VALUE: 11809878</msg>
<status status="PASS" starttime="20201110 08:35:16.306" endtime="20201110 08:35:16.308"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.295" endtime="20201110 08:35:16.310"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:16.320" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:16.318" endtime="20201110 08:35:16.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:16.325" level="INFO">VALUE: [11819949, 11829948, 11839948, 11849948, 11859948, 11869948, 11879948, 11889948, 11899948, 11909948, 11919948, 11929948, 11939948, 11949948, 11959948, 11969948, 11979948, 11989948, 11999948, 12009948, 12019948, 12029948, 12039948, 12049948, 12059948, 12069948, 12079948, 12089948, 12099948, 12109948, 12119948, 12129948, 12139948, 12149948, 12159948, 12169948, 12179948, 12189948, 12199948, 12209948, 12219948, 12229948, 12239948, 12249948, 12259948, 12269948, 12279948, 12289948, 12299948, 12309948, 12319948, 12329948, 12339948, 12349948, 12359948, 12369948, 12379948, 12389948, 12399948, 12409948, 12419948, 12429948, 12439948, 12449948, 12459948, 12469948, 12479948, 12489948, 12499948, 12509948, 12519948, 12529948, 12539948, 12549948, 12559948, 12569948, 12579948, 12589948, 12599948, 12609948, 12619948, 12629948, 12639948, 12649948, 12659948, 12669948, 12679948, 12689948, 12699948, 12709948, 12719948, 12729948, 12739948, 12749948, 12759948, 12769948, 12779948, 12789948, 12799948, 12809948]</msg>
<status status="PASS" starttime="20201110 08:35:16.322" endtime="20201110 08:35:16.325"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.311" endtime="20201110 08:35:16.327"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:16.344" endtime="20201110 08:35:16.686"></status>
</kw>
<msg timestamp="20201110 08:35:16.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037880458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047976583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:16.341" endtime="20201110 08:35:16.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:16.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037880458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047976583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:16.695" endtime="20201110 08:35:16.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:16.712" endtime="20201110 08:35:16.716"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.334" endtime="20201110 08:35:16.717"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.328" endtime="20201110 08:35:16.719"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:16.773" level="INFO">${RESULT} = {'time': [0.037880458, 0.047976583, 0.058000431, 0.068025875, 0.078050903, 0.088076319, 0.098099375, 0.108123833, 0.118148069, 0.12817375, 0.138199014, 0.148224278, 0.158248403, 0.168271667, 0.1782964...</msg>
<status status="PASS" starttime="20201110 08:35:16.720" endtime="20201110 08:35:16.774"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:16.784" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201110 08:35:16.782" endtime="20201110 08:35:16.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:16.789" level="INFO">VALUE: 0.037880458</msg>
<status status="PASS" starttime="20201110 08:35:16.787" endtime="20201110 08:35:16.791"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.775" endtime="20201110 08:35:16.793"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:16.804" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:16.802" endtime="20201110 08:35:16.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:16.809" level="INFO">VALUE: [0.047976583, 0.058000431, 0.068025875, 0.078050903, 0.088076319, 0.098099375, 0.108123833, 0.118148069, 0.12817375, 0.138199014, 0.148224278, 0.158248403, 0.168271667, 0.178296458, 0.188321847, 0.198346958, 0.208371444, 0.2183955, 0.228420222, 0.238445667, 0.248471542, 0.258497042, 0.268522611, 0.278546847, 0.288570958, 0.298594375, 0.308617458, 0.318639875, 0.328664, 0.338687625, 0.348712181, 0.358736472, 0.368762653, 0.378789028, 0.388815375, 0.398840806, 0.408866194, 0.418892472, 0.428918569, 0.438944444, 0.448971347, 0.458998083, 0.469023403, 0.479049583, 0.489075389, 0.499101583, 0.509127833, 0.519152708, 0.529177278, 0.539201028, 0.549225417, 0.559250125, 0.569274486, 0.579299681, 0.589324944, 0.599349319, 0.609374292, 0.619399167, 0.629424, 0.639448528, 0.649473417, 0.659498403, 0.669523986, 0.679548764, 0.689573944, 0.699597917, 0.709622778, 0.719647014, 0.729671625, 0.739695819, 0.749720361, 0.759744611, 0.769771333, 0.77979575, 0.789820333, 0.799844236, 0.809869319, 0.819894097, 0.829918042, 0.839941986, 0.849965125, 0.859989042, 0.870013931, 0.880038889, 0.890064569, 0.900089861, 0.910115264, 0.920139764, 0.930164542, 0.94018925, 0.95021375, 0.960237861, 0.970261764, 0.980285292, 0.990309278, 1.000334264, 1.010358569, 1.020382431, 1.030406458, 1.040431292] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:16.806" endtime="20201110 08:35:16.810"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.794" endtime="20201110 08:35:16.811"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:16.817" endtime="20201110 08:35:16.820"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:16.826" endtime="20201110 08:35:16.847"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.821" endtime="20201110 08:35:16.849"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.813" endtime="20201110 08:35:16.850"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.104" endtime="20201110 08:35:16.851"></status>
</kw>
<msg timestamp="20201110 08:35:16.852" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:16.872" endtime="20201110 08:35:18.984"></status>
</kw>
<msg timestamp="20201110 08:35:18.985" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 14552630, 'start-iter': 1, 'wakeups': [14562701, 14572700, 14582700, 1...</msg>
<status status="PASS" starttime="20201110 08:35:16.869" endtime="20201110 08:35:18.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:18.997" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 14552630, 'start-iter': 1, 'wakeups': [14562701, 14572700, 14582700, 1...</msg>
<status status="PASS" starttime="20201110 08:35:18.992" endtime="20201110 08:35:18.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:19.000" endtime="20201110 08:35:19.003"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.862" endtime="20201110 08:35:19.005"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.856" endtime="20201110 08:35:19.006"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:19.013" level="INFO">${RESULT} = {'timer-count': 2, 'timer-interval': 10000, 'wakeups': [14562701, 14572700, 14582700, 14592700, 14602700, 14612700, 14622700, 14632700, 14642700, 14652700, 14662700, 14672700, 14682700, 14692700, 1470...</msg>
<status status="PASS" starttime="20201110 08:35:19.008" endtime="20201110 08:35:19.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.022" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:19.020" endtime="20201110 08:35:19.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.027" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:19.025" endtime="20201110 08:35:19.028"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.014" endtime="20201110 08:35:19.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.039" level="INFO">NAME: 2-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:19.037" endtime="20201110 08:35:19.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.043" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:19.041" endtime="20201110 08:35:19.044"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.030" endtime="20201110 08:35:19.046"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.056" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201110 08:35:19.053" endtime="20201110 08:35:19.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.060" level="INFO">VALUE: 14552630</msg>
<status status="PASS" starttime="20201110 08:35:19.058" endtime="20201110 08:35:19.061"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.047" endtime="20201110 08:35:19.062"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.072" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:19.070" endtime="20201110 08:35:19.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.077" level="INFO">VALUE: [14562701, 14572700, 14582700, 14592700, 14602700, 14612700, 14622700, 14632700, 14642700, 14652700, 14662700, 14672700, 14682700, 14692700, 14702700, 14712700, 14722700, 14732700, 14742700, 14752700, 14762700, 14772700, 14782700, 14792700, 14802700, 14812700, 14822700, 14832700, 14842700, 14852700, 14862700, 14872700, 14882700, 14892700, 14902700, 14912700, 14922700, 14932700, 14942700, 14952700, 14962700, 14972700, 14982700, 14992700, 15002700, 15012700, 15022700, 15032700, 15042700, 15052700, 15062700, 15072700, 15082700, 15092700, 15102700, 15112700, 15122700, 15132700, 15142700, 15152700, 15162700, 15172700, 15182700, 15192700, 15202700, 15212700, 15222700, 15232700, 15242700, 15252700, 15262700, 15272700, 15282700, 15292700, 15302700, 15312700, 15322700, 15332700, 15342700, 15352700, 15362700, 15372700, 15382700, 15392700, 15402700, 15412700, 15422700, 15432700, 15442700, 15452700, 15462700, 15472700, 15482700, 15492700, 15502700, 15512700, 15522700, 15532700, 15542700, 15552700]</msg>
<status status="PASS" starttime="20201110 08:35:19.075" endtime="20201110 08:35:19.078"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.063" endtime="20201110 08:35:19.080"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:19.098" endtime="20201110 08:35:19.440"></status>
</kw>
<msg timestamp="20201110 08:35:19.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037525958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047621042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:19.095" endtime="20201110 08:35:19.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037525958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047621042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:19.448" endtime="20201110 08:35:19.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:19.466" endtime="20201110 08:35:19.469"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.086" endtime="20201110 08:35:19.471"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.081" endtime="20201110 08:35:19.472"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:19.528" level="INFO">${RESULT} = {'time': [0.037525958, 0.047621042, 0.057643708, 0.067667056, 0.077690889, 0.087715514, 0.097740194, 0.107765528, 0.117789083, 0.127813153, 0.137836931, 0.147861625, 0.157885125, 0.167908569, 0.177932...</msg>
<status status="PASS" starttime="20201110 08:35:19.474" endtime="20201110 08:35:19.528"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.538" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201110 08:35:19.536" endtime="20201110 08:35:19.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.543" level="INFO">VALUE: 0.037525958</msg>
<status status="PASS" starttime="20201110 08:35:19.541" endtime="20201110 08:35:19.544"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.530" endtime="20201110 08:35:19.545"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.556" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:19.554" endtime="20201110 08:35:19.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.561" level="INFO">VALUE: [0.047621042, 0.057643708, 0.067667056, 0.077690889, 0.087715514, 0.097740194, 0.107765528, 0.117789083, 0.127813153, 0.137836931, 0.147861625, 0.157885125, 0.167908569, 0.177932139, 0.187954458, 0.197975653, 0.207999486, 0.218022583, 0.228047167, 0.238069819, 0.248092306, 0.258114639, 0.268136681, 0.278159806, 0.288184014, 0.298207958, 0.308231736, 0.318255444, 0.328278833, 0.338301583, 0.348325167, 0.358348361, 0.368373444, 0.378398931, 0.388423486, 0.398447181, 0.408472208, 0.418496875, 0.428521097, 0.4385455, 0.448569389, 0.458592653, 0.468616125, 0.478639556, 0.488663139, 0.498687778, 0.508712139, 0.518736694, 0.528761458, 0.538784764, 0.548808819, 0.558833153, 0.568859583, 0.578884819, 0.588909611, 0.598933514, 0.608958056, 0.618981958, 0.629006431, 0.639029319, 0.649052667, 0.659075528, 0.669098778, 0.679121472, 0.689145111, 0.699168792, 0.709193042, 0.719216903, 0.729240944, 0.739264472, 0.7492895, 0.759314806, 0.769340236, 0.779365472, 0.789389569, 0.799414, 0.809438014, 0.81946175, 0.829485083, 0.839507694, 0.849532042, 0.859554264, 0.869577056, 0.879599306, 0.889621667, 0.899643139, 0.909665181, 0.919686819, 0.929708764, 0.939731958, 0.949756014, 0.959779347, 0.969803056, 0.979826458, 0.989850486, 0.999874972, 1.009899264, 1.019923042, 1.029947639, 1.039970583] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:19.558" endtime="20201110 08:35:19.561"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.546" endtime="20201110 08:35:19.563"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:19.569" endtime="20201110 08:35:19.572"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:19.577" endtime="20201110 08:35:19.599"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.573" endtime="20201110 08:35:19.601"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.565" endtime="20201110 08:35:19.602"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.853" endtime="20201110 08:35:19.603"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.324" endtime="20201110 08:35:19.603"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.322" endtime="20201110 08:35:19.604"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:35:19.609" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:19.631" endtime="20201110 08:35:21.743"></status>
</kw>
<msg timestamp="20201110 08:35:21.744" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 17305066, 'start-iter': 1, 'wakeups': [17315171, 17325170, 17335169, 1...</msg>
<status status="PASS" starttime="20201110 08:35:19.628" endtime="20201110 08:35:21.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:21.751" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 17305066, 'start-iter': 1, 'wakeups': [17315171, 17325170, 17335169, 1...</msg>
<status status="PASS" starttime="20201110 08:35:21.746" endtime="20201110 08:35:21.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:21.753" endtime="20201110 08:35:21.757"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.619" endtime="20201110 08:35:21.759"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.614" endtime="20201110 08:35:21.761"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:21.767" level="INFO">${RESULT} = {'timer-count': 3, 'timer-interval': 10000, 'wakeups': [17315171, 17325170, 17335169, 17345170, 17355171, 17365169, 17375169, 17385170, 17395169, 17405169, 17415169, 17425170, 17435170, 17445169, 1745...</msg>
<status status="PASS" starttime="20201110 08:35:21.762" endtime="20201110 08:35:21.767"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:21.777" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:21.775" endtime="20201110 08:35:21.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:21.781" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:21.779" endtime="20201110 08:35:21.782"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.769" endtime="20201110 08:35:21.784"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:21.794" level="INFO">NAME: 3-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:21.792" endtime="20201110 08:35:21.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:21.804" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:21.798" endtime="20201110 08:35:21.805"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.785" endtime="20201110 08:35:21.808"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:21.824" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201110 08:35:21.820" endtime="20201110 08:35:21.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:21.830" level="INFO">VALUE: 17305066</msg>
<status status="PASS" starttime="20201110 08:35:21.827" endtime="20201110 08:35:21.831"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.810" endtime="20201110 08:35:21.834"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:21.849" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:21.845" endtime="20201110 08:35:21.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:21.855" level="INFO">VALUE: [17315171, 17325170, 17335169, 17345170, 17355171, 17365169, 17375169, 17385170, 17395169, 17405169, 17415169, 17425170, 17435170, 17445169, 17455170, 17465170, 17475169, 17485170, 17495170, 17505169, 17515169, 17525169, 17535169, 17545169, 17555169, 17565170, 17575170, 17585170, 17595169, 17605169, 17615169, 17625170, 17635171, 17645171, 17655171, 17665171, 17675170, 17685169, 17695170, 17705169, 17715170, 17725170, 17735170, 17745170, 17755170, 17765170, 17775170, 17785169, 17795169, 17805170, 17815171, 17825170, 17835171, 17845171, 17855169, 17865170, 17875170, 17885169, 17895170, 17905170, 17915170, 17925170, 17935171, 17945170, 17955169, 17965170, 17975170, 17985170, 17995170, 18005170, 18015171, 18025170, 18035170, 18045169, 18055170, 18065170, 18075169, 18085169, 18095170, 18105170, 18115169, 18125170, 18135170, 18145169, 18155170, 18165170, 18175171, 18185169, 18195170, 18205171, 18215169, 18225170, 18235171, 18245170, 18255171, 18265169, 18275169, 18285170, 18295171, 18305170]</msg>
<status status="PASS" starttime="20201110 08:35:21.852" endtime="20201110 08:35:21.856"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.837" endtime="20201110 08:35:21.857"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:21.874" endtime="20201110 08:35:22.242"></status>
</kw>
<msg timestamp="20201110 08:35:22.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044728139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.054857931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:21.871" endtime="20201110 08:35:22.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:22.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044728139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.054857931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:22.251" endtime="20201110 08:35:22.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:22.268" endtime="20201110 08:35:22.272"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.863" endtime="20201110 08:35:22.274"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.859" endtime="20201110 08:35:22.275"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:22.333" level="INFO">${RESULT} = {'time': [0.044728139, 0.054857931, 0.064881694, 0.074906819, 0.084934319, 0.094961986, 0.104985819, 0.115012583, 0.125040292, 0.135065681, 0.145090903, 0.155115764, 0.165141681, 0.175167681, 0.185192...</msg>
<status status="PASS" starttime="20201110 08:35:22.277" endtime="20201110 08:35:22.334"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:22.344" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201110 08:35:22.342" endtime="20201110 08:35:22.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:22.349" level="INFO">VALUE: 0.044728139</msg>
<status status="PASS" starttime="20201110 08:35:22.347" endtime="20201110 08:35:22.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.335" endtime="20201110 08:35:22.351"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:22.363" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:22.360" endtime="20201110 08:35:22.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:22.367" level="INFO">VALUE: [0.054857931, 0.064881694, 0.074906819, 0.084934319, 0.094961986, 0.104985819, 0.115012583, 0.125040292, 0.135065681, 0.145090903, 0.155115764, 0.165141681, 0.175167681, 0.185192097, 0.195218417, 0.205243764, 0.215268597, 0.225295889, 0.235323403, 0.245347903, 0.255374611, 0.265399708, 0.275425792, 0.285453417, 0.295480986, 0.305507681, 0.315534444, 0.325559764, 0.335583514, 0.345607861, 0.355633208, 0.365658667, 0.375684861, 0.385710167, 0.395734806, 0.405759389, 0.415783625, 0.425808389, 0.435836222, 0.445860972, 0.455888292, 0.465913903, 0.475940667, 0.485965208, 0.495989472, 0.506013611, 0.516038708, 0.526062181, 0.536087292, 0.546112667, 0.556139542, 0.566163875, 0.576189875, 0.586214917, 0.596238931, 0.606265292, 0.616291208, 0.626315722, 0.636344042, 0.646370306, 0.656398056, 0.666425056, 0.67645475, 0.686478958, 0.696503125, 0.706528833, 0.716553833, 0.726578931, 0.736604569, 0.746628847, 0.75665575, 0.766679056, 0.776704278, 0.786729972, 0.796756181, 0.806780708, 0.816803986, 0.826827639, 0.836852347, 0.846876375, 0.856899403, 0.866924514, 0.876948903, 0.886972833, 0.896998944, 0.907023944, 0.917050556, 0.927074236, 0.937101111, 0.947127694, 0.957150958, 0.967177458, 0.977204639, 0.987228347, 0.997254528, 1.007278417, 1.017303833, 1.027329083, 1.037355375, 1.047379125] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:22.365" endtime="20201110 08:35:22.368"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.353" endtime="20201110 08:35:22.370"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:22.376" endtime="20201110 08:35:22.379"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:22.384" endtime="20201110 08:35:22.406"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.380" endtime="20201110 08:35:22.408"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.372" endtime="20201110 08:35:22.410"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.610" endtime="20201110 08:35:22.410"></status>
</kw>
<msg timestamp="20201110 08:35:22.411" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:22.432" endtime="20201110 08:35:24.545"></status>
</kw>
<msg timestamp="20201110 08:35:24.547" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 20099610, 'start-iter': 1, 'wakeups': [20109714, 20119713, 20129714, 2...</msg>
<status status="PASS" starttime="20201110 08:35:22.429" endtime="20201110 08:35:24.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.554" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 20099610, 'start-iter': 1, 'wakeups': [20109714, 20119713, 20129714, 2...</msg>
<status status="PASS" starttime="20201110 08:35:24.549" endtime="20201110 08:35:24.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:24.556" endtime="20201110 08:35:24.560"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.422" endtime="20201110 08:35:24.562"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.416" endtime="20201110 08:35:24.563"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:24.570" level="INFO">${RESULT} = {'timer-count': 3, 'timer-interval': 10000, 'wakeups': [20109714, 20119713, 20129714, 20139715, 20149714, 20159713, 20169714, 20179715, 20189713, 20199713, 20209713, 20219713, 20229713, 20239714, 2024...</msg>
<status status="PASS" starttime="20201110 08:35:24.565" endtime="20201110 08:35:24.570"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.580" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:24.577" endtime="20201110 08:35:24.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.585" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:24.582" endtime="20201110 08:35:24.585"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.571" endtime="20201110 08:35:24.588"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.598" level="INFO">NAME: 3-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:24.596" endtime="20201110 08:35:24.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.603" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:24.601" endtime="20201110 08:35:24.604"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.589" endtime="20201110 08:35:24.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.617" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201110 08:35:24.615" endtime="20201110 08:35:24.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.622" level="INFO">VALUE: 20099610</msg>
<status status="PASS" starttime="20201110 08:35:24.620" endtime="20201110 08:35:24.623"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.606" endtime="20201110 08:35:24.624"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.634" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:24.632" endtime="20201110 08:35:24.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.639" level="INFO">VALUE: [20109714, 20119713, 20129714, 20139715, 20149714, 20159713, 20169714, 20179715, 20189713, 20199713, 20209713, 20219713, 20229713, 20239714, 20249715, 20259713, 20269714, 20279714, 20289714, 20299713, 20309714, 20319713, 20329713, 20339713, 20349714, 20359714, 20369715, 20379713, 20389713, 20399713, 20409713, 20419713, 20429713, 20439714, 20449715, 20459715, 20469714, 20479715, 20489714, 20499714, 20509714, 20519713, 20529714, 20539714, 20549714, 20559714, 20569714, 20579714, 20589714, 20599715, 20609714, 20619713, 20629713, 20639713, 20649713, 20659714, 20669714, 20679714, 20689715, 20699715, 20709714, 20719714, 20729714, 20739715, 20749714, 20759714, 20769713, 20779713, 20789713, 20799713, 20809713, 20819714, 20829714, 20839714, 20849714, 20859714, 20869714, 20879714, 20889714, 20899713, 20909713, 20919713, 20929714, 20939714, 20949714, 20959713, 20969713, 20979714, 20989714, 20999713, 21009713, 21019714, 21029714, 21039714, 21049713, 21059713, 21069714, 21079715, 21089715, 21099713]</msg>
<status status="PASS" starttime="20201110 08:35:24.637" endtime="20201110 08:35:24.640"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.625" endtime="20201110 08:35:24.642"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:24.658" endtime="20201110 08:35:25.019"></status>
</kw>
<msg timestamp="20201110 08:35:25.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038786083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048917514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:24.655" endtime="20201110 08:35:25.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:25.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038786083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048917514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:25.028" endtime="20201110 08:35:25.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:25.046" endtime="20201110 08:35:25.050"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.648" endtime="20201110 08:35:25.052"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.643" endtime="20201110 08:35:25.053"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:25.111" level="INFO">${RESULT} = {'time': [0.038786083, 0.048917514, 0.058942653, 0.068969806, 0.078996972, 0.089021444, 0.099045778, 0.109072042, 0.119098792, 0.129121444, 0.139146028, 0.149171597, 0.159195833, 0.169219528, 0.179243...</msg>
<status status="PASS" starttime="20201110 08:35:25.055" endtime="20201110 08:35:25.112"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:25.122" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201110 08:35:25.120" endtime="20201110 08:35:25.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:25.127" level="INFO">VALUE: 0.038786083</msg>
<status status="PASS" starttime="20201110 08:35:25.125" endtime="20201110 08:35:25.128"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:25.113" endtime="20201110 08:35:25.129"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:25.141" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:25.138" endtime="20201110 08:35:25.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:25.146" level="INFO">VALUE: [0.048917514, 0.058942653, 0.068969806, 0.078996972, 0.089021444, 0.099045778, 0.109072042, 0.119098792, 0.129121444, 0.139146028, 0.149171597, 0.159195833, 0.169219528, 0.179243292, 0.189268056, 0.19929025, 0.209314847, 0.219338264, 0.22936275, 0.239385361, 0.249410389, 0.259435278, 0.26946275, 0.279488222, 0.289514264, 0.299541014, 0.309569097, 0.319594847, 0.329621097, 0.339646236, 0.349670181, 0.359695597, 0.369719639, 0.379745153, 0.389771597, 0.399797056, 0.409820014, 0.419846208, 0.429871889, 0.439896236, 0.449920917, 0.459944639, 0.469971556, 0.479997347, 0.490023444, 0.500048389, 0.510072931, 0.520097778, 0.530122681, 0.540148056, 0.550172028, 0.560194875, 0.570219639, 0.580243375, 0.590269056, 0.600294833, 0.610320486, 0.620344792, 0.630371847, 0.640395208, 0.650418361, 0.660442153, 0.670466958, 0.68049225, 0.690515194, 0.700539014, 0.710562778, 0.720587958, 0.730612361, 0.740637194, 0.750661708, 0.760686222, 0.770710889, 0.780735736, 0.7907605, 0.800783806, 0.810808583, 0.820833042, 0.830857944, 0.840880653, 0.850904819, 0.860928861, 0.87095525, 0.880978625, 0.891002708, 0.901025958, 0.911050403, 0.921075653, 0.931100542, 0.941123806, 0.951148819, 0.961174014, 0.971199611, 0.981224, 0.991248444, 1.001272597, 1.01129725, 1.021321819, 1.031344667, 1.041365347] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:25.144" endtime="20201110 08:35:25.148"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:25.131" endtime="20201110 08:35:25.150"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:25.157" endtime="20201110 08:35:25.159"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:25.165" endtime="20201110 08:35:25.187"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:25.161" endtime="20201110 08:35:25.189"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:25.152" endtime="20201110 08:35:25.190"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.412" endtime="20201110 08:35:25.191"></status>
</kw>
<msg timestamp="20201110 08:35:25.191" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:25.213" endtime="20201110 08:35:27.325"></status>
</kw>
<msg timestamp="20201110 08:35:27.327" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 22873130, 'start-iter': 1, 'wakeups': [22883234, 22893234, 22903234, 2...</msg>
<status status="PASS" starttime="20201110 08:35:25.209" endtime="20201110 08:35:27.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.334" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 22873130, 'start-iter': 1, 'wakeups': [22883234, 22893234, 22903234, 2...</msg>
<status status="PASS" starttime="20201110 08:35:27.329" endtime="20201110 08:35:27.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:27.336" endtime="20201110 08:35:27.340"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:25.202" endtime="20201110 08:35:27.342"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:25.196" endtime="20201110 08:35:27.343"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:27.349" level="INFO">${RESULT} = {'timer-count': 3, 'timer-interval': 10000, 'wakeups': [22883234, 22893234, 22903234, 22913233, 22923233, 22933233, 22943233, 22953234, 22963234, 22973234, 22983234, 22993234, 23003234, 23013234, 2302...</msg>
<status status="PASS" starttime="20201110 08:35:27.345" endtime="20201110 08:35:27.350"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.360" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:27.357" endtime="20201110 08:35:27.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.364" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:27.362" endtime="20201110 08:35:27.365"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.351" endtime="20201110 08:35:27.367"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.377" level="INFO">NAME: 3-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:27.374" endtime="20201110 08:35:27.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.381" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:27.379" endtime="20201110 08:35:27.382"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.368" endtime="20201110 08:35:27.384"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.394" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201110 08:35:27.391" endtime="20201110 08:35:27.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.399" level="INFO">VALUE: 22873130</msg>
<status status="PASS" starttime="20201110 08:35:27.397" endtime="20201110 08:35:27.400"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.385" endtime="20201110 08:35:27.401"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.412" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:27.409" endtime="20201110 08:35:27.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.416" level="INFO">VALUE: [22883234, 22893234, 22903234, 22913233, 22923233, 22933233, 22943233, 22953234, 22963234, 22973234, 22983234, 22993234, 23003234, 23013234, 23023233, 23033233, 23043233, 23053233, 23063233, 23073234, 23083235, 23093233, 23103234, 23113235, 23123234, 23133234, 23143233, 23153233, 23163233, 23173233, 23183233, 23193233, 23203233, 23213234, 23223235, 23233234, 23243233, 23253233, 23263234, 23273233, 23283233, 23293233, 23303233, 23313234, 23323235, 23333234, 23343234, 23353233, 23363234, 23373233, 23383233, 23393234, 23403233, 23413233, 23423233, 23433233, 23443233, 23453234, 23463234, 23473233, 23483233, 23493233, 23503234, 23513233, 23523233, 23533234, 23543235, 23553233, 23563233, 23573234, 23583235, 23593234, 23603235, 23613234, 23623233, 23633233, 23643233, 23653233, 23663233, 23673234, 23683234, 23693233, 23703233, 23713234, 23723235, 23733234, 23743235, 23753234, 23763233, 23773233, 23783233, 23793234, 23803234, 23813233, 23823233, 23833234, 23843235, 23853233, 23863233, 23873233]</msg>
<status status="PASS" starttime="20201110 08:35:27.414" endtime="20201110 08:35:27.417"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.403" endtime="20201110 08:35:27.419"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:27.437" endtime="20201110 08:35:27.795"></status>
</kw>
<msg timestamp="20201110 08:35:27.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038368931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048499847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:27.432" endtime="20201110 08:35:27.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038368931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048499847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:27.804" endtime="20201110 08:35:27.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:27.821" endtime="20201110 08:35:27.825"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.425" endtime="20201110 08:35:27.827"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.420" endtime="20201110 08:35:27.828"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:27.884" level="INFO">${RESULT} = {'time': [0.038368931, 0.048499847, 0.058525889, 0.068552028, 0.078576444, 0.088602069, 0.098624681, 0.108648681, 0.118672792, 0.128696111, 0.138717264, 0.148739986, 0.158762347, 0.168785111, 0.178808...</msg>
<status status="PASS" starttime="20201110 08:35:27.830" endtime="20201110 08:35:27.884"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.895" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201110 08:35:27.892" endtime="20201110 08:35:27.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.899" level="INFO">VALUE: 0.038368931</msg>
<status status="PASS" starttime="20201110 08:35:27.897" endtime="20201110 08:35:27.900"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.886" endtime="20201110 08:35:27.902"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.913" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:27.911" endtime="20201110 08:35:27.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.918" level="INFO">VALUE: [0.048499847, 0.058525889, 0.068552028, 0.078576444, 0.088602069, 0.098624681, 0.108648681, 0.118672792, 0.128696111, 0.138717264, 0.148739986, 0.158762347, 0.168785111, 0.178808319, 0.188831694, 0.198855458, 0.208881097, 0.218904806, 0.228928819, 0.238953389, 0.248979472, 0.259001347, 0.269026014, 0.279050792, 0.289072875, 0.299095736, 0.309117736, 0.319141875, 0.329166903, 0.339192042, 0.349218278, 0.359244319, 0.369269944, 0.37929625, 0.389323569, 0.399348833, 0.409373792, 0.419399319, 0.429425583, 0.439449514, 0.449475292, 0.459501542, 0.469526944, 0.479552722, 0.489578625, 0.499602694, 0.509628042, 0.519651528, 0.529677222, 0.539700472, 0.549726014, 0.559752583, 0.569775792, 0.579801, 0.589826514, 0.599851056, 0.609876444, 0.619903222, 0.629929917, 0.63995675, 0.649983542, 0.660008611, 0.670036625, 0.680062319, 0.690089194, 0.700115444, 0.710141944, 0.720165361, 0.730190722, 0.740216556, 0.750242181, 0.760265042, 0.770290667, 0.780314903, 0.790340264, 0.800365278, 0.810391097, 0.820415875, 0.830440653, 0.840466431, 0.850491458, 0.860515194, 0.8705405, 0.880565875, 0.890591361, 0.900614431, 0.910639944, 0.920663361, 0.930686986, 0.940711944, 0.950737569, 0.960763361, 0.970788444, 0.980812986, 0.990838597, 1.000865042, 1.010890944, 1.020915472, 1.030943319, 1.040970639] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:27.915" endtime="20201110 08:35:27.919"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.903" endtime="20201110 08:35:27.921"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:27.927" endtime="20201110 08:35:27.930"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:27.936" endtime="20201110 08:35:27.958"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.931" endtime="20201110 08:35:27.959"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.923" endtime="20201110 08:35:27.961"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:25.193" endtime="20201110 08:35:27.962"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.606" endtime="20201110 08:35:27.962"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.604" endtime="20201110 08:35:27.963"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:35:27.968" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:27.991" endtime="20201110 08:35:30.104"></status>
</kw>
<msg timestamp="20201110 08:35:30.106" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 25645031, 'start-iter': 1, 'wakeups': [25655174, 25665173, 25675174, 2...</msg>
<status status="PASS" starttime="20201110 08:35:27.986" endtime="20201110 08:35:30.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:30.113" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 25645031, 'start-iter': 1, 'wakeups': [25655174, 25665173, 25675174, 2...</msg>
<status status="PASS" starttime="20201110 08:35:30.108" endtime="20201110 08:35:30.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:30.115" endtime="20201110 08:35:30.119"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.979" endtime="20201110 08:35:30.121"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.973" endtime="20201110 08:35:30.122"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:30.128" level="INFO">${RESULT} = {'timer-count': 4, 'timer-interval': 10000, 'wakeups': [25655174, 25665173, 25675174, 25685173, 25695174, 25705173, 25715173, 25725173, 25735173, 25745173, 25755173, 25765173, 25775173, 25785173, 2579...</msg>
<status status="PASS" starttime="20201110 08:35:30.124" endtime="20201110 08:35:30.129"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:30.138" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:30.136" endtime="20201110 08:35:30.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:30.143" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:30.141" endtime="20201110 08:35:30.144"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.130" endtime="20201110 08:35:30.145"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:30.156" level="INFO">NAME: 4-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:30.153" endtime="20201110 08:35:30.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:30.160" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:30.158" endtime="20201110 08:35:30.161"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.147" endtime="20201110 08:35:30.163"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:30.173" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201110 08:35:30.171" endtime="20201110 08:35:30.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:30.177" level="INFO">VALUE: 25645031</msg>
<status status="PASS" starttime="20201110 08:35:30.175" endtime="20201110 08:35:30.178"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.164" endtime="20201110 08:35:30.180"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:30.190" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:30.188" endtime="20201110 08:35:30.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:30.201" level="INFO">VALUE: [25655174, 25665173, 25675174, 25685173, 25695174, 25705173, 25715173, 25725173, 25735173, 25745173, 25755173, 25765173, 25775173, 25785173, 25795174, 25805173, 25815173, 25825173, 25835173, 25845173, 25855173, 25865173, 25875173, 25885173, 25895173, 25905174, 25915173, 25925173, 25935173, 25945174, 25955174, 25965173, 25975174, 25985174, 25995173, 26005174, 26015173, 26025173, 26035173, 26045173, 26055174, 26065173, 26075173, 26085173, 26095173, 26105173, 26115174, 26125174, 26135174, 26145173, 26155174, 26165173, 26175173, 26185173, 26195173, 26205174, 26215174, 26225173, 26235173, 26245173, 26255173, 26265174, 26275173, 26285173, 26295173, 26305173, 26315174, 26325173, 26335173, 26345173, 26355173, 26365174, 26375173, 26385173, 26395174, 26405174, 26415174, 26425174, 26435173, 26445173, 26455173, 26465173, 26475174, 26485173, 26495173, 26505173, 26515173, 26525173, 26535174, 26545173, 26555174, 26565173, 26575174, 26585174, 26595174, 26605173, 26615173, 26625173, 26635173, 26645173]</msg>
<status status="PASS" starttime="20201110 08:35:30.192" endtime="20201110 08:35:30.202"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.181" endtime="20201110 08:35:30.203"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:30.221" endtime="20201110 08:35:30.656"></status>
</kw>
<msg timestamp="20201110 08:35:30.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046198569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.056364667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:30.218" endtime="20201110 08:35:30.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:30.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046198569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.056364667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:30.665" endtime="20201110 08:35:30.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:30.682" endtime="20201110 08:35:30.686"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.210" endtime="20201110 08:35:30.687"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.205" endtime="20201110 08:35:30.689"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:30.746" level="INFO">${RESULT} = {'time': [0.046198569, 0.056364667, 0.066385903, 0.076409361, 0.086430236, 0.096454528, 0.106476542, 0.116499681, 0.126522333, 0.136547153, 0.146571708, 0.156596347, 0.166620889, 0.176645861, 0.186669...</msg>
<status status="PASS" starttime="20201110 08:35:30.690" endtime="20201110 08:35:30.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:30.756" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201110 08:35:30.754" endtime="20201110 08:35:30.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:30.761" level="INFO">VALUE: 0.046198569</msg>
<status status="PASS" starttime="20201110 08:35:30.758" endtime="20201110 08:35:30.761"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.747" endtime="20201110 08:35:30.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:30.774" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:30.772" endtime="20201110 08:35:30.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:30.778" level="INFO">VALUE: [0.056364667, 0.066385903, 0.076409361, 0.086430236, 0.096454528, 0.106476542, 0.116499681, 0.126522333, 0.136547153, 0.146571708, 0.156596347, 0.166620889, 0.176645861, 0.186669681, 0.196695764, 0.206719167, 0.216743125, 0.226767528, 0.236791069, 0.246815125, 0.256839014, 0.266862667, 0.276886542, 0.286909972, 0.296933597, 0.306957403, 0.316981931, 0.327007306, 0.337033611, 0.347060181, 0.357086042, 0.367111278, 0.377138569, 0.387164139, 0.397188431, 0.407213736, 0.417237931, 0.427261389, 0.43728675, 0.447310889, 0.457336, 0.467359625, 0.477383861, 0.487408333, 0.497432931, 0.507456972, 0.517482472, 0.527506306, 0.537531264, 0.547556403, 0.557582542, 0.567607514, 0.577634819, 0.587661403, 0.597687028, 0.607713375, 0.617739958, 0.627763958, 0.637788597, 0.647812639, 0.657838375, 0.667865569, 0.67789025, 0.687917333, 0.697943931, 0.707969389, 0.717997042, 0.728021681, 0.738047069, 0.748071806, 0.758096167, 0.768122431, 0.778146944, 0.788173458, 0.798200806, 0.808225875, 0.818251986, 0.828276389, 0.838300569, 0.848327125, 0.858353583, 0.868378306, 0.878405625, 0.888429653, 0.89845375, 0.908478181, 0.918502875, 0.928527819, 0.938553819, 0.948578, 0.958604653, 0.968629389, 0.978656153, 0.988680681, 0.998706375, 1.008730417, 1.018755722, 1.028780403, 1.038805278, 1.048830361] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:30.776" endtime="20201110 08:35:30.779"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.764" endtime="20201110 08:35:30.781"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:30.787" endtime="20201110 08:35:30.790"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:30.795" endtime="20201110 08:35:30.817"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.791" endtime="20201110 08:35:30.818"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.783" endtime="20201110 08:35:30.821"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.970" endtime="20201110 08:35:30.821"></status>
</kw>
<msg timestamp="20201110 08:35:30.822" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:30.842" endtime="20201110 08:35:32.955"></status>
</kw>
<msg timestamp="20201110 08:35:32.956" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 28489371, 'start-iter': 1, 'wakeups': [28499514, 28509513, 28519514, 2...</msg>
<status status="PASS" starttime="20201110 08:35:30.839" endtime="20201110 08:35:32.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:32.963" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 28489371, 'start-iter': 1, 'wakeups': [28499514, 28509513, 28519514, 2...</msg>
<status status="PASS" starttime="20201110 08:35:32.958" endtime="20201110 08:35:32.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:32.965" endtime="20201110 08:35:32.969"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.832" endtime="20201110 08:35:32.971"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.827" endtime="20201110 08:35:32.972"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:32.978" level="INFO">${RESULT} = {'timer-count': 4, 'timer-interval': 10000, 'wakeups': [28499514, 28509513, 28519514, 28529513, 28539514, 28549513, 28559513, 28569514, 28579514, 28589513, 28599514, 28609513, 28619513, 28629513, 2863...</msg>
<status status="PASS" starttime="20201110 08:35:32.974" endtime="20201110 08:35:32.979"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:32.988" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:32.986" endtime="20201110 08:35:32.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:32.993" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:32.991" endtime="20201110 08:35:32.994"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.980" endtime="20201110 08:35:32.995"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:33.005" level="INFO">NAME: 4-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:33.003" endtime="20201110 08:35:33.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:33.012" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:33.008" endtime="20201110 08:35:33.013"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.996" endtime="20201110 08:35:33.014"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:33.024" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201110 08:35:33.022" endtime="20201110 08:35:33.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:33.029" level="INFO">VALUE: 28489371</msg>
<status status="PASS" starttime="20201110 08:35:33.027" endtime="20201110 08:35:33.029"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:33.016" endtime="20201110 08:35:33.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:33.041" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:33.039" endtime="20201110 08:35:33.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:33.046" level="INFO">VALUE: [28499514, 28509513, 28519514, 28529513, 28539514, 28549513, 28559513, 28569514, 28579514, 28589513, 28599514, 28609513, 28619513, 28629513, 28639513, 28649513, 28659513, 28669513, 28679514, 28689514, 28699514, 28709513, 28719514, 28729513, 28739514, 28749513, 28759513, 28769513, 28779514, 28789514, 28799513, 28809513, 28819513, 28829513, 28839514, 28849513, 28859513, 28869513, 28879513, 28889513, 28899514, 28909513, 28919513, 28929513, 28939513, 28949513, 28959513, 28969513, 28979514, 28989513, 28999514, 29009513, 29019513, 29029513, 29039513, 29049513, 29059513, 29069513, 29079513, 29089513, 29099514, 29109513, 29119514, 29129513, 29139513, 29149513, 29159514, 29169513, 29179514, 29189513, 29199513, 29209514, 29219514, 29229513, 29239514, 29249513, 29259514, 29269513, 29279513, 29289513, 29299514, 29309513, 29319513, 29329513, 29339513, 29349513, 29359514, 29369513, 29379513, 29389513, 29399513, 29409513, 29419513, 29429513, 29439513, 29449513, 29459513, 29469513, 29479513, 29489514]</msg>
<status status="PASS" starttime="20201110 08:35:33.043" endtime="20201110 08:35:33.047"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:33.032" endtime="20201110 08:35:33.048"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:33.065" endtime="20201110 08:35:33.415"></status>
</kw>
<msg timestamp="20201110 08:35:33.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038123361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04829375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:35:33.062" endtime="20201110 08:35:33.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:33.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038123361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04829375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:35:33.423" endtime="20201110 08:35:33.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:33.440" endtime="20201110 08:35:33.444"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:33.055" endtime="20201110 08:35:33.446"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:33.049" endtime="20201110 08:35:33.447"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:33.501" level="INFO">${RESULT} = {'time': [0.038123361, 0.04829375, 0.058320708, 0.068350708, 0.07837775, 0.088407903, 0.098435194, 0.108464542, 0.118493889, 0.128522181, 0.138549083, 0.148577417, 0.158604069, 0.168631194, 0.17865663...</msg>
<status status="PASS" starttime="20201110 08:35:33.449" endtime="20201110 08:35:33.502"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:33.512" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201110 08:35:33.509" endtime="20201110 08:35:33.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:33.516" level="INFO">VALUE: 0.038123361</msg>
<status status="PASS" starttime="20201110 08:35:33.514" endtime="20201110 08:35:33.518"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:33.503" endtime="20201110 08:35:33.520"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:33.530" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:33.528" endtime="20201110 08:35:33.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:33.535" level="INFO">VALUE: [0.04829375, 0.058320708, 0.068350708, 0.07837775, 0.088407903, 0.098435194, 0.108464542, 0.118493889, 0.128522181, 0.138549083, 0.148577417, 0.158604069, 0.168631194, 0.178656639, 0.188682583, 0.198708222, 0.208734458, 0.218760069, 0.228786917, 0.238811917, 0.248836306, 0.258861639, 0.268888375, 0.278913014, 0.288940306, 0.298964444, 0.308990667, 0.319017264, 0.329044611, 0.339069417, 0.349093472, 0.359118208, 0.369144458, 0.379170111, 0.389197931, 0.39922275, 0.409249389, 0.419275694, 0.429301569, 0.439327111, 0.449354792, 0.459379653, 0.469407486, 0.479434292, 0.489460931, 0.499487403, 0.509514889, 0.519540389, 0.529567833, 0.539592833, 0.549620375, 0.559646, 0.569673319, 0.579700153, 0.589726764, 0.599753736, 0.609781778, 0.619807875, 0.629835625, 0.639862194, 0.649889347, 0.659914917, 0.669942417, 0.679967917, 0.689993806, 0.700019931, 0.710046292, 0.7200705, 0.730097542, 0.740123931, 0.750150972, 0.760177389, 0.770203236, 0.780227875, 0.790255042, 0.800279625, 0.810307875, 0.820332361, 0.830358917, 0.84038475, 0.850411653, 0.860436667, 0.870463431, 0.880489944, 0.890517639, 0.900547514, 0.910575736, 0.920600375, 0.930627, 0.940653639, 0.950678847, 0.960704597, 0.970731181, 0.980757972, 0.990783875, 1.000810903, 1.010837236, 1.020863333, 1.030890153, 1.040917458] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:33.533" endtime="20201110 08:35:33.536"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:33.521" endtime="20201110 08:35:33.537"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:33.544" endtime="20201110 08:35:33.547"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:33.553" endtime="20201110 08:35:33.575"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:33.549" endtime="20201110 08:35:33.577"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:33.540" endtime="20201110 08:35:33.578"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.823" endtime="20201110 08:35:33.579"></status>
</kw>
<msg timestamp="20201110 08:35:33.579" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:33.600" endtime="20201110 08:35:35.712"></status>
</kw>
<msg timestamp="20201110 08:35:35.713" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 31239655, 'start-iter': 1, 'wakeups': [31249798, 31259798, 31269797, 3...</msg>
<status status="PASS" starttime="20201110 08:35:33.596" endtime="20201110 08:35:35.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:35.721" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 31239655, 'start-iter': 1, 'wakeups': [31249798, 31259798, 31269797, 3...</msg>
<status status="PASS" starttime="20201110 08:35:35.716" endtime="20201110 08:35:35.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:35.723" endtime="20201110 08:35:35.727"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:33.589" endtime="20201110 08:35:35.728"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:33.584" endtime="20201110 08:35:35.730"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:35.736" level="INFO">${RESULT} = {'timer-count': 4, 'timer-interval': 10000, 'wakeups': [31249798, 31259798, 31269797, 31279797, 31289797, 31299797, 31309797, 31319797, 31329797, 31339797, 31349797, 31359798, 31369797, 31379797, 3138...</msg>
<status status="PASS" starttime="20201110 08:35:35.731" endtime="20201110 08:35:35.736"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:35.746" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:35.743" endtime="20201110 08:35:35.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:35.750" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:35.748" endtime="20201110 08:35:35.751"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.737" endtime="20201110 08:35:35.752"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:35.762" level="INFO">NAME: 4-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:35.760" endtime="20201110 08:35:35.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:35.767" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:35.764" endtime="20201110 08:35:35.767"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.754" endtime="20201110 08:35:35.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:35.779" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201110 08:35:35.777" endtime="20201110 08:35:35.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:35.784" level="INFO">VALUE: 31239655</msg>
<status status="PASS" starttime="20201110 08:35:35.781" endtime="20201110 08:35:35.784"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.770" endtime="20201110 08:35:35.786"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:35.796" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:35.793" endtime="20201110 08:35:35.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:35.800" level="INFO">VALUE: [31249798, 31259798, 31269797, 31279797, 31289797, 31299797, 31309797, 31319797, 31329797, 31339797, 31349797, 31359798, 31369797, 31379797, 31389797, 31399797, 31409798, 31419797, 31429797, 31439797, 31449797, 31459797, 31469797, 31479797, 31489798, 31499797, 31509797, 31519797, 31529797, 31539797, 31549798, 31559797, 31569798, 31579798, 31589798, 31599797, 31609798, 31619797, 31629797, 31639797, 31649798, 31659798, 31669797, 31679797, 31689797, 31699797, 31709797, 31719797, 31729797, 31739797, 31749797, 31759797, 31769798, 31779797, 31789798, 31799797, 31809798, 31819798, 31829798, 31839798, 31849797, 31859797, 31869797, 31879797, 31889797, 31899798, 31909797, 31919797, 31929797, 31939797, 31949798, 31959797, 31969797, 31979797, 31989797, 31999797, 32009797, 32019797, 32029797, 32039797, 32049797, 32059797, 32069798, 32079797, 32089797, 32099797, 32109797, 32119797, 32129797, 32139797, 32149798, 32159798, 32169797, 32179797, 32189797, 32199797, 32209797, 32219797, 32229797, 32239797]</msg>
<status status="PASS" starttime="20201110 08:35:35.798" endtime="20201110 08:35:35.801"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.787" endtime="20201110 08:35:35.803"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:35.821" endtime="20201110 08:35:36.184"></status>
</kw>
<msg timestamp="20201110 08:35:36.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037426917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047596667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:35.817" endtime="20201110 08:35:36.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:36.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037426917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047596667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:36.193" endtime="20201110 08:35:36.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:36.211" endtime="20201110 08:35:36.215"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.809" endtime="20201110 08:35:36.216"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.804" endtime="20201110 08:35:36.218"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:36.272" level="INFO">${RESULT} = {'time': [0.037426917, 0.047596667, 0.057621486, 0.067646736, 0.077672222, 0.0876985, 0.097725056, 0.107750986, 0.117776861, 0.127801819, 0.137827, 0.147853694, 0.157882, 0.167908639, 0.177935431, 0.1...</msg>
<status status="PASS" starttime="20201110 08:35:36.219" endtime="20201110 08:35:36.273"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:36.283" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201110 08:35:36.281" endtime="20201110 08:35:36.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:36.287" level="INFO">VALUE: 0.037426917</msg>
<status status="PASS" starttime="20201110 08:35:36.285" endtime="20201110 08:35:36.288"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:36.274" endtime="20201110 08:35:36.290"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:36.301" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:36.298" endtime="20201110 08:35:36.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:36.305" level="INFO">VALUE: [0.047596667, 0.057621486, 0.067646736, 0.077672222, 0.0876985, 0.097725056, 0.107750986, 0.117776861, 0.127801819, 0.137827, 0.147853694, 0.157882, 0.167908639, 0.177935431, 0.187962056, 0.197987972, 0.208015222, 0.218040778, 0.228066597, 0.238092389, 0.248119278, 0.258145347, 0.268173486, 0.278200611, 0.288229125, 0.298255028, 0.308282069, 0.318308389, 0.328334736, 0.338360056, 0.348386944, 0.358411111, 0.368438694, 0.378465333, 0.388492639, 0.398517778, 0.408544472, 0.418569958, 0.428597931, 0.438624306, 0.448651944, 0.458678681, 0.468705264, 0.478731861, 0.488759083, 0.498785639, 0.508810833, 0.518835819, 0.528861222, 0.538887875, 0.54891425, 0.558940972, 0.5689685, 0.578994097, 0.5890235, 0.599050111, 0.609078097, 0.619103806, 0.629131028, 0.639156208, 0.649181028, 0.659207056, 0.669233611, 0.679260306, 0.689286958, 0.699315097, 0.709341722, 0.719369625, 0.729395222, 0.739421194, 0.749447264, 0.759471472, 0.769496333, 0.779522403, 0.789547917, 0.799573333, 0.809597972, 0.819622694, 0.829647167, 0.839671069, 0.849696875, 0.859722778, 0.86974925, 0.879773403, 0.889798931, 0.899823903, 0.909848569, 0.919874, 0.929900333, 0.939926264, 0.949953319, 0.959978736, 0.970004653, 0.980031361, 0.990058681, 1.000086736, 1.010114486, 1.020142125, 1.030169528, 1.040196833] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:36.303" endtime="20201110 08:35:36.306"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:36.291" endtime="20201110 08:35:36.308"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:36.314" endtime="20201110 08:35:36.316"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:36.322" endtime="20201110 08:35:36.344"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:36.318" endtime="20201110 08:35:36.345"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:36.309" endtime="20201110 08:35:36.347"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:33.580" endtime="20201110 08:35:36.348"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.965" endtime="20201110 08:35:36.348"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.963" endtime="20201110 08:35:36.348"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:35:36.355" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:36.379" endtime="20201110 08:35:38.491"></status>
</kw>
<msg timestamp="20201110 08:35:38.492" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 34012025, 'start-iter': 1, 'wakeups': [34022205, 34032203, 34042205, 3...</msg>
<status status="PASS" starttime="20201110 08:35:36.375" endtime="20201110 08:35:38.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:38.499" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 34012025, 'start-iter': 1, 'wakeups': [34022205, 34032203, 34042205, 3...</msg>
<status status="PASS" starttime="20201110 08:35:38.494" endtime="20201110 08:35:38.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:38.502" endtime="20201110 08:35:38.505"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:36.365" endtime="20201110 08:35:38.507"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:36.360" endtime="20201110 08:35:38.509"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:38.515" level="INFO">${RESULT} = {'timer-count': 5, 'timer-interval': 10000, 'wakeups': [34022205, 34032203, 34042205, 34052203, 34062205, 34072203, 34082205, 34092205, 34102205, 34112203, 34122203, 34132203, 34142203, 34152203, 3416...</msg>
<status status="PASS" starttime="20201110 08:35:38.511" endtime="20201110 08:35:38.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:38.525" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:38.523" endtime="20201110 08:35:38.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:38.530" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:38.528" endtime="20201110 08:35:38.531"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:38.517" endtime="20201110 08:35:38.532"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:38.542" level="INFO">NAME: 5-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:38.540" endtime="20201110 08:35:38.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:38.546" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:38.544" endtime="20201110 08:35:38.547"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:38.533" endtime="20201110 08:35:38.549"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:38.560" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201110 08:35:38.557" endtime="20201110 08:35:38.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:38.564" level="INFO">VALUE: 34012025</msg>
<status status="PASS" starttime="20201110 08:35:38.562" endtime="20201110 08:35:38.565"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:38.550" endtime="20201110 08:35:38.566"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:38.576" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:38.574" endtime="20201110 08:35:38.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:38.582" level="INFO">VALUE: [34022205, 34032203, 34042205, 34052203, 34062205, 34072203, 34082205, 34092205, 34102205, 34112203, 34122203, 34132203, 34142203, 34152203, 34162203, 34172203, 34182203, 34192205, 34202205, 34212203, 34222204, 34232203, 34242205, 34252203, 34262203, 34272203, 34282203, 34292203, 34302205, 34312205, 34322205, 34332205, 34342203, 34352203, 34362205, 34372203, 34382203, 34392203, 34402205, 34412203, 34422203, 34432205, 34442205, 34452205, 34462203, 34472203, 34482203, 34492203, 34502205, 34512203, 34522205, 34532203, 34542203, 34552205, 34562203, 34572203, 34582205, 34592203, 34602203, 34612205, 34622205, 34632203, 34642203, 34652203, 34662204, 34672203, 34682205, 34692205, 34702203, 34712203, 34722205, 34732203, 34742203, 34752203, 34762203, 34772205, 34782203, 34792203, 34802205, 34812203, 34822203, 34832203, 34842203, 34852203, 34862203, 34872203, 34882203, 34892203, 34902203, 34912203, 34922204, 34932205, 34942205, 34952205, 34962205, 34972203, 34982203, 34992205, 35002203, 35012205]</msg>
<status status="PASS" starttime="20201110 08:35:38.579" endtime="20201110 08:35:38.582"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:38.567" endtime="20201110 08:35:38.584"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:38.600" endtime="20201110 08:35:38.946"></status>
</kw>
<msg timestamp="20201110 08:35:38.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047525708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.057732708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:38.597" endtime="20201110 08:35:38.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:38.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047525708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.057732708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:38.955" endtime="20201110 08:35:38.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:38.972" endtime="20201110 08:35:38.976"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:38.590" endtime="20201110 08:35:38.978"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:38.585" endtime="20201110 08:35:38.979"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:39.035" level="INFO">${RESULT} = {'time': [0.047525708, 0.057732708, 0.067756653, 0.077785125, 0.087809611, 0.097838292, 0.107861972, 0.1178895, 0.127915569, 0.137941931, 0.147965361, 0.1579925, 0.168020125, 0.178048236, 0.188077028,...</msg>
<status status="PASS" starttime="20201110 08:35:38.981" endtime="20201110 08:35:39.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:39.046" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201110 08:35:39.044" endtime="20201110 08:35:39.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:39.050" level="INFO">VALUE: 0.047525708</msg>
<status status="PASS" starttime="20201110 08:35:39.048" endtime="20201110 08:35:39.051"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:39.037" endtime="20201110 08:35:39.053"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:39.063" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:39.061" endtime="20201110 08:35:39.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:39.068" level="INFO">VALUE: [0.057732708, 0.067756653, 0.077785125, 0.087809611, 0.097838292, 0.107861972, 0.1178895, 0.127915569, 0.137941931, 0.147965361, 0.1579925, 0.168020125, 0.178048236, 0.188077028, 0.198105208, 0.20813175, 0.21815875, 0.228187458, 0.238214681, 0.248239903, 0.258267903, 0.268293292, 0.278322514, 0.288346583, 0.298371944, 0.308397417, 0.318422958, 0.328448833, 0.338476486, 0.348501514, 0.358527986, 0.368553417, 0.378577042, 0.388604014, 0.398633181, 0.408657569, 0.418684472, 0.428710806, 0.438738514, 0.448761236, 0.458786722, 0.468813542, 0.478839597, 0.488865806, 0.498891153, 0.508918681, 0.518946125, 0.528973167, 0.539001708, 0.549026514, 0.559054556, 0.569079028, 0.579106292, 0.589134569, 0.599159319, 0.609186806, 0.619215806, 0.629240889, 0.639267458, 0.649296167, 0.659322653, 0.669346875, 0.679372792, 0.689399056, 0.699426125, 0.709450847, 0.719477931, 0.729503347, 0.739526597, 0.749551042, 0.759578431, 0.769601625, 0.779627264, 0.789653, 0.799678569, 0.809705208, 0.819728167, 0.829751569, 0.839776917, 0.849799028, 0.859823931, 0.869847653, 0.879871181, 0.889894125, 0.899917778, 0.909941014, 0.919964875, 0.929989625, 0.940014556, 0.950038681, 0.960065167, 0.970092611, 0.980118194, 0.990144222, 1.00017125, 1.010196278, 1.020224542, 1.030252139, 1.040276167, 1.050303319] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:39.066" endtime="20201110 08:35:39.069"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:39.054" endtime="20201110 08:35:39.070"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:39.077" endtime="20201110 08:35:39.080"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:39.085" endtime="20201110 08:35:39.107"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:39.081" endtime="20201110 08:35:39.108"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:39.072" endtime="20201110 08:35:39.110"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:36.356" endtime="20201110 08:35:39.110"></status>
</kw>
<msg timestamp="20201110 08:35:39.111" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:39.132" endtime="20201110 08:35:41.244"></status>
</kw>
<msg timestamp="20201110 08:35:41.245" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 36758126, 'start-iter': 1, 'wakeups': [36768306, 36778304, 36788304, 3...</msg>
<status status="PASS" starttime="20201110 08:35:39.128" endtime="20201110 08:35:41.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:41.252" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 36758126, 'start-iter': 1, 'wakeups': [36768306, 36778304, 36788304, 3...</msg>
<status status="PASS" starttime="20201110 08:35:41.247" endtime="20201110 08:35:41.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:41.254" endtime="20201110 08:35:41.258"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:39.121" endtime="20201110 08:35:41.259"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:39.116" endtime="20201110 08:35:41.261"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:41.267" level="INFO">${RESULT} = {'timer-count': 5, 'timer-interval': 10000, 'wakeups': [36768306, 36778304, 36788304, 36798304, 36808306, 36818304, 36828306, 36838306, 36848304, 36858304, 36868306, 36878304, 36888306, 36898304, 3690...</msg>
<status status="PASS" starttime="20201110 08:35:41.262" endtime="20201110 08:35:41.267"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:41.277" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:41.274" endtime="20201110 08:35:41.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:41.281" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:41.279" endtime="20201110 08:35:41.282"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:41.268" endtime="20201110 08:35:41.291"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:41.301" level="INFO">NAME: 5-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:41.298" endtime="20201110 08:35:41.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:41.305" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:41.303" endtime="20201110 08:35:41.306"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:41.292" endtime="20201110 08:35:41.307"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:41.319" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201110 08:35:41.317" endtime="20201110 08:35:41.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:41.324" level="INFO">VALUE: 36758126</msg>
<status status="PASS" starttime="20201110 08:35:41.321" endtime="20201110 08:35:41.324"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:41.309" endtime="20201110 08:35:41.326"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:41.336" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:41.334" endtime="20201110 08:35:41.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:41.344" level="INFO">VALUE: [36768306, 36778304, 36788304, 36798304, 36808306, 36818304, 36828306, 36838306, 36848304, 36858304, 36868306, 36878304, 36888306, 36898304, 36908304, 36918304, 36928304, 36938304, 36948304, 36958304, 36968304, 36978304, 36988306, 36998304, 37008304, 37018304, 37028304, 37038304, 37048304, 37058304, 37068306, 37078304, 37088304, 37098304, 37108304, 37118306, 37128306, 37138304, 37148305, 37158304, 37168306, 37178304, 37188306, 37198304, 37208304, 37218306, 37228304, 37238306, 37248304, 37258304, 37268304, 37278304, 37288304, 37298304, 37308304, 37318304, 37328306, 37338304, 37348304, 37358304, 37368305, 37378304, 37388306, 37398304, 37408304, 37418306, 37428304, 37438304, 37448304, 37458304, 37468304, 37478306, 37488306, 37498304, 37508306, 37518306, 37528306, 37538304, 37548306, 37558304, 37568306, 37578304, 37588306, 37598304, 37608304, 37618304, 37628306, 37638304, 37648304, 37658304, 37668306, 37678304, 37688306, 37698304, 37708304, 37718304, 37728306, 37738304, 37748304, 37758304]</msg>
<status status="PASS" starttime="20201110 08:35:41.340" endtime="20201110 08:35:41.345"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:41.327" endtime="20201110 08:35:41.347"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:41.365" endtime="20201110 08:35:41.716"></status>
</kw>
<msg timestamp="20201110 08:35:41.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037445264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047650736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:41.362" endtime="20201110 08:35:41.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:41.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037445264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047650736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:41.725" endtime="20201110 08:35:41.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:41.743" endtime="20201110 08:35:41.747"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:41.354" endtime="20201110 08:35:41.748"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:41.348" endtime="20201110 08:35:41.750"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:41.806" level="INFO">${RESULT} = {'time': [0.037445264, 0.047650736, 0.057672917, 0.067696736, 0.077720722, 0.087747097, 0.097771514, 0.107799125, 0.117824806, 0.127848167, 0.137872486, 0.147899222, 0.157921889, 0.167949792, 0.177974...</msg>
<status status="PASS" starttime="20201110 08:35:41.751" endtime="20201110 08:35:41.807"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:41.817" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201110 08:35:41.815" endtime="20201110 08:35:41.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:41.822" level="INFO">VALUE: 0.037445264</msg>
<status status="PASS" starttime="20201110 08:35:41.819" endtime="20201110 08:35:41.822"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:41.808" endtime="20201110 08:35:41.824"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:41.836" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:41.833" endtime="20201110 08:35:41.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:41.842" level="INFO">VALUE: [0.047650736, 0.057672917, 0.067696736, 0.077720722, 0.087747097, 0.097771514, 0.107799125, 0.117824806, 0.127848167, 0.137872486, 0.147899222, 0.157921889, 0.167949792, 0.177974, 0.187999542, 0.198024847, 0.208049944, 0.218075083, 0.228100028, 0.238124028, 0.248149486, 0.258174972, 0.268202903, 0.278226764, 0.288252167, 0.298276764, 0.308302361, 0.318327681, 0.328354222, 0.338379167, 0.348405875, 0.358429542, 0.368455028, 0.378478958, 0.388504194, 0.398530722, 0.408556083, 0.418579458, 0.428607625, 0.438634625, 0.448663403, 0.458688028, 0.468716639, 0.478740389, 0.488767347, 0.498795181, 0.508819583, 0.518848319, 0.528873264, 0.538899333, 0.548925597, 0.558951722, 0.568978389, 0.579005403, 0.589032861, 0.59905875, 0.609086403, 0.619109722, 0.629136458, 0.639162125, 0.649189125, 0.659212708, 0.669239431, 0.679262042, 0.689286528, 0.699313028, 0.709336042, 0.719360069, 0.729385014, 0.739410139, 0.749436583, 0.759464778, 0.769491528, 0.779515778, 0.789544028, 0.79957025, 0.809596597, 0.819621681, 0.829649319, 0.839672917, 0.849700792, 0.859724056, 0.869752625, 0.879778083, 0.889803472, 0.899828403, 0.909855444, 0.919877486, 0.929903167, 0.939928222, 0.949956139, 0.959981194, 0.970009486, 0.980034639, 0.990061583, 1.00008825, 1.010116167, 1.020140222, 1.030163917, 1.040188264] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:41.838" endtime="20201110 08:35:41.843"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:41.825" endtime="20201110 08:35:41.845"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:41.851" endtime="20201110 08:35:41.854"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:41.859" endtime="20201110 08:35:41.881"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:41.855" endtime="20201110 08:35:41.883"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:41.846" endtime="20201110 08:35:41.884"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:39.112" endtime="20201110 08:35:41.885"></status>
</kw>
<msg timestamp="20201110 08:35:41.886" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:41.907" endtime="20201110 08:35:44.020"></status>
</kw>
<msg timestamp="20201110 08:35:44.021" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 39526417, 'start-iter': 1, 'wakeups': [39536598, 39546595, 39556595, 3...</msg>
<status status="PASS" starttime="20201110 08:35:41.903" endtime="20201110 08:35:44.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:44.028" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 39526417, 'start-iter': 1, 'wakeups': [39536598, 39546595, 39556595, 3...</msg>
<status status="PASS" starttime="20201110 08:35:44.024" endtime="20201110 08:35:44.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:44.031" endtime="20201110 08:35:44.034"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:41.896" endtime="20201110 08:35:44.036"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:41.891" endtime="20201110 08:35:44.037"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:44.044" level="INFO">${RESULT} = {'timer-count': 5, 'timer-interval': 10000, 'wakeups': [39536598, 39546595, 39556595, 39566595, 39576597, 39586595, 39596595, 39606595, 39616597, 39626595, 39636595, 39646595, 39656595, 39666595, 3967...</msg>
<status status="PASS" starttime="20201110 08:35:44.039" endtime="20201110 08:35:44.044"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:44.054" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:44.052" endtime="20201110 08:35:44.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:44.059" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:44.056" endtime="20201110 08:35:44.059"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:44.046" endtime="20201110 08:35:44.061"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:44.071" level="INFO">NAME: 5-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:44.069" endtime="20201110 08:35:44.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:44.076" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:44.074" endtime="20201110 08:35:44.077"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:44.062" endtime="20201110 08:35:44.078"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:44.089" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201110 08:35:44.086" endtime="20201110 08:35:44.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:44.094" level="INFO">VALUE: 39526417</msg>
<status status="PASS" starttime="20201110 08:35:44.092" endtime="20201110 08:35:44.094"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:44.080" endtime="20201110 08:35:44.096"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:44.106" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:44.104" endtime="20201110 08:35:44.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:44.111" level="INFO">VALUE: [39536598, 39546595, 39556595, 39566595, 39576597, 39586595, 39596595, 39606595, 39616597, 39626595, 39636595, 39646595, 39656595, 39666595, 39676595, 39686595, 39696597, 39706595, 39716595, 39726595, 39736595, 39746595, 39756597, 39766595, 39776595, 39786595, 39796595, 39806595, 39816595, 39826595, 39836597, 39846597, 39856597, 39866595, 39876595, 39886597, 39896597, 39906595, 39916595, 39926595, 39936597, 39946595, 39956595, 39966595, 39976595, 39986597, 39996595, 40006595, 40016597, 40026595, 40036597, 40046595, 40056595, 40066595, 40076595, 40086597, 40096595, 40106595, 40116597, 40126595, 40136597, 40146595, 40156597, 40166595, 40176595, 40186595, 40196595, 40206597, 40216595, 40226595, 40236595, 40246597, 40256597, 40266597, 40276597, 40286595, 40296595, 40306595, 40316595, 40326595, 40336595, 40346597, 40356597, 40366595, 40376597, 40386595, 40396597, 40406595, 40416595, 40426595, 40436597, 40446596, 40456595, 40466595, 40476597, 40486595, 40496595, 40506595, 40516595, 40526595]</msg>
<status status="PASS" starttime="20201110 08:35:44.109" endtime="20201110 08:35:44.112"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:44.097" endtime="20201110 08:35:44.114"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:44.133" endtime="20201110 08:35:44.494"></status>
</kw>
<msg timestamp="20201110 08:35:44.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038203389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048408833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:44.127" endtime="20201110 08:35:44.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:44.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038203389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048408833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:44.503" endtime="20201110 08:35:44.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:44.521" endtime="20201110 08:35:44.525"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:44.120" endtime="20201110 08:35:44.526"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:44.115" endtime="20201110 08:35:44.528"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:44.583" level="INFO">${RESULT} = {'time': [0.038203389, 0.048408833, 0.058429472, 0.068454542, 0.078479361, 0.088506139, 0.098530028, 0.108556903, 0.118583069, 0.128610292, 0.138632319, 0.148656903, 0.158681833, 0.168707028, 0.178731...</msg>
<status status="PASS" starttime="20201110 08:35:44.529" endtime="20201110 08:35:44.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:44.594" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201110 08:35:44.592" endtime="20201110 08:35:44.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:44.598" level="INFO">VALUE: 0.038203389</msg>
<status status="PASS" starttime="20201110 08:35:44.596" endtime="20201110 08:35:44.599"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:44.585" endtime="20201110 08:35:44.601"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:44.612" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:44.609" endtime="20201110 08:35:44.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:44.616" level="INFO">VALUE: [0.048408833, 0.058429472, 0.068454542, 0.078479361, 0.088506139, 0.098530028, 0.108556903, 0.118583069, 0.128610292, 0.138632319, 0.148656903, 0.158681833, 0.168707028, 0.178731153, 0.188756125, 0.198780486, 0.208807944, 0.218830639, 0.228856042, 0.238881236, 0.248905167, 0.258929611, 0.268957389, 0.278981167, 0.289006653, 0.299031153, 0.309056528, 0.319081181, 0.329107292, 0.339131917, 0.349159569, 0.359184417, 0.369210167, 0.379233292, 0.389257958, 0.399284222, 0.409308458, 0.419330528, 0.429354986, 0.439380181, 0.449407778, 0.459430431, 0.469455375, 0.479481236, 0.489506431, 0.499533167, 0.509556486, 0.519581806, 0.529610514, 0.539633458, 0.549660597, 0.559682653, 0.56970625, 0.579730694, 0.589755903, 0.599782903, 0.609806569, 0.619830583, 0.629856917, 0.639878833, 0.649905444, 0.659928125, 0.669955514, 0.679979306, 0.690005097, 0.700029653, 0.710055069, 0.720082472, 0.730105903, 0.740130903, 0.750155778, 0.760181889, 0.770207486, 0.780232028, 0.790257167, 0.800280042, 0.810305722, 0.820330764, 0.83035575, 0.840380292, 0.850405806, 0.860433486, 0.870460097, 0.880483931, 0.890512292, 0.900536292, 0.910564806, 0.920587764, 0.930613278, 0.940639236, 0.950667333, 0.960692319, 0.970717639, 0.980743375, 0.990772042, 1.000795597, 1.010822528, 1.020849194, 1.030876264, 1.040903583] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:44.614" endtime="20201110 08:35:44.618"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:44.602" endtime="20201110 08:35:44.619"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:44.626" endtime="20201110 08:35:44.628"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:44.634" endtime="20201110 08:35:44.658"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:44.630" endtime="20201110 08:35:44.661"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:44.621" endtime="20201110 08:35:44.664"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:41.887" endtime="20201110 08:35:44.665"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:36.351" endtime="20201110 08:35:44.665"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:36.349" endtime="20201110 08:35:44.666"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:35:44.671" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:44.695" endtime="20201110 08:35:46.807"></status>
</kw>
<msg timestamp="20201110 08:35:46.808" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 42307865, 'start-iter': 1, 'wakeups': [42318082, 42328081, 42338081, 4...</msg>
<status status="PASS" starttime="20201110 08:35:44.690" endtime="20201110 08:35:46.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:46.815" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 42307865, 'start-iter': 1, 'wakeups': [42318082, 42328081, 42338081, 4...</msg>
<status status="PASS" starttime="20201110 08:35:46.810" endtime="20201110 08:35:46.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:46.817" endtime="20201110 08:35:46.821"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:44.682" endtime="20201110 08:35:46.823"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:44.677" endtime="20201110 08:35:46.824"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:46.830" level="INFO">${RESULT} = {'timer-count': 6, 'timer-interval': 10000, 'wakeups': [42318082, 42328081, 42338081, 42348081, 42358083, 42368083, 42378081, 42388081, 42398081, 42408081, 42418083, 42428081, 42438081, 42448083, 4245...</msg>
<status status="PASS" starttime="20201110 08:35:46.825" endtime="20201110 08:35:46.831"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:46.840" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:46.838" endtime="20201110 08:35:46.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:46.845" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:46.842" endtime="20201110 08:35:46.845"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:46.832" endtime="20201110 08:35:46.847"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:46.857" level="INFO">NAME: 6-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:46.855" endtime="20201110 08:35:46.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:46.861" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:46.859" endtime="20201110 08:35:46.862"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:46.848" endtime="20201110 08:35:46.864"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:46.873" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201110 08:35:46.871" endtime="20201110 08:35:46.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:46.878" level="INFO">VALUE: 42307865</msg>
<status status="PASS" starttime="20201110 08:35:46.876" endtime="20201110 08:35:46.879"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:46.865" endtime="20201110 08:35:46.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:46.890" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:46.888" endtime="20201110 08:35:46.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:46.901" level="INFO">VALUE: [42318082, 42328081, 42338081, 42348081, 42358083, 42368083, 42378081, 42388081, 42398081, 42408081, 42418083, 42428081, 42438081, 42448083, 42458083, 42468081, 42478083, 42488082, 42498081, 42508081, 42518081, 42528081, 42538083, 42548081, 42558081, 42568081, 42578081, 42588081, 42598083, 42608081, 42618083, 42628081, 42638083, 42648081, 42658083, 42668083, 42678081, 42688083, 42698081, 42708081, 42718081, 42728081, 42738083, 42748083, 42758081, 42768081, 42778083, 42788081, 42798081, 42808081, 42818083, 42828081, 42838081, 42848081, 42858081, 42868081, 42878083, 42888081, 42898083, 42908081, 42918081, 42928081, 42938083, 42948081, 42958083, 42968081, 42978081, 42988083, 42998081, 43008081, 43018081, 43028081, 43038083, 43048081, 43058081, 43068083, 43078081, 43088081, 43098081, 43108081, 43118083, 43128081, 43138081, 43148083, 43158083, 43168081, 43178081, 43188081, 43198081, 43208081, 43218081, 43228081, 43238083, 43248083, 43258083, 43268081, 43278083, 43288081, 43298081, 43308081]</msg>
<status status="PASS" starttime="20201110 08:35:46.892" endtime="20201110 08:35:46.901"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:46.881" endtime="20201110 08:35:46.903"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:46.919" endtime="20201110 08:35:47.264"></status>
</kw>
<msg timestamp="20201110 08:35:47.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051472444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.061714583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:46.916" endtime="20201110 08:35:47.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:47.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051472444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.061714583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:47.272" endtime="20201110 08:35:47.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:47.289" endtime="20201110 08:35:47.293"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:46.909" endtime="20201110 08:35:47.295"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:46.904" endtime="20201110 08:35:47.296"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:47.351" level="INFO">${RESULT} = {'time': [0.051472444, 0.061714583, 0.071738, 0.081762722, 0.091787306, 0.101813611, 0.111837486, 0.121860042, 0.131885014, 0.141910083, 0.151934931, 0.161962333, 0.171984222, 0.182007931, 0.192032694...</msg>
<status status="PASS" starttime="20201110 08:35:47.298" endtime="20201110 08:35:47.352"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:47.365" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201110 08:35:47.362" endtime="20201110 08:35:47.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:47.371" level="INFO">VALUE: 0.051472444</msg>
<status status="PASS" starttime="20201110 08:35:47.368" endtime="20201110 08:35:47.371"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:47.353" endtime="20201110 08:35:47.373"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:47.384" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:47.382" endtime="20201110 08:35:47.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:47.389" level="INFO">VALUE: [0.061714583, 0.071738, 0.081762722, 0.091787306, 0.101813611, 0.111837486, 0.121860042, 0.131885014, 0.141910083, 0.151934931, 0.161962333, 0.171984222, 0.182007931, 0.192032694, 0.202056389, 0.212077486, 0.222103153, 0.232126597, 0.242150042, 0.252173778, 0.262197042, 0.272221486, 0.282248694, 0.292271111, 0.302296, 0.312319847, 0.322343889, 0.332367069, 0.342391875, 0.352412014, 0.362436556, 0.372458375, 0.382484167, 0.392506764, 0.402532, 0.412556861, 0.422581069, 0.43260825, 0.442630208, 0.452655319, 0.462681306, 0.472706125, 0.482733931, 0.492759222, 0.502782375, 0.512808069, 0.522836028, 0.532859208, 0.542884417, 0.552908917, 0.562936181, 0.572958389, 0.582984458, 0.593010764, 0.603037042, 0.613062458, 0.623090764, 0.633113569, 0.643141583, 0.653164347, 0.663190528, 0.673216111, 0.683242833, 0.693264583, 0.703290639, 0.713312722, 0.723336569, 0.733362736, 0.74338525, 0.753410139, 0.763434792, 0.773458792, 0.783484806, 0.793507028, 0.803530472, 0.813555931, 0.823577111, 0.83360125, 0.843626194, 0.853651653, 0.863678569, 0.873701306, 0.883725972, 0.893753278, 0.903777667, 0.913799861, 0.923823931, 0.933848333, 0.943873458, 0.953898056, 0.963923653, 0.973947542, 0.983973875, 0.993997611, 1.004021333, 1.014042153, 1.024068736, 1.034090333, 1.044113833, 1.054137667] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:47.386" endtime="20201110 08:35:47.389"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:47.374" endtime="20201110 08:35:47.391"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:47.397" endtime="20201110 08:35:47.400"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:47.406" endtime="20201110 08:35:47.427"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:47.401" endtime="20201110 08:35:47.429"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:47.393" endtime="20201110 08:35:47.431"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:44.673" endtime="20201110 08:35:47.432"></status>
</kw>
<msg timestamp="20201110 08:35:47.432" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:47.453" endtime="20201110 08:35:49.564"></status>
</kw>
<msg timestamp="20201110 08:35:49.566" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 45059396, 'start-iter': 1, 'wakeups': [45069613, 45079612, 45089612, 4...</msg>
<status status="PASS" starttime="20201110 08:35:47.450" endtime="20201110 08:35:49.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:49.573" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 45059396, 'start-iter': 1, 'wakeups': [45069613, 45079612, 45089612, 4...</msg>
<status status="PASS" starttime="20201110 08:35:49.568" endtime="20201110 08:35:49.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:49.575" endtime="20201110 08:35:49.578"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:47.442" endtime="20201110 08:35:49.580"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:47.437" endtime="20201110 08:35:49.582"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:49.588" level="INFO">${RESULT} = {'timer-count': 6, 'timer-interval': 10000, 'wakeups': [45069613, 45079612, 45089612, 45099614, 45109614, 45119614, 45129612, 45139612, 45149612, 45159612, 45169614, 45179614, 45189614, 45199612, 4520...</msg>
<status status="PASS" starttime="20201110 08:35:49.583" endtime="20201110 08:35:49.588"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:49.597" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:49.595" endtime="20201110 08:35:49.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:49.602" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:49.600" endtime="20201110 08:35:49.603"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:49.589" endtime="20201110 08:35:49.604"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:49.614" level="INFO">NAME: 6-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:49.612" endtime="20201110 08:35:49.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:49.621" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:49.617" endtime="20201110 08:35:49.621"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:49.606" endtime="20201110 08:35:49.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:49.633" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201110 08:35:49.631" endtime="20201110 08:35:49.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:49.637" level="INFO">VALUE: 45059396</msg>
<status status="PASS" starttime="20201110 08:35:49.635" endtime="20201110 08:35:49.638"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:49.624" endtime="20201110 08:35:49.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:49.649" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:49.647" endtime="20201110 08:35:49.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:49.654" level="INFO">VALUE: [45069613, 45079612, 45089612, 45099614, 45109614, 45119614, 45129612, 45139612, 45149612, 45159612, 45169614, 45179614, 45189614, 45199612, 45209612, 45219612, 45229612, 45239612, 45249614, 45259612, 45269612, 45279612, 45289614, 45299614, 45309612, 45319614, 45329612, 45339612, 45349612, 45359612, 45369612, 45379614, 45389614, 45399612, 45409612, 45419612, 45429612, 45439612, 45449612, 45459612, 45469612, 45479612, 45489612, 45499612, 45509614, 45519612, 45529614, 45539612, 45549614, 45559614, 45569612, 45579612, 45589612, 45599612, 45609612, 45619612, 45629612, 45639612, 45649614, 45659612, 45669612, 45679612, 45689612, 45699612, 45709614, 45719612, 45729612, 45739612, 45749614, 45759612, 45769614, 45779612, 45789612, 45799614, 45809612, 45819612, 45829612, 45839612, 45849614, 45859612, 45869614, 45879612, 45889612, 45899612, 45909612, 45919612, 45929614, 45939612, 45949614, 45959612, 45969612, 45979612, 45989614, 45999612, 46009614, 46019612, 46029614, 46039612, 46049612, 46059612]</msg>
<status status="PASS" starttime="20201110 08:35:49.652" endtime="20201110 08:35:49.655"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:49.641" endtime="20201110 08:35:49.657"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:49.674" endtime="20201110 08:35:50.016"></status>
</kw>
<msg timestamp="20201110 08:35:50.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038180333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048421153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:49.670" endtime="20201110 08:35:50.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:50.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038180333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048421153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:50.025" endtime="20201110 08:35:50.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:50.042" endtime="20201110 08:35:50.046"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:49.663" endtime="20201110 08:35:50.047"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:49.658" endtime="20201110 08:35:50.049"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:50.104" level="INFO">${RESULT} = {'time': [0.038180333, 0.048421153, 0.058442736, 0.068465444, 0.078489417, 0.088511944, 0.098533903, 0.108553417, 0.118574236, 0.128596958, 0.138618069, 0.148643264, 0.158665833, 0.168689014, 0.178710...</msg>
<status status="PASS" starttime="20201110 08:35:50.050" endtime="20201110 08:35:50.104"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:50.114" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201110 08:35:50.112" endtime="20201110 08:35:50.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:50.119" level="INFO">VALUE: 0.038180333</msg>
<status status="PASS" starttime="20201110 08:35:50.117" endtime="20201110 08:35:50.121"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.106" endtime="20201110 08:35:50.122"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:50.133" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:50.131" endtime="20201110 08:35:50.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:50.138" level="INFO">VALUE: [0.048421153, 0.058442736, 0.068465444, 0.078489417, 0.088511944, 0.098533903, 0.108553417, 0.118574236, 0.128596958, 0.138618069, 0.148643264, 0.158665833, 0.168689014, 0.178710986, 0.188734917, 0.198758306, 0.208783847, 0.218808556, 0.228834875, 0.238855236, 0.248878972, 0.258903167, 0.268929708, 0.278953653, 0.288976153, 0.299001361, 0.309023139, 0.319045514, 0.329069167, 0.339092889, 0.349118181, 0.359145292, 0.369171319, 0.3791945, 0.389219736, 0.399244375, 0.409269153, 0.419293153, 0.429315125, 0.439336931, 0.449357958, 0.459379889, 0.469402528, 0.479425083, 0.489450556, 0.499471778, 0.509499208, 0.519522167, 0.529549181, 0.539573361, 0.549595403, 0.559618819, 0.569643278, 0.579667694, 0.589691444, 0.599714958, 0.609739306, 0.619762875, 0.629789458, 0.639810875, 0.649833736, 0.659857167, 0.669881458, 0.679906222, 0.689932931, 0.699954847, 0.70998, 0.720003486, 0.730029972, 0.740051806, 0.750078583, 0.760101681, 0.770127722, 0.780154528, 0.790178194, 0.800203597, 0.810229014, 0.820252903, 0.830278347, 0.840299694, 0.850325556, 0.860346375, 0.870370722, 0.880394194, 0.890417222, 0.900441806, 0.910469056, 0.920493111, 0.930519639, 0.940542056, 0.950567778, 0.960592403, 0.970619208, 0.980641639, 0.990667806, 1.000689458, 1.010716014, 1.020738167, 1.030761514, 1.040783958] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:50.135" endtime="20201110 08:35:50.138"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.124" endtime="20201110 08:35:50.140"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:50.146" endtime="20201110 08:35:50.149"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:50.154" endtime="20201110 08:35:50.176"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.150" endtime="20201110 08:35:50.178"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.142" endtime="20201110 08:35:50.179"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:47.433" endtime="20201110 08:35:50.180"></status>
</kw>
<msg timestamp="20201110 08:35:50.180" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:50.201" endtime="20201110 08:35:52.313"></status>
</kw>
<msg timestamp="20201110 08:35:52.314" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 47801189, 'start-iter': 1, 'wakeups': [47811406, 47821405, 47831407, 4...</msg>
<status status="PASS" starttime="20201110 08:35:50.197" endtime="20201110 08:35:52.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:52.328" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 47801189, 'start-iter': 1, 'wakeups': [47811406, 47821405, 47831407, 4...</msg>
<status status="PASS" starttime="20201110 08:35:52.324" endtime="20201110 08:35:52.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:52.331" endtime="20201110 08:35:52.335"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.190" endtime="20201110 08:35:52.336"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.185" endtime="20201110 08:35:52.338"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:52.344" level="INFO">${RESULT} = {'timer-count': 6, 'timer-interval': 10000, 'wakeups': [47811406, 47821405, 47831407, 47841405, 47851405, 47861405, 47871405, 47881405, 47891405, 47901405, 47911407, 47921407, 47931405, 47941405, 4795...</msg>
<status status="PASS" starttime="20201110 08:35:52.339" endtime="20201110 08:35:52.344"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:52.354" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:52.352" endtime="20201110 08:35:52.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:52.359" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:52.357" endtime="20201110 08:35:52.360"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:52.346" endtime="20201110 08:35:52.361"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:52.371" level="INFO">NAME: 6-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:52.369" endtime="20201110 08:35:52.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:52.376" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:52.374" endtime="20201110 08:35:52.377"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:52.363" endtime="20201110 08:35:52.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:52.389" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201110 08:35:52.386" endtime="20201110 08:35:52.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:52.393" level="INFO">VALUE: 47801189</msg>
<status status="PASS" starttime="20201110 08:35:52.391" endtime="20201110 08:35:52.394"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:52.380" endtime="20201110 08:35:52.396"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:52.406" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:52.403" endtime="20201110 08:35:52.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:52.411" level="INFO">VALUE: [47811406, 47821405, 47831407, 47841405, 47851405, 47861405, 47871405, 47881405, 47891405, 47901405, 47911407, 47921407, 47931405, 47941405, 47951405, 47961405, 47971405, 47981405, 47991405, 48001405, 48011407, 48021405, 48031405, 48041405, 48051405, 48061407, 48071405, 48081407, 48091405, 48101405, 48111407, 48121407, 48131405, 48141405, 48151405, 48161405, 48171405, 48181405, 48191405, 48201405, 48211405, 48221405, 48231405, 48241405, 48251405, 48261407, 48271405, 48281405, 48291405, 48301405, 48311407, 48321405, 48331405, 48341407, 48351406, 48361407, 48371407, 48381405, 48391405, 48401405, 48411407, 48421405, 48431407, 48441405, 48451405, 48461405, 48471407, 48481405, 48491407, 48501405, 48511405, 48521405, 48531405, 48541405, 48551405, 48561405, 48571407, 48581405, 48591405, 48601407, 48611407, 48621405, 48631405, 48641405, 48651407, 48661405, 48671405, 48681405, 48691405, 48701405, 48711406, 48721405, 48731405, 48741405, 48751405, 48761405, 48771407, 48781405, 48791405, 48801405]</msg>
<status status="PASS" starttime="20201110 08:35:52.408" endtime="20201110 08:35:52.411"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:52.397" endtime="20201110 08:35:52.413"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:52.432" endtime="20201110 08:35:52.788"></status>
</kw>
<msg timestamp="20201110 08:35:52.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037141528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047383306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:52.428" endtime="20201110 08:35:52.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:52.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037141528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047383306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:52.797" endtime="20201110 08:35:52.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:52.815" endtime="20201110 08:35:52.819"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:52.419" endtime="20201110 08:35:52.821"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:52.414" endtime="20201110 08:35:52.822"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:52.878" level="INFO">${RESULT} = {'time': [0.037141528, 0.047383306, 0.057407653, 0.067434875, 0.077458583, 0.087482861, 0.097505, 0.107526778, 0.117548167, 0.127570417, 0.137593778, 0.147620278, 0.157644597, 0.167667597, 0.177691556...</msg>
<status status="PASS" starttime="20201110 08:35:52.824" endtime="20201110 08:35:52.878"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:52.889" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201110 08:35:52.886" endtime="20201110 08:35:52.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:52.893" level="INFO">VALUE: 0.037141528</msg>
<status status="PASS" starttime="20201110 08:35:52.891" endtime="20201110 08:35:52.894"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:52.880" endtime="20201110 08:35:52.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:52.907" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:52.905" endtime="20201110 08:35:52.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:52.912" level="INFO">VALUE: [0.047383306, 0.057407653, 0.067434875, 0.077458583, 0.087482861, 0.097505, 0.107526778, 0.117548167, 0.127570417, 0.137593778, 0.147620278, 0.157644597, 0.167667597, 0.177691556, 0.187714792, 0.197737681, 0.207761014, 0.217783694, 0.227807597, 0.237830347, 0.247854875, 0.257873764, 0.267894861, 0.277917333, 0.287940236, 0.297965111, 0.307986639, 0.318011931, 0.328034083, 0.338057069, 0.348082458, 0.35810525, 0.368126694, 0.378149986, 0.388173028, 0.398195931, 0.408219917, 0.418243264, 0.428266681, 0.438289639, 0.448314681, 0.458338875, 0.468363389, 0.478387222, 0.488410708, 0.498435028, 0.508456028, 0.518479319, 0.528502528, 0.538524583, 0.548549, 0.558569583, 0.568592625, 0.5786165, 0.588638667, 0.598661931, 0.608684667, 0.618705361, 0.628728639, 0.638751181, 0.648777347, 0.658798111, 0.668822944, 0.678843458, 0.688866, 0.698888486, 0.708914278, 0.718936097, 0.728961958, 0.738982458, 0.749005639, 0.759028, 0.769052222, 0.779075319, 0.789099125, 0.799122431, 0.809147931, 0.819169514, 0.829194042, 0.839220264, 0.849244514, 0.859266458, 0.86929125, 0.879315069, 0.889341611, 0.899363292, 0.909387722, 0.919410583, 0.929436042, 0.939460472, 0.949484903, 0.959507778, 0.969531806, 0.979555528, 0.989578958, 0.999600819, 1.009628375, 1.019651583, 1.029676792, 1.039701264] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:52.909" endtime="20201110 08:35:52.913"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:52.897" endtime="20201110 08:35:52.914"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:52.921" endtime="20201110 08:35:52.924"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:52.930" endtime="20201110 08:35:52.952"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:52.926" endtime="20201110 08:35:52.954"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:52.916" endtime="20201110 08:35:52.956"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.182" endtime="20201110 08:35:52.956"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:44.668" endtime="20201110 08:35:52.957"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:44.667" endtime="20201110 08:35:52.957"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:35:52.963" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:52.986" endtime="20201110 08:35:55.099"></status>
</kw>
<msg timestamp="20201110 08:35:55.101" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 50580430, 'start-iter': 1, 'wakeups': [50590688, 50600684, 50610685, 5...</msg>
<status status="PASS" starttime="20201110 08:35:52.983" endtime="20201110 08:35:55.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:55.107" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 50580430, 'start-iter': 1, 'wakeups': [50590688, 50600684, 50610685, 5...</msg>
<status status="PASS" starttime="20201110 08:35:55.103" endtime="20201110 08:35:55.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:55.110" endtime="20201110 08:35:55.114"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:52.974" endtime="20201110 08:35:55.115"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:52.968" endtime="20201110 08:35:55.117"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:55.124" level="INFO">${RESULT} = {'timer-count': 7, 'timer-interval': 10000, 'wakeups': [50590688, 50600684, 50610685, 50620685, 50630685, 50640684, 50650685, 50660685, 50670685, 50680684, 50690685, 50700684, 50710687, 50720685, 5073...</msg>
<status status="PASS" starttime="20201110 08:35:55.119" endtime="20201110 08:35:55.124"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:55.134" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:55.132" endtime="20201110 08:35:55.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:55.138" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:55.136" endtime="20201110 08:35:55.139"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.126" endtime="20201110 08:35:55.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:55.151" level="INFO">NAME: 7-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:55.149" endtime="20201110 08:35:55.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:55.156" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:55.153" endtime="20201110 08:35:55.156"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.142" endtime="20201110 08:35:55.158"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:55.168" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201110 08:35:55.166" endtime="20201110 08:35:55.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:55.173" level="INFO">VALUE: 50580430</msg>
<status status="PASS" starttime="20201110 08:35:55.171" endtime="20201110 08:35:55.174"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.159" endtime="20201110 08:35:55.175"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:55.185" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:55.183" endtime="20201110 08:35:55.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:55.190" level="INFO">VALUE: [50590688, 50600684, 50610685, 50620685, 50630685, 50640684, 50650685, 50660685, 50670685, 50680684, 50690685, 50700684, 50710687, 50720685, 50730684, 50740684, 50750684, 50760685, 50770685, 50780687, 50790685, 50800684, 50810687, 50820684, 50830687, 50840684, 50850687, 50860685, 50870685, 50880685, 50890687, 50900684, 50910685, 50920685, 50930685, 50940685, 50950687, 50960684, 50970685, 50980684, 50990687, 51000687, 51010687, 51020685, 51030687, 51040685, 51050687, 51060685, 51070685, 51080685, 51090687, 51100685, 51110685, 51120685, 51130685, 51140685, 51150687, 51160684, 51170687, 51180685, 51190684, 51200684, 51210684, 51220685, 51230685, 51240685, 51250685, 51260685, 51270685, 51280687, 51290687, 51300684, 51310685, 51320684, 51330687, 51340684, 51350685, 51360687, 51370687, 51380684, 51390685, 51400687, 51410687, 51420685, 51430685, 51440685, 51450687, 51460685, 51470687, 51480685, 51490685, 51500685, 51510685, 51520685, 51530685, 51540685, 51550685, 51560684, 51570685, 51580684]</msg>
<status status="PASS" starttime="20201110 08:35:55.188" endtime="20201110 08:35:55.191"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.176" endtime="20201110 08:35:55.193"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:55.210" endtime="20201110 08:35:55.566"></status>
</kw>
<msg timestamp="20201110 08:35:55.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046759931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.057039611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:55.206" endtime="20201110 08:35:55.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:55.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046759931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.057039611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:55.575" endtime="20201110 08:35:55.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:55.593" endtime="20201110 08:35:55.596"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.199" endtime="20201110 08:35:55.598"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.194" endtime="20201110 08:35:55.600"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:55.658" level="INFO">${RESULT} = {'time': [0.046759931, 0.057039611, 0.067054972, 0.077077472, 0.087099153, 0.097122306, 0.107144097, 0.117167153, 0.127189278, 0.137211097, 0.147232472, 0.157257306, 0.167278681, 0.177304306, 0.187325...</msg>
<status status="PASS" starttime="20201110 08:35:55.601" endtime="20201110 08:35:55.660"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:55.670" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201110 08:35:55.668" endtime="20201110 08:35:55.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:55.675" level="INFO">VALUE: 0.046759931</msg>
<status status="PASS" starttime="20201110 08:35:55.673" endtime="20201110 08:35:55.675"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.661" endtime="20201110 08:35:55.677"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:55.688" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:55.686" endtime="20201110 08:35:55.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:55.693" level="INFO">VALUE: [0.057039611, 0.067054972, 0.077077472, 0.087099153, 0.097122306, 0.107144097, 0.117167153, 0.127189278, 0.137211097, 0.147232472, 0.157257306, 0.167278681, 0.177304306, 0.187325208, 0.197346972, 0.207370542, 0.217393306, 0.227416806, 0.237439639, 0.247463903, 0.257483708, 0.267504306, 0.277530153, 0.287548431, 0.297573958, 0.307592167, 0.317617625, 0.327638431, 0.337661208, 0.347683806, 0.357708986, 0.367728944, 0.377753514, 0.387775653, 0.397798097, 0.407820278, 0.417843556, 0.427862556, 0.437885472, 0.447905181, 0.457929694, 0.467950097, 0.477970764, 0.487991375, 0.498017375, 0.508038792, 0.518063139, 0.528082375, 0.538103917, 0.548125028, 0.558148917, 0.568169097, 0.5781925, 0.588215972, 0.598240722, 0.608264764, 0.618290847, 0.628312361, 0.638339972, 0.648361806, 0.658384819, 0.668409, 0.678433097, 0.68845775, 0.698481139, 0.708504208, 0.718527944, 0.728552097, 0.738577389, 0.748603514, 0.758628458, 0.768650125, 0.778676292, 0.788700194, 0.798727458, 0.808747306, 0.818771625, 0.828796764, 0.838820861, 0.84884175, 0.858866694, 0.868891403, 0.878914958, 0.888937208, 0.898961458, 0.908985625, 0.919011611, 0.929032278, 0.939057806, 0.949078736, 0.959101694, 0.969123931, 0.979147, 0.989170125, 0.999192361, 1.009214306, 1.01923625, 1.029256569, 1.039279722, 1.049301028] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:55.691" endtime="20201110 08:35:55.694"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.678" endtime="20201110 08:35:55.695"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:55.702" endtime="20201110 08:35:55.705"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:55.711" endtime="20201110 08:35:55.732"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.706" endtime="20201110 08:35:55.734"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.697" endtime="20201110 08:35:55.736"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:52.964" endtime="20201110 08:35:55.736"></status>
</kw>
<msg timestamp="20201110 08:35:55.737" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:55.758" endtime="20201110 08:35:57.872"></status>
</kw>
<msg timestamp="20201110 08:35:57.873" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 53346427, 'start-iter': 1, 'wakeups': [53356686, 53366684, 53376682, 5...</msg>
<status status="PASS" starttime="20201110 08:35:55.755" endtime="20201110 08:35:57.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:57.880" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 53346427, 'start-iter': 1, 'wakeups': [53356686, 53366684, 53376682, 5...</msg>
<status status="PASS" starttime="20201110 08:35:57.875" endtime="20201110 08:35:57.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:57.882" endtime="20201110 08:35:57.886"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.747" endtime="20201110 08:35:57.888"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.742" endtime="20201110 08:35:57.889"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:57.896" level="INFO">${RESULT} = {'timer-count': 7, 'timer-interval': 10000, 'wakeups': [53356686, 53366684, 53376682, 53386684, 53396682, 53406682, 53416682, 53426681, 53436684, 53446681, 53456684, 53466682, 53476684, 53486682, 5349...</msg>
<status status="PASS" starttime="20201110 08:35:57.891" endtime="20201110 08:35:57.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:57.906" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:57.904" endtime="20201110 08:35:57.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:57.910" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:57.908" endtime="20201110 08:35:57.911"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:57.897" endtime="20201110 08:35:57.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:57.931" level="INFO">NAME: 7-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:57.929" endtime="20201110 08:35:57.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:57.936" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:57.934" endtime="20201110 08:35:57.937"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:57.920" endtime="20201110 08:35:57.938"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:57.949" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201110 08:35:57.946" endtime="20201110 08:35:57.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:57.953" level="INFO">VALUE: 53346427</msg>
<status status="PASS" starttime="20201110 08:35:57.951" endtime="20201110 08:35:57.954"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:57.940" endtime="20201110 08:35:57.955"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:57.966" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:57.963" endtime="20201110 08:35:57.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:57.971" level="INFO">VALUE: [53356686, 53366684, 53376682, 53386684, 53396682, 53406682, 53416682, 53426681, 53436684, 53446681, 53456684, 53466682, 53476684, 53486682, 53496682, 53506682, 53516684, 53526682, 53536682, 53546681, 53556682, 53566682, 53576684, 53586682, 53596682, 53606682, 53616682, 53626681, 53636684, 53646682, 53656682, 53666684, 53676682, 53686682, 53696682, 53706682, 53716684, 53726682, 53736682, 53746682, 53756682, 53766681, 53776681, 53786683, 53796682, 53806682, 53816682, 53826681, 53836682, 53846681, 53856682, 53866682, 53876682, 53886684, 53896683, 53906681, 53916682, 53926681, 53936682, 53946681, 53956684, 53966681, 53976682, 53986682, 53996684, 54006682, 54016681, 54026682, 54036681, 54046682, 54056682, 54066682, 54076682, 54086682, 54096682, 54106682, 54116684, 54126684, 54136682, 54146681, 54156682, 54166684, 54176684, 54186681, 54196684, 54206684, 54216684, 54226684, 54236682, 54246681, 54256684, 54266682, 54276684, 54286682, 54296682, 54306681, 54316682, 54326684, 54336682, 54346684]</msg>
<status status="PASS" starttime="20201110 08:35:57.968" endtime="20201110 08:35:57.971"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:57.957" endtime="20201110 08:35:57.973"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:57.990" endtime="20201110 08:35:58.348"></status>
</kw>
<msg timestamp="20201110 08:35:58.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038617778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048899389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:57.987" endtime="20201110 08:35:58.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:58.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038617778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048899389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:58.357" endtime="20201110 08:35:58.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:58.374" endtime="20201110 08:35:58.378"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:57.979" endtime="20201110 08:35:58.380"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:57.974" endtime="20201110 08:35:58.381"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:58.437" level="INFO">${RESULT} = {'time': [0.038617778, 0.048899389, 0.058919403, 0.068939542, 0.078965611, 0.088986583, 0.099009708, 0.10903375, 0.119055958, 0.129084069, 0.139106208, 0.149133528, 0.159155153, 0.169182375, 0.1792053...</msg>
<status status="PASS" starttime="20201110 08:35:58.383" endtime="20201110 08:35:58.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:58.449" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201110 08:35:58.446" endtime="20201110 08:35:58.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:58.454" level="INFO">VALUE: 0.038617778</msg>
<status status="PASS" starttime="20201110 08:35:58.452" endtime="20201110 08:35:58.455"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:58.439" endtime="20201110 08:35:58.457"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:58.468" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:58.465" endtime="20201110 08:35:58.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:58.473" level="INFO">VALUE: [0.048899389, 0.058919403, 0.068939542, 0.078965611, 0.088986583, 0.099009708, 0.10903375, 0.119055958, 0.129084069, 0.139106208, 0.149133528, 0.159155153, 0.169182375, 0.179205347, 0.189228931, 0.199251694, 0.209277083, 0.219297764, 0.229320792, 0.239342264, 0.249367139, 0.259389972, 0.269416556, 0.279438653, 0.289462292, 0.299485708, 0.309509833, 0.319532792, 0.329560847, 0.339582681, 0.349607458, 0.359633653, 0.369656486, 0.379680361, 0.389704833, 0.399730264, 0.409758264, 0.419781694, 0.429806514, 0.439831014, 0.449854708, 0.459877139, 0.469900194, 0.479925722, 0.489947458, 0.499970875, 0.509995583, 0.520018764, 0.530044792, 0.540068944, 0.550096264, 0.560122222, 0.57014675, 0.580171917, 0.590193986, 0.600214736, 0.61024225, 0.620266181, 0.630293153, 0.640316667, 0.650345583, 0.6603675, 0.670393861, 0.680417569, 0.690443861, 0.700466486, 0.710489889, 0.720515347, 0.730538194, 0.740563944, 0.750587792, 0.760612236, 0.7706375, 0.780662, 0.790686778, 0.80071225, 0.810738944, 0.820763222, 0.830786694, 0.840811292, 0.850837931, 0.860865958, 0.870891736, 0.880913875, 0.890943069, 0.900968542, 0.910994514, 0.921021125, 0.931045778, 0.941070167, 0.951098708, 0.961122875, 0.971151764, 0.981177056, 0.991205514, 1.001231014, 1.011258389, 1.021285431, 1.031309986, 1.041338181] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:58.471" endtime="20201110 08:35:58.474"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:58.458" endtime="20201110 08:35:58.476"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:58.482" endtime="20201110 08:35:58.485"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:58.491" endtime="20201110 08:35:58.513"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:58.486" endtime="20201110 08:35:58.514"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:58.478" endtime="20201110 08:35:58.516"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.738" endtime="20201110 08:35:58.517"></status>
</kw>
<msg timestamp="20201110 08:35:58.517" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:58.538" endtime="20201110 08:36:00.652"></status>
</kw>
<msg timestamp="20201110 08:36:00.653" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 56119729, 'start-iter': 1, 'wakeups': [56129987, 56139983, 56149984, 5...</msg>
<status status="PASS" starttime="20201110 08:35:58.535" endtime="20201110 08:36:00.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:00.660" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 56119729, 'start-iter': 1, 'wakeups': [56129987, 56139983, 56149984, 5...</msg>
<status status="PASS" starttime="20201110 08:36:00.655" endtime="20201110 08:36:00.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:00.662" endtime="20201110 08:36:00.666"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:58.528" endtime="20201110 08:36:00.668"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:58.522" endtime="20201110 08:36:00.670"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:00.676" level="INFO">${RESULT} = {'timer-count': 7, 'timer-interval': 10000, 'wakeups': [56129987, 56139983, 56149984, 56159984, 56169986, 56179983, 56189984, 56199984, 56209985, 56219984, 56229984, 56239984, 56249986, 56259986, 5626...</msg>
<status status="PASS" starttime="20201110 08:36:00.671" endtime="20201110 08:36:00.676"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:00.686" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:36:00.684" endtime="20201110 08:36:00.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:00.691" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:36:00.688" endtime="20201110 08:36:00.692"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:00.678" endtime="20201110 08:36:00.693"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:00.703" level="INFO">NAME: 7-start-iter</msg>
<status status="PASS" starttime="20201110 08:36:00.701" endtime="20201110 08:36:00.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:00.708" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:36:00.706" endtime="20201110 08:36:00.709"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:00.694" endtime="20201110 08:36:00.710"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:00.721" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201110 08:36:00.718" endtime="20201110 08:36:00.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:00.726" level="INFO">VALUE: 56119729</msg>
<status status="PASS" starttime="20201110 08:36:00.724" endtime="20201110 08:36:00.726"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:00.712" endtime="20201110 08:36:00.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:00.738" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:00.736" endtime="20201110 08:36:00.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:00.743" level="INFO">VALUE: [56129987, 56139983, 56149984, 56159984, 56169986, 56179983, 56189984, 56199984, 56209985, 56219984, 56229984, 56239984, 56249986, 56259986, 56269986, 56279984, 56289984, 56299984, 56309986, 56319984, 56329986, 56339983, 56349985, 56359983, 56369986, 56379984, 56389984, 56399984, 56409984, 56419983, 56429984, 56439983, 56449986, 56459984, 56469986, 56479984, 56489986, 56499984, 56509986, 56519983, 56529986, 56539984, 56549984, 56559984, 56569986, 56579984, 56589984, 56599984, 56609984, 56619984, 56629984, 56639986, 56649986, 56659986, 56669984, 56679984, 56689984, 56699983, 56709986, 56719984, 56729984, 56739984, 56749984, 56759983, 56769986, 56779986, 56789984, 56799984, 56809986, 56819983, 56829986, 56839986, 56849983, 56859983, 56869986, 56879983, 56889983, 56899983, 56909986, 56919984, 56929984, 56939983, 56949983, 56959984, 56969984, 56979986, 56989986, 56999984, 57009983, 57019986, 57029984, 57039984, 57049985, 57059984, 57069986, 57079984, 57089984, 57099983, 57109984, 57119986]</msg>
<status status="PASS" starttime="20201110 08:36:00.741" endtime="20201110 08:36:00.744"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:00.729" endtime="20201110 08:36:00.746"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:00.765" endtime="20201110 08:36:01.124"></status>
</kw>
<msg timestamp="20201110 08:36:01.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038443944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048727653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:00.761" endtime="20201110 08:36:01.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:01.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038443944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048727653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:01.133" endtime="20201110 08:36:01.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:01.150" endtime="20201110 08:36:01.154"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:00.753" endtime="20201110 08:36:01.155"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:00.747" endtime="20201110 08:36:01.157"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:01.215" level="INFO">${RESULT} = {'time': [0.038443944, 0.048727653, 0.058748167, 0.068773306, 0.078798042, 0.088825986, 0.098848167, 0.108875875, 0.118901806, 0.128927917, 0.138952403, 0.148978319, 0.159004153, 0.169033333, 0.179059...</msg>
<status status="PASS" starttime="20201110 08:36:01.159" endtime="20201110 08:36:01.215"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:01.226" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201110 08:36:01.223" endtime="20201110 08:36:01.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:01.230" level="INFO">VALUE: 0.038443944</msg>
<status status="PASS" starttime="20201110 08:36:01.228" endtime="20201110 08:36:01.231"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:01.217" endtime="20201110 08:36:01.233"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:01.244" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:01.242" endtime="20201110 08:36:01.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:01.248" level="INFO">VALUE: [0.048727653, 0.058748167, 0.068773306, 0.078798042, 0.088825986, 0.098848167, 0.108875875, 0.118901806, 0.128927917, 0.138952403, 0.148978319, 0.159004153, 0.169033333, 0.179059736, 0.189086292, 0.19911025, 0.209136375, 0.219161861, 0.229191333, 0.239216611, 0.249246694, 0.259270972, 0.269301208, 0.279325, 0.289353889, 0.299377069, 0.309403361, 0.319430222, 0.329456847, 0.339482306, 0.349509958, 0.359535236, 0.369564056, 0.379587347, 0.389615569, 0.399638514, 0.409667667, 0.419692, 0.429720625, 0.439743097, 0.449772278, 0.459796028, 0.469822083, 0.479847347, 0.489875694, 0.499900125, 0.509926431, 0.519951583, 0.529976306, 0.540000444, 0.550026556, 0.560054542, 0.570080792, 0.580106611, 0.590131694, 0.600158625, 0.610185014, 0.620209222, 0.630238792, 0.640263028, 0.650288639, 0.660313708, 0.670340111, 0.680363958, 0.690392556, 0.700417583, 0.710440472, 0.720466, 0.730494278, 0.740517681, 0.75054725, 0.760572236, 0.770594708, 0.780619, 0.790646972, 0.800667042, 0.810690736, 0.820714417, 0.830741278, 0.840762667, 0.850786014, 0.860808861, 0.87083375, 0.880860083, 0.890885944, 0.900913431, 0.910940069, 0.920963056, 0.930986431, 0.941014194, 0.9510365, 0.961061028, 0.971087708, 0.981112028, 0.991139542, 1.001162056, 1.011187639, 1.021211847, 1.031238056, 1.041265958] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:36:01.246" endtime="20201110 08:36:01.250"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:01.234" endtime="20201110 08:36:01.252"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:01.258" endtime="20201110 08:36:01.261"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:01.267" endtime="20201110 08:36:01.288"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:01.262" endtime="20201110 08:36:01.290"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:01.254" endtime="20201110 08:36:01.292"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:58.518" endtime="20201110 08:36:01.292"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:52.960" endtime="20201110 08:36:01.293"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:52.958" endtime="20201110 08:36:01.293"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:36:01.299" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:01.322" endtime="20201110 08:36:03.434"></status>
</kw>
<msg timestamp="20201110 08:36:03.436" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 58896964, 'start-iter': 1, 'wakeups': [58907263, 58917261, 58927261, 5...</msg>
<status status="PASS" starttime="20201110 08:36:01.318" endtime="20201110 08:36:03.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:03.442" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 58896964, 'start-iter': 1, 'wakeups': [58907263, 58917261, 58927261, 5...</msg>
<status status="PASS" starttime="20201110 08:36:03.438" endtime="20201110 08:36:03.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:03.445" endtime="20201110 08:36:03.449"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:01.310" endtime="20201110 08:36:03.450"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:01.304" endtime="20201110 08:36:03.452"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:03.458" level="INFO">${RESULT} = {'timer-count': 8, 'timer-interval': 10000, 'wakeups': [58907263, 58917261, 58927261, 58937261, 58947261, 58957261, 58967260, 58977261, 58987261, 58997261, 59007260, 59017261, 59027260, 59037261, 5904...</msg>
<status status="PASS" starttime="20201110 08:36:03.453" endtime="20201110 08:36:03.459"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:03.468" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:36:03.466" endtime="20201110 08:36:03.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:03.473" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:36:03.471" endtime="20201110 08:36:03.474"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:03.460" endtime="20201110 08:36:03.475"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:03.485" level="INFO">NAME: 8-start-iter</msg>
<status status="PASS" starttime="20201110 08:36:03.483" endtime="20201110 08:36:03.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:03.490" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:36:03.487" endtime="20201110 08:36:03.490"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:03.476" endtime="20201110 08:36:03.492"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:03.502" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201110 08:36:03.500" endtime="20201110 08:36:03.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:03.507" level="INFO">VALUE: 58896964</msg>
<status status="PASS" starttime="20201110 08:36:03.504" endtime="20201110 08:36:03.507"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:03.493" endtime="20201110 08:36:03.509"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:03.519" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:03.517" endtime="20201110 08:36:03.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:03.524" level="INFO">VALUE: [58907263, 58917261, 58927261, 58937261, 58947261, 58957261, 58967260, 58977261, 58987261, 58997261, 59007260, 59017261, 59027260, 59037261, 59047261, 59057262, 59067261, 59077261, 59087261, 59097261, 59107260, 59117261, 59127261, 59137260, 59147261, 59157261, 59167260, 59177261, 59187261, 59197261, 59207261, 59217261, 59227261, 59237261, 59247261, 59257261, 59267260, 59277261, 59287261, 59297261, 59307260, 59317261, 59327261, 59337261, 59347261, 59357260, 59367260, 59377261, 59387261, 59397261, 59407261, 59417261, 59427261, 59437261, 59447261, 59457261, 59467261, 59477260, 59487261, 59497261, 59507260, 59517261, 59527260, 59537261, 59547260, 59557261, 59567260, 59577261, 59587261, 59597261, 59607261, 59617261, 59627261, 59637261, 59647261, 59657261, 59667261, 59677261, 59687260, 59697261, 59707261, 59717261, 59727261, 59737260, 59747260, 59757260, 59767261, 59777261, 59787261, 59797260, 59807261, 59817261, 59827261, 59837261, 59847260, 59857260, 59867260, 59877260, 59887261, 59897261]</msg>
<status status="PASS" starttime="20201110 08:36:03.521" endtime="20201110 08:36:03.525"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:03.510" endtime="20201110 08:36:03.527"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:03.543" endtime="20201110 08:36:03.890"></status>
</kw>
<msg timestamp="20201110 08:36:03.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046364542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0566875, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:36:03.540" endtime="20201110 08:36:03.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:03.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046364542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0566875, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:36:03.899" endtime="20201110 08:36:03.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:03.916" endtime="20201110 08:36:03.920"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:03.533" endtime="20201110 08:36:03.922"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:03.528" endtime="20201110 08:36:03.923"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:03.979" level="INFO">${RESULT} = {'time': [0.046364542, 0.0566875, 0.066707306, 0.076729931, 0.086752528, 0.096776472, 0.106798625, 0.116820792, 0.126845111, 0.136869014, 0.146892875, 0.156917056, 0.166941194, 0.176963556, 0.18698872...</msg>
<status status="PASS" starttime="20201110 08:36:03.925" endtime="20201110 08:36:03.980"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:03.990" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201110 08:36:03.988" endtime="20201110 08:36:03.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:03.994" level="INFO">VALUE: 0.046364542</msg>
<status status="PASS" starttime="20201110 08:36:03.992" endtime="20201110 08:36:03.995"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:03.981" endtime="20201110 08:36:03.997"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:04.008" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:04.006" endtime="20201110 08:36:04.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:04.013" level="INFO">VALUE: [0.0566875, 0.066707306, 0.076729931, 0.086752528, 0.096776472, 0.106798625, 0.116820792, 0.126845111, 0.136869014, 0.146892875, 0.156917056, 0.166941194, 0.176963556, 0.186988722, 0.197014431, 0.207040861, 0.217063625, 0.227085861, 0.237108181, 0.247131181, 0.257155028, 0.267180347, 0.277204986, 0.2872275, 0.297251111, 0.307274222, 0.317297056, 0.327321194, 0.337345333, 0.347369625, 0.357394028, 0.367418389, 0.377442375, 0.387466889, 0.397491458, 0.407514986, 0.417538139, 0.427562153, 0.437585778, 0.447608889, 0.457631417, 0.467655306, 0.477678861, 0.487703514, 0.4977295, 0.507753597, 0.517778722, 0.527803681, 0.537827931, 0.547852778, 0.557877111, 0.567901264, 0.577924528, 0.587947778, 0.597972528, 0.607996181, 0.618020389, 0.628043319, 0.638070569, 0.648096292, 0.658121042, 0.668147875, 0.678170944, 0.688195528, 0.698217792, 0.708241764, 0.718264792, 0.728289153, 0.738313708, 0.748337806, 0.758363333, 0.768388333, 0.778413569, 0.788437611, 0.798463611, 0.808488028, 0.818512014, 0.828536875, 0.83856175, 0.848588708, 0.858614514, 0.868639736, 0.878664472, 0.888686917, 0.898711111, 0.908735139, 0.918759833, 0.928783903, 0.938807806, 0.94882975, 0.958853806, 0.968876875, 0.9789005, 0.988924944, 0.998948167, 1.008971819, 1.018996611, 1.029020125, 1.039045139, 1.049069417] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:36:04.011" endtime="20201110 08:36:04.014"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:03.998" endtime="20201110 08:36:04.015"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:04.022" endtime="20201110 08:36:04.024"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:04.030" endtime="20201110 08:36:04.052"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:04.026" endtime="20201110 08:36:04.053"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:04.017" endtime="20201110 08:36:04.056"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:01.300" endtime="20201110 08:36:04.056"></status>
</kw>
<msg timestamp="20201110 08:36:04.057" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:04.078" endtime="20201110 08:36:06.190"></status>
</kw>
<msg timestamp="20201110 08:36:06.192" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 61646294, 'start-iter': 1, 'wakeups': [61656593, 61666591, 61676592, 6...</msg>
<status status="PASS" starttime="20201110 08:36:04.075" endtime="20201110 08:36:06.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:06.198" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 61646294, 'start-iter': 1, 'wakeups': [61656593, 61666591, 61676592, 6...</msg>
<status status="PASS" starttime="20201110 08:36:06.194" endtime="20201110 08:36:06.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:06.201" endtime="20201110 08:36:06.205"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:04.067" endtime="20201110 08:36:06.206"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:04.062" endtime="20201110 08:36:06.208"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:06.214" level="INFO">${RESULT} = {'timer-count': 8, 'timer-interval': 10000, 'wakeups': [61656593, 61666591, 61676592, 61686591, 61696591, 61706590, 61716590, 61726591, 61736591, 61746591, 61756590, 61766591, 61776591, 61786591, 6179...</msg>
<status status="PASS" starttime="20201110 08:36:06.209" endtime="20201110 08:36:06.215"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:06.224" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:36:06.222" endtime="20201110 08:36:06.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:06.229" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:36:06.226" endtime="20201110 08:36:06.229"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:06.216" endtime="20201110 08:36:06.231"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:06.241" level="INFO">NAME: 8-start-iter</msg>
<status status="PASS" starttime="20201110 08:36:06.239" endtime="20201110 08:36:06.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:06.246" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:36:06.243" endtime="20201110 08:36:06.246"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:06.232" endtime="20201110 08:36:06.248"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:06.260" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201110 08:36:06.258" endtime="20201110 08:36:06.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:06.265" level="INFO">VALUE: 61646294</msg>
<status status="PASS" starttime="20201110 08:36:06.263" endtime="20201110 08:36:06.266"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:06.249" endtime="20201110 08:36:06.267"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:06.277" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:06.275" endtime="20201110 08:36:06.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:06.282" level="INFO">VALUE: [61656593, 61666591, 61676592, 61686591, 61696591, 61706590, 61716590, 61726591, 61736591, 61746591, 61756590, 61766591, 61776591, 61786591, 61796591, 61806591, 61816591, 61826591, 61836591, 61846591, 61856591, 61866591, 61876591, 61886590, 61896592, 61906591, 61916590, 61926591, 61936590, 61946591, 61956591, 61966591, 61976590, 61986590, 61996590, 62006591, 62016591, 62026591, 62036590, 62046591, 62056590, 62066590, 62076591, 62086591, 62096590, 62106590, 62116591, 62126591, 62136590, 62146591, 62156590, 62166591, 62176590, 62186591, 62196590, 62206590, 62216591, 62226590, 62236590, 62246591, 62256591, 62266591, 62276591, 62286591, 62296591, 62306591, 62316591, 62326591, 62336591, 62346591, 62356591, 62366591, 62376591, 62386591, 62396591, 62406591, 62416591, 62426590, 62436591, 62446591, 62456591, 62466591, 62476590, 62486591, 62496591, 62506591, 62516591, 62526591, 62536590, 62546591, 62556591, 62566591, 62576590, 62586591, 62596591, 62606591, 62616590, 62626590, 62636590, 62646591]</msg>
<status status="PASS" starttime="20201110 08:36:06.280" endtime="20201110 08:36:06.283"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:06.268" endtime="20201110 08:36:06.284"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:06.302" endtime="20201110 08:36:06.650"></status>
</kw>
<msg timestamp="20201110 08:36:06.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038697819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049026014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:06.298" endtime="20201110 08:36:06.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:06.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038697819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049026014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:06.658" endtime="20201110 08:36:06.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:06.675" endtime="20201110 08:36:06.679"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:06.291" endtime="20201110 08:36:06.681"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:06.286" endtime="20201110 08:36:06.682"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:06.737" level="INFO">${RESULT} = {'time': [0.038697819, 0.049026014, 0.059052875, 0.069081681, 0.07910775, 0.089135139, 0.099160958, 0.109187792, 0.119216417, 0.129243486, 0.139270236, 0.149295778, 0.159321431, 0.169346958, 0.1793715...</msg>
<status status="PASS" starttime="20201110 08:36:06.684" endtime="20201110 08:36:06.738"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:06.748" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201110 08:36:06.746" endtime="20201110 08:36:06.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:06.752" level="INFO">VALUE: 0.038697819</msg>
<status status="PASS" starttime="20201110 08:36:06.750" endtime="20201110 08:36:06.753"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:06.739" endtime="20201110 08:36:06.755"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:06.766" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:06.763" endtime="20201110 08:36:06.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:06.770" level="INFO">VALUE: [0.049026014, 0.059052875, 0.069081681, 0.07910775, 0.089135139, 0.099160958, 0.109187792, 0.119216417, 0.129243486, 0.139270236, 0.149295778, 0.159321431, 0.169346958, 0.179371583, 0.189396347, 0.199420917, 0.209445042, 0.219468514, 0.229493125, 0.239517639, 0.24954275, 0.259567528, 0.269593917, 0.279619889, 0.289649097, 0.299674347, 0.309699681, 0.319725375, 0.3297505, 0.339776514, 0.349801083, 0.359826194, 0.369850958, 0.379877597, 0.389904458, 0.399931472, 0.409957889, 0.419984264, 0.430009931, 0.440037681, 0.450063833, 0.460091264, 0.470119903, 0.480146361, 0.490172833, 0.500199653, 0.510225542, 0.52025075, 0.53027525, 0.540301083, 0.550325347, 0.560351708, 0.570377375, 0.580404986, 0.590429792, 0.600454931, 0.610482292, 0.620506653, 0.630532792, 0.640560806, 0.650587583, 0.660614278, 0.670640764, 0.680667292, 0.690694139, 0.700719722, 0.710747306, 0.720774111, 0.73080125, 0.740827847, 0.75085375, 0.760880069, 0.770906375, 0.780932931, 0.790959528, 0.800986431, 0.811013722, 0.821038819, 0.831065208, 0.841090569, 0.851116208, 0.861140764, 0.871165347, 0.881192014, 0.891218153, 0.901243556, 0.911269389, 0.921294778, 0.931319917, 0.94134575, 0.951370236, 0.961395347, 0.971422167, 0.981450944, 0.991478583, 1.001504556, 1.011530694, 1.021556389, 1.031582097, 1.041608139] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:36:06.768" endtime="20201110 08:36:06.772"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:06.756" endtime="20201110 08:36:06.774"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:06.780" endtime="20201110 08:36:06.783"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:06.788" endtime="20201110 08:36:06.810"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:06.784" endtime="20201110 08:36:06.812"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:06.776" endtime="20201110 08:36:06.813"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:04.058" endtime="20201110 08:36:06.814"></status>
</kw>
<msg timestamp="20201110 08:36:06.814" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:06.835" endtime="20201110 08:36:08.946"></status>
</kw>
<msg timestamp="20201110 08:36:08.948" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 64395909, 'start-iter': 1, 'wakeups': [64406208, 64416206, 64426206, 6...</msg>
<status status="PASS" starttime="20201110 08:36:06.831" endtime="20201110 08:36:08.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:08.955" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 64395909, 'start-iter': 1, 'wakeups': [64406208, 64416206, 64426206, 6...</msg>
<status status="PASS" starttime="20201110 08:36:08.951" endtime="20201110 08:36:08.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:08.958" endtime="20201110 08:36:08.961"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:06.824" endtime="20201110 08:36:08.963"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:06.819" endtime="20201110 08:36:08.964"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:08.971" level="INFO">${RESULT} = {'timer-count': 8, 'timer-interval': 10000, 'wakeups': [64406208, 64416206, 64426206, 64436206, 64446206, 64456206, 64466206, 64476206, 64486206, 64496206, 64506206, 64516206, 64526206, 64536205, 6454...</msg>
<status status="PASS" starttime="20201110 08:36:08.966" endtime="20201110 08:36:08.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:08.981" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:36:08.978" endtime="20201110 08:36:08.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:08.985" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:36:08.983" endtime="20201110 08:36:08.986"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:08.972" endtime="20201110 08:36:08.988"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:08.997" level="INFO">NAME: 8-start-iter</msg>
<status status="PASS" starttime="20201110 08:36:08.995" endtime="20201110 08:36:08.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:09.002" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:36:09.000" endtime="20201110 08:36:09.003"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:08.989" endtime="20201110 08:36:09.004"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:09.014" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201110 08:36:09.012" endtime="20201110 08:36:09.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:09.019" level="INFO">VALUE: 64395909</msg>
<status status="PASS" starttime="20201110 08:36:09.017" endtime="20201110 08:36:09.020"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:09.006" endtime="20201110 08:36:09.021"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:09.031" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:09.029" endtime="20201110 08:36:09.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:09.036" level="INFO">VALUE: [64406208, 64416206, 64426206, 64436206, 64446206, 64456206, 64466206, 64476206, 64486206, 64496206, 64506206, 64516206, 64526206, 64536205, 64546205, 64556206, 64566206, 64576206, 64586205, 64596206, 64606205, 64616206, 64626206, 64636206, 64646206, 64656205, 64666205, 64676206, 64686206, 64696206, 64706206, 64716206, 64726206, 64736206, 64746205, 64756206, 64766206, 64776205, 64786205, 64796206, 64806206, 64816206, 64826206, 64836206, 64846205, 64856206, 64866206, 64876206, 64886205, 64896206, 64906207, 64916206, 64926206, 64936206, 64946206, 64956206, 64966206, 64976206, 64986205, 64996206, 65006205, 65016206, 65026206, 65036206, 65046206, 65056206, 65066206, 65076206, 65086205, 65096205, 65106206, 65116206, 65126206, 65136205, 65146206, 65156206, 65166205, 65176206, 65186207, 65196206, 65206205, 65216206, 65226205, 65236206, 65246205, 65256206, 65266206, 65276206, 65286205, 65296206, 65306206, 65316206, 65326205, 65336206, 65346206, 65356206, 65366206, 65376206, 65386206, 65396206]</msg>
<status status="PASS" starttime="20201110 08:36:09.033" endtime="20201110 08:36:09.037"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:09.022" endtime="20201110 08:36:09.038"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:09.056" endtime="20201110 08:36:09.399"></status>
</kw>
<msg timestamp="20201110 08:36:09.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037017208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047340722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:09.051" endtime="20201110 08:36:09.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:09.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037017208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047340722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:09.407" endtime="20201110 08:36:09.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:09.425" endtime="20201110 08:36:09.429"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:09.044" endtime="20201110 08:36:09.430"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:09.039" endtime="20201110 08:36:09.432"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:09.487" level="INFO">${RESULT} = {'time': [0.037017208, 0.047340722, 0.057361917, 0.067385306, 0.077408819, 0.087436514, 0.097462861, 0.107487472, 0.117512722, 0.127538528, 0.137563, 0.147588139, 0.157613583, 0.167638278, 0.177661347...</msg>
<status status="PASS" starttime="20201110 08:36:09.433" endtime="20201110 08:36:09.487"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:09.497" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201110 08:36:09.495" endtime="20201110 08:36:09.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:09.502" level="INFO">VALUE: 0.037017208</msg>
<status status="PASS" starttime="20201110 08:36:09.500" endtime="20201110 08:36:09.502"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:09.488" endtime="20201110 08:36:09.504"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:09.515" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:09.513" endtime="20201110 08:36:09.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:09.520" level="INFO">VALUE: [0.047340722, 0.057361917, 0.067385306, 0.077408819, 0.087436514, 0.097462861, 0.107487472, 0.117512722, 0.127538528, 0.137563, 0.147588139, 0.157613583, 0.167638278, 0.177661347, 0.187686806, 0.197713486, 0.207738764, 0.217763333, 0.227788361, 0.237815736, 0.247841833, 0.257867736, 0.267892583, 0.277916458, 0.287941097, 0.297964389, 0.307989569, 0.318016278, 0.328042958, 0.338068333, 0.348093694, 0.358117972, 0.368142472, 0.378166819, 0.388191403, 0.398217153, 0.408242333, 0.418266736, 0.428292083, 0.438316653, 0.448340611, 0.458363708, 0.468388264, 0.478412083, 0.488434722, 0.49846175, 0.508487389, 0.518509514, 0.528531139, 0.538553903, 0.548577139, 0.558597653, 0.568620806, 0.578643694, 0.588666806, 0.598689264, 0.608713778, 0.618738292, 0.628762222, 0.638788431, 0.648812931, 0.658838903, 0.668863917, 0.678889514, 0.688916097, 0.698941403, 0.708966597, 0.718991125, 0.72901575, 0.739041333, 0.749067972, 0.759094333, 0.769120431, 0.779146194, 0.789172486, 0.799197014, 0.809220986, 0.819246347, 0.829273375, 0.839297542, 0.849321764, 0.859347431, 0.869371236, 0.879396292, 0.889420889, 0.899447278, 0.909473347, 0.919499056, 0.929523944, 0.939551444, 0.949576597, 0.959600833, 0.969626319, 0.979654236, 0.98968125, 0.999707236, 1.009733278, 1.019758083, 1.029782319, 1.039805847] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:36:09.517" endtime="20201110 08:36:09.520"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:09.505" endtime="20201110 08:36:09.522"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:09.528" endtime="20201110 08:36:09.531"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:09.536" endtime="20201110 08:36:09.558"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:09.532" endtime="20201110 08:36:09.560"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:09.524" endtime="20201110 08:36:09.561"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:06.815" endtime="20201110 08:36:09.562"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:01.296" endtime="20201110 08:36:09.563"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:01.294" endtime="20201110 08:36:09.563"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:36:09.568" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:09.591" endtime="20201110 08:36:11.703"></status>
</kw>
<msg timestamp="20201110 08:36:11.704" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 67145694, 'start-iter': 1, 'wakeups': [67156043, 67166038, 67176039, 6...</msg>
<status status="PASS" starttime="20201110 08:36:09.586" endtime="20201110 08:36:11.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:11.713" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 67145694, 'start-iter': 1, 'wakeups': [67156043, 67166038, 67176039, 6...</msg>
<status status="PASS" starttime="20201110 08:36:11.707" endtime="20201110 08:36:11.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:11.717" endtime="20201110 08:36:11.721"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:09.579" endtime="20201110 08:36:11.723"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:09.574" endtime="20201110 08:36:11.726"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:11.733" level="INFO">${RESULT} = {'timer-count': 9, 'timer-interval': 10000, 'wakeups': [67156043, 67166038, 67176039, 67186039, 67196042, 67206042, 67216039, 67226038, 67236039, 67246038, 67256039, 67266039, 67276042, 67286039, 6729...</msg>
<status status="PASS" starttime="20201110 08:36:11.728" endtime="20201110 08:36:11.733"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:11.745" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:36:11.742" endtime="20201110 08:36:11.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:11.750" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:36:11.747" endtime="20201110 08:36:11.751"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:11.735" endtime="20201110 08:36:11.753"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:11.765" level="INFO">NAME: 9-start-iter</msg>
<status status="PASS" starttime="20201110 08:36:11.763" endtime="20201110 08:36:11.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:11.770" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:36:11.767" endtime="20201110 08:36:11.770"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:11.756" endtime="20201110 08:36:11.772"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:11.782" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201110 08:36:11.780" endtime="20201110 08:36:11.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:11.786" level="INFO">VALUE: 67145694</msg>
<status status="PASS" starttime="20201110 08:36:11.784" endtime="20201110 08:36:11.787"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:11.773" endtime="20201110 08:36:11.789"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:11.798" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:11.796" endtime="20201110 08:36:11.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:11.803" level="INFO">VALUE: [67156043, 67166038, 67176039, 67186039, 67196042, 67206042, 67216039, 67226038, 67236039, 67246038, 67256039, 67266039, 67276042, 67286039, 67296042, 67306038, 67316039, 67326042, 67336039, 67346038, 67356039, 67366039, 67376038, 67386042, 67396038, 67406042, 67416042, 67426039, 67436039, 67446039, 67456038, 67466042, 67476039, 67486038, 67496042, 67506039, 67516038, 67526042, 67536039, 67546038, 67556042, 67566039, 67576039, 67586038, 67596042, 67606039, 67616039, 67626039, 67636039, 67646039, 67656038, 67666038, 67676042, 67686038, 67696039, 67706042, 67716039, 67726042, 67736042, 67746038, 67756039, 67766038, 67776042, 67786039, 67796039, 67806039, 67816040, 67826039, 67836039, 67846038, 67856039, 67866039, 67876039, 67886039, 67896039, 67906039, 67916039, 67926039, 67936039, 67946039, 67956040, 67966039, 67976042, 67986042, 67996039, 68006039, 68016038, 68026038, 68036042, 68046042, 68056039, 68066042, 68076039, 68086038, 68096039, 68106038, 68116039, 68126039, 68136039, 68146039]</msg>
<status status="PASS" starttime="20201110 08:36:11.801" endtime="20201110 08:36:11.804"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:11.790" endtime="20201110 08:36:11.806"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:11.822" endtime="20201110 08:36:12.166"></status>
</kw>
<msg timestamp="20201110 08:36:12.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0451215, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055495361, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:36:11.819" endtime="20201110 08:36:12.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:12.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0451215, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055495361, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:36:12.175" endtime="20201110 08:36:12.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:12.192" endtime="20201110 08:36:12.196"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:11.812" endtime="20201110 08:36:12.198"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:11.807" endtime="20201110 08:36:12.199"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:12.257" level="INFO">${RESULT} = {'time': [0.0451215, 0.055495361, 0.065512875, 0.075536611, 0.085559097, 0.095586222, 0.105609347, 0.115629667, 0.125652528, 0.135676028, 0.145698736, 0.1557235, 0.165747361, 0.175774319, 0.185794958,...</msg>
<status status="PASS" starttime="20201110 08:36:12.201" endtime="20201110 08:36:12.258"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:12.269" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201110 08:36:12.266" endtime="20201110 08:36:12.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:12.273" level="INFO">VALUE: 0.0451215</msg>
<status status="PASS" starttime="20201110 08:36:12.271" endtime="20201110 08:36:12.274"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:12.260" endtime="20201110 08:36:12.276"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:12.287" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:12.285" endtime="20201110 08:36:12.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:12.291" level="INFO">VALUE: [0.055495361, 0.065512875, 0.075536611, 0.085559097, 0.095586222, 0.105609347, 0.115629667, 0.125652528, 0.135676028, 0.145698736, 0.1557235, 0.165747361, 0.175774319, 0.185794958, 0.195821125, 0.205839306, 0.215863917, 0.225890167, 0.235909639, 0.245930278, 0.255952069, 0.265973653, 0.275994903, 0.286019806, 0.296037472, 0.306061889, 0.316082958, 0.326101208, 0.336124375, 0.346147347, 0.356169444, 0.366196181, 0.376216444, 0.38623875, 0.396266764, 0.406287542, 0.416309847, 0.426336833, 0.436356875, 0.446378444, 0.456406667, 0.466427278, 0.476450917, 0.486472972, 0.496500972, 0.506523833, 0.516549333, 0.526573153, 0.536596583, 0.546621431, 0.556645014, 0.566669014, 0.576697403, 0.586717056, 0.596742611, 0.606770569, 0.616791792, 0.626818639, 0.636842222, 0.646861722, 0.656885278, 0.666907556, 0.676936069, 0.686956931, 0.696981167, 0.707004792, 0.71703025, 0.727052931, 0.737076694, 0.74709775, 0.757122431, 0.767145917, 0.777169431, 0.787192389, 0.797216333, 0.807239389, 0.817262556, 0.827284833, 0.837307583, 0.847332222, 0.857359389, 0.867384903, 0.877413542, 0.887437625, 0.897458903, 0.907483764, 0.917507542, 0.927530639, 0.937557806, 0.947580583, 0.957601611, 0.967629153, 0.977650444, 0.987673986, 0.997698792, 1.007721347, 1.017746389, 1.027770347, 1.037794903, 1.047818722] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:36:12.289" endtime="20201110 08:36:12.292"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:12.277" endtime="20201110 08:36:12.294"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:12.300" endtime="20201110 08:36:12.303"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:12.308" endtime="20201110 08:36:12.330"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:12.304" endtime="20201110 08:36:12.332"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:12.296" endtime="20201110 08:36:12.334"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:09.570" endtime="20201110 08:36:12.334"></status>
</kw>
<msg timestamp="20201110 08:36:12.335" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:12.356" endtime="20201110 08:36:14.468"></status>
</kw>
<msg timestamp="20201110 08:36:14.469" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 69904562, 'start-iter': 1, 'wakeups': [69914911, 69924910, 69934907, 6...</msg>
<status status="PASS" starttime="20201110 08:36:12.352" endtime="20201110 08:36:14.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:14.476" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 69904562, 'start-iter': 1, 'wakeups': [69914911, 69924910, 69934907, 6...</msg>
<status status="PASS" starttime="20201110 08:36:14.472" endtime="20201110 08:36:14.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:14.479" endtime="20201110 08:36:14.482"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:12.345" endtime="20201110 08:36:14.484"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:12.340" endtime="20201110 08:36:14.485"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:14.492" level="INFO">${RESULT} = {'timer-count': 9, 'timer-interval': 10000, 'wakeups': [69914911, 69924910, 69934907, 69944910, 69954907, 69964906, 69974908, 69984910, 69994910, 70004906, 70014910, 70024907, 70034910, 70044907, 7005...</msg>
<status status="PASS" starttime="20201110 08:36:14.487" endtime="20201110 08:36:14.492"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:14.502" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:36:14.500" endtime="20201110 08:36:14.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:14.506" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:36:14.504" endtime="20201110 08:36:14.507"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:14.494" endtime="20201110 08:36:14.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:14.520" level="INFO">NAME: 9-start-iter</msg>
<status status="PASS" starttime="20201110 08:36:14.517" endtime="20201110 08:36:14.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:14.526" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:36:14.522" endtime="20201110 08:36:14.527"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:14.511" endtime="20201110 08:36:14.528"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:14.539" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201110 08:36:14.536" endtime="20201110 08:36:14.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:14.543" level="INFO">VALUE: 69904562</msg>
<status status="PASS" starttime="20201110 08:36:14.541" endtime="20201110 08:36:14.544"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:14.530" endtime="20201110 08:36:14.545"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:14.556" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:14.553" endtime="20201110 08:36:14.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:14.561" level="INFO">VALUE: [69914911, 69924910, 69934907, 69944910, 69954907, 69964906, 69974908, 69984910, 69994910, 70004906, 70014910, 70024907, 70034910, 70044907, 70054907, 70064907, 70074907, 70084907, 70094907, 70104907, 70114907, 70124907, 70134907, 70144907, 70154906, 70164907, 70174910, 70184910, 70194907, 70204906, 70214907, 70224906, 70234907, 70244907, 70254908, 70264907, 70274906, 70284906, 70294907, 70304907, 70314907, 70324906, 70334910, 70344906, 70354910, 70364907, 70374910, 70384910, 70394907, 70404906, 70414910, 70424910, 70434907, 70444907, 70454907, 70464910, 70474906, 70484907, 70494906, 70504906, 70514907, 70524907, 70534910, 70544910, 70554907, 70564906, 70574910, 70584907, 70594907, 70604907, 70614906, 70624906, 70634907, 70644907, 70654907, 70664906, 70674906, 70684907, 70694907, 70704906, 70714907, 70724906, 70734907, 70744907, 70754910, 70764907, 70774907, 70784906, 70794910, 70804906, 70814907, 70824907, 70834907, 70844907, 70854910, 70864907, 70874908, 70884910, 70894907, 70904906]</msg>
<status status="PASS" starttime="20201110 08:36:14.558" endtime="20201110 08:36:14.561"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:14.547" endtime="20201110 08:36:14.563"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:14.580" endtime="20201110 08:36:14.938"></status>
</kw>
<msg timestamp="20201110 08:36:14.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038056403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048431236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:14.576" endtime="20201110 08:36:14.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:14.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038056403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048431236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:14.947" endtime="20201110 08:36:14.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:14.965" endtime="20201110 08:36:14.969"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:14.569" endtime="20201110 08:36:14.970"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:14.564" endtime="20201110 08:36:14.972"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:15.028" level="INFO">${RESULT} = {'time': [0.038056403, 0.048431236, 0.058454875, 0.068475889, 0.078501292, 0.088521847, 0.098544583, 0.108570986, 0.118597181, 0.128620458, 0.138639, 0.148665847, 0.158685542, 0.168711972, 0.178732153...</msg>
<status status="PASS" starttime="20201110 08:36:14.973" endtime="20201110 08:36:15.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:15.039" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201110 08:36:15.037" endtime="20201110 08:36:15.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:15.044" level="INFO">VALUE: 0.038056403</msg>
<status status="PASS" starttime="20201110 08:36:15.041" endtime="20201110 08:36:15.046"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:15.030" endtime="20201110 08:36:15.047"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:15.059" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:15.056" endtime="20201110 08:36:15.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:15.064" level="INFO">VALUE: [0.048431236, 0.058454875, 0.068475889, 0.078501292, 0.088521847, 0.098544583, 0.108570986, 0.118597181, 0.128620458, 0.138639, 0.148665847, 0.158685542, 0.168711972, 0.178732153, 0.188755722, 0.198778417, 0.208801111, 0.218823014, 0.228845389, 0.238868292, 0.248891986, 0.25891575, 0.268940292, 0.278963917, 0.288987056, 0.299011361, 0.309037319, 0.319060569, 0.329080861, 0.339103014, 0.349126944, 0.359149028, 0.369174333, 0.379198722, 0.389224319, 0.399246972, 0.409270639, 0.419294306, 0.429319708, 0.439342861, 0.449365347, 0.459387583, 0.469415194, 0.479434181, 0.489459986, 0.49947875, 0.509504306, 0.519526944, 0.529547042, 0.53956825, 0.549595431, 0.559618486, 0.569637722, 0.579660014, 0.5896835, 0.599710069, 0.609729278, 0.619752819, 0.629774222, 0.639796875, 0.649820764, 0.659842736, 0.669867986, 0.679890153, 0.689909917, 0.699931292, 0.709958889, 0.719979014, 0.730002681, 0.74002425, 0.750046347, 0.760069, 0.770092597, 0.780114194, 0.790137736, 0.800161125, 0.810184306, 0.820205528, 0.830227389, 0.840248847, 0.850273708, 0.860297569, 0.870322958, 0.880347069, 0.890374694, 0.900395069, 0.910418333, 0.920441167, 0.930469278, 0.940488125, 0.950513042, 0.960537028, 0.970561792, 0.980586111, 0.990613194, 1.000633028, 1.010657486, 1.020682431, 1.030702222, 1.040723611] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:36:15.062" endtime="20201110 08:36:15.065"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:15.049" endtime="20201110 08:36:15.067"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:15.073" endtime="20201110 08:36:15.076"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:15.081" endtime="20201110 08:36:15.103"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:15.077" endtime="20201110 08:36:15.105"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:15.068" endtime="20201110 08:36:15.107"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:12.336" endtime="20201110 08:36:15.107"></status>
</kw>
<msg timestamp="20201110 08:36:15.108" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:15.129" endtime="20201110 08:36:17.242"></status>
</kw>
<msg timestamp="20201110 08:36:17.244" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 72671693, 'start-iter': 1, 'wakeups': [72682042, 72692038, 72702041, 7...</msg>
<status status="PASS" starttime="20201110 08:36:15.125" endtime="20201110 08:36:17.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:17.250" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 72671693, 'start-iter': 1, 'wakeups': [72682042, 72692038, 72702041, 7...</msg>
<status status="PASS" starttime="20201110 08:36:17.246" endtime="20201110 08:36:17.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:17.253" endtime="20201110 08:36:17.257"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:15.118" endtime="20201110 08:36:17.258"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:15.113" endtime="20201110 08:36:17.260"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:17.266" level="INFO">${RESULT} = {'timer-count': 9, 'timer-interval': 10000, 'wakeups': [72682042, 72692038, 72702041, 72712037, 72722038, 72732037, 72742041, 72752037, 72762041, 72772038, 72782041, 72792038, 72802038, 72812037, 7282...</msg>
<status status="PASS" starttime="20201110 08:36:17.261" endtime="20201110 08:36:17.266"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:17.276" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:36:17.274" endtime="20201110 08:36:17.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:17.281" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:36:17.279" endtime="20201110 08:36:17.282"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:17.268" endtime="20201110 08:36:17.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:17.293" level="INFO">NAME: 9-start-iter</msg>
<status status="PASS" starttime="20201110 08:36:17.291" endtime="20201110 08:36:17.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:17.298" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:36:17.296" endtime="20201110 08:36:17.299"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:17.284" endtime="20201110 08:36:17.300"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:17.311" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201110 08:36:17.308" endtime="20201110 08:36:17.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:17.316" level="INFO">VALUE: 72671693</msg>
<status status="PASS" starttime="20201110 08:36:17.314" endtime="20201110 08:36:17.316"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:17.302" endtime="20201110 08:36:17.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:17.328" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:17.326" endtime="20201110 08:36:17.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:17.333" level="INFO">VALUE: [72682042, 72692038, 72702041, 72712037, 72722038, 72732037, 72742041, 72752037, 72762041, 72772038, 72782041, 72792038, 72802038, 72812037, 72822041, 72832038, 72842041, 72852037, 72862038, 72872038, 72882038, 72892037, 72902038, 72912038, 72922038, 72932037, 72942041, 72952038, 72962038, 72972038, 72982038, 72992041, 73002038, 73012038, 73022037, 73032038, 73042041, 73052038, 73062041, 73072038, 73082038, 73092037, 73102038, 73112037, 73122038, 73132037, 73142039, 73152038, 73162038, 73172037, 73182038, 73192041, 73202041, 73212038, 73222041, 73232041, 73242038, 73252037, 73262037, 73272037, 73282037, 73292038, 73302038, 73312038, 73322041, 73332038, 73342038, 73352038, 73362038, 73372037, 73382038, 73392037, 73402038, 73412038, 73422038, 73432037, 73442039, 73452038, 73462038, 73472038, 73482041, 73492038, 73502038, 73512038, 73522039, 73532038, 73542041, 73552038, 73562041, 73572041, 73582037, 73592041, 73602041, 73612037, 73622038, 73632038, 73642038, 73652038, 73662038, 73672037]</msg>
<status status="PASS" starttime="20201110 08:36:17.331" endtime="20201110 08:36:17.334"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:17.319" endtime="20201110 08:36:17.336"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:17.354" endtime="20201110 08:36:17.713"></status>
</kw>
<msg timestamp="20201110 08:36:17.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038323278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048697528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:17.351" endtime="20201110 08:36:17.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:17.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038323278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048697528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:17.723" endtime="20201110 08:36:17.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:17.740" endtime="20201110 08:36:17.744"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:17.342" endtime="20201110 08:36:17.746"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:17.337" endtime="20201110 08:36:17.747"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:17.805" level="INFO">${RESULT} = {'time': [0.038323278, 0.048697528, 0.058716528, 0.068741208, 0.078759139, 0.088783139, 0.098804, 0.108831194, 0.118849542, 0.128877208, 0.138896611, 0.148923514, 0.158943861, 0.168967181, 0.178989556...</msg>
<status status="PASS" starttime="20201110 08:36:17.749" endtime="20201110 08:36:17.805"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:17.816" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201110 08:36:17.813" endtime="20201110 08:36:17.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:17.820" level="INFO">VALUE: 0.038323278</msg>
<status status="PASS" starttime="20201110 08:36:17.818" endtime="20201110 08:36:17.821"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:17.807" endtime="20201110 08:36:17.822"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:17.834" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:17.831" endtime="20201110 08:36:17.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:17.838" level="INFO">VALUE: [0.048697528, 0.058716528, 0.068741208, 0.078759139, 0.088783139, 0.098804, 0.108831194, 0.118849542, 0.128877208, 0.138896611, 0.148923514, 0.158943861, 0.168967181, 0.178989556, 0.18901775, 0.199036819, 0.209062542, 0.219081306, 0.229105306, 0.239128042, 0.249151236, 0.259172694, 0.269196819, 0.279218472, 0.289240944, 0.299262903, 0.309289458, 0.319308569, 0.329331486, 0.339354, 0.349376792, 0.35940275, 0.369422903, 0.3794455, 0.389467653, 0.399492, 0.409516972, 0.419536778, 0.429562681, 0.439583222, 0.449606667, 0.459628472, 0.469653069, 0.479675056, 0.489700194, 0.499723083, 0.509749569, 0.519772819, 0.52979725, 0.539819861, 0.549845278, 0.559872889, 0.569897972, 0.579918944, 0.589945764, 0.599968167, 0.609988528, 0.620010569, 0.630032708, 0.640054167, 0.650075944, 0.660099319, 0.670121264, 0.680143708, 0.690169667, 0.700189167, 0.710211972, 0.720233847, 0.730256069, 0.740277569, 0.750301792, 0.760322667, 0.770344944, 0.78036625, 0.790388153, 0.800409722, 0.810436153, 0.820458792, 0.830482861, 0.840506847, 0.850533333, 0.86055375, 0.870577514, 0.880601, 0.890625403, 0.900646972, 0.910673333, 0.920692611, 0.930718167, 0.940739694, 0.950758472, 0.960787917, 0.970812306, 0.980832597, 0.990857083, 1.000881458, 1.010905347, 1.020929361, 1.030954014, 1.040977306] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:36:17.836" endtime="20201110 08:36:17.840"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:17.824" endtime="20201110 08:36:17.842"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:17.848" endtime="20201110 08:36:17.851"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:17.856" endtime="20201110 08:36:17.878"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:17.852" endtime="20201110 08:36:17.880"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:17.843" endtime="20201110 08:36:17.882"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:15.109" endtime="20201110 08:36:17.882"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:09.566" endtime="20201110 08:36:17.883"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:09.564" endtime="20201110 08:36:17.883"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:36:17.889" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:17.912" endtime="20201110 08:36:20.026"></status>
</kw>
<msg timestamp="20201110 08:36:20.027" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 75448197, 'start-iter': 1, 'wakeups': [75458591, 75468587, 75478590,...</msg>
<status status="PASS" starttime="20201110 08:36:17.908" endtime="20201110 08:36:20.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:20.034" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 75448197, 'start-iter': 1, 'wakeups': [75458591, 75468587, 75478590,...</msg>
<status status="PASS" starttime="20201110 08:36:20.029" endtime="20201110 08:36:20.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:20.036" endtime="20201110 08:36:20.040"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:17.899" endtime="20201110 08:36:20.042"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:17.894" endtime="20201110 08:36:20.043"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:20.050" level="INFO">${RESULT} = {'timer-count': 10, 'timer-interval': 10000, 'wakeups': [75458591, 75468587, 75478590, 75488587, 75498587, 75508587, 75518587, 75528587, 75538590, 75548587, 75558585, 75568590, 75578590, 75588587, 755...</msg>
<status status="PASS" starttime="20201110 08:36:20.045" endtime="20201110 08:36:20.050"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:20.060" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:36:20.058" endtime="20201110 08:36:20.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:20.064" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:36:20.062" endtime="20201110 08:36:20.065"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.051" endtime="20201110 08:36:20.067"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:20.077" level="INFO">NAME: 10-start-iter</msg>
<status status="PASS" starttime="20201110 08:36:20.075" endtime="20201110 08:36:20.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:20.081" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:36:20.079" endtime="20201110 08:36:20.082"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.068" endtime="20201110 08:36:20.084"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:20.094" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201110 08:36:20.092" endtime="20201110 08:36:20.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:20.098" level="INFO">VALUE: 75448197</msg>
<status status="PASS" starttime="20201110 08:36:20.096" endtime="20201110 08:36:20.099"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.085" endtime="20201110 08:36:20.101"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:20.111" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:20.109" endtime="20201110 08:36:20.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:20.121" level="INFO">VALUE: [75458591, 75468587, 75478590, 75488587, 75498587, 75508587, 75518587, 75528587, 75538590, 75548587, 75558585, 75568590, 75578590, 75588587, 75598587, 75608585, 75618587, 75628585, 75638587, 75648587, 75658587, 75668590, 75678587, 75688590, 75698585, 75708585, 75718587, 75728585, 75738590, 75748585, 75758587, 75768587, 75778587, 75788585, 75798587, 75808587, 75818587, 75828590, 75838587, 75848585, 75858590, 75868587, 75878587, 75888590, 75898587, 75908585, 75918585, 75928587, 75938587, 75948587, 75958587, 75968587, 75978587, 75988590, 75998587, 76008585, 76018590, 76028587, 76038590, 76048587, 76058585, 76068585, 76078587, 76088587, 76098590, 76108585, 76118587, 76128587, 76138588, 76148585, 76158587, 76168587, 76178587, 76188587, 76198590, 76208585, 76218585, 76228587, 76238587, 76248587, 76258585, 76268587, 76278587, 76288587, 76298587, 76308587, 76318587, 76328587, 76338590, 76348590, 76358587, 76368587, 76378590, 76388590, 76398587, 76408585, 76418587, 76428590, 76438590, 76448587]</msg>
<status status="PASS" starttime="20201110 08:36:20.113" endtime="20201110 08:36:20.122"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.102" endtime="20201110 08:36:20.124"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:20.141" endtime="20201110 08:36:20.501"></status>
</kw>
<msg timestamp="20201110 08:36:20.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046367944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.056788542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:20.137" endtime="20201110 08:36:20.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:20.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046367944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.056788542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:20.510" endtime="20201110 08:36:20.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:20.527" endtime="20201110 08:36:20.531"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.130" endtime="20201110 08:36:20.533"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.125" endtime="20201110 08:36:20.534"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:20.591" level="INFO">${RESULT} = {'time': [0.046367944, 0.056788542, 0.066808389, 0.076835583, 0.086856889, 0.096881514, 0.106905875, 0.116930681, 0.126955444, 0.136983167, 0.147005222, 0.15702975, 0.167060181, 0.177084931, 0.1871065...</msg>
<status status="PASS" starttime="20201110 08:36:20.536" endtime="20201110 08:36:20.592"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:20.602" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201110 08:36:20.600" endtime="20201110 08:36:20.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:20.607" level="INFO">VALUE: 0.046367944</msg>
<status status="PASS" starttime="20201110 08:36:20.604" endtime="20201110 08:36:20.607"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.593" endtime="20201110 08:36:20.609"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:20.620" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:20.618" endtime="20201110 08:36:20.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:20.625" level="INFO">VALUE: [0.056788542, 0.066808389, 0.076835583, 0.086856889, 0.096881514, 0.106905875, 0.116930681, 0.126955444, 0.136983167, 0.147005222, 0.15702975, 0.167060181, 0.177084931, 0.187106542, 0.197131347, 0.2071535, 0.217179722, 0.227202, 0.237228236, 0.247251889, 0.257276778, 0.267303681, 0.277324694, 0.287351153, 0.297370194, 0.307395042, 0.317421819, 0.327444986, 0.337474667, 0.347494236, 0.357521431, 0.367545944, 0.377571347, 0.387594236, 0.397620792, 0.407645931, 0.417671583, 0.427700722, 0.437723681, 0.447746569, 0.457776889, 0.467799, 0.477824667, 0.487852361, 0.497874, 0.507897153, 0.517921625, 0.527947806, 0.537972319, 0.547995986, 0.558018917, 0.568041458, 0.578065208, 0.588091903, 0.598112125, 0.608132722, 0.618161083, 0.628181986, 0.638208722, 0.648228917, 0.658251458, 0.668276597, 0.67830325, 0.688327861, 0.698356236, 0.708375792, 0.718402625, 0.728426167, 0.738452111, 0.748472875, 0.758498361, 0.768522681, 0.778547569, 0.788572319, 0.798601681, 0.808622208, 0.818646986, 0.828672306, 0.838696514, 0.848719958, 0.858742958, 0.868769486, 0.878793764, 0.888817792, 0.898840986, 0.908864375, 0.918889292, 0.928913069, 0.938940278, 0.94896525, 0.958988139, 0.969013514, 0.979041514, 0.98906675, 0.999088444, 1.009112278, 1.019139389, 1.029167472, 1.039192875, 1.049215889] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:36:20.623" endtime="20201110 08:36:20.626"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.610" endtime="20201110 08:36:20.627"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:20.634" endtime="20201110 08:36:20.637"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:20.642" endtime="20201110 08:36:20.664"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.638" endtime="20201110 08:36:20.666"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.629" endtime="20201110 08:36:20.668"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:17.890" endtime="20201110 08:36:20.669"></status>
</kw>
<msg timestamp="20201110 08:36:20.669" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:20.691" endtime="20201110 08:36:22.804"></status>
</kw>
<msg timestamp="20201110 08:36:22.806" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 78220351, 'start-iter': 1, 'wakeups': [78230743, 78240741, 78250744,...</msg>
<status status="PASS" starttime="20201110 08:36:20.687" endtime="20201110 08:36:22.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:22.813" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 78220351, 'start-iter': 1, 'wakeups': [78230743, 78240741, 78250744,...</msg>
<status status="PASS" starttime="20201110 08:36:22.808" endtime="20201110 08:36:22.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:22.815" endtime="20201110 08:36:22.819"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.680" endtime="20201110 08:36:22.820"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.674" endtime="20201110 08:36:22.822"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:22.828" level="INFO">${RESULT} = {'timer-count': 10, 'timer-interval': 10000, 'wakeups': [78230743, 78240741, 78250744, 78260741, 78270741, 78280744, 78290741, 78300739, 78310739, 78320744, 78330744, 78340741, 78350744, 78360739, 783...</msg>
<status status="PASS" starttime="20201110 08:36:22.824" endtime="20201110 08:36:22.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:22.838" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:36:22.836" endtime="20201110 08:36:22.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:22.843" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:36:22.841" endtime="20201110 08:36:22.844"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:22.830" endtime="20201110 08:36:22.845"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:22.856" level="INFO">NAME: 10-start-iter</msg>
<status status="PASS" starttime="20201110 08:36:22.853" endtime="20201110 08:36:22.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:22.860" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:36:22.858" endtime="20201110 08:36:22.861"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:22.847" endtime="20201110 08:36:22.862"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:22.875" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201110 08:36:22.872" endtime="20201110 08:36:22.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:22.880" level="INFO">VALUE: 78220351</msg>
<status status="PASS" starttime="20201110 08:36:22.877" endtime="20201110 08:36:22.881"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:22.864" endtime="20201110 08:36:22.882"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:22.893" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:22.891" endtime="20201110 08:36:22.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:22.898" level="INFO">VALUE: [78230743, 78240741, 78250744, 78260741, 78270741, 78280744, 78290741, 78300739, 78310739, 78320744, 78330744, 78340741, 78350744, 78360739, 78370741, 78380741, 78390741, 78400739, 78410741, 78420741, 78430741, 78440744, 78450744, 78460739, 78470741, 78480744, 78490741, 78500741, 78510744, 78520744, 78530741, 78540744, 78550744, 78560741, 78570741, 78580739, 78590744, 78600741, 78610741, 78620739, 78630741, 78640744, 78650741, 78660741, 78670741, 78680741, 78690741, 78700741, 78710741, 78720741, 78730741, 78740741, 78750741, 78760741, 78770744, 78780741, 78790744, 78800741, 78810744, 78820741, 78830741, 78840744, 78850741, 78860741, 78870741, 78880741, 78890741, 78900739, 78910741, 78920741, 78930741, 78940739, 78950744, 78960741, 78970739, 78980741, 78990741, 79000739, 79010741, 79020741, 79030741, 79040744, 79050741, 79060741, 79070741, 79080741, 79090741, 79100741, 79110741, 79120741, 79130741, 79140739, 79150741, 79160741, 79170744, 79180741, 79190744, 79200741, 79210741, 79220741]</msg>
<status status="PASS" starttime="20201110 08:36:22.895" endtime="20201110 08:36:22.899"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:22.884" endtime="20201110 08:36:22.901"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:22.919" endtime="20201110 08:36:23.277"></status>
</kw>
<msg timestamp="20201110 08:36:23.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039234403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049652583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:22.915" endtime="20201110 08:36:23.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:23.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039234403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049652583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:23.286" endtime="20201110 08:36:23.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:23.303" endtime="20201110 08:36:23.307"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:22.908" endtime="20201110 08:36:23.309"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:22.902" endtime="20201110 08:36:23.310"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:23.366" level="INFO">${RESULT} = {'time': [0.039234403, 0.049652583, 0.059675139, 0.069702819, 0.079724778, 0.089748847, 0.099776222, 0.109797694, 0.119819042, 0.129843625, 0.139873306, 0.149898444, 0.159918833, 0.169946389, 0.179965...</msg>
<status status="PASS" starttime="20201110 08:36:23.312" endtime="20201110 08:36:23.367"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:23.377" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201110 08:36:23.375" endtime="20201110 08:36:23.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:23.382" level="INFO">VALUE: 0.039234403</msg>
<status status="PASS" starttime="20201110 08:36:23.380" endtime="20201110 08:36:23.383"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.368" endtime="20201110 08:36:23.384"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:23.396" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:23.393" endtime="20201110 08:36:23.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:23.403" level="INFO">VALUE: [0.049652583, 0.059675139, 0.069702819, 0.079724778, 0.089748847, 0.099776222, 0.109797694, 0.119819042, 0.129843625, 0.139873306, 0.149898444, 0.159918833, 0.169946389, 0.179965889, 0.189993972, 0.200018792, 0.210043528, 0.220066333, 0.230093917, 0.240118444, 0.250143069, 0.260169403, 0.270192125, 0.280210153, 0.290235528, 0.300261903, 0.310282514, 0.320306056, 0.33033425, 0.340358597, 0.350379514, 0.360406931, 0.370431125, 0.380452056, 0.390475653, 0.400497472, 0.410526958, 0.420547764, 0.430572819, 0.440594625, 0.450621736, 0.460650444, 0.470673194, 0.480699111, 0.490725792, 0.500753056, 0.510778431, 0.520803667, 0.530829958, 0.540855708, 0.550881361, 0.560907625, 0.570933972, 0.580960694, 0.590989569, 0.601012528, 0.611040931, 0.621062875, 0.631091667, 0.641114375, 0.651140986, 0.661168806, 0.671191306, 0.681216722, 0.691243444, 0.701267917, 0.711293139, 0.721317153, 0.731345792, 0.741372764, 0.751399375, 0.761422375, 0.771452292, 0.781474639, 0.791497528, 0.801524, 0.811549361, 0.82157225, 0.831599431, 0.841623931, 0.851649556, 0.861677847, 0.871700111, 0.881725278, 0.891751167, 0.901775486, 0.911799792, 0.921824403, 0.931850153, 0.941876097, 0.951901417, 0.961924347, 0.971951583, 0.981976278, 0.992003917, 1.002025806, 1.012053889, 1.022075889, 1.032100819, 1.042126056] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:36:23.398" endtime="20201110 08:36:23.404"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.386" endtime="20201110 08:36:23.405"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:23.412" endtime="20201110 08:36:23.415"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:23.420" endtime="20201110 08:36:23.442"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.416" endtime="20201110 08:36:23.444"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.407" endtime="20201110 08:36:23.445"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.671" endtime="20201110 08:36:23.446"></status>
</kw>
<msg timestamp="20201110 08:36:23.446" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:23.468" endtime="20201110 08:36:25.581"></status>
</kw>
<msg timestamp="20201110 08:36:25.583" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 80990933, 'start-iter': 1, 'wakeups': [81001325, 81011323, 81021326,...</msg>
<status status="PASS" starttime="20201110 08:36:23.464" endtime="20201110 08:36:25.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:25.599" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 80990933, 'start-iter': 1, 'wakeups': [81001325, 81011323, 81021326,...</msg>
<status status="PASS" starttime="20201110 08:36:25.594" endtime="20201110 08:36:25.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:25.601" endtime="20201110 08:36:25.605"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.457" endtime="20201110 08:36:25.607"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.452" endtime="20201110 08:36:25.608"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:25.615" level="INFO">${RESULT} = {'timer-count': 10, 'timer-interval': 10000, 'wakeups': [81001325, 81011323, 81021326, 81031323, 81041323, 81051321, 81061323, 81071321, 81081321, 81091323, 81101323, 81111323, 81121321, 81131321, 811...</msg>
<status status="PASS" starttime="20201110 08:36:25.610" endtime="20201110 08:36:25.615"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:25.625" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:36:25.623" endtime="20201110 08:36:25.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:25.630" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:36:25.627" endtime="20201110 08:36:25.630"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:25.616" endtime="20201110 08:36:25.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:25.642" level="INFO">NAME: 10-start-iter</msg>
<status status="PASS" starttime="20201110 08:36:25.640" endtime="20201110 08:36:25.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:25.646" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:36:25.644" endtime="20201110 08:36:25.647"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:25.633" endtime="20201110 08:36:25.649"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:25.659" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201110 08:36:25.657" endtime="20201110 08:36:25.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:25.664" level="INFO">VALUE: 80990933</msg>
<status status="PASS" starttime="20201110 08:36:25.662" endtime="20201110 08:36:25.664"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:25.650" endtime="20201110 08:36:25.666"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:25.676" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:25.674" endtime="20201110 08:36:25.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:25.681" level="INFO">VALUE: [81001325, 81011323, 81021326, 81031323, 81041323, 81051321, 81061323, 81071321, 81081321, 81091323, 81101323, 81111323, 81121321, 81131321, 81141324, 81151323, 81161326, 81171321, 81181321, 81191323, 81201326, 81211323, 81221326, 81231323, 81241323, 81251321, 81261326, 81271323, 81281321, 81291323, 81301321, 81311323, 81321321, 81331323, 81341323, 81351323, 81361323, 81371321, 81381323, 81391323, 81401324, 81411323, 81421323, 81431323, 81441323, 81451323, 81461326, 81471321, 81481323, 81491326, 81501326, 81511323, 81521321, 81531326, 81541323, 81551326, 81561323, 81571323, 81581323, 81591323, 81601323, 81611326, 81621326, 81631323, 81641323, 81651323, 81661321, 81671321, 81681323, 81691321, 81701326, 81711323, 81721323, 81731321, 81741323, 81751323, 81761323, 81771323, 81781321, 81791321, 81801323, 81811323, 81821323, 81831326, 81841326, 81851326, 81861323, 81871326, 81881326, 81891323, 81901324, 81911321, 81921326, 81931323, 81941326, 81951323, 81961323, 81971323, 81981323, 81991326]</msg>
<status status="PASS" starttime="20201110 08:36:25.679" endtime="20201110 08:36:25.682"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:25.667" endtime="20201110 08:36:25.684"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:25.701" endtime="20201110 08:36:26.060"></status>
</kw>
<msg timestamp="20201110 08:36:26.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038428806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048847917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:25.697" endtime="20201110 08:36:26.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:26.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038428806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048847917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:26.069" endtime="20201110 08:36:26.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:26.087" endtime="20201110 08:36:26.091"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:25.690" endtime="20201110 08:36:26.093"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:25.685" endtime="20201110 08:36:26.094"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:26.150" level="INFO">${RESULT} = {'time': [0.038428806, 0.048847917, 0.058870903, 0.068899222, 0.078920875, 0.088946681, 0.098968764, 0.108994597, 0.119015639, 0.129041306, 0.139068319, 0.149092611, 0.159117028, 0.169139653, 0.179162...</msg>
<status status="PASS" starttime="20201110 08:36:26.096" endtime="20201110 08:36:26.151"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:26.161" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201110 08:36:26.159" endtime="20201110 08:36:26.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:26.166" level="INFO">VALUE: 0.038428806</msg>
<status status="PASS" starttime="20201110 08:36:26.164" endtime="20201110 08:36:26.167"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.152" endtime="20201110 08:36:26.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:26.179" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:26.177" endtime="20201110 08:36:26.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:26.184" level="INFO">VALUE: [0.048847917, 0.058870903, 0.068899222, 0.078920875, 0.088946681, 0.098968764, 0.108994597, 0.119015639, 0.129041306, 0.139068319, 0.149092611, 0.159117028, 0.169139653, 0.179162528, 0.189188681, 0.199210278, 0.209237222, 0.219256194, 0.229279972, 0.239307653, 0.2493365, 0.259358222, 0.269386306, 0.279407958, 0.289431431, 0.299452847, 0.309481278, 0.319500806, 0.329522167, 0.339547597, 0.349569375, 0.359594375, 0.369615917, 0.379640653, 0.389663764, 0.399687292, 0.409711181, 0.419732167, 0.429758042, 0.439780611, 0.449805403, 0.459827528, 0.469851167, 0.479874667, 0.489899681, 0.499924028, 0.509950153, 0.519967708, 0.529992028, 0.540018278, 0.550041958, 0.560061736, 0.570083069, 0.580111014, 0.590131708, 0.600157625, 0.610177375, 0.620200139, 0.6302235, 0.640246, 0.650269, 0.660295319, 0.670319236, 0.680339528, 0.690363208, 0.700386194, 0.710406444, 0.720428958, 0.730453764, 0.740474986, 0.75050325, 0.760523847, 0.770547556, 0.780569694, 0.790594792, 0.800617917, 0.810641972, 0.820665125, 0.830686056, 0.840708764, 0.850734403, 0.860757875, 0.870783069, 0.880810639, 0.890834972, 0.900858764, 0.910880722, 0.920908264, 0.930934403, 0.940955847, 0.950981083, 0.961002333, 0.971032708, 0.981053514, 0.991080597, 1.001101403, 1.011125611, 1.021148458, 1.031172097, 1.041198889] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:36:26.182" endtime="20201110 08:36:26.185"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.169" endtime="20201110 08:36:26.186"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:26.193" endtime="20201110 08:36:26.196"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:26.201" endtime="20201110 08:36:26.223"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.197" endtime="20201110 08:36:26.225"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.188" endtime="20201110 08:36:26.227"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.448" endtime="20201110 08:36:26.227"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:17.886" endtime="20201110 08:36:26.228"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:17.884" endtime="20201110 08:36:26.228"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.925" endtime="20201110 08:36:26.229"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201110 08:35:02.802" endtime="20201110 08:36:26.230" critical="yes"></status>
</test>
<status status="PASS" starttime="20201110 08:35:00.262" endtime="20201110 08:36:26.238"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">samr21-xpro</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201110 08:32:28.022" endtime="20201110 08:36:26.279"></status>
</suite>
<statistics>
<total>
<stat pass="12" fail="0">Critical Tests</stat>
<stat pass="12" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="12" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="12" fail="0">BOARD_samr21-xpro</stat>
<stat pass="2" fail="0">dev</stat>
</tag>
<suite>
<stat pass="12" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="8" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="1" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
